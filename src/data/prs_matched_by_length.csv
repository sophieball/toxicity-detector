thread_id,created_at,thread_label,_id,text,training,label,rounds,shepherd_time
bower_____bower_____1748,2015-03-21T13:56:41Z,True,bower_____bower_____1748_____31671590,"Based on https://github.com/bower/bower/pull/1592

---
- bower.lock doesn't exist:
  - [x] bower install creates bower.lock file only after all-successful non-production installation
  - [x] bower install --production complains there's no bower.lock and exits
  - [x] bower update acts as bower install
- bower.lock exists dependenies in bower.json match those on bower.lock
  - [x] bower install installs exact packages from bower.lock
  - [x] bower install --production installs exact packages from bower.lock ignoring devDependencies
  - [x] bower update is no-op
  - [x] if installation would change bower.lock, it fails with error message
- bower.lock exists and there are only extra dependencies in bower.json relative to bower.lock
  - [x] bower install tries to install bower.lock with only new packages from bower.json added. Installation fails if old bower.lock is not a subset of new bower.lock.
  - [x] bower install --production fails
  - [x] bower update --all re-creates bower.lock
- bower.lock` exists and dependencies in bower.json changed relative to bower.lock
  - [x] bower install fails, and says you need to bower update <package> first
  - [x] bower install --production fails
  - [x] bower update complains there's no package specified to update
  - [x] bower update --all re-creates bower.lock
  - [x] bower update <package> tries to install bower.lock with <package> version replaced with version from bower.json. Installation fails if old bower.lock is not a subset of new bower.lock (except updated package).
",True,True,89,1588333.85
bower_____bower_____1748,2015-03-25T15:30:04Z,True,bower_____bower_____1748_____86082671,"@sheerun - So, when running `bower update` and nothing has yet to be installed, should a lock file be required as at that point it really acts like `bower install`?",True,True,89,1588333.85
bower_____bower_____1748,2015-03-26T13:56:07Z,True,bower_____bower_____1748_____86522789,@sheerun bump for the question above... :smile: ,True,True,89,1588333.85
bower_____bower_____1748,2015-03-27T01:43:27Z,True,bower_____bower_____1748_____86785781,"@kodypeterson Sorry for the delay. Yes, indeed it should do the same as `bower install` :)",True,True,89,1588333.85
bower_____bower_____1748,2015-03-30T19:23:56Z,True,bower_____bower_____1748_____87798884,"@sheerun any thoughts on the lock file being .bower.lock instead of bower.lock?

Just wondering if we really want to make it a non-dot file...",True,True,89,1588333.85
bower_____bower_____1748,2015-03-30T19:30:09Z,True,bower_____bower_____1748_____87800340,"Also, I noticed that most of the update tests are invalid as they call tempDir.prepare({JSON}) after the install. Which .prepare will remove all of the contents in the directory.

So, when update runs, it is running against an empty directory with no dependencies installed, so it just acts like `bower install` :frowning: ",True,True,89,1588333.85
bower_____bower_____1748,2015-03-30T20:05:46Z,True,bower_____bower_____1748_____87811865,"How should bower link be handled, it in turn calls bower update? Should it follow the same rules as bower update?",True,True,89,1588333.85
bower_____bower_____1748,2015-03-30T20:41:37Z,True,bower_____bower_____1748_____87825661,"`bower link` is totally separate thing. It just creates a symlink to some other directory.

I think we don't need to worry about it.",True,True,89,1588333.85
bower_____bower_____1748,2015-03-31T14:14:35Z,True,bower_____bower_____1748_____88103325,"@sheerun  Are you sure? :smile: 

https://github.com/bower/bower/blob/master/lib/commands/link.js#L62",True,True,89,1588333.85
bower_____bower_____1748,2015-03-31T17:41:08Z,True,bower_____bower_____1748_____88183496,Huh. I'm not sure if it's necessary. Maybe we should check what NPM does..,True,True,89,1588333.85
bower_____bower_____1748,2015-03-31T18:20:43Z,True,bower_____bower_____1748_____88196768,"@sheerun - It seems it runs an install https://github.com/npm/npm/blob/master/lib/link.js#L134

For now, I have left it as is. Allowing it to run update and allowing the update to run without allowing it to make changes to the lockfile. Your call on if that is correct.",True,True,89,1588333.85
bower_____bower_____1748,2015-03-31T18:26:16Z,True,bower_____bower_____1748_____88198175,"I think most reasonable is to just call install, instead of of update.
Install doesn't change lockfile by default.

On Tue, Mar 31, 2015 at 11:20 AM, Kody J. Peterson <notifications@github.com
> wrote:

> @sheerun <https://github.com/sheerun> - It seems it runs an install
> https://github.com/npm/npm/blob/master/lib/link.js#L134
>
> For now, I have left it as is. Allowing it to run update and allowing the
> update to run without allowing it to make changes to the lockfile. Your
> call on if that is correct.
>
> —
> Reply to this email directly or view it on GitHub
> <https://github.com/bower/bower/pull/1748#issuecomment-88196768>.
>
",True,True,89,1588333.85
bower_____bower_____1748,2015-03-31T19:42:17Z,True,bower_____bower_____1748_____88222583,"Alright, I think I have everything covered here :smile: 

Time for some regression testing? :smile: 

Not sure why there is a -0.12% decrease in code coverage.... Do I need to add more tests or is this going to be ok?",True,True,89,1588333.85
bower_____bower_____1748,2015-03-31T20:30:30Z,True,bower_____bower_____1748_____88234827,"Yeah, I think we need some more tests and peer review on this. I'll try to review it soon.

Could you squash the commits in meaningful pieces?

What about ""if installation would change bower.lock, it fails with error message""? This one is actually pretty important as it ensures that production builds are reproducible. For example it should fail when someone changes the commit behind a tag on GitHub.",True,True,89,1588333.85
bower_____bower_____1748,2015-03-31T20:35:22Z,True,bower_____bower_____1748_____88236441,"Ah! That is what that means. I will add that functionality, no problem!

I will also add more tests somehow..... Most of the lockfile logic is tested... I will see what else I can add.",True,True,89,1588333.85
bower_____bower_____1748,2015-03-31T21:15:13Z,True,bower_____bower_____1748_____88252502,@kodypeterson why not use a lock module instead? See: https://github.com/IndigoUnited/node-proper-lockfile and https://www.npmjs.com/package/lockfile,True,True,89,1588333.85
bower_____bower_____1748,2015-03-31T21:19:08Z,True,bower_____bower_____1748_____88254020,@satazor At first glance it seems that module is for locking a specific file... That is not really what we are trying to accomplish... Am I wrong in what that module does?,True,True,89,1588333.85
bower_____bower_____1748,2015-03-31T21:26:00Z,True,bower_____bower_____1748_____88255276,"Both modules work by locking a file yes, but isn't what your doing? You are creating a bower.lock to lock down a project. Your lock file strategy is using .writeFile which isn't atomic. What I'm saying is that file locking is not an easy matter and it should be delegated to more mature modules such as those two that I mentioned.",True,True,89,1588333.85
bower_____bower_____1748,2015-03-31T21:27:50Z,True,bower_____bower_____1748_____88255608,@satazor We are locking down versions of libraries you are using. We want to be sure that when installing that you are always installing the same versions of dependencies and such that you did when you were developing locally. We are creating a very similar feature to NPM's shrinkwrap.,True,True,89,1588333.85
bower_____bower_____1748,2015-03-31T21:29:36Z,True,bower_____bower_____1748_____88255999,Oh I totally misunderstood this then. Just ignore me. ,True,True,89,1588333.85
bower_____bower_____1748,2015-04-29T16:04:22Z,True,bower_____bower_____1748_____97481523,@sheerun - I am working on adding that last feature and a few more tests. Also removing all console logs!!! I have found that I am really good at leaving those in. Hopefully we should be ready to really test this guy out and get it shipped! :smile: ,True,True,89,1588333.85
bower_____bower_____1748,2015-05-17T14:35:40Z,True,bower_____bower_____1748_____102809152,:+1: ,True,True,89,1588333.85
bower_____bower_____1748,2015-05-22T08:38:40Z,True,bower_____bower_____1748_____104571863,"This is great, thanks for all your hard work on this. Looking forward to seeing it implemented.",True,True,89,1588333.85
bower_____bower_____1748,2015-05-26T22:08:11Z,True,bower_____bower_____1748_____105681805,@sheerun - I think we are all good here! :smile: 2 months later ;),True,True,89,1588333.85
bower_____bower_____1748,2015-06-02T17:29:51Z,True,bower_____bower_____1748_____108024212,@sheerun - bump ^^,True,True,89,1588333.85
bower_____bower_____1748,2015-06-02T18:09:01Z,True,bower_____bower_____1748_____108036459,"I'm pretty busy these days, but I'll try to review soon",True,True,89,1588333.85
bower_____bower_____1748,2015-06-02T18:09:12Z,True,bower_____bower_____1748_____108036506,Or maybe someone else can? :),True,True,89,1588333.85
bower_____bower_____1748,2015-06-05T08:44:31Z,True,bower_____bower_____1748_____109205086,":+1:
",True,True,89,1588333.85
bower_____bower_____1748,2015-06-09T22:45:48Z,True,bower_____bower_____1748_____110525750,"I would like to point out the discussion on the bundler github - https://github.com/bundler/bundler/issues/694 - that they're moving away from the .lock suffix and it's probably worth considering following suit, as it's always clashed with old *NIX conventions.
",True,True,89,1588333.85
bower_____bower_____1748,2015-06-22T19:16:26Z,True,bower_____bower_____1748_____114225298,Any reason this hasnt been merged yet?,True,True,89,1588333.85
bower_____bower_____1748,2015-06-22T19:21:54Z,True,bower_____bower_____1748_____114226614,@aequasi No one has had time to review it :disappointed: @sheerun anyone you can get to review this?,True,True,89,1588333.85
bower_____bower_____1748,2015-06-22T23:08:12Z,True,bower_____bower_____1748_____114297051,"Not at least until 1st July.. Sorry.
",True,True,89,1588333.85
bower_____bower_____1748,2015-07-13T09:07:10Z,True,bower_____bower_____1748_____120859308,ping? already July13!,True,True,89,1588333.85
bower_____bower_____1748,2015-07-13T23:17:10Z,True,bower_____bower_____1748_____121088036,"Currently I'm working on deploying pluggable resolvers feature. If someone has time to review this, please do it.",True,True,89,1588333.85
bower_____bower_____1748,2015-07-15T23:00:38Z,True,bower_____bower_____1748_____121772134,@sheerun hacked?,True,True,89,1588333.85
prometheus/alertmanager/102,2015-07-24T23:49:09Z,False,55db66a31b4876661401f5ae,Thanks! :+1: ,True,False,1,0.0
hazelcast/hazelcast/5788,2015-08-02T06:40:24Z,False,55dbdde51b487661f3000e7a,verify,True,False,10,44014.2
palantir/plottable/2537,2015-08-04T08:01:12Z,False,55e4a2801b4876167f00332d,Can you please explain why you're drawing an ArcOutline on top of the `Plots.Pie`?  This seems incredibly odd that we need to run to `Drawer` for this answer,True,False,13,23774.583333333332
palantir/plottable/2537,2015-08-04T19:04:52Z,False,55e4a2801b4876167f00332e,"Split the `ArcOutline` `Drawer` into its own file, and I think that should be it.",True,False,13,23774.583333333332
bower_____bower_____1748,2015-08-04T19:09:00Z,True,bower_____bower_____1748_____127723679,"+1 on this

This is holding us up too and we have a hack to get around it.
",True,True,89,1588333.85
palantir/plottable/2537,2015-08-05T17:38:01Z,False,55c82d281b48764f930012cb,"Repro focusing on new CSS classes: http://jsfiddle.net/249fe23e/
@crmorford, can you weigh in on the CSS class names? (""fill"", ""outline"").",True,False,13,23774.583333333332
palantir/plottable/2537,2015-08-05T18:05:23Z,False,55c88dcd1b4876580b001641,http://jsfiddle.net/v0b2ur4L/,True,False,13,23774.583333333332
palantir/plottable/2537,2015-08-05T18:23:23Z,False,55c8d4901b48764fdf0017b9,"Is there a way to get all the centers looking the same?

![](https://hipchat.palantir.com/files/1/1841/20HCZn8hM65QQU8/Screen%20Shot%202015-08-05%20at%2011.07.05%20AM.png)

vs 

![](https://hipchat.palantir.com/files/1/1841/i3Jnu1OZy8FYPDD/Screen%20Shot%202015-08-05%20at%2011.12.30%20AM.png)

",True,False,13,23774.583333333332
palantir/plottable/2537,2015-08-05T18:24:35Z,False,55c8d57c1b48765111000736,"I also predict slate being unhappy with the way multi select looks :( 
http://jsfiddle.net/v0b2ur4L/3/
it doesn't seem predictable which colors are going to overlap which other colors.",True,False,13,23774.583333333332
palantir/plottable/2537,2015-08-05T18:27:03Z,False,55c8e2401b48764fc50016f4,"Slate says the overlap would be better if the z-ordering was based on click order. it would feel more intuitive that way.

I know this is just CSS right now though :/ not sure if that's possible.",True,False,13,23774.583333333332
palantir/plottable/2537,2015-08-05T18:40:20Z,False,55c91a591b4876580b001e28,"Talked to Christina -- she said ideally, the stroke would be on the inside of each pie slice. I didn't think SVG allowed that so we looked it up... sounds like it might be in the works? http://stackoverflow.com/questions/7241393/can-you-control-how-an-svgs-stroke-width-is-drawn

We might be able to do this not entirely in css, because we have to have click-ordering matches z-ordering (for now). Then we can watch for SVG2 and use the inner-stroke when it comes out. https://svgwg.org/specs/strokes/#SpecifyingStrokeAlignment",True,False,13,23774.583333333332
hazelcast/hazelcast/5788,2015-08-09T12:44:39Z,False,55dbdde51b487661f3000e7b,@pveentjer can you rebase?,True,False,10,44014.2
hazelcast/hazelcast/5788,2015-08-09T13:29:28Z,False,55dbdde51b487661f3000e7c,Joy.. merge hell.,True,False,10,44014.2
hazelcast/hazelcast/5788,2015-08-09T13:30:05Z,False,55dbdde51b487661f3000e7d,I'll merge this PR myself once this PR builder is green. It sucks that this thing is already waiting for 2 weeks to get merged.,True,False,10,44014.2
hazelcast/hazelcast/5788,2015-08-09T19:27:08Z,False,55dbdde51b487661f3000e7e,verify,True,False,10,44014.2
hazelcast/hazelcast/5788,2015-08-11T08:07:45Z,False,55dbdde51b487661f3000e7f,verify,True,False,10,44014.2
hazelcast/hazelcast/5788,2015-08-12T13:31:04Z,False,55dbdde51b487661f3000e80,verify-parallel,True,False,10,44014.2
hazelcast/hazelcast/5788,2015-08-12T15:00:27Z,False,55dbdde51b487661f3000e81,"A test failure, probably unrelated: `NearCacheTest.testGetAllIssue1863:388 expected:<0> but was:<504>`",True,False,10,44014.2
hazelcast/hazelcast/5788,2015-08-12T15:00:32Z,False,55dbdde51b487661f3000e82,verify-parallel,True,False,10,44014.2
palantir/plottable/2537,2015-08-17T21:51:33Z,False,55e4a2801b4876167f00332f,"talked to Natasha offline, and she said the current implementation works fine with their current design
drawing stroke inside of each pie slice might be an issue if user updates stroke's property via css as we do not re-render upon css changes
I will look into the linejoin issue in the center tho",True,False,13,23774.583333333332
palantir/plottable/2537,2015-08-17T22:28:19Z,False,55e4a2801b4876167f003330,"I set the linejoin to ""round"" because I think it looks best with single select and multi-select
Let me know if anyone feels it makes more sense to set it to something else

- round
![screen shot 2015-08-17 at 3 08 58 pm](https://cloud.githubusercontent.com/assets/1817638/9317730/6c3de8ae-44f2-11e5-990e-4fe2cb1d2e6d.png) ![screen shot 2015-08-17 at 3 09 47 pm](https://cloud.githubusercontent.com/assets/1817638/9317731/6ecc731a-44f2-11e5-9cb5-207ce26d4008.png)

- miter
![screen shot 2015-08-17 at 3 09 27 pm](https://cloud.githubusercontent.com/assets/1817638/9317740/79a513a0-44f2-11e5-9c7a-c2409c2b07d8.png) ![screen shot 2015-08-17 at 3 09 32 pm](https://cloud.githubusercontent.com/assets/1817638/9317744/7ddda37e-44f2-11e5-8e71-217485a2efc3.png)

- bevel
![screen shot 2015-08-17 at 3 09 54 pm](https://cloud.githubusercontent.com/assets/1817638/9317748/82ad44ae-44f2-11e5-9078-e51014449aa2.png) ![screen shot 2015-08-17 at 3 09 57 pm](https://cloud.githubusercontent.com/assets/1817638/9317752/848d91d4-44f2-11e5-8b40-a89e23a3a311.png)

",True,False,13,23774.583333333332
palantir/plottable/2537,2015-08-17T23:11:46Z,False,55e4a2801b4876167f003331,Can you also add a test that verifies that `entities()` returns `Entities` whose `selection` includes both the fill and the stroke `<path>`s?,True,False,13,23774.583333333332
palantir/plottable/2537,2015-08-19T17:45:45Z,False,55e4a2801b4876167f003332,"http://jsfiddle.net/g5spysum/10/
Gonna ask Sara to look at this and see what she thinks. Center looks good to me though!",True,False,13,23774.583333333332
palantir/plottable/2537,2015-08-20T20:15:47Z,False,55e4a2801b4876167f003333,"following slate talk, giving +1
",True,False,13,23774.583333333332
apiaryio/apiary-client/94,2015-08-21T00:43:18Z,False,55ef8abe1b48761c2602d747,"I don't think the circleci check failure is my fault. I can't verify this locally, because:

```
> apiary fetch --api-name apiaryclienttest
Apiary service responded with an error: 403 Forbidden
```
 I do have an APIARY_API_KEY set, but apparently the account lacks access to apiaryclienttest",True,False,8,7055.116666666667
apiaryio/apiary-client/94,2015-08-21T08:31:16Z,False,55ef8abe1b48761c2602d748,"Hi Jack, thanks!

There are some related issues about README:

- `apiary help` doesn't contain all capabilities of Apiary client - https://github.com/apiaryio/apiary-client/issues/78
- My take on updating the README - https://github.com/apiaryio/apiary-client/pull/87 (blocked by #78)

Your changes address just formatting, which is fine and which I think can be merged regardless the issues above.

--------

Your changes should not affect the CircleCI build indeed. It seems like it got somehow broken by recent changes. Let us look at it and thanks for pointing it out!
",True,False,8,7055.116666666667
apiaryio/apiary-client/94,2015-08-21T16:40:27Z,False,55ef8abe1b48761c2602d749,"@honzajavorek By my reading, your #87 completely eliminates the command-line options documentation, both in-line and by reference to http://client.apiary.io. This seems like the wrong move to me. I get the feeling your focus in #87 is primarily API use and developing, rather than CLI use; why don't we cooperate to enhance all uses?

My change includes more than formatting, it adds documentation for several options supported (even *required*!) by the tool and Thor, but not documented here. Prompted by your removals, I looked again at the [full documentation](http://client.apiary.io), which is much better than it was the last time I reviewed it. 

How about if I rewrite my PR like this:

1. Include true output from `apiary --help`, as a minimal aid to the CLI user.
1. Include the `apiary --help subcommand` hint, lifted from client.apiary.io, as a clue to advanced dox.
1. Include the link to the [full documentation](http://client.apiary.io).
1. Review client.apiary.io for completeness; deal with any deficits over there, not here.

I guess that would constitute a fix for #78.",True,False,8,7055.116666666667
apiaryio/apiary-client/94,2015-08-24T08:01:56Z,False,55ef8abe1b48761c2602d74a,"@jrep 

One of aims of #87 was to DRY out the CLI docs. It removes the docs in written form and points user to the `apiary help` command, which should provide all the docs itself. That is not the case in this moment though, that's why #87 is blocked by #78, which is about updating the CLI help information so it contains full documentation.

I see pointing user to `apiary help` may not be sufficient and the CLI docs are really needed in the README. But then let's prevent the README to go stale. Let's at least add a check in CI, which takes output of `apiary help` and if README's CLI options block doesn't equal to it, it will fail.

If you are willing to contribute this much, it would be awesome if you could take the three issues/PRs (#78, #87, #94) and address them together. My take would be:

- Make sure CLI implementation using Thor is up to date and with as much built-in docs as possible, with all missing things being present, thus being part of output of `apiary help`.
- Take output of the CLI's help and paste it into the README of #87 as a new section, similar to something we have in place in current README.
- Merge #87 with #94 so it contains good ideas and updates from both.

Eventually:

- Review client.apiary.io for completeness; deal with any deficits over there, not here.
- Set up a CI check so README can't get out of sync. (I'm eager to do this.)

What do you think about this?",True,False,8,7055.116666666667
apiaryio/apiary-client/94,2015-08-24T19:04:00Z,False,55ef8abe1b48761c2602d74b,"
> On Aug 24, 2015, at 1:01 AM, Honza Javorek <notifications@github.com> wrote:
> 
> If you are willing to contribute this much, it would be awesome if you could take the three issues/PRs (#78 <https://github.com/apiaryio/apiary-client/issues/78>, #87 <https://github.com/apiaryio/apiary-client/pull/87>, #94 <https://github.com/apiaryio/apiary-client/pull/94>) and address them together. My take would be:
> 
> Make sure CLI implementation using Thor is up to date and with as much built-in docs as possible, with all missing things being present, thus being part of output of apiary help.
> Take output of the CLI's help and paste it into the README of #87 <https://github.com/apiaryio/apiary-client/pull/87> as a new section, similar to something we have in place in current README.
> Merge #87 <https://github.com/apiaryio/apiary-client/pull/87> with #94 <https://github.com/apiaryio/apiary-client/pull/94> so it contains good ideas and updates from both.

I'm willing. But a problem here is that, so far as I can tell, Thor is simply incapable of rendering full documentation in a single command. The command apiary help (which is handled by Thor) only has the ability to display the subcommands ('fetch', 'preview', ...) and their required method_options  (if any). The optional method_options can only be displayed with apiary help COMMAND. For example:

> apiary help
Commands:
  apiary fetch --api-name=API_NAME    # Fetch apiary.apib from API_NAME.apiary.io
  apiary help [COMMAND]               # Describe available commands or one specific...
  apiary preview                      # Show API documentation in default browser
  apiary publish --api-name=API_NAME  # Publish apiary.apib on docs.API_NAME.apiary.io
  apiary version                      # Show version


> apiary help fetch
Usage:
  apiary fetch --api-name=API_NAME

Options:
  --api-name=API_NAME
  [--api-host=HOST]    # Specify apiary host
  [--output=FILE]      # Write apiary.apib into specified file

Fetch apiary.apib from API_NAME.apiary.io

So I'm not clear on how much should be in README.md. What I tried to do was to reduce the ~50 lines of ""for all COMMANDS: apiary help COMMAND"" into something more readable -- but this is likely not machine-auditable.



--
Jack Repenning
Jack@netgate.net

",True,False,8,7055.116666666667
apiaryio/apiary-client/94,2015-08-25T09:03:36Z,False,55ef8abe1b48761c2602d74c,"> Thor is simply incapable of rendering full documentation in a single command.

Ah! I did not know that.

Then let's keep the ""README vs. CLI"" check just as an idea for now and let's at least fix the inconsistency, DRY or not. I agree we should have full written docs in README then, together with as-full-as-possible docs right in the CLI.",True,False,8,7055.116666666667
apiaryio/apiary-client/94,2015-08-25T19:44:37Z,False,55ef8abe1b48761c2602d74d,"I'm going to close this PR. I'm working on a new PR that combines #78, #87, and #94. The curious can monitor my progress at [my fork](https://github.com/jrep/apiary-client).",True,False,8,7055.116666666667
apiaryio/apiary-client/94,2015-08-25T22:18:25Z,False,55ef8abe1b48761c2602d74e,"I have made #96, which I believe encompasses and obsoletes this PR.",True,False,8,7055.116666666667
hazelcast/hazelcast/5788,2015-09-01T20:14:36Z,False,55fadfb71b48766818007975,verify-parallel,True,False,10,44014.2
owncloud/core/18780,2015-09-02T22:40:57Z,False,55fa1ba61b48766e81005513,"> Maybe, possibly fix js tests?

only one of two",True,False,8,630.8166666666667
owncloud/core/18780,2015-09-02T22:41:10Z,False,55fa1ba61b48766e81005514,"```
PhantomJS 1.9.8 (Linux 0.0.0) OCA.Files.MainFileInfoDetailView tests rendering displays mime icon FAILED
	Expected '' to contain 'filetypes/text-calendar.svg'.
	    at /home/mjob/Projekte/owncloud/master/apps/files/tests/js/mainfileinfodetailviewSpec.js:83
```",True,False,8,630.8166666666667
owncloud/core/18780,2015-09-03T06:25:22Z,False,55fa1ba61b48766e81005515,A [new inspection](https://scrutinizer-ci.com/g/owncloud/core/inspections/33a4998e-b436-45df-b511-d4ded629c577) was created.,True,False,8,630.8166666666667
owncloud/core/18780,2015-09-03T06:26:36Z,False,55fa1ba61b48766e81005516,"Fixed the unit test by properly simulating calling either ""callback"" then ""error"" for a mime icon without preview, or by simulating calling ""callback"" twice, once with a mime icon and once with a preview.

I don't like this legacy API and the fact that we call callback twice, but that's legacy stuff to be improved later.

@icewind1991 @MorrisJobke @nickvergessen please review",True,False,8,630.8166666666667
owncloud/core/18780,2015-09-03T06:27:02Z,False,55fa1ba61b48766e81005517,"@icewind1991 also please don't forget setting the label ""To review"" and the milestone on your PRs",True,False,8,630.8166666666667
owncloud/core/18780,2015-09-03T06:42:19Z,False,55fa1ba61b48766e81005518,"Tests are fixed!
Code looks good. And horray for extra tests. :+1: ",True,False,8,630.8166666666667
owncloud/core/18780,2015-09-03T07:37:30Z,False,55fa1ba61b48766e81005519,"> Maybe, possibly fix js tests?

@icewind1991 seriously - just fire up the unit tests yourself and have a look. What attitude is this to throw code at the community and let other do the job?",True,False,8,630.8166666666667
owncloud/core/18780,2015-09-03T09:11:46Z,False,55fa1ba61b48766e8100551a,:+1: works,True,False,8,630.8166666666667
osuosl/invoiceplane-templates/14,2015-09-03T19:17:21Z,False,55f9b4c71b48766513003562,"Fixes #10 

![](http://i.imgur.com/1S08P4h.png)
",True,False,1,0.0
bower_____bower_____1748,2015-09-08T05:53:26Z,True,bower_____bower_____1748_____138442773,I really wish to see this feature released. Is there something for a non-contributor so far to help on this?,True,True,89,1588333.85
bower_____bower_____1748,2015-09-08T06:03:17Z,True,bower_____bower_____1748_____138446014,"@tuwannu You could checkout this branch locally, test different scenarios, and report issues with it :) There must be some.",True,True,89,1588333.85
bower_____bower_____1748,2015-09-08T06:29:59Z,True,bower_____bower_____1748_____138449285,It would be better for testing if the author rebased it first.,True,True,89,1588333.85
bower_____bower_____1748,2015-09-11T15:57:51Z,True,bower_____bower_____1748_____139583863,@enumag @sheerun I will get it rebased for testing. Can we get a release scheduled for this please! :smile: ,True,True,89,1588333.85
bower_____bower_____1748,2015-09-13T17:58:34Z,True,bower_____bower_____1748_____139899937,@kodypeterson I'm standing-by to help testing after the rebase. Also made a pull request a few days ago to your repo to fix a couple of unit tests.,True,True,89,1588333.85
callemall/material-ui/1755,2015-09-29T09:27:30Z,False,560be01d1b48764e6e00697f,"What is the feature that needs a polyfill, just `Symbol`?",True,False,7,40.46666666666667
callemall/material-ui/1755,2015-09-29T09:28:13Z,False,560be01d1b48764e6e006980,@oliviertassinari Symbol ,True,False,7,40.46666666666667
callemall/material-ui/1755,2015-09-29T09:31:26Z,False,560be01d1b48764e6e006981,"I think that using the `runtime` option of [babel-loader](https://github.com/babel/babel-loader) could also works https://github.com/callemall/material-ui/blob/master/docs/webpack-production.config.js#L70.

This just fix the docs. Does this also happen when we use the lib?",True,False,7,40.46666666666667
callemall/material-ui/1755,2015-09-29T09:34:25Z,False,560be01d1b48764e6e006982,"@oliviertassinari yep, probably a better option ",True,False,7,40.46666666666667
callemall/material-ui/1755,2015-09-29T09:48:18Z,False,560be01d1b48764e6e006983,@oliviertassinari Would create different pull request for it ,True,False,7,40.46666666666667
callemall/material-ui/1755,2015-09-29T10:02:22Z,False,560be01d1b48764e6e006984,@oliviertassinari also dependency is needed for babel-runtime #1758,True,False,7,40.46666666666667
callemall/material-ui/1755,2015-09-29T10:07:58Z,False,560be01d1b48764e6e006985,:+1: ,True,False,7,40.46666666666667
bower_____bower_____1748,2015-09-30T07:55:07Z,True,bower_____bower_____1748_____144317826,":+1: 
",True,True,89,1588333.85
bower_____bower_____1748,2015-09-30T08:00:59Z,True,bower_____bower_____1748_____144319018,"not sure if I understood your description properly but I think you could simplify the logic for detecting mismatches between the bower.json and bower.lock file by simply storing a hash of the bower.json file in your bower.lock file. that way you can always warn the user if someone has changed the bower.json file since the bower.lock file was generated. afaik this is how the composer package manager works for PHP.
",True,True,89,1588333.85
quattor/aquilon/30,2015-09-30T09:58:43Z,False,560c46d61b487643b6009e58,"@jrha @gombasg allows me to build on fc20, not sure if the build_requires are pure build_requires or actual requires",True,False,1,0.0
bower_____bower_____1748,2015-10-13T17:59:28Z,True,bower_____bower_____1748_____147796466,+1,True,True,89,1588333.85
bower_____bower_____1748,2015-10-15T02:27:22Z,True,bower_____bower_____1748_____148258852,For the love of god make this happen! This will make bower kick ass!,True,True,89,1588333.85
bower_____bower_____1748,2015-10-15T09:17:23Z,True,bower_____bower_____1748_____148327598,:+1: ,True,True,89,1588333.85
bower_____bower_____1748,2015-10-15T09:18:29Z,True,bower_____bower_____1748_____148327803,+1,True,True,89,1588333.85
bower_____bower_____1748,2015-10-15T09:30:58Z,True,bower_____bower_____1748_____148332529,can we please stop with the +1 ? Just subscribe if you want to know when/if anything happens.,True,True,89,1588333.85
bower_____bower_____1748,2015-10-15T10:56:47Z,True,bower_____bower_____1748_____148350775,"since this is not getting any attention from the core devs it seems, one option would be to refactor this into a custom resolver. but honestly the default behavior of bower is so far away from deterministic behavior I wonder if its really worth it to try and salvage it.",True,True,89,1588333.85
bower_____bower_____1748,2015-10-15T11:05:21Z,True,bower_____bower_____1748_____148352979,"I'm actually kind of blown away that this mechanism wasn't included in bower from the beginning. It's such a fundamental aspect of externally sourced dependency management, you wonder how bower got this far.",True,True,89,1588333.85
bower_____bower_____1748,2015-10-15T11:08:38Z,True,bower_____bower_____1748_____148354220,"![most-evil-bower](https://cloud.githubusercontent.com/assets/1989646/10512044/d7d4aab6-733d-11e5-80bf-85e9645b8378.jpg)
",True,True,89,1588333.85
bower_____bower_____1748,2015-10-16T18:43:40Z,True,bower_____bower_____1748_____148802938,lol people are writing [blog posts](https://blog.liip.ch/) about this. Has this issue the highest priority ? Because it looks like it should… I think many people are leaving Bower just because of this.,True,True,89,1588333.85
bower_____bower_____1748,2015-10-19T08:39:05Z,True,bower_____bower_____1748_____149146152,"@syzer you can now also admire your illustration in the blog post https://blog.liip.ch/archive/2015/10/16/bower-kthxbye.html

Lockfile would give bower the boost it needs right now.",True,True,89,1588333.85
bower_____bower_____1748,2015-10-21T17:19:13Z,True,bower_____bower_____1748_____149967371,"@sheerun, can you comment as to whether this PR is under active review? A status update on your plans here would be very appreciated. I know a lot of people affected by this issue and there hasn't been much in the way of official communication lately.",True,True,89,1588333.85
bower_____bower_____1748,2015-10-22T04:37:07Z,True,bower_____bower_____1748_____150104311,"Currently it's not under review by me. There are currently no other active core members in Bower.

I'm very interested in this feature as well, but it would require tenths of hours for review and finish. And then even more for maintenance after release. It probably means that Bower needs to seek stable financial support first, so it can provide appropriate support. Even when people that are currently pushing for it, become uninterested in maintaining it (possible, and even very likely to happen).

The main reason Bower got nice Pluggable Resolvers is because Artifactory agreed to sponsor it for this feature. Without it we'd need to accept [original PR for them](https://github.com/bower/bower/pull/1686), created with minimal effort, and then get far worse API for and maintenance issues afterwards. The same applies to this feature. To release it we need to be sure that it is stable, future-proof, and there's someone to maintain it.

As a first step I'll try to find some sponsors, so https://salt.bountysource.com/teams/bower no longer says ""$0 this month from 0 supporters"". The next (easier) step is to find developers ready to develop and maintain this feature for little money we get. Personally I find it hilarious how much Bower is used and how little support it gets. Community comments about ""killing it as soon as possible"" don't help as well.",True,True,89,1588333.85
bower_____bower_____1748,2015-10-22T05:41:32Z,True,bower_____bower_____1748_____150113102,"@sheerun, your update is well taken.

A few points of unsolicited feedback, from me as just some random guy on the internet (who has helped fund a few OSS projects) to you, the apparent sole maintainer of a very popular open source project:

* The structure of the ""organization"" behind bower is completely opaque from the website. When I started using bower, I clicked around bower.io, noted that it seemed professionally (if minimally) produced, and that there was a lot of community support for it. I assumed there was a team and probably at least one serious corporate sponsor. The about page says ""Bower is a team effort,"" which is a statement that I now regard as generally untrue.
* That there *no maintainers* besides you, who cannot afford to spend a lot of time on the project, is a *serious problem*, and one that is not made apparent except by explicitly pestering you in this comment thread. I would suggest making a very prominent call to action to get either the funds or support you need **right on the homepage**. The bountysource page you linked to I cannot find anywhere on bower.io.
* Bower is clearly important enough to the infrastructure of enough major websites that you can probably flat out charge them for access to even *just* this feature or enterprise support services, etc.",True,True,89,1588333.85
bower_____bower_____1748,2015-10-22T05:58:29Z,True,bower_____bower_____1748_____150115483,"I've prepared a Google Form for anyone interested supporting Bower. Please fill it if you can:

http://goo.gl/forms/P1ndzCNoiG",True,True,89,1588333.85
bower_____bower_____1748,2015-10-27T22:24:02Z,True,bower_____bower_____1748_____151663146,"+1. 

Showstopper this. ",True,True,89,1588333.85
torch/trepl/39,2015-11-03T06:16:31Z,False,563851431b487681f8028796,cc: @Atcold this might make you happy.,True,False,6,4542.15
torch/trepl/39,2015-11-03T21:15:00Z,False,563923dd1b48769c0d004111,Yay! :+1: (Is the trailing `\t` also gone?),True,False,6,4542.15
torch/trepl/39,2015-11-05T23:44:58Z,False,563befa71b48764a76004460,"Hmm... Now `th` is always black and white... No more colours, even thought the terminal supports them... (this happens on Ubuntu 14.04)",True,False,6,4542.15
torch/trepl/39,2015-11-06T00:24:13Z,False,563bf3351b48764a76004706,"yeah, on os x too",True,False,6,4542.15
torch/trepl/39,2015-11-06T00:24:49Z,False,563bf3611b487644050050ee,:disappointed: ,True,False,6,4542.15
torch/trepl/39,2015-11-06T09:58:40Z,False,563c7da01b487642e80076af,"sorry, fixed in trunk.",True,False,6,4542.15
bower_____bower_____1748,2015-11-08T08:37:17Z,True,bower_____bower_____1748_____154789508,@sheerun can you give me a $number for you to round this feature up ?,True,True,89,1588333.85
bower_____bower_____1748,2015-11-08T12:18:36Z,True,bower_____bower_____1748_____154819159,I think ~$5000 is a reasonable number (for implementing and then maintaining for some time). But I won't so that it as I don't have enough time. Maybe @kodypeterson @faceleg or @albertinad could tell?,True,True,89,1588333.85
mozilla/pontoon/266,2015-11-13T06:05:02Z,False,56457d921b4876ad5200c02b,"I didn't test, but the code LGTM.",True,False,6,4079.483333333333
bower_____bower_____1748,2015-11-13T21:41:27Z,True,bower_____bower_____1748_____156564973,"@sheerun claims of bower's death are spreading really fast right now across HN, Reddit, and individual projects. I would suggest a brief PR statement that puts the myths to rest and includes a call to action for the funding this project needs, otherwise usage will probably drop due to FUD.",True,True,89,1588333.85
bower_____bower_____1748,2015-11-13T21:47:33Z,True,bower_____bower_____1748_____156568507,@nnjpp @sheerun Came here because of this.. from reddit via a tweet. Some clarification on the state of Bower would be great... and perhaps this publicity could help the project.,True,True,89,1588333.85
mozilla/pontoon/266,2015-11-14T00:02:46Z,False,56467a2a1b4876b07100f46f,"Code looks good, made a few nitpicky comments.

Briefly tested it locally and it didn't work, but I'm probably using an in-memory cache not shared between two projects. I'm going to try it with memcached or something and report what I find.",True,False,6,4079.483333333333
bower_____bower_____1748,2015-11-14T01:10:43Z,True,bower_____bower_____1748_____156602898,"I hate adding +1 comments, but +1 @nnjpp @AdamWills.",True,True,89,1588333.85
bower_____bower_____1748,2015-11-14T11:11:57Z,True,bower_____bower_____1748_____156687254,The bower project is seeking both funding and active contributors.,True,True,89,1588333.85
bower_____bower_____1748,2015-11-14T15:09:24Z,True,bower_____bower_____1748_____156709909,"If it's not clear yet: bower is stable software, bower is not dying, bower looks for contributors and funding.
",True,True,89,1588333.85
bower_____bower_____1748,2015-11-14T21:15:50Z,True,bower_____bower_____1748_____156746373,"If you are seeking contributors and funding you should really, really make
that clear on the website instead of hoping people stumble onto this thread.
On Nov 14, 2015 7:09 AM, ""Adam Stankiewicz"" <notifications@github.com>
wrote:

> If it's not clear yet: bower is stable software, bower is not dying, bower
> looks for contributors and funding.
>
> —
> Reply to this email directly or view it on GitHub
> <https://github.com/bower/bower/pull/1748#issuecomment-156709909>.
>
",True,True,89,1588333.85
bower_____bower_____1748,2015-11-14T21:27:32Z,True,bower_____bower_____1748_____156747129,@vincentwoo For now it's only in the README. At the very top.,True,True,89,1588333.85
bower_____bower_____1748,2015-11-15T14:33:37Z,True,bower_____bower_____1748_____156815132,I agree with @vincentwoo on this. I've opened [a PR for adding a callout banner to the website](https://github.com/bower/bower.github.io/pull/175). ,True,True,89,1588333.85
mozilla/pontoon/266,2015-11-16T00:19:28Z,False,564921121b4876aed9015d2e,@Osmose Pontoon is using LocMemcace by default. Switching default cache backend to something more persistent between processes should help.,True,False,6,4079.483333333333
mozilla/pontoon/266,2015-11-16T01:08:28Z,False,56492c911b4876a99801788b,"@Osmose thx for review, could you look at this again?",True,False,6,4079.483333333333
mozilla/pontoon/266,2015-11-16T02:01:48Z,False,5649390e1b4876a8da0173a2,Enabled a shared cache and successfully tested this locally. Nice work!,True,False,6,4079.483333333333
mozilla/pontoon/266,2015-11-16T02:04:31Z,False,564939b61b4876a8da0173d1,"r+, great fix!",True,False,6,4079.483333333333
pyqg/pyqg/124,2015-11-17T14:35:18Z,False,564b3b2f1b4876a926021185,Something is wrong with this. Travis is not building the new commit.,True,False,2,0.2
pyqg/pyqg/124,2015-11-17T14:35:30Z,False,564b3b351b4876a979020822,"[![Code Health](https://landscape.io/badge/256123/landscape.svg?style=flat)](https://landscape.io/diff/243027)
Code quality remained the same when pulling **[046dbb7](https://github.com/rabernat/pyqg/commit/046dbb7cb08d043ec1ceea264f22170aa6f74bbf) on rabernat:add_codecov** into **[853ff0c](https://github.com/pyqg/pyqg/commit/853ff0c27fa812958cd202d78eaac6aff59f91f1) on pyqg:master**.",True,False,2,0.2
dimagi/commcare-hq/9248,2015-11-24T18:14:25Z,False,5654a90c1b48763c22003f67,tests pass :white_check_mark: ,True,False,3,58.28333333333333
dimagi/commcare-hq/9248,2015-11-24T19:00:08Z,False,5654b3c51b48764d47005942,do you disagree re: moving checkbox?,True,False,3,58.28333333333333
dimagi/commcare-hq/9248,2015-11-24T19:12:42Z,False,5654b6be1b487643d9007535,"sorry, misread your comment.  updated",True,False,3,58.28333333333333
bower_____bower_____1748,2015-12-13T22:13:15Z,True,bower_____bower_____1748_____164302725,"@kodypeterson Great work on this. 

As @sheerun mentioned before, is it possible to squash this into meaningful commits and rebase against master? It's hard to review in its current state.",True,True,89,1588333.85
bower_____bower_____1748,2015-12-13T23:00:06Z,True,bower_____bower_____1748_____164308440,@Utsav2 Could you do it instead and send another PR?,True,True,89,1588333.85
bower_____bower_____1748,2015-12-14T00:47:28Z,True,bower_____bower_____1748_____164315781,#2100 ,True,True,89,1588333.85
pallets_____click_____493,2015-12-17T22:49:08Z,True,pallets_____click_____493_____54042882,"this one is for consideration, it implements smarter matrix builds and uses more modern tox features
it also replaces the makefile
",True,True,13,1265610.9
pallets_____click_____493,2016-01-02T19:40:34Z,True,pallets_____click_____493_____168422282,"Unsure about replacing Makefile with language-specific tox.

Perhaps Makefile could be a wrapper for tox?
",True,True,13,1265610.9
pallets_____click_____493,2016-01-02T19:54:31Z,True,pallets_____click_____493_____168422805,"Its a python only project to begin with and tox is more portable
",True,True,13,1265610.9
github/hoosegow/9,2016-01-25T18:54:17Z,False,56a6dc8b6480fdd7ac001cfd,:shipit: ,True,False,2,0.6
github/hoosegow/9,2016-01-25T18:54:53Z,False,56a6dc8b6480fdd7ac001cfe,"This also lets the rake version float because I had the wrong version of rake getting loaded. It also makes bootstrap `+x` and sets some paths, because.",True,False,2,0.6
airdcpp-web/airdcpp-webclient/55,2016-01-26T08:14:17Z,False,56a744856480fdd4d7004d42,"This doesn't list many of the required packages, such as OpenSSL, zlib and bzip2.

I'd prefer maintaining the compilation guide only for Ubuntu, but native installation packages could be created for different distributions (and then listed in the README).

https://github.com/airdcpp-web/airdcpp-webclient/issues/38
https://wiki.archlinux.org/index.php/creating_packages",True,False,8,9024.65
airdcpp-web/airdcpp-webclient/55,2016-01-26T08:19:04Z,False,56a744a36480fddabe003000,"There used to be an Arch package for airdcnano, which is probably closest to this client: https://aur.archlinux.org/cgit/aur.git/tree/PKGBUILD?h=airdcnano",True,False,8,9024.65
airdcpp-web/airdcpp-webclient/55,2016-01-26T18:29:04Z,False,56a7baf76480fdd6ca00a6e5,you're right :-),True,False,8,9024.65
bower_____bower_____1748,2016-01-27T14:50:34Z,True,bower_____bower_____1748_____175665137,"No project or version of any project is ever completed without any bugs. Thats why versions keep bumping up for any repository.

You should release as dev version and contributor would be happy to fix and maintain this feature. 

For more then 3+ years, this feature is been pending and 1 year for review as contributor completed his task. 

**Please just release this under dev version and let everyone else review it, test it and give there feedback.** ",True,True,89,1588333.85
bower_____bower_____1748,2016-01-27T14:58:27Z,True,bower_____bower_____1748_____175668943,"If you need any help with testing, please feel free to message me. ",True,True,89,1588333.85
airdcpp-web/airdcpp-webclient/55,2016-01-29T11:39:35Z,False,56ab4f816480fdaecc002ad8,"Now i work on .deb rls with Openbuildservice from Suse/Novell. But this is the first time that i do this and have deb build conflicts. i must read more package build howtos.....
U an look the current status here (nothing comlete atm):
[https://build.opensuse.org/package/show/home:synapsenstau/Airdcpp-Webclient](url)
",True,False,8,9024.65
airdcpp-web/airdcpp-webclient/55,2016-01-29T16:41:22Z,False,56ab96396480fdad7f0041e2,:thumbsup:,True,False,8,9024.65
openhumanoids/oh-distro/39,2016-01-29T21:01:01Z,False,56abd3136480fdab8f004c85,"I'm not sure I want to disable so much code by default.  How do build servers enable this code for testing?  I think we're reaching the limits of what tobuild.txt was designed for.  We now have options, but pod builds do not really support configuration options.",True,False,5,4194.433333333333
openhumanoids/oh-distro/39,2016-01-29T21:22:52Z,False,56abd8386480fda86e0045a9,"What to do with the atlas proprietary code issue isn't resolved yet @iamwolf . We shouldn't make steps to make Atlas unrunnable.

I had been envisaging moving atlas-collections to an entirely separate repo. It could still be build tested as part of a minimal distro - like I do for pronto.

I'm interested in hearing what @patmarion thinks is the right solution.",True,False,5,4194.433333333333
caskroom/homebrew-cask/18009,2016-01-31T23:36:38Z,False,56ae9a8b6480fdde85003f2a,Merged as feef30cab0299b70897bac4aa5a2d13e91585c0f.,True,False,1,0.0
airdcpp-web/airdcpp-webclient/55,2016-02-01T10:56:13Z,False,56af39d76480fdf1cf002108,I see that the Debian build fails because of the git version check and Web UI installation. I'll fix the build script to work without those.,True,False,8,9024.65
airdcpp-web/airdcpp-webclient/55,2016-02-01T11:36:32Z,False,56af434b6480fdf6420023a2,"The Problem is, that npm will load the airdcpp-webui over internet, but OBS provide no network.
[https://en.opensuse.org/openSUSE:Packaging_nodejs](url) ",True,False,8,9024.65
airdcpp-web/airdcpp-webclient/55,2016-02-01T14:38:56Z,False,56af6e086480fde901002de9,Changes in the development branch should fix the problems. I'll close this pull request as it's not related to the Debian package (better use the issue tracker instead).,True,False,8,9024.65
openhumanoids/oh-distro/39,2016-02-01T16:30:22Z,False,56af88246480fdf12d0037ee,"I'm not sure.  Drake abandoned tobuild.txt and now uses custom logic around CMake's ExternalProject system.  Oh-distro uses ExternalProject for software/externals, but still uses tobuild.txt for the main build.  We could abandon tobuild.txt, or we could add tricks in the subdirs to return early, similar to what was recently added to software/control when Matlab is not available.  Replacing software/tobuild.txt would take some development effort, but maybe that's the best long term solution.  It's a recursive job though, in addition to the top level tobuild.txt, you need to do it for subdirs, too.

",True,False,5,4194.433333333333
openhumanoids/oh-distro/39,2016-02-01T17:46:53Z,False,56af9a166480fdea87003fac,"My intention was neither to break Atlas/make it unrunnable nor to ignite a debate on changing build systems - apologies. The intention is to allow a full build when private externals are 'off' without throwing errors because it cannot find these directories. Happy to use something like returning early - the issue at the moment is these directories it is trying to build do not exist if BUILD_PRIVATE_EXTERNALS is off and it fails when trying to recurse into those directories. 
- Do you think it would be possible to return early where possible (ptgrey, but not atlas-collection/atlas and flycapture) and have a environment variable set in bashrc for those wanting to build it [i.e. the build servers, the Atlas computer in MIT, etc.] that is read and determines whether it is build? 
- Hereto, can the proprietary code possibly be built as part of the externals where we have CMake logic rather than in drivers? What was the reasoning behind having to copy from externals into atlas-collection/atlas and drivers/flycapture for instance instead of building in externals?
- Or, deactivate by default and provide a bash script to activate atlas (using sed to replace #deactivated-module with deactivated-module in the tobuild.txt files) for the build server and the Atlas machine (or prepending these steps in the CDash script)? This script could also be called with exec_program when BUILD_PRIVATE_EXTERNALS is 'on'.

I'm also happy to close this PR and just add it to the README that people should manually edit the tobuild files to deactivate those modules when building without the private externals.",True,False,5,4194.433333333333
openhumanoids/oh-distro/39,2016-02-01T18:55:27Z,False,56afaa2c6480fdf91d004346,"I'm not in favour of abandoning tobuild. I want to retain modularity for the pods that are being built here and tobuild gives that without and ambiguity.

What about making all the atlas collection a separate repository that lives in a different repository? And for those operating Atlas (on the one machine that needs to) having an additional post-build step (after building software) of:

$ checkout_atlas_repo
$ make_atlas",True,False,5,4194.433333333333
cfpb/cfgov-refresh/1407,2016-02-04T21:38:46Z,False,56b3c4f56480fd7b83000860,Update `is_horizontal` docs,True,False,7,79.45
cfpb/cfgov-refresh/1407,2016-02-04T21:43:37Z,False,56b3c6426480fd83cc0007a5,To following existing conventions this should be `global_eyebrow.render()` so the function call name isn't dependent on the context in which it is imported.,True,False,7,79.45
cfpb/cfgov-refresh/1407,2016-02-04T21:45:49Z,False,56b3c69f6480fd7de5000da1,"I was following @kurtw's example in https://github.com/cfpb/cfgov-refresh/blob/flapjack/cfgov/jinja2/v1/browse-filterable/index.html#L29. I never know which is the right way. Kurt, can you fill us in?",True,False,7,79.45
cfpb/cfgov-refresh/1407,2016-02-04T22:48:49Z,False,56b3d5606480fd8263000e5c,I think Ans' approach is more readable and easier to remember.,True,False,7,79.45
cfpb/cfgov-refresh/1407,2016-02-04T22:52:18Z,False,56b3d62b6480fd8438001193,"Thanks, done",True,False,7,79.45
cfpb/cfgov-refresh/1407,2016-02-04T22:53:06Z,False,56b3e49b6480fd7d6b001ccc,:+1: ,True,False,7,79.45
cfpb/cfgov-refresh/1407,2016-02-04T22:58:13Z,False,56b3eab56480fdbd2f0001fe,:+1: ,True,False,7,79.45
LLNL/spack/444,2016-02-18T07:24:32Z,False,56c571b86480fd3fac002daa,"@lyon-fnal: This is a really clean, concise way to do it!

I like the implementation conceptually, although I think the combinatorial aspect is going to make for a lot of extra package parsing and condition checking during concretization.  We're also planning a more robust parameter system (i.e. variants might be more than just booleans), which is going to make using `itertools.product` more costly.

Did you see #391 and the ensuing discussion there, which is similar to this? @alalazo put it together.  I was planning to merge something like this PR as soon as it supports forwarding variants to entire sub-DAGs and sense inversion (e.g. forward the opposite of the current variant).

Maybe I should get one or the other merged sooner, though, especially if forwarding to immediate dependencies is still useful.  @alalazo: what do you think?  How close is the other PR to having full sub-DAG forwarding?  Maybe I could take a stab at getting that done sooner rather than later.

@lyon-fnal: thoughts?",True,False,3,23952.683333333334
LLNL/spack/444,2016-02-18T16:31:55Z,False,56c5f2686480fd3d2200791d,"@tgamblin : adding sense inversion to #391 won't be much of a problem, but for entire sub-DAG forwarding I need to take a closer look (and possibly rework the thing in another PR). In that case, as you correctly pointed out, it would make more sense to extend the keywords of the `variant` directive rather than the `depends_on` directive. 

My other concern is that the semantic will totally change as soon as variants will be allowed to be arbitrary strings (""inversion"" will make no sense anymore, and maybe just forwarding won't be sufficient). ",True,False,3,23952.683333333334
everypolitician/everypolitician-data/4639,2016-02-25T04:49:12Z,False,56ce87d16480fd6818003bfd,"
Summary of changes in `data/Turkey/Assembly/ep-popolo-v1.0.json`:

## People

### Added



- `0333836c-c98f-4eef-b8eb-ab799dc9d0d6` - Halide Edib Adıvar



### Removed


No people removed


## Organizations

### Added


No organizations added


### Removed


No organizations removed



",True,False,2,1955.5
everypolitician/everypolitician-data/4639,2016-02-26T13:24:42Z,False,56d052b26480fdab2e006cc7,This Pull Request has been superseded by #4706,True,False,2,1955.5
eabrahamo/helloworld/2,2016-02-26T16:20:28Z,False,56d07bbd6480fdac41007b5c,"<a href=""https://app.review.ninja/eabrahamo/helloworld/pull/2"" target=""_blank""><img src=""https://app.review.ninja/30668842/pull/2/badge"" alt=""ReviewNinja""/>",True,False,7,321.06666666666666
eabrahamo/helloworld/2,2016-02-26T16:46:15Z,False,56d0815f6480fdac41007e93,!fix - this doesn't look right,True,False,7,321.06666666666666
eabrahamo/helloworld/2,2016-02-26T16:47:05Z,False,56d081a56480fdac41007ee3,never mind !fixed,True,False,7,321.06666666666666
eabrahamo/helloworld/2,2016-02-26T17:14:53Z,False,56d0881f6480fdab4b009919,!fix you need to fix this mess,True,False,7,321.06666666666666
eabrahamo/helloworld/2,2016-02-26T17:16:17Z,False,56d0887a6480fdac08008c68,"!fixed, ok, not it looks good",True,False,7,321.06666666666666
eabrahamo/helloworld/2,2016-02-26T21:36:21Z,False,56d0c5626480fdac8f008c97,!fix me no likey,True,False,7,321.06666666666666
eabrahamo/helloworld/2,2016-02-26T21:41:32Z,False,56d0c6a36480fdad3600aaf0,!fixed now,True,False,7,321.06666666666666
couchbase/couchbase-lite-java-core/1067,2016-02-27T02:49:11Z,False,56d115d36480fdb3dd000fb4,Should be nuu != null.,True,False,3,4312.716666666666
couchbase/couchbase-lite-java-core/1067,2016-02-27T02:50:22Z,False,56d10ef46480fdb709000ef1,Would it be possible that cur.get(key) returns null?,True,False,3,4312.716666666666
box/box-android-sdk/105,2016-02-27T02:55:13Z,False,56d110196480fdb56e00158f,Verified that @doncung has signed the CLA. Thanks for the pull request!,True,False,1,0.0
couchbase/couchbase-lite-java-core/1067,2016-03-01T02:41:54Z,False,56d5017c6480fdc87f0015e9,@pasin Please re-review this. Thank you very much for catching my mistake.,True,False,3,4312.716666666666
LLNL/spack/444,2016-03-05T22:37:13Z,False,56db5fa26480fdedab007a7e,"@lyon-fnal @alalazo I'm going to close this for now but it'll be referenced from #391.  I think we want a subtree forwarding version before this feature goes in.  

@alalazo: w.r.t. sense inversion with arbitrary args, we can deal with that.  The args will be typed, so you can still invert a flag (variants will stick around) but we could disallow inverting integers and strings.",True,False,3,23952.683333333334
tgstation/-tg-station/15958,2016-03-08T22:44:14Z,False,56df55c86480fdf78800a1cf,Is it still more efficient to hack an autolathe and print out slugs or buckshot?,True,False,4,5669.1
tgstation/-tg-station/15958,2016-03-09T04:05:13Z,False,56dfa0fc6480fdff7a00194f,"Much more efficient. Not only does buckshot do more damage but it is more accurate and had much longer range.

One of my design paradigms was making it inferior to buckshot to incentivise assistants breaking into cargo. Once they get a taste of the shot they'll want the better version. This creates conflict and conflict is fun.",True,False,4,5669.1
tgstation/-tg-station/15958,2016-03-12T00:16:39Z,False,56e35ff16480fd1c2100018d,"I probably should have had a flashier title. Like ""Adds Flak Effect to Improvised shells""",True,False,4,5669.1
tgstation/-tg-station/15958,2016-03-12T21:13:20Z,False,56e486776480fd178c006620,"@duncathan 

This is fine balance wise so whenever",True,False,4,5669.1
bower_____bower_____1748,2016-03-13T10:23:21Z,True,bower_____bower_____1748_____195930008,For what it's worth shrinkwrap functionality is available using [bower-shrinkwrap-resolver](https://github.com/shyiko/bower-shrinkwrap-resolver). You might find it useful until this PR gets merged in.,True,True,89,1588333.85
Sthlm/sthlm.github.io/1,2016-03-19T19:20:58Z,False,56eda6a56480fd568c005ebe,testing,True,False,1,0.0
plietar/librespot/64,2016-03-20T12:00:03Z,False,56ee90cc6480fd5dd400323a,"This isn't safe, see https://doc.rust-lang.org/std/ffi/struct.CString.html for how to pass strings to C functions",True,False,10,67.03333333333333
plietar/librespot/64,2016-03-20T12:01:07Z,False,56ee91066480fd577e002f72,This is `libc::c_char`,True,False,10,67.03333333333333
plietar/librespot/64,2016-03-20T12:02:37Z,False,56ee91606480fd5b980032f6,Just use `data.as_ptr() as *const libc::c_void`,True,False,10,67.03333333333333
plietar/librespot/64,2016-03-20T12:05:38Z,False,56ee92196480fd58640034ff,"Thanks,
Why not use the `rust-pulse-simple` crate which exposes a safe binding on top of `pulse-sys` ?
Also this will have to wait a little before being merge, see https://github.com/plietar/librespot/issues/63#issuecomment-198417728, sorry.",True,False,10,67.03333333333333
plietar/librespot/64,2016-03-20T12:13:27Z,False,56ee93f46480fd57e8003319,"Thanks for the feedback, I'll try to incorporate the changes (and get a better grip on the typing in general)

As you might have seen that are my first steps in Rust (and anything other than Java for a while), so I kind of got lost in the types.

The reason of not using rust-pulse-simple was that I could not figure out how to use the Playback.write method with the full buffer of data. I'm still not really sure what the type of X has to be in Playback<X> to make that work. ",True,False,10,67.03333333333333
plietar/librespot/64,2016-03-20T12:38:14Z,False,56ee99bd6480fd5d2b00361a,"From what I understand, in rust-pulse-simple, `C` should be a `[i16; 2]`, ie an array of two i16, one for each channel.
This means data should be a `&[[i16; 2]]`. You can get one by doing `std::slice::from_raw_parts(data.as_ptr() as *const [i16; 2], data.len() / 2)`.",True,False,10,67.03333333333333
plietar/librespot/64,2016-03-20T12:52:04Z,False,56ee9cfc6480fd5ab4003794,"ok, I didn't know about the slice thing obviously. But I think using the calls directly makes it more obvious, at least to such noobs like me.

One of the things I don't understand is how types are actually might differ to the ones advertised:
according to your suggestion `data.as_ptr() as *const libc::c_void` should be fine, even the typing in libpulse-sys/libpulse.rs is like that, but when I try that I get a 
```
 expected `*const libc::types::common::c95::c_void`,
    found `*const libc::c_void`
(expected enum `libc::types::common::c95::c_void`,
    found enum `libc::c_void`) [E0308]
```

which puzzles me much. Where does he take this c95 from out of a sudden?


",True,False,10,67.03333333333333
plietar/librespot/64,2016-03-20T13:04:03Z,False,56ee9fc56480fd5a83003b5d,"How did you include libc ? You should use the libc crate, not the compiler's libc feature",True,False,10,67.03333333333333
plietar/librespot/64,2016-03-20T13:04:52Z,False,56ee9ff86480fd5c4a00373d,"And I agree, the pulse-simple crate barely does anything in the end, I'm fine with keeping it like that.",True,False,10,67.03333333333333
plietar/librespot/64,2016-03-20T13:07:05Z,False,56eea0806480fd5cce0035aa,"As I don' know what ""the compiler's libc feature"" actually means, I tried this:
https://github.com/marcust/librespot/commit/c41b178f19bb4d29ee27cf9d9c95440cd47de6bb
",True,False,10,67.03333333333333
RobSullivan/pmc-ref/29,2016-03-31T22:21:01Z,False,56fda2d26480fdf9290099dc,No longer using newrelic and have removed from project.,True,False,1,0.0
htmlacademy-htmlcss/179825-nerds/1,2016-04-13T13:59:56Z,False,570f43fc6480fd4bec001e85,:recycle: Я собрал ваш пулреквест. Посмотреть можно [здесь](https://htmlacademy-htmlcss.github.io/179825-nerds/1/).,True,False,1,0.0
TelescopeJS/Telescope/1301,2016-04-15T13:06:05Z,False,5711f2326480fd8ffe003f93,"Nice work :) Just one suggestion: instead of adding special logic in NovaForm for `requiredFieldsOnly`, maybe it could support a `fields` property that lets you specify which subset of fields you want to display? So if the edit form would normally show fields `foo`, `bar`, and `baz`, and you pass `fields=[""foo"", ""baz"", ""buzz""]` it would only show `foo` and `baz` (that's how Autoform does it at least). 

Also `devel` was a bit behind, sorry about that!

",True,False,10,2558.2166666666667
TelescopeJS/Telescope/1301,2016-04-15T13:09:19Z,False,5711f2326480fd8ffe003f94,"Ooow, I like this! Yep, I'll modify following this way!",True,False,10,2558.2166666666667
KPI-FICT-IP32/KPI-FICT-IP32.github.io/15,2016-04-16T11:28:13Z,False,5712de4f6480fd805f0006f5,Please chck https://github.com/KPI-FICT-IP32/KPI-FICT-IP32.github.io/pull/16 out.,True,False,8,38613.21666666667
TelescopeJS/Telescope/1301,2016-04-16T16:36:32Z,False,5712e00f6480fd85190007c4,"Don't be afraid by this huge comment, it's my changelog as a little story: this is a description for you to better understand what I did, and also for me to take a step back 👍 

c2d1a1a 
Be in accordance with `devel`, 😄  ok that was the easy part.

2baf40a
Then, I ran into several bugs due to undefined settings (I run Nova with `settings.json`). I found that it was due to a missing `typeof` in the `Telescope.settings.get` method. Even if it's not related to this PR, I thought it wasn't useful to do a new one.

5c424da
I switched from my `requiredFieldsOnly` prop to a `fields` prop which accepts an array of fields and will filter on it the way you described me, it does the job.

💥 
The story could have be done by this time, but I realized that in some cases after submitting the modal or logging out, I got warnings displayed in my browser console.

d878b84
The first warning was related to `nova:forms` and I guess it was due to the update to React 15:
`Warning: Unknown DOM property dataType. Did you mean datatype?`. Quick typo change: 

72ea1ab
The way I handled the modal was in fact an anti-pattern! Ok it worked, but I got crazy warnings telling me I was doing shit with the state of my component! 🐑 

```Warning: setState(...): Can only update a mounted or mounting component. This usually means you called setState() on an unmounted component. This is a no-op. Please check the code for the undefined component.```

```Warning: setState(...): Cannot update during an existing state transition (such as within `render` or another component's constructor). Render methods should be a pure function of props and state; constructor side-effects are an anti-pattern, but can be moved to `componentWillMount`.```

These warnings were caused by a really bad way of closing the modal (show prop true/false) on logout or submitting a new email. After struggling and trying a lot of different patterns, I finally wrapped the modal in a container passing to the modal to manage three different cases: 
- there is not a current user -> render null
- there is a current user who has a complete profile -> render the modal but don't show it.
- there is a current user who has no email / erased it from his profile -> render the modal and show it!

In addition to that, I added a go home callback on logout to move the user from the account route if he logs out with the modal.

**Conclusion: I just f$#§ing leveled up in Meteor and React!!!** :metal: 
If we need to improve this container/component, your feedback is really welcomed 💯  I've looked at `DocumentContainer` but I don't see how to handle this `show` prop with it, so I used `react-komposer` 💭 

It's now time to spread love and drink beers, have a good weekend! 🍻 ",True,False,10,2558.2166666666667
TelescopeJS/Telescope/1301,2016-04-17T00:58:57Z,False,5712e00f6480fd85190007c5,"Wow that's awesome! Regarding the `datatype` thing, that's just a name I gave the prop, but maybe React treats `data*` properties differently? I don't really understand that error tbh. I'm also surprised that you needed to use React Komposer, if I have time I'll test out both ways as well. I could use some levelling up in React myself, too ;)",True,False,10,2558.2166666666667
TelescopeJS/Telescope/1301,2016-04-17T01:12:26Z,False,5712fb1e6480fd84a000215f,"Oh ok I understand the problem with your first solution now. As soon as you submit the form, the user profile becomes complete and the modal component was being unmounted. So that's why the modal needs to stick around wether the profile is complete or not :)",True,False,10,2558.2166666666667
TelescopeJS/Telescope/1301,2016-04-17T01:16:46Z,False,5712fb266480fd7f7000175d,"So as far as I can tell, the important part is keeping the modal around, Komposer is not really required here I think. ",True,False,10,2558.2166666666667
TelescopeJS/Telescope/1301,2016-04-17T01:31:36Z,False,5712fb496480fd8519001b80,"OK I simplified it a bit, let me know what you think:

https://github.com/TelescopeJS/Telescope/commit/60f29bbfd189eed2fdb355c3758053de48f5258f

Basically the requirements are: 

- If there is no user object, do not mount the form.
- If there is a user object, always mount the form.
- If the profile is incomplete, show the modal. ",True,False,10,2558.2166666666667
TelescopeJS/Telescope/1301,2016-04-17T01:38:06Z,False,5712fb546480fd7a690018d4,"Oh also it shouldn't be `fields={ [""telescope.email""] }`, but instead:

```
// return fields that are required by the schema but haven't been filled out yet
    var schema = Users.simpleSchema()._schema;
    var requiredFields = _.filter(_.keys(schema), function (fieldName) {
      var field = schema[fieldName];
      return !!field.required && !Telescope.getNestedProperty(Meteor.user(), fieldName);
    });
```",True,False,10,2558.2166666666667
TelescopeJS/Telescope/1301,2016-04-17T01:46:57Z,False,5712fb676480fd821900180a,"Also if I'm not mistaken, the way you did `getFieldNames` would *only* get fields passed as `this.props.fields`:
```
const schema = collection.simpleSchema()._schema;
relevantFields = _.filter(_.keys(schema), function (fieldName) {
   return _.contains(fields, fieldName);
});
```

Instead we want the *intersection* of `this.props.fields` and whichever fields are editable/insertable: 

```
relevantFields = _.intersection(relevantFields, fields)
```",True,False,10,2558.2166666666667
TelescopeJS/Telescope/1301,2016-04-17T07:44:18Z,False,57133ede6480fd7f21003c7a,"Yeah this way to handle the modal does the same things in a much simpler way: it is contained and control by another component without the need to compose with tracker 👌

For the fields, I guess I didn't understand the specs well, I see now. I'll update it 😅

Still gaining XP, thanks for the comments!!",True,False,10,2558.2166666666667
KPI-FICT-IP32/KPI-FICT-IP32.github.io/15,2016-04-18T19:38:15Z,False,571537b76480fdf024004806,"Ні, і ще 100 разів ні.
назва класу .h-width-40p говорить про те, що елемент з цим класом матиме ширину у 40%. І ніяких не 100.",True,False,8,38613.21666666667
KPI-FICT-IP32/KPI-FICT-IP32.github.io/15,2016-04-18T19:38:51Z,False,571537f26480fdf19f00719a,"Навіщо, якщо стилі класу не залежать від ширини екрану?",True,False,8,38613.21666666667
KPI-FICT-IP32/KPI-FICT-IP32.github.io/15,2016-04-18T19:40:11Z,False,571538296480fdec73005c20,А ти шапку (header) не поламав при цьому?,True,False,8,38613.21666666667
KPI-FICT-IP32/KPI-FICT-IP32.github.io/15,2016-04-18T19:48:19Z,False,571545b06480fde9290060c3,"Щодо стилів.

1. Ховати під `@media` тільки те, що залежить від ширини екрану
2. Якщо назва класу описує, що елементи з класом матмуть конкретне значення конкретного стилю -- значить що при будь-якій ширині екрану буде так.

    Якщо хочеш задати різні стилі для елементу залежно від ширини екрану, то будь, ласка, зроби це якось так:

    ```scss
    .my-awesome-class {
        /* Some common styles of .my-awesome-class here */
     }

    @media (min-width: 320px) and (max-width: 720px) {
        .my-awesome-class {
             /* Styles for screen width between 320px and 720px */
        }
    }

    @media (min-width: 720px) {
        .my-awesome-class {
             /* Styles for screen width more than 720px */
        }
    }
    ```

    або так:

    ```scss
    .my-awesome-class {
        /* Some common styles of .my-awesome-class here */

        @media (min-width: 320px) and (max-width: 720px) {
             /* Styles for screen width between 320px and 720px */
        }
        @media (min-width: 720px) {
             /* Styles for screen width more than 720px */
        }
    }
    ```    ",True,False,8,38613.21666666667
KPI-FICT-IP32/KPI-FICT-IP32.github.io/15,2016-04-18T19:53:06Z,False,57153b326480fdec73005d15,"Таки поламав: ![image](https://cloud.githubusercontent.com/assets/6533582/14617789/4b46bbe4-05b8-11e6-9113-fb63909758a3.png)
",True,False,8,38613.21666666667
filc/python-aws-ecr-deployer/1,2016-04-22T09:43:28Z,False,5719f2516480fd530e0035bc,Thanks :),True,False,1,0.0
KPI-FICT-IP32/KPI-FICT-IP32.github.io/15,2016-04-28T21:15:13Z,False,57227d6c6480fdc23b0063f9,"@IcedNecro: поглянь, і, якщо все ОК, -- зливай у master

Бажано це зробити ASAP",True,False,8,38613.21666666667
bower_____bower_____1748,2016-05-07T15:00:35Z,True,bower_____bower_____1748_____217642840,+1,True,True,89,1588333.85
bower_____bower_____1748,2016-05-07T15:04:54Z,True,bower_____bower_____1748_____217643063,"In my opinion, if bower lock exist bower install shouldn't fails, but just install the bower lock content with information message.",True,True,89,1588333.85
AppFolioOnboarding/image-sharer-xin/37,2016-05-11T23:16:20Z,False,57341da16480fdcc1800004f,I'm making the review app work.,True,False,26,13164.816666666668
AppFolioOnboarding/image-sharer-xin/37,2016-05-12T01:02:31Z,False,57341da16480fdcc18000050,"The app cannot be deployed with error message ```Invalid app.json: config var ""SENDGRID_PASSWORD"" is required, config var ""SENDGRID_USERNAME"" is required``` if I choose to add sendgrid automatically. I'm not sure about the reason and will address it in the future pairing session.",True,False,26,13164.816666666668
KPI-FICT-IP32/KPI-FICT-IP32.github.io/15,2016-05-13T07:01:26Z,False,57357bcf6480fdca03008468,ping @IcedNecro ,True,False,8,38613.21666666667
AppFolioOnboarding/image-sharer-xin/37,2016-05-17T23:23:58Z,False,573ba8156480fdc4ae02e043,"`aria-labelledby=""share_modal_label""` indicates that there is an element with `id=""share_modal_label""` that acts as the ""label"" for this modal dialog. However, no such element exists. I think you meant to add `id=""share_modal_label""` to the `h4` on line 8.",True,False,26,13164.816666666668
AppFolioOnboarding/image-sharer-xin/37,2016-05-17T23:36:40Z,False,573bab136480fdc4c702cb07,It would be good to add a test that verifies the share modal works on the show page (in addition to the index page),True,False,26,13164.816666666668
AppFolioOnboarding/image-sharer-xin/37,2016-05-17T23:41:31Z,False,573bac346480fdcced02dfb7,"This is somewhat minor, but (in the spirit of atomic commits) the changes to remove turbolinks, move JS to the end of `body`, and add a named yield for page-specific javascript could be extracted out of the ""refactor image sharing to use a modal and AJAX"" commit.",True,False,26,13164.816666666668
AppFolioOnboarding/image-sharer-xin/37,2016-05-17T23:45:59Z,False,573bad486480fdcb9e03127d,"It seems that if you are on the index page, and you try to share a deleted image, the flash message will be set to ""The image you want to share does not exist"", but the image will still be there. I think it'd be less confusing if we reloaded the index page so that it'll be rerendered without the deleted image.",True,False,26,13164.816666666668
AppFolioOnboarding/image-sharer-xin/37,2016-05-18T18:45:39Z,False,573cb85e6480fdcb0303262a,The `share` method is placed inside the image card. The show page and index page are using the same image card partial. I'm not sure I understand your suggestion well but there is no `share,True,False,26,13164.816666666668
AppFolioOnboarding/image-sharer-xin/37,2016-05-18T18:47:06Z,False,573cb8b06480fdc464037f33,I'm addressing the suggestion of _reloaded the index page_ now and improving test now.,True,False,26,13164.816666666668
AppFolioOnboarding/image-sharer-xin/37,2016-05-18T21:07:31Z,False,573cd99d6480fdc905033dbb,@rmacklin All comments have been addressed and commits have been squashed into atomic ones.,True,False,26,13164.816666666668
AppFolioOnboarding/image-sharer-xin/37,2016-05-19T20:42:11Z,False,573e252d6480fdc3e903b103,Why did you add this?,True,False,26,13164.816666666668
AppFolioOnboarding/image-sharer-xin/37,2016-05-19T20:42:36Z,False,573e25496480fdc94703c1ae,Please put spaces around the `=` operator,True,False,26,13164.816666666668
AppFolioOnboarding/image-sharer-xin/37,2016-05-19T20:45:28Z,False,573e25ef6480fdc4c70399c0,Why did you remove the `aria-labelledby` instead of adding the `id` to the `h4`?,True,False,26,13164.816666666668
AppFolioOnboarding/image-sharer-xin/37,2016-05-19T20:45:39Z,False,573e25f76480fdc4af03bfbd,See https://github.com/AppFolioOnboarding/image-sharer-xin/pull/37#discussion_r63951491,True,False,26,13164.816666666668
AppFolioOnboarding/image-sharer-xin/37,2016-05-19T20:50:09Z,False,573e270e6480fdc52903dfa4,What is the point of this?,True,False,26,13164.816666666668
AppFolioOnboarding/image-sharer-xin/37,2016-05-19T20:51:06Z,False,573e27456480fdcb0303969d,Funky indentation here,True,False,26,13164.816666666668
AppFolioOnboarding/image-sharer-xin/37,2016-05-19T20:52:49Z,False,573e27ad6480fdcfcf03ffce,"You shouldn't need this method. Instead, the test can call `change_to` itself:
```ruby
share_modal.share_image
images_index_page = AePageObjects.browser.current_window.change_to(PageObjects::Images::IndexPage)
```",True,False,26,13164.816666666668
AppFolioOnboarding/image-sharer-xin/37,2016-05-20T00:19:35Z,False,573e581b6480fdc4d403d9b7,"I think twice about this scenario when a user get unknown errors, is it better to stay at the current page?",True,False,26,13164.816666666668
AppFolioOnboarding/image-sharer-xin/37,2016-05-20T00:21:41Z,False,573e589d6480fdc4640400ab,I'll address it.,True,False,26,13164.816666666668
AppFolioOnboarding/image-sharer-xin/37,2016-05-20T00:22:23Z,False,573e58c96480fdc42803c284,I meant to check the `cancel` button works as cancel. ,True,False,26,13164.816666666668
AppFolioOnboarding/image-sharer-xin/37,2016-05-20T00:47:50Z,False,573e5ebb6480fdcf6c03d929,"Yes, I think so. It's unlikely they reach this case anyway, but it could happen in a transient error, so I wouldn't redirect them.",True,False,26,13164.816666666668
AppFolioOnboarding/image-sharer-xin/37,2016-05-20T00:50:29Z,False,573e5f606480fdcb9e03e0a4,"OK, I think that's alright, but I think the method on `ShareModal` should be `close` (rather than `close_share_modal`) and you should do it with
```ruby
image_to_share.share(&:close)
```",True,False,26,13164.816666666668
AppFolioOnboarding/image-sharer-xin/37,2016-05-20T16:23:30Z,False,573f3a0f6480fdca21043ef9,👍 ,True,False,26,13164.816666666668
AppFolioOnboarding/image-sharer-xin/37,2016-05-20T17:30:46Z,False,573f4b506480fdc964041efe,I addressed it and squashed back to the original modification. ,True,False,26,13164.816666666668
AppFolioOnboarding/image-sharer-xin/37,2016-05-20T17:34:37Z,False,573f4ab46480fdc3e90408e1,@rmacklin I've addressed all the comments.,True,False,26,13164.816666666668
AppFolioOnboarding/image-sharer-xin/37,2016-05-20T19:56:01Z,False,573f6bd86480fdcfcf045f3c,"If you attempt to share an image, then close the modal, and then attempt to share another image, the modal is not reset to blank. That is, any input, as well as validation errors, is still there.",True,False,26,13164.816666666668
AppFolioOnboarding/image-sharer-xin/37,2016-05-21T02:41:09Z,False,573fcaca6480fdce3003f00e,"Also, since you've merged Authentication, you should rebase this and then include the ""sender"" in the share image mailer emails if a user is logged in.",True,False,26,13164.816666666668
Tertiush/ParadoxIP150/3,2016-05-21T17:10:55Z,False,574096a76480fdcc180433fb,"Thanks Bruce, will merge in a bit.

I'm busy with a new version of the script to use the software port directly rather than scraping the web interface. I hope to publish the initial code in a hour or so. The new version gives access to PGM outputs and a host of other info. The nice thing this time round is I'm using referenced dictionaries to support different alarm models (MG5050 is mostly supported by now) that can be extended quite easily. If you interested you can check it out later at: [https://github.com/Tertiush/ParadoxIP150v2](url)",True,False,3,1075.6
Tertiush/ParadoxIP150/3,2016-05-21T17:12:40Z,False,5740970d6480fdc57d041cd4,"Excellent.  I look forward to it.  I am using as 5050 as well.

On Sat, May 21, 2016, 13:10 Tertius <notifications@github.com> wrote:

> Thanks Bruce, will merge in a bit.
>
> I'm busy with a new version of the script to use the software port
> directly rather than scraping the web interface. I hope to publish the
> initial code in a hour or so. The new version gives access to PGM outputs
> and a host of other info. The nice thing this time round is I'm using
> referenced dictionaries to support different alarm models (MG5050 is mostly
> supported by now) that can be extended quite easily. If you interested you
> can check it out later at: https://github.com/Tertiush/ParadoxIP150v2
> <http://url>
>
> —
> You are receiving this because you authored the thread.
> Reply to this email directly or view it on GitHub
> <https://github.com/Tertiush/ParadoxIP150/pull/3#issuecomment-220789384>
>
",True,False,3,1075.6
Tertiush/ParadoxIP150/3,2016-05-22T11:06:31Z,False,574192d06480fdce6004bb52,"I also use a 5050 with IP150, thanks, will try.",True,False,3,1075.6
neovim/neovim/4568,2016-05-28T01:42:13Z,False,5748f7796480fdfc4f312cd6,vim_batch_call ?,True,False,46,212111.16666666666
neovim/neovim/4568,2016-05-28T01:44:00Z,False,5748f7e36480fdfc622978b6,"Consider a fixed size of 4, require nil arg.",True,False,46,212111.16666666666
neovim/neovim/4568,2016-05-28T01:53:26Z,False,5748fa1b6480fdfc8f1e64d3,"> Bikeshed of the api and return format welcome

What's the return format? The general shape looks reasonable. Granular error reporting (eg of the failed assertionwill)  help a lot.",True,False,46,212111.16666666666
neovim/neovim/4568,2016-05-28T08:13:07Z,False,574953236480fdfcf8be3d4f,"Have not checked thoroughly, but this makes me wonder if anybody out there hasn't looked at msgpack-rpc ""transactions"" by placing multiple rpc messages in a new message type.",True,False,46,212111.16666666666
neovim/neovim/4568,2016-05-28T08:47:19Z,False,57495b236480fdfca790d8cb,"There is a problem with that, NIL is an actual value to which the return value could be compared. If we insist of a fixed size we either need a bool flag `[name, args, sendret, assertret, assertval]` or maybe merge with `sendret` (because if you assert the value, you don't want it returned, unless the assertion fails).",True,False,46,212111.16666666666
cms-sw/cmssw/14743,2016-06-01T20:26:03Z,False,574fba696480fdfc4f348f02,"A new Pull Request was created by  @vkhristenko (Viktor Khristenko) for CMSSW_8_1_X.

It involves the following packages:

DQM/HcalCommon
DQM/HcalTasks
DQM/Integration


@cmsbuild, @dmitrijus, @vanbesien, @davidlange6 can you please review it and eventually sign? Thanks.
@threus, @batinkov this is something you requested to watch as well.
@slava77, @degano, @smuzaffar you are the release manager for this.

cms-bot commands are list here cms-sw/cmssw#13028
",True,False,16,94820.36666666667
cms-sw/cmssw/14743,2016-06-02T07:13:16Z,False,574fdc916480fdfe4e0aaac6,@cmsbuild please test,True,False,16,94820.36666666667
cms-sw/cmssw/14743,2016-06-02T07:56:04Z,False,574fe6a26480fd020ddde485,please test,True,False,16,94820.36666666667
cms-sw/cmssw/14743,2016-06-02T07:56:21Z,False,574fe6b16480fdfe4e0ab00d,The tests are being triggered in jenkins.,True,False,16,94820.36666666667
cms-sw/cmssw/14743,2016-06-02T12:33:39Z,False,575102696480fdfce1254fef,"+1
Tested at: 8070b1ec9a29c5aeeff0e8d3ab36bf4ab1223950
https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-14743/13338/summary.html",True,False,16,94820.36666666667
cms-sw/cmssw/14743,2016-06-02T14:12:04Z,False,57503ec36480fdfc7a4b3bb3,"Comparison is ready
https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-14743/13338/summary.html",True,False,16,94820.36666666667
pentaho/pentaho-kettle/2588,2016-06-03T19:50:41Z,False,5751df9b6480fdfed06062fe,"Build completed
===============

:fire: This pull request has some issues. It would be preferable to fix them in order for it to be just perfect. See below for more details. Some links are also available below for further assistance in addressing those issues.

Build Commands:
------
1. ant -Dtestreports.dir=bin/reports/unit-test -f engine/build.xml clean-all resolve jacoco && ant -Dtestreports.dir=bin/reports/integration-test -f engine/build.xml jacoco-integration checkstyle publish-local

Cleanup Commands:
-------
rm -r ~/.ivy2/local || echo no publish local to remove

Changed files:
==============
  engine/test-src/org/pentaho/di/trans/steps/monetdbbulkloader/MonetDBBulkLoaderMetaTest.java
  engine/test-src/org/pentaho/di/trans/steps/rest/RestIT.java

Newly Fixed Tests:
======================
org.pentaho.di.trans.steps.monetdbbulkloader.MonetDBBulkLoaderMetaTest.testSerialization:
-----------------------------------------------
java.lang.RuntimeException
```
java.lang.RuntimeException: Error validating truncate
	at org.pentaho.di.trans.steps.loadsave.LoadSaveTester.validateLoadedMeta(LoadSaveTester.java:176)
	at org.pentaho.di.trans.steps.loadsave.LoadSaveTester.testRepoRoundTrip(LoadSaveTester.java:248)
	at org.pentaho.di.trans.steps.loadsave.LoadSaveTester.testSerialization(LoadSaveTester.java:183)
	at org.pentaho.di.trans.steps.monetdbbulkloader.MonetDBBulkLoaderMetaTest.testSerialization(MonetDBBulkLoaderMetaTest.java:135)
Caused by: org.pentaho
```
org.pentaho.di.trans.steps.rest.RestIT.testNoContent:
-----------------------------------------------
java.lang.ArrayIndexOutOfBoundsException
```
java.lang.ArrayIndexOutOfBoundsException

```
org.pentaho.di.trans.steps.rest.RestIT.testResponseHeader:
-----------------------------------------------
java.lang.ArrayIndexOutOfBoundsException
```
java.lang.ArrayIndexOutOfBoundsException: 11264
	at org.objectweb.asm.ClassReader.readClass(Unknown Source)
	at org.objectweb.asm.ClassReader.accept(Unknown Source)
	at org.objectweb.asm.ClassReader.accept(Unknown Source)
	at com.sun.jersey.spi.scanning.AnnotationScannerListener.onProcess(AnnotationScannerListener.java:136)
	at com.sun.jersey.core.spi.scanning.JarFileScanner.scan(JarFileScanner.java:97)
	at com.sun.jersey.core.spi.scanning.JarFileScanner$1.f(JarFileScanner.java:74)
	at com.sun.j
```

Still Broken Tests:
======================
org.pentaho.di.trans.cluster.TransSplitterTest.testTransSplitterReadsRep:
-----------------------------------------------
org.mockito.exceptions.misusing.InvalidUseOfMatchersException
```
org.mockito.exceptions.misusing.InvalidUseOfMatchersException: 
Misplaced argument matcher detected here:

-> at org.pentaho.di.trans.cluster.TransSplitterTest.testTransSplitterRowsetSize(TransSplitterTest.java:85)

You cannot use argument matchers outside of verification or stubbing.
Examples of correct usage of argument matchers:
    when(mock.get(anyInt())).thenReturn(null);
    doThrow(new RuntimeException()).when(mock).someVoidMethod(anyObject());
    verify(mock).someMethod(contains(""foo"")
```

Unit test coverage change:
============
org.pentaho.di.core.auth.core.impl.DefaultAuthenticationConsumerFactory:
 * Branch Change : **-7.14%**
 * Complexity Change : **-7.69%**

org.pentaho.di.job.entries.getpop.MailConnectionMeta:
 * Branch Change : **-1.00%**
 * Complexity Change : **-1.41%**
 * Instruction Change : **-.30%**

org.pentaho.di.job.entries.waitforsql.JobEntryWaitForSQL:
 * Branch Change :  + .67%
 * Complexity Change :  + .94%
 * Instruction Change :  + .13%

org.pentaho.di.trans.step.StepMeta:
 * Instruction Change : **-.19%**
 * Line Change : **-.27%**

org.pentaho.di.trans.steps.calculator.CalculatorMetaFunction:
 * Branch Change :  + 8.70%
 * Complexity Change :  + 3.08%
 * Instruction Change :  + .75%
 * Line Change :  + .90%

org.pentaho.di.trans.steps.checksum.CheckSumMeta:
 * Branch Change : **-1.32%**
 * Complexity Change : **-1.43%**
 * Instruction Change : **-.43%**
 * Line Change : **-.54%**

org.pentaho.di.trans.steps.combinationlookup.CombinationLookupMeta:
 * Instruction Change : **-.04%**

org.pentaho.di.trans.steps.constant.ConstantMeta:
 * Instruction Change :  + .10%

org.pentaho.di.trans.steps.datagrid.DataGridMeta:
 * Instruction Change :  + .09%

org.pentaho.di.trans.steps.dbproc.DBProcMeta:
 * Instruction Change :  + .11%

org.pentaho.di.trans.steps.dimensionlookup.DimensionLookupMeta:
 * Branch Change :  + .66%
 * Complexity Change :  + .41%
 * Instruction Change :  + .50%
 * Line Change :  + .24%

org.pentaho.di.trans.steps.groupby.GroupByMeta:
 * Instruction Change :  + .14%
 * Line Change :  + .37%

org.pentaho.di.trans.steps.ifnull.IfNullMeta:
 * Branch Change :  + 2.00%
 * Complexity Change :  + 1.89%
 * Instruction Change :  + .17%

org.pentaho.di.trans.steps.insertupdate.InsertUpdateMeta:
 * Instruction Change : **-.05%**

org.pentaho.di.trans.steps.memgroupby.MemoryGroupByMeta:
 * Branch Change :  + 6.25%
 * Complexity Change :  + 7.04%
 * Instruction Change :  + .18%
 * Line Change :  + .51%

org.pentaho.di.trans.steps.monetdbbulkloader.MonetDBBulkLoaderMeta:
 * Branch Change : **-13.01%**
 * Complexity Change : **-17.52%**
 * Instruction Change : **-30.46%**
 * Line Change : **-28.16%**
 * Method Change : **-31.25%**

org.pentaho.di.trans.steps.rowgenerator.RowGeneratorMeta:
 * Instruction Change :  + .08%

org.pentaho.di.trans.steps.singlethreader.SingleThreaderMeta:
 * Instruction Change :  + .08%

org.pentaho.di.trans.steps.synchronizeaftermerge.SynchronizeAfterMergeMeta:
 * Instruction Change :  + .04%

org.pentaho.di.trans.steps.systemdata.SystemDataMeta:
 * Branch Change :  + 2.04%
 * Complexity Change :  + 2.04%
 * Instruction Change :  + .32%
 * Line Change :  + .81%

org.pentaho.di.trans.Trans:
 * Branch Change :  + .10%
 * Complexity Change :  + .14%
 * Instruction Change :  + .09%
 * Line Change :  + .11%

Integration test coverage change:
============
org.pentaho.di.trans.steps.rest.RestMeta:
 * Complexity Change : **-.95%**
 * Instruction Change : **-3.77%**
 * Line Change : **-.85%**
 * Method Change : **-1.47%**",True,False,4,72.78333333333333
pentaho/pentaho-kettle/2588,2016-06-03T20:36:26Z,False,5751ea716480fdfccb44d358,"Build completed
===============

:x: This pull request has errors. They will need to be addressed before it can be accepted. See below for more details. Some links are also available below for further assistance in addressing those issues.

Build Commands:
------
1. ant -Dtestreports.dir=bin/reports/unit-test -f engine/build.xml clean-all resolve jacoco && ant -Dtestreports.dir=bin/reports/integration-test -f engine/build.xml jacoco-integration checkstyle publish-local

Cleanup Commands:
-------
rm -r ~/.ivy2/local || echo no publish local to remove

Changed files:
==============
  engine/test-src/org/pentaho/di/trans/cluster/TransSplitterTest.java
  engine/test-src/org/pentaho/di/trans/steps/monetdbbulkloader/MonetDBBulkLoaderMetaTest.java
  engine/test-src/org/pentaho/di/trans/steps/rest/RestIT.java

Newly Fixed Tests:
======================
org.pentaho.di.trans.cluster.TransSplitterTest.testTransSplitterReadsRep:
-----------------------------------------------
org.mockito.exceptions.misusing.InvalidUseOfMatchersException
```
org.mockito.exceptions.misusing.InvalidUseOfMatchersException: 
Misplaced argument matcher detected here:

-> at org.pentaho.di.trans.cluster.TransSplitterTest.testTransSplitterRowsetSize(TransSplitterTest.java:85)

You cannot use argument matchers outside of verification or stubbing.
Examples of correct usage of argument matchers:
    when(mock.get(anyInt())).thenReturn(null);
    doThrow(new RuntimeException()).when(mock).someVoidMethod(anyObject());
    verify(mock).someMethod(contains(""foo"")
```
org.pentaho.di.trans.steps.monetdbbulkloader.MonetDBBulkLoaderMetaTest.testSerialization:
-----------------------------------------------
java.lang.RuntimeException
```
java.lang.RuntimeException: Error validating truncate
	at org.pentaho.di.trans.steps.loadsave.LoadSaveTester.validateLoadedMeta(LoadSaveTester.java:176)
	at org.pentaho.di.trans.steps.loadsave.LoadSaveTester.testRepoRoundTrip(LoadSaveTester.java:248)
	at org.pentaho.di.trans.steps.loadsave.LoadSaveTester.testSerialization(LoadSaveTester.java:183)
	at org.pentaho.di.trans.steps.monetdbbulkloader.MonetDBBulkLoaderMetaTest.testSerialization(MonetDBBulkLoaderMetaTest.java:135)
Caused by: org.pentaho
```
org.pentaho.di.trans.steps.rest.RestIT.testNoContent:
-----------------------------------------------
java.lang.ArrayIndexOutOfBoundsException
```
java.lang.ArrayIndexOutOfBoundsException: 11264
	at org.objectweb.asm.ClassReader.readClass(Unknown Source)
	at org.objectweb.asm.ClassReader.accept(Unknown Source)
	at org.objectweb.asm.ClassReader.accept(Unknown Source)
	at com.sun.jersey.spi.scanning.AnnotationScannerListener.onProcess(AnnotationScannerListener.java:136)
	at com.sun.jersey.core.spi.scanning.JarFileScanner.scan(JarFileScanner.java:97)
	at com.sun.jersey.core.spi.scanning.JarFileScanner$1.f(JarFileScanner.java:74)
	at com.sun.j
```
org.pentaho.di.trans.steps.rest.RestIT.testResponseHeader:
-----------------------------------------------
java.lang.ArrayIndexOutOfBoundsException
```
java.lang.ArrayIndexOutOfBoundsException

```
org.pentaho.di.www.CarteTest.test:
-----------------------------------------------
junit.framework.AssertionFailedError
```
junit.framework.AssertionFailedError: expected:<1> but was:<2>
	at org.pentaho.di.www.CarteTest.test(CarteTest.java:75)

```

Unit test coverage change:
============
org.pentaho.di.core.auth.core.impl.DefaultAuthenticationConsumerFactory:
 * Branch Change :  + 7.14%
 * Complexity Change :  + 7.69%

org.pentaho.di.job.entries.evalfilesmetrics.JobEntryEvalFilesMetrics:
 * Branch Change :  + .39%
 * Complexity Change :  + .51%
 * Instruction Change :  + .08%

org.pentaho.di.job.entries.evaluatetablecontent.JobEntryEvalTableContent:
 * Branch Change : **-1.01%**
 * Complexity Change : **-1.06%**
 * Instruction Change : **-.17%**

org.pentaho.di.job.entries.ftpsget.JobEntryFTPSGet:
 * Branch Change : **-.53%**
 * Complexity Change : **-.56%**
 * Instruction Change : **-.07%**

org.pentaho.di.job.entries.getpop.MailConnectionMeta:
 * Branch Change :  + 1.00%
 * Complexity Change :  + 1.41%
 * Instruction Change :  + .30%

org.pentaho.di.repository.kdr.KettleDatabaseRepositoryCreationHelper:
 * Branch Change :  + 1.64%
 * Complexity Change :  + .69%
 * Instruction Change :  + 2.43%
 * Line Change :  + 3.70%

org.pentaho.di.trans.cluster.TransSplitter:
 * Branch Change :  + .34%
 * Complexity Change :  + .55%
 * Instruction Change :  + .17%
 * Line Change :  + .14%

org.pentaho.di.trans.steps.checksum.CheckSumMeta:
 * Branch Change : **-1.32%**
 * Complexity Change : **-1.43%**
 * Instruction Change : **-.11%**
 * Line Change : **-.54%**

org.pentaho.di.trans.steps.csvinput.CsvInputMeta:
 * Instruction Change : **-.05%**

org.pentaho.di.trans.steps.datagrid.DataGridMeta:
 * Instruction Change :  + .09%

org.pentaho.di.trans.steps.dimensionlookup.DimensionLookupMeta:
 * Branch Change : **-.66%**
 * Complexity Change : **-.41%**
 * Instruction Change : **-.50%**
 * Line Change : **-.24%**

org.pentaho.di.trans.steps.excelwriter.ExcelWriterStepMeta:
 * Branch Change :  + 1.28%
 * Complexity Change :  + .78%
 * Instruction Change :  + .04%

org.pentaho.di.trans.steps.groupby.GroupByMeta:
 * Branch Change :  + 2.08%
 * Complexity Change :  + 2.11%
 * Instruction Change :  + .28%
 * Line Change :  + .75%

org.pentaho.di.trans.steps.memgroupby.MemoryGroupByMeta:
 * Branch Change : **-2.50%**
 * Complexity Change : **-2.82%**
 * Instruction Change : **-.18%**
 * Line Change : **-.51%**

org.pentaho.di.trans.steps.monetdbbulkloader.MonetDBBulkLoaderMeta:
 * Branch Change : **-13.01%**
 * Complexity Change : **-17.52%**
 * Instruction Change : **-30.46%**
 * Line Change : **-28.16%**
 * Method Change : **-31.25%**

org.pentaho.di.trans.steps.replacestring.ReplaceStringMeta:
 * Instruction Change : **-.07%**

org.pentaho.di.trans.steps.sortedmerge.SortedMergeMeta:
 * Instruction Change :  + .18%

org.pentaho.di.trans.steps.synchronizeaftermerge.SynchronizeAfterMergeMeta:
 * Instruction Change : **-.04%**

org.pentaho.di.trans.steps.systemdata.SystemDataMeta:
 * Branch Change : **-2.04%**
 * Complexity Change : **-2.04%**
 * Instruction Change : **-.32%**
 * Line Change : **-.81%**

org.pentaho.di.trans.steps.uniquerows.UniqueRowsMeta:
 * Instruction Change : **-.18%**

org.pentaho.di.www.DefaultWebServerShutdownHandler:
 * Complexity Change :  + 50.00%
 * Instruction Change :  + 25.00%
 * Line Change :  + 50.00%
 * Method Change :  + 50.00%

org.pentaho.di.www.SlaveServerStatus:
 * Complexity Change :  + 2.04%
 * Instruction Change :  + 2.55%
 * Line Change :  + 3.39%
 * Method Change :  + 2.78%

org.pentaho.di.www.WebServer:
 * Branch Change :  + 2.78%
 * Complexity Change :  + 1.85%
 * Instruction Change :  + .38%
 * Line Change :  + .51%

org.pentaho.di.www.WebServer.new TimerTask() {...}:
 * Instruction Change :  + 27.27%
 * Line Change :  + 33.33%

org.pentaho.di.www.WebServerShutdownHook:
 * Branch Change : **-50.00%**
 * Complexity Change : **-20.00%**

Integration test coverage change:
============
org.pentaho.di.trans.steps.rest.RestMeta:
 * Complexity Change : **-.95%**
 * Instruction Change : **-3.77%**
 * Line Change : **-.85%**
 * Method Change : **-1.47%**

Checkstyle violations:
======================
See: https://github.com/pentaho/pentaho-coding-standards
File /home/buildguy/project/engine/test-src/org/pentaho/di/trans/cluster/TransSplitterTest.java

1. Message: Using a static member import should be avoided - junit.framework.Assert.assertEquals. at Line: 39
2. Message: Unused import - org.mockito.Matchers.anyInt. at Line: 41 Column: 15",True,False,4,72.78333333333333
pentaho/pentaho-kettle/2588,2016-06-03T20:40:51Z,False,5751eb846480fdfca7962cbf,"@mbatchelor ignoring a couple of the tests you've committed recently as they fail intermittently .

@rfellows @DFieldFL @pminutillo please review and merge.  last commit change that hasn't wing-manned yet is removing the unused import reported in the last run",True,False,4,72.78333333333333
pentaho/pentaho-kettle/2588,2016-06-03T21:03:28Z,False,5751f0b26480fdfed0606c72,@matthewtckr tagging you on this also as it looks like testSerialization is using a test class that you have also changed recently,True,False,4,72.78333333333333
troyhollinger/onedegree/1,2016-06-04T19:05:54Z,False,5753269e6480fdfd19413c1a,"Code looks good, but it looks like you ran Grunt from the root of the directory instead of the /public directory. This seems to have made a new /node_modules directory in the root directory that is not needed, and all of it was included in the commit (thats thousands of files we don't need). Can you please remove the /node_modules directory from your commit history and submit a new pull request?",True,False,3,4999.166666666667
troyhollinger/onedegree/1,2016-06-04T19:27:45Z,False,57532bd46480fd015b4efb02,So sorry. I saw this I thought it was for grunt version. Done now. Please re-check. Sorry again.,True,False,3,4999.166666666667
nodezoo/nodezoo-npm/82,2016-06-06T23:38:03Z,False,575609616480fd015b5041d4,"
[![Coverage Status](https://coveralls.io/builds/6486996/badge)](https://coveralls.io/builds/6486996)

Coverage remained the same at 77.5% when pulling **b9c17e34bfd8ce2795068ccb22d5875dd54e7242 on greenkeeper-seneca-entity-1.0.0** into **3da17c6429ce15e22cfffcb25f49063c752ac38b on master**.
",True,False,1,0.0
cms-sw/cmssw/14743,2016-06-07T11:23:57Z,False,5756af896480fdfc8f25c650,"Please replace with LogWarning, LogError or cms::Exception.
Use of std::cout is forbidden!",True,False,16,94820.36666666667
cms-sw/cmssw/14743,2016-06-07T11:24:52Z,False,57579e126480fd0294a323ef,80x reference: https://github.com/cms-sw/cmssw/pull/14742,True,False,16,94820.36666666667
troyhollinger/onedegree/1,2016-06-08T06:25:04Z,False,5757c7b76480fd0294a34841,"Thanks, feature looks good. 

For future reference, please revert configuration values to their previous values before you commit them. We need to keep those the same for me and also others who may be working on this project. 

An ideal situation would be to use homestead as described here https://laravel.com/docs/4.2/homestead",True,False,3,4999.166666666667
mitodl/micromasters/519,2016-06-10T19:24:57Z,False,575b14126480fdfc62342b84,"@amir-qayyum-khan you can remove the intro text, ""We care about your privacy"" and the dotted line from this. I think that will make the form more compact. ",True,False,69,24213.483333333334
mitodl/micromasters/519,2016-06-10T19:28:13Z,False,575b14d36480fdfcf8c851ba,"sure, let me
On Jun 11, 2016 12:25 AM, ""Peter Pinch"" <notifications@github.com> wrote:

> @amir-qayyum-khan <https://github.com/amir-qayyum-khan> you can remove
> the intro text, ""We care about your privacy"" and the dotted line from this.
> I think that will make the form more compact.
>
> —
> You are receiving this because you were mentioned.
> Reply to this email directly, view it on GitHub
> <https://github.com/mitodl/micromasters/pull/519#issuecomment-225273413>,
> or mute the thread
> <https://github.com/notifications/unsubscribe/AJ8rEsD-cRKudkLJVszIyOEfq3H1KCjKks5qKboKgaJpZM4Iy9iv>
> .
>
",True,False,69,24213.483333333334
mitodl/micromasters/519,2016-06-10T20:19:30Z,False,575b20d96480fdfc3be78d6d,I think we want that text (and the dotted line) on the privacy step of the profile fill-out process - maybe a way to do this would be to pull out the actual form into `PrivacyForm` and then `PrivacyTab` can render that text (w/ dotted line) and on the settings page we can just plop another `PrivacyForm` on the page. This is pretty much what I did to pull out the personal and work history forms from the tab components so we could re-use them on the `/users` page.,True,False,69,24213.483333333334
mitodl/micromasters/519,2016-06-10T20:21:30Z,False,575b21516480fdfc623432fc,Thanks Alice. That sounds like a good solution. ,True,False,69,24213.483333333334
DragonetMC_____DragonProxy_____150,2016-06-13T14:34:53Z,True,DragonetMC_____DragonProxy_____150_____225599543,"If Dragonproxy is set to offline mode, yes. But if you have it set to cls or online mode, players have to sign in through their Mojang account and have a valid Minecraft account on it. Authentication via cls is through Dragonet's homepage. If you have set auth to online, then the player will have to enter Mojang e-mail and password in the chat before the proxy sends the player to the server.",True,True,17,804840.4166666666
DragonetMC_____DragonProxy_____150,2016-06-13T14:41:18Z,True,DragonetMC_____DragonProxy_____150_____225601462,"Oh, no idea it had a forums. Thank you",True,True,17,804840.4166666666
DragonetMC_____DragonProxy_____150,2016-06-13T14:42:59Z,True,DragonetMC_____DragonProxy_____150_____225602025,"No problems at all!
",True,True,17,804840.4166666666
mitodl/micromasters/519,2016-06-13T15:27:28Z,False,575ed0ec6480fdfcf8c9d468,Are you sure this is a property of the state? I don't believe we can store functions in the redux store.,True,False,69,24213.483333333334
mitodl/micromasters/519,2016-06-13T15:29:45Z,False,575ed16f6480fdfc8f2a8bf3,"instead of declaring these methods below and binding them to `this` in the constructor you can just use the class property pattern instead:

```js
class SettingsPage extends React.Component {
  updateProfile = profile => {
    ...
  };
}
```

if you declare a class property as an arrow function `this` will already be bound to the instance at run-time (it will do what you expect, basically).",True,False,69,24213.483333333334
mitodl/micromasters/519,2016-06-13T15:30:46Z,False,575ed1b66480fdfcb60363d7,we have a `getPreferredName` function in `util/util.js` which you could use here instead.,True,False,69,24213.483333333334
mitodl/micromasters/519,2016-06-13T15:32:38Z,False,575ed21c6480fdfd78826ac7,"here you aren't passing `saveProfile` and `updateProfile` in to privacy form as props, you'll need to do something like this instead:

```js
<PrivacyForm
  {...this.props}
  saveProfile={this.saveProfile}
  updateProfile={this.updateProfile}
/>
```",True,False,69,24213.483333333334
mitodl/micromasters/519,2016-06-13T15:38:22Z,False,575ed3766480fdfd1947c61d,"You may have an easier time of this if you make `PrivacyPage` subclass the `ProfileFormContainer` component - then you won't have to rewrite the functions to save and update the profile, and you won't need to fiddle with `connect` and all the store business (`ProfileFormContainer` should already have everything you need as instance methods, `this.updateProfile` and so on).",True,False,69,24213.483333333334
mitodl/micromasters/519,2016-06-15T20:12:34Z,False,5761b6b86480fd1e345fb66f,`s/controlls/controls/`,True,False,69,24213.483333333334
mitodl/micromasters/519,2016-06-15T20:17:24Z,False,5761b7db6480fd1eb553ce55,"it might be a little more manageable to deal with the `<ProfileProgressControls>` if you pulled the things we need to be different out into little helper methods, which you could then just call inline in the props we're passing to the `<ProfileProgressControls>` component.",True,False,69,24213.483333333334
mitodl/micromasters/519,2016-06-15T20:19:03Z,False,5761b8416480fd1f2621a6a5,why does `PrivacyTab` need the `isSettingsPage` prop?,True,False,69,24213.483333333334
mitodl/micromasters/519,2016-06-15T20:20:13Z,False,5761b8886480fd1d3110600e,is the url supposed to be `/setting` or `/settings`? @pdpinch ?,True,False,69,24213.483333333334
mitodl/micromasters/519,2016-06-15T20:20:45Z,False,5761b8a56480fd214077cd0b,is `isSettingPage` passed to this component as a prop? what do we need it for here?,True,False,69,24213.483333333334
mitodl/micromasters/519,2016-06-15T20:21:24Z,False,5761b8d16480fd1e345fb80b,I think it might be better to do this in a `componentWillMount` callback instead of a constructor,True,False,69,24213.483333333334
mitodl/micromasters/519,2016-06-16T14:05:08Z,False,5762b2376480fd1c357dd645,@aliceriot how this line know the children attached to this view https://github.com/mitodl/micromasters/blob/master/static/js/containers/UserPage.js#L36,True,False,69,24213.483333333334
mitodl/micromasters/519,2016-06-16T14:16:56Z,False,5762b4e46480fd1c5df4c16c,"I'm not sure what you mean. The `UserPage` component has children because it's declared to be the component to render at a react-router `<Route>` which has sub-routes - take a look in `dashboard_routes.js` for details.

You shouldn't need to fiddle with that though. The methods you need for the settings page (`saveProfile`, `updateProfile`, etc) should all be available at `this.saveProfile` on the `PrivacyPage` if you make `PrivacyPage` subclass `ProfileFormContainer`.",True,False,69,24213.483333333334
mitodl/micromasters/519,2016-06-16T14:18:25Z,False,5762b5426480fd1c9c447398,"You will need to connect `PrivacyPage` to the store, but you can use the `ProfileFormContainer.mapStateToProps` function to cut down on boilerplate.",True,False,69,24213.483333333334
mitodl/micromasters/519,2016-06-16T20:01:11Z,False,576305976480fd1c357e161d,"why not just

```js
let showPreBtn = this.props.location.pathname !== ""/settings/privacy"";
```",True,False,69,24213.483333333334
mitodl/micromasters/519,2016-06-16T20:06:02Z,False,576306b06480fd1eb554a972,"I don't think you need to do this here, you should be able to just render the `PrivacyForm` like this:

```js
<PrivacyForm
  saveProfile={this.saveProfile}
  {...this.props}
/>
```

if you do that you can simplify the stuff going on in `dashboard_routes.js` too, you won't need to have a child route rendering the `<PrivacyForm>` under the route rendering the `<SettingsPage>`.",True,False,69,24213.483333333334
mitodl/micromasters/519,2016-06-16T20:08:46Z,False,576307526480fd1bf6b49044,"when we use params on the `UserPage` component it's a prop that's injected at runtime by react-router, we don't need to worry about it here.",True,False,69,24213.483333333334
mitodl/micromasters/519,2016-06-16T20:09:43Z,False,5763078f6480fd1ffb574978,Since we don't need to inject the `params` prop here you should be able to use `ProfileFormContainer.mapStateToProps` instead of declaring a new state -> props function here.,True,False,69,24213.483333333334
mitodl/micromasters/519,2016-06-16T20:10:00Z,False,576307a06480fd1cd44afb0c,actually I'd even just inline this down where it's used.,True,False,69,24213.483333333334
mitodl/micromasters/519,2016-06-17T11:53:01Z,False,5763e4a06480fd1bba356cef,"it need location, router in props thats why we need to place it in dashboard_routs.",True,False,69,24213.483333333334
mitodl/micromasters/519,2016-06-17T11:57:49Z,False,5763e5c86480fd1c5df577c5,"@aliceriot i dont think so, I think this is injecting because of routs. https://github.com/mitodl/micromasters/blob/master/static/js/dashboard_routes.js#L43, 

I checked it, even if it add this line in settings ``export default connect(ProfileFormContainer.mapStateToProps)(UserPage);`` it do not supply user name param",True,False,69,24213.483333333334
mitodl/micromasters/519,2016-06-17T11:58:21Z,False,5763e5e16480fd1c5456f6e8,https://github.com/mitodl/micromasters/pull/519#discussion_r67499200,True,False,69,24213.483333333334
mitodl/micromasters/519,2016-06-17T12:56:54Z,False,5763f3a56480fd1c5df580ba,"@aliceriot these methods are not working in settings page but working on userpage, can you give me idea how to debug it or is their any issue in code?
- ```componentDidMount()```
- ```componentDidUpdate()```

https://github.com/mitodl/micromasters/pull/519/files#diff-0edec7f878bf81603aeb87f756925f46R17",True,False,69,24213.483333333334
mitodl/micromasters/519,2016-06-17T14:30:58Z,False,576409aa6480fd1c0b753824,"Yes, that's what I meant above, react-router injects the `params` prop because we declare the url parameter for the `/users/:username` page in the route declaration.

We don't need the username here at all, however, because on `/settings` we're never going to be editing another users profile.",True,False,69,24213.483333333334
mitodl/micromasters/519,2016-06-17T14:34:27Z,False,57640a856480fd1bcb688461,"Does that make sense? We need to worry about the `username` url parameter (and check that it is or isn't the same as `SETTINGS.username`) when we're on `/users` because you can visit another user's profile by visiting `/users/some_other_users_username`.

On the settings page we're only concerned with editing the current user's profile, so all of this is ancillary. Compare how we're injecting the profile into the profile form steps (`/profile/personal`, etc) to what we're doing on `/users`.",True,False,69,24213.483333333334
mitodl/micromasters/519,2016-06-20T17:58:23Z,False,57682ec76480fd1bcb6a49db,This should be `SETTINGS_URL`,True,False,69,24213.483333333334
mitodl/micromasters/519,2016-06-20T17:59:52Z,False,57682f2f6480fd208c5e124e,`/settings/<username>` doesn't make sense here since we only want to view the settings for the current user. Why not just `/settings`?,True,False,69,24213.483333333334
mitodl/micromasters/519,2016-06-20T18:00:44Z,False,57682f536480fd1bba37520a,"There's a bunch of comments earlier on the PR addressing this issue, fyi",True,False,69,24213.483333333334
mitodl/micromasters/519,2016-06-20T18:05:40Z,False,576830806480fd1c0b76fd3c,This should be done already in App.js,True,False,69,24213.483333333334
mitodl/micromasters/519,2016-06-20T18:11:19Z,False,576831d66480fd1c35807bf9,This shouldn't be part of the `PrivacyForm` since it's specific to the privacy tab. Can you move it to `PrivacyTab` similar to `EmploymentTab` and `EducationTab`?,True,False,69,24213.483333333334
mitodl/micromasters/519,2016-06-20T21:31:48Z,False,576860c86480fd1c750a7545,"@noisecapella  there is issue with that logic, when i dont use ``fetchProfile`` then in ``render()`` 
 ``const { profiles } = this.props;`` gets undefined. it seems app.js triggers after SettingsPage.js render",True,False,69,24213.483333333334
PowerShell/xSQLServer/67,2016-06-21T12:30:32Z,False,57e2c3846480fdb15bdf701a,"Hi __@luigilink__, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!
    <span>
        In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla.microsoft.com.
    </span>

TTYL, MSBOT;
",True,False,40,132778.58333333334
cms-sw/cmssw/14743,2016-06-21T12:32:24Z,False,576933e56480fd1c8718bac6,"+1

This should be merged. It has been open for far too long. 
No std::cout should be implemented in the next PR...",True,False,16,94820.36666666667
cms-sw/cmssw/14743,2016-06-21T12:32:44Z,False,576a0e226480fd208c5f2a07,"This pull request is fully signed and it will be integrated in one of the next CMSSW_8_1_X IBs (tests are also fine). This pull request requires discussion in the ORP meeting before it's merged. @slava77, @davidlange6, @degano, @smuzaffar",True,False,16,94820.36666666667
PowerShell/xSQLServer/67,2016-06-21T12:36:03Z,False,57e2c3846480fdb15bdf701b,"Check with AppVeyor failed with other ressources not mine
Context Schema Validation of MSFT_xSQLServerRole
    [+] should pass Test-xDscResource 357ms
    [+] should pass Test-xDscSchema 77ms",True,False,40,132778.58333333334
PowerShell/xSQLServer/67,2016-06-21T12:45:58Z,False,57e2c3846480fdb15bdf701c,"__@luigilink__, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR.
<br />Thanks, MSBOT;",True,False,40,132778.58333333334
mitodl/micromasters/519,2016-06-21T13:45:40Z,False,576945196480fd1c54597b73,can we take care of the spacing and layout with css instead of `<br />` tags?,True,False,69,24213.483333333334
mitodl/micromasters/519,2016-06-21T13:59:54Z,False,576948616480fd1c54597e1d,"@aliceriot one of my test is failing, any idea how to debug? https://github.com/mitodl/micromasters/pull/519/files#diff-8a199ab411c143cdcd0f260400602486R104
```trace
1) SettingsPage Authenticated settings page save privacy form save privacy changes:
     TypeError: Cannot read property 'then' of undefined
      at index.js:74:12
      at node_modules/redux-thunk/lib/index.js:12:16
      at SettingsPage.saveProfile (ProfileFormContainer.js:138:14)
      at ProfileProgressControls.saveProfileStep (profile_edit.js:280:10)
      at ProfileProgressControls._this.saveAndContinue (ProfileProgressControls.js:24:21)
      at Object.invokeGuardedCallback [as invokeGuardedCallbackWithCatch] (node_modules/react/lib/ReactErrorUtils.js:26:12)
      at executeDispatch (node_modules/react/lib/EventPluginUtils.js:85:21)
      at Object.executeDispatchesInOrder (node_modules/react/lib/EventPluginUtils.js:110:5)
      at executeDispatchesAndRelease (node_modules/react/lib/EventPluginHub.js:42:22)
      at executeDispatchesAndReleaseSimulated (node_modules/react/lib/EventPluginHub.js:50:10)
      at forEachAccumulated (node_modules/react/lib/forEachAccumulated.js:26:8)
      at Object.EventPluginHub.processEventQueue (node_modules/react/lib/EventPluginHub.js:213:7)
      at node_modules/react/lib/ReactTestUtils.js:436:22
      at ReactDefaultBatchingStrategyTransaction.Mixin.perform (node_modules/react/lib/Transaction.js:136:20)
      at Object.ReactDefaultBatchingStrategy.batchedUpdates (node_modules/react/lib/ReactDefaultBatchingStrategy.js:63:19)
      at Object.batchedUpdates (node_modules/react/lib/ReactUpdates.js:98:20)
      at Object.click (node_modules/react/lib/ReactTestUtils.js:434:18)
      at SettingsPage_test.js:75:28
      at node_modules/redux-asserts/lib/index.js:117:9
      at IntegrationTestHelper.listenForActions (node_modules/redux-asserts/lib/index.js:91:12)
      at confirmSaveButtonBehavior (SettingsPage_test.js:74:14)
      at SettingsPage_test.js:104:18
```
",True,False,69,24213.483333333334
mitodl/micromasters/519,2016-06-21T14:01:04Z,False,576948bc6480fd1bf6b78905,"I don't think you need to do this wrangling with `React.Children.map` here - there's a concrete reason why we use this pattern on `ProfileFormContainer` to inject props into `this.children`, but we don't need to do so here.

When we're subclassing `ProfileFormContainer` on the `UserPage` and `ProfilePage` components we don't know what components we'll need to inject props into at runtime - which components are going to be found on `this.props.children` is determined by what route we're at, and which components `react-router` renders into `this.props.children`. Here we have complete knowledge of what components will be rendered at runtime, so we don't need this more general pattern.

You should be able to instead just do something like this:

```js
<PrivacyForm
  {...this.props}
  updateProfile={this.updateProfile.bind(this, isEdit)}
  saveProfile={this.saveProfile.bind(this, isEdit)}
  clearProfileEdit={this.clearProfileEdit}
  fetchProfile={this.fetchProfile}
/>
```",True,False,69,24213.483333333334
mitodl/micromasters/519,2016-06-21T14:17:07Z,False,57694c746480fd1fac66185a,(this would apply also for the `privacyControlsWithProps` method below),True,False,69,24213.483333333334
mitodl/micromasters/519,2016-06-21T14:20:23Z,False,57694d366480fd1c545981d8,"I think it would overall make more sense to have the parent component worry about layout, and have the `PrivacyForm` just return basically the form field and wire everything up correctly, so when I want to plop it on, say, `PrivacyTab` I'd just do somehting like

```js
<Cell col={12}>
  <PrivacyForm {...this.props} otherProps={...} />
</Cell>
```
That way the layout is the responsibility of the context where we actually want to render it, and the `PrivacyForm` component ends up being a bit more flexible and minimal.",True,False,69,24213.483333333334
mitodl/micromasters/519,2016-06-21T14:31:03Z,False,57694fb96480fd1bf6b78ec6,Maybe we should change `fetchProfile` to take in the username explicitly? Then the calling function can determine which username to use,True,False,69,24213.483333333334
mitodl/micromasters/519,2016-06-21T14:33:09Z,False,576950376480fd1eb557ac10,"I think that would make more sense, as is were just increasing the degree to which it's coupled to particular use-cases.",True,False,69,24213.483333333334
mitodl/micromasters/519,2016-06-21T14:34:15Z,False,576950746480fd1ffb5a364f,"you could also bind `this.updateProfile` and `this.saveProfile` in the constructor, kind of preference which one you think is cleaner.",True,False,69,24213.483333333334
mitodl/micromasters/519,2016-06-22T22:08:33Z,False,576b0c656480fd1d31158a3d,Done @noisecapella  @aliceriot ,True,False,69,24213.483333333334
mitodl/micromasters/519,2016-06-23T13:48:29Z,False,576be8b56480fd1c871a5d32,"thanks, looking now",True,False,69,24213.483333333334
mitodl/micromasters/519,2016-06-23T13:50:49Z,False,576be9566480fd1e34654388,"Here you have `PrivacyForm` inside of a `<Cell col={12}>` component, this makes the `<Grid>` and `<Cell>` components declared in the render method of `PrivacyForm` unnecessary - if you were getting the warning about 'adjacent JSX elements' a simple solution is to wrap the `<h4>` element and the call to `boundRadioGroupField` in a `<div>`.",True,False,69,24213.483333333334
mitodl/micromasters/519,2016-06-23T13:53:37Z,False,576be9ea6480fd1c9c49423b,(same applies below in `SettingsPage`),True,False,69,24213.483333333334
mitodl/micromasters/519,2016-06-23T13:55:19Z,False,576bea626480fd1c2b2be029,there's a function in `util.js` called `getPreferredName` that you may want to use here (it's tested and so on).,True,False,69,24213.483333333334
mitodl/micromasters/519,2016-06-23T13:56:01Z,False,576bea7d6480fd21407d4669,"It just takes a profile object as an argument and get's the most up-to-date preferred name (`Profile.preferred_name` || `SETTINGS.preferred_name`, etc).",True,False,69,24213.483333333334
mitodl/micromasters/519,2016-06-23T14:00:06Z,False,576beb756480fd208c604701,functionality looks good!,True,False,69,24213.483333333334
mitodl/micromasters/519,2016-06-23T14:01:21Z,False,576bebc26480fd1c2b2be165,"could you add flow typechecking to this file? you can do so by adding a comment on the first line like this:

```js
// @flow
```",True,False,69,24213.483333333334
mitodl/micromasters/519,2016-06-23T14:15:59Z,False,576bef326480fd1fac67b0cb,I tried it out and it passes with no changes,True,False,69,24213.483333333334
mitodl/micromasters/519,2016-06-23T14:16:34Z,False,576bef506480fd208c604aa6,"it'd be good to add flow to this as well, looks like it also passes without modification.",True,False,69,24213.483333333334
mitodl/micromasters/519,2016-06-23T14:17:46Z,False,576bef926480fd208c604acd,"couple of small comments on the code, this is looking good though!",True,False,69,24213.483333333334
mitodl/micromasters/519,2016-06-23T20:43:39Z,False,576c4a3d6480fd1f262752e5,"I think this looks pretty good, but the typechecker isn't passing. Would you be able to fix the type errors? The first one I think is that you need to add a semicolon at the end of the `mapStateToProps` method on `ProfileFormContainer`, then after that there are like 3 type mismatch errors.

If you haven't played with it yet you can run the typechecker by doing `docker-compose run watch npm runs-script flow`.",True,False,69,24213.483333333334
mitodl/micromasters/519,2016-06-23T20:44:06Z,False,576cbd766480fd1bcb6cfc36,"or wait, I think you're on OSX so maybe that's just `npm run-script flow`.",True,False,69,24213.483333333334
mitodl/micromasters/519,2016-06-24T10:19:26Z,False,576d093f6480fd21407df3b3,Done @aliceriot ,True,False,69,24213.483333333334
mitodl/micromasters/519,2016-06-24T13:56:01Z,False,576e052c6480fd1c0b7a3e72,"would you mind switching this to a flow-style props type declaration? That would look like:

```js
import type { Profile } from '../flow/profileTypes';
import type { UIState } from '../reducers/ui';

class PrivacyForm extends ProfileFormFields {
  props: {
    profile:        Profile,
    ui:             UIState,
    updateProfile:  Function,
  };

  ...
}
```

this lets flow check the types for things on `this.props` properly, so it can know the type of, for instance, `profile.preferred_name`.",True,False,69,24213.483333333334
mitodl/micromasters/519,2016-06-24T13:56:53Z,False,576d3c3e6480fd1c35836648,"same comment here, would you mind adding a `props` declaration? 

something like:

```js
import type { Profile } from '../flow/profileTypes';
import type { UIState } from '../reducers/ui';

class SettingsPage extends ProfileFormContainer {
  props: {
    profiles: {[key: string]: Profile}, 
    dispatch: Function,
    ui:       UIState,
  };

  ...
}
```",True,False,69,24213.483333333334
mitodl/micromasters/519,2016-06-24T13:57:21Z,False,576d3c696480fd1be1e4df4b,"one little tweak, almost there! back at you @amir-qayyum-khan ",True,False,69,24213.483333333334
mitodl/micromasters/519,2016-06-24T20:01:18Z,False,576d91926480fd1c545bb3ae,done @aliceriot ,True,False,69,24213.483333333334
mitodl/micromasters/519,2016-06-24T20:01:58Z,False,576d91ba6480fd1c545bb3c4,"cool, taking a look now",True,False,69,24213.483333333334
mitodl/micromasters/519,2016-06-24T20:13:57Z,False,576d94a76480fd1bba3a8a64,"Sorry, I just noticed this. I deleted these two methods (`componentDidUpdate` and `componentDidMount`) and it seems like everything is taken care of by `App`, which also calls these methods. 

Can you:

- delete those two methods
- add a default value to `profile` (e.g. `profile = {};`) in the render method, so that if the profile GET request hasn't come back yet we have something to pass to `ProfileProgressControls` (this prevents a required prop error).

sorry! I should have realized that earlier >_<",True,False,69,24213.483333333334
mitodl/micromasters/519,2016-06-24T20:16:42Z,False,576d95536480fd1ffb5c843b,"one little thing, then I think it should be good!",True,False,69,24213.483333333334
mitodl/micromasters/519,2016-06-24T20:29:14Z,False,576d98466480fd1c9c4a3a1c,done @aliceriot ,True,False,69,24213.483333333334
mitodl/micromasters/519,2016-06-24T20:38:02Z,False,576d9a386480fd1be1e512a3,"hrm, so as is this isn't passing the typechecker - here's what we can do to make it work:

- remove the object literal for `profile` in `render` on `Settings` (so just go back to `let profile;`
- remove `.isRequired` from the profile propType on `ProfileProgressControls`.",True,False,69,24213.483333333334
mitodl/micromasters/519,2016-06-24T21:15:17Z,False,576da2ec6480fd1d31170d9e,"@aliceriot still tests are failing, after doing above 2 steps",True,False,69,24213.483333333334
mitodl/micromasters/519,2016-06-24T21:27:47Z,False,576da5e76480fd1ffb5c8d02,@aliceriot fixed issue by updating action flags in test suit,True,False,69,24213.483333333334
mitodl/micromasters/519,2016-06-27T14:58:26Z,False,57713f1e6480fd1ffb5df37b,merge it! :shipit: :+1: :confetti_ball: :fireworks: ,True,False,69,24213.483333333334
cms-sw/cmssw/14743,2016-06-30T10:23:34Z,False,5774f32c6480fd21408226ee,"@vkhristenko @dmitrijus - yes, this needs to be changed
",True,False,16,94820.36666666667
cms-sw/cmssw/14743,2016-06-30T10:25:57Z,False,5774f3c16480fd1c2b3080de,dqm doesn't seem like the place we should be defining adc2fC. I guess this is already done elsewhere?,True,False,16,94820.36666666667
cms-sw/cmssw/14743,2016-06-30T10:59:25Z,False,5774fb8f6480fd2140822bd9,"@davidlange6 this array is for QIE10. As Phase 1 is in dev stage, I've included that in here, but it's used only for Onliny DQM",True,False,16,94820.36666666667
cms-sw/cmssw/14743,2016-06-30T11:03:34Z,False,5774fc8b6480fd1c9c4e269b,"we seem to have similar yet different arrays defined for qie10 elsewhere? no?

> On Jun 30, 2016, at 12:59 PM, Viktor Khristenko <notifications@github.com> wrote:
> 
> @davidlange6 this array is for QIE10. As Phase 1 is in dev stage, I've included that in here, but it's used only for Onliny DQM
> 
> —
> You are receiving this because you were mentioned.
> Reply to this email directly, view it on GitHub, or mute the thread.
> 

",True,False,16,94820.36666666667
iCHAIT/awesome-macOS/315,2016-07-01T13:38:32Z,False,578792476480fd8f79f912ba,The Mac app is simply an Electron wrapper around a web application. The application itself is quite alright although only really useful in a team which makes this a subscription app with a cloud component. Therefore 👎 from me.,True,False,2,18704.583333333332
sonata-project/SonataPageBundle/688,2016-07-09T14:32:07Z,False,59fe39906480fd847d13cd50,"It is more likely a bug 
",True,False,21,695972.8666666667
w3c/preload/71,2016-07-10T13:54:49Z,False,578acea06480fd24284b3d10,Fixed the WebIDL while I was at it. ,True,False,4,129647.41666666667
w3c/preload/71,2016-07-11T07:37:04Z,False,578acea06480fd24284b3d11,LGTM,True,False,4,129647.41666666667
cms-sw/cmssw/14743,2016-07-11T13:08:57Z,False,578b19ca6480fd1cb0446e44,"Concerning adc2FC conversion for QIE10: 

(1) ""coder"" prepared (generic piece both for QIE8/QIE10,  as QIE8/QIE10 comes from HcalQIETypes in DB and defines QIE shape for concrete DetId  ""behind the scene""):
http://cmslxr.fnal.gov/source/RecoLocalCalo/HcalRecProducers/src/HcalSimpleReconstructor.cc?v=CMSSW_8_1_0_pre8#0272

(2)
then used in Digi-> CaloSamples (fC) conversion
 http://cmslxr.fnal.gov/source/RecoLocalCalo/HcalRecAlgos/src/HcalSimpleRecAlgo.cc?v=CMSSW_8_1_0_pre8#0174

Adding NB: this is for possible future usage, I'm not suggesting to implement it to case even more approval delay for this PR... 
",True,False,16,94820.36666666667
sonata-project/SonataPageBundle/688,2016-07-12T07:46:30Z,False,59fe39906480fd847d13cd51,"You wrote: `I am targetting this branch, because this is a non-BC fix`

but it IS BC, can you change that please?
",True,False,21,695972.8666666667
sonata-project/SonataPageBundle/688,2016-07-12T08:08:59Z,False,59fe39906480fd847d13cd52,"@OskarStark should I close this PR and #689 and create new ones with master as target?
",True,False,21,695972.8666666667
sonata-project/SonataPageBundle/688,2016-07-12T08:10:05Z,False,59fe39906480fd847d13cd53,"> @OskarStark should I close this PR and #689 and create new ones with master as target?

No i mean, it is BC, it isn't a BC break !

Just change your first sentence please, the branch is correct 😄 
",True,False,21,695972.8666666667
sonata-project/SonataPageBundle/688,2016-07-12T08:14:48Z,False,59fe39906480fd847d13cd54,"@OskarStark done
",True,False,21,695972.8666666667
sonata-project/SonataPageBundle/688,2016-07-12T08:30:36Z,False,59fe39906480fd847d13cd55,"Could you please add a test for this?
",True,False,21,695972.8666666667
w3c/preload/71,2016-07-13T23:14:13Z,False,5786cb4c6480fd93e472e790,👍 thanks for this!,True,False,4,129647.41666666667
iCHAIT/awesome-macOS/315,2016-07-14T13:23:07Z,False,578792466480fd92f777a4da,Will close following @herrbischoff's recommendation,True,False,2,18704.583333333332
gentoo-haskell/gentoo-haskell/497,2016-07-17T12:13:26Z,False,578b76fe6480fd1c3e87ec2d,Dropping ':=' looks wrong.,True,False,7,258.8333333333333
gentoo-haskell/gentoo-haskell/497,2016-07-17T12:14:48Z,False,578b77516480fd222dc1a0c9,"Would be nice to have one non-live ebuild that works with new trifecta.
Adding current git snapshot if it works would be ideal.",True,False,7,258.8333333333333
gentoo-haskell/gentoo-haskell/497,2016-07-17T12:15:43Z,False,578b77006480fd1bd46a225d,"okay, I will change this back but hackport did this",True,False,7,258.8333333333333
gentoo-haskell/gentoo-haskell/497,2016-07-17T12:17:42Z,False,578b77696480fd25eaa834f2,"@trofi I see, how would you like to version snapshot 0.13-pre${date}?",True,False,7,258.8333333333333
gentoo-haskell/gentoo-haskell/497,2016-07-17T14:20:44Z,False,578b94436480fd1bd46a2fa5,Sounds good. The correct syntax is 0.13_pre${date}.,True,False,7,258.8333333333333
gentoo-haskell/gentoo-haskell/497,2016-07-17T15:31:01Z,False,578ba4b96480fd1be99ebad8,@trofi added,True,False,7,258.8333333333333
gentoo-haskell/gentoo-haskell/497,2016-07-17T16:32:16Z,False,578bb3156480fd1be99ec340,Looks good. Feel free to push it.,True,False,7,258.8333333333333
guusw/unnamed-sdvx-clone/9,2016-08-02T18:38:15Z,False,57a0e8a06480fd2c8be0aee9,"GCC/Clang seems to be unable to take this from the base class, therefore it needs to be declared in the subclass too.",True,False,11,2565.233333333333
guusw/unnamed-sdvx-clone/9,2016-08-02T18:40:11Z,False,57a0e9146480fd2d35a99548,"GCC/Clang means something else here, to make sure the class method is called, add a ```this``` for safety here.
Got some strange compile error here.",True,False,11,2565.233333333333
guusw/unnamed-sdvx-clone/9,2016-08-02T18:42:17Z,False,57a0e9906480fd3146aa28cf,Doesn't work when a anonymous lambda function is passed to this otherwise.,True,False,11,2565.233333333333
guusw/unnamed-sdvx-clone/9,2016-08-02T18:43:51Z,False,57a0e9ed6480fd359824f3a5,Windows-**only** header!!! Doesn't exists elsewhere.,True,False,11,2565.233333333333
guusw/unnamed-sdvx-clone/9,2016-08-02T18:44:05Z,False,57a0ea036480fd2cb2d77b7b,INT_MAX,True,False,11,2565.233333333333
guusw/unnamed-sdvx-clone/9,2016-08-02T18:45:47Z,False,57a0ea646480fd363991d703,I guess this is a Windows API specific thing??,True,False,11,2565.233333333333
guusw/unnamed-sdvx-clone/9,2016-08-02T19:03:46Z,False,57a0ee956480fd369ef05c67,"One more important thing to say :smile: 

```
../Shared/libShared.a(Path.cpp.o): In function `Path::GetTemporaryPath()':
Path.cpp:(.text+0x138): warning: the use of `mktemp' is dangerous, better use `mkstemp' or `mkdtemp'
```

Please don't use ```mktemp```.
",True,False,11,2565.233333333333
actcat/sideci_php_sandbox/191,2016-08-03T10:19:32Z,False,57a1c5386480fd45552452d5,"__[staging][code_sniffer]__
* Spaces must be used to indent lines; tabs are not allowed
* Line indented incorrectly; expected 4 spaces, found 1

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:19:32Z,False,57a1c5386480fd45552452d4,"__[staging][code_sniffer]__
* Spaces must be used to indent lines; tabs are not allowed
* Line indented incorrectly; expected 4 spaces, found 1

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:19:32Z,False,57a1c5386480fd45552452d6,"__[staging][code_sniffer]__
* Line indented incorrectly; expected at least 4 spaces, found 0

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:19:33Z,False,57a1c5386480fd45552452d7,"__[staging][code_sniffer]__
* Expected 1 space(s) before asterisk; 0 found
* Missing @return tag in function comment

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:19:33Z,False,57a1c5386480fd45552452de,"__[staging][code_sniffer]__
* Line indented incorrectly; expected 4 spaces, found 0
* Missing function doc comment
* Opening brace should be on a new line

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:19:33Z,False,57a1c5386480fd45552452d8,"__[staging][code_sniffer]__
* Line indented incorrectly; expected 4 spaces, found 0
* Expected 2 blank lines before function; 1 found
* Opening brace should be on a new line

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:19:33Z,False,57a1c5386480fd45552452d9,"__[staging][code_sniffer]__
* Line indented incorrectly; expected 4 spaces, found 0
* Expected //end display1()
* Expected 1 blank line before closing function brace; 0 found
* Expected 2 blank lines after function; 0 found

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:19:33Z,False,57a1c5386480fd45552452da,"__[staging][code_sniffer]__
* Line indented incorrectly; expected 4 spaces, found 0
* Missing function doc comment
* Opening brace should be on a new line

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:19:33Z,False,57a1c5386480fd45552452db,"__[staging][code_sniffer]__
* Line indented incorrectly; expected 4 spaces, found 0
* Expected //end display2()
* Expected 1 blank line before closing function brace; 0 found
* Expected 2 blank lines after function; 0 found

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:19:33Z,False,57a1c5386480fd45552452dc,"__[staging][code_sniffer]__
* Line indented incorrectly; expected 4 spaces, found 0
* Missing function doc comment
* Opening brace should be on a new line

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:19:33Z,False,57a1c5386480fd45552452dd,"__[staging][code_sniffer]__
* Line indented incorrectly; expected 4 spaces, found 0
* Expected //end display3()
* Expected 1 blank line before closing function brace; 0 found
* Expected 2 blank lines after function; 0 found

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:19:34Z,False,57a1c5386480fd45552452e6,"__[staging][phpmd]__
* Avoid excessively long variable names like $cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc. Keep variable name length under 20.
* Avoid unused local variables such as '$cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc'.

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:19:34Z,False,57a1c5386480fd45552452e5,"__[staging][code_sniffer]__
* Line indented incorrectly; expected 4 spaces, found 0
* Expected //end display6()
* Expected 1 blank line before closing function brace; 0 found
* Expected 2 blank lines after function; 0 found

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:19:34Z,False,57a1c5386480fd45552452e4,"__[staging][phpmd]__
* Avoid unused local variables such as '$bbbbbbbbbb'.

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:19:34Z,False,57a1c5386480fd45552452e2,"__[staging][phpmd]__
* Avoid unused local variables such as '$eeeeeeeeee'.

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:19:34Z,False,57a1c5386480fd45552452e1,"__[staging][code_sniffer]__
* Line indented incorrectly; expected 4 spaces, found 0
* Expected //end display5()
* Expected 1 blank line before closing function brace; 0 found
* Expected 2 blank lines after function; 0 found

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:19:34Z,False,57a1c5386480fd45552452e0,"__[staging][code_sniffer]__
* Line indented incorrectly; expected 4 spaces, found 0
* Missing function doc comment
* Opening brace should be on a new line

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:19:34Z,False,57a1c5386480fd45552452df,"__[staging][code_sniffer]__
* Line indented incorrectly; expected 4 spaces, found 0
* Expected //end display4()
* Expected 1 blank line before closing function brace; 0 found
* Expected 2 blank lines after function; 0 found

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:19:34Z,False,57a1c5386480fd45552452e3,"__[staging][code_sniffer]__
* Line indented incorrectly; expected 4 spaces, found 0
* Missing function doc comment
* Opening brace should be on a new line

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:19:35Z,False,57a1c5386480fd45552452f2,"__[code_sniffer]__
* Line indented incorrectly; expected 4 spaces, found 0
* Expected 2 blank lines before function; 1 found
* Opening brace should be on a new line

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:19:35Z,False,57a1c5386480fd45552452ec,"__[staging][phpmd]__
* The method example() has a Cyclomatic Complexity of 11. The configured cyclomatic complexity threshold is 10.

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:19:35Z,False,57a1c5386480fd45552452eb,"__[staging][code_sniffer]__
* Line indented incorrectly; expected 4 spaces, found 0
* Missing function doc comment
* Opening brace should be on a new line

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:19:35Z,False,57a1c5386480fd45552452ea,"__[code_sniffer]__
* Spaces must be used to indent lines; tabs are not allowed
* Line indented incorrectly; expected 4 spaces, found 1

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:19:35Z,False,57a1c5386480fd45552452e9,"__[staging][phpmd]__
* The method get顧客名 is not named in camelCase.

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:19:35Z,False,57a1c5386480fd45552452ed,"__[code_sniffer]__
* Line indented incorrectly; expected at least 4 spaces, found 0

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:19:35Z,False,57a1c5386480fd45552452ee,"__[staging][code_sniffer]__
* Line indented incorrectly; expected 4 spaces, found 0
* Expected //end display7()
* Expected 1 blank line before closing function brace; 0 found
* Expected 2 blank lines after function; 0 found

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:19:35Z,False,57a1c5386480fd45552452ef,"__[code_sniffer]__
* Expected 1 space(s) before asterisk; 0 found
* Missing @return tag in function comment

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:19:35Z,False,57a1c5386480fd45552452f1,"__[staging][phpmd]__
* Avoid variables with short names like $a. Configured minimum length is 3.
* Avoid variables with short names like $b. Configured minimum length is 3.
* Avoid unused local variables such as '$a'.
* Avoid unused local variables such as '$b'.

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:19:35Z,False,57a1c5386480fd45552452e7,"__[staging][phpmd]__
* The method set顧客名 is not named in camelCase.
* Avoid variables with short names like $v. Configured minimum length is 3.

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:19:35Z,False,57a1c5386480fd45552452e8,"__[code_sniffer]__
* Spaces must be used to indent lines; tabs are not allowed
* Line indented incorrectly; expected 4 spaces, found 1

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:19:35Z,False,57a1c5386480fd45552452f0,"__[staging][code_sniffer]__
* Line indented incorrectly; expected 4 spaces, found 0
* Missing function doc comment
* Opening brace should be on a new line

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:19:35Z,False,57a1c5386480fd45552452f3,"__[staging][code_sniffer]__
* Line indented incorrectly; expected 4 spaces, found 0
* Expected //end display8()
* Expected 1 blank line before closing function brace; 0 found
* Expected 2 blank lines after function; 0 found

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:19:36Z,False,57a1c5386480fd45552452f8,"__[code_sniffer]__
* Line indented incorrectly; expected 4 spaces, found 0
* Missing function doc comment
* Opening brace should be on a new line

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:19:36Z,False,57a1c5386480fd45552452f9,"__[staging][code_sniffer]__
* Line indented incorrectly; expected 4 spaces, found 0
* Expected //end display9()
* Expected 1 blank line before closing function brace; 0 found
* Expected 2 blank lines after function; 0 found

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:19:36Z,False,57a1c53f6480fd44ea9dfee3,"__[staging][phpmd]__
* The method example uses an else expression. Else is never necessary and you can simplify the code to work without else.

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:19:36Z,False,57a1c53f6480fd45a81a0731,"__[code_sniffer]__
* Line indented incorrectly; expected 4 spaces, found 0
* Expected //end display2()
* Expected 1 blank line before closing function brace; 0 found
* Expected 2 blank lines after function; 0 found

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:19:36Z,False,57a1c53f6480fd45552452fb,"__[staging][code_sniffer]__
* Line indented incorrectly; expected 4 spaces, found 0
* Missing function doc comment
* Opening brace should be on a new line

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:19:36Z,False,57a1c53f6480fd4aa48e88d5,"__[staging][phpmd]__
* Avoid variables with short names like $c. Configured minimum length is 3.
* Avoid variables with short names like $d. Configured minimum length is 3.

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:19:36Z,False,57a1c5386480fd45552452f5,"__[code_sniffer]__
* Line indented incorrectly; expected 4 spaces, found 0
* Expected //end display1()
* Expected 1 blank line before closing function brace; 0 found
* Expected 2 blank lines after function; 0 found

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:19:36Z,False,57a1c5386480fd45552452f4,"__[staging][phpmd]__
* Avoid variables with short names like $a1. Configured minimum length is 3.
* Avoid variables with short names like $b1. Configured minimum length is 3.
* Avoid unused local variables such as '$a1'.
* Avoid unused local variables such as '$b1'.

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:19:36Z,False,57a1c53f6480fd45bd05d2c9,"__[code_sniffer]__
* Line indented incorrectly; expected 4 spaces, found 0
* Missing function doc comment
* Opening brace should be on a new line

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:19:36Z,False,57a1c53f6480fd48884df4fd,"__[staging][phpmd]__
* Avoid variables with short names like $e. Configured minimum length is 3.
* Avoid variables with short names like $f. Configured minimum length is 3.
* Avoid unused local variables such as '$e'.
* Avoid unused local variables such as '$f'.

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:19:36Z,False,57a1c53f6480fd45290d4708,"__[phpmd]__
* Avoid unused local variables such as '$eeeeeeeeee'.

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:19:36Z,False,57a1c53f6480fd49db5d832d,"__[staging][code_sniffer]__
* Line indented incorrectly; expected 4 spaces, found 0
* Expected //end display10()
* Expected 1 blank line before closing function brace; 0 found
* Expected 2 blank lines after function; 0 found

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:19:36Z,False,57a1c53f6480fd4b617c3a60,"__[phpmd]__
* Avoid unused local variables such as '$bbbbbbbbbb'.

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:19:36Z,False,57a1c53f6480fd46beae8a6e,"__[code_sniffer]__
* Line indented incorrectly; expected 4 spaces, found 0
* Expected //end display3()
* Expected 1 blank line before closing function brace; 0 found
* Expected 2 blank lines after function; 0 found

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:19:36Z,False,57a1c5386480fd45552452f6,"__[staging][code_sniffer]__
* Line indented incorrectly; expected 4 spaces, found 0
* Missing function doc comment
* Opening brace should be on a new line

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:19:36Z,False,57a1c5386480fd45552452f7,"__[staging][phpmd]__
* Avoid variables with short names like $a2. Configured minimum length is 3.
* Avoid variables with short names like $b2. Configured minimum length is 3.
* Avoid unused local variables such as '$a2'.
* Avoid unused local variables such as '$b2'.

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:19:37Z,False,57a1c53f6480fd4a21710867,"__[phpmd]__
* The method set顧客名 is not named in camelCase.
* Avoid variables with short names like $v. Configured minimum length is 3.

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:19:37Z,False,57a1c53f6480fd4581e530f4,"__[code_sniffer]__
* Line indented incorrectly; expected 4 spaces, found 0
* Missing function doc comment
* Opening brace should be on a new line

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:19:37Z,False,57a1c53f6480fd44d5eb3996,"__[phpmd]__
* The method get顧客名 is not named in camelCase.

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:19:37Z,False,57a1c53f6480fd45da5403a1,"__[code_sniffer]__
* Line indented incorrectly; expected 4 spaces, found 0
* Expected //end display4()
* Expected 1 blank line before closing function brace; 0 found
* Expected 2 blank lines after function; 0 found

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:19:37Z,False,57a1c53f6480fd4c0fa8b30d,"__[phpmd]__
* The method example() has a Cyclomatic Complexity of 11. The configured cyclomatic complexity threshold is 10.

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:19:37Z,False,57a1c53f6480fd4fd7f0951c,"__[code_sniffer]__
* Line indented incorrectly; expected 4 spaces, found 0
* Missing function doc comment
* Opening brace should be on a new line

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:19:37Z,False,57a1c53f6480fd4aebe1831b,"__[phpmd]__
* Avoid variables with short names like $a. Configured minimum length is 3.
* Avoid variables with short names like $b. Configured minimum length is 3.
* Avoid unused local variables such as '$a'.
* Avoid unused local variables such as '$b'.

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:19:37Z,False,57a1c53f6480fd4500e32c9d,"__[code_sniffer]__
* Line indented incorrectly; expected 4 spaces, found 0
* Expected //end display5()
* Expected 1 blank line before closing function brace; 0 found
* Expected 2 blank lines after function; 0 found

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:19:37Z,False,57a1c53f6480fd4d77b0f9af,"__[phpmd]__
* Avoid variables with short names like $a1. Configured minimum length is 3.
* Avoid variables with short names like $b1. Configured minimum length is 3.
* Avoid unused local variables such as '$a1'.
* Avoid unused local variables such as '$b1'.

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:19:37Z,False,57a1c53f6480fd474fd9e7dc,"__[phpmd]__
* Avoid excessively long variable names like $cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc. Keep variable name length under 20.
* Avoid unused local variables such as '$cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc'.

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:19:38Z,False,57a1c5466480fd45290d470c,"__[phpmd]__
* The method example uses an else expression. Else is never necessary and you can simplify the code to work without else.

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:19:38Z,False,57a1c53f6480fd44bf31b60b,"__[code_sniffer]__
* Line indented incorrectly; expected 4 spaces, found 0
* Expected //end display8()
* Expected 1 blank line before closing function brace; 0 found
* Expected 2 blank lines after function; 0 found

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:19:38Z,False,57a1c53f6480fd4bc5f5a47e,"__[phpmd]__
* Avoid variables with short names like $e. Configured minimum length is 3.
* Avoid variables with short names like $f. Configured minimum length is 3.
* Avoid unused local variables such as '$e'.
* Avoid unused local variables such as '$f'.

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:19:38Z,False,57a1c53f6480fd4811d119da,"__[code_sniffer]__
* Line indented incorrectly; expected 4 spaces, found 0
* Missing function doc comment
* Opening brace should be on a new line

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:19:38Z,False,57a1c53f6480fd459339adbb,"__[code_sniffer]__
* Line indented incorrectly; expected 4 spaces, found 0
* Expected //end display7()
* Expected 1 blank line before closing function brace; 0 found
* Expected 2 blank lines after function; 0 found

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:19:38Z,False,57a1c53f6480fd4518ebd2ba,"__[phpmd]__
* Avoid variables with short names like $a2. Configured minimum length is 3.
* Avoid variables with short names like $b2. Configured minimum length is 3.
* Avoid unused local variables such as '$a2'.
* Avoid unused local variables such as '$b2'.

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:19:38Z,False,57a1c53f6480fd4f2b6b8263,"__[code_sniffer]__
* Line indented incorrectly; expected 4 spaces, found 0
* Missing function doc comment
* Opening brace should be on a new line

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:19:38Z,False,57a1c53f6480fd456aa38638,"__[phpmd]__
* The method example uses an else expression. Else is never necessary and you can simplify the code to work without else.

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:19:38Z,False,57a1c53f6480fd4c7d8219dd,"__[code_sniffer]__
* Line indented incorrectly; expected 4 spaces, found 0
* Expected //end display6()
* Expected 1 blank line before closing function brace; 0 found
* Expected 2 blank lines after function; 0 found

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:19:38Z,False,57a1c5466480fd4eba794ca0,"__[code_sniffer]__
* Line indented incorrectly; expected 4 spaces, found 0
* Missing function doc comment
* Opening brace should be on a new line

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:19:38Z,False,57a1c53f6480fd4e65119d68,"__[code_sniffer]__
* Line indented incorrectly; expected 4 spaces, found 0
* Missing function doc comment
* Opening brace should be on a new line

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:19:38Z,False,57a1c53f6480fd4cf3efdac2,"__[phpmd]__
* Avoid variables with short names like $c. Configured minimum length is 3.
* Avoid variables with short names like $d. Configured minimum length is 3.

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:19:38Z,False,57a1c5406480fd4500e32c9f,"__[phpmd]__
* Avoid variables with short names like $h. Configured minimum length is 3.
* Avoid unused local variables such as '$h'.

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:21:38Z,False,57a1c5ba6480fd464107e8dc,"__[phpmd]__
* Avoid variables with short names like $z. Configured minimum length is 3.
* Avoid unused local variables such as '$z'.

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:22:24Z,False,57a1c5ef6480fd459339ae15,"__[code_sniffer]__
* Line indented incorrectly; expected 4 spaces, found 0
* Expected //end display9()
* Expected 1 blank line before closing function brace; 0 found
* Expected 2 blank lines after function; 0 found

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:22:25Z,False,57a1c5ef6480fd4c0fa8b349,"__[code_sniffer]__
* Line indented incorrectly; expected 4 spaces, found 0
* Missing function doc comment
* Opening brace should be on a new line

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:22:25Z,False,57a1c5ef6480fd4c7d821a17,"__[code_sniffer]__
* Line indented incorrectly; expected 4 spaces, found 0
* Expected //end display10()
* Expected 1 blank line before closing function brace; 0 found
* Expected 2 blank lines after function; 0 found

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:22:25Z,False,57a1c5ef6480fd4cf3efdaff,"__[code_sniffer]__
* Line indented incorrectly; expected 4 spaces, found 0
* Missing function doc comment
* Opening brace should be on a new line

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:22:25Z,False,57a1c5ef6480fd4500e32cd0,"__[code_sniffer]__
* Line indented incorrectly; expected 4 spaces, found 0
* Expected //end display11()
* Expected 1 blank line before closing function brace; 0 found
* Expected 2 blank lines after function; 0 found

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:22:25Z,False,57a1c5ef6480fd4e09020d22,"__[code_sniffer]__
* Line indented incorrectly; expected 4 spaces, found 0
* Missing function doc comment
* Opening brace should be on a new line

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:22:25Z,False,57a1c5ef6480fd4a659756e2,"__[code_sniffer]__
* Line indented incorrectly; expected 4 spaces, found 0
* Expected //end display12()
* Expected 1 blank line before closing function brace; 0 found
* Expected 2 blank lines after function; 0 found

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:22:26Z,False,57a1c5ef6480fd4cb2c031d1,"__[code_sniffer]__
* Line indented incorrectly; expected 4 spaces, found 0
* Missing function doc comment
* Opening brace should be on a new line

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:22:26Z,False,57a1c5ef6480fd49797310e6,"__[code_sniffer]__
* Line indented incorrectly; expected 4 spaces, found 0
* Missing function doc comment
* Opening brace should be on a new line

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:22:26Z,False,57a1c5ef6480fd453f6c2d92,"__[code_sniffer]__
* Line indented incorrectly; expected 4 spaces, found 0
* Expected //end display14()
* Expected 1 blank line before closing function brace; 0 found
* Expected 2 blank lines after function; 0 found

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:22:26Z,False,57a1c5ef6480fd4aa48e890f,"__[code_sniffer]__
* Line indented incorrectly; expected 4 spaces, found 0
* Expected //end display13()
* Expected 1 blank line before closing function brace; 0 found
* Expected 2 blank lines after function; 0 found

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:22:27Z,False,57a1c5ef6480fd48884df542,"__[code_sniffer]__
* Line indented incorrectly; expected 4 spaces, found 0
* Missing function doc comment
* Opening brace should be on a new line

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:22:27Z,False,57a1c5ef6480fd44ea9dff2c,"__[code_sniffer]__
* Line indented incorrectly; expected 4 spaces, found 0
* Expected //end display15()
* Expected 1 blank line before closing function brace; 0 found
* Expected 2 blank lines after function; 0 found

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:22:27Z,False,57a1c5ef6480fd46beae8aa7,"__[code_sniffer]__
* Line indented incorrectly; expected 4 spaces, found 0
* Missing function doc comment
* Opening brace should be on a new line

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:22:27Z,False,57a1c5f16480fd474fd9e81e,"__[code_sniffer]__
* Line indented incorrectly; expected 4 spaces, found 0
* Expected //end display16()
* Expected 1 blank line before closing function brace; 0 found
* Expected 2 blank lines after function; 0 found

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:22:27Z,False,57a1c5f16480fd4fd7f09551,"__[code_sniffer]__
* Line indented incorrectly; expected 4 spaces, found 0
* Missing function doc comment
* Opening brace should be on a new line

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:22:28Z,False,57a1c5f06480fd44bf31b64a,"__[code_sniffer]__
* Line indented incorrectly; expected at least 8 spaces, found 4

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:22:28Z,False,57a1c5ef6480fd45da5403f5,"__[code_sniffer]__
* Line indented incorrectly; expected 4 spaces, found 0
* Expected //end display17()
* Expected 1 blank line before closing function brace; 0 found
* Expected 2 blank lines after function; 1 found

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:22:28Z,False,57a1c5ef6480fd4f2b6b82a8,"__[code_sniffer]__
* Line indented incorrectly; expected at least 8 spaces, found 4

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:22:28Z,False,57a1c5ef6480fd456aa38678,"__[code_sniffer]__
* Line indented incorrectly; expected at least 8 spaces, found 4

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:22:28Z,False,57a1c5ef6480fd45a81a076b,"__[code_sniffer]__
* Line indented incorrectly; expected at least 8 spaces, found 4

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:22:28Z,False,57a1c5ef6480fd493ae2ef0a,"__[code_sniffer]__
* Line indented incorrectly; expected at least 8 spaces, found 4

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:22:29Z,False,57a1c5f26480fd4518ebd312,"__[code_sniffer]__
* Line indented incorrectly; expected 4 spaces, found 2
* Closing brace indented incorrectly; expected 1 spaces, found 2
* Expected //end display()
* Expected 1 blank line before closing function brace; 0 found
* Expected 2 blank lines after function; 1 found

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:22:29Z,False,57a1c5ef6480fd44d5eb39cb,"__[code_sniffer]__
* Line indented incorrectly; expected 4 spaces, found 2
* Method name ""PagesController::set顧客名"" is not in camel caps format
* Missing function doc comment
* Expected 2 blank lines before function; 1 found

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:22:29Z,False,57a1c5ef6480fd45f699f243,"__[code_sniffer]__
* Line indented incorrectly; expected at least 4 spaces, found 2

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:22:29Z,False,57a1c5ef6480fd49db5d8367,"__[code_sniffer]__
* Line indented incorrectly; expected at least 8 spaces, found 4

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:22:29Z,False,57a1c5ef6480fd4555245334,"__[code_sniffer]__
* Line indented incorrectly; expected 4 spaces, found 2
* Private member variable ""顧客名"" must be prefixed with an underscore

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:22:30Z,False,57a1c5ef6480fd4aebe18357,"__[code_sniffer]__
* Line indented incorrectly; expected at least 8 spaces, found 4

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:22:30Z,False,57a1c5ef6480fd464107e8eb,"__[code_sniffer]__
* Line indented incorrectly; expected 4 spaces, found 2
* Expected //end set顧客名()
* Expected 1 blank line before closing function brace; 0 found
* Expected 2 blank lines after function; 1 found

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:22:30Z,False,57a1c5ef6480fd45290d474d,"__[code_sniffer]__
* Line indented incorrectly; expected 4 spaces, found 2
* Method name ""PagesController::get顧客名"" is not in camel caps format
* Missing function doc comment

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:22:30Z,False,57a1c5ef6480fd4eba794cea,"__[code_sniffer]__
* Line indented incorrectly; expected at least 4 spaces, found 2

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:22:31Z,False,57a1c5ef6480fd4e65119db4,"__[code_sniffer]__
* Line indented incorrectly; expected at least 8 spaces, found 4

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:22:31Z,False,57a1c5f26480fd4811d11a30,"__[code_sniffer]__
* Expected //end class

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:22:31Z,False,57a1c5ef6480fd4bc5f5a4c2,"__[code_sniffer]__
* Inline comments must end in full-stops, exclamation marks, or question marks

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:22:31Z,False,57a1c5f06480fd45bd05d315,"__[code_sniffer]__
* Line indented incorrectly; expected 4 spaces, found 2
* Expected //end get顧客名()
* Expected 1 blank line before closing function brace; 0 found
* Expected 2 blank lines after function; 0 found

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:24:57Z,False,57a1c67d6480fd4aa48e8952,"__[code_sniffer]__
* You must use ""/**"" style comments for a class comment
* Opening brace of a class must be on the line after the definition

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:24:57Z,False,57a1c67d6480fd4979731119,"__[code_sniffer]__
* Missing function doc comment
* Expected 2 blank lines before function; 0 found
* Opening brace should be on a new line

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:24:57Z,False,57a1c67d6480fd453f6c2dc0,"__[code_sniffer]__
* Expected ""if (...) {\n""; found ""if (...)  {\n""
* Operator == prohibited; use === instead
* There must be a single space between the closing parenthesis and the opening brace of a multi-line IF statement; found 2 spaces

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:24:57Z,False,57a1c67c6480fd48884df569,"__[code_sniffer]__
* Operator == prohibited; use === instead

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:24:57Z,False,57a1c67d6480fd474fd9e86a,"__[code_sniffer]__
* Operator == prohibited; use === instead

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:24:57Z,False,57a1c67d6480fd46beae8ae1,"__[code_sniffer]__
* Expected ""} else {\n""; found ""}  else {\n""

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:24:57Z,False,57a1c67d6480fd44ea9dff6b,"__[code_sniffer]__
* Operator == prohibited; use === instead

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:24:58Z,False,57a1c67c6480fd4581e5315a,"__[code_sniffer]__
* Line indented incorrectly; expected 12 spaces, found 16

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:24:58Z,False,57a1c67d6480fd4fd7f0958c,"__[code_sniffer]__
* Operator == prohibited; use === instead

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:24:58Z,False,57a1c67d6480fd45da540430,"__[code_sniffer]__
* Line indented incorrectly; expected 8 spaces, found 9
* Closing brace indented incorrectly; expected 8 spaces, found 9
* Operator == prohibited; use === instead

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:24:58Z,False,57a1c67d6480fd4f2b6b82e6,"__[code_sniffer]__
* Closing brace indented incorrectly; expected 9 spaces, found 8
* Expected ""} else {\n""; found ""} else{\n""

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:24:58Z,False,57a1c67d6480fd493ae2ef43,"__[code_sniffer]__
* Line indented incorrectly; expected 12 spaces, found 16

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:24:58Z,False,57a1c67d6480fd456aa386bd,"__[code_sniffer]__
* Line indented incorrectly; expected 12 spaces, found 16

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:24:58Z,False,57a1c67d6480fd4a217108eb,"__[code_sniffer]__
* Line indented incorrectly; expected 12 spaces, found 16

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:24:59Z,False,57a1c67c6480fd44bf31b67d,"__[code_sniffer]__
* Expected //end example()
* Expected 1 blank line before closing function brace; 0 found
* Expected 2 blank lines after function; 0 found

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:24:59Z,False,57a1c67d6480fd4b617c3ae1,"__[code_sniffer]__
* End comment for long condition not found; expected ""//end if""

<!-- Comment by [SideCI](https://sideci.com) -->",True,False,124,5.45
actcat/sideci_php_sandbox/191,2016-08-03T10:24:59Z,False,57a1c6866480fd45f699f277,"Click here if you want to create code_sniffer's auto-correct Pull Request 
[![Auto Correct by SideCI](https://sideci.com/autofix.png)](https://sideci.com/github_repositories/31297639/issues/pull_request/191/diff/7cf75dcf9b6594dc8d9689c1fc5a1b44a1f5df18?open_modal=1#code_sniffer)

See the documentation if you want to get more information about auto-correct.
[Document](https://sideci.com/ja/docs/autofix-code_sniffer)",True,False,124,5.45
guusw/unnamed-sdvx-clone/9,2016-08-03T11:41:50Z,False,57a1d8816480fd4518ebd901,"Wow hey, thanks for taking the effort to look at everything. I'll try to move most things into the master branch when I have time to fix all those things. One thing I'm not really sure of is the find_package thing, but I'll look into that after it all compiles and runs.
Indeed most things that still need changing are the windows specific filesystem stuff like the map searching and the embedded font (i'll probably move it just to the binary folder on both Windows and Linux for convenience).

Also, didn't the ""Graphics"" namespace fix the naming collisions with X11?",True,False,11,2565.233333333333
guusw/unnamed-sdvx-clone/9,2016-08-03T16:27:53Z,False,57a21b966480fd474fda0cc5,"> Also, didn't the ""Graphics"" namespace fix the naming collisions with X11?

Most likely not. I'm not sure why the compiler complains about this. :confused: In theory this actually should work.

--

Regarding **[```find_package```](https://cmake.org/cmake/help/v3.6/command/find_package.html)**, instead of hardcoding paths, find_package makes it possible to search for components and store its paths like include and library locations into a variable. Users may have installed dependencies somewhere else, then ```CMAKE_PREFIX_PATH``` can be used to tell CMake where to look for components.

On Linux X11, OpenGL and SDL2 (and others [zlib, lzma, etc.]) should be looked up using find_package rather than hardcoding the names and paths.
You noticed the SDL include changes I did. On my system for example the SDL2 headers are in a subdirectory *SDL2*. Using find_package this problem can be solved in an easy way.

--

Regarding libvorbis and libogg, you need to link libvorbis before libogg, the GNU linker is not the smartes when it comes to symbol lookup... There were a lot of linker errors in libogg.",True,False,11,2565.233333333333
guusw/unnamed-sdvx-clone/9,2016-08-04T12:21:42Z,False,57a902f46480fd59c99fd767,Yeah i'm not sure which ones it were but when I tried to replace all the libaries with their find_package equivalent there were some that didn't have an option for find_package. And even some libraries were a different version (I think freetype/jpeg).,True,False,11,2565.233333333333
guusw/unnamed-sdvx-clone/9,2016-08-04T13:23:29Z,False,57a9063d6480fd623dde452e,"I updated the CMake files here GhettoGirl/unnamed-sdvx-clone@82abab0965a203310be055a11a0b98cb68b30551

The changes are rather primitive, but now there are no hardcoded names for libraries and include directories anymore.

The best solution would be to to put all the dependency stuff in one big CMakeList file and not mix everything togheter on different places.

This is how it looks like now
```
-- Found Freetype: /usr/lib64/libfreetype.so (found version ""2.6.5"") 
-- Looking for lzma_auto_decoder in /usr/lib64/liblzma.so
-- Looking for lzma_auto_decoder in /usr/lib64/liblzma.so - found
-- Looking for lzma_easy_encoder in /usr/lib64/liblzma.so
-- Looking for lzma_easy_encoder in /usr/lib64/liblzma.so - found
-- Looking for lzma_lzma_preset in /usr/lib64/liblzma.so
-- Looking for lzma_lzma_preset in /usr/lib64/liblzma.so - found
-- Found LibLZMA: /usr/include (found version ""5.2.2"") 
-- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.8"") 
-- Found SDL2: /usr/include  
```

--

EDIT: Not sure about that **jpeg-9b** :confused: I moved it so that it is used on Linux too.",True,False,11,2565.233333333333
cms-sw/cmssw/14743,2016-08-06T16:46:25Z,False,57a98fb06480fdabc3a0c9d4,a new one is preped #15380 closing,True,False,16,94820.36666666667
MUSIT-Norway/musit/103,2016-08-09T11:14:58Z,False,57a9e2d46480fdb6030d836c,waiting with this.,True,False,1,0.0
tractorcow/silverstripe-twitter/16,2016-08-16T05:29:12Z,False,57b2a4ab6480fd8186260873,Thanks!,True,False,1,0.0
sonata-project/SonataPageBundle/688,2016-08-19T15:45:45Z,False,57b729ae6480fda077da9126,Ping @Vesax ,True,False,21,695972.8666666667
facebook/react-native/9511,2016-08-21T23:05:27Z,False,57ba33bb6480fdc5b297f1a7,"By analyzing the blame information on this pull request, we identified @jhen0409 and @tonyxiao to be potential reviewers.",True,False,8,26629.183333333334
facebook/react-native/9511,2016-08-21T23:05:28Z,False,57ba33c36480fdc5907f56a2,"Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign up at https://code.facebook.com/cla - and if you have received this in error or have any questions, please drop us a line at cla@fb.com. Thanks!",True,False,8,26629.183333333334
facebook/react-native/9511,2016-08-21T23:06:24Z,False,57ba33f86480fdc01728ea03,@callmephilip updated the pull request - [view changes](https://github.com/facebook/react-native/pull/9511/files/6c15a01b81e22d7ae027d3d92166c80bb48b2b59..649d3077fabc858bcfd84afe223f1f8ec50c658b),True,False,8,26629.183333333334
facebook/react-native/9511,2016-08-21T23:08:19Z,False,57ba346a6480fdbdbeb46f70,@callmephilip updated the pull request - [view changes](https://github.com/facebook/react-native/pull/9511/files/6c15a01b81e22d7ae027d3d92166c80bb48b2b59..649d3077fabc858bcfd84afe223f1f8ec50c658b),True,False,8,26629.183333333334
bower_____bower_____1748,2016-08-23T08:48:35Z,True,bower_____bower_____1748_____241667152,"@kodypeterson To release it as quickly as possible we'd need to put it in current 1.x version of bower, and make it backward compatible (opt-in). What sounds reasonable is:

- Squash all commits into one (it makes rebase easier)
- Rebase this PR onto master
- Add `--lock` flag to `bower install` to enable this feature when bower.json already exists
- Add a warning if there isn't a lockfile available, prompting to use `--lock` flag
- After bower.lock has been created, keep implemented behavior
- Do not modify any existing tests and only create new ones (when `bower.lock` is present)
- Make sure all current tests pass

If we ever release 2.0, we set `--lock` to be a default.

As for lock itself, I see it contains few extra keys we don't want, especially they contain absolute paths:

- `endpoint`, `canonicalDir`

```
  ""endpoint"": {
    ""name"": ""bower"",
    ""source"": ""/Users/sheerun/Source/Bower/bower"",
    ""target"": ""1.7.9""
  },
  ""canonicalDir"": ""/Users/sheerun/Source/Bower/bower"",
```

Also, we need to put version of bower it was packaged with to `version` key, plus additional behavior:

- If bower minor version in bower.lock is greather than current bower version, refuse to install package, indicating that newer bower version is necessary.

I've also encountered an error when installing local package without bower.json:

```
Stack trace:
TypeError: Cannot read property 'pkgMeta' of undefined
    at /Users/sheerun/Source/Bower/bower/lib/util/lockFile.js:22:84
    at /Users/sheerun/Source/Bower/bower/node_modules/mout/object/forOwn.js:12:27
```

I can do more testing if we you manage to fix those. Thank you for being interested in continuing your work.",True,True,89,1588333.85
bower_____bower_____1748,2016-08-23T10:13:46Z,True,bower_____bower_____1748_____241687631,"@kodypeterson Also, then I did ""bower install angular-route"", only ""angular-route"" got saved to bower.lock, while it should also contain ""angular"".",True,True,89,1588333.85
bower_____bower_____1748,2016-08-23T13:59:41Z,True,bower_____bower_____1748_____241740079,"@sheerun I am on it, I will see what I can get through this weekend along with cleanup and such!",True,True,89,1588333.85
bower_____bower_____1748,2016-08-23T14:35:00Z,True,bower_____bower_____1748_____241751564,"@kodypeterson I fixed it up into one commit and tried rebasing it some time
back in #2100, it might be useful to get started there.

On Aug 23, 2016 7:00 AM, ""Kody J. Peterson"" <notifications@github.com>
wrote:

> @sheerun
> <https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_sheerun&d=CwMCaQ&c=8hUWFZcy2Z-Za5rBPlktOQ&r=jDVzeY6gHbUDoSom0QsiEI2ek-5FZO0iCFMJ3mE_qQs&m=VRx6CCxKMzIjyVpB-xwTuW70QIAAwG-6jGr4ccj0mXM&s=UNVDcmca6T38FOuTZU8EMei1B73YoZW0DNmpaJqj9vo&e=>
> I am on it, I will see what I can get through this weekend along with
> cleanup and such!
>
> —
> You are receiving this because you were mentioned.
> Reply to this email directly, view it on GitHub
> <https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_bower_bower_pull_1748-23issuecomment-2D241740079&d=CwMCaQ&c=8hUWFZcy2Z-Za5rBPlktOQ&r=jDVzeY6gHbUDoSom0QsiEI2ek-5FZO0iCFMJ3mE_qQs&m=VRx6CCxKMzIjyVpB-xwTuW70QIAAwG-6jGr4ccj0mXM&s=6UuuRZ_ihh5W6Jq2HDlkb7cNmCiJtkYwfxGoSk3m9EI&e=>,
> or mute the thread
> <https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_notifications_unsubscribe-2Dauth_AFM7qwe84HVnbjsjSMJx2SKjs0A83W-2Dnks5qivzsgaJpZM4DydXS&d=CwMCaQ&c=8hUWFZcy2Z-Za5rBPlktOQ&r=jDVzeY6gHbUDoSom0QsiEI2ek-5FZO0iCFMJ3mE_qQs&m=VRx6CCxKMzIjyVpB-xwTuW70QIAAwG-6jGr4ccj0mXM&s=V0KRIIhEPIjjEGdsqefhlI2jHn4iiyVIDysg8Rnfuy4&e=>
> .
>
",True,True,89,1588333.85
bower_____bower_____1748,2016-08-23T14:37:07Z,True,bower_____bower_____1748_____241752304,"@Utsav2 awesome! i will see what I can get from that. I have a feeling that both being so long ago the merge process is going to be a rough one. I might just need to cherry pick manually the changes in and maybe reorganize a bit. 

Thanks for the reference though!",True,True,89,1588333.85
PowerShell/xSQLServer/67,2016-08-25T23:49:07Z,False,57bf83f76480fd7a4ad777eb,"



Reviewed 1 of 5 files at r2.
Review status: 6 of 7 files reviewed at latest revision, 25 unresolved discussions, some commit checks failed.

---

*[Examples/SQL-ClusterDB.ps1, line 156 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmrOyaRYbGHxQlb0Us:-KQ35bzdQqF4hARC6gDn:b5f7php) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/Examples/SQL-ClusterDB.ps1#L156)):*
<details><summary><i>Previously, johlju (Johan Ljunggren) wrote…</i></summary>
> Why did you add this? Just wondering if there is an issue having it uncommented?
</details>
PSScriptAnalyzer would complain, but it's ok to suppress it in an example.  If you do, I would add a comment saying you should use a more secure way to get the password in production.

---


*Comments from [Reviewable](https://reviewable.io:443/reviews/powershell/xsqlserver/67)*
<!-- Sent from Reviewable.io -->
",True,False,40,132778.58333333334
PowerShell/xSQLServer/67,2016-08-26T05:59:20Z,False,57bfdaba6480fdce15ee8c5f,"



Reviewed 1 of 1 files at r3.
Review status: all files reviewed at latest revision, 25 unresolved discussions, some commit checks failed.

---

*[Examples/SQL-ClusterDB.ps1, line 156 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmrOyaRYbGHxQlb0Us:-KQ4OalJZZdO9Ggbgfl8:b-v5gkjq) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/Examples/SQL-ClusterDB.ps1#L156)):*
<details><summary><i>Previously, TravisEz13 (Travis Plunk) wrote…</i></summary>
> PSScriptAnalyzer would complain, but it's ok to suppress it in an example.  If you do, I would add a comment saying you should use a more secure way to get the password in production.
</details>
Okay, I see that this is already suppressed in the Dev-branch. 
@luigilink If you fix merge conflicts (rebase against dev) and then revert the changes you made to this file then the tests should run fine. But please add the comment per @TravisEz13 suggestion.

If you are unsure how to do the rebase, there is a guide how to do this (PR not yet merged into DSCResource), but you find it here in [GettingStartedWithGitHub](https://github.com/johlju/DscResources/blob/changes-to-gettingstartedwithgithub/GettingStartedWithGitHub.md) , look for 'Resolve merge conflicts'

---

*[Examples/SQL-Standalone.ps1, line 105 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmrc6vVw1tZH9so13q:-KQ4PivBWsK9gzP99EId:bqx3y5e) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/Examples/SQL-Standalone.ps1#L105)):*
<details><summary><i>Previously, johlju (Johan Ljunggren) wrote…</i></summary>
> Why did you add this? Just wondering if there is an issue having it uncommented?
</details>
Okay, I see that this is already suppressed in the Dev-branch. 
@luigilink If you fix merge conflicts (rebase against dev) and then revert the changes you made to this file then the tests should run fine.  But please add the comment per @TravisEz13 suggestion.

---

*[Examples/SQLServerNetwork.ps1, line 61 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmrdA2q9gczCWjH3IU:-KQ4PjXVPBo2KUd6L31F:bqx3y5e) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/Examples/SQLServerNetwork.ps1#L61)):*
<details><summary><i>Previously, johlju (Johan Ljunggren) wrote…</i></summary>
> Why did you add this? Just wondering if there is an issue having it uncommented?
</details>
Okay, I see that this is already suppressed in the Dev-branch. 
@luigilink If you fix merge conflicts (rebase against dev) and then revert the changes you made to this file then the tests should run fine.  But please add the comment per @TravisEz13 suggestion.

---


*Comments from [Reviewable](https://reviewable.io:443/reviews/powershell/xsqlserver/67)*
<!-- Sent from Reviewable.io -->
",True,False,40,132778.58333333334
PowerShell/xSQLServer/67,2016-08-29T11:09:54Z,False,57c4180a6480fd746a50205b,"



Reviewed 1 of 2 files at r1, 5 of 5 files at r2.
Review status: 4 of 10 files reviewed at latest revision, 25 unresolved discussions, some commit checks failed.

---

*[README.md, line 170 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmmV5V0wmXz1YWXXY0:-KQKj4uqnlypU8UT43zQ:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/README.md#L170)):*
<details><summary><i>Previously, johlju (Johan Ljunggren) wrote…</i></summary>
> I can't see that this parameter LoginCredential is used in the code. Is this necessary for your intended behavior?
</details>
Done.

---

*[README.md, line 171 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmo9yoLx3H0uQoui5o:-KQKj5P4Kqn6j9mxSDpn:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/README.md#L171)):*
<details><summary><i>Previously, johlju (Johan Ljunggren) wrote…</i></summary>
> Could you change this to ServerRole (see other comments for changing this in code)?
</details>
Done.

---

*[DSCResources/MSFT_xSQLServerFirewall/MSFT_xSQLServerFirewall.schema.mof, line 15 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmlGithvdO_xdx1BRh:-KQKj6qBgZPlyNfZ2N2N:b94yerc) ([raw file](https://github.com/powershell/xsqlserver/blob/db05feb4dcfca9d08beaf48f360fba879a26f465/DSCResources/MSFT_xSQLServerFirewall/MSFT_xSQLServerFirewall.schema.mof#L15)):*
<details><summary><i>Previously, johlju (Johan Ljunggren) wrote…</i></summary>
> Did you add back the blank line to the end of this file? Just want to make sure.
</details>
Yes the blank line is present

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 26 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmmbwSke3lYb8-lKRG:-KQKvHyskSjiUdo4dWzA:b-ob2jrr) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L26)):*
<details><summary><i>Previously, johlju (Johan Ljunggren) wrote…</i></summary>
> I can't see that this parameter LoginCredential is used in the code. Is this necessary for your intended behavior?
</details>
I deleted this parameter. Thanks.

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 30 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmmmtKQGMuWxK5Oy3X:-KQKvibWJ1ISPUQ35PN-:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L30)):*
<details><summary><i>Previously, johlju (Johan Ljunggren) wrote…</i></summary>
> Could you change this to ServerRole (and change accordingly in the rest of the code as well)?
</details>
Done.

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 47 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmoxXn0_3E38C9TANr:-KQKwTEIFmKqAhXHKu1y:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L47)):*
<details><summary><i>Previously, johlju (Johan Ljunggren) wrote…</i></summary>
> Could you change this to 'sqlRoles' (and the same for the rest of the code)? If possible you can use `sqlRole' instead
</details>
Done.

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 50 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmpRc9H1ZuGlUfbPxq:-KQKx186Wy1oQJMwP9QC:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L50)):*
<details><summary><i>Previously, johlju (Johan Ljunggren) wrote…</i></summary>
> Could you change this to `$serverRole` (and the same for the rest of the code)
</details>
Done.

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 111 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmn-wlwNZFzaPooVFa:-KQKwjn9FwMNlnIZUvJj:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L111)):*
<details><summary><i>Previously, johlju (Johan Ljunggren) wrote…</i></summary>
> I can't see that this parameter LoginCredential is used in the code. Is this necessary for your intended behavior?
</details>
Done.

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 115 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmn4g511fDcajBV6DJ:-KQKx2k2sBFPot508ake:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L115)):*
<details><summary><i>Previously, johlju (Johan Ljunggren) wrote…</i></summary>
> Could you change this to ServerRole (and change accordingly in the rest of the code as well)?
</details>
Done.

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 137 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmpdEYpNSDMUydjEhH:-KQKwuXrNj3ME3iXSGXB:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L137)):*
<details><summary><i>Previously, johlju (Johan Ljunggren) wrote…</i></summary>
> Could you change this to 'sqlRoles' (and the same for the rest of the code)? If possible you can use `sqlRole' instead
</details>
Done.

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 138 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmpjILE9gbSm88HEs-:-KQKwv0cQYxdZzUTVHSw:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L138)):*
<details><summary><i>Previously, johlju (Johan Ljunggren) wrote…</i></summary>
> Could you change this to `$serverRole` (and the same for the rest of the code)
</details>
Done.

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 185 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmnDO88gac_xSEo2C3:-KQKwvvBV9OtMPMvIliW:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L185)):*
<details><summary><i>Previously, johlju (Johan Ljunggren) wrote…</i></summary>
> I can't see that this parameter LoginCredential is used in the code. Is this necessary for your intended behavior?
</details>
Done.

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 189 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmnAq-DCKsukLhiiZR:-KQKwwQsWd6Kro6eDuxg:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L189)):*
<details><summary><i>Previously, johlju (Johan Ljunggren) wrote…</i></summary>
> Could you change this to ServerRole (and change accordingly in the rest of the code as well)?
</details>
Done.

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 214 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmpl73j4DBByUlKOum:-KQKwxCcsRljG64gyMJt:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L214)):*
<details><summary><i>Previously, johlju (Johan Ljunggren) wrote…</i></summary>
> Could you change this to `$serverRole` (and the same for the rest of the code)
</details>
Done.

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 241 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmpoKmdQ0UXFHCZ6Ix:-KQKwxvg_dIkujJOX2rZ:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L241)):*
<details><summary><i>Previously, johlju (Johan Ljunggren) wrote…</i></summary>
> Could you change this to 'sqlRoles' (and the same for the rest of the code)? If possible you can use `sqlRole' instead
</details>
Done.

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 255 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmq66EZxyx5juiGgl6:-KQKxPCmdwka38j4hmcd:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L255)):*
<details><summary><i>Previously, johlju (Johan Ljunggren) wrote…</i></summary>
> Could you move these brackets to seperate rows, and change `$False` to `$false`. 
> 
> ``` 
> {
>     return $false
> }
> ```
</details>
Done.

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 256 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmqSpjzsEtXhJPpcJI:-KQKxPiJ3-MbVnpvJdTc:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L256)):*
<details><summary><i>Previously, johlju (Johan Ljunggren) wrote…</i></summary>
> Same here as the row above. Change `$True` to `$true`
</details>
Done.

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.schema.mof, line 5 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmnmRc-6_KvpCtBfU_:-KQKzPEPlqFwc-zhVU1b:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.schema.mof#L5)):*
<details><summary><i>Previously, johlju (Johan Ljunggren) wrote…</i></summary>
> The description here doesn't seem to be correct? The ""If LoginType..."" portion.
</details>
Done.

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.schema.mof, line 6 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmnkPmSqpUtotPIStI:-KQKxU3njEX51WzmkZk7:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.schema.mof#L6)):*
<details><summary><i>Previously, johlju (Johan Ljunggren) wrote…</i></summary>
> I can't see that this parameter LoginCredential is used in the code. Is this necessary for your intended behavior?
</details>
Done.

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.schema.mof, line 7 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmo0XKcFS-QY6mv1KS:-KQKxV-ioMWEILIfXscW:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.schema.mof#L7)):*
<details><summary><i>Previously, johlju (Johan Ljunggren) wrote…</i></summary>
> Could you change this to ServerRole (and change accordingly in the rest of the code as well)?
</details>
Done.

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.schema.mof, line 7 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmoRu2ubkTQgbHL5OP:-KQKxYDeWBZIpDa0Xy3y:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.schema.mof#L7)):*
<details><summary><i>Previously, johlju (Johan Ljunggren) wrote…</i></summary>
> Could you align the descriptions in the schema with those in the README.md?
</details>
Done.

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.schema.mof, line 9 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmnTrkiZDSxBeIj0Vu:-KQKzQUrIDGzSeptz2iM:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.schema.mof#L9)):*
<details><summary><i>Previously, johlju (Johan Ljunggren) wrote…</i></summary>
> Could you change SQLInstanceName to be key as well? Then a user could add the same login to role(s) several instances on the same server.
</details>
Done.

---

*[Examples/SQL-ClusterDB.ps1, line 156 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmrOyaRYbGHxQlb0Us:-KQKzJaaaZPT2VXaP__x:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/Examples/SQL-ClusterDB.ps1#L156)):*
<details><summary><i>Previously, johlju (Johan Ljunggren) wrote…</i></summary>
> Okay, I see that this is already suppressed in the Dev-branch. 
> @luigilink If you fix merge conflicts (rebase against dev) and then revert the changes you made to this file then the tests should run fine. But please add the comment per @TravisEz13 suggestion.
> 
> If you are unsure how to do the rebase, there is a guide how to do this (PR not yet merged into DSCResource), but you find it here in [GettingStartedWithGitHub](https://github.com/johlju/DscResources/blob/changes-to-gettingstartedwithgithub/GettingStartedWithGitHub.md) , look for 'Resolve merge conflicts'
</details>
Done.

---

*[Examples/SQL-Standalone.ps1, line 105 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmrc6vVw1tZH9so13q:-KQKzKS5_dGqaONPC6Q8:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/Examples/SQL-Standalone.ps1#L105)):*
<details><summary><i>Previously, johlju (Johan Ljunggren) wrote…</i></summary>
> Okay, I see that this is already suppressed in the Dev-branch. 
> @luigilink If you fix merge conflicts (rebase against dev) and then revert the changes you made to this file then the tests should run fine.  But please add the comment per @TravisEz13 suggestion.
</details>
Done.

---

*[Examples/SQLServerNetwork.ps1, line 61 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmrdA2q9gczCWjH3IU:-KQKzLaMJ1dj7RVo009Q:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/Examples/SQLServerNetwork.ps1#L61)):*
<details><summary><i>Previously, johlju (Johan Ljunggren) wrote…</i></summary>
> Okay, I see that this is already suppressed in the Dev-branch. 
> @luigilink If you fix merge conflicts (rebase against dev) and then revert the changes you made to this file then the tests should run fine.  But please add the comment per @TravisEz13 suggestion.
</details>
Done.

---


*Comments from [Reviewable](https://reviewable.io:443/reviews/powershell/xsqlserver/67)*
<!-- Sent from Reviewable.io -->
",True,False,40,132778.58333333334
PowerShell/xSQLServer/67,2016-08-29T12:24:01Z,False,57c429666480fd7001118d93,"



Review status: 0 of 9 files reviewed at latest revision, 25 unresolved discussions.

---

*[README.md, line 170 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmmV5V0wmXz1YWXXY0:-KQLFIG05IJygHUxT_Ib:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/README.md#L170)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Done.
</details>
Done.

---

*[README.md, line 171 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmo9yoLx3H0uQoui5o:-KQLFIzblC45JfndobcS:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/README.md#L171)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Done.
</details>
Done.

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 26 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmmbwSke3lYb8-lKRG:-KQLF0TTZa3K62hT2xPF:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L26)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> I deleted this parameter. Thanks.
</details>
Done.

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 30 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmmmtKQGMuWxK5Oy3X:-KQLFLmCU8PkP1sftUZm:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L30)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Done.
</details>
Done.

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.schema.mof, line 6 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmnkPmSqpUtotPIStI:-KQLF2nrrjdu0oTBbCnt:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.schema.mof#L6)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Done.
</details>
Done.

---

*[Examples/SQL-ClusterDB.ps1, line 156 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmrOyaRYbGHxQlb0Us:-KQLFAXolFqOF1tCBc92:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/Examples/SQL-ClusterDB.ps1#L156)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Done.
</details>
Done.

---

*[Examples/SQL-Standalone.ps1, line 105 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmrc6vVw1tZH9so13q:-KQLFCYvM3VX9S9A6zBm:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/Examples/SQL-Standalone.ps1#L105)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Done.
</details>
Done.

---

*[Examples/SQLServerNetwork.ps1, line 61 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmrdA2q9gczCWjH3IU:-KQLFDgbD7-cHe8iHt3R:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/Examples/SQLServerNetwork.ps1#L61)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Done.
</details>
Done.

---

*[DSCResources/MSFT_xSQLServerFirewall/MSFT_xSQLServerFirewall.schema.mof, line 15 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmlGithvdO_xdx1BRh:-KQLFGSI8zHB6hTtx0VS:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/db05feb4dcfca9d08beaf48f360fba879a26f465/DSCResources/MSFT_xSQLServerFirewall/MSFT_xSQLServerFirewall.schema.mof#L15)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Yes the blank line is present
</details>
Done.

---


*Comments from [Reviewable](https://reviewable.io:443/reviews/powershell/xsqlserver/67)*
<!-- Sent from Reviewable.io -->
",True,False,40,132778.58333333334
PowerShell/xSQLServer/67,2016-08-29T15:06:23Z,False,57c44f816480fd6dd9bdad55,"



Review status: 0 of 10 files reviewed at latest revision, 25 unresolved discussions.

---

*[Examples/SQL-ClusterDB.ps1, line 156 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmrOyaRYbGHxQlb0Us:-KQLFRmmTYAVY5SMS9vB:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/Examples/SQL-ClusterDB.ps1#L156)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Done.
</details>
Done.

---

*[Examples/SQL-Standalone.ps1, line 105 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmrc6vVw1tZH9so13q:-KQLFS_ndPlRtTEtwfeN:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/Examples/SQL-Standalone.ps1#L105)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Done.
</details>
Done.

---

*[Examples/SQLServerNetwork.ps1, line 61 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmrdA2q9gczCWjH3IU:-KQLFVUbAsLyNyupHWcn:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/Examples/SQLServerNetwork.ps1#L61)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Done.
</details>
Done.

---

*[DSCResources/MSFT_xSQLServerFirewall/MSFT_xSQLServerFirewall.schema.mof, line 15 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmlGithvdO_xdx1BRh:-KQLFXr4m2Sv0-YSo53C:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/db05feb4dcfca9d08beaf48f360fba879a26f465/DSCResources/MSFT_xSQLServerFirewall/MSFT_xSQLServerFirewall.schema.mof#L15)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Done.
</details>
Done.

---


*Comments from [Reviewable](https://reviewable.io:443/reviews/powershell/xsqlserver/67)*
<!-- Sent from Reviewable.io -->
",True,False,40,132778.58333333334
PowerShell/xSQLServer/67,2016-08-29T15:36:02Z,False,57c456646480fd779725f97e,"



Reviewed 10 of 10 files at r4.
Review status: all files reviewed at latest revision, 25 unresolved discussions.

---



*Comments from [Reviewable](https://reviewable.io:443/reviews/powershell/xsqlserver/67)*
<!-- Sent from Reviewable.io -->
",True,False,40,132778.58333333334
PowerShell/xSQLServer/67,2016-08-30T08:38:53Z,False,57c546266480fde923e65d87,"Nice work with the changes! I have a little more comments. :)

It seems that you did a ""git merge"" or ""git pull""  (`Merge branch 'dev' into SQL-Server-Role`) instead of a ""git rebase"". I'm a right? If so, could you please do a git rebase towards dev? 

---

Reviewed 10 of 10 files at r4.
Review status: all files reviewed at latest revision, 33 unresolved discussions.

---

*[DSCResource.Tests, line 1 \[r4\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KQPNN_-5C4u5UstGFoI:-KQPNN_-5C4u5UstGFoJ:bnc6xeb) ([raw file](https://github.com/powershell/xsqlserver/blob/d7c07e956dd3f773d872c5ac917499701c3f881f/DSCResource.Tests#L1)):*
> ```
> Subproject commit 8a5c02d4c3a1c0de3562550043c065d599cafaf5
> ```

Could you please add this to a .gitignore file in your cloned repo. This folder is created when running tests, but should not be commited to the PR.

---

*[README.md, line 170 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmmV5V0wmXz1YWXXY0:-KQPO3FjcrylaKKaIWx8:bb6ywmx) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/README.md#L170)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Done.
</details>
LGTM

---

*[README.md, line 171 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmo9yoLx3H0uQoui5o:-KQPO4Hx0d7futaAwpIn:bb6ywmx) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/README.md#L171)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Done.
</details>
LGTM

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 26 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmmbwSke3lYb8-lKRG:-KQPOA6JROHQOZDwfsFh:bb6ywmx) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L26)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Done.
</details>
LGTM

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 30 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmmmtKQGMuWxK5Oy3X:-KQPOLXmWeHpFq2eEEoW:bb6ywmx) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L30)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Done.
</details>
LGTM

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 47 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmoxXn0_3E38C9TANr:-KQPOQf_qGSgZhg3_1WU:b-nfdxl2) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L47)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Done.
</details>
Please change this to ""$sqlRole"" (and in the resto of the code). So it is using Camel Case according to the style guideline https://github.com/PowerShell/DscResources/blob/master/StyleGuidelines.md#variables 

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 50 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmpRc9H1ZuGlUfbPxq:-KQPTDQx8OC1FE99F9dV:b-vt84ng) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L50)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Done.
</details>
Could you please change this to be more descriptive? Maybe `$serverRole` would be better in this case? https://github.com/PowerShell/DscResources/blob/master/StyleGuidelines.md#descriptive-names 

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 111 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmn-wlwNZFzaPooVFa:-KQPTzZuc8BUqhGPlXWx:bb6ywmx) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L111)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Done.
</details>
LGTM

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 115 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmn4g511fDcajBV6DJ:-KQPU3qOJNQFot_SxA0L:bb6ywmx) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L115)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Done.
</details>
LGTM

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 137 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmpdEYpNSDMUydjEhH:-KQPU74-Q9r93YiDqSWC:b-rj8z8i) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L137)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Done.
</details>
Same here, please use camelCase.

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 138 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmpjILE9gbSm88HEs-:-KQPUcGflFEms41nqGly:b-bc8bd1) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L138)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Done.
</details>
Same here, can you use descriptive name instead?

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 185 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmnDO88gac_xSEo2C3:-KQPVj8qSOQTKQbhi1KW:bb6ywmx) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L185)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Done.
</details>
LGTM

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 189 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmnAq-DCKsukLhiiZR:-KQPVlw-3ApjBAsQXs37:bb6ywmx) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L189)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Done.
</details>
LGTM

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 214 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmpl73j4DBByUlKOum:-KQPVxVVElHI1dn46CPW:bb6ywmx) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L214)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Done.
</details>
LGTM

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 241 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmpoKmdQ0UXFHCZ6Ix:-KQPVzPPqyb0Itrypdjg:bb6ywmx) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L241)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Done.
</details>
LGTM

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 255 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmq66EZxyx5juiGgl6:-KQPWIVfNinbE7GMuPmw:bb6ywmx) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L255)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Done.
</details>
LGTM

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 256 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmqSpjzsEtXhJPpcJI:-KQPWJLf3jNKp2sl8CDz:bb6ywmx) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L256)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Done.
</details>
LGTM

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 29 \[r4\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KQPOg9zLa3iBlIccAzE:-KQPOg9zLa3iBlIccAzF:b-iu6rzv) ([raw file](https://github.com/powershell/xsqlserver/blob/d7c07e956dd3f773d872c5ac917499701c3f881f/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L29)):*
> ```PowerShell
>         $ServerRole,
> 
>         [parameter(Mandatory = $true)]
> ```

Please change `[parameter` to `[Parameter` with capital 'P'. Please do this in all the code.

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 38 \[r4\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KQPT_6AzWw5zFOQ8Aj9:-KQPT_6AzWw5zFOQ8AjA:b-4lp981) ([raw file](https://github.com/powershell/xsqlserver/blob/d7c07e956dd3f773d872c5ac917499701c3f881f/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L38)):*
> ```PowerShell
>     )
> 
>     if(!$SQL)
> ```

Can you change `$SQL` to `$sql` (here and the rest of the code) so it uses camelCase according to the style guideline. https://github.com/PowerShell/DscResources/blob/master/StyleGuidelines.md#variables

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 196 \[r4\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KQPW3CHQdU2-dRGP9Ei:-KQPW3CHQdU2-dRGP9Ej:b-30rho9) ([raw file](https://github.com/powershell/xsqlserver/blob/d7c07e956dd3f773d872c5ac917499701c3f881f/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L196)):*
> ```PowerShell
> 
>     Write-Verbose -Message ""Testing SQL roles for login $Name""
>     $CurrentValues = Get-TargetResource @PSBoundParameters
> ```

Could this be changed to `$currentValues`? So it uses camelCase

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 201 \[r4\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KQPWTv619WK1tow2BLZ:-KQPWTv619WK1tow2BL_:b-f2jd22) ([raw file](https://github.com/powershell/xsqlserver/blob/d7c07e956dd3f773d872c5ac917499701c3f881f/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L201)):*
> ```PowerShell
>     
>     $result
>     
> ```

Could you remove blank line here?

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 203 \[r4\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KQPWWWI8P7II4m7NfKI:-KQPWWWI8P7II4m7NfKJ:b50ic52) ([raw file](https://github.com/powershell/xsqlserver/blob/d7c07e956dd3f773d872c5ac917499701c3f881f/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L203)):*
> ```PowerShell
>     
> }
> ```

Could you remove extra blank line here?

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.schema.mof, line 5 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmnmRc-6_KvpCtBfU_:-KQPXCrtrQJsQx4HyMq3:bb6ywmx) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.schema.mof#L5)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Done.
</details>
LGTM

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.schema.mof, line 6 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmnkPmSqpUtotPIStI:-KQPWkdNcW82JgBq0LGr:bb6ywmx) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.schema.mof#L6)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Done.
</details>
LGTM

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.schema.mof, line 7 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmo0XKcFS-QY6mv1KS:-KQPWoMLBKiRC1ZkBmwW:bb6ywmx) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.schema.mof#L7)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Done.
</details>
LGTM

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.schema.mof, line 7 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmoRu2ubkTQgbHL5OP:-KQPXEvkGeC978y-kFAW:bb6ywmx) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.schema.mof#L7)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Done.
</details>
LGTM

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.schema.mof, line 9 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmnTrkiZDSxBeIj0Vu:-KQPXKDbkIMvk-8p6Q-X:bb6ywmx) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.schema.mof#L9)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Done.
</details>
LGTM

---

*[DSCResources/MSFT_xSQLServerRole/Readme.md, line 3 \[r4\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KQPXMYtltM_SH0QXI7q:-KQPXMYtltM_SH0QXI7r:b-l7191r) ([raw file](https://github.com/powershell/xsqlserver/blob/d7c07e956dd3f773d872c5ac917499701c3f881f/DSCResources/MSFT_xSQLServerRole/Readme.md#L3)):*
> ```Markdown
> **Description**
> 
> This resource is used to configure the Server Roles of SQL Login (SqlLogin or Windows).
> ```

If you see fit, can you move this text to the README.md in the root folder instead. You could add this as the description of the resource instead of the current description, below is snippet from the README.md.
* **xSQLServerRole** resource to manage SQL server roles

When content is moved, this file should be removed. We don't have such files in the resource folder. _If someone told you or you read differently somewhere, please correct me._

---

*[Examples/SQL-ClusterDB.ps1, line 156 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmrOyaRYbGHxQlb0Us:-KQPZR8PW7HJrRO4KKnB:b-li0qvg) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/Examples/SQL-ClusterDB.ps1#L156)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Done.
</details>
You have a CONFLICT in this file that are still not resolved. Please resolve. See code between`<<<<<<< HEAD` <-> `>>>>>>> dev`

---

*[Examples/SQL-Standalone.ps1, line 105 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmrc6vVw1tZH9so13q:-KQPZmziJosM2P2H5cv5:bx9sviw) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/Examples/SQL-Standalone.ps1#L105)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Done.
</details>
You have a CONFLICT in this file that are still not resolved. Please resolve. See code between `<<<<<<< HEAD` <-> `>>>>>>> dev`

---

*[Examples/SQLServerNetwork.ps1, line 61 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmrdA2q9gczCWjH3IU:-KQPZx3ytyUWlyCJjDZF:bx9sviw) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/Examples/SQLServerNetwork.ps1#L61)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Done.
</details>
You have a CONFLICT in this file that are still not resolved. Please resolve. See code between `<<<<<<< HEAD` <-> `>>>>>>> dev`

---

*[Examples/Resources/xSQLServerRole/1-AddServerRole.ps1, line 14 \[r4\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KQPZzKM3N8syY8L6Bld:-KQPZzKM3N8syY8L6Ble:bmv3xi4) ([raw file](https://github.com/powershell/xsqlserver/blob/d7c07e956dd3f773d872c5ac917499701c3f881f/Examples/Resources/xSQLServerRole/1-AddServerRole.ps1#L14)):*
> ```PowerShell
>             $SysadminAccount
>         )
>         Import-DscResource -ModuleName xSqlServer
> ```

Add a blank line before this row

---

*[Examples/Resources/xSQLServerRole/2-RemoveServerRole.ps1, line 14 \[r4\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KQP_3ngcLpFCmk7xTXI:-KQP_3ngcLpFCmk7xTXJ:bmv3xi4) ([raw file](https://github.com/powershell/xsqlserver/blob/d7c07e956dd3f773d872c5ac917499701c3f881f/Examples/Resources/xSQLServerRole/2-RemoveServerRole.ps1#L14)):*
> ```PowerShell
>             $SysadminAccount
>         )
>         Import-DscResource -ModuleName xSqlServer
> ```

Add a blank line before this row

---

*[DSCResources/MSFT_xSQLServerFirewall/MSFT_xSQLServerFirewall.schema.mof, line 15 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmlGithvdO_xdx1BRh:-KQP_CTZYMB91L-Qqryj:b-p8sd36) ([raw file](https://github.com/powershell/xsqlserver/blob/db05feb4dcfca9d08beaf48f360fba879a26f465/DSCResources/MSFT_xSQLServerFirewall/MSFT_xSQLServerFirewall.schema.mof#L15)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Done.
</details>
I was hoping this file was gonna be removed when you did a `git rebase`. 

---


*Comments from [Reviewable](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-:-KQPMkkfbbdOZ2qO3aYF:bisbld3)*
<!-- Sent from Reviewable.io -->
",True,False,40,132778.58333333334
PowerShell/xSQLServer/67,2016-09-02T08:22:21Z,False,57c936c66480fdac77b37f82,"



Review status: all files reviewed at latest revision, 19 unresolved discussions.

---

*[DSCResource.Tests, line 1 \[r4\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KQPNN_-5C4u5UstGFoI:-KQdnCsh62_9yTVEpH6l:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/d7c07e956dd3f773d872c5ac917499701c3f881f/DSCResource.Tests#L1)):*
<details><summary><i>Previously, johlju (Johan Ljunggren) wrote…</i></summary>
> Could you please add this to a .gitignore file in your cloned repo. This folder is created when running tests, but should not be commited to the PR.
</details>
Done.

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 47 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmoxXn0_3E38C9TANr:-KQdoRtv4ykseyj7uml2:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L47)):*
<details><summary><i>Previously, johlju (Johan Ljunggren) wrote…</i></summary>
> Please change this to ""$sqlRole"" (and in the resto of the code). So it is using Camel Case according to the style guideline https://github.com/PowerShell/DscResources/blob/master/StyleGuidelines.md#variables 
</details>
Done.

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 50 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmpRc9H1ZuGlUfbPxq:-KQdp3nxp6xDhDAtvOTb:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L50)):*
<details><summary><i>Previously, johlju (Johan Ljunggren) wrote…</i></summary>
> Could you please change this to be more descriptive? Maybe `$serverRole` would be better in this case? https://github.com/PowerShell/DscResources/blob/master/StyleGuidelines.md#descriptive-names 
</details>
Done.

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 137 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmpdEYpNSDMUydjEhH:-KQdpHkHWzXJ_ADcHRSK:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L137)):*
<details><summary><i>Previously, johlju (Johan Ljunggren) wrote…</i></summary>
> Same here, please use camelCase.
</details>
Done.

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 138 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmpjILE9gbSm88HEs-:-KQdpJ-rxJ_cGVHNWlVD:bb6un1j) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L138)):*
<details><summary><i>Previously, johlju (Johan Ljunggren) wrote…</i></summary>
> Same here, can you use descriptive name instead?
</details>
Done

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 29 \[r4\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KQPOg9zLa3iBlIccAzE:-KQdngsUuP-PeXCo7gxt:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/d7c07e956dd3f773d872c5ac917499701c3f881f/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L29)):*
<details><summary><i>Previously, johlju (Johan Ljunggren) wrote…</i></summary>
> Please change `[parameter` to `[Parameter` with capital 'P'. Please do this in all the code.
</details>
Done.

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 38 \[r4\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KQPT_6AzWw5zFOQ8Aj9:-KQdoEmpb0eSf3p_eQPk:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/d7c07e956dd3f773d872c5ac917499701c3f881f/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L38)):*
<details><summary><i>Previously, johlju (Johan Ljunggren) wrote…</i></summary>
> Can you change `$SQL` to `$sql` (here and the rest of the code) so it uses camelCase according to the style guideline. https://github.com/PowerShell/DscResources/blob/master/StyleGuidelines.md#variables
</details>
Done.

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 92 \[r4\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KQREUS7eNZ_atNPrPO-:-KQdpDIxRih97AQZYwaZ:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/d7c07e956dd3f773d872c5ac917499701c3f881f/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L92)):*
<details><summary><i>Previously, johlju (Johan Ljunggren) wrote…</i></summary>
> Could you please remove the extra blank line here?
</details>
Done.

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 166 \[r4\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KQREaeKZONoVgxjDvDG:-KQduiOUN6Su7pwJMmc-:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/d7c07e956dd3f773d872c5ac917499701c3f881f/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L166)):*
<details><summary><i>Previously, johlju (Johan Ljunggren) wrote…</i></summary>
> Could you please remove the extra blank line here?
</details>
Done.

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 196 \[r4\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KQPW3CHQdU2-dRGP9Ei:-KQdqgpSVU9CAcauJCPt:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/d7c07e956dd3f773d872c5ac917499701c3f881f/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L196)):*
<details><summary><i>Previously, johlju (Johan Ljunggren) wrote…</i></summary>
> Could this be changed to `$currentValues`? So it uses camelCase
</details>
Done.

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 201 \[r4\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KQPWTv619WK1tow2BLZ:-KQdqOBy1dClA88gNYoN:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/d7c07e956dd3f773d872c5ac917499701c3f881f/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L201)):*
<details><summary><i>Previously, johlju (Johan Ljunggren) wrote…</i></summary>
> Could you remove blank line here?
</details>
Done.

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 203 \[r4\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KQPWWWI8P7II4m7NfKI:-KQdqOa6id7QdslymFWx:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/d7c07e956dd3f773d872c5ac917499701c3f881f/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L203)):*
<details><summary><i>Previously, johlju (Johan Ljunggren) wrote…</i></summary>
> Could you remove extra blank line here?
</details>
Done.

---

*[DSCResources/MSFT_xSQLServerRole/Readme.md, line 3 \[r4\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KQPXMYtltM_SH0QXI7q:-KQdrSebTUnEPze8Ofgt:b-4hdrr4) ([raw file](https://github.com/powershell/xsqlserver/blob/d7c07e956dd3f773d872c5ac917499701c3f881f/DSCResources/MSFT_xSQLServerRole/Readme.md#L3)):*
<details><summary><i>Previously, johlju (Johan Ljunggren) wrote…</i></summary>
> If you see fit, can you move this text to the README.md in the root folder instead. You could add this as the description of the resource instead of the current description, below is snippet from the README.md.
> * **xSQLServerRole** resource to manage SQL server roles
> 
> When content is moved, this file should be removed. We don't have such files in the resource folder. _If someone told you or you read differently somewhere, please correct me._
</details>
I do the same thing with SharePointDSC, that's why I had the readme.md file in the resource folder. Thanks to that, the schema.mof file contains only paramater and no comment.
I put the description like other resource no problem for me and I delete the readme.md from resource folder.
Done.

---

*[Examples/SQL-ClusterDB.ps1, line 156 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmrOyaRYbGHxQlb0Us:-KQdzR-esoXtKzIcQxzS:b-nodoi6) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/Examples/SQL-ClusterDB.ps1#L156)):*
<details><summary><i>Previously, johlju (Johan Ljunggren) wrote…</i></summary>
> You have a CONFLICT in this file that are still not resolved. Please resolve. See code between`<<<<<<< HEAD` <-> `>>>>>>> dev`
</details>
Where do you see these conflicts, because I have nothing in git shell or in the pull request ?

---

*[Examples/SQL-Standalone.ps1, line 105 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmrc6vVw1tZH9so13q:-KQdz3aBHz8VcvKgB0Vu:b-nodoi6) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/Examples/SQL-Standalone.ps1#L105)):*
<details><summary><i>Previously, johlju (Johan Ljunggren) wrote…</i></summary>
> You have a CONFLICT in this file that are still not resolved. Please resolve. See code between `<<<<<<< HEAD` <-> `>>>>>>> dev`
</details>
Where do you see these conflicts, because I have nothing in git shell or in the pull request ?

---

*[Examples/SQLServerNetwork.ps1, line 61 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmrdA2q9gczCWjH3IU:-KQdzGgld61nN8tFiCMy:b-nodoi6) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/Examples/SQLServerNetwork.ps1#L61)):*
<details><summary><i>Previously, johlju (Johan Ljunggren) wrote…</i></summary>
> You have a CONFLICT in this file that are still not resolved. Please resolve. See code between `<<<<<<< HEAD` <-> `>>>>>>> dev`
</details>
Where do you see these conflicts, because I have nothing in git shell or in the pull request ?

---

*[Examples/Resources/xSQLServerRole/1-AddServerRole.ps1, line 14 \[r4\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KQPZzKM3N8syY8L6Bld:-KQdtPktFF5hVXGlb3zY:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/d7c07e956dd3f773d872c5ac917499701c3f881f/Examples/Resources/xSQLServerRole/1-AddServerRole.ps1#L14)):*
<details><summary><i>Previously, johlju (Johan Ljunggren) wrote…</i></summary>
> Add a blank line before this row
</details>
Done.

---

*[Examples/Resources/xSQLServerRole/2-RemoveServerRole.ps1, line 14 \[r4\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KQP_3ngcLpFCmk7xTXI:-KQdtQtrlbeQoYd6tSn8:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/d7c07e956dd3f773d872c5ac917499701c3f881f/Examples/Resources/xSQLServerRole/2-RemoveServerRole.ps1#L14)):*
<details><summary><i>Previously, johlju (Johan Ljunggren) wrote…</i></summary>
> Add a blank line before this row
</details>
Done.

---

*[DSCResources/MSFT_xSQLServerFirewall/MSFT_xSQLServerFirewall.schema.mof, line 15 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmlGithvdO_xdx1BRh:-KQdzKsQU118ieDmx72r:b9y1322) ([raw file](https://github.com/powershell/xsqlserver/blob/db05feb4dcfca9d08beaf48f360fba879a26f465/DSCResources/MSFT_xSQLServerFirewall/MSFT_xSQLServerFirewall.schema.mof#L15)):*
<details><summary><i>Previously, johlju (Johan Ljunggren) wrote…</i></summary>
> I was hoping this file was gonna be removed when you did a `git rebase`. 
</details>
I did the git rebase with success, I can do it again

---


*Comments from [Reviewable](https://reviewable.io:443/reviews/powershell/xsqlserver/67)*
<!-- Sent from Reviewable.io -->
",True,False,40,132778.58333333334
PowerShell/xSQLServer/67,2016-09-02T09:23:35Z,False,57c945206480fdb0d135b91b,"@luigilink, parameter names are supposed to be in PascalCase, not camelCase. See https://github.com/PowerShell/DscResources/blob/master/StyleGuidelines.md#parameter-names-use-pascal-case",True,False,40,132778.58333333334
PowerShell/xSQLServer/67,2016-09-02T11:23:48Z,False,57c961506480fda854256450,"Yes, my bad. :/ I was unclear and things got mixed up with actual parameter names. See comments below.

---

Reviewed 6 of 7 files at r6.
Review status: all files reviewed at latest revision, 24 unresolved discussions.

---

*[.gitignore, line 1 \[r6\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KQeV6RdMrVG1VU6qW4_:-KQeV6RdMrVG1VU6qW4a:b-hu1w43) ([raw file](https://github.com/powershell/xsqlserver/blob/4b61801d7c0cbe18426782d141b65d88e674063d/.gitignore#L1)):*
> ```
> *.suo
> ```

Please add the .gitignore file to itself so it is also ignored.

---

*[DSCResource.Tests, line 1 \[r4\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KQPNN_-5C4u5UstGFoI:-KQeVDc0tjfm6qUdj2PO:b-8kqpzq) ([raw file](https://github.com/powershell/xsqlserver/blob/d7c07e956dd3f773d872c5ac917499701c3f881f/DSCResource.Tests#L1)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Done.
</details>
Think you should have deleted this after you added it to the .gitignore file and commited the delete, but maybe there is a better way.  
@kwirkykat or @mbreakey3 How do we get rid of this one from the commit? Is there another way than to delete the folder and commit the delete to the PR? 

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 47 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmoxXn0_3E38C9TANr:-KQeY14fzn0kcEf-s_T8:bb6ywmx) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L47)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Done.
</details>
LGTM

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 50 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmpRc9H1ZuGlUfbPxq:-KQeYG_b-Iy248BUOdNv:b2zqom3) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L50)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Done.
</details>
This was me making a mistake again. Sorry for that again. I didn't look further than `$srvRole` name. I meant to change this to something like this so the variable name $srvRole become more descriptive.
`ForEach ($currentServerRole in $ServerRole)` 

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 137 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmpdEYpNSDMUydjEhH:-KQeZ8Op2FsBd3Moa1QR:bb6ywmx) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L137)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Done.
</details>
LGTM

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 138 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmpjILE9gbSm88HEs-:-KQeZFkC8NYuIww3HHvm:b-6q042n) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L138)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Done
</details>
 Sorry. I meant to change this to something like this so the variable name $srvRole become more descriptive.
`ForEach ($currentServerRole in $ServerRole)` 

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 29 \[r4\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KQPOg9zLa3iBlIccAzE:-KQeXxxhd6HFbGdDtdv_:bb6ywmx) ([raw file](https://github.com/powershell/xsqlserver/blob/d7c07e956dd3f773d872c5ac917499701c3f881f/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L29)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Done.
</details>
LGTM

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 38 \[r4\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KQPT_6AzWw5zFOQ8Aj9:-KQeXzMeIgRvoZyUihNN:bb6ywmx) ([raw file](https://github.com/powershell/xsqlserver/blob/d7c07e956dd3f773d872c5ac917499701c3f881f/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L38)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Done.
</details>
LGTM

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 92 \[r4\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KQREUS7eNZ_atNPrPO-:-KQeYx9khDz5GukhLpFC:b-m9mf1m) ([raw file](https://github.com/powershell/xsqlserver/blob/d7c07e956dd3f773d872c5ac917499701c3f881f/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L92)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Done.
</details>
Still see two blank lines here, can you make sure it's only one blank line before set Set-method?

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 166 \[r4\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KQREaeKZONoVgxjDvDG:-KQeZSVlyqkEFBzICJTu:bb6ywmx) ([raw file](https://github.com/powershell/xsqlserver/blob/d7c07e956dd3f773d872c5ac917499701c3f881f/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L166)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Done.
</details>
LGTM

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 196 \[r4\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KQPW3CHQdU2-dRGP9Ei:-KQeZcVQDqGQdBkhGoaA:bb6ywmx) ([raw file](https://github.com/powershell/xsqlserver/blob/d7c07e956dd3f773d872c5ac917499701c3f881f/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L196)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Done.
</details>
LGTM

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 201 \[r4\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KQPWTv619WK1tow2BLZ:-KQeZoQCV2PjOCgiju8B:bb6ywmx) ([raw file](https://github.com/powershell/xsqlserver/blob/d7c07e956dd3f773d872c5ac917499701c3f881f/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L201)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Done.
</details>
LGTM

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 203 \[r4\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KQPWWWI8P7II4m7NfKI:-KQeZpKLrcF2c_7QaunJ:bb6ywmx) ([raw file](https://github.com/powershell/xsqlserver/blob/d7c07e956dd3f773d872c5ac917499701c3f881f/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L203)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Done.
</details>
LGTM

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 27 \[r6\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KQeW80D6lyGDQPISR-W:-KQeW80D6lyGDQPISR-X:b-j2bwky) ([raw file](https://github.com/powershell/xsqlserver/blob/4b61801d7c0cbe18426782d141b65d88e674063d/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L27)):*
> ```PowerShell
>         [ValidateSet(""bulkadmin"",""dbcreator"",""diskadmin"",""processadmin"",""public"",""securityadmin"",""serveradmin"",""setupadmin"",""sysadmin"")]
>         [System.String[]]
>         $serverRole,
> ```

Okay, so these parameter variable names shouldn't been changed. Very sorry, I messed up totally here. I was very unclear (see comment below) :/ Sorry for the extra work. :(
Please change back to $ServerRole

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 166 \[r6\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KQeZTKlhy5CFqoNHf2F:-KQeZTKlhy5CFqoNHf2G:b-iq2bq2) ([raw file](https://github.com/powershell/xsqlserver/blob/4b61801d7c0cbe18426782d141b65d88e674063d/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L166)):*
> ```PowerShell
> }
> ```

There are two blank lines before the Test-method, can ju make sure it's only one blank row?

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 198 \[r6\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KQeZgNUXh1wjNbmyPJl:-KQeZgNUXh1wjNbmyPJm:b681eav) ([raw file](https://github.com/powershell/xsqlserver/blob/4b61801d7c0cbe18426782d141b65d88e674063d/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L198)):*
> $currentValues.serverRole

This should be `$currentValues.ServerRole`

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.schema.mof, line 7 \[r6\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KQe_F52tv1CN9SHDf_m:-KQe_F52tv1CN9SHDf_n:b-drlmkc) ([raw file](https://github.com/powershell/xsqlserver/blob/4b61801d7c0cbe18426782d141b65d88e674063d/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.schema.mof#L7)):*
> ```
>     [Key, Description(""The name of the SQL login.  If LoginType='WindowsUser' or 'WindowsGroup', this is also the name of the user or group in format DOMAIN\name."")] String Name;
>     [Write, Description(""An enumerated value that describes if the login exists on the SQL instance.\nPresent {default}  \nAbsent   \n""), ValueMap{""Present"",""Absent""}, Values{""Present"",""Absent""}] String Ensure;
>     [Required, Description(""Type of SQL role to add""), ValueMap{""bulkadmin"",""dbcreator"",""diskadmin"",""processadmin"",""public"",""securityadmin"",""serveradmin"",""setupadmin"",""sysadmin""}, Values{""bulkadmin"",""dbcreator"",""diskadmin"",""processadmin"",""public"",""securityadmin"",""serveradmin"",""setupadmin"",""sysadmin""}] String serverRole[];
> ```

Change this back to `ServerRole`.

---

*[Examples/SQL-ClusterDB.ps1, line 156 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmrOyaRYbGHxQlb0Us:-KQeaFELBZxBamHJyt21:b-yzyo0u) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/Examples/SQL-ClusterDB.ps1#L156)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Where do you see these conflicts, because I have nothing in git shell or in the pull request ?
</details>
See line 158 `<<<<<<< HEAD` to line 170 `>>>>>>> dev`. The code between here was a conflict when rebasing. :)

---

*[Examples/SQL-Standalone.ps1, line 105 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmrc6vVw1tZH9so13q:-KQeajq6j6CQrBK2kEY3:bvaz2of) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/Examples/SQL-Standalone.ps1#L105)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Where do you see these conflicts, because I have nothing in git shell or in the pull request ?
</details>
See line 107 `<<<<<<< HEAD` to line 115 `>>>>>>> dev`. The code between here was a conflict when rebasing. :)

---

*[Examples/SQLServerNetwork.ps1, line 61 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmrdA2q9gczCWjH3IU:-KQeb1HU4PaNAGySUhRR:b3lo5kv) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/Examples/SQLServerNetwork.ps1#L61)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Where do you see these conflicts, because I have nothing in git shell or in the pull request ?
</details>
See line 63 `<<<<<<< HEAD` to line 71 `>>>>>>> dev`. The code between here was a conflict when rebasing. :)

---

*[Examples/Resources/xSQLServerRole/1-AddServerRole.ps1, line 14 \[r4\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KQPZzKM3N8syY8L6Bld:-KQebBEvAFyWDUj4fwi-:bb6ywmx) ([raw file](https://github.com/powershell/xsqlserver/blob/d7c07e956dd3f773d872c5ac917499701c3f881f/Examples/Resources/xSQLServerRole/1-AddServerRole.ps1#L14)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Done.
</details>
LGTM

---

*[Examples/Resources/xSQLServerRole/2-RemoveServerRole.ps1, line 14 \[r4\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KQP_3ngcLpFCmk7xTXI:-KQebCF-2YgAyUs1UKa3:bb6ywmx) ([raw file](https://github.com/powershell/xsqlserver/blob/d7c07e956dd3f773d872c5ac917499701c3f881f/Examples/Resources/xSQLServerRole/2-RemoveServerRole.ps1#L14)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Done.
</details>
LGTM

---

*[DSCResources/MSFT_xSQLServerFirewall/MSFT_xSQLServerFirewall.schema.mof, line 15 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmlGithvdO_xdx1BRh:-KQebL9046K1XTzeJOjD:b-35hxea) ([raw file](https://github.com/powershell/xsqlserver/blob/db05feb4dcfca9d08beaf48f360fba879a26f465/DSCResources/MSFT_xSQLServerFirewall/MSFT_xSQLServerFirewall.schema.mof#L15)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> I did the git rebase with success, I can do it again
</details>
No need! It was successful! It's only showing in reviewable because of the comments. It's is not part of the PR anymore! Success! :smile: 

LGTM

---

*[DSCResources/MSFT_xSQLServerRole/Readme.md, line 3 \[r4\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KQPXMYtltM_SH0QXI7q:-KQecO7xjBW4m9CdNP9O:b-govws1) ([raw file](https://github.com/powershell/xsqlserver/blob/d7c07e956dd3f773d872c5ac917499701c3f881f/DSCResources/MSFT_xSQLServerRole/Readme.md#L3)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> I do the same thing with SharePointDSC, that's why I had the readme.md file in the resource folder. Thanks to that, the schema.mof file contains only paramater and no comment.
> I put the description like other resource no problem for me and I delete the readme.md from resource folder.
> Done.
</details>
I added a new issue to DscResource repo to discuss if this is something we should have here as well. But leave it out for now (as you did)

LGTM

---


*Comments from [Reviewable](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-:-KQeck1HZ4NOOJmyuQwP:b-f4stm1)*
<!-- Sent from Reviewable.io -->
",True,False,40,132778.58333333334
PowerShell/xSQLServer/67,2016-09-02T11:25:19Z,False,57c961a36480fdaae67d684b,"



Reviewed 1 of 7 files at r6.
Review status: all files reviewed at latest revision, 24 unresolved discussions.

---



*Comments from [Reviewable](https://reviewable.io:443/reviews/powershell/xsqlserver/67)*
<!-- Sent from Reviewable.io -->
",True,False,40,132778.58333333334
PowerShell/xSQLServer/67,2016-09-02T11:29:33Z,False,57c962a46480fda8a794cf87,"



Review status: all files reviewed at latest revision, 24 unresolved discussions.

---

*[DSCResource.Tests, line 1 \[r4\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KQPNN_-5C4u5UstGFoI:-KQee634_xdyrNZoCd_V:b-4hfo7k) ([raw file](https://github.com/powershell/xsqlserver/blob/d7c07e956dd3f773d872c5ac917499701c3f881f/DSCResource.Tests#L1)):*
<details><summary><i>Previously, johlju (Johan Ljunggren) wrote…</i></summary>
> Think you should have deleted this after you added it to the .gitignore file and commited the delete, but maybe there is a better way.  
> @kwirkykat or @mbreakey3 How do we get rid of this one from the commit? Is there another way than to delete the folder and commit the delete to the PR? 
</details>
Is the .gitignore file case-sensitive so you need to add `DSCResource.Tests` (DSC in capital)?

---


*Comments from [Reviewable](https://reviewable.io:443/reviews/powershell/xsqlserver/67)*
<!-- Sent from Reviewable.io -->
",True,False,40,132778.58333333334
PowerShell/xSQLServer/67,2016-09-02T13:15:23Z,False,57c97b6f6480fda892d17540,"



Review status: all files reviewed at latest revision, 12 unresolved discussions.

---

*[.gitignore, line 1 \[r6\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KQeV6RdMrVG1VU6qW4_:-KQezMYpZrzI0bDRSTb_:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/4b61801d7c0cbe18426782d141b65d88e674063d/.gitignore#L1)):*
<details><summary><i>Previously, johlju (Johan Ljunggren) wrote…</i></summary>
> Please add the .gitignore file to itself so it is also ignored.
</details>
Done.

---

*[DSCResource.Tests, line 1 \[r4\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KQPNN_-5C4u5UstGFoI:-KQezSQh4Bb5in-WOZ5_:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/d7c07e956dd3f773d872c5ac917499701c3f881f/DSCResource.Tests#L1)):*
<details><summary><i>Previously, johlju (Johan Ljunggren) wrote…</i></summary>
> Is the .gitignore file case-sensitive so you need to add `DSCResource.Tests` (DSC in capital)?
</details>
Done.

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 50 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmpRc9H1ZuGlUfbPxq:-KQf-FWh35VHytYztvzS:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L50)):*
<details><summary><i>Previously, johlju (Johan Ljunggren) wrote…</i></summary>
> This was me making a mistake again. Sorry for that again. I didn't look further than `$srvRole` name. I meant to change this to something like this so the variable name $srvRole become more descriptive.
> `ForEach ($currentServerRole in $ServerRole)` 
</details>
Done.

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 138 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmpjILE9gbSm88HEs-:-KQf-LBNJWsWq_krrkns:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L138)):*
<details><summary><i>Previously, johlju (Johan Ljunggren) wrote…</i></summary>
>  Sorry. I meant to change this to something like this so the variable name $srvRole become more descriptive.
> `ForEach ($currentServerRole in $ServerRole)` 
</details>
Done.

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 92 \[r4\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KQREUS7eNZ_atNPrPO-:-KQf-uo6pPGe7GV1yQdK:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/d7c07e956dd3f773d872c5ac917499701c3f881f/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L92)):*
<details><summary><i>Previously, johlju (Johan Ljunggren) wrote…</i></summary>
> Still see two blank lines here, can you make sure it's only one blank line before set Set-method?
</details>
Done.

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 27 \[r6\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KQeW80D6lyGDQPISR-W:-KQf-ssQJCMRo99Kb-x7:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/4b61801d7c0cbe18426782d141b65d88e674063d/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L27)):*
<details><summary><i>Previously, johlju (Johan Ljunggren) wrote…</i></summary>
> Okay, so these parameter variable names shouldn't been changed. Very sorry, I messed up totally here. I was very unclear (see comment below) :/ Sorry for the extra work. :(
> Please change back to $ServerRole
</details>
Done.

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 166 \[r6\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KQeZTKlhy5CFqoNHf2F:-KQf-UIPBjXGCOGFMcU6:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/4b61801d7c0cbe18426782d141b65d88e674063d/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L166)):*
<details><summary><i>Previously, johlju (Johan Ljunggren) wrote…</i></summary>
> There are two blank lines before the Test-method, can ju make sure it's only one blank row?
</details>
Done.

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 198 \[r6\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KQeZgNUXh1wjNbmyPJl:-KQf05MGrRgqWpk8UPZM:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/4b61801d7c0cbe18426782d141b65d88e674063d/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L198)):*
<details><summary><i>Previously, johlju (Johan Ljunggren) wrote…</i></summary>
> > $currentValues.serverRole
> 
> This should be `$currentValues.ServerRole`
</details>
Done.

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.schema.mof, line 7 \[r6\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KQe_F52tv1CN9SHDf_m:-KQf-YdVZ-SZra_t_2qx:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/4b61801d7c0cbe18426782d141b65d88e674063d/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.schema.mof#L7)):*
<details><summary><i>Previously, johlju (Johan Ljunggren) wrote…</i></summary>
> Change this back to `ServerRole`.
</details>
Done.

---

*[Examples/SQL-ClusterDB.ps1, line 156 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmrOyaRYbGHxQlb0Us:-KQf12MMGiPOwTmumpYV:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/Examples/SQL-ClusterDB.ps1#L156)):*
<details><summary><i>Previously, johlju (Johan Ljunggren) wrote…</i></summary>
> See line 158 `<<<<<<< HEAD` to line 170 `>>>>>>> dev`. The code between here was a conflict when rebasing. :)
</details>
Done.

---

*[Examples/SQL-Standalone.ps1, line 105 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmrc6vVw1tZH9so13q:-KQf1-YvoCSxSFA_hNzJ:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/Examples/SQL-Standalone.ps1#L105)):*
<details><summary><i>Previously, johlju (Johan Ljunggren) wrote…</i></summary>
> See line 107 `<<<<<<< HEAD` to line 115 `>>>>>>> dev`. The code between here was a conflict when rebasing. :)
</details>
Done.

---

*[Examples/SQLServerNetwork.ps1, line 61 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmrdA2q9gczCWjH3IU:-KQf1U_tdVZmrpsfqBNp:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/Examples/SQLServerNetwork.ps1#L61)):*
<details><summary><i>Previously, johlju (Johan Ljunggren) wrote…</i></summary>
> See line 63 `<<<<<<< HEAD` to line 71 `>>>>>>> dev`. The code between here was a conflict when rebasing. :)
</details>
Done.

---


*Comments from [Reviewable](https://reviewable.io:443/reviews/powershell/xsqlserver/67)*
<!-- Sent from Reviewable.io -->
",True,False,40,132778.58333333334
PowerShell/xSQLServer/67,2016-09-02T13:28:14Z,False,57c97e746480fdb22705db77,"



Reviewed 4 of 7 files at r6, 6 of 6 files at r7.
Review status: all files reviewed at latest revision, 12 unresolved discussions.

---



*Comments from [Reviewable](https://reviewable.io:443/reviews/powershell/xsqlserver/67)*
<!-- Sent from Reviewable.io -->
",True,False,40,132778.58333333334
PowerShell/xSQLServer/67,2016-09-02T15:50:39Z,False,57c99fd26480fdaa57eccc68,"To get rid of the .gitignore file and the DSCResource.Test, let's try to just delete them. If there is a better way, I hope someone tells us :smile:

1. Copy the .gitignore file some where (you need to copy it back later)
2. Delete the .gitignore file and the DSCResource.Tests folder from the source.
3. Commit the change and push it to the PR (as normal). _The changes you commit should only be the deletes as you did at step 2._
4. Copy back the .gitignore file (the .gitignore file should not show up as to be staged for commit at this point)

---

Reviewed 1 of 10 files at r4, 6 of 6 files at r7.
Review status: all files reviewed at latest revision, 12 unresolved discussions.

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 50 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmpRc9H1ZuGlUfbPxq:-KQfYG2tUgmXmlNRC22Z:bb6ywmx) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L50)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Done.
</details>
LGTM

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 138 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmpjILE9gbSm88HEs-:-KQfYR_zq5M_LEiisM08:bb6ywmx) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L138)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Done.
</details>
LGTM

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 92 \[r4\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KQREUS7eNZ_atNPrPO-:-KQfYN_6naHifrhSCSYp:bb6ywmx) ([raw file](https://github.com/powershell/xsqlserver/blob/d7c07e956dd3f773d872c5ac917499701c3f881f/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L92)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Done.
</details>
LGTM

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 27 \[r6\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KQeW80D6lyGDQPISR-W:-KQfY7qVwmk-rvvlucDu:bb6ywmx) ([raw file](https://github.com/powershell/xsqlserver/blob/4b61801d7c0cbe18426782d141b65d88e674063d/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L27)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Done.
</details>
LGTM

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 166 \[r6\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KQeZTKlhy5CFqoNHf2F:-KQfYUlzOHlk795J4lwF:bb6ywmx) ([raw file](https://github.com/powershell/xsqlserver/blob/4b61801d7c0cbe18426782d141b65d88e674063d/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L166)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Done.
</details>
LGTM

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 198 \[r6\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KQeZgNUXh1wjNbmyPJl:-KQfYWMzyJVaWSJcU7Fp:bb6ywmx) ([raw file](https://github.com/powershell/xsqlserver/blob/4b61801d7c0cbe18426782d141b65d88e674063d/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L198)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Done.
</details>
LGTM

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.schema.mof, line 7 \[r6\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KQe_F52tv1CN9SHDf_m:-KQfY_5s5Oe1c6D3qjsG:bb6ywmx) ([raw file](https://github.com/powershell/xsqlserver/blob/4b61801d7c0cbe18426782d141b65d88e674063d/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.schema.mof#L7)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Done.
</details>
LGTM

---

*[Examples/SQL-ClusterDB.ps1, line 156 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmrOyaRYbGHxQlb0Us:-KQfYrpQRjL2hKjkYhn5:bb6ywmx) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/Examples/SQL-ClusterDB.ps1#L156)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Done.
</details>
LGTM

---

*[Examples/SQL-Standalone.ps1, line 105 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmrc6vVw1tZH9so13q:-KQfYtqqUU4OIq9iZAxI:bb6ywmx) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/Examples/SQL-Standalone.ps1#L105)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Done.
</details>
LGTM

---

*[Examples/SQLServerNetwork.ps1, line 61 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmrdA2q9gczCWjH3IU:-KQfYuwgOjtnDrGk54Rz:bb6ywmx) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/Examples/SQLServerNetwork.ps1#L61)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Done.
</details>
LGTM

---


*Comments from [Reviewable](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-:-KQfZQ5KhjAkv7rs9vIU:b-nxd5br)*
<!-- Sent from Reviewable.io -->
",True,False,40,132778.58333333334
PowerShell/xSQLServer/67,2016-09-02T16:04:23Z,False,57c9a30c6480fda88099a30a,"



Review status: all files reviewed at latest revision, 4 unresolved discussions.

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 38 \[r7\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KQfbyiGYaOfILBjMGoe:-KQfbyiGYaOfILBjMGof:b-7t72mu) ([raw file](https://github.com/powershell/xsqlserver/blob/ef10cb6c3deef2152b8f978f6b8bc4f0efe82c30/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L38)):*
> ```PowerShell
>     )
> 
>     if(!$sql)
> ```

I've missed comment on this one. But think this is the last style change. :)

Can you change all `if(` to `if (`in the code (blank space after if)
https://github.com/johlju/DscResources/blob/master/StyleGuidelines.md#one-space-between-keyword-and-parenthesis

---


*Comments from [Reviewable](https://reviewable.io:443/reviews/powershell/xsqlserver/67)*
<!-- Sent from Reviewable.io -->
",True,False,40,132778.58333333334
PowerShell/xSQLServer/67,2016-09-02T16:12:55Z,False,57c9a50d6480fdb0041f5cbc,"



Review status: 4 of 5 files reviewed at latest revision, 4 unresolved discussions.

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 38 \[r7\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KQfbyiGYaOfILBjMGoe:-KQff-5VBwU4hnQntbtc:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/ef10cb6c3deef2152b8f978f6b8bc4f0efe82c30/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L38)):*
<details><summary><i>Previously, johlju (Johan Ljunggren) wrote…</i></summary>
> I've missed comment on this one. But think this is the last style change. :)
> 
> Can you change all `if(` to `if (`in the code (blank space after if)
> https://github.com/johlju/DscResources/blob/master/StyleGuidelines.md#one-space-between-keyword-and-parenthesis
</details>
Done.

---


*Comments from [Reviewable](https://reviewable.io:443/reviews/powershell/xsqlserver/67)*
<!-- Sent from Reviewable.io -->
",True,False,40,132778.58333333334
PowerShell/xSQLServer/67,2016-09-02T16:13:04Z,False,57c9a5136480fda95634df25,"



Reviewed 3 of 3 files at r8.
Review status: all files reviewed at latest revision, 4 unresolved discussions.

---



*Comments from [Reviewable](https://reviewable.io:443/reviews/powershell/xsqlserver/67)*
<!-- Sent from Reviewable.io -->
",True,False,40,132778.58333333334
PowerShell/xSQLServer/67,2016-09-02T16:22:25Z,False,57c9a7466480fdaea338d633,"



Review status: all files reviewed at latest revision, 4 unresolved discussions.

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 38 \[r7\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KQfbyiGYaOfILBjMGoe:-KQfhGNf-HevXw43EQOl:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/ef10cb6c3deef2152b8f978f6b8bc4f0efe82c30/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L38)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Done.
</details>
Done.

---

*[.gitignore, line 1 \[r6\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KQeV6RdMrVG1VU6qW4_:-KQfhHPs4Q8yzLKBPsfh:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/4b61801d7c0cbe18426782d141b65d88e674063d/.gitignore#L1)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Done.
</details>
Done.

---

*[DSCResource.Tests, line 1 \[r4\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KQPNN_-5C4u5UstGFoI:-KQfhI5gnPB6GfA2fSc-:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/d7c07e956dd3f773d872c5ac917499701c3f881f/DSCResource.Tests#L1)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Done.
</details>
Done.

---

*[Examples/SQL-ClusterDB.ps1, line 156 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmrOyaRYbGHxQlb0Us:-KQfhJmsQVQt7qbl85Yu:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/Examples/SQL-ClusterDB.ps1#L156)):*
<details><summary><i>Previously, johlju (Johan Ljunggren) wrote…</i></summary>
> LGTM
</details>
Done.

---


*Comments from [Reviewable](https://reviewable.io:443/reviews/powershell/xsqlserver/67)*
<!-- Sent from Reviewable.io -->
",True,False,40,132778.58333333334
PowerShell/xSQLServer/67,2016-09-02T16:55:43Z,False,57c9af116480fda8cc329f17,"<img class=""emoji"" title="":lgtm:"" alt="":lgtm:"" align=""absmiddle"" src=""https://reviewable.io/lgtm.png"" height=""20"" width=""61""/>

I don't think the PowerShell Team is enforcing that these existing resources need to have a unit test when doing code changes (they do on new resources).
But it would be awesome if you could write one for this resource. I think you have a good example [here](https://github.com/PowerShell/xSQLServer/blob/dev/Tests/Unit/MSFT_xSQLServerLogin.Tests.ps1).
Do you think that is something you would feel up to?

---

Reviewed 2 of 3 files at r8.
Review status: all files reviewed at latest revision, 4 unresolved discussions.

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 38 \[r7\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KQfbyiGYaOfILBjMGoe:-KQfkCpLZfVmZb6l5ogJ:bb6ywmx) ([raw file](https://github.com/powershell/xsqlserver/blob/ef10cb6c3deef2152b8f978f6b8bc4f0efe82c30/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L38)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Done.
</details>
LGTM

---

*[.gitignore, line 1 \[r6\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KQeV6RdMrVG1VU6qW4_:-KQfk6PW1Ege1wpozrhm:bb6ywmx) ([raw file](https://github.com/powershell/xsqlserver/blob/4b61801d7c0cbe18426782d141b65d88e674063d/.gitignore#L1)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Done.
</details>
LGTM

---

*[DSCResource.Tests, line 1 \[r4\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KQPNN_-5C4u5UstGFoI:-KQfXi4yzyuAE-uLw3xC:bb6ywmx) ([raw file](https://github.com/powershell/xsqlserver/blob/d7c07e956dd3f773d872c5ac917499701c3f881f/DSCResource.Tests#L1)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Done.
</details>
LGTM

---

*[Examples/SQL-ClusterDB.ps1, line 156 \[r3\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KPmrOyaRYbGHxQlb0Us:-KQfkA8ZaYlYCGgYR8ux:bb6ywmx) ([raw file](https://github.com/powershell/xsqlserver/blob/6eded4255e9097ebeb1a2e22a5a91bd2328274d3/Examples/SQL-ClusterDB.ps1#L156)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> Done.
</details>
LGTM

---


*Comments from [Reviewable](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-:-KQflaxkcBaPt-RK3SRd:b-huupbb)*
<!-- Sent from Reviewable.io -->
",True,False,40,132778.58333333334
PowerShell/xSQLServer/67,2016-09-02T17:03:16Z,False,57c9b0df6480fdafae7b0b50,"My bad, this **is** a new resource so I think they are gonna enforce that this one has a unit test before merging. Let me know if you need assistance in creating one. :)

---

Review status: all files reviewed at latest revision, 4 unresolved discussions.

---



*Comments from [Reviewable](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-:-KQfqING5-qGNGuCqs2P:bl7c0rk)*
<!-- Sent from Reviewable.io -->
",True,False,40,132778.58333333334
PowerShell/xSQLServer/67,2016-09-02T18:39:47Z,False,57c9c7786480fda82a16729c,"Yes, all PRs with fairly substantial changes need to have (at least) unit tests for those changes.",True,False,40,132778.58333333334
angular/angular.io/2271,2016-09-06T20:09:10Z,False,57cf22686480fdabbd414ee1,not needed,True,False,7,10243.983333333334
angular/angular.io/2271,2016-09-06T20:09:17Z,False,57cf226e6480fdb15bd8d6c9,drop the `$`,True,False,7,10243.983333333334
angular/angular.io/2271,2016-09-06T20:09:17Z,False,57cf226e6480fdb30fa4203a,drop the `$`,True,False,7,10243.983333333334
angular/angular.io/2271,2016-09-06T20:09:22Z,False,57cf22776480fda83f0343ed,same here,True,False,7,10243.983333333334
angular/angular.io/2271,2016-09-06T20:09:22Z,False,57cf22776480fda8809b3fea,same here,True,False,7,10243.983333333334
angular/angular.io/2271,2016-09-06T20:10:49Z,False,57cf22cc6480fdaee9203869,I've request a few small fixes. Otherwise looks good.,True,False,7,10243.983333333334
camwiegert/in-view/23,2016-09-08T00:09:24Z,False,57d0ac496480fdb004218e0d,"@VanBronckhorst Thanks for this! Now that per-direction offset is merged, this is up next. I'll be back shortly with feedback and we can get this in place.",True,False,3,41394.11666666667
PowerShell/xSQLServer/67,2016-09-09T09:47:29Z,False,57d285386480fdae3a38c282,"Unit Test added for this resource, could you give me feedback.",True,False,40,132778.58333333334
facebook/react-native/9511,2016-09-09T10:51:53Z,False,57d294526480fda8809c8d70,@facebook-github-bot shipit,True,False,8,26629.183333333334
facebook/react-native/9511,2016-09-09T10:52:21Z,False,57d294696480fdb19e4eaa4d,Thanks for importing. If you are an FB employee go to [Phabricator](https://phabricator.intern.facebook.com/D3841281) to review internal test results.,True,False,8,26629.183333333334
facebook/react-native/9511,2016-09-09T10:54:13Z,False,57d294dd6480fdb15bda1ef3,"This message was created automatically by mail delivery software.

A message that you sent could not be delivered to one or more of its
recipients. This is a temporary error. The following address(es) deferred:

  tajindersingh.3012@gmail.com
    Domain thumbmunkeys.com has exceeded the max emails per hour (60/60 (100%)) allowed.  Message will be reattempted later

------- This is a copy of the message, including all the headers. ------
Received: from filter01.reliabledns.org ([199.96.156.50]:53695)
	by en02-ams.stablehost.com with esmtps (TLSv1.2:ECDHE-RSA-AES256-GCM-SHA384:256)
	(Exim 4.87)
	(envelope-from <noreply@github.com>)
	id 1biJRa-003JeC-RM
	for bunny@thumbmunkeys.com; Fri, 09 Sep 2016 10:54:04 +0000
Received: from github-smtp2-ext3.iad.github.net ([192.30.252.194] helo=github-smtp2b-ext-cp1-prd.iad.github.net)
	by filter01.reliabledns.org with esmtps (TLSv1.2:DHE-RSA-AES256-SHA:256)
	(Exim 4.85)
	(envelope-from <noreply@github.com>)
	id 1biJRX-00058n-I0
	for bunny@thumbmunkeys.com; Fri, 09 Sep 2016 03:54:02 -0700
Date: Fri, 09 Sep 2016 03:53:58 -0700
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=github.com;
	s=pf2014; t=1473418438;
	bh=PQnUMYiwEsGgR0TBB9DOwS7bN4wuirMsco4csrdS37s=;
	h=From:Reply-To:To:In-Reply-To:References:Subject:List-ID:
	 List-Archive:List-Post:List-Unsubscribe:From;
	b=jGKe42vWwW2DB5R41hq9bl36cLgzinZq9oHMyBo0sS60h9GGYIhS/le716WhY9wCA
	 35eDMcvaNljIY4cBCIVugh7LhPO4imjWqltZMZUDK6mQ9yLmY/cNUB31ftihytJmaR
	 Vp6x9+4vnii229xLWOEn55JkxX6hbdQUg+WBwioQ=
From: Facebook Community Bot <notifications@github.com>
Reply-To: facebook/react-native <reply@reply.github.com>
To: facebook/react-native <react-native@noreply.github.com>
Message-ID: <facebook/react-native/pull/9511/c245881928@github.com>
In-Reply-To: <facebook/react-native/pull/9511@github.com>
References: <facebook/react-native/pull/9511@github.com>
Subject: Re: [facebook/react-native] [iOS] enable versionning in xcode project
 (#9511)
Mime-Version: 1.0
Content-Type: multipart/alternative;
 boundary=""--==_mimepart_57d294c65cf60_2ddc3fc09ed112a0329689"";
 charset=UTF-8
Content-Transfer-Encoding: 7bit
Precedence: list
X-GitHub-Sender: facebook-github-bot-4
X-GitHub-Recipient: bunnyboy1
List-ID: facebook/react-native <react-native.facebook.github.com>
List-Archive: https://github.com/facebook/react-native
List-Post: <mailto:reply@reply.github.com>
List-Unsubscribe: <mailto:unsub+011a0d83f40d439fa67763fbb8e920cfa6c9e24ff438eab492cf0000000113ea56c692a169ce0a45ce50@reply.github.com>,
 <https://github.com/notifications/unsubscribe/ARoNg6biC03cmo_YWbeAW2YDXzyoKAlRks5qoTrGgaJpZM4JpaeB>
X-Auto-Response-Suppress: All
X-GitHub-Recipient-Address: bunny@thumbmunkeys.com
Received-SPF: pass (filter01.reliabledns.org: domain of github.com designates 192.30.252.194 as permitted sender) client-ip=192.30.252.194; envelope-from=noreply@github.com; helo=github-smtp2b-ext-cp1-prd.iad.github.net;
X-SPF-Result: filter01.reliabledns.org: domain of github.com designates 192.30.252.194 as permitted sender
Authentication-Results: filter01.reliabledns.org; dmarc=pass header.from=github.com
X-Filter-ID: s0sct1PQhAABKnZB5plbIamwIYzgudGL4tMY9zS3pea7KY6rzXjgC+rgKYUjsj8D0JuF70A4EJMc
 Wn6O/bsgoWSYW6KbZfj8apx6ohl75uX35Caz8bqM3i8tzwcg+lnkZzoX7PhhDs80mBQKIGWwu/ZE
 jF4Pov/vsc2Cwocc9pJwJVSL6KLw+g28lkb31HyS94pE1Cssu3RLQ0/o4r6NbA8zp1yYIFRkRN8y
 Bn+CxV3c2rxRLzIn+w+J3NDyjtIKbiDqpvcqvGr62J6i5S97spz3A1ed2ITkOuMtrwds5D4lTQ4T
 s4pbWtZ3YR/lXG1VJq/4FZbX1lzD9O+fyiIjB8wTNR/tjjZvmBdM/4lPZO2sASVdHfbtk3LlI8pB
 wr4jGeKz8vlEl/GSEiCnxc6Ard0BaVp3jhK5GOBJIv+LCtDC+P7wO5Dn5esh4VR+ptzHN0JkcMmQ
 sV7j9toT40ga/GYzx2Zgyhf3OXiddZgacWc1/+H6OHgtV1bmxcq0CB3pmrFpDzdgJQc/rZDiOC7K
 RpZxGk3X7U/CrpemaTYEqjR6fyHrrsngmi97syQy+4L3p7+eg7tptOUU98CNo4IBbK0jiD6XqsJZ
 tjQxlyCdsezJow6Hi0pxrFS5O4yOAY8o6W0BvTIC60F9LNR/0kDSJQ==
X-Report-Abuse-To: spam@filter01.reliabledns.org
Authentication-Results: reliabledns.org; spf=pass smtp.mailfrom=noreply@github.com
Authentication-Results: reliabledns.org; dkim=pass header.i=github.com
X-SpamExperts-Class: ham
X-SpamExperts-Evidence: Combined (0.27)
X-Recommended-Action: accept
X-Spam-Status: No, score=3.5
X-Spam-Score: 35
X-Spam-Bar: +++
X-Ham-Report: Spam detection software, running on the system ""en02-ams.stablehost.com"",
 has NOT identified this incoming email as spam.  The original
 message has been attached to this so you can view it or label
 similar future email.  If you have any questions, see
 root\@localhost for details.
 
 Content preview:  Thanks for importing. If you are an FB employee go to [Phabricator](https://phabricator.intern.facebook.com/D3841281)
    to review internal test results. -- You are receiving this because you are
    subscribed to this thread. Reply to this email directly or view it on GitHub:
    https://github.com/facebook/react-native/pull/9511#issuecomment-245881928
    [...] 
 
 Content analysis details:   (3.5 points, 5.0 required)
 
  pts rule name              description
 ---- ---------------------- --------------------------------------------------
  2.4 RCVD_IN_SORBS_SPAM     RBL: SORBS: sender is a spam source
                             [192.30.252.194 listed in dnsbl.sorbs.net]
 -0.0 RCVD_IN_DNSWL_NONE     RBL: Sender listed at http://www.dnswl.org/, no
                             trust
                             [199.96.156.50 listed in list.dnswl.org]
  1.5 SPF_SOFTFAIL           SPF: sender does not match SPF record (softfail)
 -1.9 BAYES_00               BODY: Bayes spam probability is 0 to 1%
                             [score: 0.0000]
  1.6 HTML_IMAGE_ONLY_24     BODY: HTML: images with 2000-2400 bytes of words
  0.0 HTML_MESSAGE           BODY: HTML included in message
 -0.1 DKIM_VALID             Message has at least one valid DKIM or DK signature
 -0.1 DKIM_VALID_AU          Message has a valid DKIM or DK signature from author's
                             domain
  0.1 DKIM_SIGNED            Message has a DKIM or DK signature, not necessarily valid
X-Spam-Flag: NO


----==_mimepart_57d294c65cf60_2ddc3fc09ed112a0329689
Content-Type: text/plain;
 charset=UTF-8
Content-Transfer-Encoding: 7bit

Thanks for importing. If you are an FB employee go to [Phabricator](https://phabricator.intern.facebook.com/D3841281) to review internal test results.

-- 
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/facebook/react-native/pull/9511#issuecomment-245881928
----==_mimepart_57d294c65cf60_2ddc3fc09ed112a0329689
Content-Type: text/html;
 charset=UTF-8
Content-Transfer-Encoding: 7bit

<p>Thanks for importing. If you are an FB employee go to <a href=""https://phabricator.intern.facebook.com/D3841281"">Phabricator</a> to review internal test results.</p>

<p style=""font-size:small;-webkit-text-size-adjust:none;color:#666;"">&mdash;<br />You are receiving this because you are subscribed to this thread.<br />Reply to this email directly, <a href=""https://github.com/facebook/react-native/pull/9511#issuecomment-245881928"">view it on GitHub</a>, or <a href=""https://github.com/notifications/unsubscribe-auth/ARoNg9GM5IXifd4YaOEIq0ZDXLLhBEpuks5qoTrGgaJpZM4JpaeB"">mute the thread</a>.<img alt="""" height=""1"" src=""https://github.com/notifications/beacon/ARoNg7Ls1RXiSj_Ppan_XCfMLeCC-sWKks5qoTrGgaJpZM4JpaeB.gif"" width=""1"" /></p>
<div itemscope itemtype=""http://schema.org/EmailMessage"">
<div itemprop=""action"" itemscope itemtype=""http://schema.org/ViewAction"">
  <link itemprop=""url"" href=""https://github.com/facebook/react-native/pull/9511#issuecomment-245881928""></link>
  <meta itemprop=""name"" content=""View Pull Request""></meta>
</div>
<meta itemprop=""description"" content=""View this Pull Request on GitHub""></meta>
</div>

<script type=""application/json"" data-scope=""inboxmarkup"">{""api_version"":""1.0"",""publisher"":{""api_key"":""05dde50f1d1a384dd78767c55493e4bb"",""name"":""GitHub""},""entity"":{""external_key"":""github/facebook/react-native"",""title"":""facebook/react-native"",""subtitle"":""GitHub repository"",""main_image_url"":""https://cloud.githubusercontent.com/assets/143418/17495839/a5054eac-5d88-11e6-95fc-7290892c7bb5.png"",""avatar_image_url"":""https://cloud.githubusercontent.com/assets/143418/15842166/7c72db34-2c0b-11e6-9aed-b52498112777.png"",""action"":{""name"":""Open in GitHub"",""url"":""https://github.com/facebook/react-native""}},""updates"":{""snippets"":[{""icon"":""PERSON"",""message"":""@facebook-github-bot-4 in #9511: Thanks for importing. If you are an FB employee go to [Phabricator](https://phabricator.intern.facebook.com/D3841281) to review internal test results.""}],""action"":{""name"":""View Pull Request"",""url"":""https://github.com/facebook/react-native/pull/9511#issuecomment-245881928""}}}</script>
----==_mimepart_57d294c65cf60_2ddc3fc09ed112a0329689--
",True,False,8,26629.183333333334
facebook/react-native/9511,2016-09-09T10:54:38Z,False,57d294f36480fdb30fa5708c,"This message was created automatically by mail delivery software.

A message that you sent could not be delivered to one or more of its
recipients. This is a temporary error. The following address(es) deferred:

  tajindersingh.3012@gmail.com
    Domain thumbmunkeys.com has exceeded the max emails per hour (61/60 (101%)) allowed.  Message will be reattempted later

------- This is a copy of the message, including all the headers. ------
Received: from filter03.reliabledns.org ([69.175.33.179]:42546)
	by en02-ams.stablehost.com with esmtps (TLSv1.2:ECDHE-RSA-AES256-GCM-SHA384:256)
	(Exim 4.87)
	(envelope-from <bounces+848413-d0c9-bunny=thumbmunkeys.com@sgmail.github.com>)
	id 1biJRy-003JnI-Qr
	for bunny@thumbmunkeys.com; Fri, 09 Sep 2016 10:54:28 +0000
Received: from o8.sgmail.github.com ([167.89.101.199])
	by filter03.reliabledns.org with esmtps (TLSv1.2:DHE-RSA-AES128-SHA:128)
	(Exim 4.85)
	(envelope-from <bounces+848413-d0c9-bunny=thumbmunkeys.com@sgmail.github.com>)
	id 1biJRx-00008j-0I
	for bunny@thumbmunkeys.com; Fri, 09 Sep 2016 03:54:26 -0700
DKIM-Signature: v=1; a=rsa-sha1; c=relaxed; d=github.com; 
	h=from:reply-to:to:in-reply-to:references:subject:mime-version:content-type:content-transfer-encoding:list-id:list-archive:list-post:list-unsubscribe; 
	s=s20150108; bh=ONS5S9wQUGGi6ojg98pwVe2mYM4=; b=ho5LiqTiaX+AtnK3
	3t7iTH9feoGaagix4gfJ5qr7s/o+dftnA8GquNZtLO9hvacR4SGClvclqex48lAZ
	KaGiNHtvVpeqmfSQl74ivpsigeD9VJVGZk15LnYWzucmPpgRCUJTV3CBOp+jU1hU
	Qz9bVf/pbB9JA5mT67J/PMwICXs=
Received: by filter0460p1mdw1.sendgrid.net with SMTP id filter0460p1mdw1.17019.57D294A92D
        2016-09-09 10:53:29.261629817 +0000 UTC
Received: from github-smtp2b-ext-cp1-prd.iad.github.net (github-smtp2b-ext-cp1-prd.iad.github.net [192.30.253.17])
	by ismtpd0001p1iad1.sendgrid.net (SG) with ESMTP id VjpSui0jQ8m58nPcPJS-Rg
	for <bunny@thumbmunkeys.com>; Fri, 09 Sep 2016 10:53:29.180 +0000 (UTC)
Date: Fri, 09 Sep 2016 03:53:29 -0700
From: Pieter De Baets <notifications@github.com>
Reply-To: facebook/react-native <reply@reply.github.com>
To: facebook/react-native <react-native@noreply.github.com>
Message-ID: <facebook/react-native/pull/9511/c245881844@github.com>
In-Reply-To: <facebook/react-native/pull/9511@github.com>
References: <facebook/react-native/pull/9511@github.com>
Subject: Re: [facebook/react-native] [iOS] enable versionning in xcode project
 (#9511)
Mime-Version: 1.0
Content-Type: multipart/alternative;
 boundary=""--==_mimepart_57d294a92471_526a3ff7d18092c03307eb"";
 charset=UTF-8
Content-Transfer-Encoding: 7bit
Precedence: list
X-GitHub-Sender: javache
X-GitHub-Recipient: bunnyboy1
List-ID: facebook/react-native <react-native.facebook.github.com>
List-Archive: https://github.com/facebook/react-native
List-Post: <mailto:reply@reply.github.com>
List-Unsubscribe: <mailto:unsub+011a0d8306632c207b234104353cb2f9f61eea5fa2bdecd092cf0000000113ea56a992a169ce0a45ce50@reply.github.com>,
 <https://github.com/notifications/unsubscribe/ARoNg1871D5wPohvu6KwbEn2LYJikeLoks5qoTqpgaJpZM4JpaeB>
X-Auto-Response-Suppress: All
X-GitHub-Recipient-Address: bunny@thumbmunkeys.com
X-SG-EID: wxILpmbMy+DMOe8s3uTnYJqhMhAtpIHhpRnO60rP0k8PT99jJZJxEuCt1OM2Zkay/m/alYk5CTUgud
 WEQycE+E0zlBlBsohyMlpR5H8t4MZRQzriNTIfRAZ8RlSi3jDbEKB50O4Vm9Kpq6aVVLzTL07eg1EB
 rgeYnxYGrUt5RQhHULQpXe8vXVQlNUZcnjEdtAXfucpZs+qAC1fK0cLxaUht+qtsT3mj1fa275Se2/
 M=
Received-SPF: pass (filter03.reliabledns.org: domain of sgmail.github.com designates 167.89.101.199 as permitted sender) client-ip=167.89.101.199; envelope-from=bounces+848413-d0c9-bunny=thumbmunkeys.com@sgmail.github.com; helo=o8.sgmail.github.com;
X-SPF-Result: filter03.reliabledns.org: domain of sgmail.github.com designates 167.89.101.199 as permitted sender
X-Sender-Warning: sgmail.github.com has no MX records
Authentication-Results: filter03.reliabledns.org; dmarc=pass header.from=github.com
X-Filter-ID: s0sct1PQhAABKnZB5plbIT1RbOwy06L9REYyr9AwRQTwqQ7CW4gxUeeyoz1oed5P/SEnTgrA37IX
 TZjA4tFfC9o7/kuvJ3wuZWRdcwKwe1+/dW/xGlBq3/UmIKUCpDxGneIVwSf+lCa+FY3nagRj3wdr
 IZ+D/FAg6XyPDmfkLA7rcxAODBZO2BOkcGk4nUtaWBCJFgBso8Q3X4tROJ1gHlarIGSMLt5vX9V9
 rVXE/wBcR6vcRlDk/cSBa4A2VcTnkxlSZxHxTWgJwgGAdAfYx0QbUSmybXI9Q2wJvH91K4x1/xY7
 b1I8OIpxoI7mFpwMSmEIS4GON+6FOG36iMWh1HrC+mnu8HU6+1MultOxIl093SsS4aMXJmiJ2G0e
 b5ahm8p6HlShAEYnwZBavOYADGb0g2n0QCK0NUarjxzvKHXDqcigOvSxdRnthmhn8Zn6nJvJDVm7
 fp8WWz+diuw4AEUWb7Au9+OsDspaYXORD9DExXy0aVT1HuhJQmP8nOV/gcSXPi64HW9TLHbE1xGc
 sIqosGRVic0wJZbsnU20WkB8LSJSyBhtnWbngGtasJkXBf0jdZtXXwRMZ/pKak7GRV+Sy3brvYFg
 uJ068d7ZjkeRv8Gjvtc3eeZ2pvOmIPvav2ToL5w5nDAUe12FhqWGsTEvuGslKTrRIXcXpFg5ivY=
X-Report-Abuse-To: spam@filter01.reliabledns.org
Authentication-Results: reliabledns.org; spf=pass smtp.mailfrom=bounces+848413-d0c9-bunny=thumbmunkeys.com@sgmail.github.com
Authentication-Results: reliabledns.org; dkim=pass header.i=github.com
X-SpamExperts-Class: ham
X-SpamExperts-Evidence: Combined (0.07)
X-Recommended-Action: accept
X-Spam-Status: No, score=1.0
X-Spam-Score: 10
X-Spam-Bar: +
X-Ham-Report: Spam detection software, running on the system ""en02-ams.stablehost.com"",
 has NOT identified this incoming email as spam.  The original
 message has been attached to this so you can view it or label
 similar future email.  If you have any questions, see
 root\@localhost for details.
 
 Content preview:  @facebook-github-bot shipit -- You are receiving this because
    you are subscribed to this thread. Reply to this email directly or view it
    on GitHub: https://github.com/facebook/react-native/pull/9511#issuecomment-245881844
    [...] 
 
 Content analysis details:   (1.0 points, 5.0 required)
 
  pts rule name              description
 ---- ---------------------- --------------------------------------------------
 -0.0 RCVD_IN_DNSWL_NONE     RBL: Sender listed at http://www.dnswl.org/, no
                             trust
                             [69.175.33.179 listed in list.dnswl.org]
  1.5 SPF_SOFTFAIL           SPF: sender does not match SPF record (softfail)
 -1.9 BAYES_00               BODY: Bayes spam probability is 0 to 1%
                             [score: 0.0000]
  0.0 HTML_MESSAGE           BODY: HTML included in message
  1.5 HTML_IMAGE_ONLY_20     BODY: HTML: images with 1600-2000 bytes of words
 -0.1 DKIM_VALID             Message has at least one valid DKIM or DK signature
 -0.1 DKIM_VALID_AU          Message has a valid DKIM or DK signature from author's
                             domain
  0.1 DKIM_SIGNED            Message has a DKIM or DK signature, not necessarily valid
X-Spam-Flag: NO

----==_mimepart_57d294a92471_526a3ff7d18092c03307eb
Content-Type: text/plain;
 charset=UTF-8
Content-Transfer-Encoding: 7bit

@facebook-github-bot shipit

-- 
You are receiving this because you are subscribed to this thread.
Reply to this email directly or view it on GitHub:
https://github.com/facebook/react-native/pull/9511#issuecomment-245881844
----==_mimepart_57d294a92471_526a3ff7d18092c03307eb
Content-Type: text/html;
 charset=UTF-8
Content-Transfer-Encoding: 7bit

<p><a href=""https://github.com/facebook-github-bot"" class=""user-mention"">@facebook-github-bot</a> shipit</p>

<p style=""font-size:small;-webkit-text-size-adjust:none;color:#666;"">&mdash;<br />You are receiving this because you are subscribed to this thread.<br />Reply to this email directly, <a href=""https://github.com/facebook/react-native/pull/9511#issuecomment-245881844"">view it on GitHub</a>, or <a href=""https://github.com/notifications/unsubscribe-auth/ARoNgw4TV31GVuRkaGQoEG-A0Mpxn71Zks5qoTqpgaJpZM4JpaeB"">mute the thread</a>.<img alt="""" height=""1"" src=""https://github.com/notifications/beacon/ARoNgx7ELagWhB6w_ixQ4aJAjI4-7VGoks5qoTqpgaJpZM4JpaeB.gif"" width=""1"" /></p>
<div itemscope itemtype=""http://schema.org/EmailMessage"">
<div itemprop=""action"" itemscope itemtype=""http://schema.org/ViewAction"">
  <link itemprop=""url"" href=""https://github.com/facebook/react-native/pull/9511#issuecomment-245881844""></link>
  <meta itemprop=""name"" content=""View Pull Request""></meta>
</div>
<meta itemprop=""description"" content=""View this Pull Request on GitHub""></meta>
</div>

<script type=""application/json"" data-scope=""inboxmarkup"">{""api_version"":""1.0"",""publisher"":{""api_key"":""05dde50f1d1a384dd78767c55493e4bb"",""name"":""GitHub""},""entity"":{""external_key"":""github/facebook/react-native"",""title"":""facebook/react-native"",""subtitle"":""GitHub repository"",""main_image_url"":""https://cloud.githubusercontent.com/assets/143418/17495839/a5054eac-5d88-11e6-95fc-7290892c7bb5.png"",""avatar_image_url"":""https://cloud.githubusercontent.com/assets/143418/15842166/7c72db34-2c0b-11e6-9aed-b52498112777.png"",""action"":{""name"":""Open in GitHub"",""url"":""https://github.com/facebook/react-native""}},""updates"":{""snippets"":[{""icon"":""PERSON"",""message"":""@javache in #9511: @facebook-github-bot shipit""}],""action"":{""name"":""View Pull Request"",""url"":""https://github.com/facebook/react-native/pull/9511#issuecomment-245881844""}}}</script>
----==_mimepart_57d294a92471_526a3ff7d18092c03307eb--
",True,False,8,26629.183333333334
PowerShell/xSQLServer/67,2016-09-09T18:00:39Z,False,57d2f8cb6480fdac77b6c1e7,Unit test looks good. @johlju - could you glance over this once more and give your ok? ,True,False,40,132778.58333333334
PowerShell/xSQLServer/67,2016-09-09T18:05:42Z,False,57d2f9fa6480fdb272903eec,"Yes, I will look at it. I think I saw an issue with the wrapper. Comment on it shortly. ",True,False,40,132778.58333333334
PowerShell/xSQLServer/67,2016-09-09T18:47:12Z,False,57d303b86480fda8809cbd50,"@luigilink great work! All logic looks good to me! Just a few style changes. 
Regarding the test, it's perfect. 

Below text is not part of the review, just something you might consider next time you make a test. Also, make a big note that I am far from good at this myself. So let me know if I'm wrong! :smile: 

Consider that with a little more tweaks I think it would have been possible to get more code coverage. Like mocking the EnumMemberNames() method in the (now) Confirm-SqlServerRole. That I think would have allowed much of the code in the Confirm-SqlServerRole out of the wrapper and instead kept in the main code, which would have increased test code coverage (mocking a function excludes it from 'code coverage'). A wrapper should be as lightweight it can be.
You can see an example here that I made which mocking a class method (see testing of the Set-method)
https://github.com/johlju/xSQLServer/blob/95e24ef5dfca3373205d95d7a173cf0b8847cc1e/DSCResources/MSFT_xSQLServerDatabaseRole/MSFT_xSQLServerDatabaseRole.psm1

---

Reviewed 1 of 4 files at r9.
Review status: 5 of 8 files reviewed at latest revision, 10 unresolved discussions.

---

*[xSQLServerHelper.psm1, line 458 \[r9\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KRF9_x_7dE0alG3ckJP:-KRF9_x_7dE0alG3ckJQ:beirqe0) ([raw file](https://github.com/powershell/xsqlserver/blob/d9c826a8a301fefa8c492b75097e4892c06a5576/xSQLServerHelper.psm1#L458)):*
> ```PowerShell
>         try
>         {
>             ForEach ($currentServerRole in $ServerRole)
> ```

Ca you make foreach lowercase?

---

*[xSQLServerHelper.psm1, line 469 \[r9\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KRF95wFMNch9lt41Kz8:-KRF95wFMNch9lt41Kz9:b-bw3fc0) ([raw file](https://github.com/powershell/xsqlserver/blob/d9c826a8a301fefa8c492b75097e4892c06a5576/xSQLServerHelper.psm1#L469)):*
> ```PowerShell
>         }
>     }
>     Else
> ```

Can you make else in lower case?

---

*[xSQLServerHelper.psm1, line 499 \[r9\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KRF8y8B6V1E89uuzcA8:-KRF8y8B6V1E89uuzcA9:b-2ab78g) ([raw file](https://github.com/powershell/xsqlserver/blob/d9c826a8a301fefa8c492b75097e4892c06a5576/xSQLServerHelper.psm1#L499)):*
> ```PowerShell
>         try
>         {
>             ForEach ($currentServerRole in $ServerRole)
> ```

Can you make foreach lowercase?

---

*[xSQLServerHelper.psm1, line 510 \[r9\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KRF9RNBd7j5IeZlpYrs:-KRF9RNC2hQrP5G-GW0d:b-ltef15) ([raw file](https://github.com/powershell/xsqlserver/blob/d9c826a8a301fefa8c492b75097e4892c06a5576/xSQLServerHelper.psm1#L510)):*
> ```PowerShell
>         }
>     }
>     Else
> ```

can you make lese lowercase?

---

*[xSQLServerHelper.psm1, line 538 \[r9\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KRF9jYRpTlfxPob3LTA:-KRF9jYRpTlfxPob3LTB:b-2ab78g) ([raw file](https://github.com/powershell/xsqlserver/blob/d9c826a8a301fefa8c492b75097e4892c06a5576/xSQLServerHelper.psm1#L538)):*
> ```PowerShell
>     if ($sqlRole)
>     {
>         ForEach ($currentServerRole in $ServerRole)
> ```

Can you make foreach lowercase?

---

*[xSQLServerHelper.psm1, line 567 \[r9\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KRF9UYPgu3uEXsmQ1f0:-KRF9UYPgu3uEXsmQ1f1:b-vvm15q) ([raw file](https://github.com/powershell/xsqlserver/blob/d9c826a8a301fefa8c492b75097e4892c06a5576/xSQLServerHelper.psm1#L567)):*
> ```PowerShell
>     }
> 
>     Return $confirmServerRole
> ```

can you make return lowercase?

---


*Comments from [Reviewable](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-:-KRF9vBT5ERH7QBVPWBN:b-2u85m2)*
<!-- Sent from Reviewable.io -->
",True,False,40,132778.58333333334
PowerShell/xSQLServer/67,2016-09-10T13:17:17Z,False,57d407e16480fda7e2ae69dd,"



Reviewed 3 of 4 files at r9, 1 of 1 files at r10.
Review status: all files reviewed at latest revision, 7 unresolved discussions.

---

*[xSQLServerHelper.psm1, line 458 \[r9\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KRF9_x_7dE0alG3ckJP:-KRJERHP2zqx1LH4sRyl:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/d9c826a8a301fefa8c492b75097e4892c06a5576/xSQLServerHelper.psm1#L458)):*
<details><summary><i>Previously, johlju (Johan Ljunggren) wrote…</i></summary>
> Ca you make foreach lowercase?
</details>
Done.

---

*[xSQLServerHelper.psm1, line 469 \[r9\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KRF95wFMNch9lt41Kz8:-KRJERh9ml8osowt0Ut-:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/d9c826a8a301fefa8c492b75097e4892c06a5576/xSQLServerHelper.psm1#L469)):*
<details><summary><i>Previously, johlju (Johan Ljunggren) wrote…</i></summary>
> Can you make else in lower case?
</details>
Done.

---

*[xSQLServerHelper.psm1, line 499 \[r9\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KRF8y8B6V1E89uuzcA8:-KRJEStgbK7FUl7TjSyI:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/d9c826a8a301fefa8c492b75097e4892c06a5576/xSQLServerHelper.psm1#L499)):*
<details><summary><i>Previously, johlju (Johan Ljunggren) wrote…</i></summary>
> Can you make foreach lowercase?
</details>
Done.

---

*[xSQLServerHelper.psm1, line 510 \[r9\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KRF9RNBd7j5IeZlpYrs:-KRJETLm8yfPBZGLtBZD:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/d9c826a8a301fefa8c492b75097e4892c06a5576/xSQLServerHelper.psm1#L510)):*
<details><summary><i>Previously, johlju (Johan Ljunggren) wrote…</i></summary>
> can you make lese lowercase?
</details>
Done.

---

*[xSQLServerHelper.psm1, line 538 \[r9\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KRF9jYRpTlfxPob3LTA:-KRJETxAQAx3PNGLsBDA:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/d9c826a8a301fefa8c492b75097e4892c06a5576/xSQLServerHelper.psm1#L538)):*
<details><summary><i>Previously, johlju (Johan Ljunggren) wrote…</i></summary>
> Can you make foreach lowercase?
</details>
Done.

---

*[xSQLServerHelper.psm1, line 567 \[r9\]](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KRF9UYPgu3uEXsmQ1f0:-KRJEUUifvDfpTqVNrEb:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/d9c826a8a301fefa8c492b75097e4892c06a5576/xSQLServerHelper.psm1#L567)):*
<details><summary><i>Previously, johlju (Johan Ljunggren) wrote…</i></summary>
> can you make return lowercase?
</details>
Done.

---


*Comments from [Reviewable](https://reviewable.io:443/reviews/powershell/xsqlserver/67)*
<!-- Sent from Reviewable.io -->
",True,False,40,132778.58333333334
PowerShell/xSQLServer/67,2016-09-10T13:21:20Z,False,57d408d56480fdaf57298688,"@johlju Thanks you for the advice, I'll look on your test unit.
And thanks for all your comments.",True,False,40,132778.58333333334
PowerShell/xSQLServer/67,2016-09-10T13:25:25Z,False,57d409c96480fdb30fa5e21c,"<img class=""emoji"" title="":lgtm:"" alt="":lgtm:"" align=""absmiddle"" src=""https://reviewable.io/lgtm.png"" height=""20"" width=""61""/>

---

Reviewed 3 of 4 files at r9, 1 of 1 files at r10.
Review status: all files reviewed at latest revision, 7 unresolved discussions.

---



*Comments from [Reviewable](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-:-KRJGUfIgwb1UBUr1QCm:bnfp4nl)*
<!-- Sent from Reviewable.io -->
",True,False,40,132778.58333333334
alexa-pi/AlexaPi/5,2016-09-10T17:35:38Z,False,57d444716480fda8cc3656b0,"Great!
I'll look it over, and try a test build on my system as soon as I can. Hopefully tonight.",True,False,9,5910.3
alexa-pi/AlexaPi/5,2016-09-10T18:44:30Z,False,57d454906480fdab7f334131,"Awesome! To be honest, I haven't tested this, because I would have to do it on a Raspberry Pi still and I don't have mine ready yet.",True,False,9,5910.3
alexa-pi/AlexaPi/5,2016-09-10T21:27:33Z,False,57d47aca6480fda8cc36657e,"Alright!
I just installed it (my git-fu is weak, so I used _wget_ and _unzip_ to get the directory from here).
It installed smoothly and started right up!
It starts automatically after a reboot, and I chose to install shairport-sync, which works great too!

The only thing I noticed is that after the install, _vlc.py_ is in _scripts_ instead of _src_. I'm honestly surprised that it works like that.
",True,False,9,5910.3
alexa-pi/AlexaPi/5,2016-09-11T08:32:11Z,False,57d5168d6480fda83f053cc5,"Damn, I missed that. Should be fixed now. Thank you.
I'm gonna change this later anyway, but let's keep it always at a working state.

Please give it one more shot and if that's all, I'm gonna merge it and more interesting commits can come :-)
Also, I've finally set up my Raspberry Pi for testing my commits so I can avoid these embarrassing situations in the future - yay!",True,False,9,5910.3
PowerShell/xSQLServer/67,2016-09-12T22:43:12Z,False,57d72f846480fda892d5dafa,"



Reviewed 1 of 7 files at r6, 1 of 6 files at r7, 1 of 3 files at r8, 1 of 4 files at r9.
Review status: all files reviewed at latest revision, 18 unresolved discussions, some commit checks failed.

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 25 at r10](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KRVT9iBkYFO9zhAyxXV:-KRVT9iBkYFO9zhAyxXW:bewe0je) ([raw file](https://github.com/powershell/xsqlserver/blob/49814d5fb77aee0a3e0c8826f5fa7deb2920cdf0/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L25)):*
> ```PowerShell
> 
>         [Parameter(Mandatory = $true)]
>         [ValidateSet(""bulkadmin"",""dbcreator"",""diskadmin"",""processadmin"",""public"",""securityadmin"",""serveradmin"",""setupadmin"",""sysadmin"")]
> ```

Can we change the case for the values in this set? It's kind of hard to read

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 38 at r10](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KRVTOIvrb66ExtDSk_c:-KRVTOIvrb66ExtDSk_d:bmhp3d5) ([raw file](https://github.com/powershell/xsqlserver/blob/49814d5fb77aee0a3e0c8826f5fa7deb2920cdf0/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L38)):*
> ```PowerShell
>     )
> 
>     if (!$sql)
> ```

I think you can get rid of this if check - just assign the $sql variable

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 149 at r10](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KRVUjko5RFRzUW2VRmC:-KRVUjko5RFRzUW2VRmD:b-a8hcpk) ([raw file](https://github.com/powershell/xsqlserver/blob/49814d5fb77aee0a3e0c8826f5fa7deb2920cdf0/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L149)):*
> ```PowerShell
>     $currentValues = Get-TargetResource @PSBoundParameters
>     
>     $result = ($currentValues.Ensure -eq $Ensure) -and ($currentValues.ServerRole -eq $ServerRole)
> ```

What about testing the rest of the values?

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.schema.mof, line 6 at r10](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KRVVKz-AiVNGrTZ7ZoZ:-KRVVKz0qERscs6yJevJ:btpb12q) ([raw file](https://github.com/powershell/xsqlserver/blob/49814d5fb77aee0a3e0c8826f5fa7deb2920cdf0/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.schema.mof#L6)):*
> ```
> {
>     [Key, Description(""The name of the SQL login.  If LoginType='WindowsUser' or 'WindowsGroup', this is also the name of the user or group in format DOMAIN\name."")] String Name;
>     [Write, Description(""An enumerated value that describes if the login exists on the SQL instance.\nPresent {default}  \nAbsent   \n""), ValueMap{""Present"",""Absent""}, Values{""Present"",""Absent""}] String Ensure;
> ```

Are the '\n's here for a reason? As in '...\nPresent {default}  \nAbsent  \n...'

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.schema.mof, line 7 at r10](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KRVVbwTcceCHkGAgLkC:-KRVVbwUwBIdqVloW052:barxb68) ([raw file](https://github.com/powershell/xsqlserver/blob/49814d5fb77aee0a3e0c8826f5fa7deb2920cdf0/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.schema.mof#L7)):*
> ```
>     [Key, Description(""The name of the SQL login.  If LoginType='WindowsUser' or 'WindowsGroup', this is also the name of the user or group in format DOMAIN\name."")] String Name;
>     [Write, Description(""An enumerated value that describes if the login exists on the SQL instance.\nPresent {default}  \nAbsent   \n""), ValueMap{""Present"",""Absent""}, Values{""Present"",""Absent""}] String Ensure;
>     [Required, Description(""Type of SQL role to add""), ValueMap{""bulkadmin"",""dbcreator"",""diskadmin"",""processadmin"",""public"",""securityadmin"",""serveradmin"",""setupadmin"",""sysadmin""}, Values{""bulkadmin"",""dbcreator"",""diskadmin"",""processadmin"",""public"",""securityadmin"",""serveradmin"",""setupadmin"",""sysadmin""}] String ServerRole[];
> ```

Can we change these values to be CamelCase? i.e. : BulkAdmin, DBCreator, DiskAdmin, etc.  Or are they all lowercase for a reason?

---

*[Examples/Resources/xSQLServerRole/1-AddServerRole.ps1, line 12 at r10](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KRVW5Q7fqLDNWwOQgYg:-KRVW5Q7fqLDNWwOQgYh:b-vri7mn) ([raw file](https://github.com/powershell/xsqlserver/blob/49814d5fb77aee0a3e0c8826f5fa7deb2920cdf0/Examples/Resources/xSQLServerRole/1-AddServerRole.ps1#L12)):*
> ```PowerShell
>             [Parameter(Mandatory = $true)]
>             [PSCredential]
>             $SysadminAccount
> ```

change to $SysAdminAccount

---

*[Examples/Resources/xSQLServerRole/2-RemoveServerRole.ps1, line 4 at r10](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KRVWIMb3F9jXXGMn7sy:-KRVWIMb3F9jXXGMn7sz:bupnwqn) ([raw file](https://github.com/powershell/xsqlserver/blob/49814d5fb77aee0a3e0c8826f5fa7deb2920cdf0/Examples/Resources/xSQLServerRole/2-RemoveServerRole.ps1#L4)):*
> ```PowerShell
> .EXAMPLE
>     This example shows how to ensure that the user account CONTOSO\SQLUser
>     has not ""setupadmin"" SQL server role. 
> ```

'...CONTOSO\SQLUser does not have...'

---

*[Examples/Resources/xSQLServerRole/2-RemoveServerRole.ps1, line 12 at r10](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KRVWXiOlXjzfakxxQUf:-KRVWXiOlXjzfakxxQUg:b-37dapg) ([raw file](https://github.com/powershell/xsqlserver/blob/49814d5fb77aee0a3e0c8826f5fa7deb2920cdf0/Examples/Resources/xSQLServerRole/2-RemoveServerRole.ps1#L12)):*
> ```PowerShell
>             [Parameter(Mandatory = $true)]
>             [PSCredential]
>             $SysadminAccount
> ```

$SysAdminAccount

---

*[Tests/Unit/xSQLServerRole.Tests.ps1, line 89 at r10](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KRVXKPQz9M71HiF8fOi:-KRVXKPRH31Mn92uUmqU:b-6ksmz7) ([raw file](https://github.com/powershell/xsqlserver/blob/49814d5fb77aee0a3e0c8826f5fa7deb2920cdf0/Tests/Unit/xSQLServerRole.Tests.ps1#L89)):*
> ```PowerShell
>             $result = Get-TargetResource @testParameters
> 
>             It 'Should not return the state as present' {
> ```

'Should return the state as present'? instead of 'Should not..'

---

*[Tests/Unit/xSQLServerRole.Tests.ps1, line 119 at r10](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KRVXweRZo5nt7MOLoQt:-KRVXweRZo5nt7MOLoQu:bixfdge) ([raw file](https://github.com/powershell/xsqlserver/blob/49814d5fb77aee0a3e0c8826f5fa7deb2920cdf0/Tests/Unit/xSQLServerRole.Tests.ps1#L119)):*
> ```PowerShell
> 
>         Context 'When the system is not in the desired state' {            
>             It 'Should return the state as absent when desired loginName does not exist' {
> ```

All of these tests are just checking to see what boolean value that Test-Target resource returns - not the actual state - can you change the It statements here to reflect that?

---

*[Tests/Unit/xSQLServerRole.Tests.ps1, line 214 at r10](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KRVYkVQwIfPExKa3Ewb:-KRVYkVQwIfPExKa3Ewc:b-ti1crq) ([raw file](https://github.com/powershell/xsqlserver/blob/49814d5fb77aee0a3e0c8826f5fa7deb2920cdf0/Tests/Unit/xSQLServerRole.Tests.ps1#L214)):*
> ```PowerShell
>                 Mock -CommandName Add-SqlServerRole -MockWith { } -ModuleName $script:DSCResourceName -Verifiable
>                 
>                 { Set-TargetResource @testParameters } | Should Be $true
> ```

Set-TargetResource doesn't return anything - so just check that the correct mocks are called. Change the It statements here to reflect that too, since this function isn't returning a state.

---


*Comments from [Reviewable](https://reviewable.io:443/reviews/powershell/xsqlserver/67)*
<!-- Sent from Reviewable.io -->
",True,False,40,132778.58333333334
PowerShell/xSQLServer/67,2016-09-12T22:45:12Z,False,57d72ffa6480fdaf572a7719,"Also, now that there's been another PR merged the conflicts are going to need to be resolved again. Thanks for your patience!",True,False,40,132778.58333333334
PowerShell/xSQLServer/67,2016-09-13T17:28:14Z,False,57d837326480fda801b9d947,I totally missed all the `{ Set-TargetResource @testParameters } | Should Be $true` in my review. Lucky we have second pair of eye reviewing :smile: ,True,False,40,132778.58333333334
angular/angular.io/2271,2016-09-13T22:53:09Z,False,57d883586480fdb19e508f45,"The callbacks receive an `AnimationTransitionEvent` which contains useful properties such as `fromState`,",True,False,7,10243.983333333334
neovim/neovim/4568,2016-09-14T09:32:00Z,False,57d919166480fda8cc37ec11,"Updated. I removed the preassert for now, this already useful in various cases without it, (such as updating multiple bufhl in an async context without causing excessive redraws, or emulating the old behavior of del_var after #5336)  and that could be added in a separate PR without breaking existing usages.

",True,False,46,212111.16666666666
alexa-pi/AlexaPi/5,2016-09-14T14:04:53Z,False,57d959076480fdafae802026,"@maso27 Did you have any time to do a final check? I'd really like to merge this ASAP, so I can roll out the cool stuff. Thanks.",True,False,9,5910.3
alexa-pi/AlexaPi/5,2016-09-14T16:53:54Z,False,57d980ac6480fdaae682a319,"Sorry, no.  I've got a fresh image on my pi now, and I'll give the update a run today.

(Also, is there a way to get just this commit through git?  I can clone branches, but couldn't get the SHA1 to point me to this build effectively.)",True,False,9,5910.3
alexa-pi/AlexaPi/5,2016-09-14T17:59:44Z,False,57d990166480fda801ba601f,"@maso27 Cool.

Sure. If you want a fresh directory to do that:
```
git clone -b directory-file-cleanup https://github.com/renekliment/AlexaPiNG.git
```

If you want to add it to your existing directory:
```
# Suppose you have done this already:
git clone https://github.com/alexa-pi/AlexaPi
cd AlexaPi
# Then do this
git remote add renekliment https://github.com/renekliment/AlexaPiNG.git
git fetch renekliment
git checkout renekliment/directory-file-cleanup
```",True,False,9,5910.3
alexa-pi/AlexaPi/5,2016-09-14T19:40:21Z,False,57d9a7ac6480fdad825d0bc2,"The git notes worked great.  Thanks!

And the install went fine as well.  All works as it should.

As a note: The ""always on monitoring"" option is really tough to kill.  This was by design, but I'm wondering if we should add a line to _initd_alexa_monitored.sh_ under _stop)_ that'll kill _monitorAlexa.sh_ as well.  Otherwise, even _/etc/init.d/AlexaPi stop_ won't stop it.

Maybe I should do a pull request for that?",True,False,9,5910.3
alexa-pi/AlexaPi/5,2016-09-14T20:05:56Z,False,57d9ada56480fdae3a3b25de,"Awesome! Thanks. Merging then.

Yes, that would make sense. However, please wait a bit with that. I'm gonna do one quick PR regarding paths that's gonna change these files. Also, we need to refactor the init script a bit. Even though a systemd unit is gonna be used on most systems eventually, there should be a good init script for OpenWRT and such OSes. I've created an issue (#9) that sums up my thoughts on that. Feel free to take up any of the related subtasks.",True,False,9,5910.3
sonata-project/SonataPageBundle/688,2016-09-16T10:26:44Z,False,57dbc8e96480fdb19e51bf26,Please add missing tests @Vesax ,True,False,21,695972.8666666667
PowerShell/xSQLServer/67,2016-09-18T16:00:46Z,False,57deba316480fda82a1d3cf0,"



Reviewed 6 of 8 files at r11, 2 of 2 files at r12.
Review status: all files reviewed at latest revision, 12 unresolved discussions.

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 25 at r10](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KRVT9iBkYFO9zhAyxXV:-KRy0a9jRcROYjenWsNs:b-ku5poh) ([raw file](https://github.com/powershell/xsqlserver/blob/49814d5fb77aee0a3e0c8826f5fa7deb2920cdf0/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L25)):*
<details><summary><i>Previously, mbreakey3 (Mariah) wrote…</i></summary>
> Can we change the case for the values in this set? It's kind of hard to read
</details>
How can I do that ?

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 38 at r10](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KRVTOIvrb66ExtDSk_c:-KRy07GVeNgMc58vumob:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/49814d5fb77aee0a3e0c8826f5fa7deb2920cdf0/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L38)):*
<details><summary><i>Previously, mbreakey3 (Mariah) wrote…</i></summary>
> I think you can get rid of this if check - just assign the $sql variable
</details>
Done.

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 149 at r10](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KRVUjko5RFRzUW2VRmC:-KRy09lbGlxnesgp5lrj:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/49814d5fb77aee0a3e0c8826f5fa7deb2920cdf0/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L149)):*
<details><summary><i>Previously, mbreakey3 (Mariah) wrote…</i></summary>
> What about testing the rest of the values?
</details>
Done.

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.schema.mof, line 6 at r10](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KRVVKz-AiVNGrTZ7ZoZ:-KRy0AqQPYC4hS6NrQYV:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/49814d5fb77aee0a3e0c8826f5fa7deb2920cdf0/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.schema.mof#L6)):*
<details><summary><i>Previously, mbreakey3 (Mariah) wrote…</i></summary>
> Are the '\n's here for a reason? As in '...\nPresent {default}  \nAbsent  \n...'
</details>
Done.

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.schema.mof, line 7 at r10](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KRVVbwTcceCHkGAgLkC:-KRy0CDRgrkGgyu-Gswn:b-n7nr5e) ([raw file](https://github.com/powershell/xsqlserver/blob/49814d5fb77aee0a3e0c8826f5fa7deb2920cdf0/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.schema.mof#L7)):*
<details><summary><i>Previously, mbreakey3 (Mariah) wrote…</i></summary>
> Can we change these values to be CamelCase? i.e. : BulkAdmin, DBCreator, DiskAdmin, etc.  Or are they all lowercase for a reason?
</details>
The values are in lowercase from SQL object, so the Test wil be failed if we try with CamelCase

---

*[Examples/Resources/xSQLServerRole/1-AddServerRole.ps1, line 12 at r10](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KRVW5Q7fqLDNWwOQgYg:-KRy-ZpiQ-9K6baVxN2h:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/49814d5fb77aee0a3e0c8826f5fa7deb2920cdf0/Examples/Resources/xSQLServerRole/1-AddServerRole.ps1#L12)):*
<details><summary><i>Previously, mbreakey3 (Mariah) wrote…</i></summary>
> change to $SysAdminAccount
</details>
Done.

---

*[Examples/Resources/xSQLServerRole/2-RemoveServerRole.ps1, line 4 at r10](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KRVWIMb3F9jXXGMn7sy:-KRy-e9s9JO_o3mD89--:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/49814d5fb77aee0a3e0c8826f5fa7deb2920cdf0/Examples/Resources/xSQLServerRole/2-RemoveServerRole.ps1#L4)):*
<details><summary><i>Previously, mbreakey3 (Mariah) wrote…</i></summary>
> '...CONTOSO\SQLUser does not have...'
</details>
Done.

---

*[Examples/Resources/xSQLServerRole/2-RemoveServerRole.ps1, line 12 at r10](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KRVWXiOlXjzfakxxQUf:-KRy-g9oot5UdzaBcH-Z:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/49814d5fb77aee0a3e0c8826f5fa7deb2920cdf0/Examples/Resources/xSQLServerRole/2-RemoveServerRole.ps1#L12)):*
<details><summary><i>Previously, mbreakey3 (Mariah) wrote…</i></summary>
> $SysAdminAccount
</details>
Done.

---

*[Tests/Unit/xSQLServerRole.Tests.ps1, line 89 at r10](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KRVXKPQz9M71HiF8fOi:-KRy-pbzYyW77arsYwQk:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/49814d5fb77aee0a3e0c8826f5fa7deb2920cdf0/Tests/Unit/xSQLServerRole.Tests.ps1#L89)):*
<details><summary><i>Previously, mbreakey3 (Mariah) wrote…</i></summary>
> 'Should return the state as present'? instead of 'Should not..'
</details>
Done.

---

*[Tests/Unit/xSQLServerRole.Tests.ps1, line 119 at r10](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KRVXweRZo5nt7MOLoQt:-KRy0i3Az_0m_3jYW5tx:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/49814d5fb77aee0a3e0c8826f5fa7deb2920cdf0/Tests/Unit/xSQLServerRole.Tests.ps1#L119)):*
<details><summary><i>Previously, mbreakey3 (Mariah) wrote…</i></summary>
> All of these tests are just checking to see what boolean value that Test-Target resource returns - not the actual state - can you change the It statements here to reflect that?
</details>
Done.

---

*[Tests/Unit/xSQLServerRole.Tests.ps1, line 214 at r10](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KRVYkVQwIfPExKa3Ewb:-KRy-vhGszxpM6dOX3f6:b-896fix) ([raw file](https://github.com/powershell/xsqlserver/blob/49814d5fb77aee0a3e0c8826f5fa7deb2920cdf0/Tests/Unit/xSQLServerRole.Tests.ps1#L214)):*
<details><summary><i>Previously, mbreakey3 (Mariah) wrote…</i></summary>
> Set-TargetResource doesn't return anything - so just check that the correct mocks are called. Change the It statements here to reflect that too, since this function isn't returning a state.
</details>
Done.

---


*Comments from [Reviewable](https://reviewable.io:443/reviews/powershell/xsqlserver/67)*
<!-- Sent from Reviewable.io -->
",True,False,40,132778.58333333334
PowerShell/xSQLServer/67,2016-09-19T23:12:20Z,False,57e070d96480fdb2270d62a3,"



Reviewed 6 of 8 files at r11, 2 of 2 files at r12.
Review status: all files reviewed at latest revision, 14 unresolved discussions.

---

*[DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1, line 25 at r10](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KRVT9iBkYFO9zhAyxXV:-KS3gpaIRvIVeQmJebv_:b-j56dgc) ([raw file](https://github.com/powershell/xsqlserver/blob/49814d5fb77aee0a3e0c8826f5fa7deb2920cdf0/DSCResources/MSFT_xSQLServerRole/MSFT_xSQLServerRole.psm1#L25)):*
<details><summary><i>Previously, luigilink (Jean-Cyril Drouhin) wrote…</i></summary>
> How can I do that ?
</details>
OK - Nevermind, it can stay in since it's part of the sql functionality

---

*[Tests/Unit/xSQLServerRole.Tests.ps1, line 136 at r12](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KS3hgWBFCh483JPPZ72:-KS3hgWBFCh483JPPZ73:b-ggv1pf) ([raw file](https://github.com/powershell/xsqlserver/blob/c7fad226f488a1e5079af6a52b4d99b464067085/Tests/Unit/xSQLServerRole.Tests.ps1#L136)):*
> ```PowerShell
>             }
> 
>             It 'Should return the state as present when non-desired loginName exist' {
> ```

This says it should return present, but it's returning false

---

*[Tests/Unit/xSQLServerRole.Tests.ps1, line 172 at r12](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KS3hqBdC3FdWyKRqyJj:-KS3hqBdC3FdWyKRqyJk:b-ndpe8v) ([raw file](https://github.com/powershell/xsqlserver/blob/c7fad226f488a1e5079af6a52b4d99b464067085/Tests/Unit/xSQLServerRole.Tests.ps1#L172)):*
> ```PowerShell
>             }
>                         
>             It 'Should return the state as absent when non-desired loginName does not exist' {
> ```

This one is returning true but it says the state should return absent

---


*Comments from [Reviewable](https://reviewable.io:443/reviews/powershell/xsqlserver/67)*
<!-- Sent from Reviewable.io -->
",True,False,40,132778.58333333334
PowerShell/xSQLServer/67,2016-09-21T14:04:44Z,False,57e293826480fdaae685bf45,"



Reviewed 3 of 3 files at r13.
Review status: all files reviewed at latest revision, 3 unresolved discussions.

---

*[Tests/Unit/xSQLServerRole.Tests.ps1, line 136 at r12](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KS3hgWBFCh483JPPZ72:-KSC2iwHRVWmnkLmAwOo:bsvpaz4) ([raw file](https://github.com/powershell/xsqlserver/blob/c7fad226f488a1e5079af6a52b4d99b464067085/Tests/Unit/xSQLServerRole.Tests.ps1#L136)):*
<details><summary><i>Previously, mbreakey3 (Mariah) wrote…</i></summary>
> This says it should return present, but it's returning false
</details>
Done. I changed state to test, it's more clear with the pester objective

---

*[Tests/Unit/xSQLServerRole.Tests.ps1, line 172 at r12](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-KS3hqBdC3FdWyKRqyJj:-KSC2wGjY3GC7XEXV7Lc:bsvpaz4) ([raw file](https://github.com/powershell/xsqlserver/blob/c7fad226f488a1e5079af6a52b4d99b464067085/Tests/Unit/xSQLServerRole.Tests.ps1#L172)):*
<details><summary><i>Previously, mbreakey3 (Mariah) wrote…</i></summary>
> This one is returning true but it says the state should return absent
</details>
Done. I changed state to test, it's more clear with the pester objective

---


*Comments from [Reviewable](https://reviewable.io:443/reviews/powershell/xsqlserver/67)*
<!-- Sent from Reviewable.io -->
",True,False,40,132778.58333333334
PowerShell/xSQLServer/67,2016-09-21T17:28:22Z,False,57e2c33b6480fda7c14f967b,"



Reviewed 1 of 3 files at r13.
Review status: all files reviewed at latest revision, 1 unresolved discussion.

---



*Comments from [Reviewable](https://reviewable.io:443/reviews/powershell/xsqlserver/67)*
<!-- Sent from Reviewable.io -->
",True,False,40,132778.58333333334
PowerShell/xSQLServer/67,2016-09-21T17:29:07Z,False,57e2c3666480fdaea3414ba1,"<img class=""emoji"" title="":lgtm:"" alt="":lgtm:"" align=""absmiddle"" src=""https://reviewable.io/lgtm.png"" height=""20"" width=""61""/>

---

Reviewed 2 of 3 files at r13.
Review status: all files reviewed at latest revision, 1 unresolved discussion.

---



*Comments from [Reviewable](https://reviewable.io:443/reviews/powershell/xsqlserver/67#-:-KSCmn8wh0qPDeCbdXze:bnfp4nl)*
<!-- Sent from Reviewable.io -->
",True,False,40,132778.58333333334
joomla/joomla-cms/12129,2016-09-22T07:49:47Z,False,57e38d1f6480fdaae68624cf,Where is this used? ,True,False,16,36117.15
joomla/joomla-cms/12129,2016-09-22T10:19:06Z,False,57e3b01f6480fdb2b93df256,"used in this table

![image](https://cloud.githubusercontent.com/assets/9630530/18744534/5bb4b4b2-80b6-11e6-9c7b-f1c8a03cd647.png)
",True,False,16,36117.15
joomla/joomla-cms/12129,2016-09-22T10:23:02Z,False,57e3b10a6480fda82a1f295c,"Thats what I thought but I dont see any tables there only divs

On 22 September 2016 at 13:19, andrepereiradasilva <notifications@github.com
> wrote:

> used in this table
>
> [image: image]
> <https://cloud.githubusercontent.com/assets/9630530/18744534/5bb4b4b2-80b6-11e6-9c7b-f1c8a03cd647.png>
>
> —
> You are receiving this because you commented.
> Reply to this email directly, view it on GitHub
> <https://github.com/joomla/joomla-cms/pull/12129#issuecomment-248863155>,
> or mute the thread
> <https://github.com/notifications/unsubscribe-auth/ABPH8VMrQxUvIP6FmCvYWQK1bdbm-z10ks5qslYcgaJpZM4KDHyG>
> .
>



-- 
Brian Teeman
Co-founder Joomla! and OpenSourceMatters Inc.
http://brian.teeman.net/
",True,False,16,36117.15
joomla/joomla-cms/12129,2016-09-22T10:24:17Z,False,57e3b1536480fdb00427dfa3,for instance the debug callstack table,True,False,16,36117.15
joomla/joomla-cms/12129,2016-09-22T10:35:18Z,False,57e3b3ed6480fda868f703c0,"stupid question - how do I enable the callstack?

On 22 September 2016 at 13:24, andrepereiradasilva <notifications@github.com
> wrote:

> for instance the debug callstack table
>
> —
> You are receiving this because you commented.
> Reply to this email directly, view it on GitHub
> <https://github.com/joomla/joomla-cms/pull/12129#issuecomment-248864057>,
> or mute the thread
> <https://github.com/notifications/unsubscribe-auth/ABPH8UG3r0qJJFDtq-mUwMsNH4P3-YAfks5qsldTgaJpZM4KDHyG>
> .
>



-- 
Brian Teeman
Co-founder Joomla! and OpenSourceMatters Inc.
http://brian.teeman.net/
",True,False,16,36117.15
joomla/joomla-cms/12129,2016-09-22T11:01:49Z,False,57e3ba266480fda815617729,"just enable (if not yet) database queties

![image](https://cloud.githubusercontent.com/assets/9630530/18745932/54245fd0-80bc-11e6-9be9-b9208033507f.png)
",True,False,16,36117.15
joomla/joomla-cms/12129,2016-09-22T11:50:56Z,False,57e3c5a26480fda904469e01,"Doh
",True,False,16,36117.15
joomla/joomla-cms/12129,2016-09-23T08:19:59Z,False,57e4e5b16480fda8cc3c32b2,"The debug call stack does have a th inside a thead I must be missing something

![smxu](https://cloud.githubusercontent.com/assets/1296369/18778974/a18f54dc-817f-11e6-9a3d-6b3b890f46e3.png)


",True,False,16,36117.15
neovim/neovim/4568,2016-09-24T09:15:12Z,False,57e644276480fda83f0b63d3,"@justinmk I'd like to nominate this for 0.1.6, as said this would be able to fix real performance issues in bufhl (ref https://github.com/arakashic/chromatica.nvim/issues/18), and, say implement `vim.dictonary.pop()` which is missing in the python-client for some reason, without using deprecated methods. (Though both are _in principle_ possible with vimL helpers, it surely would seem strange if consumers of the new API would need to rely on viml code to be performant)",True,False,46,212111.16666666666
neovim/neovim/4568,2016-09-24T09:50:54Z,False,57e64c826480fdb08c163857,Ok I'll look at this today. Hopefully others can too.,True,False,46,212111.16666666666
neovim/neovim/4568,2016-09-24T12:07:31Z,False,57e66c886480fda7eb5258f7,`UINT64_MAX` -> `NO_RESPONSE`,True,False,46,212111.16666666666
neovim/neovim/4568,2016-09-24T12:15:29Z,False,57e66e666480fda7eb52595c,Is on error `result` already freed or `NIL`? Otherwise missing clean up.,True,False,46,212111.16666666666
neovim/neovim/4568,2016-09-24T12:20:10Z,False,57e66f7d6480fda7c150f7ef,In case of a validation error an empty  array is returned.,True,False,46,212111.16666666666
neovim/neovim/4568,2016-09-24T12:22:15Z,False,57e66ffd6480fdb2270fbc1b,code -> type ?,True,False,46,212111.16666666666
neovim/neovim/4568,2016-09-24T12:33:12Z,False,57e6728d6480fdb15be0cc12,"If a call fails but a result should be returned, nothing is put in `results`. Is this expected?",True,False,46,212111.16666666666
neovim/neovim/4568,2016-09-24T12:38:43Z,False,57e673d86480fda880a37b7a,`name` and `args` could be moved after the validation code.,True,False,46,212111.16666666666
neovim/neovim/4568,2016-09-24T12:55:32Z,False,57e677cc6480fdb08c16426e,"Do you mean validation of the multi_request array itself? Then an error is sent back, nothing can be returned.",True,False,46,212111.16666666666
neovim/neovim/4568,2016-09-24T12:56:57Z,False,57e6781d6480fdad1b0f48ef,"yes, the comlete multi_request is then interrupted, so there is no ambiguity what calls the present elements in `results` come from.",True,False,46,212111.16666666666
neovim/neovim/4568,2016-09-24T13:00:14Z,False,57e678e76480fda8156279b6,"I don't like that really, no API function does it yet, but they could use `NO_RESPONSE` for the optimization ""no response exected, don't bother calculating the return value"". A separate flag here is probably the best (to use by `eval.c:api_wrapper` also)",True,False,46,212111.16666666666
neovim/neovim/4568,2016-09-24T13:02:27Z,False,57e679696480fdac77bd7c5d,"it should be an invariant, whenever an api function sets an error, the return value should be NIL (or at least non-allocating). ",True,False,46,212111.16666666666
neovim/neovim/4568,2016-09-24T13:07:44Z,False,57e67aa26480fdb30fac4e5e,"They could, but to me matching a field from a discriminated union is one operation, which happens to be two steps in language like C, thus best kept together.",True,False,46,212111.16666666666
neovim/neovim/4568,2016-09-24T13:43:15Z,False,57e682f86480fda801bef8ee,"Thanks, updated.",True,False,46,212111.16666666666
wvulibraries/RoomMe/99,2016-10-01T10:23:05Z,False,57ef92c06480fd0fca85acef,"Make these class variables. That way we only have to call those methods once, which is more efficient on the system and memory. ",True,False,20,8127.983333333334
wvulibraries/RoomMe/99,2016-10-01T10:23:05Z,False,57ef92c06480fd1070904033,"Make these class variables. That way we only have to call those methods once, which is more efficient on the system and memory. ",True,False,20,8127.983333333334
wvulibraries/RoomMe/99,2016-10-01T10:24:41Z,False,57ef92c06480fd10f028fb90,"We don't need to sanitize the variable here, we don't even know if we are going to use it yet. 

First, lets see if we have it (we should always check that we have it before we validate it!!) ... and if we have it, we validate it. ",True,False,20,8127.983333333334
wvulibraries/RoomMe/99,2016-10-01T10:27:49Z,False,57ef92c06480fd173f8140ac,"we NEVER, EVER, NEVER, put a variable into a sql statement like this. never. This leads to sql injection attacks. 

If we HAVE to put a variable into a string it MUST be escaped like: $this->db->escape($id) ... this takes care of the db sanitization. Never sanitie it separately. always do it in the sprintf statement. That way there is absolutely no confusion as to whether it has been sanitized. Otherwise someone looking at the code my not know if it has been, or, if you modify it after checking it, those modifications aren't being checked. ",True,False,20,8127.983333333334
wvulibraries/RoomMe/99,2016-10-01T10:28:23Z,False,57ef92c06480fd19190d5382,"However, in this case, there is no reason to manually sanitize the value. put a place holder ? in, and we will insert the value on query.",True,False,20,8127.983333333334
wvulibraries/RoomMe/99,2016-10-01T10:29:14Z,False,57ef92c06480fd15e37d0363,"We insert the vallue here, as an arrray, to the PDO prepared statements. This is the safest way to insert into the database. PDO will handle all the santization as well as properly quoting the value. ",True,False,20,8127.983333333334
wvulibraries/RoomMe/99,2016-10-01T10:32:06Z,False,57ef92c06480fd0fb59e8a16,"you should never return information text like this, for multiple reasons. 

1. Separation of code and content is extremely important for maintainability. 
1. It makes it much harder to unit test. If this sentence ever changes your tests are going to have to change. Methods/functions/whatevers should do as little as possible so that testing becomes easier. 
1. It isn't the functions job to determine if no rows warrants a message. that is the job of whatever is calling it. 

Instead,, just return an empty array. No error is needed at this point. ",True,False,20,8127.983333333334
wvulibraries/RoomMe/99,2016-10-01T10:32:59Z,False,57ef92c06480fd11191b4648,"Security issue! 

By printing to the screen the sql error message we are advertising information that attackers could use. never print sql statements to the screen. ",True,False,20,8127.983333333334
wvulibraries/RoomMe/99,2016-10-01T10:32:59Z,False,57ef92c06480fd100912ca4e,"Security issue! 

By printing to the screen the sql error message we are advertising information that attackers could use. never print sql statements to the screen. ",True,False,20,8127.983333333334
wvulibraries/RoomMe/99,2016-10-01T10:33:35Z,False,57ef92c06480fd19a3b3cd35,"Instead, dump them to the log file. While testing, just do a tail -f on the log file and you will see any error messages that are popping into it. ",True,False,20,8127.983333333334
wvulibraries/RoomMe/99,2016-10-01T10:34:03Z,False,57ef92c06480fd11e487f5bf,"On error, you need to return false, otherwise, you have no idea that something went wrong and processing should stop elsewhere. ",True,False,20,8127.983333333334
wvulibraries/RoomMe/99,2016-10-01T10:34:29Z,False,57ef92c06480fd1adcd4d727,"No need to loop, the db module supports getting everything at once. ",True,False,20,8127.983333333334
wvulibraries/RoomMe/99,2016-10-01T10:35:01Z,False,57ef92c06480fd0f8bb1a573,"if you aren't manipulating the data, why are we wasting the CPU cycles to loop through the array?",True,False,20,8127.983333333334
wvulibraries/RoomMe/99,2016-10-01T10:36:32Z,False,57ef92c06480fd10b2259483,"We don't return sentences from functions. Either the function was successful (true, or data) or it wasn't (false). Sentences like this should be managed outside of the code base whenever possible (RoomMe has these types of things already built in, and the results messages an be managed by admins via the web interface)",True,False,20,8127.983333333334
wvulibraries/RoomMe/99,2016-10-01T10:39:18Z,False,57ef92c06480fd0f61cf933a,"Switched the conditional ordering. We should check if it exists/not null BEFORE we check if it is valid. PHP will fail the conditional at the null check and not waste the CPU on the second check. 

if you do the second check first you run the risk of trying to check null (in this case not an issue, in others it could change the results drastically)",True,False,20,8127.983333333334
wvulibraries/RoomMe/99,2016-10-01T10:39:18Z,False,57ef92c06480fd1364b6ecce,"Switched the conditional ordering. We should check if it exists/not null BEFORE we check if it is valid. PHP will fail the conditional at the null check and not waste the CPU on the second check. 

if you do the second check first you run the risk of trying to check null (in this case not an issue, in others it could change the results drastically)",True,False,20,8127.983333333334
wvulibraries/RoomMe/99,2016-10-01T10:43:19Z,False,57ef93496480fd107090405f,"Additionally, there is a lot of HTML in the file. ALL of that should be removed and placed into individual pages. HTML should be placed in PHP extremely sparingly. For example the method ""uploadFOrm"" should be a normal page on the server. There is absolutely no reason that whole thing needs to be in the class.  ",True,False,20,8127.983333333334
wvulibraries/RoomMe/99,2016-10-01T10:44:41Z,False,57ef939d6480fd11e487f5f9,"I only worked on one function. 

But the same ideas should be applied to all of the other functions as well. There are a significant number of security issues in the file as well. I think if you clean it up as described in the inline notes above as well as removing all of the HTML it will resolve a large number (all?) of the security issues. But until the file is cleaned up it will be hard to ...",True,False,20,8127.983333333334
camwiegert/in-view/23,2016-10-01T20:08:48Z,False,57f017d46480fd1070906f9c,"@VanBronckhorst Took a look at your implementation and had a few thoughts:
* I think we should put all options into an options object so we can pass that by reference to the Registry constructor.
* I tend to think the calculation for threshold should be pretty dumb. Basically, calculate each dimension individually and require both. Thoughts?

I put together what I think this all might look like in #37. Mind taking a look there? We can still merge this PR if you want to revise it. Thank you!",True,False,3,41394.11666666667
joomla/joomla-cms/12129,2016-10-02T21:30:26Z,False,57f17c786480fd1a953b148d,"sorry @brianteeman you're right

the errors are in the explain and profile tables

![image](https://cloud.githubusercontent.com/assets/9630530/19023833/bc21cd26-88ef-11e6-8af9-34e80366529d.png)
",True,False,16,36117.15
joomla/joomla-cms/12129,2016-10-02T21:30:26Z,False,57f17c786480fd17b2426e9a,"sorry @brianteeman you're right

the errors are in the explain and profile tables

![image](https://cloud.githubusercontent.com/assets/9630530/19023833/bc21cd26-88ef-11e6-8af9-34e80366529d.png)
",True,False,16,36117.15
joomla/joomla-cms/12129,2016-10-02T21:39:28Z,False,57f17e946480fd1193f39646,"I have tested this item :white_check_mark: successfully on f631fb527993e99aeb1f736fcd1c1f0d121a800c<br /><br />:+1: <hr /><sub>This comment was created with the <a href=""https://github.com/joomla/jissues"">J!Tracker Application</a> at <a href=""https://issues.joomla.org/tracker/joomla-cms/12129"">issues.joomla.org/joomla-cms/12129</a>.</sub>",True,False,16,36117.15
joomla/joomla-cms/12129,2016-10-02T21:39:28Z,False,57f17e946480fd1089f26473,"I have tested this item :white_check_mark: successfully on f631fb527993e99aeb1f736fcd1c1f0d121a800c<br /><br />:+1: <hr /><sub>This comment was created with the <a href=""https://github.com/joomla/jissues"">J!Tracker Application</a> at <a href=""https://issues.joomla.org/tracker/joomla-cms/12129"">issues.joomla.org/joomla-cms/12129</a>.</sub>",True,False,16,36117.15
joomla/joomla-cms/12129,2016-10-03T08:34:34Z,False,57f2181e6480fd0f61d06914,"I have tested this item :white_check_mark: successfully on f631fb527993e99aeb1f736fcd1c1f0d121a800c<hr /><sub>This comment was created with the <a href=""https://github.com/joomla/jissues"">J!Tracker Application</a> at <a href=""https://issues.joomla.org/tracker/joomla-cms/12129"">issues.joomla.org/joomla-cms/12129</a>.</sub>",True,False,16,36117.15
joomla/joomla-cms/12129,2016-10-03T08:53:45Z,False,57f21c9f6480fd0fca8679e8,"RTC<hr /><sub>This comment was created with the <a href=""https://github.com/joomla/jissues"">J!Tracker Application</a> at <a href=""https://issues.joomla.org/tracker/joomla-cms/12129"">issues.joomla.org/joomla-cms/12129</a>.</sub>",True,False,16,36117.15
wvulibraries/RoomMe/99,2016-10-03T14:58:58Z,False,57f50a6e6480fd182d7ef7eb,"Thanks Mike I'll work on the other functions. We started doing some changes
on Friday to this since we were asked to add the ability to restrict
specific rooms. So I'll add your suggestions to what I already have.

On Sat, Oct 1, 2016 at 6:44 AM, Michael Bond <notifications@github.com>
wrote:

> I only worked on one function.
>
> But the same ideas should be applied to all of the other functions as
> well. There are a significant number of security issues in the file as
> well. I think if you clean it up as described in the inline notes above as
> well as removing all of the HTML it will resolve a large number (all?) of
> the security issues. But until the file is cleaned up it will be hard to ...
>
> —
> You are receiving this because you were assigned.
> Reply to this email directly, view it on GitHub
> <https://github.com/wvulibraries/RoomMe/pull/99#issuecomment-250905745>,
> or mute the thread
> <https://github.com/notifications/unsubscribe-auth/AQIDS7ZkDzNxIJwKUBNJqJ9dFRA6v0zfks5qvjmZgaJpZM4KLuMo>
> .
>
",True,False,20,8127.983333333334
ManageIQ/manageiq/11691,2016-10-04T19:32:56Z,False,57f7131e6480fde6ea7a11ad,cc @bdunne @syncrou ,True,False,72,539068.1666666666
LLNL/spack/1898,2016-10-05T19:04:31Z,False,57f703706480fdf1925ff51b,@skosukhin Can you take a look at #1913? I have a feeling we are trying to solve the same problem here. Any idea which of our solutions works better?,True,False,3,1203.4
LLNL/spack/1898,2016-10-06T11:07:24Z,False,57f703706480fdf1925ff51c,"@adamjstewart as I understand it, the reason why the test fails is that denormals are flushed to zero by intel compiler at optimization level -O1 or higher. That is why we have to give it the flag -no-ftz to prevent this. Precise floating model (-fp-model precise) implies this behavior as well, but not only this, which means more rules that might affect the performance (but are not necessary to solve this particular problem) are applied.

My judgment is based on this: https://software.intel.com/sites/default/files/managed/a9/32/FP_Consistency_070816.pdf",True,False,3,1203.4
LLNL/spack/1898,2016-10-06T15:07:55Z,False,57f703706480fdf1925ff51d,"@skosukhin Wow, I didn't expect documentation straight from Intel backing up your argument! Now I feel like I brought a knife to a gun fight lol. I'm going to assume that you know where more than I do. If your flag fixes the bug and nothing else then it sounds like the better way to go. I'll close my PR.",True,False,3,1203.4
ManageIQ/manageiq/11691,2016-10-06T15:11:04Z,False,57f6ca796480fdec2569d447,@mansam - It would be nice to DRY up the behavior in this method. I noticed a few methods that duplicate the conditional case statements.,True,False,72,539068.1666666666
ManageIQ/manageiq/11691,2016-10-06T15:18:07Z,False,57f6ca896480fdf8c76d9e17,"@syncrou Of course, I'm just being expedient while I stumble through this process.",True,False,72,539068.1666666666
ManageIQ/manageiq/11691,2016-10-06T15:53:06Z,False,57f7131e6480fde6ea7a11ae,@mansam - Obviously this is wip - but would definitely like to see tests around the new changes.,True,False,72,539068.1666666666
ManageIQ/manageiq/11691,2016-10-06T16:07:15Z,False,57f7131e6480fde6ea7a11af,"<rubocop />Checked commits https://github.com/mansam/manageiq/compare/6280ca7f8e94bad100afa7e90d39df1a7d1b2466~...4d10df3f45513b83c073bf7cf5e02b9668ce146c with ruby 2.2.5, rubocop 0.37.2, and haml-lint 0.16.1
14 files checked, 24 offenses detected

**app/controllers/application_controller/miq_request_methods.rb**
- [ ] :warning: - [Line 999](https://github.com/mansam/manageiq/blob/4d10df3f45513b83c073bf7cf5e02b9668ce146c/app/controllers/application_controller/miq_request_methods.rb#L999), Col 11 - [Lint/EndAlignment](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Lint/EndAlignment) - `end` at 999, 10 is not aligned with `if` at 995, 19.
- [ ] :exclamation: - [Line 767](https://github.com/mansam/manageiq/blob/4d10df3f45513b83c073bf7cf5e02b9668ce146c/app/controllers/application_controller/miq_request_methods.rb#L767), Col 49 - [Style/ExtraSpacing](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Style/ExtraSpacing) - Unnecessary spacing detected.
- [ ] :exclamation: - [Line 996](https://github.com/mansam/manageiq/blob/4d10df3f45513b83c073bf7cf5e02b9668ce146c/app/controllers/application_controller/miq_request_methods.rb#L996), Col 13 - [Style/IndentationWidth](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Style/IndentationWidth) - Use 2 (not -7) spaces for indentation.
- [ ] :exclamation: - [Line 997](https://github.com/mansam/manageiq/blob/4d10df3f45513b83c073bf7cf5e02b9668ce146c/app/controllers/application_controller/miq_request_methods.rb#L997), Col 11 - [Style/ElseAlignment](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Style/ElseAlignment) - Align `elsif` with `if`.
- [ ] :exclamation: - [Line 997](https://github.com/mansam/manageiq/blob/4d10df3f45513b83c073bf7cf5e02b9668ce146c/app/controllers/application_controller/miq_request_methods.rb#L997), Col 47 - [Style/ExtraSpacing](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Style/ExtraSpacing) - Unnecessary spacing detected.
- [ ] :grey_exclamation: - [Line 531](https://github.com/mansam/manageiq/blob/4d10df3f45513b83c073bf7cf5e02b9668ce146c/app/controllers/application_controller/miq_request_methods.rb#L531), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [121/120]
- [ ] :grey_exclamation: - [Line 551](https://github.com/mansam/manageiq/blob/4d10df3f45513b83c073bf7cf5e02b9668ce146c/app/controllers/application_controller/miq_request_methods.rb#L551), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [126/120]
- [ ] :grey_exclamation: - [Line 553](https://github.com/mansam/manageiq/blob/4d10df3f45513b83c073bf7cf5e02b9668ce146c/app/controllers/application_controller/miq_request_methods.rb#L553), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [122/120]
- [ ] :grey_exclamation: - [Line 767](https://github.com/mansam/manageiq/blob/4d10df3f45513b83c073bf7cf5e02b9668ce146c/app/controllers/application_controller/miq_request_methods.rb#L767), Col 15 - [Metrics/BlockNesting](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/BlockNesting) - Avoid more than 3 levels of block nesting.
- [ ] :grey_exclamation: - [Line 773](https://github.com/mansam/manageiq/blob/4d10df3f45513b83c073bf7cf5e02b9668ce146c/app/controllers/application_controller/miq_request_methods.rb#L773), Col 15 - [Metrics/BlockNesting](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/BlockNesting) - Avoid more than 3 levels of block nesting.
- [ ] :grey_exclamation: - [Line 857](https://github.com/mansam/manageiq/blob/4d10df3f45513b83c073bf7cf5e02b9668ce146c/app/controllers/application_controller/miq_request_methods.rb#L857), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [125/120]

**app/models/miq_provision_request.rb**
- [ ] :exclamation: - [Line 11](https://github.com/mansam/manageiq/blob/4d10df3f45513b83c073bf7cf5e02b9668ce146c/app/models/miq_provision_request.rb#L11), Col 23 - [Style/MutableConstant](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Style/MutableConstant) - Freeze mutable objects assigned to constants.
- [ ] :exclamation: - [Line 17](https://github.com/mansam/manageiq/blob/4d10df3f45513b83c073bf7cf5e02b9668ce146c/app/models/miq_provision_request.rb#L17), Col 3 - [Rails/Validation](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Rails/Validation) - Prefer the new style validations `validates :column, presence: value` over `validates_presence_of`.
- [ ] :grey_exclamation: - [Line 142](https://github.com/mansam/manageiq/blob/4d10df3f45513b83c073bf7cf5e02b9668ce146c/app/models/miq_provision_request.rb#L142), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [124/120]
- [ ] :grey_exclamation: - [Line 147](https://github.com/mansam/manageiq/blob/4d10df3f45513b83c073bf7cf5e02b9668ce146c/app/models/miq_provision_request.rb#L147), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [124/120]
- [ ] :grey_exclamation: - [Line 48](https://github.com/mansam/manageiq/blob/4d10df3f45513b83c073bf7cf5e02b9668ce146c/app/models/miq_provision_request.rb#L48), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [132/120]

**app/models/miq_provision_virt_workflow.rb**
- [ ] :exclamation: - [Line 81](https://github.com/mansam/manageiq/blob/4d10df3f45513b83c073bf7cf5e02b9668ce146c/app/models/miq_provision_virt_workflow.rb#L81), Col 9 - [Style/CommentAnnotation](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Style/CommentAnnotation) - Annotation keywords like `FIXME` should be all upper case, followed by a colon, and a space, then a note describing the problem.
- [ ] :grey_exclamation: - [Line 371](https://github.com/mansam/manageiq/blob/4d10df3f45513b83c073bf7cf5e02b9668ce146c/app/models/miq_provision_virt_workflow.rb#L371), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [123/120]

**app/models/miq_provision_workflow.rb**
- [ ] :exclamation: - [Line 19](https://github.com/mansam/manageiq/blob/4d10df3f45513b83c073bf7cf5e02b9668ce146c/app/models/miq_provision_workflow.rb#L19), Col 5 - [Style/CommentAnnotation](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Style/CommentAnnotation) - Annotation keywords like `TODO` should be all upper case, followed by a colon, and a space, then a note describing the problem.

**app/views/miq_request/_pre_prov.html.haml**
- [ ] :warning: - [Line 11](https://github.com/mansam/manageiq/blob/4d10df3f45513b83c073bf7cf5e02b9668ce146c/app/views/miq_request/_pre_prov.html.haml#L11) - Line is too long. [234/160]
- [ ] :warning: - [Line 17](https://github.com/mansam/manageiq/blob/4d10df3f45513b83c073bf7cf5e02b9668ce146c/app/views/miq_request/_pre_prov.html.haml#L17) - The - symbol should have one space separating it from code
- [ ] :warning: - [Line 6](https://github.com/mansam/manageiq/blob/4d10df3f45513b83c073bf7cf5e02b9668ce146c/app/views/miq_request/_pre_prov.html.haml#L6) - Space inside parentheses detected.
- [ ] :warning: - [Line 7](https://github.com/mansam/manageiq/blob/4d10df3f45513b83c073bf7cf5e02b9668ce146c/app/views/miq_request/_pre_prov.html.haml#L7) - Line is too long. [225/160]
- [ ] :warning: - [Line 9](https://github.com/mansam/manageiq/blob/4d10df3f45513b83c073bf7cf5e02b9668ce146c/app/views/miq_request/_pre_prov.html.haml#L9) - Line is too long. [228/160]
",True,False,72,539068.1666666666
camwiegert/in-view/23,2016-10-06T18:03:31Z,False,57f79ed76480fdee24c034f7,"Went ahead and merged #37, taking some cues from here. Thanks for your help!",True,False,3,41394.11666666667
wvulibraries/RoomMe/99,2016-10-07T01:51:04Z,False,57f7b2126480fde7827f40b4,Conflicts because Tracy was remaking these for the practice.  ,True,False,20,8127.983333333334
w3c/preload/71,2016-10-08T14:42:14Z,False,57f9c23f6480fdf60b8d077f,Marked as non-substantive for IPR from ash-nazg.,True,False,4,129647.41666666667
neovim/neovim/4568,2016-10-10T12:53:35Z,False,57fb8f536480fde68ff07208,"So `INTERNAL_RESPONSE` is a future advisory flag, it's not used any where yet.",True,False,46,212111.16666666666
neovim/neovim/4568,2016-10-10T13:05:04Z,False,580b448f6480fddc0e5f73e1,"NO_RESPONSE and INTERNAL_RESPONSE are named like results (e.g. ""No response was received""), but they are actually instructions:

- NO_RESPONSE = ""I do not want a response""
- INTERNAL_RESPONSE = ""Result is used internally: `\n` means `NUL`, etc.""

",True,False,46,212111.16666666666
neovim/neovim/4568,2016-10-10T13:06:17Z,False,57fb924c6480fdeea94bf151,I guess this should be named `INTERNAL_CHANNEL`.,True,False,46,212111.16666666666
neovim/neovim/4568,2016-10-10T13:09:54Z,False,57fb932b6480fdec67afe90f,"I'm confused by this. It says the first item is `number of calls performed without errors`, then says if an error occurred the first item is the `call that resulted in an error`.",True,False,46,212111.16666666666
ManageIQ/manageiq/11691,2016-10-10T13:17:52Z,False,57fb95036480fde5fbc46a0e,@miq-bot add_label euwe/yes,True,False,72,539068.1666666666
neovim/neovim/4568,2016-10-10T13:21:07Z,False,57fb95c86480fde6647a0a1a,"Can we name it `request_atomic`? Because (1) we should keep global functions starting with a verb (`:h dev-api`) unless it is pseudo-namespaced, (2) ""atomic"" is keyword-friendly and communicates much more information (""multi"" which does not advertise the nice properties of this PR).

As @equalsraf  [mentioned](https://github.com/neovim/neovim/pull/4568#issuecomment-222296538) it would seem ideal to have this at the protocol layer (it's a bit weird that clients will be sending ""local RPC requests"" via the remote RPC API). But the simplicity of this implementation cannot be denied and it will give clients something very useful. So we can't let perfection block this.",True,False,46,212111.16666666666
neovim/neovim/4568,2016-10-10T19:05:45Z,False,57fbe6916480fdf736920a3a,"When thinking of it, no API method is actually using the response id number, nor would I expect it to be used (possibly in #4971, but then I guess it would be part of the stream, and that would need to change signatures of methods using  anyway), so we could just make this a `bool` for now, or remove it from this PR, it could be introduced when actually used.",True,False,46,212111.16666666666
neovim/neovim/4568,2016-10-10T19:07:23Z,False,57fbe6f36480fdea8b52413b,"Well it is not a channel, maybe `INTERNAL_CALL`",True,False,46,212111.16666666666
neovim/neovim/4568,2016-10-10T19:08:17Z,False,580b44906480fddc0e5f73e2,"Well, it is the same number, but I guess it could be more clearly formulated.",True,False,46,212111.16666666666
neovim/neovim/4568,2016-10-10T19:12:27Z,False,580b44906480fddc0e5f73e3,"Ah, You mean because it's zero indexed?",True,False,46,212111.16666666666
neovim/neovim/4568,2016-10-10T19:16:53Z,False,580b44906480fddc0e5f73e4,"Yes, it is the Convention for the API so far, but it won't hurt to be explicit here I guess.",True,False,46,212111.16666666666
neovim/neovim/4568,2016-10-10T19:24:54Z,False,57fbeb0d6480fde6a3e2e903,"Instead of request_atomic, send_atomic_request or send_multi_request?",True,False,46,212111.16666666666
neovim/neovim/4568,2016-10-12T14:14:16Z,False,57fe45416480fde17e80ab93,"Not sure I like ""send"" it would sound like nvim should send the requests somewhere else. Though I'm not super happy with ""request"" either, this could just as well be used as a notification (and reasonably then no return value would be requested). Maybe `call_atomic` or `call_multiple` ?",True,False,46,212111.16666666666
ManageIQ/manageiq/11691,2016-10-12T15:17:08Z,False,57fe53f96480fddceff45f45,"<rubocop />Checked commits https://github.com/mansam/manageiq/compare/f4a3e89297c0b01a32a046057f1f15079ad71d3c~...b098d03f09ca443e55ebd07a6b282bd3900c4bfb with ruby 2.2.5, rubocop 0.37.2, and haml-lint 0.16.1
22 files checked, 34 offenses detected

**app/controllers/application_controller/miq_request_methods.rb**
- [ ] :warning: - [Line 1029](https://github.com/mansam/manageiq/blob/b098d03f09ca443e55ebd07a6b282bd3900c4bfb/app/controllers/application_controller/miq_request_methods.rb#L1029), Col 11 - [Lint/EndAlignment](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Lint/EndAlignment) - `end` at 1029, 10 is not aligned with `if` at 1025, 19.
- [ ] :exclamation: - [Line 1026](https://github.com/mansam/manageiq/blob/b098d03f09ca443e55ebd07a6b282bd3900c4bfb/app/controllers/application_controller/miq_request_methods.rb#L1026), Col 13 - [Style/IndentationWidth](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Style/IndentationWidth) - Use 2 (not -7) spaces for indentation.
- [ ] :exclamation: - [Line 1027](https://github.com/mansam/manageiq/blob/b098d03f09ca443e55ebd07a6b282bd3900c4bfb/app/controllers/application_controller/miq_request_methods.rb#L1027), Col 11 - [Style/ElseAlignment](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Style/ElseAlignment) - Align `elsif` with `if`.
- [ ] :exclamation: - [Line 1027](https://github.com/mansam/manageiq/blob/b098d03f09ca443e55ebd07a6b282bd3900c4bfb/app/controllers/application_controller/miq_request_methods.rb#L1027), Col 47 - [Style/ExtraSpacing](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Style/ExtraSpacing) - Unnecessary spacing detected.
- [ ] :exclamation: - [Line 797](https://github.com/mansam/manageiq/blob/b098d03f09ca443e55ebd07a6b282bd3900c4bfb/app/controllers/application_controller/miq_request_methods.rb#L797), Col 49 - [Style/ExtraSpacing](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Style/ExtraSpacing) - Unnecessary spacing detected.
- [ ] :grey_exclamation: - [Line 556](https://github.com/mansam/manageiq/blob/b098d03f09ca443e55ebd07a6b282bd3900c4bfb/app/controllers/application_controller/miq_request_methods.rb#L556), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [155/120]
- [ ] :grey_exclamation: - [Line 561](https://github.com/mansam/manageiq/blob/b098d03f09ca443e55ebd07a6b282bd3900c4bfb/app/controllers/application_controller/miq_request_methods.rb#L561), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [125/120]
- [ ] :grey_exclamation: - [Line 581](https://github.com/mansam/manageiq/blob/b098d03f09ca443e55ebd07a6b282bd3900c4bfb/app/controllers/application_controller/miq_request_methods.rb#L581), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [126/120]
- [ ] :grey_exclamation: - [Line 583](https://github.com/mansam/manageiq/blob/b098d03f09ca443e55ebd07a6b282bd3900c4bfb/app/controllers/application_controller/miq_request_methods.rb#L583), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [122/120]
- [ ] :grey_exclamation: - [Line 797](https://github.com/mansam/manageiq/blob/b098d03f09ca443e55ebd07a6b282bd3900c4bfb/app/controllers/application_controller/miq_request_methods.rb#L797), Col 15 - [Metrics/BlockNesting](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/BlockNesting) - Avoid more than 3 levels of block nesting.
- [ ] :grey_exclamation: - [Line 803](https://github.com/mansam/manageiq/blob/b098d03f09ca443e55ebd07a6b282bd3900c4bfb/app/controllers/application_controller/miq_request_methods.rb#L803), Col 15 - [Metrics/BlockNesting](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/BlockNesting) - Avoid more than 3 levels of block nesting.
- [ ] :grey_exclamation: - [Line 887](https://github.com/mansam/manageiq/blob/b098d03f09ca443e55ebd07a6b282bd3900c4bfb/app/controllers/application_controller/miq_request_methods.rb#L887), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [125/120]

**app/models/cloud_volume_snapshot.rb**
- [ ] :exclamation: - [Line 21](https://github.com/mansam/manageiq/blob/b098d03f09ca443e55ebd07a6b282bd3900c4bfb/app/models/cloud_volume_snapshot.rb#L21), Col 1 - [Style/EmptyLinesAroundClassBody](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Style/EmptyLinesAroundClassBody) - Extra empty line detected at class body end.

**app/models/miq_provision_request.rb**
- [ ] :exclamation: - [Line 11](https://github.com/mansam/manageiq/blob/b098d03f09ca443e55ebd07a6b282bd3900c4bfb/app/models/miq_provision_request.rb#L11), Col 23 - [Style/MutableConstant](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Style/MutableConstant) - Freeze mutable objects assigned to constants.
- [ ] :exclamation: - [Line 17](https://github.com/mansam/manageiq/blob/b098d03f09ca443e55ebd07a6b282bd3900c4bfb/app/models/miq_provision_request.rb#L17), Col 3 - [Rails/Validation](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Rails/Validation) - Prefer the new style validations `validates :column, presence: value` over `validates_presence_of`.
- [ ] :grey_exclamation: - [Line 142](https://github.com/mansam/manageiq/blob/b098d03f09ca443e55ebd07a6b282bd3900c4bfb/app/models/miq_provision_request.rb#L142), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [124/120]
- [ ] :grey_exclamation: - [Line 147](https://github.com/mansam/manageiq/blob/b098d03f09ca443e55ebd07a6b282bd3900c4bfb/app/models/miq_provision_request.rb#L147), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [124/120]
- [ ] :grey_exclamation: - [Line 48](https://github.com/mansam/manageiq/blob/b098d03f09ca443e55ebd07a6b282bd3900c4bfb/app/models/miq_provision_request.rb#L48), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [132/120]

**app/models/miq_provision_virt_workflow.rb**
- [ ] :exclamation: - [Line 381](https://github.com/mansam/manageiq/blob/b098d03f09ca443e55ebd07a6b282bd3900c4bfb/app/models/miq_provision_virt_workflow.rb#L381), Col 5 - [Style/RedundantReturn](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Style/RedundantReturn) - Redundant `return` detected.
- [ ] :exclamation: - [Line 81](https://github.com/mansam/manageiq/blob/b098d03f09ca443e55ebd07a6b282bd3900c4bfb/app/models/miq_provision_virt_workflow.rb#L81), Col 9 - [Style/CommentAnnotation](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Style/CommentAnnotation) - Annotation keywords like `FIXME` should be all upper case, followed by a colon, and a space, then a note describing the problem.
- [ ] :grey_exclamation: - [Line 385](https://github.com/mansam/manageiq/blob/b098d03f09ca443e55ebd07a6b282bd3900c4bfb/app/models/miq_provision_virt_workflow.rb#L385), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [123/120]

**app/models/miq_provision_workflow.rb**
- [ ] :exclamation: - [Line 19](https://github.com/mansam/manageiq/blob/b098d03f09ca443e55ebd07a6b282bd3900c4bfb/app/models/miq_provision_workflow.rb#L19), Col 5 - [Style/CommentAnnotation](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Style/CommentAnnotation) - Annotation keywords like `TODO` should be all upper case, followed by a colon, and a space, then a note describing the problem.
- [ ] :grey_exclamation: - [Line 33](https://github.com/mansam/manageiq/blob/b098d03f09ca443e55ebd07a6b282bd3900c4bfb/app/models/miq_provision_workflow.rb#L33), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [130/120]

**app/views/miq_request/_pre_prov.html.haml**
- [ ] :warning: - [Line 11](https://github.com/mansam/manageiq/blob/b098d03f09ca443e55ebd07a6b282bd3900c4bfb/app/views/miq_request/_pre_prov.html.haml#L11) - Line is too long. [234/160]
- [ ] :warning: - [Line 17](https://github.com/mansam/manageiq/blob/b098d03f09ca443e55ebd07a6b282bd3900c4bfb/app/views/miq_request/_pre_prov.html.haml#L17) - The - symbol should have one space separating it from code
- [ ] :warning: - [Line 6](https://github.com/mansam/manageiq/blob/b098d03f09ca443e55ebd07a6b282bd3900c4bfb/app/views/miq_request/_pre_prov.html.haml#L6) - Space inside parentheses detected.
- [ ] :warning: - [Line 7](https://github.com/mansam/manageiq/blob/b098d03f09ca443e55ebd07a6b282bd3900c4bfb/app/views/miq_request/_pre_prov.html.haml#L7) - Line is too long. [225/160]
- [ ] :warning: - [Line 9](https://github.com/mansam/manageiq/blob/b098d03f09ca443e55ebd07a6b282bd3900c4bfb/app/views/miq_request/_pre_prov.html.haml#L9) - Line is too long. [228/160]

**app/views/miq_request/_prov_vm_grid.html.haml**
- [ ] :warning: - [Line 2](https://github.com/mansam/manageiq/blob/b098d03f09ca443e55ebd07a6b282bd3900c4bfb/app/views/miq_request/_prov_vm_grid.html.haml#L2) - Use `-#` for comments instead of `- #`

**app/views/miq_request/_prov_volume_grid.html.haml**
- [ ] :warning: - [Line 21](https://github.com/mansam/manageiq/blob/b098d03f09ca443e55ebd07a6b282bd3900c4bfb/app/views/miq_request/_prov_volume_grid.html.haml#L21) - Avoid more than 3 levels of block nesting.
- [ ] :warning: - [Line 2](https://github.com/mansam/manageiq/blob/b098d03f09ca443e55ebd07a6b282bd3900c4bfb/app/views/miq_request/_prov_volume_grid.html.haml#L2) - Use `-#` for comments instead of `- #`

**app/views/miq_request/_prov_volume_snapshot_grid.html.haml**
- [ ] :warning: - [Line 21](https://github.com/mansam/manageiq/blob/b098d03f09ca443e55ebd07a6b282bd3900c4bfb/app/views/miq_request/_prov_volume_snapshot_grid.html.haml#L21) - Avoid more than 3 levels of block nesting.
- [ ] :warning: - [Line 2](https://github.com/mansam/manageiq/blob/b098d03f09ca443e55ebd07a6b282bd3900c4bfb/app/views/miq_request/_prov_volume_snapshot_grid.html.haml#L2) - Use `-#` for comments instead of `- #`

**lib/miq_automation_engine/engine/miq_ae_object.rb**
- [ ] :exclamation: - [Line 531](https://github.com/mansam/manageiq/blob/b098d03f09ca443e55ebd07a6b282bd3900c4bfb/lib/miq_automation_engine/engine/miq_ae_object.rb#L531), Col 9 - [Rails/Output](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Rails/Output) - Do not write to stdout. Use Rails' logger if you want to log.
",True,False,72,539068.1666666666
neovim/neovim/4568,2016-10-12T21:44:40Z,False,57ff58916480fd1c9b536577,"`call_atomic` seems best. Though it's inconsistent with the existing `call` (which only calls VimL functions, not request tuples), there's really no perfect approach here because of the unusual nature of this (we don't have any other API functions that take a request tuple).",True,False,46,212111.16666666666
neovim/neovim/4568,2016-10-13T07:34:33Z,False,57ff3a646480fd224062eb07,"Actually is is not possible for a API method to receive the `response_id` (like it is with the `channel_id`), it is just an always unused argument to `handle_nvim_[method]`. I'll just remove it for now.",True,False,46,212111.16666666666
neovim/neovim/4568,2016-10-13T07:46:39Z,False,57ff54676480fd22d337d167,Updated. An alternative could be `call_methods_atomic` if we use the distinction of API methods from vimL functions.,True,False,46,212111.16666666666
bower_____bower_____1748,2016-10-14T13:09:42Z,True,bower_____bower_____1748_____253794714,@kodypeterson need any help?,True,True,89,1588333.85
bower_____bower_____1748,2016-10-14T13:18:22Z,True,bower_____bower_____1748_____253796566,Maybe a better route is to fix bower support in https://yarnpkg.com/ that already has file locking,True,True,89,1588333.85
bower_____bower_____1748,2016-10-14T13:35:57Z,True,bower_____bower_____1748_____253800474,"@sheerun I'm not entirely sure how practical that is; we're using PureScript which leverages Bower for dependency management and it looks like support for Bower in Yarn is really just in its infancy e.g. https://github.com/yarnpkg/yarn/pull/896.

Does this mean that you would no longer be willing to consider this patch?",True,True,89,1588333.85
bower_____bower_____1748,2016-10-14T13:46:14Z,True,bower_____bower_____1748_____253803047,Maybe we could at least adopt lockfile format of yarn?,True,True,89,1588333.85
neovim/neovim/4568,2016-10-15T07:49:07Z,False,5801df796480fd1c9b552c53,"I think it is RDY, if no one objects against `call_methods_atomic`",True,False,46,212111.16666666666
neovim/neovim/4568,2016-10-15T10:05:52Z,False,5801ff856480fd1d6c0a049f,"I would prefer call_atomic because, I think we should eliminate the arbitrary jargon distinction between ""methods "" and ""functions"".  It's confusing that we assigned special meaning there. Not all API functions are acting on an object in a meaningful sense, so it's more inside knowledge.

(In the tests I have been meaning to rename ""meths"" to ""api"" or something like that)",True,False,46,212111.16666666666
neovim/neovim/4568,2016-10-15T10:10:36Z,False,580200a36480fd1c4748e163,"Well, the object in that case is the nvim instance, but I agree it is a bit internal jargon, so changing back to `call_atomic`.",True,False,46,212111.16666666666
neovim/neovim/4568,2016-10-15T23:56:54Z,False,5802c24d6480fd1cf0eef4c6,Wouldn't need the first item if we instead _always_ return the results.,True,False,46,212111.16666666666
neovim/neovim/4568,2016-10-15T23:59:27Z,False,5802c2e66480fd1d6c0a54f6,Could the third item (`retval` boolean) be a premature optimization? It would greatly simplify explanation/interface of `call_atomic` if we did not make results optional. ,True,False,46,212111.16666666666
neovim/neovim/4568,2016-10-16T00:01:47Z,False,580b44906480fddc0e5f73e5,avoiding redraws is a really nice feature,True,False,46,212111.16666666666
neovim/neovim/4568,2016-10-16T05:17:25Z,False,580b44906480fddc0e5f73e6,"Well, we allready allow _invidual_ calls to drop the return value, seems strange to lose this just because one uses multi-request. But to make bookkeeping simpler we could replace them with NIL so array indexing is consistent.",True,False,46,212111.16666666666
neovim/neovim/4568,2016-10-16T05:19:53Z,False,580b44906480fddc0e5f73e7,"My other suggestion also does this, but in either case I would then include the index in the error tuple because explicit is better than implicit.",True,False,46,212111.16666666666
neovim/neovim/4568,2016-10-16T05:43:59Z,False,580313a16480fd2336a076e7,"> (In the tests I have been meaning to rename ""meths"" to ""api"" or something like that)

:+1: I also think we should merge curbufmeths into curbuf so one could `curbuf.set_lines`",True,False,46,212111.16666666666
Moya/Moya/719,2016-10-16T16:40:45Z,False,5803ad976480fd1cdbb44785,Why the `MoyaProvider.ImmediatelyStub` instead of just `.ImmediatelyStub`? And have these not been updated to lowercase enums yet?,True,False,4,77.21666666666667
Moya/Moya/719,2016-10-16T16:42:16Z,False,5803adef6480fd1eec249021,"Hmm, I see these are [class funcs](https://github.com/Moya/Moya/blob/198a23ff3cfcaa7fa34fd8014f33a18f1e180656/Source/Moya.swift#L122-L133). Why the uppercased functions?",True,False,4,77.21666666666667
Moya/Moya/719,2016-10-16T17:23:54Z,False,5803b7b46480fd22406510ed,"Makes sense, can you open an issue to review all our `class func`s? ",True,False,4,77.21666666666667
Moya/Moya/719,2016-10-16T17:57:58Z,False,5803bfb06480fd1cb0e4e217,"## [Current coverage](https://codecov.io/gh/Moya/Moya/pull/719?src=pr) is 86.09% (diff: 97.77%)
> Merging [#719](https://codecov.io/gh/Moya/Moya/pull/719?src=pr) into [master](https://codecov.io/gh/Moya/Moya/branch/master?src=pr) will increase coverage by **0.32%**

```diff
@@             master       #719   diff @@
==========================================
  Files            29         29          
  Lines          2565       2610    +45   
  Methods           0          0          
  Messages          0          0          
  Branches          0          0          
==========================================
+ Hits           2200       2247    +47   
+ Misses          365        363     -2   
  Partials          0          0          
```

> Powered by [Codecov](https://codecov.io?src=pr). Last update [cdafa50...9399ae3](https://codecov.io/gh/Moya/Moya/compare/cdafa50849ee1e659dea2b38449b3f756f35d1ef...9399ae36254b31406589111c33abf160cdc4625e?src=pr)",True,False,4,77.21666666666667
joomla/joomla-cms/12129,2016-10-17T09:27:48Z,False,580499976480fd25f6fc1a5c,Milestone changed to 3.7 as it is now not planned to have a 3.6.4 release,True,False,16,36117.15
neovim/neovim/4568,2016-10-17T09:37:26Z,False,58049bdf6480fd1cc82b864f,"Ok, updated. It is probably simpler to make sure that that all methods where the return value is not essential, will not have a heavy return value, like we did for the `set_var` methods.",True,False,46,212111.16666666666
joomla/joomla-cms/12129,2016-10-17T09:46:56Z,False,58049e186480fd23ead9831a,"ok. so the base branch should be changed too to check for conflicts.
Will change it",True,False,16,36117.15
ManageIQ/manageiq/11691,2016-10-18T17:08:10Z,False,580657016480fd23ead9dea9,"<rubocop />Checked commits https://github.com/mansam/manageiq/compare/8c7467402bdb1e135d7ac6b9b361f2322e7c75e4~...d06bbeb23536930313d5fd5715ea55abe260a048 with ruby 2.2.5, rubocop 0.37.2, and haml-lint 0.16.1
28 files checked, 38 offenses detected

**app/controllers/application_controller/miq_request_methods.rb**
- [ ] :warning: - [Line 1012](https://github.com/mansam/manageiq/blob/d06bbeb23536930313d5fd5715ea55abe260a048/app/controllers/application_controller/miq_request_methods.rb#L1012), Col 11 - [Lint/EndAlignment](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Lint/EndAlignment) - `end` at 1012, 10 is not aligned with `if` at 1008, 19.
- [ ] :exclamation: - [Line 1009](https://github.com/mansam/manageiq/blob/d06bbeb23536930313d5fd5715ea55abe260a048/app/controllers/application_controller/miq_request_methods.rb#L1009), Col 13 - [Style/IndentationWidth](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Style/IndentationWidth) - Use 2 (not -7) spaces for indentation.
- [ ] :exclamation: - [Line 1010](https://github.com/mansam/manageiq/blob/d06bbeb23536930313d5fd5715ea55abe260a048/app/controllers/application_controller/miq_request_methods.rb#L1010), Col 11 - [Style/ElseAlignment](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Style/ElseAlignment) - Align `elsif` with `if`.
- [ ] :exclamation: - [Line 1010](https://github.com/mansam/manageiq/blob/d06bbeb23536930313d5fd5715ea55abe260a048/app/controllers/application_controller/miq_request_methods.rb#L1010), Col 47 - [Style/ExtraSpacing](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Style/ExtraSpacing) - Unnecessary spacing detected.
- [ ] :exclamation: - [Line 4](https://github.com/mansam/manageiq/blob/d06bbeb23536930313d5fd5715ea55abe260a048/app/controllers/application_controller/miq_request_methods.rb#L4), Col 1 - [Style/TrailingWhitespace](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Style/TrailingWhitespace) - Trailing whitespace detected.
- [ ] :exclamation: - [Line 780](https://github.com/mansam/manageiq/blob/d06bbeb23536930313d5fd5715ea55abe260a048/app/controllers/application_controller/miq_request_methods.rb#L780), Col 49 - [Style/ExtraSpacing](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Style/ExtraSpacing) - Unnecessary spacing detected.
- [ ] :grey_exclamation: - [Line 542](https://github.com/mansam/manageiq/blob/d06bbeb23536930313d5fd5715ea55abe260a048/app/controllers/application_controller/miq_request_methods.rb#L542), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [155/120]
- [ ] :grey_exclamation: - [Line 544](https://github.com/mansam/manageiq/blob/d06bbeb23536930313d5fd5715ea55abe260a048/app/controllers/application_controller/miq_request_methods.rb#L544), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [125/120]
- [ ] :grey_exclamation: - [Line 564](https://github.com/mansam/manageiq/blob/d06bbeb23536930313d5fd5715ea55abe260a048/app/controllers/application_controller/miq_request_methods.rb#L564), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [126/120]
- [ ] :grey_exclamation: - [Line 566](https://github.com/mansam/manageiq/blob/d06bbeb23536930313d5fd5715ea55abe260a048/app/controllers/application_controller/miq_request_methods.rb#L566), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [122/120]
- [ ] :grey_exclamation: - [Line 780](https://github.com/mansam/manageiq/blob/d06bbeb23536930313d5fd5715ea55abe260a048/app/controllers/application_controller/miq_request_methods.rb#L780), Col 15 - [Metrics/BlockNesting](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/BlockNesting) - Avoid more than 3 levels of block nesting.
- [ ] :grey_exclamation: - [Line 786](https://github.com/mansam/manageiq/blob/d06bbeb23536930313d5fd5715ea55abe260a048/app/controllers/application_controller/miq_request_methods.rb#L786), Col 15 - [Metrics/BlockNesting](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/BlockNesting) - Avoid more than 3 levels of block nesting.
- [ ] :grey_exclamation: - [Line 870](https://github.com/mansam/manageiq/blob/d06bbeb23536930313d5fd5715ea55abe260a048/app/controllers/application_controller/miq_request_methods.rb#L870), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [125/120]
- [ ] :grey_exclamation: - [Line 945](https://github.com/mansam/manageiq/blob/d06bbeb23536930313d5fd5715ea55abe260a048/app/controllers/application_controller/miq_request_methods.rb#L945), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [129/120]

**app/models/cloud_volume_snapshot.rb**
- [ ] :exclamation: - [Line 18](https://github.com/mansam/manageiq/blob/d06bbeb23536930313d5fd5715ea55abe260a048/app/models/cloud_volume_snapshot.rb#L18), Col 1 - [Style/TrailingWhitespace](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Style/TrailingWhitespace) - Trailing whitespace detected.
- [ ] :exclamation: - [Line 25](https://github.com/mansam/manageiq/blob/d06bbeb23536930313d5fd5715ea55abe260a048/app/models/cloud_volume_snapshot.rb#L25), Col 1 - [Style/EmptyLinesAroundClassBody](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Style/EmptyLinesAroundClassBody) - Extra empty line detected at class body end.

**app/models/miq_provision/options_helper.rb**
- [ ] :exclamation: - [Line 3](https://github.com/mansam/manageiq/blob/d06bbeb23536930313d5fd5715ea55abe260a048/app/models/miq_provision/options_helper.rb#L3), Col 1 - [Style/TrailingWhitespace](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Style/TrailingWhitespace) - Trailing whitespace detected.

**app/models/miq_provision_request.rb**
- [ ] :exclamation: - [Line 11](https://github.com/mansam/manageiq/blob/d06bbeb23536930313d5fd5715ea55abe260a048/app/models/miq_provision_request.rb#L11), Col 23 - [Style/MutableConstant](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Style/MutableConstant) - Freeze mutable objects assigned to constants.
- [ ] :exclamation: - [Line 17](https://github.com/mansam/manageiq/blob/d06bbeb23536930313d5fd5715ea55abe260a048/app/models/miq_provision_request.rb#L17), Col 3 - [Rails/Validation](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Rails/Validation) - Prefer the new style validations `validates :column, presence: value` over `validates_presence_of`.
- [ ] :grey_exclamation: - [Line 142](https://github.com/mansam/manageiq/blob/d06bbeb23536930313d5fd5715ea55abe260a048/app/models/miq_provision_request.rb#L142), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [124/120]
- [ ] :grey_exclamation: - [Line 147](https://github.com/mansam/manageiq/blob/d06bbeb23536930313d5fd5715ea55abe260a048/app/models/miq_provision_request.rb#L147), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [124/120]
- [ ] :grey_exclamation: - [Line 48](https://github.com/mansam/manageiq/blob/d06bbeb23536930313d5fd5715ea55abe260a048/app/models/miq_provision_request.rb#L48), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [132/120]

**app/models/miq_provision_virt_workflow.rb**
- [ ] :exclamation: - [Line 362](https://github.com/mansam/manageiq/blob/d06bbeb23536930313d5fd5715ea55abe260a048/app/models/miq_provision_virt_workflow.rb#L362), Col 5 - [Style/RedundantReturn](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Style/RedundantReturn) - Redundant `return` detected.
- [ ] :exclamation: - [Line 366](https://github.com/mansam/manageiq/blob/d06bbeb23536930313d5fd5715ea55abe260a048/app/models/miq_provision_virt_workflow.rb#L366), Col 5 - [Style/RedundantReturn](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Style/RedundantReturn) - Redundant `return` detected.
- [ ] :exclamation: - [Line 66](https://github.com/mansam/manageiq/blob/d06bbeb23536930313d5fd5715ea55abe260a048/app/models/miq_provision_virt_workflow.rb#L66), Col 9 - [Style/CommentAnnotation](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Style/CommentAnnotation) - Annotation keywords like `FIXME` should be all upper case, followed by a colon, and a space, then a note describing the problem.
- [ ] :grey_exclamation: - [Line 370](https://github.com/mansam/manageiq/blob/d06bbeb23536930313d5fd5715ea55abe260a048/app/models/miq_provision_virt_workflow.rb#L370), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [123/120]

**app/models/miq_provision_workflow.rb**
- [ ] :exclamation: - [Line 19](https://github.com/mansam/manageiq/blob/d06bbeb23536930313d5fd5715ea55abe260a048/app/models/miq_provision_workflow.rb#L19), Col 5 - [Style/CommentAnnotation](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Style/CommentAnnotation) - Annotation keywords like `TODO` should be all upper case, followed by a colon, and a space, then a note describing the problem.
- [ ] :grey_exclamation: - [Line 33](https://github.com/mansam/manageiq/blob/d06bbeb23536930313d5fd5715ea55abe260a048/app/models/miq_provision_workflow.rb#L33), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [130/120]

**app/views/miq_request/_pre_prov.html.haml**
- [ ] :warning: - [Line 11](https://github.com/mansam/manageiq/blob/d06bbeb23536930313d5fd5715ea55abe260a048/app/views/miq_request/_pre_prov.html.haml#L11) - Line is too long. [234/160]
- [ ] :warning: - [Line 17](https://github.com/mansam/manageiq/blob/d06bbeb23536930313d5fd5715ea55abe260a048/app/views/miq_request/_pre_prov.html.haml#L17) - The - symbol should have one space separating it from code
- [ ] :warning: - [Line 6](https://github.com/mansam/manageiq/blob/d06bbeb23536930313d5fd5715ea55abe260a048/app/views/miq_request/_pre_prov.html.haml#L6) - Space inside parentheses detected.
- [ ] :warning: - [Line 7](https://github.com/mansam/manageiq/blob/d06bbeb23536930313d5fd5715ea55abe260a048/app/views/miq_request/_pre_prov.html.haml#L7) - Line is too long. [225/160]
- [ ] :warning: - [Line 9](https://github.com/mansam/manageiq/blob/d06bbeb23536930313d5fd5715ea55abe260a048/app/views/miq_request/_pre_prov.html.haml#L9) - Line is too long. [228/160]

**app/views/miq_request/_prov_vm_grid.html.haml**
- [ ] :warning: - [Line 2](https://github.com/mansam/manageiq/blob/d06bbeb23536930313d5fd5715ea55abe260a048/app/views/miq_request/_prov_vm_grid.html.haml#L2) - Use `-#` for comments instead of `- #`

**app/views/miq_request/_prov_volume_grid.html.haml**
- [ ] :warning: - [Line 21](https://github.com/mansam/manageiq/blob/d06bbeb23536930313d5fd5715ea55abe260a048/app/views/miq_request/_prov_volume_grid.html.haml#L21) - Avoid more than 3 levels of block nesting.
- [ ] :warning: - [Line 2](https://github.com/mansam/manageiq/blob/d06bbeb23536930313d5fd5715ea55abe260a048/app/views/miq_request/_prov_volume_grid.html.haml#L2) - Use `-#` for comments instead of `- #`

**app/views/miq_request/_prov_volume_snapshot_grid.html.haml**
- [ ] :warning: - [Line 21](https://github.com/mansam/manageiq/blob/d06bbeb23536930313d5fd5715ea55abe260a048/app/views/miq_request/_prov_volume_snapshot_grid.html.haml#L21) - Avoid more than 3 levels of block nesting.
- [ ] :warning: - [Line 2](https://github.com/mansam/manageiq/blob/d06bbeb23536930313d5fd5715ea55abe260a048/app/views/miq_request/_prov_volume_snapshot_grid.html.haml#L2) - Use `-#` for comments instead of `- #`
",True,False,72,539068.1666666666
ManageIQ/manageiq/11691,2016-10-18T17:12:08Z,False,580657f16480fd1d4334bb25,"<rubocop />Checked commits https://github.com/mansam/manageiq/compare/8c7467402bdb1e135d7ac6b9b361f2322e7c75e4~...825a05e8d087b1ff14a1fbccc9cdd786c83df12c with ruby 2.2.5, rubocop 0.37.2, and haml-lint 0.16.1
28 files checked, 33 offenses detected

**app/controllers/application_controller/miq_request_methods.rb**
- [ ] :warning: - [Line 1012](https://github.com/mansam/manageiq/blob/825a05e8d087b1ff14a1fbccc9cdd786c83df12c/app/controllers/application_controller/miq_request_methods.rb#L1012), Col 11 - [Lint/EndAlignment](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Lint/EndAlignment) - `end` at 1012, 10 is not aligned with `if` at 1008, 19.
- [ ] :exclamation: - [Line 1009](https://github.com/mansam/manageiq/blob/825a05e8d087b1ff14a1fbccc9cdd786c83df12c/app/controllers/application_controller/miq_request_methods.rb#L1009), Col 13 - [Style/IndentationWidth](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Style/IndentationWidth) - Use 2 (not -7) spaces for indentation.
- [ ] :exclamation: - [Line 1010](https://github.com/mansam/manageiq/blob/825a05e8d087b1ff14a1fbccc9cdd786c83df12c/app/controllers/application_controller/miq_request_methods.rb#L1010), Col 11 - [Style/ElseAlignment](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Style/ElseAlignment) - Align `elsif` with `if`.
- [ ] :exclamation: - [Line 1010](https://github.com/mansam/manageiq/blob/825a05e8d087b1ff14a1fbccc9cdd786c83df12c/app/controllers/application_controller/miq_request_methods.rb#L1010), Col 47 - [Style/ExtraSpacing](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Style/ExtraSpacing) - Unnecessary spacing detected.
- [ ] :exclamation: - [Line 4](https://github.com/mansam/manageiq/blob/825a05e8d087b1ff14a1fbccc9cdd786c83df12c/app/controllers/application_controller/miq_request_methods.rb#L4), Col 1 - [Style/TrailingWhitespace](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Style/TrailingWhitespace) - Trailing whitespace detected.
- [ ] :exclamation: - [Line 780](https://github.com/mansam/manageiq/blob/825a05e8d087b1ff14a1fbccc9cdd786c83df12c/app/controllers/application_controller/miq_request_methods.rb#L780), Col 49 - [Style/ExtraSpacing](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Style/ExtraSpacing) - Unnecessary spacing detected.
- [ ] :grey_exclamation: - [Line 542](https://github.com/mansam/manageiq/blob/825a05e8d087b1ff14a1fbccc9cdd786c83df12c/app/controllers/application_controller/miq_request_methods.rb#L542), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [155/120]
- [ ] :grey_exclamation: - [Line 544](https://github.com/mansam/manageiq/blob/825a05e8d087b1ff14a1fbccc9cdd786c83df12c/app/controllers/application_controller/miq_request_methods.rb#L544), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [125/120]
- [ ] :grey_exclamation: - [Line 564](https://github.com/mansam/manageiq/blob/825a05e8d087b1ff14a1fbccc9cdd786c83df12c/app/controllers/application_controller/miq_request_methods.rb#L564), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [126/120]
- [ ] :grey_exclamation: - [Line 566](https://github.com/mansam/manageiq/blob/825a05e8d087b1ff14a1fbccc9cdd786c83df12c/app/controllers/application_controller/miq_request_methods.rb#L566), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [122/120]
- [ ] :grey_exclamation: - [Line 780](https://github.com/mansam/manageiq/blob/825a05e8d087b1ff14a1fbccc9cdd786c83df12c/app/controllers/application_controller/miq_request_methods.rb#L780), Col 15 - [Metrics/BlockNesting](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/BlockNesting) - Avoid more than 3 levels of block nesting.
- [ ] :grey_exclamation: - [Line 786](https://github.com/mansam/manageiq/blob/825a05e8d087b1ff14a1fbccc9cdd786c83df12c/app/controllers/application_controller/miq_request_methods.rb#L786), Col 15 - [Metrics/BlockNesting](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/BlockNesting) - Avoid more than 3 levels of block nesting.
- [ ] :grey_exclamation: - [Line 870](https://github.com/mansam/manageiq/blob/825a05e8d087b1ff14a1fbccc9cdd786c83df12c/app/controllers/application_controller/miq_request_methods.rb#L870), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [125/120]
- [ ] :grey_exclamation: - [Line 945](https://github.com/mansam/manageiq/blob/825a05e8d087b1ff14a1fbccc9cdd786c83df12c/app/controllers/application_controller/miq_request_methods.rb#L945), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [129/120]

**app/models/cloud_volume_snapshot.rb**
- [ ] :exclamation: - [Line 18](https://github.com/mansam/manageiq/blob/825a05e8d087b1ff14a1fbccc9cdd786c83df12c/app/models/cloud_volume_snapshot.rb#L18), Col 1 - [Style/TrailingWhitespace](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Style/TrailingWhitespace) - Trailing whitespace detected.
- [ ] :exclamation: - [Line 25](https://github.com/mansam/manageiq/blob/825a05e8d087b1ff14a1fbccc9cdd786c83df12c/app/models/cloud_volume_snapshot.rb#L25), Col 1 - [Style/EmptyLinesAroundClassBody](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Style/EmptyLinesAroundClassBody) - Extra empty line detected at class body end.

**app/models/miq_provision/options_helper.rb**
- [ ] :exclamation: - [Line 3](https://github.com/mansam/manageiq/blob/825a05e8d087b1ff14a1fbccc9cdd786c83df12c/app/models/miq_provision/options_helper.rb#L3), Col 1 - [Style/TrailingWhitespace](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Style/TrailingWhitespace) - Trailing whitespace detected.

**app/models/miq_provision_request.rb**
- [ ] :exclamation: - [Line 11](https://github.com/mansam/manageiq/blob/825a05e8d087b1ff14a1fbccc9cdd786c83df12c/app/models/miq_provision_request.rb#L11), Col 23 - [Style/MutableConstant](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Style/MutableConstant) - Freeze mutable objects assigned to constants.
- [ ] :exclamation: - [Line 17](https://github.com/mansam/manageiq/blob/825a05e8d087b1ff14a1fbccc9cdd786c83df12c/app/models/miq_provision_request.rb#L17), Col 3 - [Rails/Validation](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Rails/Validation) - Prefer the new style validations `validates :column, presence: value` over `validates_presence_of`.
- [ ] :grey_exclamation: - [Line 142](https://github.com/mansam/manageiq/blob/825a05e8d087b1ff14a1fbccc9cdd786c83df12c/app/models/miq_provision_request.rb#L142), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [124/120]
- [ ] :grey_exclamation: - [Line 147](https://github.com/mansam/manageiq/blob/825a05e8d087b1ff14a1fbccc9cdd786c83df12c/app/models/miq_provision_request.rb#L147), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [124/120]
- [ ] :grey_exclamation: - [Line 48](https://github.com/mansam/manageiq/blob/825a05e8d087b1ff14a1fbccc9cdd786c83df12c/app/models/miq_provision_request.rb#L48), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [132/120]

**app/models/miq_provision_virt_workflow.rb**
- [ ] :exclamation: - [Line 360](https://github.com/mansam/manageiq/blob/825a05e8d087b1ff14a1fbccc9cdd786c83df12c/app/models/miq_provision_virt_workflow.rb#L360), Col 5 - [Style/RedundantReturn](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Style/RedundantReturn) - Redundant `return` detected.
- [ ] :exclamation: - [Line 364](https://github.com/mansam/manageiq/blob/825a05e8d087b1ff14a1fbccc9cdd786c83df12c/app/models/miq_provision_virt_workflow.rb#L364), Col 5 - [Style/RedundantReturn](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Style/RedundantReturn) - Redundant `return` detected.
- [ ] :grey_exclamation: - [Line 368](https://github.com/mansam/manageiq/blob/825a05e8d087b1ff14a1fbccc9cdd786c83df12c/app/models/miq_provision_virt_workflow.rb#L368), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [123/120]

**app/models/miq_provision_workflow.rb**
- [ ] :grey_exclamation: - [Line 31](https://github.com/mansam/manageiq/blob/825a05e8d087b1ff14a1fbccc9cdd786c83df12c/app/models/miq_provision_workflow.rb#L31), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [130/120]

**app/views/miq_request/_pre_prov.html.haml**
- [ ] :warning: - [Line 11](https://github.com/mansam/manageiq/blob/825a05e8d087b1ff14a1fbccc9cdd786c83df12c/app/views/miq_request/_pre_prov.html.haml#L11) - Line is too long. [234/160]
- [ ] :warning: - [Line 17](https://github.com/mansam/manageiq/blob/825a05e8d087b1ff14a1fbccc9cdd786c83df12c/app/views/miq_request/_pre_prov.html.haml#L17) - The - symbol should have one space separating it from code
- [ ] :warning: - [Line 6](https://github.com/mansam/manageiq/blob/825a05e8d087b1ff14a1fbccc9cdd786c83df12c/app/views/miq_request/_pre_prov.html.haml#L6) - Space inside parentheses detected.
- [ ] :warning: - [Line 7](https://github.com/mansam/manageiq/blob/825a05e8d087b1ff14a1fbccc9cdd786c83df12c/app/views/miq_request/_pre_prov.html.haml#L7) - Line is too long. [225/160]
- [ ] :warning: - [Line 9](https://github.com/mansam/manageiq/blob/825a05e8d087b1ff14a1fbccc9cdd786c83df12c/app/views/miq_request/_pre_prov.html.haml#L9) - Line is too long. [228/160]

**app/views/miq_request/_prov_volume_grid.html.haml**
- [ ] :warning: - [Line 20](https://github.com/mansam/manageiq/blob/825a05e8d087b1ff14a1fbccc9cdd786c83df12c/app/views/miq_request/_prov_volume_grid.html.haml#L20) - Avoid more than 3 levels of block nesting.

**app/views/miq_request/_prov_volume_snapshot_grid.html.haml**
- [ ] :warning: - [Line 20](https://github.com/mansam/manageiq/blob/825a05e8d087b1ff14a1fbccc9cdd786c83df12c/app/views/miq_request/_prov_volume_snapshot_grid.html.haml#L20) - Avoid more than 3 levels of block nesting.
",True,False,72,539068.1666666666
ManageIQ/manageiq/11691,2016-10-18T17:47:13Z,False,580660276480fd230b592aa8,"<rubocop />Checked commits https://github.com/mansam/manageiq/compare/8c7467402bdb1e135d7ac6b9b361f2322e7c75e4~...7823c73770f44d79c1b0aa2086006826850f8578 with ruby 2.2.5, rubocop 0.37.2, and haml-lint 0.16.1
28 files checked, 22 offenses detected

**app/controllers/application_controller/miq_request_methods.rb**
- [ ] :exclamation: - [Line 1011](https://github.com/mansam/manageiq/blob/7823c73770f44d79c1b0aa2086006826850f8578/app/controllers/application_controller/miq_request_methods.rb#L1011), Col 47 - [Style/ExtraSpacing](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Style/ExtraSpacing) - Unnecessary spacing detected.
- [ ] :exclamation: - [Line 780](https://github.com/mansam/manageiq/blob/7823c73770f44d79c1b0aa2086006826850f8578/app/controllers/application_controller/miq_request_methods.rb#L780), Col 49 - [Style/ExtraSpacing](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Style/ExtraSpacing) - Unnecessary spacing detected.
- [ ] :grey_exclamation: - [Line 542](https://github.com/mansam/manageiq/blob/7823c73770f44d79c1b0aa2086006826850f8578/app/controllers/application_controller/miq_request_methods.rb#L542), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [155/120]
- [ ] :grey_exclamation: - [Line 544](https://github.com/mansam/manageiq/blob/7823c73770f44d79c1b0aa2086006826850f8578/app/controllers/application_controller/miq_request_methods.rb#L544), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [125/120]
- [ ] :grey_exclamation: - [Line 564](https://github.com/mansam/manageiq/blob/7823c73770f44d79c1b0aa2086006826850f8578/app/controllers/application_controller/miq_request_methods.rb#L564), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [126/120]
- [ ] :grey_exclamation: - [Line 566](https://github.com/mansam/manageiq/blob/7823c73770f44d79c1b0aa2086006826850f8578/app/controllers/application_controller/miq_request_methods.rb#L566), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [122/120]
- [ ] :grey_exclamation: - [Line 780](https://github.com/mansam/manageiq/blob/7823c73770f44d79c1b0aa2086006826850f8578/app/controllers/application_controller/miq_request_methods.rb#L780), Col 15 - [Metrics/BlockNesting](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/BlockNesting) - Avoid more than 3 levels of block nesting.
- [ ] :grey_exclamation: - [Line 786](https://github.com/mansam/manageiq/blob/7823c73770f44d79c1b0aa2086006826850f8578/app/controllers/application_controller/miq_request_methods.rb#L786), Col 15 - [Metrics/BlockNesting](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/BlockNesting) - Avoid more than 3 levels of block nesting.
- [ ] :grey_exclamation: - [Line 870](https://github.com/mansam/manageiq/blob/7823c73770f44d79c1b0aa2086006826850f8578/app/controllers/application_controller/miq_request_methods.rb#L870), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [125/120]
- [ ] :grey_exclamation: - [Line 945](https://github.com/mansam/manageiq/blob/7823c73770f44d79c1b0aa2086006826850f8578/app/controllers/application_controller/miq_request_methods.rb#L945), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [129/120]

**app/models/miq_provision/options_helper.rb**
- [ ] :exclamation: - [Line 3](https://github.com/mansam/manageiq/blob/7823c73770f44d79c1b0aa2086006826850f8578/app/models/miq_provision/options_helper.rb#L3), Col 1 - [Style/TrailingWhitespace](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Style/TrailingWhitespace) - Trailing whitespace detected.

**app/models/miq_provision_request.rb**
- [ ] :exclamation: - [Line 11](https://github.com/mansam/manageiq/blob/7823c73770f44d79c1b0aa2086006826850f8578/app/models/miq_provision_request.rb#L11), Col 23 - [Style/MutableConstant](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Style/MutableConstant) - Freeze mutable objects assigned to constants.
- [ ] :exclamation: - [Line 17](https://github.com/mansam/manageiq/blob/7823c73770f44d79c1b0aa2086006826850f8578/app/models/miq_provision_request.rb#L17), Col 3 - [Rails/Validation](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Rails/Validation) - Prefer the new style validations `validates :column, presence: value` over `validates_presence_of`.
- [ ] :grey_exclamation: - [Line 142](https://github.com/mansam/manageiq/blob/7823c73770f44d79c1b0aa2086006826850f8578/app/models/miq_provision_request.rb#L142), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [124/120]
- [ ] :grey_exclamation: - [Line 147](https://github.com/mansam/manageiq/blob/7823c73770f44d79c1b0aa2086006826850f8578/app/models/miq_provision_request.rb#L147), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [124/120]
- [ ] :grey_exclamation: - [Line 48](https://github.com/mansam/manageiq/blob/7823c73770f44d79c1b0aa2086006826850f8578/app/models/miq_provision_request.rb#L48), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [132/120]

**app/models/miq_provision_workflow.rb**
- [ ] :grey_exclamation: - [Line 31](https://github.com/mansam/manageiq/blob/7823c73770f44d79c1b0aa2086006826850f8578/app/models/miq_provision_workflow.rb#L31), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [130/120]

**app/views/miq_request/_pre_prov.html.haml**
- [ ] :warning: - [Line 11](https://github.com/mansam/manageiq/blob/7823c73770f44d79c1b0aa2086006826850f8578/app/views/miq_request/_pre_prov.html.haml#L11) - Line is too long. [234/160]
- [ ] :warning: - [Line 7](https://github.com/mansam/manageiq/blob/7823c73770f44d79c1b0aa2086006826850f8578/app/views/miq_request/_pre_prov.html.haml#L7) - Line is too long. [225/160]
- [ ] :warning: - [Line 9](https://github.com/mansam/manageiq/blob/7823c73770f44d79c1b0aa2086006826850f8578/app/views/miq_request/_pre_prov.html.haml#L9) - Line is too long. [228/160]

**app/views/miq_request/_prov_volume_grid.html.haml**
- [ ] :warning: - [Line 20](https://github.com/mansam/manageiq/blob/7823c73770f44d79c1b0aa2086006826850f8578/app/views/miq_request/_prov_volume_grid.html.haml#L20) - Avoid more than 3 levels of block nesting.

**app/views/miq_request/_prov_volume_snapshot_grid.html.haml**
- [ ] :warning: - [Line 20](https://github.com/mansam/manageiq/blob/7823c73770f44d79c1b0aa2086006826850f8578/app/views/miq_request/_prov_volume_snapshot_grid.html.haml#L20) - Avoid more than 3 levels of block nesting.
",True,False,72,539068.1666666666
ManageIQ/manageiq/11691,2016-10-18T17:52:12Z,False,580661566480fd25f6fcba36,"<rubocop />Checked commits https://github.com/mansam/manageiq/compare/8c7467402bdb1e135d7ac6b9b361f2322e7c75e4~...b4a6937285ea8ac6aa528237a8b6997bf8c14a65 with ruby 2.2.5, rubocop 0.37.2, and haml-lint 0.16.1
28 files checked, 20 offenses detected

**app/controllers/application_controller/miq_request_methods.rb**
- [ ] :exclamation: - [Line 1011](https://github.com/mansam/manageiq/blob/b4a6937285ea8ac6aa528237a8b6997bf8c14a65/app/controllers/application_controller/miq_request_methods.rb#L1011), Col 47 - [Style/ExtraSpacing](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Style/ExtraSpacing) - Unnecessary spacing detected.
- [ ] :exclamation: - [Line 780](https://github.com/mansam/manageiq/blob/b4a6937285ea8ac6aa528237a8b6997bf8c14a65/app/controllers/application_controller/miq_request_methods.rb#L780), Col 49 - [Style/ExtraSpacing](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Style/ExtraSpacing) - Unnecessary spacing detected.
- [ ] :grey_exclamation: - [Line 542](https://github.com/mansam/manageiq/blob/b4a6937285ea8ac6aa528237a8b6997bf8c14a65/app/controllers/application_controller/miq_request_methods.rb#L542), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [155/120]
- [ ] :grey_exclamation: - [Line 544](https://github.com/mansam/manageiq/blob/b4a6937285ea8ac6aa528237a8b6997bf8c14a65/app/controllers/application_controller/miq_request_methods.rb#L544), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [125/120]
- [ ] :grey_exclamation: - [Line 564](https://github.com/mansam/manageiq/blob/b4a6937285ea8ac6aa528237a8b6997bf8c14a65/app/controllers/application_controller/miq_request_methods.rb#L564), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [126/120]
- [ ] :grey_exclamation: - [Line 566](https://github.com/mansam/manageiq/blob/b4a6937285ea8ac6aa528237a8b6997bf8c14a65/app/controllers/application_controller/miq_request_methods.rb#L566), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [122/120]
- [ ] :grey_exclamation: - [Line 780](https://github.com/mansam/manageiq/blob/b4a6937285ea8ac6aa528237a8b6997bf8c14a65/app/controllers/application_controller/miq_request_methods.rb#L780), Col 15 - [Metrics/BlockNesting](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/BlockNesting) - Avoid more than 3 levels of block nesting.
- [ ] :grey_exclamation: - [Line 786](https://github.com/mansam/manageiq/blob/b4a6937285ea8ac6aa528237a8b6997bf8c14a65/app/controllers/application_controller/miq_request_methods.rb#L786), Col 15 - [Metrics/BlockNesting](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/BlockNesting) - Avoid more than 3 levels of block nesting.
- [ ] :grey_exclamation: - [Line 870](https://github.com/mansam/manageiq/blob/b4a6937285ea8ac6aa528237a8b6997bf8c14a65/app/controllers/application_controller/miq_request_methods.rb#L870), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [125/120]
- [ ] :grey_exclamation: - [Line 945](https://github.com/mansam/manageiq/blob/b4a6937285ea8ac6aa528237a8b6997bf8c14a65/app/controllers/application_controller/miq_request_methods.rb#L945), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [129/120]

**app/models/miq_provision_request.rb**
- [ ] :exclamation: - [Line 17](https://github.com/mansam/manageiq/blob/b4a6937285ea8ac6aa528237a8b6997bf8c14a65/app/models/miq_provision_request.rb#L17), Col 3 - [Rails/Validation](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Rails/Validation) - Prefer the new style validations `validates :column, presence: value` over `validates_presence_of`.
- [ ] :grey_exclamation: - [Line 142](https://github.com/mansam/manageiq/blob/b4a6937285ea8ac6aa528237a8b6997bf8c14a65/app/models/miq_provision_request.rb#L142), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [124/120]
- [ ] :grey_exclamation: - [Line 147](https://github.com/mansam/manageiq/blob/b4a6937285ea8ac6aa528237a8b6997bf8c14a65/app/models/miq_provision_request.rb#L147), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [124/120]
- [ ] :grey_exclamation: - [Line 48](https://github.com/mansam/manageiq/blob/b4a6937285ea8ac6aa528237a8b6997bf8c14a65/app/models/miq_provision_request.rb#L48), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [132/120]

**app/models/miq_provision_workflow.rb**
- [ ] :grey_exclamation: - [Line 31](https://github.com/mansam/manageiq/blob/b4a6937285ea8ac6aa528237a8b6997bf8c14a65/app/models/miq_provision_workflow.rb#L31), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [130/120]

**app/views/miq_request/_pre_prov.html.haml**
- [ ] :warning: - [Line 11](https://github.com/mansam/manageiq/blob/b4a6937285ea8ac6aa528237a8b6997bf8c14a65/app/views/miq_request/_pre_prov.html.haml#L11) - Line is too long. [234/160]
- [ ] :warning: - [Line 7](https://github.com/mansam/manageiq/blob/b4a6937285ea8ac6aa528237a8b6997bf8c14a65/app/views/miq_request/_pre_prov.html.haml#L7) - Line is too long. [225/160]
- [ ] :warning: - [Line 9](https://github.com/mansam/manageiq/blob/b4a6937285ea8ac6aa528237a8b6997bf8c14a65/app/views/miq_request/_pre_prov.html.haml#L9) - Line is too long. [228/160]

**app/views/miq_request/_prov_volume_grid.html.haml**
- [ ] :warning: - [Line 20](https://github.com/mansam/manageiq/blob/b4a6937285ea8ac6aa528237a8b6997bf8c14a65/app/views/miq_request/_prov_volume_grid.html.haml#L20) - Avoid more than 3 levels of block nesting.

**app/views/miq_request/_prov_volume_snapshot_grid.html.haml**
- [ ] :warning: - [Line 20](https://github.com/mansam/manageiq/blob/b4a6937285ea8ac6aa528237a8b6997bf8c14a65/app/views/miq_request/_prov_volume_snapshot_grid.html.haml#L20) - Avoid more than 3 levels of block nesting.
",True,False,72,539068.1666666666
ManageIQ/manageiq/11691,2016-10-18T21:32:25Z,False,580694f36480fd26b8672fc1,"<rubocop />Checked commits https://github.com/mansam/manageiq/compare/8c7467402bdb1e135d7ac6b9b361f2322e7c75e4~...113e4c4c3b299c9520d2671764b184b14e6fe483 with ruby 2.2.5, rubocop 0.37.2, and haml-lint 0.16.1
29 files checked, 20 offenses detected

**app/controllers/application_controller/miq_request_methods.rb**
- [ ] :exclamation: - [Line 1011](https://github.com/mansam/manageiq/blob/113e4c4c3b299c9520d2671764b184b14e6fe483/app/controllers/application_controller/miq_request_methods.rb#L1011), Col 47 - [Style/ExtraSpacing](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Style/ExtraSpacing) - Unnecessary spacing detected.
- [ ] :exclamation: - [Line 780](https://github.com/mansam/manageiq/blob/113e4c4c3b299c9520d2671764b184b14e6fe483/app/controllers/application_controller/miq_request_methods.rb#L780), Col 49 - [Style/ExtraSpacing](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Style/ExtraSpacing) - Unnecessary spacing detected.
- [ ] :grey_exclamation: - [Line 160](https://github.com/mansam/manageiq/blob/113e4c4c3b299c9520d2671764b184b14e6fe483/app/controllers/application_controller/miq_request_methods.rb#L160), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [126/120]
- [ ] :grey_exclamation: - [Line 542](https://github.com/mansam/manageiq/blob/113e4c4c3b299c9520d2671764b184b14e6fe483/app/controllers/application_controller/miq_request_methods.rb#L542), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [155/120]
- [ ] :grey_exclamation: - [Line 544](https://github.com/mansam/manageiq/blob/113e4c4c3b299c9520d2671764b184b14e6fe483/app/controllers/application_controller/miq_request_methods.rb#L544), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [125/120]
- [ ] :grey_exclamation: - [Line 564](https://github.com/mansam/manageiq/blob/113e4c4c3b299c9520d2671764b184b14e6fe483/app/controllers/application_controller/miq_request_methods.rb#L564), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [126/120]
- [ ] :grey_exclamation: - [Line 566](https://github.com/mansam/manageiq/blob/113e4c4c3b299c9520d2671764b184b14e6fe483/app/controllers/application_controller/miq_request_methods.rb#L566), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [122/120]
- [ ] :grey_exclamation: - [Line 780](https://github.com/mansam/manageiq/blob/113e4c4c3b299c9520d2671764b184b14e6fe483/app/controllers/application_controller/miq_request_methods.rb#L780), Col 15 - [Metrics/BlockNesting](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/BlockNesting) - Avoid more than 3 levels of block nesting.
- [ ] :grey_exclamation: - [Line 786](https://github.com/mansam/manageiq/blob/113e4c4c3b299c9520d2671764b184b14e6fe483/app/controllers/application_controller/miq_request_methods.rb#L786), Col 15 - [Metrics/BlockNesting](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/BlockNesting) - Avoid more than 3 levels of block nesting.
- [ ] :grey_exclamation: - [Line 870](https://github.com/mansam/manageiq/blob/113e4c4c3b299c9520d2671764b184b14e6fe483/app/controllers/application_controller/miq_request_methods.rb#L870), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [125/120]
- [ ] :grey_exclamation: - [Line 945](https://github.com/mansam/manageiq/blob/113e4c4c3b299c9520d2671764b184b14e6fe483/app/controllers/application_controller/miq_request_methods.rb#L945), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [129/120]

**app/models/miq_provision_request.rb**
- [ ] :exclamation: - [Line 17](https://github.com/mansam/manageiq/blob/113e4c4c3b299c9520d2671764b184b14e6fe483/app/models/miq_provision_request.rb#L17), Col 3 - [Rails/Validation](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Rails/Validation) - Prefer the new style validations `validates :column, presence: value` over `validates_presence_of`.
- [ ] :grey_exclamation: - [Line 142](https://github.com/mansam/manageiq/blob/113e4c4c3b299c9520d2671764b184b14e6fe483/app/models/miq_provision_request.rb#L142), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [124/120]
- [ ] :grey_exclamation: - [Line 147](https://github.com/mansam/manageiq/blob/113e4c4c3b299c9520d2671764b184b14e6fe483/app/models/miq_provision_request.rb#L147), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [124/120]
- [ ] :grey_exclamation: - [Line 48](https://github.com/mansam/manageiq/blob/113e4c4c3b299c9520d2671764b184b14e6fe483/app/models/miq_provision_request.rb#L48), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [132/120]

**app/views/miq_request/_pre_prov.html.haml**
- [ ] :warning: - [Line 11](https://github.com/mansam/manageiq/blob/113e4c4c3b299c9520d2671764b184b14e6fe483/app/views/miq_request/_pre_prov.html.haml#L11) - Line is too long. [234/160]
- [ ] :warning: - [Line 7](https://github.com/mansam/manageiq/blob/113e4c4c3b299c9520d2671764b184b14e6fe483/app/views/miq_request/_pre_prov.html.haml#L7) - Line is too long. [225/160]
- [ ] :warning: - [Line 9](https://github.com/mansam/manageiq/blob/113e4c4c3b299c9520d2671764b184b14e6fe483/app/views/miq_request/_pre_prov.html.haml#L9) - Line is too long. [228/160]

**app/views/miq_request/_prov_volume_grid.html.haml**
- [ ] :warning: - [Line 20](https://github.com/mansam/manageiq/blob/113e4c4c3b299c9520d2671764b184b14e6fe483/app/views/miq_request/_prov_volume_grid.html.haml#L20) - Avoid more than 3 levels of block nesting.

**app/views/miq_request/_prov_volume_snapshot_grid.html.haml**
- [ ] :warning: - [Line 20](https://github.com/mansam/manageiq/blob/113e4c4c3b299c9520d2671764b184b14e6fe483/app/views/miq_request/_prov_volume_snapshot_grid.html.haml#L20) - Avoid more than 3 levels of block nesting.
",True,False,72,539068.1666666666
PrairieLearn/PrairieLearn/408,2016-10-19T13:17:31Z,False,5807832e6480fddc8d89ad1d,Use https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach,True,False,31,35608.71666666667
PrairieLearn/PrairieLearn/408,2016-10-19T13:18:15Z,False,5807832e6480fddc8d89ad1e,use `} else {` (no linebreak),True,False,31,35608.71666666667
PrairieLearn/PrairieLearn/408,2016-10-19T13:19:55Z,False,5807832e6480fddc8d89ad1f,I feel like having different panelTypes introduces too much visual noise in the display. I suggest sticking with just a single panelType (maybe `panel-info`?) and indicating correctness just with the label.,True,False,31,35608.71666666667
PrairieLearn/PrairieLearn/408,2016-10-19T13:21:17Z,False,5807832e6480fddc8d89ad20,Can we also add submission time here? Use the SQL functions `sprocs/format_date_*.sql` to format.,True,False,31,35608.71666666667
PrairieLearn/PrairieLearn/408,2016-10-19T13:22:38Z,False,5807832e6480fddc8d89ad21,We shouldn't know anything about the internal structure of questions inside this file. Instead just unconditionally get all the past submission data and hand it off to the question renderer.,True,False,31,35608.71666666667
ManageIQ/manageiq/11691,2016-10-19T17:16:40Z,False,5807c8906480fddce3cc11d9,<pr_mergeability_checker />This pull request is not mergeable.  Please rebase and repush.,True,False,72,539068.1666666666
PrairieLearn/PrairieLearn/408,2016-10-19T18:07:39Z,False,5828b13e6480fd0b58238bb2,I've made this change in 	8726ede,True,False,31,35608.71666666667
PrairieLearn/PrairieLearn/408,2016-10-19T18:11:15Z,False,5807c0916480fde2bba77e6d,"The showAllSubmissions flag will now be true if a submission exists; for problems which lack submission.html,, this will result in a list of submission panel-headers with no bodies, describing the submissions in order but not displaying them. Is this the behavior we want?",True,False,31,35608.71666666667
PrairieLearn/PrairieLearn/408,2016-10-19T18:18:04Z,False,5828b13e6480fd0b58238bb3,I've made this change in 	d11c0ac,True,False,31,35608.71666666667
PrairieLearn/PrairieLearn/408,2016-10-19T18:18:10Z,False,5807b8e86480fddc4a4e7f47,I've made this change in 	d11c0ac,True,False,31,35608.71666666667
PrairieLearn/PrairieLearn/408,2016-10-19T18:18:38Z,False,5828b13f6480fd0b58238bb4,"I've changed all the panels to ""panel-info"" in d11c0ac",True,False,31,35608.71666666667
PrairieLearn/PrairieLearn/408,2016-10-19T18:51:02Z,False,5807c19e6480fde2bba77f1b,Can just be `res.locals.allSubmissions = result.rows`,True,False,31,35608.71666666667
PrairieLearn/PrairieLearn/408,2016-10-19T18:53:51Z,False,5807c1c26480fde37fb9178e,No need for the final `allSubmissions` argument to the `function()`. Also don't leave a space after `function`.,True,False,31,35608.71666666667
PrairieLearn/PrairieLearn/408,2016-10-19T18:54:17Z,False,5807c1856480fddd0c9c8552,Add submission timestamp?,True,False,31,35608.71666666667
PrairieLearn/PrairieLearn/408,2016-10-19T18:59:14Z,False,5807c2c76480fddd47cf607a,"I think it's fine to display the fact that there were submissions even though we can't display the submission itself. Otherwise it would be confusing that some questions would appear to not have submissions and others would have them, which might lead people to think that the invisible submissions were not actually saved.

However, I think we should modify the question code (for `Calculation` questions now, at least) to render `Submission not shown` or similar for questions that don't have a `submission.html`.",True,False,31,35608.71666666667
PrairieLearn/PrairieLearn/408,2016-10-19T19:13:45Z,False,5807c5f56480fddc77704837,Added this in 	06330a8,True,False,31,35608.71666666667
PrairieLearn/PrairieLearn/408,2016-10-19T19:14:05Z,False,5807c6056480fddc4a4e83ae,Fixed in 	92a812d,True,False,31,35608.71666666667
PrairieLearn/PrairieLearn/408,2016-10-19T19:14:34Z,False,5807c61d6480fddce3cc0b74,Fixed in 	06330a8,True,False,31,35608.71666666667
PrairieLearn/PrairieLearn/408,2016-10-19T19:14:46Z,False,5807c62a6480fde229b17f32,Added in 	06330a8,True,False,31,35608.71666666667
PrairieLearn/PrairieLearn/408,2016-10-19T19:16:26Z,False,5828b13f6480fd0b58238bb5,"I added ""Submission not shown"" as the default template (used if no submission.html is passed to SimpleClient) in ca69ae5",True,False,31,35608.71666666667
PrairieLearn/PrairieLearn/408,2016-10-19T19:20:17Z,False,5807c7846480fddc381867a7,"Also change this to `Saved answer`? Are there other places we that the student will see the word ""submission""?",True,False,31,35608.71666666667
PrairieLearn/PrairieLearn/408,2016-10-19T19:22:01Z,False,5807c7e56480fde2bba788da,Fixed in 61dd42f,True,False,31,35608.71666666667
ManageIQ/manageiq/11691,2016-10-19T19:57:38Z,False,5807d6966480fddc8d89e93b,"<rubocop />Checked commits https://github.com/mansam/manageiq/compare/62cbc225230ee197a32efeb77e3ff24797596c8e~...c75ef13d6e884cb1b0d3e39f266494be4348746a with ruby 2.2.5, rubocop 0.37.2, and haml-lint 0.16.1
29 files checked, 21 offenses detected

**app/controllers/application_controller/miq_request_methods.rb**
- [ ] :exclamation: - [Line 1011](https://github.com/mansam/manageiq/blob/c75ef13d6e884cb1b0d3e39f266494be4348746a/app/controllers/application_controller/miq_request_methods.rb#L1011), Col 47 - [Style/ExtraSpacing](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Style/ExtraSpacing) - Unnecessary spacing detected.
- [ ] :exclamation: - [Line 780](https://github.com/mansam/manageiq/blob/c75ef13d6e884cb1b0d3e39f266494be4348746a/app/controllers/application_controller/miq_request_methods.rb#L780), Col 49 - [Style/ExtraSpacing](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Style/ExtraSpacing) - Unnecessary spacing detected.
- [ ] :grey_exclamation: - [Line 160](https://github.com/mansam/manageiq/blob/c75ef13d6e884cb1b0d3e39f266494be4348746a/app/controllers/application_controller/miq_request_methods.rb#L160), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [126/120]
- [ ] :grey_exclamation: - [Line 542](https://github.com/mansam/manageiq/blob/c75ef13d6e884cb1b0d3e39f266494be4348746a/app/controllers/application_controller/miq_request_methods.rb#L542), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [155/120]
- [ ] :grey_exclamation: - [Line 544](https://github.com/mansam/manageiq/blob/c75ef13d6e884cb1b0d3e39f266494be4348746a/app/controllers/application_controller/miq_request_methods.rb#L544), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [125/120]
- [ ] :grey_exclamation: - [Line 564](https://github.com/mansam/manageiq/blob/c75ef13d6e884cb1b0d3e39f266494be4348746a/app/controllers/application_controller/miq_request_methods.rb#L564), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [126/120]
- [ ] :grey_exclamation: - [Line 566](https://github.com/mansam/manageiq/blob/c75ef13d6e884cb1b0d3e39f266494be4348746a/app/controllers/application_controller/miq_request_methods.rb#L566), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [122/120]
- [ ] :grey_exclamation: - [Line 780](https://github.com/mansam/manageiq/blob/c75ef13d6e884cb1b0d3e39f266494be4348746a/app/controllers/application_controller/miq_request_methods.rb#L780), Col 15 - [Metrics/BlockNesting](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/BlockNesting) - Avoid more than 3 levels of block nesting.
- [ ] :grey_exclamation: - [Line 786](https://github.com/mansam/manageiq/blob/c75ef13d6e884cb1b0d3e39f266494be4348746a/app/controllers/application_controller/miq_request_methods.rb#L786), Col 15 - [Metrics/BlockNesting](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/BlockNesting) - Avoid more than 3 levels of block nesting.
- [ ] :grey_exclamation: - [Line 870](https://github.com/mansam/manageiq/blob/c75ef13d6e884cb1b0d3e39f266494be4348746a/app/controllers/application_controller/miq_request_methods.rb#L870), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [125/120]
- [ ] :grey_exclamation: - [Line 945](https://github.com/mansam/manageiq/blob/c75ef13d6e884cb1b0d3e39f266494be4348746a/app/controllers/application_controller/miq_request_methods.rb#L945), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [129/120]

**app/models/miq_provision_request.rb**
- [ ] :exclamation: - [Line 17](https://github.com/mansam/manageiq/blob/c75ef13d6e884cb1b0d3e39f266494be4348746a/app/models/miq_provision_request.rb#L17), Col 3 - [Rails/Validation](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Rails/Validation) - Prefer the new style validations `validates :column, presence: value` over `validates_presence_of`.
- [ ] :grey_exclamation: - [Line 143](https://github.com/mansam/manageiq/blob/c75ef13d6e884cb1b0d3e39f266494be4348746a/app/models/miq_provision_request.rb#L143), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [124/120]
- [ ] :grey_exclamation: - [Line 148](https://github.com/mansam/manageiq/blob/c75ef13d6e884cb1b0d3e39f266494be4348746a/app/models/miq_provision_request.rb#L148), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [124/120]
- [ ] :grey_exclamation: - [Line 48](https://github.com/mansam/manageiq/blob/c75ef13d6e884cb1b0d3e39f266494be4348746a/app/models/miq_provision_request.rb#L48), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [132/120]
- [ ] :grey_exclamation: - [Line 51](https://github.com/mansam/manageiq/blob/c75ef13d6e884cb1b0d3e39f266494be4348746a/app/models/miq_provision_request.rb#L51), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [121/120]

**app/views/miq_request/_pre_prov.html.haml**
- [ ] :warning: - [Line 11](https://github.com/mansam/manageiq/blob/c75ef13d6e884cb1b0d3e39f266494be4348746a/app/views/miq_request/_pre_prov.html.haml#L11) - Line is too long. [234/160]
- [ ] :warning: - [Line 7](https://github.com/mansam/manageiq/blob/c75ef13d6e884cb1b0d3e39f266494be4348746a/app/views/miq_request/_pre_prov.html.haml#L7) - Line is too long. [225/160]
- [ ] :warning: - [Line 9](https://github.com/mansam/manageiq/blob/c75ef13d6e884cb1b0d3e39f266494be4348746a/app/views/miq_request/_pre_prov.html.haml#L9) - Line is too long. [228/160]

**app/views/miq_request/_prov_volume_grid.html.haml**
- [ ] :warning: - [Line 20](https://github.com/mansam/manageiq/blob/c75ef13d6e884cb1b0d3e39f266494be4348746a/app/views/miq_request/_prov_volume_grid.html.haml#L20) - Avoid more than 3 levels of block nesting.

**app/views/miq_request/_prov_volume_snapshot_grid.html.haml**
- [ ] :warning: - [Line 20](https://github.com/mansam/manageiq/blob/c75ef13d6e884cb1b0d3e39f266494be4348746a/app/views/miq_request/_prov_volume_snapshot_grid.html.haml#L20) - Avoid more than 3 levels of block nesting.
",True,False,72,539068.1666666666
ManageIQ/manageiq/11691,2016-10-19T20:28:16Z,False,5807d7956480fddca09646ce,"<rubocop />Checked commits https://github.com/mansam/manageiq/compare/21974e7c0609384e377d8eb1d1770ca27d90453a~...5d171439925c9d207cbb268d4fd87a48e8bbccbe with ruby 2.2.5, rubocop 0.37.2, and haml-lint 0.16.1
29 files checked, 21 offenses detected

**app/controllers/application_controller/miq_request_methods.rb**
- [ ] :exclamation: - [Line 1011](https://github.com/mansam/manageiq/blob/5d171439925c9d207cbb268d4fd87a48e8bbccbe/app/controllers/application_controller/miq_request_methods.rb#L1011), Col 47 - [Style/ExtraSpacing](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Style/ExtraSpacing) - Unnecessary spacing detected.
- [ ] :exclamation: - [Line 780](https://github.com/mansam/manageiq/blob/5d171439925c9d207cbb268d4fd87a48e8bbccbe/app/controllers/application_controller/miq_request_methods.rb#L780), Col 49 - [Style/ExtraSpacing](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Style/ExtraSpacing) - Unnecessary spacing detected.
- [ ] :grey_exclamation: - [Line 160](https://github.com/mansam/manageiq/blob/5d171439925c9d207cbb268d4fd87a48e8bbccbe/app/controllers/application_controller/miq_request_methods.rb#L160), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [126/120]
- [ ] :grey_exclamation: - [Line 542](https://github.com/mansam/manageiq/blob/5d171439925c9d207cbb268d4fd87a48e8bbccbe/app/controllers/application_controller/miq_request_methods.rb#L542), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [155/120]
- [ ] :grey_exclamation: - [Line 544](https://github.com/mansam/manageiq/blob/5d171439925c9d207cbb268d4fd87a48e8bbccbe/app/controllers/application_controller/miq_request_methods.rb#L544), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [125/120]
- [ ] :grey_exclamation: - [Line 564](https://github.com/mansam/manageiq/blob/5d171439925c9d207cbb268d4fd87a48e8bbccbe/app/controllers/application_controller/miq_request_methods.rb#L564), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [126/120]
- [ ] :grey_exclamation: - [Line 566](https://github.com/mansam/manageiq/blob/5d171439925c9d207cbb268d4fd87a48e8bbccbe/app/controllers/application_controller/miq_request_methods.rb#L566), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [122/120]
- [ ] :grey_exclamation: - [Line 780](https://github.com/mansam/manageiq/blob/5d171439925c9d207cbb268d4fd87a48e8bbccbe/app/controllers/application_controller/miq_request_methods.rb#L780), Col 15 - [Metrics/BlockNesting](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/BlockNesting) - Avoid more than 3 levels of block nesting.
- [ ] :grey_exclamation: - [Line 786](https://github.com/mansam/manageiq/blob/5d171439925c9d207cbb268d4fd87a48e8bbccbe/app/controllers/application_controller/miq_request_methods.rb#L786), Col 15 - [Metrics/BlockNesting](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/BlockNesting) - Avoid more than 3 levels of block nesting.
- [ ] :grey_exclamation: - [Line 870](https://github.com/mansam/manageiq/blob/5d171439925c9d207cbb268d4fd87a48e8bbccbe/app/controllers/application_controller/miq_request_methods.rb#L870), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [125/120]
- [ ] :grey_exclamation: - [Line 945](https://github.com/mansam/manageiq/blob/5d171439925c9d207cbb268d4fd87a48e8bbccbe/app/controllers/application_controller/miq_request_methods.rb#L945), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [129/120]

**app/models/miq_provision_request.rb**
- [ ] :exclamation: - [Line 17](https://github.com/mansam/manageiq/blob/5d171439925c9d207cbb268d4fd87a48e8bbccbe/app/models/miq_provision_request.rb#L17), Col 3 - [Rails/Validation](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Rails/Validation) - Prefer the new style validations `validates :column, presence: value` over `validates_presence_of`.
- [ ] :grey_exclamation: - [Line 143](https://github.com/mansam/manageiq/blob/5d171439925c9d207cbb268d4fd87a48e8bbccbe/app/models/miq_provision_request.rb#L143), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [124/120]
- [ ] :grey_exclamation: - [Line 148](https://github.com/mansam/manageiq/blob/5d171439925c9d207cbb268d4fd87a48e8bbccbe/app/models/miq_provision_request.rb#L148), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [124/120]
- [ ] :grey_exclamation: - [Line 48](https://github.com/mansam/manageiq/blob/5d171439925c9d207cbb268d4fd87a48e8bbccbe/app/models/miq_provision_request.rb#L48), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [132/120]
- [ ] :grey_exclamation: - [Line 51](https://github.com/mansam/manageiq/blob/5d171439925c9d207cbb268d4fd87a48e8bbccbe/app/models/miq_provision_request.rb#L51), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [121/120]

**app/views/miq_request/_pre_prov.html.haml**
- [ ] :warning: - [Line 11](https://github.com/mansam/manageiq/blob/5d171439925c9d207cbb268d4fd87a48e8bbccbe/app/views/miq_request/_pre_prov.html.haml#L11) - Line is too long. [234/160]
- [ ] :warning: - [Line 7](https://github.com/mansam/manageiq/blob/5d171439925c9d207cbb268d4fd87a48e8bbccbe/app/views/miq_request/_pre_prov.html.haml#L7) - Line is too long. [225/160]
- [ ] :warning: - [Line 9](https://github.com/mansam/manageiq/blob/5d171439925c9d207cbb268d4fd87a48e8bbccbe/app/views/miq_request/_pre_prov.html.haml#L9) - Line is too long. [228/160]

**app/views/miq_request/_prov_volume_grid.html.haml**
- [ ] :warning: - [Line 20](https://github.com/mansam/manageiq/blob/5d171439925c9d207cbb268d4fd87a48e8bbccbe/app/views/miq_request/_prov_volume_grid.html.haml#L20) - Avoid more than 3 levels of block nesting.

**app/views/miq_request/_prov_volume_snapshot_grid.html.haml**
- [ ] :warning: - [Line 20](https://github.com/mansam/manageiq/blob/5d171439925c9d207cbb268d4fd87a48e8bbccbe/app/views/miq_request/_prov_volume_snapshot_grid.html.haml#L20) - Avoid more than 3 levels of block nesting.
",True,False,72,539068.1666666666
ManageIQ/manageiq/11691,2016-10-19T20:47:43Z,False,5807dc296480fde229b191f7,"<rubocop />Checked commit https://github.com/mansam/manageiq/commit/57762d51ad8f85cc55b2d4fda6ed5205d33f86e2 with ruby 2.2.5, rubocop 0.37.2, and haml-lint 0.16.1
29 files checked, 21 offenses detected

**app/controllers/application_controller/miq_request_methods.rb**
- [ ] :exclamation: - [Line 1011](https://github.com/mansam/manageiq/blob/57762d51ad8f85cc55b2d4fda6ed5205d33f86e2/app/controllers/application_controller/miq_request_methods.rb#L1011), Col 47 - [Style/ExtraSpacing](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Style/ExtraSpacing) - Unnecessary spacing detected.
- [ ] :exclamation: - [Line 780](https://github.com/mansam/manageiq/blob/57762d51ad8f85cc55b2d4fda6ed5205d33f86e2/app/controllers/application_controller/miq_request_methods.rb#L780), Col 49 - [Style/ExtraSpacing](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Style/ExtraSpacing) - Unnecessary spacing detected.
- [ ] :grey_exclamation: - [Line 160](https://github.com/mansam/manageiq/blob/57762d51ad8f85cc55b2d4fda6ed5205d33f86e2/app/controllers/application_controller/miq_request_methods.rb#L160), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [126/120]
- [ ] :grey_exclamation: - [Line 542](https://github.com/mansam/manageiq/blob/57762d51ad8f85cc55b2d4fda6ed5205d33f86e2/app/controllers/application_controller/miq_request_methods.rb#L542), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [155/120]
- [ ] :grey_exclamation: - [Line 544](https://github.com/mansam/manageiq/blob/57762d51ad8f85cc55b2d4fda6ed5205d33f86e2/app/controllers/application_controller/miq_request_methods.rb#L544), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [125/120]
- [ ] :grey_exclamation: - [Line 564](https://github.com/mansam/manageiq/blob/57762d51ad8f85cc55b2d4fda6ed5205d33f86e2/app/controllers/application_controller/miq_request_methods.rb#L564), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [126/120]
- [ ] :grey_exclamation: - [Line 566](https://github.com/mansam/manageiq/blob/57762d51ad8f85cc55b2d4fda6ed5205d33f86e2/app/controllers/application_controller/miq_request_methods.rb#L566), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [122/120]
- [ ] :grey_exclamation: - [Line 780](https://github.com/mansam/manageiq/blob/57762d51ad8f85cc55b2d4fda6ed5205d33f86e2/app/controllers/application_controller/miq_request_methods.rb#L780), Col 15 - [Metrics/BlockNesting](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/BlockNesting) - Avoid more than 3 levels of block nesting.
- [ ] :grey_exclamation: - [Line 786](https://github.com/mansam/manageiq/blob/57762d51ad8f85cc55b2d4fda6ed5205d33f86e2/app/controllers/application_controller/miq_request_methods.rb#L786), Col 15 - [Metrics/BlockNesting](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/BlockNesting) - Avoid more than 3 levels of block nesting.
- [ ] :grey_exclamation: - [Line 870](https://github.com/mansam/manageiq/blob/57762d51ad8f85cc55b2d4fda6ed5205d33f86e2/app/controllers/application_controller/miq_request_methods.rb#L870), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [125/120]
- [ ] :grey_exclamation: - [Line 945](https://github.com/mansam/manageiq/blob/57762d51ad8f85cc55b2d4fda6ed5205d33f86e2/app/controllers/application_controller/miq_request_methods.rb#L945), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [129/120]

**app/models/miq_provision_request.rb**
- [ ] :exclamation: - [Line 17](https://github.com/mansam/manageiq/blob/57762d51ad8f85cc55b2d4fda6ed5205d33f86e2/app/models/miq_provision_request.rb#L17), Col 3 - [Rails/Validation](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Rails/Validation) - Prefer the new style validations `validates :column, presence: value` over `validates_presence_of`.
- [ ] :grey_exclamation: - [Line 143](https://github.com/mansam/manageiq/blob/57762d51ad8f85cc55b2d4fda6ed5205d33f86e2/app/models/miq_provision_request.rb#L143), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [124/120]
- [ ] :grey_exclamation: - [Line 148](https://github.com/mansam/manageiq/blob/57762d51ad8f85cc55b2d4fda6ed5205d33f86e2/app/models/miq_provision_request.rb#L148), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [124/120]
- [ ] :grey_exclamation: - [Line 48](https://github.com/mansam/manageiq/blob/57762d51ad8f85cc55b2d4fda6ed5205d33f86e2/app/models/miq_provision_request.rb#L48), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [132/120]
- [ ] :grey_exclamation: - [Line 51](https://github.com/mansam/manageiq/blob/57762d51ad8f85cc55b2d4fda6ed5205d33f86e2/app/models/miq_provision_request.rb#L51), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [121/120]

**app/views/miq_request/_pre_prov.html.haml**
- [ ] :warning: - [Line 11](https://github.com/mansam/manageiq/blob/57762d51ad8f85cc55b2d4fda6ed5205d33f86e2/app/views/miq_request/_pre_prov.html.haml#L11) - Line is too long. [234/160]
- [ ] :warning: - [Line 7](https://github.com/mansam/manageiq/blob/57762d51ad8f85cc55b2d4fda6ed5205d33f86e2/app/views/miq_request/_pre_prov.html.haml#L7) - Line is too long. [225/160]
- [ ] :warning: - [Line 9](https://github.com/mansam/manageiq/blob/57762d51ad8f85cc55b2d4fda6ed5205d33f86e2/app/views/miq_request/_pre_prov.html.haml#L9) - Line is too long. [228/160]

**app/views/miq_request/_prov_volume_grid.html.haml**
- [ ] :warning: - [Line 20](https://github.com/mansam/manageiq/blob/57762d51ad8f85cc55b2d4fda6ed5205d33f86e2/app/views/miq_request/_prov_volume_grid.html.haml#L20) - Avoid more than 3 levels of block nesting.

**app/views/miq_request/_prov_volume_snapshot_grid.html.haml**
- [ ] :warning: - [Line 20](https://github.com/mansam/manageiq/blob/57762d51ad8f85cc55b2d4fda6ed5205d33f86e2/app/views/miq_request/_prov_volume_snapshot_grid.html.haml#L20) - Avoid more than 3 levels of block nesting.
",True,False,72,539068.1666666666
ManageIQ/manageiq/11691,2016-10-19T20:57:17Z,False,5807de626480fde087de8bf7,"I'm still writing tests, but this isn't really ""wip"" anymore.
",True,False,72,539068.1666666666
ManageIQ/manageiq/11691,2016-10-19T20:57:44Z,False,5807de736480fde087de8c2a,@miq-bot remove_label wip,True,False,72,539068.1666666666
ManageIQ/manageiq/11691,2016-10-19T21:48:23Z,False,5807ea2f6480fde087de8fad,"@bdunne @gmcculloug if you could give this a look over, it would be very helpful. Superficially this appears to work, and I don't seem to have broken any of the existing tests, but it touches a lot of guts and I have no doubt that there are nuances I am missing.",True,False,72,539068.1666666666
ManageIQ/manageiq/11691,2016-10-19T22:05:25Z,False,5807eec96480fddf1c7cc786,"@mansam My first thought is that we need to break the PR up into a few smaller PRs.  It is going to be difficult for anyone to review 1 commit with 30 file changes.  I would suggest making a PR for backend changes and one for UI change at a minimum but am open to suggestions.

Also, after a quick look through the files I was surprised to see files from the `config` folder listed in this PR.  I am hoping those were mistakenly included, which is one of the problems with large PRs.",True,False,72,539068.1666666666
ManageIQ/manageiq/11691,2016-10-19T22:07:10Z,False,5807efb06480fddc77706671,"@gmcculloug I can certainly break up the PR into UI and backend changes, that's no problem. And indeed, those `config` changes were debugging changes that got scooped up.",True,False,72,539068.1666666666
ManageIQ/manageiq/11691,2016-10-19T22:12:46Z,False,5807f0586480fddc4a4eaaa7,"<rubocop />Checked commit https://github.com/mansam/manageiq/commit/f3be1aa58d3c933a91400c790e6daac068759b49 with ruby 2.2.5, rubocop 0.37.2, and haml-lint 0.16.1
28 files checked, 21 offenses detected

**app/controllers/application_controller/miq_request_methods.rb**
- [ ] :exclamation: - [Line 1011](https://github.com/mansam/manageiq/blob/f3be1aa58d3c933a91400c790e6daac068759b49/app/controllers/application_controller/miq_request_methods.rb#L1011), Col 47 - [Style/ExtraSpacing](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Style/ExtraSpacing) - Unnecessary spacing detected.
- [ ] :exclamation: - [Line 780](https://github.com/mansam/manageiq/blob/f3be1aa58d3c933a91400c790e6daac068759b49/app/controllers/application_controller/miq_request_methods.rb#L780), Col 49 - [Style/ExtraSpacing](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Style/ExtraSpacing) - Unnecessary spacing detected.
- [ ] :grey_exclamation: - [Line 160](https://github.com/mansam/manageiq/blob/f3be1aa58d3c933a91400c790e6daac068759b49/app/controllers/application_controller/miq_request_methods.rb#L160), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [126/120]
- [ ] :grey_exclamation: - [Line 542](https://github.com/mansam/manageiq/blob/f3be1aa58d3c933a91400c790e6daac068759b49/app/controllers/application_controller/miq_request_methods.rb#L542), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [155/120]
- [ ] :grey_exclamation: - [Line 544](https://github.com/mansam/manageiq/blob/f3be1aa58d3c933a91400c790e6daac068759b49/app/controllers/application_controller/miq_request_methods.rb#L544), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [125/120]
- [ ] :grey_exclamation: - [Line 564](https://github.com/mansam/manageiq/blob/f3be1aa58d3c933a91400c790e6daac068759b49/app/controllers/application_controller/miq_request_methods.rb#L564), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [126/120]
- [ ] :grey_exclamation: - [Line 566](https://github.com/mansam/manageiq/blob/f3be1aa58d3c933a91400c790e6daac068759b49/app/controllers/application_controller/miq_request_methods.rb#L566), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [122/120]
- [ ] :grey_exclamation: - [Line 780](https://github.com/mansam/manageiq/blob/f3be1aa58d3c933a91400c790e6daac068759b49/app/controllers/application_controller/miq_request_methods.rb#L780), Col 15 - [Metrics/BlockNesting](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/BlockNesting) - Avoid more than 3 levels of block nesting.
- [ ] :grey_exclamation: - [Line 786](https://github.com/mansam/manageiq/blob/f3be1aa58d3c933a91400c790e6daac068759b49/app/controllers/application_controller/miq_request_methods.rb#L786), Col 15 - [Metrics/BlockNesting](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/BlockNesting) - Avoid more than 3 levels of block nesting.
- [ ] :grey_exclamation: - [Line 870](https://github.com/mansam/manageiq/blob/f3be1aa58d3c933a91400c790e6daac068759b49/app/controllers/application_controller/miq_request_methods.rb#L870), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [125/120]
- [ ] :grey_exclamation: - [Line 945](https://github.com/mansam/manageiq/blob/f3be1aa58d3c933a91400c790e6daac068759b49/app/controllers/application_controller/miq_request_methods.rb#L945), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [129/120]

**app/models/miq_provision_request.rb**
- [ ] :exclamation: - [Line 17](https://github.com/mansam/manageiq/blob/f3be1aa58d3c933a91400c790e6daac068759b49/app/models/miq_provision_request.rb#L17), Col 3 - [Rails/Validation](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Rails/Validation) - Prefer the new style validations `validates :column, presence: value` over `validates_presence_of`.
- [ ] :grey_exclamation: - [Line 143](https://github.com/mansam/manageiq/blob/f3be1aa58d3c933a91400c790e6daac068759b49/app/models/miq_provision_request.rb#L143), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [124/120]
- [ ] :grey_exclamation: - [Line 148](https://github.com/mansam/manageiq/blob/f3be1aa58d3c933a91400c790e6daac068759b49/app/models/miq_provision_request.rb#L148), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [124/120]
- [ ] :grey_exclamation: - [Line 48](https://github.com/mansam/manageiq/blob/f3be1aa58d3c933a91400c790e6daac068759b49/app/models/miq_provision_request.rb#L48), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [132/120]
- [ ] :grey_exclamation: - [Line 51](https://github.com/mansam/manageiq/blob/f3be1aa58d3c933a91400c790e6daac068759b49/app/models/miq_provision_request.rb#L51), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [121/120]

**app/views/miq_request/_pre_prov.html.haml**
- [ ] :warning: - [Line 11](https://github.com/mansam/manageiq/blob/f3be1aa58d3c933a91400c790e6daac068759b49/app/views/miq_request/_pre_prov.html.haml#L11) - Line is too long. [234/160]
- [ ] :warning: - [Line 7](https://github.com/mansam/manageiq/blob/f3be1aa58d3c933a91400c790e6daac068759b49/app/views/miq_request/_pre_prov.html.haml#L7) - Line is too long. [225/160]
- [ ] :warning: - [Line 9](https://github.com/mansam/manageiq/blob/f3be1aa58d3c933a91400c790e6daac068759b49/app/views/miq_request/_pre_prov.html.haml#L9) - Line is too long. [228/160]

**app/views/miq_request/_prov_volume_grid.html.haml**
- [ ] :warning: - [Line 20](https://github.com/mansam/manageiq/blob/f3be1aa58d3c933a91400c790e6daac068759b49/app/views/miq_request/_prov_volume_grid.html.haml#L20) - Avoid more than 3 levels of block nesting.

**app/views/miq_request/_prov_volume_snapshot_grid.html.haml**
- [ ] :warning: - [Line 20](https://github.com/mansam/manageiq/blob/f3be1aa58d3c933a91400c790e6daac068759b49/app/views/miq_request/_prov_volume_snapshot_grid.html.haml#L20) - Avoid more than 3 levels of block nesting.
",True,False,72,539068.1666666666
ManageIQ/manageiq/11691,2016-10-19T22:32:59Z,False,5807f4a16480fde055bc019e,"<rubocop />Checked commit https://github.com/mansam/manageiq/commit/32db0cd5d1d958944a3e9840136345c930c5255e with ruby 2.2.5, rubocop 0.37.2, and haml-lint 0.16.1
27 files checked, 21 offenses detected

**app/controllers/application_controller/miq_request_methods.rb**
- [ ] :exclamation: - [Line 1011](https://github.com/mansam/manageiq/blob/32db0cd5d1d958944a3e9840136345c930c5255e/app/controllers/application_controller/miq_request_methods.rb#L1011), Col 47 - [Style/ExtraSpacing](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Style/ExtraSpacing) - Unnecessary spacing detected.
- [ ] :exclamation: - [Line 780](https://github.com/mansam/manageiq/blob/32db0cd5d1d958944a3e9840136345c930c5255e/app/controllers/application_controller/miq_request_methods.rb#L780), Col 49 - [Style/ExtraSpacing](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Style/ExtraSpacing) - Unnecessary spacing detected.
- [ ] :grey_exclamation: - [Line 160](https://github.com/mansam/manageiq/blob/32db0cd5d1d958944a3e9840136345c930c5255e/app/controllers/application_controller/miq_request_methods.rb#L160), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [126/120]
- [ ] :grey_exclamation: - [Line 542](https://github.com/mansam/manageiq/blob/32db0cd5d1d958944a3e9840136345c930c5255e/app/controllers/application_controller/miq_request_methods.rb#L542), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [155/120]
- [ ] :grey_exclamation: - [Line 544](https://github.com/mansam/manageiq/blob/32db0cd5d1d958944a3e9840136345c930c5255e/app/controllers/application_controller/miq_request_methods.rb#L544), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [125/120]
- [ ] :grey_exclamation: - [Line 564](https://github.com/mansam/manageiq/blob/32db0cd5d1d958944a3e9840136345c930c5255e/app/controllers/application_controller/miq_request_methods.rb#L564), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [126/120]
- [ ] :grey_exclamation: - [Line 566](https://github.com/mansam/manageiq/blob/32db0cd5d1d958944a3e9840136345c930c5255e/app/controllers/application_controller/miq_request_methods.rb#L566), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [122/120]
- [ ] :grey_exclamation: - [Line 780](https://github.com/mansam/manageiq/blob/32db0cd5d1d958944a3e9840136345c930c5255e/app/controllers/application_controller/miq_request_methods.rb#L780), Col 15 - [Metrics/BlockNesting](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/BlockNesting) - Avoid more than 3 levels of block nesting.
- [ ] :grey_exclamation: - [Line 786](https://github.com/mansam/manageiq/blob/32db0cd5d1d958944a3e9840136345c930c5255e/app/controllers/application_controller/miq_request_methods.rb#L786), Col 15 - [Metrics/BlockNesting](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/BlockNesting) - Avoid more than 3 levels of block nesting.
- [ ] :grey_exclamation: - [Line 870](https://github.com/mansam/manageiq/blob/32db0cd5d1d958944a3e9840136345c930c5255e/app/controllers/application_controller/miq_request_methods.rb#L870), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [125/120]
- [ ] :grey_exclamation: - [Line 945](https://github.com/mansam/manageiq/blob/32db0cd5d1d958944a3e9840136345c930c5255e/app/controllers/application_controller/miq_request_methods.rb#L945), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [129/120]

**app/models/miq_provision_request.rb**
- [ ] :exclamation: - [Line 17](https://github.com/mansam/manageiq/blob/32db0cd5d1d958944a3e9840136345c930c5255e/app/models/miq_provision_request.rb#L17), Col 3 - [Rails/Validation](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Rails/Validation) - Prefer the new style validations `validates :column, presence: value` over `validates_presence_of`.
- [ ] :grey_exclamation: - [Line 143](https://github.com/mansam/manageiq/blob/32db0cd5d1d958944a3e9840136345c930c5255e/app/models/miq_provision_request.rb#L143), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [124/120]
- [ ] :grey_exclamation: - [Line 148](https://github.com/mansam/manageiq/blob/32db0cd5d1d958944a3e9840136345c930c5255e/app/models/miq_provision_request.rb#L148), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [124/120]
- [ ] :grey_exclamation: - [Line 48](https://github.com/mansam/manageiq/blob/32db0cd5d1d958944a3e9840136345c930c5255e/app/models/miq_provision_request.rb#L48), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [132/120]
- [ ] :grey_exclamation: - [Line 51](https://github.com/mansam/manageiq/blob/32db0cd5d1d958944a3e9840136345c930c5255e/app/models/miq_provision_request.rb#L51), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [121/120]

**app/views/miq_request/_pre_prov.html.haml**
- [ ] :warning: - [Line 11](https://github.com/mansam/manageiq/blob/32db0cd5d1d958944a3e9840136345c930c5255e/app/views/miq_request/_pre_prov.html.haml#L11) - Line is too long. [234/160]
- [ ] :warning: - [Line 7](https://github.com/mansam/manageiq/blob/32db0cd5d1d958944a3e9840136345c930c5255e/app/views/miq_request/_pre_prov.html.haml#L7) - Line is too long. [225/160]
- [ ] :warning: - [Line 9](https://github.com/mansam/manageiq/blob/32db0cd5d1d958944a3e9840136345c930c5255e/app/views/miq_request/_pre_prov.html.haml#L9) - Line is too long. [228/160]

**app/views/miq_request/_prov_volume_grid.html.haml**
- [ ] :warning: - [Line 20](https://github.com/mansam/manageiq/blob/32db0cd5d1d958944a3e9840136345c930c5255e/app/views/miq_request/_prov_volume_grid.html.haml#L20) - Avoid more than 3 levels of block nesting.

**app/views/miq_request/_prov_volume_snapshot_grid.html.haml**
- [ ] :warning: - [Line 20](https://github.com/mansam/manageiq/blob/32db0cd5d1d958944a3e9840136345c930c5255e/app/views/miq_request/_prov_volume_snapshot_grid.html.haml#L20) - Avoid more than 3 levels of block nesting.
",True,False,72,539068.1666666666
ManageIQ/manageiq/12070,2016-10-19T22:35:49Z,False,5807f54a6480fddd74d89649,@tzumainn @gmcculloug,True,False,7,120980.45
ManageIQ/manageiq/11691,2016-10-19T22:36:01Z,False,5807f5596480fde52f05a9cd,I've split the UI portion out into https://github.com/ManageIQ/manageiq/pull/12070,True,False,72,539068.1666666666
ManageIQ/manageiq/11691,2016-10-19T22:37:28Z,False,5807f5b16480fde3790c55c0,"<rubocop />Checked commit https://github.com/mansam/manageiq/commit/f67c6494920c78a9427e46fc805ab7406db1b7d8 with ruby 2.2.5, rubocop 0.37.2, and haml-lint 0.16.1
18 files checked, 5 offenses detected

**app/models/miq_provision_request.rb**
- [ ] :exclamation: - [Line 17](https://github.com/mansam/manageiq/blob/f67c6494920c78a9427e46fc805ab7406db1b7d8/app/models/miq_provision_request.rb#L17), Col 3 - [Rails/Validation](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Rails/Validation) - Prefer the new style validations `validates :column, presence: value` over `validates_presence_of`.
- [ ] :grey_exclamation: - [Line 143](https://github.com/mansam/manageiq/blob/f67c6494920c78a9427e46fc805ab7406db1b7d8/app/models/miq_provision_request.rb#L143), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [124/120]
- [ ] :grey_exclamation: - [Line 148](https://github.com/mansam/manageiq/blob/f67c6494920c78a9427e46fc805ab7406db1b7d8/app/models/miq_provision_request.rb#L148), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [124/120]
- [ ] :grey_exclamation: - [Line 48](https://github.com/mansam/manageiq/blob/f67c6494920c78a9427e46fc805ab7406db1b7d8/app/models/miq_provision_request.rb#L48), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [132/120]
- [ ] :grey_exclamation: - [Line 51](https://github.com/mansam/manageiq/blob/f67c6494920c78a9427e46fc805ab7406db1b7d8/app/models/miq_provision_request.rb#L51), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [121/120]
",True,False,72,539068.1666666666
ManageIQ/manageiq/12070,2016-10-19T22:47:47Z,False,5807f81d6480fdde6a5042c5,"<rubocop />Checked commit https://github.com/mansam/manageiq/commit/47fb73dcb69dba68dcdac698e02cc80f5f8e3ad6 with ruby 2.2.5, rubocop 0.37.2, and haml-lint 0.16.1
9 files checked, 16 offenses detected

**app/controllers/application_controller/miq_request_methods.rb**
- [ ] :exclamation: - [Line 1011](https://github.com/mansam/manageiq/blob/47fb73dcb69dba68dcdac698e02cc80f5f8e3ad6/app/controllers/application_controller/miq_request_methods.rb#L1011), Col 47 - [Style/ExtraSpacing](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Style/ExtraSpacing) - Unnecessary spacing detected.
- [ ] :exclamation: - [Line 780](https://github.com/mansam/manageiq/blob/47fb73dcb69dba68dcdac698e02cc80f5f8e3ad6/app/controllers/application_controller/miq_request_methods.rb#L780), Col 49 - [Style/ExtraSpacing](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Style/ExtraSpacing) - Unnecessary spacing detected.
- [ ] :grey_exclamation: - [Line 160](https://github.com/mansam/manageiq/blob/47fb73dcb69dba68dcdac698e02cc80f5f8e3ad6/app/controllers/application_controller/miq_request_methods.rb#L160), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [126/120]
- [ ] :grey_exclamation: - [Line 542](https://github.com/mansam/manageiq/blob/47fb73dcb69dba68dcdac698e02cc80f5f8e3ad6/app/controllers/application_controller/miq_request_methods.rb#L542), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [155/120]
- [ ] :grey_exclamation: - [Line 544](https://github.com/mansam/manageiq/blob/47fb73dcb69dba68dcdac698e02cc80f5f8e3ad6/app/controllers/application_controller/miq_request_methods.rb#L544), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [125/120]
- [ ] :grey_exclamation: - [Line 564](https://github.com/mansam/manageiq/blob/47fb73dcb69dba68dcdac698e02cc80f5f8e3ad6/app/controllers/application_controller/miq_request_methods.rb#L564), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [126/120]
- [ ] :grey_exclamation: - [Line 566](https://github.com/mansam/manageiq/blob/47fb73dcb69dba68dcdac698e02cc80f5f8e3ad6/app/controllers/application_controller/miq_request_methods.rb#L566), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [122/120]
- [ ] :grey_exclamation: - [Line 780](https://github.com/mansam/manageiq/blob/47fb73dcb69dba68dcdac698e02cc80f5f8e3ad6/app/controllers/application_controller/miq_request_methods.rb#L780), Col 15 - [Metrics/BlockNesting](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/BlockNesting) - Avoid more than 3 levels of block nesting.
- [ ] :grey_exclamation: - [Line 786](https://github.com/mansam/manageiq/blob/47fb73dcb69dba68dcdac698e02cc80f5f8e3ad6/app/controllers/application_controller/miq_request_methods.rb#L786), Col 15 - [Metrics/BlockNesting](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/BlockNesting) - Avoid more than 3 levels of block nesting.
- [ ] :grey_exclamation: - [Line 870](https://github.com/mansam/manageiq/blob/47fb73dcb69dba68dcdac698e02cc80f5f8e3ad6/app/controllers/application_controller/miq_request_methods.rb#L870), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [125/120]
- [ ] :grey_exclamation: - [Line 945](https://github.com/mansam/manageiq/blob/47fb73dcb69dba68dcdac698e02cc80f5f8e3ad6/app/controllers/application_controller/miq_request_methods.rb#L945), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [129/120]

**app/views/miq_request/_pre_prov.html.haml**
- [ ] :warning: - [Line 11](https://github.com/mansam/manageiq/blob/47fb73dcb69dba68dcdac698e02cc80f5f8e3ad6/app/views/miq_request/_pre_prov.html.haml#L11) - Line is too long. [234/160]
- [ ] :warning: - [Line 7](https://github.com/mansam/manageiq/blob/47fb73dcb69dba68dcdac698e02cc80f5f8e3ad6/app/views/miq_request/_pre_prov.html.haml#L7) - Line is too long. [225/160]
- [ ] :warning: - [Line 9](https://github.com/mansam/manageiq/blob/47fb73dcb69dba68dcdac698e02cc80f5f8e3ad6/app/views/miq_request/_pre_prov.html.haml#L9) - Line is too long. [228/160]

**app/views/miq_request/_prov_volume_grid.html.haml**
- [ ] :warning: - [Line 20](https://github.com/mansam/manageiq/blob/47fb73dcb69dba68dcdac698e02cc80f5f8e3ad6/app/views/miq_request/_prov_volume_grid.html.haml#L20) - Avoid more than 3 levels of block nesting.

**app/views/miq_request/_prov_volume_snapshot_grid.html.haml**
- [ ] :warning: - [Line 20](https://github.com/mansam/manageiq/blob/47fb73dcb69dba68dcdac698e02cc80f5f8e3ad6/app/views/miq_request/_prov_volume_snapshot_grid.html.haml#L20) - Avoid more than 3 levels of block nesting.
",True,False,7,120980.45
PrairieLearn/PrairieLearn/408,2016-10-20T14:17:23Z,False,5808d1f86480fddcb5ac8669,"There is trailing whitespace on this line (extra spaces after the semicolon). Github doesn't show it, but it shows up in red when I do ""git diff"" on the command line (at least on my machine).

There are a few other trailing-whitespace errors in this PR. The general rule is that shouldn't be trailing whitespace on any line.",True,False,31,35608.71666666667
PrairieLearn/PrairieLearn/408,2016-10-20T19:30:39Z,False,58091b6a6480fddd1fb323fa,8624865 should get rid of all trailing whitespace and/or whitespace on blank lines,True,False,31,35608.71666666667
ManageIQ/manageiq/11691,2016-10-20T21:17:28Z,False,580934bd6480fddc205e3c27,"<rubocop />Checked commits https://github.com/mansam/manageiq/compare/f67c6494920c78a9427e46fc805ab7406db1b7d8~...6c46b485cbfaf1422ef3d0f9818611d445b887f2 with ruby 2.2.5, rubocop 0.37.2, and haml-lint 0.16.1
19 files checked, 5 offenses detected

**app/models/miq_provision_request.rb**
- [ ] :exclamation: - [Line 17](https://github.com/mansam/manageiq/blob/6c46b485cbfaf1422ef3d0f9818611d445b887f2/app/models/miq_provision_request.rb#L17), Col 3 - [Rails/Validation](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Rails/Validation) - Prefer the new style validations `validates :column, presence: value` over `validates_presence_of`.
- [ ] :grey_exclamation: - [Line 131](https://github.com/mansam/manageiq/blob/6c46b485cbfaf1422ef3d0f9818611d445b887f2/app/models/miq_provision_request.rb#L131), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [124/120]
- [ ] :grey_exclamation: - [Line 136](https://github.com/mansam/manageiq/blob/6c46b485cbfaf1422ef3d0f9818611d445b887f2/app/models/miq_provision_request.rb#L136), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [124/120]
- [ ] :grey_exclamation: - [Line 36](https://github.com/mansam/manageiq/blob/6c46b485cbfaf1422ef3d0f9818611d445b887f2/app/models/miq_provision_request.rb#L36), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [132/120]
- [ ] :grey_exclamation: - [Line 39](https://github.com/mansam/manageiq/blob/6c46b485cbfaf1422ef3d0f9818611d445b887f2/app/models/miq_provision_request.rb#L39), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [121/120]
",True,False,72,539068.1666666666
ManageIQ/manageiq/11691,2016-10-20T23:27:24Z,False,580952e46480fde1f6921ba5,"<rubocop />Checked commits https://github.com/mansam/manageiq/compare/52d0ef29f5fa0890224423b9760875c3f2dfd594~...cb036c42eb12aef2480612a2e67a84b353588fb9 with ruby 2.2.5, rubocop 0.37.2, and haml-lint 0.16.1
20 files checked, 9 offenses detected

**app/models/miq_provision_request.rb**
- [ ] :exclamation: - [Line 17](https://github.com/mansam/manageiq/blob/cb036c42eb12aef2480612a2e67a84b353588fb9/app/models/miq_provision_request.rb#L17), Col 3 - [Rails/Validation](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Rails/Validation) - Prefer the new style validations `validates :column, presence: value` over `validates_presence_of`.
- [ ] :grey_exclamation: - [Line 131](https://github.com/mansam/manageiq/blob/cb036c42eb12aef2480612a2e67a84b353588fb9/app/models/miq_provision_request.rb#L131), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [124/120]
- [ ] :grey_exclamation: - [Line 136](https://github.com/mansam/manageiq/blob/cb036c42eb12aef2480612a2e67a84b353588fb9/app/models/miq_provision_request.rb#L136), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [124/120]
- [ ] :grey_exclamation: - [Line 36](https://github.com/mansam/manageiq/blob/cb036c42eb12aef2480612a2e67a84b353588fb9/app/models/miq_provision_request.rb#L36), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [132/120]
- [ ] :grey_exclamation: - [Line 39](https://github.com/mansam/manageiq/blob/cb036c42eb12aef2480612a2e67a84b353588fb9/app/models/miq_provision_request.rb#L39), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [121/120]

**spec/models/miq_provision_spec.rb**
- [ ] :warning: - [Line 234](https://github.com/mansam/manageiq/blob/cb036c42eb12aef2480612a2e67a84b353588fb9/spec/models/miq_provision_spec.rb#L234), Col 11 - [Lint/UselessAssignment](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Lint/UselessAssignment) - Useless assignment to variable - `x`.
- [ ] :grey_exclamation: - [Line 145](https://github.com/mansam/manageiq/blob/cb036c42eb12aef2480612a2e67a84b353588fb9/spec/models/miq_provision_spec.rb#L145), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [128/120]
- [ ] :grey_exclamation: - [Line 150](https://github.com/mansam/manageiq/blob/cb036c42eb12aef2480612a2e67a84b353588fb9/spec/models/miq_provision_spec.rb#L150), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [141/120]
- [ ] :grey_exclamation: - [Line 153](https://github.com/mansam/manageiq/blob/cb036c42eb12aef2480612a2e67a84b353588fb9/spec/models/miq_provision_spec.rb#L153), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [218/120]
",True,False,72,539068.1666666666
PrairieLearn/PrairieLearn/408,2016-10-21T18:47:43Z,False,5828b1406480fd0b58238bb6,"I pushed one more commit (e3cbd76) that changes the Past Submissions Testing assessment into a ""Working in v2"" assessment (as we discussed after the meeting yesterday). It also fixed a bug in rendering questions once the instance is closed.",True,False,31,35608.71666666667
ManageIQ/manageiq/11691,2016-10-21T19:22:18Z,False,580aed2b6480fddc381a74f2,"<rubocop />Checked commits https://github.com/mansam/manageiq/compare/52d0ef29f5fa0890224423b9760875c3f2dfd594~...e6dd83b294fa8df8422010d02114136500742e14 with ruby 2.2.5, rubocop 0.37.2, and haml-lint 0.16.1
20 files checked, 9 offenses detected

**app/models/miq_provision_request.rb**
- [ ] :exclamation: - [Line 17](https://github.com/mansam/manageiq/blob/e6dd83b294fa8df8422010d02114136500742e14/app/models/miq_provision_request.rb#L17), Col 3 - [Rails/Validation](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Rails/Validation) - Prefer the new style validations `validates :column, presence: value` over `validates_presence_of`.
- [ ] :grey_exclamation: - [Line 131](https://github.com/mansam/manageiq/blob/e6dd83b294fa8df8422010d02114136500742e14/app/models/miq_provision_request.rb#L131), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [124/120]
- [ ] :grey_exclamation: - [Line 136](https://github.com/mansam/manageiq/blob/e6dd83b294fa8df8422010d02114136500742e14/app/models/miq_provision_request.rb#L136), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [124/120]
- [ ] :grey_exclamation: - [Line 36](https://github.com/mansam/manageiq/blob/e6dd83b294fa8df8422010d02114136500742e14/app/models/miq_provision_request.rb#L36), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [132/120]
- [ ] :grey_exclamation: - [Line 39](https://github.com/mansam/manageiq/blob/e6dd83b294fa8df8422010d02114136500742e14/app/models/miq_provision_request.rb#L39), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [121/120]

**spec/models/miq_provision_spec.rb**
- [ ] :grey_exclamation: - [Line 156](https://github.com/mansam/manageiq/blob/e6dd83b294fa8df8422010d02114136500742e14/spec/models/miq_provision_spec.rb#L156), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [141/120]
- [ ] :grey_exclamation: - [Line 159](https://github.com/mansam/manageiq/blob/e6dd83b294fa8df8422010d02114136500742e14/spec/models/miq_provision_spec.rb#L159), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [218/120]
- [ ] :grey_exclamation: - [Line 269](https://github.com/mansam/manageiq/blob/e6dd83b294fa8df8422010d02114136500742e14/spec/models/miq_provision_spec.rb#L269), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [151/120]
- [ ] :grey_exclamation: - [Line 272](https://github.com/mansam/manageiq/blob/e6dd83b294fa8df8422010d02114136500742e14/spec/models/miq_provision_spec.rb#L272), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [220/120]
",True,False,72,539068.1666666666
neovim/neovim/4568,2016-10-22T08:53:23Z,False,580b29096480fde457d830db,"Did some more doc adjustments, if no more comments I will merge after tests.",True,False,46,212111.16666666666
ManageIQ/manageiq/12070,2016-10-24T21:41:40Z,False,580e801d6480fddc0e60ba50,<pr_mergeability_checker />This pull request is not mergeable.  Please rebase and repush.,True,False,7,120980.45
ManageIQ/manageiq/11691,2016-10-24T23:27:24Z,False,580e98df6480fddd1fb5b676,"<rubocop />Checked commits https://github.com/mansam/manageiq/compare/52d0ef29f5fa0890224423b9760875c3f2dfd594~...aab209aad3c58a1dc2fbfb7a47903de6f5ffdc22 with ruby 2.2.5, rubocop 0.37.2, and haml-lint 0.16.1
21 files checked, 9 offenses detected

**app/models/miq_provision_request.rb**
- [ ] :exclamation: - [Line 17](https://github.com/mansam/manageiq/blob/aab209aad3c58a1dc2fbfb7a47903de6f5ffdc22/app/models/miq_provision_request.rb#L17), Col 3 - [Rails/Validation](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Rails/Validation) - Prefer the new style validations `validates :column, presence: value` over `validates_presence_of`.
- [ ] :grey_exclamation: - [Line 131](https://github.com/mansam/manageiq/blob/aab209aad3c58a1dc2fbfb7a47903de6f5ffdc22/app/models/miq_provision_request.rb#L131), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [124/120]
- [ ] :grey_exclamation: - [Line 136](https://github.com/mansam/manageiq/blob/aab209aad3c58a1dc2fbfb7a47903de6f5ffdc22/app/models/miq_provision_request.rb#L136), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [124/120]
- [ ] :grey_exclamation: - [Line 36](https://github.com/mansam/manageiq/blob/aab209aad3c58a1dc2fbfb7a47903de6f5ffdc22/app/models/miq_provision_request.rb#L36), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [132/120]
- [ ] :grey_exclamation: - [Line 39](https://github.com/mansam/manageiq/blob/aab209aad3c58a1dc2fbfb7a47903de6f5ffdc22/app/models/miq_provision_request.rb#L39), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [121/120]

**spec/models/miq_provision_spec.rb**
- [ ] :grey_exclamation: - [Line 156](https://github.com/mansam/manageiq/blob/aab209aad3c58a1dc2fbfb7a47903de6f5ffdc22/spec/models/miq_provision_spec.rb#L156), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [141/120]
- [ ] :grey_exclamation: - [Line 159](https://github.com/mansam/manageiq/blob/aab209aad3c58a1dc2fbfb7a47903de6f5ffdc22/spec/models/miq_provision_spec.rb#L159), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [218/120]
- [ ] :grey_exclamation: - [Line 269](https://github.com/mansam/manageiq/blob/aab209aad3c58a1dc2fbfb7a47903de6f5ffdc22/spec/models/miq_provision_spec.rb#L269), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [151/120]
- [ ] :grey_exclamation: - [Line 272](https://github.com/mansam/manageiq/blob/aab209aad3c58a1dc2fbfb7a47903de6f5ffdc22/spec/models/miq_provision_spec.rb#L272), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [220/120]
",True,False,72,539068.1666666666
pallets_____click_____493,2016-10-25T04:34:46Z,True,pallets_____click_____493_____255933884,"T'was exploring and ran across this pull.  Interestingly, in my own packages I have recently stripped out all things Tox entirely, as Travis already provides Python language matrix options.  Previously using `tox-travis` to translate that through, but then I realized I didn't need to create a new venv within my existing venv (adding more than 700 files) just to run `setup.py register sdist bdist_wheel upload`, plus that Tox utterly broke for a while making my tests undiscoverable.

On the regenerating documentation front, Make has built-in change tracking and dependency collection.  I.e. it's smart enough to not regenerate docs unless needed, or, [not re-run `setup.py develop` unless the metadata has actually changed](https://github.com/marrow/cinje/blob/develop/Makefile#L27), etc.  It's the mature build system that Tox is not.  (In a similar way that Tox is the test isolation framework that Make is not.)  As a developer dependency, Make is universal.",True,True,13,1265610.9
pallets_____click_____493,2016-10-25T08:25:29Z,True,pallets_____click_____493_____255970206,"@amcgregor well, how do i as a developer run a travis matrix locally - thats the mian point of tox - local execution so i can test my changes locally, directly without the internet

while i am not exactly happy with the tox syntax either, its still completely beating any other tooling i have seen for that

also its not just about python versions, but also about matrices with dependencies/versions of dependencies

my experience with make is pretty much, that it is not up to par even remotely as soon as a matrix comes into play

",True,True,13,1265610.9
pallets_____click_____493,2016-10-25T12:57:58Z,True,pallets_____click_____493_____256027010,Abandoning tox was never up for debate.,True,True,13,1265610.9
pallets_____click_____493,2016-10-25T14:25:56Z,True,pallets_____click_____493_____256050038,"> Abandoning tox was never up for debate.

I'm very sorry people stopped reading at the anecdote.

I'm against the idea of this pull request to force Tox to do things it was not meant to do in the name of purity or out of some distaste of make simply because it's a technology that is older than a bulk of developers in the industry.  To quote:

> It's the mature build system that Tox is not. (In a similar way that Tox is the test isolation framework that Make is not.)

Use the right tool for the right job, is all.  The majority of your reply @RonnyPfannschmidt, seems based on the presumption that I'm suggesting removal of Tox. Which I am not.

```
[testenv:upload-docs]
...

[testenv:release]
...
```

Those are pinned environments pretending to be phony Make targets, not build matrix ones, so I really don't grok:

> its not just about python versions, but also about matrices with dependencies/versions of dependencies

When clearly, the _automation_ part has nothing to do with matrices.  Or dependencies.  Or versions of dependencies.  Excluding the cases where it actually could, _if using Make_.  (E.g. dependent metadata rebuilding, documentation rebuilding only if source files were updated, etc.)",True,True,13,1265610.9
pallets_____click_____493,2016-10-25T14:36:13Z,True,pallets_____click_____493_____256053086,"Thanks for making your point clear (I agree).

>I'm very sorry people stopped reading at the anecdote.

You didn't specify your concrete suggestion at all and instead aimed at what seemed like a direct comparison between make and tox, so I was left to guess. Implying that people are too lazy to understand a point you initially didn't make is rude.",True,True,13,1265610.9
pallets_____click_____493,2016-10-25T14:37:02Z,True,pallets_____click_____493_____256053343,"@amcgregor i see what you mean, now - tox is indeed not meant for that automation, but does it already more portable than make (hello windows)

i actually plan to add this to tox in a more complete manner (for stuff like linters its also very sensible)",True,True,13,1265610.9
pallets_____click_____493,2016-10-25T14:57:31Z,True,pallets_____click_____493_____256059659,"http://gnuwin32.sourceforge.net/packages/make.htm — same version that came bundled with Xcode.   One problem solved after a two second Google search.

Tox and Make automation are ""developers of the library"" tools, not ""users of the library"" tools, i.e. needed to work on Pallets, but not use Pallets.  This makes such strict removal of non-Python dependency silly, as the target audience that would benefit from it is minuscule, and should actually already have a better environment (with proper tooling) set up anyway.  There's also the fact that of the two phony make targets, upload-docs and release, neither are for general use.  Only for use by maintainers of the package, an even smaller target demographic.

Then there's the whole ""creating a venv even when one is not necessary"" aspect.  After invoking those two tox commands you'll end up with more than 1500 files across two venvs. The inefficiency and waste people find acceptable in the name of purity I just don't comprehend.  All of that construction and maintenance time, and disk space (which, in my case, is actually cloud-backed storage, so every file that changes represents an upload) adds up.

On the linting front, a little `pytest-flakes` goes a long way, especially when combined with [`pre-commit`](http://pre-commit.com) ([example config](https://github.com/marrow/cinje/blob/develop/.pre-commit-config.yaml)).  (And yes, it's Python. ;)",True,True,13,1265610.9
ManageIQ/manageiq/11691,2016-10-25T15:57:11Z,False,580f80de6480fddcb5afa982,@gmcculloug Any thoughts on what else this might need?,True,False,72,539068.1666666666
pallets_____click_____493,2016-10-25T16:06:20Z,True,pallets_____click_____493_____256080746,"as far as i can tell you propose a less automated setup that a developer manually has to set up to get to work ^^ including lots of local plugins/modifications that affect results

personally i never ever want to deal with projects making such a setup the only option,
in my prior experiences that made ""works for me"" easy and ""works for everyone"" hard

and i do projects broad consumption, so every step that someone could mess up i want to see automated and easy to take on with the least amount of initial tooling, googling and hand-installing

as such, the combination of tools you propose really just do not fit that philosophy off-hand
and this discussion is starting to derail the actual pr",True,True,13,1265610.9
pallets_____click_____493,2016-10-25T16:46:33Z,True,pallets_____click_____493_____256091912,"> including lots of local plugins/modifications that affect results

~~Wat?~~  Actually, I don't want to know.  If you see _that_ in a two-target Makefile, with no ""plugins"" or ""modification"", used only by maintainers, I don't know what I can say.",True,True,13,1265610.9
ManageIQ/manageiq/12070,2016-10-25T20:42:22Z,False,580fc3b46480fde6f2092b6e,"<rubocop />Checked commit https://github.com/mansam/manageiq/commit/6a79e65ebe96e5e269c8feb469fcd1dd34adf3b5 with ruby 2.2.5, rubocop 0.37.2, and haml-lint 0.16.1
9 files checked, 16 offenses detected

**app/controllers/application_controller/miq_request_methods.rb**
- [ ] :exclamation: - [Line 1024](https://github.com/mansam/manageiq/blob/6a79e65ebe96e5e269c8feb469fcd1dd34adf3b5/app/controllers/application_controller/miq_request_methods.rb#L1024), Col 47 - [Style/ExtraSpacing](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Style/ExtraSpacing) - Unnecessary spacing detected.
- [ ] :exclamation: - [Line 793](https://github.com/mansam/manageiq/blob/6a79e65ebe96e5e269c8feb469fcd1dd34adf3b5/app/controllers/application_controller/miq_request_methods.rb#L793), Col 49 - [Style/ExtraSpacing](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Style/ExtraSpacing) - Unnecessary spacing detected.
- [ ] :grey_exclamation: - [Line 158](https://github.com/mansam/manageiq/blob/6a79e65ebe96e5e269c8feb469fcd1dd34adf3b5/app/controllers/application_controller/miq_request_methods.rb#L158), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [126/120]
- [ ] :grey_exclamation: - [Line 555](https://github.com/mansam/manageiq/blob/6a79e65ebe96e5e269c8feb469fcd1dd34adf3b5/app/controllers/application_controller/miq_request_methods.rb#L555), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [178/120]
- [ ] :grey_exclamation: - [Line 557](https://github.com/mansam/manageiq/blob/6a79e65ebe96e5e269c8feb469fcd1dd34adf3b5/app/controllers/application_controller/miq_request_methods.rb#L557), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [144/120]
- [ ] :grey_exclamation: - [Line 577](https://github.com/mansam/manageiq/blob/6a79e65ebe96e5e269c8feb469fcd1dd34adf3b5/app/controllers/application_controller/miq_request_methods.rb#L577), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [145/120]
- [ ] :grey_exclamation: - [Line 579](https://github.com/mansam/manageiq/blob/6a79e65ebe96e5e269c8feb469fcd1dd34adf3b5/app/controllers/application_controller/miq_request_methods.rb#L579), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [122/120]
- [ ] :grey_exclamation: - [Line 793](https://github.com/mansam/manageiq/blob/6a79e65ebe96e5e269c8feb469fcd1dd34adf3b5/app/controllers/application_controller/miq_request_methods.rb#L793), Col 15 - [Metrics/BlockNesting](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/BlockNesting) - Avoid more than 3 levels of block nesting.
- [ ] :grey_exclamation: - [Line 799](https://github.com/mansam/manageiq/blob/6a79e65ebe96e5e269c8feb469fcd1dd34adf3b5/app/controllers/application_controller/miq_request_methods.rb#L799), Col 15 - [Metrics/BlockNesting](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/BlockNesting) - Avoid more than 3 levels of block nesting.
- [ ] :grey_exclamation: - [Line 883](https://github.com/mansam/manageiq/blob/6a79e65ebe96e5e269c8feb469fcd1dd34adf3b5/app/controllers/application_controller/miq_request_methods.rb#L883), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [125/120]
- [ ] :grey_exclamation: - [Line 958](https://github.com/mansam/manageiq/blob/6a79e65ebe96e5e269c8feb469fcd1dd34adf3b5/app/controllers/application_controller/miq_request_methods.rb#L958), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [152/120]

**app/views/miq_request/_pre_prov.html.haml**
- [ ] :warning: - [Line 11](https://github.com/mansam/manageiq/blob/6a79e65ebe96e5e269c8feb469fcd1dd34adf3b5/app/views/miq_request/_pre_prov.html.haml#L11) - Line is too long. [234/160]
- [ ] :warning: - [Line 7](https://github.com/mansam/manageiq/blob/6a79e65ebe96e5e269c8feb469fcd1dd34adf3b5/app/views/miq_request/_pre_prov.html.haml#L7) - Line is too long. [225/160]
- [ ] :warning: - [Line 9](https://github.com/mansam/manageiq/blob/6a79e65ebe96e5e269c8feb469fcd1dd34adf3b5/app/views/miq_request/_pre_prov.html.haml#L9) - Line is too long. [228/160]

**app/views/miq_request/_prov_volume_grid.html.haml**
- [ ] :warning: - [Line 20](https://github.com/mansam/manageiq/blob/6a79e65ebe96e5e269c8feb469fcd1dd34adf3b5/app/views/miq_request/_prov_volume_grid.html.haml#L20) - Avoid more than 3 levels of block nesting.

**app/views/miq_request/_prov_volume_snapshot_grid.html.haml**
- [ ] :warning: - [Line 20](https://github.com/mansam/manageiq/blob/6a79e65ebe96e5e269c8feb469fcd1dd34adf3b5/app/views/miq_request/_prov_volume_snapshot_grid.html.haml#L20) - Avoid more than 3 levels of block nesting.
",True,False,7,120980.45
ManageIQ/manageiq/12070,2016-10-25T21:27:26Z,False,580fce466480fde5488fef83,"<rubocop />Checked commit https://github.com/mansam/manageiq/commit/80b486e08e14b4f75a409b3d8935e38e39c8410a with ruby 2.2.5, rubocop 0.37.2, and haml-lint 0.16.1
9 files checked, 15 offenses detected

**app/controllers/application_controller/miq_request_methods.rb**
- [ ] :exclamation: - [Line 1023](https://github.com/mansam/manageiq/blob/80b486e08e14b4f75a409b3d8935e38e39c8410a/app/controllers/application_controller/miq_request_methods.rb#L1023), Col 47 - [Style/ExtraSpacing](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Style/ExtraSpacing) - Unnecessary spacing detected.
- [ ] :exclamation: - [Line 792](https://github.com/mansam/manageiq/blob/80b486e08e14b4f75a409b3d8935e38e39c8410a/app/controllers/application_controller/miq_request_methods.rb#L792), Col 49 - [Style/ExtraSpacing](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Style/ExtraSpacing) - Unnecessary spacing detected.
- [ ] :grey_exclamation: - [Line 158](https://github.com/mansam/manageiq/blob/80b486e08e14b4f75a409b3d8935e38e39c8410a/app/controllers/application_controller/miq_request_methods.rb#L158), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [126/120]
- [ ] :grey_exclamation: - [Line 555](https://github.com/mansam/manageiq/blob/80b486e08e14b4f75a409b3d8935e38e39c8410a/app/controllers/application_controller/miq_request_methods.rb#L555), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [178/120]
- [ ] :grey_exclamation: - [Line 557](https://github.com/mansam/manageiq/blob/80b486e08e14b4f75a409b3d8935e38e39c8410a/app/controllers/application_controller/miq_request_methods.rb#L557), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [144/120]
- [ ] :grey_exclamation: - [Line 577](https://github.com/mansam/manageiq/blob/80b486e08e14b4f75a409b3d8935e38e39c8410a/app/controllers/application_controller/miq_request_methods.rb#L577), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [145/120]
- [ ] :grey_exclamation: - [Line 792](https://github.com/mansam/manageiq/blob/80b486e08e14b4f75a409b3d8935e38e39c8410a/app/controllers/application_controller/miq_request_methods.rb#L792), Col 15 - [Metrics/BlockNesting](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/BlockNesting) - Avoid more than 3 levels of block nesting.
- [ ] :grey_exclamation: - [Line 798](https://github.com/mansam/manageiq/blob/80b486e08e14b4f75a409b3d8935e38e39c8410a/app/controllers/application_controller/miq_request_methods.rb#L798), Col 15 - [Metrics/BlockNesting](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/BlockNesting) - Avoid more than 3 levels of block nesting.
- [ ] :grey_exclamation: - [Line 882](https://github.com/mansam/manageiq/blob/80b486e08e14b4f75a409b3d8935e38e39c8410a/app/controllers/application_controller/miq_request_methods.rb#L882), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [125/120]
- [ ] :grey_exclamation: - [Line 957](https://github.com/mansam/manageiq/blob/80b486e08e14b4f75a409b3d8935e38e39c8410a/app/controllers/application_controller/miq_request_methods.rb#L957), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [152/120]

**app/views/miq_request/_pre_prov.html.haml**
- [ ] :warning: - [Line 12](https://github.com/mansam/manageiq/blob/80b486e08e14b4f75a409b3d8935e38e39c8410a/app/views/miq_request/_pre_prov.html.haml#L12) - Line is too long. [225/160]
- [ ] :warning: - [Line 14](https://github.com/mansam/manageiq/blob/80b486e08e14b4f75a409b3d8935e38e39c8410a/app/views/miq_request/_pre_prov.html.haml#L14) - Line is too long. [228/160]
- [ ] :warning: - [Line 16](https://github.com/mansam/manageiq/blob/80b486e08e14b4f75a409b3d8935e38e39c8410a/app/views/miq_request/_pre_prov.html.haml#L16) - Line is too long. [234/160]

**app/views/miq_request/_prov_volume_grid.html.haml**
- [ ] :warning: - [Line 20](https://github.com/mansam/manageiq/blob/80b486e08e14b4f75a409b3d8935e38e39c8410a/app/views/miq_request/_prov_volume_grid.html.haml#L20) - Avoid more than 3 levels of block nesting.

**app/views/miq_request/_prov_volume_snapshot_grid.html.haml**
- [ ] :warning: - [Line 20](https://github.com/mansam/manageiq/blob/80b486e08e14b4f75a409b3d8935e38e39c8410a/app/views/miq_request/_prov_volume_snapshot_grid.html.haml#L20) - Avoid more than 3 levels of block nesting.
",True,False,7,120980.45
bioconda/bioconda-recipes/2718,2016-10-28T17:02:11Z,False,5813849a6480fd1c728e4dc7,I haven't look at this but is it intended to be `perl` and not `/usr/bin/env perl`,True,False,2,111.01666666666667
bioconda/bioconda-recipes/2718,2016-10-28T18:53:12Z,False,58139e9f6480fd193f76b7c4,It is a couple of perl one-liners in clxdo. I missed to do a global substitute so I am changing to use a patch file to make the changes more transparent. ,True,False,2,111.01666666666667
dotnet/core/331,2016-11-05T07:07:47Z,False,581d85476480fd0556c98d2b,"@richlander , look good?",True,False,1,0.0
Alluxio/alluxio/4316,2016-11-07T20:01:49Z,False,5820ddb66480fd04f8b5c79a,"Test FAILed.
Refer to this link for build results (access rights to CI server needed): 
https://amplab.cs.berkeley.edu/jenkins//job/Alluxio-Pull-Request-Builder/12202/<h2>Build result: FAILURE</span></h2>[...truncated 2121 lines...][JENKINS] Archiving /home/jenkins/workspace/Alluxio-Pull-Request-Builder/shell/pom.xml to org.alluxio/alluxio-shell/1.4.0-SNAPSHOT/alluxio-shell-1.4.0-SNAPSHOT.pom[JENKINS] Archiving /home/jenkins/workspace/Alluxio-Pull-Request-Builder/underfs/oss/pom.xml to org.alluxio/alluxio-underfs-oss/1.4.0-SNAPSHOT/alluxio-underfs-oss-1.4.0-SNAPSHOT.pom[JENKINS] Archiving /home/jenkins/workspace/Alluxio-Pull-Request-Builder/underfs/oss/target/alluxio-underfs-oss-1.4.0-SNAPSHOT.jar to org.alluxio/alluxio-underfs-oss/1.4.0-SNAPSHOT/alluxio-underfs-oss-1.4.0-SNAPSHOT.jar[JENKINS] Archiving /home/jenkins/workspace/Alluxio-Pull-Request-Builder/underfs/oss/target/alluxio-underfs-oss-1.4.0-SNAPSHOT-sources.jar to org.alluxio/alluxio-underfs-oss/1.4.0-SNAPSHOT/alluxio-underfs-oss-1.4.0-SNAPSHOT-sources.jar[JENKINS] Archiving /home/jenkins/workspace/Alluxio-Pull-Request-Builder/keyvalue/client/pom.xml to org.alluxio/alluxio-keyvalue-client/1.4.0-SNAPSHOT/alluxio-keyvalue-client-1.4.0-SNAPSHOT.pom[JENKINS] Archiving /home/jenkins/workspace/Alluxio-Pull-Request-Builder/underfs/hdfs/pom.xml to org.alluxio/alluxio-underfs-hdfs/1.4.0-SNAPSHOT/alluxio-underfs-hdfs-1.4.0-SNAPSHOT.pom[JENKINS] Archiving /home/jenkins/workspace/Alluxio-Pull-Request-Builder/underfs/hdfs/target/alluxio-underfs-hdfs-1.4.0-SNAPSHOT.jar to org.alluxio/alluxio-underfs-hdfs/1.4.0-SNAPSHOT/alluxio-underfs-hdfs-1.4.0-SNAPSHOT.jar[JENKINS] Archiving /home/jenkins/workspace/Alluxio-Pull-Request-Builder/underfs/hdfs/target/alluxio-underfs-hdfs-1.4.0-SNAPSHOT-sources.jar to org.alluxio/alluxio-underfs-hdfs/1.4.0-SNAPSHOT/alluxio-underfs-hdfs-1.4.0-SNAPSHOT-sources.jar[JENKINS] Archiving /home/jenkins/workspace/Alluxio-Pull-Request-Builder/underfs/swift/pom.xml to org.alluxio/alluxio-underfs-swift/1.4.0-SNAPSHOT/alluxio-underfs-swift-1.4.0-SNAPSHOT.pom[JENKINS] Archiving /home/jenkins/workspace/Alluxio-Pull-Request-Builder/underfs/swift/target/alluxio-underfs-swift-1.4.0-SNAPSHOT.jar to org.alluxio/alluxio-underfs-swift/1.4.0-SNAPSHOT/alluxio-underfs-swift-1.4.0-SNAPSHOT.jar[JENKINS] Archiving /home/jenkins/workspace/Alluxio-Pull-Request-Builder/underfs/swift/target/alluxio-underfs-swift-1.4.0-SNAPSHOT-sources.jar to org.alluxio/alluxio-underfs-swift/1.4.0-SNAPSHOT/alluxio-underfs-swift-1.4.0-SNAPSHOT-sources.jar[JENKINS] Archiving /home/jenkins/workspace/Alluxio-Pull-Request-Builder/underfs/s3a/pom.xml to org.alluxio/alluxio-underfs-s3a/1.4.0-SNAPSHOT/alluxio-underfs-s3a-1.4.0-SNAPSHOT.pom[JENKINS] Archiving /home/jenkins/workspace/Alluxio-Pull-Request-Builder/underfs/s3a/target/alluxio-underfs-s3a-1.4.0-SNAPSHOT.jar to org.alluxio/alluxio-underfs-s3a/1.4.0-SNAPSHOT/alluxio-underfs-s3a-1.4.0-SNAPSHOT.jar[JENKINS] Archiving /home/jenkins/workspace/Alluxio-Pull-Request-Builder/underfs/s3a/target/alluxio-underfs-s3a-1.4.0-SNAPSHOT-sources.jar to org.alluxio/alluxio-underfs-s3a/1.4.0-SNAPSHOT/alluxio-underfs-s3a-1.4.0-SNAPSHOT-sources.jar[JENKINS] Archiving /home/jenkins/workspace/Alluxio-Pull-Request-Builder/examples/pom.xml to org.alluxio/alluxio-examples/1.4.0-SNAPSHOT/alluxio-examples-1.4.0-SNAPSHOT.pom[JENKINS] Archiving /home/jenkins/workspace/Alluxio-Pull-Request-Builder/core/server/pom.xml to org.alluxio/alluxio-core-server/1.4.0-SNAPSHOT/alluxio-core-server-1.4.0-SNAPSHOT.pom[JENKINS] Archiving /home/jenkins/workspace/Alluxio-Pull-Request-Builder/keyvalue/common/pom.xml to org.alluxio/alluxio-keyvalue-common/1.4.0-SNAPSHOT/alluxio-keyvalue-common-1.4.0-SNAPSHOT.pom[JENKINS] Archiving /home/jenkins/workspace/Alluxio-Pull-Request-Builder/underfs/pom.xml to org.alluxio/alluxio-underfs/1.4.0-SNAPSHOT/alluxio-underfs-1.4.0-SNAPSHOT.pom[JENKINS] Archiving /home/jenkins/workspace/Alluxio-Pull-Request-Builder/underfs/glusterfs/pom.xml to org.alluxio/alluxio-underfs-glusterfs/1.4.0-SNAPSHOT/alluxio-underfs-glusterfs-1.4.0-SNAPSHOT.pom[JENKINS] Archiving /home/jenkins/workspace/Alluxio-Pull-Request-Builder/underfs/glusterfs/target/alluxio-underfs-glusterfs-1.4.0-SNAPSHOT.jar to org.alluxio/alluxio-underfs-glusterfs/1.4.0-SNAPSHOT/alluxio-underfs-glusterfs-1.4.0-SNAPSHOT.jar[JENKINS] Archiving /home/jenkins/workspace/Alluxio-Pull-Request-Builder/underfs/glusterfs/target/alluxio-underfs-glusterfs-1.4.0-SNAPSHOT-sources.jar to org.alluxio/alluxio-underfs-glusterfs/1.4.0-SNAPSHOT/alluxio-underfs-glusterfs-1.4.0-SNAPSHOT-sources.jar[JENKINS] Archiving /home/jenkins/workspace/Alluxio-Pull-Request-Builder/integration/pom.xml to org.alluxio/alluxio-integration/1.4.0-SNAPSHOT/alluxio-integration-1.4.0-SNAPSHOT.pom[JENKINS] Archiving /home/jenkins/workspace/Alluxio-Pull-Request-Builder/keyvalue/pom.xml to org.alluxio/alluxio-keyvalue/1.4.0-SNAPSHOT/alluxio-keyvalue-1.4.0-SNAPSHOT.pomchannel stopped
Test FAILed.",True,False,37,10112.616666666667
Alluxio/alluxio/4316,2016-11-07T20:01:49Z,False,5820ddb66480fd05a599ef27,Merged build finished. Test FAILed.,True,False,37,10112.616666666667
Alluxio/alluxio/4316,2016-11-07T21:42:01Z,False,5820f5336480fd05bd462ce7,Merged build finished. Test PASSed.,True,False,37,10112.616666666667
Alluxio/alluxio/4316,2016-11-07T21:42:02Z,False,5820f5326480fd047b9d8a3b,"Test PASSed.
Refer to this link for build results (access rights to CI server needed): 
https://amplab.cs.berkeley.edu/jenkins//job/Alluxio-Pull-Request-Builder/12205/
Test PASSed.",True,False,37,10112.616666666667
Alluxio/alluxio/4316,2016-11-07T21:42:03Z,False,5820f5316480fd0e54fbf3cd,"Running checks...
* Valid pull request title: **true**
* Contains JIRA link: **true**
* Commits associated with Github account: **true**

All checks passed!
",True,False,37,10112.616666666667
Alluxio/alluxio/4316,2016-11-07T21:42:04Z,False,5820f5316480fd0556cb0dae,"Running checks...
* Valid pull request title: **true**
* Contains JIRA link: **true**
* Commits associated with Github account: **true**

All checks passed!
",True,False,37,10112.616666666667
Alluxio/alluxio/4316,2016-11-08T20:41:42Z,False,5822388c6480fd053e7404df,@gpang @apc999,True,False,37,10112.616666666667
Alluxio/alluxio/4316,2016-11-08T20:41:43Z,False,5822388e6480fd0a158d7214,"Running checks...
* Valid pull request title: **true**
* Contains JIRA link: **true**
* Commits associated with Github account: **true**

All checks passed!
",True,False,37,10112.616666666667
ManageIQ/manageiq/12070,2016-11-10T16:57:27Z,False,5824a6f96480fd0526b89378,<pr_mergeability_checker />This pull request is not mergeable.  Please rebase and repush.,True,False,7,120980.45
Alluxio/alluxio/4316,2016-11-10T22:27:54Z,False,5824f5d66480fd0e54fe1294,will this cause the file system to spend one more thread after startup consistency check?,True,False,37,10112.616666666667
xbmc/xbmc/10909,2016-11-10T22:46:12Z,False,5824f8bd6480fd05bd484ea6,"@hudokkow @fetzerch as partyl discussed on IRC. If there is something in cmake that can get us nearer to the goal: separate platforms from mainline core code, please tell. I find that override way totally overcomplicated, it only works for exactly one design pattern (factory with inheritance).

besides that I mostly have done something wrong. Will lett jenkins run over night.

jenkins build this please",True,False,12,952.7666666666667
Alluxio/alluxio/4316,2016-11-10T23:23:35Z,False,5825017d6480fd0744622279,"Yes, the thread will just be left in the pool. An alternative way would be to use a separate thread, but I think this thread can be reused in the future if we want to do something like update the status.",True,False,37,10112.616666666667
Alluxio/alluxio/4316,2016-11-11T00:21:53Z,False,58250f326480fd057ecba401,LGTM,True,False,37,10112.616666666667
Alluxio/alluxio/4316,2016-11-11T00:23:06Z,False,58250f6d6480fd0cc55fbcb0,"is it necessary to have `sbin/` now to be different from `bin/` for commands that only admins should run, like `checkConsistency`?",True,False,37,10112.616666666667
Alluxio/alluxio/4316,2016-11-11T00:23:07Z,False,58250f6d6480fd050bf8c8f3,"Running checks...
* Valid pull request title: **true**
* Contains JIRA link: **true**
* Commits associated with Github account: **true**

All checks passed!
",True,False,37,10112.616666666667
xbmc/xbmc/10909,2016-11-11T00:54:34Z,False,582516d16480fd057ecba6db,"or, add a hidden value in settings
SETTING_AUDIOOUTPUT_AC3TRANSCODEBITRATE, then use android.xml to override it.

Less code, much less complications, no extra files and design pattern concerns.",True,False,12,952.7666666666667
Alluxio/alluxio/4316,2016-11-11T02:01:39Z,False,582526876480fd0eb3202bd7,"Test FAILed.
Refer to this link for build results (access rights to CI server needed): 
https://amplab.cs.berkeley.edu/jenkins//job/Alluxio-Pull-Request-Builder/12239/
Test FAILed.",True,False,37,10112.616666666667
Alluxio/alluxio/4316,2016-11-11T02:01:39Z,False,582526896480fd0a158ef300,Merged build finished. Test FAILed.,True,False,37,10112.616666666667
xbmc/xbmc/10909,2016-11-11T06:12:22Z,False,582561546480fd0556cd587f,"> or, add a hidden value in settings

certainly not",True,False,12,952.7666666666667
apache/spark/15849,2016-11-11T07:22:32Z,False,582571c16480fd05a59c4fab,**[Test build #68510 has started](https://amplab.cs.berkeley.edu/jenkins/job/SparkPullRequestBuilder/68510/consoleFull)** for PR 15849 at commit [`82a4487`](https://github.com/apache/spark/commit/82a4487e5f7d4fe7f7a375cbdf86554882bcdf59).,True,False,41,7377.133333333333
apache/spark/15849,2016-11-11T07:23:29Z,False,582571f66480fd0b58225952,"**[Test build #68510 has finished](https://amplab.cs.berkeley.edu/jenkins/job/SparkPullRequestBuilder/68510/consoleFull)** for PR 15849 at commit [`82a4487`](https://github.com/apache/spark/commit/82a4487e5f7d4fe7f7a375cbdf86554882bcdf59).
 * This patch **fails RAT tests**.
 * This patch merges cleanly.
 * This patch adds no public classes.",True,False,41,7377.133333333333
apache/spark/15849,2016-11-11T07:23:30Z,False,582571f66480fd05fc18384e,Merged build finished. Test FAILed.,True,False,41,7377.133333333333
apache/spark/15849,2016-11-11T07:23:31Z,False,582571f66480fd090d28e68d,"Test FAILed.
Refer to this link for build results (access rights to CI server needed): 
https://amplab.cs.berkeley.edu/jenkins//job/SparkPullRequestBuilder/68510/
Test FAILed.",True,False,41,7377.133333333333
xbmc/xbmc/10909,2016-11-11T07:34:33Z,False,582574906480fd0744624f64,"It built, but it did not pickup the overrides. Need a bit help here from the cmake guys. I thought the new generic approach here would be: https://github.com/xbmc/xbmc/pull/10909/commits/d99e58ae195e4112582031d4acad9749fe74c218 in combination with: https://github.com/xbmc/xbmc/pull/10909/commits/db5533b15eec3d77a227c37375b2ede9409387ce#diff-942151f62568419073e4e7dee3bf440bR31

but it seems PLATFORM_OVERRIDE does not get set.

Any ideas?",True,False,12,952.7666666666667
xbmc/xbmc/10909,2016-11-11T07:44:27Z,False,582579a26480fd05bd488082,"should be possible to omit both ctor/dtor. virtual destructor is inherited from the base. if you want to keep the dtor, i'd mark it override.",True,False,12,952.7666666666667
xbmc/xbmc/10909,2016-11-11T07:44:39Z,False,582579a26480fd053e75a82d,"The define PLATFORM_OVERRIDE has to be unique, maybe PLATFORM_OVERRIDE_AE_ENCODERS. (see https://github.com/xbmc/xbmc/pull/10897). Use the same below in the ifdef.

Also OVERRIDES_CPP/OVERRIDES_H are not added to SOURCES/HEADERS and are therefore not compiled. If the overrides are not dependent on any option, this should do:

    if(OVERRIDES_CPP)
      list(APPEND SOURCES ${OVERRIDES_CPP})
      list(APPEND HEADERS ${OVERRIDES_H})
      target_compile_...

For debugging if your code is picked up, add a `message(STATUS ""Use AE Encoder override"")` or compile with `make VERBOSE=1` to check if the define is passed to the compiler.",True,False,12,952.7666666666667
xbmc/xbmc/10909,2016-11-11T08:07:58Z,False,58257c646480fd0eb3204d51,Thx for the feedback I added some stuff. Btw. aren't the headers missing here: https://github.com/fetzerch/xbmc/blob/8108034415de1882e127ec64d0de9918cf236d2e/xbmc/cores/VideoPlayer/Process/Makefile.in#L9,True,False,12,952.7666666666667
xbmc/xbmc/10909,2016-11-11T08:40:22Z,False,582583fa6480fd0a5c4be560,"-1 
Agree with @davilla 

As said and ignored on Slack, it needs to be a advanced setting or even a plain ifdef.
This is a dogmatic, sub-optimal and over-engineered, imho.",True,False,12,952.7666666666667
xbmc/xbmc/10909,2016-11-11T08:56:29Z,False,582587c46480fd0cc55feaad,there won't be any settings abuse in code I maintain,True,False,12,952.7666666666667
xbmc/xbmc/10909,2016-11-11T09:04:39Z,False,582589bd6480fd057ecbd4ca,"I don't see any abuse in replacing a hardcoded value by a setting, rather than having an hardcoded value per platform in code...",True,False,12,952.7666666666667
xbmc/xbmc/10909,2016-11-11T09:08:15Z,False,58258a856480fd0b5822648b,"@fetzerch told me on IRC that he has a solution in mind that works more easy without any ifdefs. I will close that PR here. For the record: I've been here, I implemented it. I understand how it works, how I don't like it at all and why can be read in slack.",True,False,12,952.7666666666667
apache/spark/15849,2016-11-11T09:37:33Z,False,582591676480fd090d28f4d7,**[Test build #68517 has started](https://amplab.cs.berkeley.edu/jenkins/job/SparkPullRequestBuilder/68517/consoleFull)** for PR 15849 at commit [`220ad02`](https://github.com/apache/spark/commit/220ad02bf417ac598e4d9b3521923b4f32088509).,True,False,41,7377.133333333333
apache/spark/15849,2016-11-11T09:43:45Z,False,582592d56480fd0f18d65f23,"**[Test build #68517 has finished](https://amplab.cs.berkeley.edu/jenkins/job/SparkPullRequestBuilder/68517/consoleFull)** for PR 15849 at commit [`220ad02`](https://github.com/apache/spark/commit/220ad02bf417ac598e4d9b3521923b4f32088509).
 * This patch **fails to build**.
 * This patch merges cleanly.
 * This patch adds no public classes.",True,False,41,7377.133333333333
apache/spark/15849,2016-11-11T09:43:47Z,False,582592dc6480fd04908cda35,Merged build finished. Test FAILed.,True,False,41,7377.133333333333
apache/spark/15849,2016-11-11T09:43:48Z,False,582592dc6480fd0556cd6ee6,"Test FAILed.
Refer to this link for build results (access rights to CI server needed): 
https://amplab.cs.berkeley.edu/jenkins//job/SparkPullRequestBuilder/68517/
Test FAILed.",True,False,41,7377.133333333333
xbmc/xbmc/10909,2016-11-11T14:38:58Z,False,5825d8056480fd089b2be1db,"There are plenty of hidden settings values right now. They work just fine, as does the existing platform override method for settings. I don't see this as an abuse of settings at all, settings values can be hidden for all, hidden for specific platforms, or hidden/shown depending on runtime setup. 
",True,False,12,952.7666666666667
Alluxio/alluxio/4316,2016-11-11T18:44:14Z,False,582611876480fd0b20262948,"@apc999 I think it makes sense to organize our shell tools better. There are several tools currently which require admin privileges, ie. start-all with SudoMount. In addition, the alluxio command contains many cluster management utilities such as rsyncing as well as dev tools like generating thrift or proto. I've created https://alluxio.atlassian.net/browse/ALLUXIO-2422 to track this.",True,False,37,10112.616666666667
Alluxio/alluxio/4316,2016-11-12T02:00:42Z,False,58267a456480fd0a5c4c5a58,lowercase with no period for *consistency* with the rest of the file,True,False,37,10112.616666666667
Alluxio/alluxio/4316,2016-11-12T02:01:26Z,False,58267a456480fd065e02503c,could this be inlined?,True,False,37,10112.616666666667
Alluxio/alluxio/4316,2016-11-12T02:01:55Z,False,58267a456480fd057ecc4aff,should we log this? when is it not a real problem?,True,False,37,10112.616666666667
Alluxio/alluxio/4316,2016-11-12T02:05:27Z,False,58267a456480fd0b9739c7f1,"nit: class-level comment is usually written as a description, not imperative tense",True,False,37,10112.616666666667
Alluxio/alluxio/4316,2016-11-12T02:07:26Z,False,58267a456480fd05a59cce3b,remove `@Nullable`,True,False,37,10112.616666666667
Alluxio/alluxio/4316,2016-11-12T02:08:00Z,False,58267a456480fd04ba19d776,`Constants.MINUTE_MS`,True,False,37,10112.616666666667
Alluxio/alluxio/4316,2016-11-12T02:08:33Z,False,58267a456480fd089b2c2d69,nit: blank line before `@param` section,True,False,37,10112.616666666667
PrairieLearn/PrairieLearn/408,2016-11-12T17:35:04Z,False,582752cf6480fd04a6ca5b70,"When I do Question 1 in HW1 for the exampleCourse (that is, `TPL 101` -> `HW1` -> `HW1.1. Addition of vectors in Cartesian coordinates`) and I submit an incorrect answer, then the true answer is not rendered, due to the following error on the browser console:

```
Uncaught TypeError: Cannot read property '0' of undefined
    at CalculationClient.renderSubmission (questionCalculation.js:77)
```

It looks like it's trying to render a submission history, but it doesn't exist? Is this just a problem because submission history isn't implemented yet for `Homework` assessments?

At the moment only a single `submission` is allowed for a given `variant` of a Homework question, but I think we will soon add the ability to allow multiple submissions per variant, even for homeworks. This will be useful for coding questions where you will want to repeatedly try the same variant if you have compile errors, for example. Anyway, this means that it would be good to support submission history rendering for Homeworks as well as Exams.",True,False,31,35608.71666666667
PrairieLearn/PrairieLearn/408,2016-11-12T18:35:53Z,False,582761126480fd0cc5609570,"I see the problem here -- when I updated userInstanceQuestionExam.ejs to handle past submission rendering, I added a container with a list of ""submission-body"" objects, and put one submission into each (see /v2/public/localscripts/question.js line 20 ). I didn't change userInstanceQuestionHomework.ejs, but there was already such a block",True,False,31,35608.71666666667
PrairieLearn/PrairieLearn/408,2016-11-12T18:45:21Z,False,582763436480fd07446311af,"Do you want to go ahead and implement past submission rendering for homework on this PR, or do we want to hold off?",True,False,31,35608.71666666667
PrairieLearn/PrairieLearn/408,2016-11-12T19:41:13Z,False,5827705e6480fd0b40a1039a,"The last commit adds submission rendering for homework questions; I don't have a test case for a homework problem allows multiple submissions, but this works correctly for the single submission model we currently have.",True,False,31,35608.71666666667
PrairieLearn/PrairieLearn/408,2016-11-12T21:25:54Z,False,582788f16480fd04908d9d26,"I get:

```
2016-11-12T21:25:14.851Z - error: Error page msg=/Users/mwest/git/PrairieLearn/v2/pages/userInstanceQuestionHomework/userInstanceQuestionHomework.ejs:80
    78|             <% } %>
    79|
 >> 80|             <% if (showAllSubmissions) { %>
    81|             <div class=""panel-group"">
    82|                 <% allSubmissions.forEach(function(thisSubmission, sNum) {
    83|                     if (thisSubmission.correct === null) {

showAllSubmissions is not defined, stack=ReferenceError: /Users/mwest/git/PrairieLearn/v2/pages/userInstanceQuestionHomework/userInstanceQuestionHomework.ejs:80
    78|             <% } %>
    79|
 >> 80|             <% if (showAllSubmissions) { %>
    81|             <div class=""panel-group"">
    82|                 <% allSubmissions.forEach(function(thisSubmission, sNum) {
    83|                     if (thisSubmission.correct === null) {

showAllSubmissions is not defined
    at eval (eval at <anonymous> (/Users/mwest/git/PrairieLearn/v2/node_modules/ejs/lib/ejs.js:485:12), <anonymous>:99:12)
    at returnedFn (/Users/mwest/git/PrairieLearn/v2/node_modules/ejs/lib/ejs.js:514:17)
    at View.exports.renderFile [as engine] (/Users/mwest/git/PrairieLearn/v2/node_modules/ejs/lib/ejs.js:358:31)
    at View.render (/Users/mwest/git/PrairieLearn/v2/node_modules/express/lib/view.js:126:8)
    at tryRender (/Users/mwest/git/PrairieLearn/v2/node_modules/express/lib/application.js:639:10)
    at EventEmitter.render (/Users/mwest/git/PrairieLearn/v2/node_modules/express/lib/application.js:591:3)
    at ServerResponse.render (/Users/mwest/git/PrairieLearn/v2/node_modules/express/lib/response.js:961:7)
    at /Users/mwest/git/PrairieLearn/v2/pages/userInstanceQuestionHomework/userInstanceQuestionHomework.js:214:13
    at /Users/mwest/git/PrairieLearn/v2/pages/userInstanceQuestionHomework/userInstanceQuestionHomework.js:192:9
    at /Users/mwest/git/PrairieLearn/v2/node_modules/async/lib/async.js:726:13, data=undefined
```
",True,False,31,35608.71666666667
PrairieLearn/PrairieLearn/408,2016-11-12T23:43:15Z,False,5827a9176480fd0bd994eb14,"I'm not getting that error message on my set-up, so I'm not sure what might be preventing that from loading correctly. I store the value of showAllSubmissions in res.locals, where showTrueAnswer is located. Is the true answer block rendering on your set-up?",True,False,31,35608.71666666667
PrairieLearn/PrairieLearn/408,2016-11-13T06:46:14Z,False,58280c3d6480fd04d21741bd,"Got it -- it looks like my previous commit missed one of the files that needed to be updated (but, naturally, is updated on my local copy and so the code is working). This should (hopefully) eliminate the error you are seeing.",True,False,31,35608.71666666667
apache/spark/15849,2016-11-14T01:52:29Z,False,582918e26480fd0568300e3d,**[Test build #68592 has started](https://amplab.cs.berkeley.edu/jenkins/job/SparkPullRequestBuilder/68592/consoleFull)** for PR 15849 at commit [`effaead`](https://github.com/apache/spark/commit/effaeaddca2e90e091130439c96be54c6ef5a6c7).,True,False,41,7377.133333333333
apache/spark/15849,2016-11-14T01:53:55Z,False,582919376480fd053e770003,"**[Test build #68592 has finished](https://amplab.cs.berkeley.edu/jenkins/job/SparkPullRequestBuilder/68592/consoleFull)** for PR 15849 at commit [`effaead`](https://github.com/apache/spark/commit/effaeaddca2e90e091130439c96be54c6ef5a6c7).
 * This patch **fails Scala style tests**.
 * This patch merges cleanly.
 * This patch adds no public classes.",True,False,41,7377.133333333333
apache/spark/15849,2016-11-14T01:53:56Z,False,5829193d6480fd05a59da45b,Merged build finished. Test FAILed.,True,False,41,7377.133333333333
apache/spark/15849,2016-11-14T01:53:57Z,False,5829193d6480fd090d2a460c,"Test FAILed.
Refer to this link for build results (access rights to CI server needed): 
https://amplab.cs.berkeley.edu/jenkins//job/SparkPullRequestBuilder/68592/
Test FAILed.",True,False,41,7377.133333333333
apache/spark/15849,2016-11-14T02:02:29Z,False,58291b406480fd0bd995674d,**[Test build #68593 has started](https://amplab.cs.berkeley.edu/jenkins/job/SparkPullRequestBuilder/68593/consoleFull)** for PR 15849 at commit [`f8d7e16`](https://github.com/apache/spark/commit/f8d7e16ee6fe7714eb7416dac6f8dbdd284c2d92).,True,False,41,7377.133333333333
apache/spark/15849,2016-11-14T02:14:00Z,False,58291def6480fd053e77023a,"@koeninger want to review this?
",True,False,41,7377.133333333333
apache/spark/15849,2016-11-14T02:33:47Z,False,5829228f6480fd09ce3cab7c,"**[Test build #68593 has finished](https://amplab.cs.berkeley.edu/jenkins/job/SparkPullRequestBuilder/68593/consoleFull)** for PR 15849 at commit [`f8d7e16`](https://github.com/apache/spark/commit/f8d7e16ee6fe7714eb7416dac6f8dbdd284c2d92).
 * This patch passes all tests.
 * This patch merges cleanly.
 * This patch adds no public classes.",True,False,41,7377.133333333333
apache/spark/15849,2016-11-14T02:34:32Z,False,582922be6480fd090d2a49ee,"Test PASSed.
Refer to this link for build results (access rights to CI server needed): 
https://amplab.cs.berkeley.edu/jenkins//job/SparkPullRequestBuilder/68593/
Test PASSed.",True,False,41,7377.133333333333
apache/spark/15849,2016-11-14T02:34:32Z,False,582922be6480fd0bd9956ac6,Merged build finished. Test PASSed.,True,False,41,7377.133333333333
apache/spark/15849,2016-11-14T03:17:30Z,False,58292ccd6480fd057ecd36dc,**[Test build #68595 has started](https://amplab.cs.berkeley.edu/jenkins/job/SparkPullRequestBuilder/68595/consoleFull)** for PR 15849 at commit [`0abc93a`](https://github.com/apache/spark/commit/0abc93aa38d036e403f843fd6e41320da1ce5471).,True,False,41,7377.133333333333
apache/spark/15849,2016-11-14T03:19:16Z,False,58292d386480fd047ba10041,"**[Test build #68595 has finished](https://amplab.cs.berkeley.edu/jenkins/job/SparkPullRequestBuilder/68595/consoleFull)** for PR 15849 at commit [`0abc93a`](https://github.com/apache/spark/commit/0abc93aa38d036e403f843fd6e41320da1ce5471).
 * This patch **fails Python style tests**.
 * This patch merges cleanly.
 * This patch adds no public classes.",True,False,41,7377.133333333333
apache/spark/15849,2016-11-14T03:19:17Z,False,58292d3d6480fd0ac07f6580,"Test FAILed.
Refer to this link for build results (access rights to CI server needed): 
https://amplab.cs.berkeley.edu/jenkins//job/SparkPullRequestBuilder/68595/
Test FAILed.",True,False,41,7377.133333333333
apache/spark/15849,2016-11-14T03:19:17Z,False,58292d3d6480fd0e54ffa708,Merged build finished. Test FAILed.,True,False,41,7377.133333333333
apache/spark/15849,2016-11-14T03:32:49Z,False,582930646480fd09ce3cb1d7,**[Test build #68598 has started](https://amplab.cs.berkeley.edu/jenkins/job/SparkPullRequestBuilder/68598/consoleFull)** for PR 15849 at commit [`d1bb4a7`](https://github.com/apache/spark/commit/d1bb4a7aba3ec459f74d8da3e62ae3e84df7fa83).,True,False,41,7377.133333333333
apache/spark/15849,2016-11-14T03:35:00Z,False,582930eb6480fd0b20273f37,"**[Test build #68598 has finished](https://amplab.cs.berkeley.edu/jenkins/job/SparkPullRequestBuilder/68598/consoleFull)** for PR 15849 at commit [`d1bb4a7`](https://github.com/apache/spark/commit/d1bb4a7aba3ec459f74d8da3e62ae3e84df7fa83).
 * This patch **fails Python style tests**.
 * This patch merges cleanly.
 * This patch adds no public classes.",True,False,41,7377.133333333333
apache/spark/15849,2016-11-14T03:35:02Z,False,582930eb6480fd09ce3cb207,"Test FAILed.
Refer to this link for build results (access rights to CI server needed): 
https://amplab.cs.berkeley.edu/jenkins//job/SparkPullRequestBuilder/68598/
Test FAILed.",True,False,41,7377.133333333333
apache/spark/15849,2016-11-14T03:52:31Z,False,582935056480fd04ba1ac495,**[Test build #68599 has started](https://amplab.cs.berkeley.edu/jenkins/job/SparkPullRequestBuilder/68599/consoleFull)** for PR 15849 at commit [`e6a5367`](https://github.com/apache/spark/commit/e6a5367da19c341d69a60adda902596a1bf3d91e).,True,False,41,7377.133333333333
apache/spark/15849,2016-11-14T04:14:56Z,False,58293a436480fd0ac07f6adc,"**[Test build #68599 has finished](https://amplab.cs.berkeley.edu/jenkins/job/SparkPullRequestBuilder/68599/consoleFull)** for PR 15849 at commit [`e6a5367`](https://github.com/apache/spark/commit/e6a5367da19c341d69a60adda902596a1bf3d91e).
 * This patch passes all tests.
 * This patch merges cleanly.
 * This patch adds no public classes.",True,False,41,7377.133333333333
apache/spark/15849,2016-11-14T04:15:20Z,False,58293a616480fd09892483b9,Merged build finished. Test PASSed.,True,False,41,7377.133333333333
apache/spark/15849,2016-11-14T04:15:21Z,False,58293a616480fd089b2d19b2,"Test PASSed.
Refer to this link for build results (access rights to CI server needed): 
https://amplab.cs.berkeley.edu/jenkins//job/SparkPullRequestBuilder/68599/
Test PASSed.",True,False,41,7377.133333333333
scalameta/scalameta/542,2016-11-14T09:48:51Z,False,5829888a6480fd05fc19b87f,"This is an interesting proposition. I like the idea of replacing exceptions with regular values. However, some thoughts

* it's now under the responsibility of users to validate Trees, which means they could forget to validate their trees.
* invalid trees won't fail-fast anymore, which might make it harder to track down a bug.
* tree validation is already done in parsing/quasiquotes, so this would only affect manual tree construction
* we might want to introduce a another method `validateAll(implicit dialect: Dialect): Either[Seq[(Tree, Seq[String])], this.type]` that runs validate on all child nodes and includes the culprit tree with it's validation error messages. The error type is quite unwieldy so we might want to introduce some `Error` type with good pretty printing.

I am curious to know what @xeno-by thinks of this change.",True,False,13,104572.41666666667
scalameta/scalameta/542,2016-11-14T09:56:27Z,False,58298a506480fd0de9c92ff8,">tree validation is already done in parsing/quasiquotes, so this would only affect manual tree construction

Interesting. Doing validation in 2 places seems sub-optimal, so maybe the existing validation logic could be moved into here? Could you point me to an example of it?",True,False,13,104572.41666666667
scalameta/scalameta/542,2016-11-14T10:06:59Z,False,58298ccf6480fd0a15909b4f,"Okay, my bad, the same validation is not exactly run during parsing but rather we guard against it. For example,
```
> q""trait T(a: Int)""(dialects.Scala211)
cmd1.sc:1: traits or objects may not have parameters
val res1 = q""trait T(a: Int)""
                    ^
Compilation Failed
> q""trait T(a: Int)""(dialects.Dotty)
res1: Defn.Trait = trait T
```
We can do the validation during parsing because there we require a dialect. Quasiquotes use the parser to my best understanding.",True,False,13,104572.41666666667
scalameta/scalameta/542,2016-11-14T12:45:32Z,False,5829b1f56480fd05fc19cdf3,"Some validation checks need to be done at runtime, because at the time of parsing they cannot be checked. Although the validation in two different places may be suboptimal, it's key that invalid trees are catched as soon as possible, and as far as I know this is a feature of Scala Meta, not an implementation detail.
  
That being said, I would welcome the validate tree function. There could be an explicit option for those users that don't want Scala Meta to check for correct trees and that prefer to manually handle errors. But this option would coexist with the runtime checks that we perform right now, which I would suggest are enabled by default.",True,False,13,104572.41666666667
apache/spark/15849,2016-11-14T12:55:59Z,False,5829b5a96480fd098924bfc4,"This isn't really a list of topics for assign or subscribePattern. I'd say use a more general description, or stick to just subscribe",True,False,41,7377.133333333333
ManageIQ/manageiq/11691,2016-11-14T14:20:00Z,False,5829c8196480fd04908e7a5f,@gmcculloug Did you have a chance to look over this?,True,False,72,539068.1666666666
Alluxio/alluxio/4316,2016-11-14T14:27:32Z,False,5829c9ec6480fd0cc5616f61,"When will this check start running? Before or after the master recovers from the journal?

Is the master serving during the check? This means only read only operations would be possible during the check?

Also, how does this interact with standby masters becoming leader masters?",True,False,37,10112.616666666667
Alluxio/alluxio/4316,2016-11-14T17:18:18Z,False,5829f1df6480fd053e777389,"Updated, thanks.",True,False,37,10112.616666666667
Alluxio/alluxio/4316,2016-11-14T17:19:39Z,False,5829f2336480fd05a59e1b4f,"Updated, thanks.",True,False,37,10112.616666666667
Alluxio/alluxio/4316,2016-11-14T17:22:37Z,False,5829f2e06480fd047ba15eb2,"Good point, I've added a log message. I've also made a follow up task to expose this info to the user.",True,False,37,10112.616666666667
Alluxio/alluxio/4316,2016-11-14T17:23:30Z,False,582a20fb6480fd0a5c4dcb5c,"Updated, thanks.",True,False,37,10112.616666666667
Alluxio/alluxio/4316,2016-11-14T17:23:57Z,False,5829f3356480fd098924e70b,"Updated, thanks.",True,False,37,10112.616666666667
Alluxio/alluxio/4316,2016-11-14T17:24:11Z,False,5829f3416480fd0f18d82424,"Updated, thanks.",True,False,37,10112.616666666667
Alluxio/alluxio/4316,2016-11-14T17:24:16Z,False,5829f3466480fd0568308709,"Updated, thanks.",True,False,37,10112.616666666667
Alluxio/alluxio/4316,2016-11-14T17:25:14Z,False,5829f3806480fd0f18d8244d,"This check starts running only after the master is fully operational, so after journal recovery. The master is serving during the check, but only read operations would be permitted (ie. safe mode). When a standby master assumes leadership, the check will be rerun.",True,False,37,10112.616666666667
Alluxio/alluxio/4316,2016-11-14T17:35:28Z,False,5829f5e36480fd05683088a0,Merged build finished. Test FAILed.,True,False,37,10112.616666666667
Alluxio/alluxio/4316,2016-11-14T17:35:29Z,False,5829f5e36480fd050bfabc69,"Test FAILed.
Refer to this link for build results (access rights to CI server needed): 
https://amplab.cs.berkeley.edu/jenkins//job/Alluxio-Pull-Request-Builder/12272/<h2>Build result: FAILURE</span></h2>[...truncated 2821 lines...][JENKINS] Archiving /home/jenkins/workspace/Alluxio-Pull-Request-Builder/underfs/hdfs/target/alluxio-underfs-hdfs-1.4.0-SNAPSHOT-sources.jar to org.alluxio/alluxio-underfs-hdfs/1.4.0-SNAPSHOT/alluxio-underfs-hdfs-1.4.0-SNAPSHOT-sources.jar[JENKINS] Archiving /home/jenkins/workspace/Alluxio-Pull-Request-Builder/underfs/swift/pom.xml to org.alluxio/alluxio-underfs-swift/1.4.0-SNAPSHOT/alluxio-underfs-swift-1.4.0-SNAPSHOT.pom[JENKINS] Archiving /home/jenkins/workspace/Alluxio-Pull-Request-Builder/underfs/swift/target/alluxio-underfs-swift-1.4.0-SNAPSHOT.jar to org.alluxio/alluxio-underfs-swift/1.4.0-SNAPSHOT/alluxio-underfs-swift-1.4.0-SNAPSHOT.jar[JENKINS] Archiving /home/jenkins/workspace/Alluxio-Pull-Request-Builder/underfs/swift/target/alluxio-underfs-swift-1.4.0-SNAPSHOT-sources.jar to org.alluxio/alluxio-underfs-swift/1.4.0-SNAPSHOT/alluxio-underfs-swift-1.4.0-SNAPSHOT-sources.jar[JENKINS] Archiving /home/jenkins/workspace/Alluxio-Pull-Request-Builder/underfs/s3a/pom.xml to org.alluxio/alluxio-underfs-s3a/1.4.0-SNAPSHOT/alluxio-underfs-s3a-1.4.0-SNAPSHOT.pom[JENKINS] Archiving /home/jenkins/workspace/Alluxio-Pull-Request-Builder/underfs/s3a/target/alluxio-underfs-s3a-1.4.0-SNAPSHOT.jar to org.alluxio/alluxio-underfs-s3a/1.4.0-SNAPSHOT/alluxio-underfs-s3a-1.4.0-SNAPSHOT.jar[JENKINS] Archiving /home/jenkins/workspace/Alluxio-Pull-Request-Builder/underfs/s3a/target/alluxio-underfs-s3a-1.4.0-SNAPSHOT-sources.jar to org.alluxio/alluxio-underfs-s3a/1.4.0-SNAPSHOT/alluxio-underfs-s3a-1.4.0-SNAPSHOT-sources.jar[JENKINS] Archiving /home/jenkins/workspace/Alluxio-Pull-Request-Builder/examples/pom.xml to org.alluxio/alluxio-examples/1.4.0-SNAPSHOT/alluxio-examples-1.4.0-SNAPSHOT.pom[JENKINS] Archiving /home/jenkins/workspace/Alluxio-Pull-Request-Builder/examples/target/alluxio-examples-1.4.0-SNAPSHOT.jar to org.alluxio/alluxio-examples/1.4.0-SNAPSHOT/alluxio-examples-1.4.0-SNAPSHOT.jar[JENKINS] Archiving /home/jenkins/workspace/Alluxio-Pull-Request-Builder/examples/target/alluxio-examples-1.4.0-SNAPSHOT-sources.jar to org.alluxio/alluxio-examples/1.4.0-SNAPSHOT/alluxio-examples-1.4.0-SNAPSHOT-sources.jar[JENKINS] Archiving /home/jenkins/workspace/Alluxio-Pull-Request-Builder/core/server/pom.xml to org.alluxio/alluxio-core-server/1.4.0-SNAPSHOT/alluxio-core-server-1.4.0-SNAPSHOT.pom[JENKINS] Archiving /home/jenkins/workspace/Alluxio-Pull-Request-Builder/core/server/target/alluxio-core-server-1.4.0-SNAPSHOT.jar to org.alluxio/alluxio-core-server/1.4.0-SNAPSHOT/alluxio-core-server-1.4.0-SNAPSHOT.jar[JENKINS] Archiving /home/jenkins/workspace/Alluxio-Pull-Request-Builder/core/server/target/alluxio-core-server-1.4.0-SNAPSHOT-sources.jar to org.alluxio/alluxio-core-server/1.4.0-SNAPSHOT/alluxio-core-server-1.4.0-SNAPSHOT-sources.jar[JENKINS] Archiving /home/jenkins/workspace/Alluxio-Pull-Request-Builder/core/server/target/alluxio-core-server-1.4.0-SNAPSHOT-tests.jar to org.alluxio/alluxio-core-server/1.4.0-SNAPSHOT/alluxio-core-server-1.4.0-SNAPSHOT-tests.jar[JENKINS] Archiving /home/jenkins/workspace/Alluxio-Pull-Request-Builder/keyvalue/common/pom.xml to org.alluxio/alluxio-keyvalue-common/1.4.0-SNAPSHOT/alluxio-keyvalue-common-1.4.0-SNAPSHOT.pom[JENKINS] Archiving /home/jenkins/workspace/Alluxio-Pull-Request-Builder/keyvalue/common/target/alluxio-keyvalue-common-1.4.0-SNAPSHOT.jar to org.alluxio/alluxio-keyvalue-common/1.4.0-SNAPSHOT/alluxio-keyvalue-common-1.4.0-SNAPSHOT.jar[JENKINS] Archiving /home/jenkins/workspace/Alluxio-Pull-Request-Builder/keyvalue/common/target/alluxio-keyvalue-common-1.4.0-SNAPSHOT-sources.jar to org.alluxio/alluxio-keyvalue-common/1.4.0-SNAPSHOT/alluxio-keyvalue-common-1.4.0-SNAPSHOT-sources.jar[JENKINS] Archiving /home/jenkins/workspace/Alluxio-Pull-Request-Builder/underfs/pom.xml to org.alluxio/alluxio-underfs/1.4.0-SNAPSHOT/alluxio-underfs-1.4.0-SNAPSHOT.pom[JENKINS] Archiving /home/jenkins/workspace/Alluxio-Pull-Request-Builder/underfs/glusterfs/pom.xml to org.alluxio/alluxio-underfs-glusterfs/1.4.0-SNAPSHOT/alluxio-underfs-glusterfs-1.4.0-SNAPSHOT.pom[JENKINS] Archiving /home/jenkins/workspace/Alluxio-Pull-Request-Builder/underfs/glusterfs/target/alluxio-underfs-glusterfs-1.4.0-SNAPSHOT.jar to org.alluxio/alluxio-underfs-glusterfs/1.4.0-SNAPSHOT/alluxio-underfs-glusterfs-1.4.0-SNAPSHOT.jar[JENKINS] Archiving /home/jenkins/workspace/Alluxio-Pull-Request-Builder/underfs/glusterfs/target/alluxio-underfs-glusterfs-1.4.0-SNAPSHOT-sources.jar to org.alluxio/alluxio-underfs-glusterfs/1.4.0-SNAPSHOT/alluxio-underfs-glusterfs-1.4.0-SNAPSHOT-sources.jar[JENKINS] Archiving /home/jenkins/workspace/Alluxio-Pull-Request-Builder/integration/pom.xml to org.alluxio/alluxio-integration/1.4.0-SNAPSHOT/alluxio-integration-1.4.0-SNAPSHOT.pom[JENKINS] Archiving /home/jenkins/workspace/Alluxio-Pull-Request-Builder/keyvalue/pom.xml to org.alluxio/alluxio-keyvalue/1.4.0-SNAPSHOT/alluxio-keyvalue-1.4.0-SNAPSHOT.pomchannel stopped
Test FAILed.",True,False,37,10112.616666666667
Alluxio/alluxio/4316,2016-11-14T18:30:20Z,False,582a02ca6480fd09ce3d25b7,"ahhh, I see. I thought it was in the constructor but I was mistaken. This all makes sense now.",True,False,37,10112.616666666667
ManageIQ/manageiq/11691,2016-11-14T18:34:04Z,False,582a2b4c6480fd09ce3d3ea1,"This method can become
```
def my_zone
  ext_management_system.try(:my_zone) || MiqServer.my_zone
end
```",True,False,72,539068.1666666666
ManageIQ/manageiq/11691,2016-11-14T18:35:36Z,False,582a2b4c6480fd05fc1a1b92,"The type can be a string since it's just one, it doesn't need to be an array.",True,False,72,539068.1666666666
ManageIQ/manageiq/11691,2016-11-14T18:37:35Z,False,582a2b4c6480fd04e89e08c5,Same comment about `%w()`,True,False,72,539068.1666666666
ManageIQ/manageiq/11691,2016-11-14T18:42:46Z,False,582a2b4c6480fd0526bac1e3,"Why not use `create` in the block?
```
service.volumes.create(options)
```",True,False,72,539068.1666666666
ManageIQ/manageiq/11691,2016-11-14T18:52:55Z,False,582a2b4c6480fd05a59e3e32,"```
if kind_of?(CloudVolume)
```",True,False,72,539068.1666666666
ManageIQ/manageiq/11691,2016-11-14T18:53:08Z,False,582a2b4c6480fd0f18d84646,`kind_of?`,True,False,72,539068.1666666666
ManageIQ/manageiq/11691,2016-11-14T18:53:40Z,False,582a2b4c6480fd05bd4a6e9f,same `kind_of?`,True,False,72,539068.1666666666
ManageIQ/manageiq/11691,2016-11-14T18:53:57Z,False,582a2b4d6480fd04f8ba1d83,same `kind_of?`,True,False,72,539068.1666666666
ManageIQ/manageiq/11691,2016-11-14T19:19:36Z,False,582a2b4c6480fd0556cf53e9,"Simplify to:
```
default_value_for(:src_type)     { |r| r.get_option(:src_type) || ""VmOrTemplate"" }
```",True,False,72,539068.1666666666
ManageIQ/manageiq/11691,2016-11-14T19:39:29Z,False,582a2b4c6480fd0a5c4dd236,This pattern is repeated several times.  Should we create a `top_level_manager` method on `ExtManagementSystem`?,True,False,72,539068.1666666666
ManageIQ/manageiq/11691,2016-11-14T19:52:52Z,False,582a2b4c6480fd056830aac4,"Rather than the unless block...
```
request.src_type = new_src_type if new_src_type
```
",True,False,72,539068.1666666666
ManageIQ/manageiq/11691,2016-11-14T20:30:16Z,False,582a2b4c6480fd0989250a26,Please be consistent with the one param per line below.,True,False,72,539068.1666666666
ManageIQ/manageiq/11691,2016-11-14T20:31:22Z,False,582a2b4c6480fd050bfadd7b,same `kind_of?`,True,False,72,539068.1666666666
ManageIQ/manageiq/11691,2016-11-14T20:32:00Z,False,582a2b4c6480fd0a1590ebed,same `kind_of?`,True,False,72,539068.1666666666
Alluxio/alluxio/4316,2016-11-14T20:34:26Z,False,582a1fd66480fd05a59e36de,Merged build finished. Test PASSed.,True,False,37,10112.616666666667
Alluxio/alluxio/4316,2016-11-14T20:34:26Z,False,582a1fd66480fd07446416f2,"Test PASSed.
Refer to this link for build results (access rights to CI server needed): 
https://amplab.cs.berkeley.edu/jenkins//job/Alluxio-Pull-Request-Builder/12275/
Test PASSed.",True,False,37,10112.616666666667
ManageIQ/manageiq/11691,2016-11-14T20:39:12Z,False,582a2b4c6480fd0b973b3ed6,Why is this whitespace change in this PR?,True,False,72,539068.1666666666
apache/spark/15849,2016-11-15T01:56:14Z,False,582a6b426480fd0b58246c40,get it,True,False,41,7377.133333333333
apache/spark/15849,2016-11-15T03:47:35Z,False,582a855a6480fd0e54005b2d,**[Test build #68651 has started](https://amplab.cs.berkeley.edu/jenkins/job/SparkPullRequestBuilder/68651/consoleFull)** for PR 15849 at commit [`e0c8b4e`](https://github.com/apache/spark/commit/e0c8b4eaa17b98cb0832e980c20fae8a6844fa96).,True,False,41,7377.133333333333
apache/spark/15849,2016-11-15T04:09:14Z,False,582a8a706480fd05a59e6da0,"**[Test build #68651 has finished](https://amplab.cs.berkeley.edu/jenkins/job/SparkPullRequestBuilder/68651/consoleFull)** for PR 15849 at commit [`e0c8b4e`](https://github.com/apache/spark/commit/e0c8b4eaa17b98cb0832e980c20fae8a6844fa96).
 * This patch passes all tests.
 * This patch merges cleanly.
 * This patch adds no public classes.",True,False,41,7377.133333333333
apache/spark/15849,2016-11-15T04:09:38Z,False,582a8a876480fd0f18d8744c,Merged build finished. Test PASSed.,True,False,41,7377.133333333333
apache/spark/15849,2016-11-15T04:09:39Z,False,582a8a896480fd0b40a255fa,"Test PASSed.
Refer to this link for build results (access rights to CI server needed): 
https://amplab.cs.berkeley.edu/jenkins//job/SparkPullRequestBuilder/68651/
Test PASSed.",True,False,41,7377.133333333333
apache/spark/15849,2016-11-15T22:49:16Z,False,582b90ef6480fd0556d01e6b,LGTM,True,False,41,7377.133333333333
apache/spark/15849,2016-11-16T02:52:37Z,False,582bc9fe6480fd0a5c4eb63c,**[Test build #68688 has started](https://amplab.cs.berkeley.edu/jenkins/job/SparkPullRequestBuilder/68688/consoleFull)** for PR 15849 at commit [`7126dc9`](https://github.com/apache/spark/commit/7126dc961f633130e8963623cbbbfc97107f9505).,True,False,41,7377.133333333333
apache/spark/15849,2016-11-16T02:56:16Z,False,582bcadf6480fd0e540110f5,just rebase ,True,False,41,7377.133333333333
apache/spark/15849,2016-11-16T03:21:49Z,False,582bd0d46480fd0b582530e7,"**[Test build #68688 has finished](https://amplab.cs.berkeley.edu/jenkins/job/SparkPullRequestBuilder/68688/consoleFull)** for PR 15849 at commit [`7126dc9`](https://github.com/apache/spark/commit/7126dc961f633130e8963623cbbbfc97107f9505).
 * This patch passes all tests.
 * This patch merges cleanly.
 * This patch adds the following public classes _(experimental)_:
  * `public final class JavaStructuredKafkaWordCount `",True,False,41,7377.133333333333
apache/spark/15849,2016-11-16T03:22:22Z,False,582bd0f76480fd053e787b52,Merged build finished. Test PASSed.,True,False,41,7377.133333333333
apache/spark/15849,2016-11-16T03:22:23Z,False,582bd0f76480fd0cc5624461,"Test PASSed.
Refer to this link for build results (access rights to CI server needed): 
https://amplab.cs.berkeley.edu/jenkins//job/SparkPullRequestBuilder/68688/
Test PASSed.",True,False,41,7377.133333333333
apache/spark/15849,2016-11-16T10:19:40Z,False,582c32c26480fd0989262386,Merged to master/2.1,True,False,41,7377.133333333333
ManageIQ/manageiq/11691,2016-11-17T04:07:03Z,False,582d2ceb6480fd065e056f6b,"<github_pr_commenter_batch />Some comments on commits https://github.com/mansam/manageiq/compare/52d0ef29f5fa0890224423b9760875c3f2dfd594~...bb9996bcfbb82f0839fde08ac948666548e7dab7

**spec/models/miq_provision_spec.rb**
- [ ] :warning: - 260 - Detected `expect_any_instance_of`. This RSpec method is highly discouraged, please only use when absolutely necessary.
- [ ] :warning: - 261 - Detected `expect_any_instance_of`. This RSpec method is highly discouraged, please only use when absolutely necessary.
- [ ] :warning: - 373 - Detected `expect_any_instance_of`. This RSpec method is highly discouraged, please only use when absolutely necessary.
- [ ] :warning: - 374 - Detected `expect_any_instance_of`. This RSpec method is highly discouraged, please only use when absolutely necessary.

**spec/models/miq_provision_virt_workflow_spec.rb**
- [ ] :warning: - 23 - Detected `expect_any_instance_of`. This RSpec method is highly discouraged, please only use when absolutely necessary.
",True,False,72,539068.1666666666
ManageIQ/manageiq/11691,2016-11-17T04:07:20Z,False,582d2cfc6480fd0b20297646,Changing the semantics of volume creation there didn't seem related to the rest of the PR so I didn't touch it.,True,False,72,539068.1666666666
ManageIQ/manageiq/11691,2016-11-17T04:08:28Z,False,582d2d436480fd0d8467c4f8,"<rubocop />Checked commits https://github.com/mansam/manageiq/compare/52d0ef29f5fa0890224423b9760875c3f2dfd594~...bb9996bcfbb82f0839fde08ac948666548e7dab7 with ruby 2.2.5, rubocop 0.37.2, and haml-lint 0.16.1
20 files checked, 9 offenses detected

**app/models/miq_provision_request.rb**
- [ ] :exclamation: - [Line 17](https://github.com/mansam/manageiq/blob/bb9996bcfbb82f0839fde08ac948666548e7dab7/app/models/miq_provision_request.rb#L17), Col 3 - [Rails/Validation](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Rails/Validation) - Prefer the new style validations `validates :column, presence: value` over `validates_presence_of`.
- [ ] :grey_exclamation: - [Line 131](https://github.com/mansam/manageiq/blob/bb9996bcfbb82f0839fde08ac948666548e7dab7/app/models/miq_provision_request.rb#L131), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [124/120]
- [ ] :grey_exclamation: - [Line 136](https://github.com/mansam/manageiq/blob/bb9996bcfbb82f0839fde08ac948666548e7dab7/app/models/miq_provision_request.rb#L136), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [124/120]
- [ ] :grey_exclamation: - [Line 36](https://github.com/mansam/manageiq/blob/bb9996bcfbb82f0839fde08ac948666548e7dab7/app/models/miq_provision_request.rb#L36), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [132/120]
- [ ] :grey_exclamation: - [Line 39](https://github.com/mansam/manageiq/blob/bb9996bcfbb82f0839fde08ac948666548e7dab7/app/models/miq_provision_request.rb#L39), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [121/120]

**spec/models/miq_provision_spec.rb**
- [ ] :grey_exclamation: - [Line 156](https://github.com/mansam/manageiq/blob/bb9996bcfbb82f0839fde08ac948666548e7dab7/spec/models/miq_provision_spec.rb#L156), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [141/120]
- [ ] :grey_exclamation: - [Line 159](https://github.com/mansam/manageiq/blob/bb9996bcfbb82f0839fde08ac948666548e7dab7/spec/models/miq_provision_spec.rb#L159), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [218/120]
- [ ] :grey_exclamation: - [Line 269](https://github.com/mansam/manageiq/blob/bb9996bcfbb82f0839fde08ac948666548e7dab7/spec/models/miq_provision_spec.rb#L269), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [151/120]
- [ ] :grey_exclamation: - [Line 272](https://github.com/mansam/manageiq/blob/bb9996bcfbb82f0839fde08ac948666548e7dab7/spec/models/miq_provision_spec.rb#L272), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [220/120]
",True,False,72,539068.1666666666
ManageIQ/manageiq/11691,2016-11-17T04:09:01Z,False,582d2d606480fd0744658a00,Refactoring that out into its own method seems appropriate.,True,False,72,539068.1666666666
ManageIQ/manageiq/11691,2016-11-17T04:09:20Z,False,582d2d776480fd05fc1bc1c6,Updated.,True,False,72,539068.1666666666
ManageIQ/manageiq/11691,2016-11-17T15:03:14Z,False,582dc6be6480fd0de9cb863c,"<github_pr_commenter_batch />Some comments on commits https://github.com/mansam/manageiq/compare/52d0ef29f5fa0890224423b9760875c3f2dfd594~...45af7335de8ce9516e4922466dcf190fdcfe5867

**spec/models/miq_provision_spec.rb**
- [ ] :warning: - 260 - Detected `expect_any_instance_of`. This RSpec method is highly discouraged, please only use when absolutely necessary.
- [ ] :warning: - 261 - Detected `expect_any_instance_of`. This RSpec method is highly discouraged, please only use when absolutely necessary.
- [ ] :warning: - 373 - Detected `expect_any_instance_of`. This RSpec method is highly discouraged, please only use when absolutely necessary.
- [ ] :warning: - 374 - Detected `expect_any_instance_of`. This RSpec method is highly discouraged, please only use when absolutely necessary.

**spec/models/miq_provision_virt_workflow_spec.rb**
- [ ] :warning: - 23 - Detected `expect_any_instance_of`. This RSpec method is highly discouraged, please only use when absolutely necessary.
",True,False,72,539068.1666666666
ManageIQ/manageiq/11691,2016-11-17T15:05:36Z,False,582dc7446480fd057ecfcf8a,"<rubocop />Checked commits https://github.com/mansam/manageiq/compare/52d0ef29f5fa0890224423b9760875c3f2dfd594~...45af7335de8ce9516e4922466dcf190fdcfe5867 with ruby 2.2.5, rubocop 0.37.2, and haml-lint 0.16.1
20 files checked, 9 offenses detected

**app/models/miq_provision_request.rb**
- [ ] :exclamation: - [Line 17](https://github.com/mansam/manageiq/blob/45af7335de8ce9516e4922466dcf190fdcfe5867/app/models/miq_provision_request.rb#L17), Col 3 - [Rails/Validation](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Rails/Validation) - Prefer the new style validations `validates :column, presence: value` over `validates_presence_of`.
- [ ] :grey_exclamation: - [Line 131](https://github.com/mansam/manageiq/blob/45af7335de8ce9516e4922466dcf190fdcfe5867/app/models/miq_provision_request.rb#L131), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [124/120]
- [ ] :grey_exclamation: - [Line 136](https://github.com/mansam/manageiq/blob/45af7335de8ce9516e4922466dcf190fdcfe5867/app/models/miq_provision_request.rb#L136), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [124/120]
- [ ] :grey_exclamation: - [Line 36](https://github.com/mansam/manageiq/blob/45af7335de8ce9516e4922466dcf190fdcfe5867/app/models/miq_provision_request.rb#L36), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [132/120]
- [ ] :grey_exclamation: - [Line 39](https://github.com/mansam/manageiq/blob/45af7335de8ce9516e4922466dcf190fdcfe5867/app/models/miq_provision_request.rb#L39), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [121/120]

**spec/models/miq_provision_spec.rb**
- [ ] :grey_exclamation: - [Line 156](https://github.com/mansam/manageiq/blob/45af7335de8ce9516e4922466dcf190fdcfe5867/spec/models/miq_provision_spec.rb#L156), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [141/120]
- [ ] :grey_exclamation: - [Line 159](https://github.com/mansam/manageiq/blob/45af7335de8ce9516e4922466dcf190fdcfe5867/spec/models/miq_provision_spec.rb#L159), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [218/120]
- [ ] :grey_exclamation: - [Line 269](https://github.com/mansam/manageiq/blob/45af7335de8ce9516e4922466dcf190fdcfe5867/spec/models/miq_provision_spec.rb#L269), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [151/120]
- [ ] :grey_exclamation: - [Line 272](https://github.com/mansam/manageiq/blob/45af7335de8ce9516e4922466dcf190fdcfe5867/spec/models/miq_provision_spec.rb#L272), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [220/120]
",True,False,72,539068.1666666666
ManageIQ/manageiq/11691,2016-11-17T16:49:58Z,False,582ddfbe6480fd0de9cb9905,"This test doesn't seem useful the way it is written.  

```ruby
expect(@vm_prov.my_zone).to eq(The zone of the thing you're expecting)
```",True,False,72,539068.1666666666
ManageIQ/manageiq/11691,2016-11-17T22:27:01Z,False,582e2ebd6480fd057ed01394,"<github_pr_commenter_batch />Some comments on commits https://github.com/mansam/manageiq/compare/93cb7f36d00d6bea66ebeacd48da71f7cb2533e9~...66b207db37175eccea8f51bbc75855098785c32c

**spec/models/miq_provision_virt_workflow_spec.rb**
- [ ] :warning: - 23 - Detected `expect_any_instance_of`. This RSpec method is highly discouraged, please only use when absolutely necessary.
",True,False,72,539068.1666666666
ManageIQ/manageiq/11691,2016-11-17T22:28:21Z,False,582e2f0c6480fd04ba1d8de4,"<rubocop />Checked commits https://github.com/mansam/manageiq/compare/93cb7f36d00d6bea66ebeacd48da71f7cb2533e9~...66b207db37175eccea8f51bbc75855098785c32c with ruby 2.2.5, rubocop 0.37.2, and haml-lint 0.16.1
21 files checked, 11 offenses detected

**app/models/miq_provision_request.rb**
- [ ] :exclamation: - [Line 17](https://github.com/mansam/manageiq/blob/66b207db37175eccea8f51bbc75855098785c32c/app/models/miq_provision_request.rb#L17), Col 3 - [Rails/Validation](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Rails/Validation) - Prefer the new style validations `validates :column, presence: value` over `validates_presence_of`.
- [ ] :grey_exclamation: - [Line 131](https://github.com/mansam/manageiq/blob/66b207db37175eccea8f51bbc75855098785c32c/app/models/miq_provision_request.rb#L131), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [124/120]
- [ ] :grey_exclamation: - [Line 136](https://github.com/mansam/manageiq/blob/66b207db37175eccea8f51bbc75855098785c32c/app/models/miq_provision_request.rb#L136), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [124/120]
- [ ] :grey_exclamation: - [Line 36](https://github.com/mansam/manageiq/blob/66b207db37175eccea8f51bbc75855098785c32c/app/models/miq_provision_request.rb#L36), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [132/120]

**app/models/miq_provision_virt_workflow.rb**
- [ ] :exclamation: - [Line 447](https://github.com/mansam/manageiq/blob/66b207db37175eccea8f51bbc75855098785c32c/app/models/miq_provision_virt_workflow.rb#L447), Col 25 - [Performance/RedundantMerge](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Performance/RedundantMerge) - Use `result[""fields""] = ""Specification""; result[""file""] = ""Sysprep Answer File""` instead of `result.merge!(""fields"" => ""Specification"", ""file""  => ""Sysprep Answer File"")`.
- [ ] :exclamation: - [Line 447](https://github.com/mansam/manageiq/blob/66b207db37175eccea8f51bbc75855098785c32c/app/models/miq_provision_virt_workflow.rb#L447), Col 76 - [Style/SpaceAroundOperators](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Style/SpaceAroundOperators) - Operator `=>` should be surrounded by a single space.
- [ ] :grey_exclamation: - [Line 1040](https://github.com/mansam/manageiq/blob/66b207db37175eccea8f51bbc75855098785c32c/app/models/miq_provision_virt_workflow.rb#L1040), Col 3 - [Metrics/AbcSize](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/AbcSize) - Assignment Branch Condition size for create_hash_struct_from_vm_or_template is too high. [26.02/20]

**spec/models/miq_provision_spec.rb**
- [ ] :grey_exclamation: - [Line 156](https://github.com/mansam/manageiq/blob/66b207db37175eccea8f51bbc75855098785c32c/spec/models/miq_provision_spec.rb#L156), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [141/120]
- [ ] :grey_exclamation: - [Line 159](https://github.com/mansam/manageiq/blob/66b207db37175eccea8f51bbc75855098785c32c/spec/models/miq_provision_spec.rb#L159), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [218/120]
- [ ] :grey_exclamation: - [Line 266](https://github.com/mansam/manageiq/blob/66b207db37175eccea8f51bbc75855098785c32c/spec/models/miq_provision_spec.rb#L266), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [151/120]
- [ ] :grey_exclamation: - [Line 269](https://github.com/mansam/manageiq/blob/66b207db37175eccea8f51bbc75855098785c32c/spec/models/miq_provision_spec.rb#L269), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [220/120]
",True,False,72,539068.1666666666
ManageIQ/manageiq/11691,2016-11-17T22:36:55Z,False,582e310e6480fd04a6cdc8f5,"<github_pr_commenter_batch />Some comments on commits https://github.com/mansam/manageiq/compare/93cb7f36d00d6bea66ebeacd48da71f7cb2533e9~...c0b7fb774ed4f08ad41a309824f88a4f7d5dcd12

**spec/models/miq_provision_virt_workflow_spec.rb**
- [ ] :warning: - 23 - Detected `expect_any_instance_of`. This RSpec method is highly discouraged, please only use when absolutely necessary.
",True,False,72,539068.1666666666
ManageIQ/manageiq/11691,2016-11-17T22:38:07Z,False,582e31526480fd057ed0151a,"<rubocop />Checked commits https://github.com/mansam/manageiq/compare/93cb7f36d00d6bea66ebeacd48da71f7cb2533e9~...c0b7fb774ed4f08ad41a309824f88a4f7d5dcd12 with ruby 2.2.5, rubocop 0.37.2, and haml-lint 0.16.1
21 files checked, 9 offenses detected

**app/models/miq_provision_request.rb**
- [ ] :exclamation: - [Line 17](https://github.com/mansam/manageiq/blob/c0b7fb774ed4f08ad41a309824f88a4f7d5dcd12/app/models/miq_provision_request.rb#L17), Col 3 - [Rails/Validation](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Rails/Validation) - Prefer the new style validations `validates :column, presence: value` over `validates_presence_of`.
- [ ] :grey_exclamation: - [Line 131](https://github.com/mansam/manageiq/blob/c0b7fb774ed4f08ad41a309824f88a4f7d5dcd12/app/models/miq_provision_request.rb#L131), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [124/120]
- [ ] :grey_exclamation: - [Line 136](https://github.com/mansam/manageiq/blob/c0b7fb774ed4f08ad41a309824f88a4f7d5dcd12/app/models/miq_provision_request.rb#L136), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [124/120]
- [ ] :grey_exclamation: - [Line 36](https://github.com/mansam/manageiq/blob/c0b7fb774ed4f08ad41a309824f88a4f7d5dcd12/app/models/miq_provision_request.rb#L36), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [132/120]

**app/models/miq_provision_virt_workflow.rb**
- [ ] :grey_exclamation: - [Line 1043](https://github.com/mansam/manageiq/blob/c0b7fb774ed4f08ad41a309824f88a4f7d5dcd12/app/models/miq_provision_virt_workflow.rb#L1043), Col 3 - [Metrics/AbcSize](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/AbcSize) - Assignment Branch Condition size for create_hash_struct_from_vm_or_template is too high. [26.02/20]

**spec/models/miq_provision_spec.rb**
- [ ] :grey_exclamation: - [Line 156](https://github.com/mansam/manageiq/blob/c0b7fb774ed4f08ad41a309824f88a4f7d5dcd12/spec/models/miq_provision_spec.rb#L156), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [141/120]
- [ ] :grey_exclamation: - [Line 159](https://github.com/mansam/manageiq/blob/c0b7fb774ed4f08ad41a309824f88a4f7d5dcd12/spec/models/miq_provision_spec.rb#L159), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [218/120]
- [ ] :grey_exclamation: - [Line 266](https://github.com/mansam/manageiq/blob/c0b7fb774ed4f08ad41a309824f88a4f7d5dcd12/spec/models/miq_provision_spec.rb#L266), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [151/120]
- [ ] :grey_exclamation: - [Line 269](https://github.com/mansam/manageiq/blob/c0b7fb774ed4f08ad41a309824f88a4f7d5dcd12/spec/models/miq_provision_spec.rb#L269), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [220/120]
",True,False,72,539068.1666666666
ManageIQ/manageiq/11691,2016-11-17T23:16:29Z,False,582e3a546480fd089b2fdef0,"<github_pr_commenter_batch />Some comments on commits https://github.com/mansam/manageiq/compare/2b54bab730deb00b3f4ba71608dd298a8f5436ca~...aeb966c9769858410550275dff2393bc980a84d3

**spec/models/miq_provision_virt_workflow_spec.rb**
- [ ] :warning: - 23 - Detected `expect_any_instance_of`. This RSpec method is highly discouraged, please only use when absolutely necessary.
",True,False,72,539068.1666666666
ManageIQ/manageiq/11691,2016-11-17T23:17:25Z,False,582e3a8a6480fd050bfd2208,"<rubocop />Checked commits https://github.com/mansam/manageiq/compare/2b54bab730deb00b3f4ba71608dd298a8f5436ca~...aeb966c9769858410550275dff2393bc980a84d3 with ruby 2.2.5, rubocop 0.37.2, and haml-lint 0.16.1
21 files checked, 8 offenses detected

**app/models/miq_provision_request.rb**
- [ ] :exclamation: - [Line 17](https://github.com/mansam/manageiq/blob/aeb966c9769858410550275dff2393bc980a84d3/app/models/miq_provision_request.rb#L17), Col 3 - [Rails/Validation](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Rails/Validation) - Prefer the new style validations `validates :column, presence: value` over `validates_presence_of`.
- [ ] :grey_exclamation: - [Line 131](https://github.com/mansam/manageiq/blob/aeb966c9769858410550275dff2393bc980a84d3/app/models/miq_provision_request.rb#L131), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [124/120]
- [ ] :grey_exclamation: - [Line 136](https://github.com/mansam/manageiq/blob/aeb966c9769858410550275dff2393bc980a84d3/app/models/miq_provision_request.rb#L136), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [124/120]
- [ ] :grey_exclamation: - [Line 36](https://github.com/mansam/manageiq/blob/aeb966c9769858410550275dff2393bc980a84d3/app/models/miq_provision_request.rb#L36), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [132/120]

**spec/models/miq_provision_spec.rb**
- [ ] :grey_exclamation: - [Line 156](https://github.com/mansam/manageiq/blob/aeb966c9769858410550275dff2393bc980a84d3/spec/models/miq_provision_spec.rb#L156), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [141/120]
- [ ] :grey_exclamation: - [Line 159](https://github.com/mansam/manageiq/blob/aeb966c9769858410550275dff2393bc980a84d3/spec/models/miq_provision_spec.rb#L159), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [218/120]
- [ ] :grey_exclamation: - [Line 266](https://github.com/mansam/manageiq/blob/aeb966c9769858410550275dff2393bc980a84d3/spec/models/miq_provision_spec.rb#L266), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [151/120]
- [ ] :grey_exclamation: - [Line 269](https://github.com/mansam/manageiq/blob/aeb966c9769858410550275dff2393bc980a84d3/spec/models/miq_provision_spec.rb#L269), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [220/120]
",True,False,72,539068.1666666666
scalameta/scalameta/542,2016-11-21T21:10:52Z,False,583362e16480fd089b321b1d,"The inability to construct invalid abstract syntax trees (also called ""safety by construction"" by @densh) is a core feature of Scala Meta. 

In the early days of the project, we tried to enforce this with types, but that was too much notational overhead, so we replaced some compile-time checks with runtime checks during tree creation. There are additional checks [in quasiquotes](https://github.com/xeno-by/scalameta/blob/f9afef2bcdce93cc344d240b7bc0ed96c06a5306/scalameta/common/src/main/scala/scala/meta/internal/ast/Liftables.scala#L75) and [in parser](https://github.com/xeno-by/scalameta/blob/f9afef2bcdce93cc344d240b7bc0ed96c06a5306/scalameta/parsers/src/main/scala/scala/meta/internal/parsers/ScalametaParser.scala#L3162), but they are complementary to the main checks.

@cb372 Could you discuss the benefits of allowing invalid trees a bit more?

",True,False,13,104572.41666666667
scalameta/scalameta/542,2016-11-21T21:25:41Z,False,5833665c6480fd0b5828c434,The benefits from my perspective is that users are not surprised by runtime exceptions. It's quite un-idiomatic to use exceptions for data validation in Scala. It might be preferable to allow invalid trees and provide the validation as an optional safety step.,True,False,13,104572.41666666667
scalameta/scalameta/542,2016-11-21T21:40:57Z,False,583369eb6480fd0cc5652fd8,"From the perspective of a macro writer, I do want meta to throw exceptions at me. Not because I'm a masochist, but because this is what Dotty and Scalac do and stack traces help me **a lot**. I can see the neatness of having a second validation step, though. It would be useful, for instance, if Scala Meta is used as a framework and the input depends on the end user. The developerof the framework may want to control the exceptions and pattern match on concrete error adt nodes.
  
To unify these two approaches, I would propose to introduce two modes. The default mode, which is our current one, will check at runtime the created trees. The second mode will allow to disable runtime checks and let users validate the trees themselves. Ideally, this could be done with macros so that the validation code at the node creation site disappears. Implementation details would need to work out, these are just rough suggestions.",True,False,13,104572.41666666667
scalameta/scalameta/542,2016-11-22T11:49:40Z,False,583430da6480fd0b97402443,"I agree that using the type system to make it impossible to create invalid trees in the first place would be ideal, but if that has already been tried and is infeasible then fair enough.

I think I was trying to address two separate issues with this PR:

1. I found it vaguely unsettling that scala.meta might throw exceptions, but I didn't realise that it was by design. I quite like @jvican's suggestion of allowing users to control how validation happens. Having the option to explicitly perform validation might be useful for e.g. IDEs and other tooling.

2. There are some cases in which it's impossible to do validation at tree construction time, because the tree is valid in some dialects and invalid in others. e.g. `trait Foo(a: Int)` is valid in Dotty but invalid in Scala 2.11, and vice versa for `object A { self: A => }`. I can think of a couple of ways to handle this:

    * Add a validate method like I did in this PR, which validates the tree in the context of a given dialect
    * Give the tree a dialect at construction time. In other words, instead of creating a generic tree and then trying to use it in a given dialect, specify the dialect up front. (I imagine this would be quite a big design change for scala.meta.)",True,False,13,104572.41666666667
scalameta/scalameta/542,2016-11-22T12:02:47Z,False,583433ef6480fd0526bfa3b0,"> The benefits from my perspective is that users are not surprised by runtime exceptions.

Before, in Scala Reflect days, one would often get an obscure error somewhere in backend that are caused by bugs in your macro. There are very limited checks on AST well-formedness for synthetic (i.e. compiler or macro generated) code making failures extremely late and *truly surprising*. 

Failing early on nonsensical trees is a killer feature as it tells you precisely where you screwed up at the time you did it. Delaying the checks would allow you to create complicated blob of code without clear understanding which part exactly is at fault to fail validation. That would bring us back to the place where we started. ",True,False,13,104572.41666666667
scalameta/scalameta/542,2016-11-22T12:02:50Z,False,583433ef6480fd090d2fc734,"I think that the implicit approach, while may give some suprises, it's the adequate design for Meta. I like the fact that some of the semantics are separated from the tree structure, because validation/transformation requires the *interpretation* of the tree nodes. You can only interpret them in the presence of `dialect`, which give you a context. IMO, this makes sense to me.
  
I would like to know first what @olafurpg and @xeno-by think about the introduction of the two validations modes, but I would lean towards adding validation methods that depend on a `dialect` and that return concrete errors represented in an ADT. I would put all these in a package called `validation, instead of defining them right next to the tree nodes definition. Also, I think it would make sense to explore ways to achieve this with macros, so that the runtime logic can be removed when the user opts in for manual validation.",True,False,13,104572.41666666667
scalameta/scalameta/542,2016-11-22T12:08:47Z,False,583435546480fd0556d43c0c,"> Failing early on nonsensical trees is a killer feature as it tells you precisely where you screwed up at the time you did it. Delaying the checks would allow you to create complicated blob of code without clear understanding which part exactly is at fault to fail validation. That would bring us back to the place where we started.
  
Yeah, I agree. Making this the default validation mode makes sense. But there are some compelling use cases for developers that may want to use Meta in their framework/IDE. In the light of these benefits, do you think adding an opt-in, exception-free validation step would make sense? @densh ",True,False,13,104572.41666666667
scalameta/scalameta/542,2016-11-28T10:04:19Z,False,583c01296480fd0d846e6185,"@densh I agree that failing early on invalid trees is a killer feature of scala.meta and less surprising than getting cryptic error messages in the scalac backend. My comment above was only to say that runtime errors may nevertheless still surprise users.

Some thoughts:

- I'm in favor of @cb372's approach in this PR to provide an opt-in validation step with the presence of a dialect.
- I suggest to keep the non-dialect related validations as runtime checks in the constructor. Why?
  - Adding a dialect in the constructor would be a huge change in the scala.meta api and I'm not convinced (yet) that the benefits outweighs the introduced complexity.
  - Moving the non-dialect-aware validations to the `validate` method would delay critical validation to catch bugs that, for example, manifest themselves later as cryptic error messages in the scalac backend.
- I would like the dialect-aware validation to run recursively on all children nodes and the error message should attach the offending tree nodes. Question: should the validation accumulate all errors or fail on first error?
- Here is a commented out check that requires a dialect: https://github.com/cb372/scalameta/blob/cf026df6b4676ba80abb8d4f661b58c789459fc6/scalameta/trees/src/main/scala/scala/meta/Trees.scala#L507",True,False,13,104572.41666666667
ManageIQ/manageiq/11691,2016-11-28T23:17:05Z,False,583cbaf86480fd049097588a,<pr_mergeability_checker />This pull request is not mergeable.  Please rebase and repush.,True,False,72,539068.1666666666
ManageIQ/manageiq/11691,2016-11-29T15:58:19Z,False,583da5a36480fd0b582d548e,"My guess is the merge conflict is from the change in PR #12783.

@mansam What are your thoughts on splitting up this PR as @bdunne suggested?  The title makes this sound like just refactoring to support a feature that would be in a separate PR, but the description feels more like the feature is being added here.

I am in favor of breaking this up as @bdunne suggested.",True,False,72,539068.1666666666
ManageIQ/manageiq/11691,2016-12-01T19:32:01Z,False,58412aed6480fd05683b7a02,@gmcculloug @bdunne I've pushed two branches containing smaller pieces of this.,True,False,72,539068.1666666666
Yunosuke21/chat-space/6,2016-12-02T06:35:57Z,False,584250796480fd0a159c8220,すでにdevelopmentのgroupがあるのでそこに書きましょう,True,False,6,68.76666666666667
Yunosuke21/chat-space/6,2016-12-02T06:37:24Z,False,584250786480fd0bd9a1a5a9,この行、ハッシュの書き方をもう一度確認しましょう,True,False,6,68.76666666666667
Yunosuke21/chat-space/6,2016-12-02T07:11:16Z,False,584251166480fd053e830511,"""http-equiv"" : ""Content-Type""
ハッシュのキーが文字列の場合はコロンでは上手く行きません
ハッシュの宣言方法などを調べてみましょう",True,False,6,68.76666666666667
Yunosuke21/chat-space/6,2016-12-02T07:12:23Z,False,58425f4f6480fd0cc56a8b31,Gemfileの方の修正もお願いします,True,False,6,68.76666666666667
Yunosuke21/chat-space/6,2016-12-02T07:24:07Z,False,58425f726480fd0d8471b4ed,"ハッシュの部分の修正もお願いします
「ruby ハッシュ 書き方」などで調べてみましょう",True,False,6,68.76666666666667
Yunosuke21/chat-space/6,2016-12-02T07:44:43Z,False,584251bb6480fd04ba26f5a9,コロンの前のスペースは必要ないですね,True,False,6,68.76666666666667
ManageIQ/manageiq/11691,2016-12-06T17:18:42Z,False,5846f3306480fdca0734f905,"<github_pr_commenter_batch />Some comments on commits https://github.com/mansam/manageiq/compare/7cd8bc9c2d4ebc5cbf06b90b36ab0f3c50752906~...df7d1f7fb501b9e4740d3fb588e2dd0ec75543d4

**spec/models/miq_provision_virt_workflow_spec.rb**
- [ ] :warning: - 23 - Detected `expect_any_instance_of`. This RSpec method is highly discouraged, please only use when absolutely necessary.
",True,False,72,539068.1666666666
ManageIQ/manageiq/11691,2016-12-06T17:22:32Z,False,5846f3e56480fdc76fa096bb,"<rubocop />Checked commits https://github.com/mansam/manageiq/compare/7cd8bc9c2d4ebc5cbf06b90b36ab0f3c50752906~...df7d1f7fb501b9e4740d3fb588e2dd0ec75543d4 with ruby 2.2.5, rubocop 0.37.2, and haml-lint 0.16.1
21 files checked, 8 offenses detected

**app/models/miq_provision_request.rb**
- [ ] :exclamation: - [Line 17](https://github.com/mansam/manageiq/blob/df7d1f7fb501b9e4740d3fb588e2dd0ec75543d4/app/models/miq_provision_request.rb#L17), Col 3 - [Rails/Validation](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Rails/Validation) - Prefer the new style validations `validates :column, presence: value` over `validates_presence_of`.
- [ ] :grey_exclamation: - [Line 131](https://github.com/mansam/manageiq/blob/df7d1f7fb501b9e4740d3fb588e2dd0ec75543d4/app/models/miq_provision_request.rb#L131), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [124/120]
- [ ] :grey_exclamation: - [Line 136](https://github.com/mansam/manageiq/blob/df7d1f7fb501b9e4740d3fb588e2dd0ec75543d4/app/models/miq_provision_request.rb#L136), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [124/120]
- [ ] :grey_exclamation: - [Line 36](https://github.com/mansam/manageiq/blob/df7d1f7fb501b9e4740d3fb588e2dd0ec75543d4/app/models/miq_provision_request.rb#L36), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [132/120]

**spec/models/miq_provision_spec.rb**
- [ ] :grey_exclamation: - [Line 156](https://github.com/mansam/manageiq/blob/df7d1f7fb501b9e4740d3fb588e2dd0ec75543d4/spec/models/miq_provision_spec.rb#L156), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [141/120]
- [ ] :grey_exclamation: - [Line 159](https://github.com/mansam/manageiq/blob/df7d1f7fb501b9e4740d3fb588e2dd0ec75543d4/spec/models/miq_provision_spec.rb#L159), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [218/120]
- [ ] :grey_exclamation: - [Line 266](https://github.com/mansam/manageiq/blob/df7d1f7fb501b9e4740d3fb588e2dd0ec75543d4/spec/models/miq_provision_spec.rb#L266), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [151/120]
- [ ] :grey_exclamation: - [Line 269](https://github.com/mansam/manageiq/blob/df7d1f7fb501b9e4740d3fb588e2dd0ec75543d4/spec/models/miq_provision_spec.rb#L269), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [220/120]
",True,False,72,539068.1666666666
byroot/bootscale/40,2016-12-08T13:53:34Z,False,584b3ac56480fd92e130f429,"> the boot time from 35-47s to 29-35 seconds.

Correction. The build I used for comparison was at a time when the CI was more busy.

Comparing 2 builds at the same time, the improvement seems more like `29-33` to `26-30`. Still good though.",True,False,9,1215.65
byroot/bootscale/40,2016-12-08T15:59:08Z,False,584b3ac46480fd92e130f424,`undef_method :search_for_file` to avoid warnings and make sure it exists,True,False,9,1215.65
byroot/bootscale/40,2016-12-08T16:00:29Z,False,584b3ac46480fd92e130f425,use regular requires ?,True,False,9,1215.65
byroot/bootscale/40,2016-12-08T16:02:10Z,False,5849e84b6480fd4f4b9ebc2e,how about a real test ... this is jus printing things ?,True,False,9,1215.65
byroot/bootscale/40,2016-12-08T16:04:08Z,False,584b3ac56480fd92e130f42a,"some comments about how this works / why it needs it's own cache would be nice ...
",True,False,9,1215.65
byroot/bootscale/40,2016-12-08T16:47:02Z,False,584b3ac46480fd92e130f426,:+1:,True,False,9,1215.65
byroot/bootscale/40,2016-12-09T09:56:15Z,False,584b3ac46480fd92e130f427,"The idea is that if you use bootscale, it's likely that you have a huge load path, so might as well use `require_relative` when possible until bootscale is setup.",True,False,9,1215.65
byroot/bootscale/40,2016-12-09T10:07:52Z,False,584b3ac46480fd92e130f428,But what it prints is asserted.,True,False,9,1215.65
byroot/bootscale/40,2016-12-09T10:09:13Z,False,584b3ac56480fd92e130f42b,I added the `undef_method` and the comment.,True,False,9,1215.65
neveragaindottech/neveragaindottech.github.io/876,2016-12-15T02:23:58Z,False,5854f4096480fd1168afad06,"@efran can you reformat your commit like this example: 
https://raw.githubusercontent.com/neveragaindottech/neveragaindottech.github.io/master/_signatures/Leigh_Honeywell.md
you're missing the names of the fields.

Thanks!",True,False,3,2675.266666666667
nodejs/TSC/180,2016-12-16T14:30:09Z,False,585412816480fd31fe189fe4,Was a reason given?,True,False,1,0.0
neveragaindottech/neveragaindottech.github.io/876,2016-12-16T19:58:09Z,False,5854f4096480fd1168afad07,Thanks - made the suggested changes.,True,False,3,2675.266666666667
neveragaindottech/neveragaindottech.github.io/876,2016-12-16T22:59:14Z,False,5854f4096480fd1168afad08,This needed some more edits to get the formatting right.  I've made them and added you.  Thanks for signing!,True,False,3,2675.266666666667
ManageIQ/manageiq/11691,2016-12-20T01:46:48Z,False,585890506480fd1003c3fefe,"<github_pr_commenter_batch />Some comments on commits https://github.com/mansam/manageiq/compare/7cd8bc9c2d4ebc5cbf06b90b36ab0f3c50752906~...df7d1f7fb501b9e4740d3fb588e2dd0ec75543d4

**spec/models/miq_provision_virt_workflow_spec.rb**
- [ ] :warning: - 23 - Detected `expect_any_instance_of`. This RSpec method is highly discouraged, please only use when absolutely necessary.
",True,False,72,539068.1666666666
ManageIQ/manageiq/11691,2016-12-20T01:47:42Z,False,585890b46480fd0fee1f5f89,"<rubocop />Checked commits https://github.com/mansam/manageiq/compare/7cd8bc9c2d4ebc5cbf06b90b36ab0f3c50752906~...df7d1f7fb501b9e4740d3fb588e2dd0ec75543d4 with ruby 2.2.5, rubocop 0.37.2, and haml-lint 0.16.1
21 files checked, 8 offenses detected

**app/models/miq_provision_request.rb**
- [ ] :exclamation: - [Line 17](https://github.com/mansam/manageiq/blob/df7d1f7fb501b9e4740d3fb588e2dd0ec75543d4/app/models/miq_provision_request.rb#L17), Col 3 - [Rails/Validation](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Rails/Validation) - Prefer the new style validations `validates :column, presence: value` over `validates_presence_of`.
- [ ] :grey_exclamation: - [Line 131](https://github.com/mansam/manageiq/blob/df7d1f7fb501b9e4740d3fb588e2dd0ec75543d4/app/models/miq_provision_request.rb#L131), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [124/120]
- [ ] :grey_exclamation: - [Line 136](https://github.com/mansam/manageiq/blob/df7d1f7fb501b9e4740d3fb588e2dd0ec75543d4/app/models/miq_provision_request.rb#L136), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [124/120]
- [ ] :grey_exclamation: - [Line 36](https://github.com/mansam/manageiq/blob/df7d1f7fb501b9e4740d3fb588e2dd0ec75543d4/app/models/miq_provision_request.rb#L36), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [132/120]

**spec/models/miq_provision_spec.rb**
- [ ] :grey_exclamation: - [Line 156](https://github.com/mansam/manageiq/blob/df7d1f7fb501b9e4740d3fb588e2dd0ec75543d4/spec/models/miq_provision_spec.rb#L156), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [141/120]
- [ ] :grey_exclamation: - [Line 159](https://github.com/mansam/manageiq/blob/df7d1f7fb501b9e4740d3fb588e2dd0ec75543d4/spec/models/miq_provision_spec.rb#L159), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [218/120]
- [ ] :grey_exclamation: - [Line 266](https://github.com/mansam/manageiq/blob/df7d1f7fb501b9e4740d3fb588e2dd0ec75543d4/spec/models/miq_provision_spec.rb#L266), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [151/120]
- [ ] :grey_exclamation: - [Line 269](https://github.com/mansam/manageiq/blob/df7d1f7fb501b9e4740d3fb588e2dd0ec75543d4/spec/models/miq_provision_spec.rb#L269), Col 121 - [Metrics/LineLength](http://rubydoc.info/gems/rubocop/0.37.2/RuboCop/Cop/Metrics/LineLength) - Line is too long. [220/120]
",True,False,72,539068.1666666666
xcat2/xcat-core/2323,2016-12-21T04:41:09Z,False,585be2d76480fd90868818dc,Need to handle unknown error code as well.,True,False,15,241.2
xcat2/xcat-core/2323,2016-12-21T04:42:41Z,False,585be2dc6480fd8b98c44ff1,Why do the `syslog` renaming. I do not understand.,True,False,15,241.2
xcat2/xcat-core/2323,2016-12-21T04:43:16Z,False,585be2e36480fd8f17f6e249,Why do the `syslog` renaming. I do not understand.,True,False,15,241.2
xcat2/xcat-core/2323,2016-12-21T04:45:11Z,False,585be2f76480fd9726948dfb,"If renaming `syslog` to `syslog.org`, and then after a while, renaming it back. Does it need a lock somewhere? In case multiple subroutines `is_http_ready` are running at the same time.",True,False,15,241.2
xcat2/xcat-core/2323,2016-12-21T04:47:03Z,False,585c76106480fd972b9157d0,And why use `syslog` in the current directory? What is the current directory?,True,False,15,241.2
xcat2/xcat-core/2323,2016-12-21T04:54:11Z,False,585be3586480fd90b4cc6180,Why not just copy the `EXIT STATUS` part of the `wget` man page.,True,False,15,241.2
xcat2/xcat-core/2323,2016-12-21T04:59:09Z,False,585be4496480fd8f36ee4fa4,"Do not create temporary file under the current working directory. It is a bad design. Since the end user may have important file in there. There are chance you crush up important file under current working directory.

Instead, create temporary files under `/tmp` directory.",True,False,15,241.2
xcat2/xcat-core/2323,2016-12-21T06:08:58Z,False,585be90c6480fd92ec368cfc,"``xcatmn`` use ``/install/postscripts/syslog`` file which shipped by xCAT to test http service.
In case in customer's environment,  they develop a sub command named ``syslog``, this test may over write it. so bakup it before doing ``wget`` operation.",True,False,15,241.2
xcat2/xcat-core/2323,2016-12-21T06:13:17Z,False,585be9166480fd969c00f595,Make it easy to understand. ,True,False,15,241.2
xcat2/xcat-core/2323,2016-12-21T07:27:49Z,False,585be9b96480fd9336485bb5,Using `getpid()` is recommend.,True,False,15,241.2
xcat2/xcat-core/2323,2016-12-21T07:28:32Z,False,585be9bf6480fd91829f8191,Need do error handling here.,True,False,15,241.2
xcat2/xcat-core/2323,2016-12-21T07:29:15Z,False,585be9ce6480fd90b4cc6501,May use `-O` option of `wget` here.,True,False,15,241.2
xcat2/xcat-core/2323,2016-12-21T07:30:16Z,False,585be9c06480fd9656e1353d,`rmdir()` can only handle empty subdirectory. Need to do error handling here as well.,True,False,15,241.2
xcat2/xcat-core/2323,2016-12-21T07:30:47Z,False,585be9c26480fd8b487b2d7e,I prefer print out `Unknown error` here.,True,False,15,241.2
xcat2/xcat-core/2323,2016-12-21T08:42:21Z,False,585c76106480fd972b9157d1,I think this patch is good to merge.,True,False,15,241.2
getredash/redash/1483,2016-12-22T20:53:00Z,False,585d663d6480fd8b1ea52752,"There needs to be some way to update the global params list when a widget is added or removed. Any thoughts on this? Should there be a watch on the length of widgets?
",True,False,3,47.53333333333333
getredash/redash/1483,2016-12-22T20:55:47Z,False,585d663d6480fd8b1ea52753,"Watch on widgets will work, although it's bad for performance. On the master branch, you can just do this in a callback after the add widget dialog is closed.",True,False,3,47.53333333333333
getredash/redash/1483,2016-12-22T21:40:32Z,False,585d663d6480fd8b1ea52754,SG,True,False,3,47.53333333333333
everypolitician/everypolitician-data/23206,2016-12-26T09:56:07Z,False,5862ff1e6480fd8d826fc12c,"

Summary of changes in `data/Australia/Senate/ep-popolo-v1.0.json`:

## People

### Added


No people added


### Removed


No people removed


### Name Changes


No name changes


### Additional Name Changes


No name changes


### Wikidata Changes


No changes


## Organizations

### Added


No organizations added


### Removed


No organizations removed


## Memberships

### Added

No memberships added


### Removed

No memberships removed


## Terms

### Added


No terms added


### Removed


No terms removed


## Elections

### Added


No elections added


### Removed


No elections removed




",True,False,2,1779.8
everypolitician/everypolitician-data/23206,2016-12-27T15:35:55Z,False,5862ff1e6480fd8d826fc12d,This Pull Request has been superseded by #23270,True,False,2,1779.8
ali-sdk/ali-mts/64,2016-12-29T05:57:32Z,False,5865feb06480fd0dae5a4962,"@greenkeeperio-bot, thanks for your PR! By analyzing the history of the files in this pull request, we identified @gxcsoccer to be a potential reviewer.",True,False,1,0.0
jaredhanson/passport/533,2017-01-02T01:40:10Z,False,5869af7f6480fd18b7f05498,"I've just noticed Travis checks failed due to the usage of a Proxy in test cases. Its support was added in node 6.9, which of course is newer than the versions passport is supported to run at. I use it to create a test double of the session object. Does anyone have an idea how to solve it in a nice way?",True,False,8,794204.4666666667
jaredhanson/passport/533,2017-01-02T23:40:00Z,False,586ae4d56480fd0f37449057,"
[![Coverage Status](https://coveralls.io/builds/9493957/badge)](https://coveralls.io/builds/9493957)

Coverage increased (+0.3%) to 99.698% when pulling **794ac0aa7c7212e811a0e593b841f83305c95b97 on lukaszmakuch:master** into **8de1c668c715aae4ac0070b7ef7f34627c2c4cf4 on jaredhanson:master**.
",True,False,8,794204.4666666667
jaredhanson/passport/533,2017-01-02T23:45:09Z,False,586ae6076480fd144ec4b27a,"Trying to find a way to make tests run even on old node versions, I changed the session test double in a way that instead of using Proxy it uses getters and setters. It's not so nice and versatile as the Proxy approach, but works well on even on ancient javascript. ",True,False,8,794204.4666666667
RestComm/smscgateway-docker/1,2017-01-03T08:21:57Z,False,586b5f286480fd0c1f3f13a8,"Thanks @nicosmaris !

@leftyb can you review from a docker best practices standpoint ?
@vetss @nhanth87 can you review from a functional standpoint ?",True,False,44,18830.616666666665
jaredhanson/passport/533,2017-01-03T19:09:16Z,False,586bf6de6480fd0f37450b52,Would you add a configuration option or feature flag to let Passport users opt in or out of the regenerate behavior? Love the progress on keeping users more secure.,True,False,8,794204.4666666667
jaredhanson/passport/533,2017-01-04T01:39:39Z,False,586c52606480fd0dae5d2da4,"
[![Coverage Status](https://coveralls.io/builds/9510241/badge)](https://coveralls.io/builds/9510241)

Coverage increased (+0.3%) to 99.702% when pulling **6e9c04e08431647a1518897530c371e2f795afeb on lukaszmakuch:master** into **8de1c668c715aae4ac0070b7ef7f34627c2c4cf4 on jaredhanson:master**.
",True,False,8,794204.4666666667
jaredhanson/passport/533,2017-01-04T01:44:31Z,False,586c53826480fd0f3745361e,"Now it's possible to provide the following option
```js
{ regenerate_session: false }
```
what will prevent the session from being regenerated.",True,False,8,794204.4666666667
RestComm/smscgateway-docker/1,2017-01-05T11:27:32Z,False,586e2da96480fd1227a5732c,"Hi @nicosmaris,

The container looks Ok, from my first review. I would like to ask you to provide some configuration examples for basic RUN of the container. I mean at the env_files directory I can see typical RC configuration options files. Is it actually possible to use those files to configure RC? (I can see that there is this  option at the docker scripts.) I am asking because at the ReadME file I can see only the very basic run command. Should as well everything run with that basic command? `docker run --name smsc --net=host -p 0.0.0.0:8080:8080 -d restcomm/smsc`

Regards.",True,False,44,18830.616666666665
RestComm/smscgateway-docker/1,2017-01-05T14:24:34Z,False,586e572a6480fd12ba6fb075,"Hi @leftyb ,

Indeed it needs some cleanup as the folder env_files was copied from restcomm-docker. How is it being used in restcomm-docker? The following file starts that docker and it doesn't seam to use the env_files folder, right?
https://github.com/RestComm/Restcomm-Docker/blob/master/scripts/restcomm_service.sh

For SMSC, the commands are two:
docker run --name db --net=host -p 127.0.0.1:9042:9042 -p 127.0.0.1:9160:9160 -d cassandra
docker run --name smsc --net=host -p 0.0.0.0:8080:8080 -d restcomm/smsc

The first one starts a cassandra on localhost and the second one starts an smsc which calls localhost at 9042

For a multiple VM setup, the java of smsc should look for cassandra ip and fallback to localhost if no such env var is provided. Until then a single VM setup might be fine for an initial docker to play with.

Generally, the bind address of SMSC, the port, the usage of 'default' server or simulator, the cassandra ip, the log path and the loglevel should be on environment variables.",True,False,44,18830.616666666665
RestComm/smscgateway-docker/1,2017-01-05T14:48:25Z,False,586e5cbc6480fd164de42760,"Hi @nicosmaris 
You can find some explanation here on how to run normal docker container: `http://documentation.telestax.com/connect/configuration/docker/Restcomm%20-%20Docker%20Quick%20Start%20Guide.html#install-and-run-restcomm-docker`

I dont get your comment there:
`""Generally, the bind address of SMSC, the port, the usage of 'default' server or simulator, the cassandra ip, the log path and the loglevel should be on environment variables.""` 

I see that you use the `restcomm_conf.sh, restcomm_sslconf.sh,restcomm_support_load_balancer.sh`
Are those actually used? 

",True,False,44,18830.616666666665
RestComm/smscgateway-docker/1,2017-01-05T15:14:27Z,False,586e62d76480fd1227a58e40,"No they don't, I copied them so that we discuss about them :)

Should I delete them and edit only the restcomm_env_locally.sh ?
",True,False,44,18830.616666666665
RestComm/smscgateway-docker/1,2017-01-05T23:38:02Z,False,586ed8de6480fd0cdf8165d1,"@leftyb please ignore my comment ""Generally..."", I just saw the README of phusion and I understood a bit all the environment variables of all those bash scripts.

I prefer having Convention over Configuration so I have put also some default values which are currently the same but changes on the new (sample) env_file have been tested at 8c4b728.

As regards logging, the lines 73 and 74 of Dockerfile put the jboss logs in a place in which you can see them with 'docker logs', is this the preferred way?",True,False,44,18830.616666666665
RestComm/smscgateway-docker/1,2017-01-07T16:43:38Z,False,58711ac16480fd0c8733a8ad,"@leftyb after removing the unused files, all remaining scripts are used and the provisioning of logs works fine.

There are researchers who want to use SMSC docker, do you expect to have one at docker hub this month? If you want, I can assist you in doing a docker push from travis. I haven't done it yet as the group of dockerhub should be restcomm and not mine.",True,False,44,18830.616666666665
RestComm/smscgateway-docker/1,2017-01-08T20:51:03Z,False,5872a63e6480fd0c5d61be84,"@nicosmaris of course I will review tomorrow again and will update.

Thanks.",True,False,44,18830.616666666665
RestComm/smscgateway-docker/1,2017-01-09T10:39:28Z,False,587368706480fd0c33f2c5b4,"Hi @nicosmaris,

After discussing today with the DevOps team, We will need to add the possibility to use as well cassandra  from an external service, not only running in localhost. Do you think that you can add this option as well? As for production almost never, DB will be running locally in the same machine as the smsc gateway service.

Thank you.",True,False,44,18830.616666666665
RestComm/smscgateway-docker/1,2017-01-09T11:46:39Z,False,587378246480fd0fa648f0d3,@leftyb if the current code is good. Let's merge and create a separate issue for external cassandra,True,False,44,18830.616666666665
RestComm/smscgateway-docker/1,2017-01-09T16:23:40Z,False,5873b90d6480fd12ba71c58b,"@leftyb I can try. I have a provisioner of VMs at the following repo but I am stuck on a weird error:

https://github.com/nicosmaris/vm/blob/master/deploy/smsc.sh#L5

apt is locked when I get the VM from the cloud provider and I cannot 'apt-get install' so I either 'sleep' for an amount of time or use 'aptdcon'. If you have even used aptdcon or you have any other idea, let me know.",True,False,44,18830.616666666665
jenkinsci/jenkins-scripts/80,2017-01-09T17:27:34Z,False,5873c8096480fd12ba71cec6,@thomasleveil Would you rather like to have your name as author in or not?,True,False,4,29731.0
jenkinsci/jenkins-scripts/80,2017-01-09T19:03:29Z,False,5873de886480fd184cf3acfd,"I prefer not, as I will not be maintaining it",True,False,4,29731.0
RestComm/smscgateway-docker/1,2017-01-10T10:24:15Z,False,5874b6536480fd0c9ccef25f,"@nicosmaris What I mean is to be able to configure IP and port for Cassandra DB. Something I see that is done here: `echo ""CASSANDRA_IP: ${CASSANDRA_IP:=""127.0.0.1""}""`. 
But I think there is a problem there. You dont actually set the `CASSANDRA_IP` variable with `127.0.0.1` if not set, you are just printing it. Or  I am mistaken?

At the file `restcomm_setenv.sh` can you please delete all the non used variables. I get that no need for all those variables to be used at the RUN command line.

Related your last comment, I dont really understand why you use travis, and what is the problem you are facing. Can you please elaborate a bit more please?

Regrards.",True,False,44,18830.616666666665
RestComm/smscgateway-docker/1,2017-01-10T11:45:53Z,False,5874c9756480fd118c18e53d,"The echo command has an optional substitution in case the variable is not defined. For example:

```
nmaris@nmaris:~$` echo $B

nmaris@nmaris:~$ B='10.11.12.13'
nmaris@nmaris:~$ echo ""B: ${B:=""127.0.0.1""}""
B: 10.11.12.13
nmaris@nmaris:~$ echo $C

nmaris@nmaris:~$ echo ""C: ${C:=""127.0.0.1""}""
C: 127.0.0.1
```

I would prefer to continue the discussion of the multiple VM setup in a new thread as it is needs more than one week effort. I see that you have forked vm repo, but note that you'll need a vultr token and to do so you need a vultr account (about 1 cent of dollar per commit and a bank account), the travis ruby gem and the command described at the link below:

https://docs.travis-ci.com/user/environment-variables/#Encrypting-environment-variables

Also the java has to change as it has hardcoded the value 127.0.0.1 as cassandra ip.",True,False,44,18830.616666666665
RestComm/smscgateway-docker/1,2017-01-10T12:36:25Z,False,5874d54d6480fd0fa6499d9a,"I see @nicosmaris you are right, on the `echo` thanks for clearing out.
Can you please cleanup the `restcomm_setenv.sh` so we can move forward with the PR.

Regards",True,False,44,18830.616666666665
RestComm/smscgateway-docker/1,2017-01-10T12:50:26Z,False,5874d8956480fd0c9ccf02a6,"@nicosmaris can you please as well remove all unused `env` files from the `env_files directory.
Same for `tcpdump_crontab` .

It seems as well that the dockerfile needs some cleanup as well.",True,False,44,18830.616666666665
RestComm/smscgateway-docker/1,2017-01-10T12:55:48Z,False,5874d9d76480fd131150210e,"@nicosmaris what are this lines used for :
`RUN ln -sf /dev/stdout /opt/Restcomm-SMSC/version
RUN ln -sf /dev/stdout /opt/Restcomm-SMSC/jboss-5.1.0.GA/server/simulator/log/server.log
RUN ln -sf /dev/stdout /opt/Restcomm-SMSC/jboss-5.1.0.GA/server/simulator/log/boot.log`

Can you please update the command at the README file with the possibility to access the logs of the container from the host?

Thank you.",True,False,44,18830.616666666665
RestComm/smscgateway-docker/1,2017-01-10T13:15:47Z,False,5874de846480fd136c7e0d76,"/dev/stdout is the stream of 'docker logs'.

As regards the file ca-startcom.der, I assume that we should keep it and add support of SSL in another ticket. If we'll need a new one anyway, I can delete it.",True,False,44,18830.616666666665
RestComm/smscgateway-docker/1,2017-01-11T09:33:21Z,False,5875fbe46480fd0f8274d5c0,"Hi @nicosmaris 
I am not sure that you need to redirect the application logs in order to be able to be accessible from the `docker  logs ` command. I would say that this is something that is done under the hood by docker automatically. I tested as well and there is not need for this redirection. Can you please test as well.

Finally, it seems that the directory `/opt/Restcomm-SMSC/jboss-5.1.0.GA/server/simulator/log` is automatically created from the smsc application no need to created at the docker file. It is better to remove those lines from docker file if not needed because they create additional layers and make the container bigger. Please confirm as well, but from my tests it seems that no needed.

Regards.",True,False,44,18830.616666666665
RestComm/smscgateway-docker/1,2017-01-11T15:04:46Z,False,587649916480fd184cf4e991,"@nicosmaris I see that you are doing a lot of changes.
I think that it is not necessary. It was OK as it was before. At my earlier comment just said (and tested it) that you don't need to add the `ln` commands, as well you dont need to add `p ${INSTALL_DIR}/jboss-5.1.0.GA/server/simulator/log` as it is created automatically from Jboss. 

Regards.",True,False,44,18830.616666666665
RestComm/smscgateway-docker/1,2017-01-11T15:07:11Z,False,58764a256480fd0e7a68b953,"Indeed Jboss creates the files but not the folder. Also in order for the command 'docker logs' to work we need to link them.

As the following build states No such file or directory: '/opt/Restcomm-SMSC/cassandra/cassandra.cql' and the test with curl passed again, we need to find another way to test the functionality.

https://travis-ci.org/nicosmaris/smscgateway-docker/builds/190954292

If it is less readable now, I can revert my last commit.

",True,False,44,18830.616666666665
RestComm/smscgateway-docker/1,2017-01-11T15:24:19Z,False,58764e276480fd179b81af95,"Sorry I dont get your point :
`/opt/Restcomm-SMSC/cassandra/cassandra.cql` What is this file about. Needs to be created, or it is supposed to exist?

About the logs directory and the `docker logs` command, I will retest. I am pretty sure that not needed.
Are you using the command like that? `docker logs -f CONTAINER_NAME`?

Regards",True,False,44,18830.616666666665
RestComm/smscgateway-docker/1,2017-01-11T15:37:09Z,False,587651286480fd179b81b1c8,"Why retesting, when you can read the output? That's the point of using travis. Anyway.

Based on the following comment and the guide, having cassandra and creating the keyspace are preconditions for SMSC. The cql file creates the keyspace and it is part of the artifact.

https://github.com/RestComm/smscgateway/issues/53#issuecomment-269602214

http://docs.telestax.com/smsc-quick-start-user-guide/

As regards having a sanity check I can check in python for zero SM_STATUS at response of /SMS/Messages.json , is there any other prefered sanity check that can be done in a script? The curl returns HTTP 200 even in erroneous cases.",True,False,44,18830.616666666665
RestComm/smscgateway-docker/1,2017-01-11T15:53:46Z,False,587655136480fd0f550940f4,"I dont see that you are running the `docker logs` command at your builds.

Regarding cassandra.cql file, I am asking if the problem is that the script can not create the file, or it is necessary to exist from the beginning? (Add it at the docker file maybe).",True,False,44,18830.616666666665
RestComm/smscgateway-docker/1,2017-01-11T16:10:42Z,False,587659076480fd184cf4f3cd,"I call 'docker logs' indirectly:

https://github.com/nicosmaris/smscgateway-docker/blob/master/.travis.yml#L20
https://github.com/nicosmaris/smscgateway-docker/blob/master/provisioner/docker_do.sh#L308
https://github.com/nicosmaris/smscgateway-docker/blob/master/provisioner/docker_do.sh#L91

docker_do.sh is copied from:
https://github.com/RestComm/Restcomm-Docker/blob/master/scripts/docker_do.sh

The issue with cassandra.cql is fixed since 6b3a5f5. What is pending now is the sanity check.",True,False,44,18830.616666666665
RestComm/smscgateway-docker/1,2017-01-11T16:33:24Z,False,58765e5b6480fd131150e2fa,"But this script is sending the logs to specific file. Is the entire path correct? This is more like RC container specific script. Most probably you need to modify. Can you run the `docker logs` directly and remove the `ln` and the `mkdir` you will see that it works properly.

Sorry but I am loosing you on the sanity check. Can you check the actual system JSON response instead of the correct curl 200 response?
",True,False,44,18830.616666666665
RestComm/smscgateway-docker/1,2017-01-11T16:34:54Z,False,58765eb26480fd0cb18f4fc8,"For the sanity check, yes, that's my plan as stated above...",True,False,44,18830.616666666665
RestComm/smscgateway-docker/1,2017-01-11T19:54:03Z,False,58768d636480fd184cf511cd,"Hello @nicosmaris 

thanks for your efforts.

Which checking can you make for sanity check? Is it possible of checking of server log content? The problem is that SMMSC GW is rather complicated and generally demands of checking of several things. For example HTTP connector may accept messages even if other modul will not be started. We can make checking of absense of ""Exception"" strings and existing of a message that ""jboss is started"".
",True,False,44,18830.616666666665
amygdala/tensorflow-workshop/43,2017-01-11T22:41:48Z,False,5876b4ae6480fd0dae61cb32,LGTM Squash and merge when ready.,True,False,1,0.0
ManageIQ/manageiq/12070,2017-01-11T22:56:16Z,False,5876b8156480fd1093f577c4,Please re-create PR in https://github.com/ManageIQ/manageiq-ui-classic,True,False,7,120980.45
RestComm/smscgateway-docker/1,2017-01-12T08:43:17Z,False,587741ab6480fd0c1f4458db,"@deruelle my plan for the first two months of 2017 is to take issues that is the restcomm components as black boxes like dockers and clients. After becoming familiar with the terms and the APIs I might do some whitebox testing in java.

@vetss manually I do see ""jboss is started"". Now to do an automated sanity check of the docker I don't plan to do assertions on logs. Currently I check an API call that I am not sure whether it is an API of SMSC and Connect or only an API of Connect.

I check that the response of getting list of messages returns an authorized attempt (exit status zero) and not a connection refused (exit status 1)

http://documentation.telestax.com/connect/api/sms-api.html#example-get-response
https://travis-ci.org/nicosmaris/smscgateway-docker#L978

However, if by mistake I don't put any keyspace at cassandra, I still get exit status zero, is it expected?

Should I keep the same check and replace the API call with the following one?

http://documentation.telestax.com/core/smsc/SMSC_Gateway_Admin_Guide.html#_http_interface_description_get_message_status",True,False,44,18830.616666666665
RestComm/smscgateway-docker/1,2017-01-12T09:08:55Z,False,587747ad6480fd0fa64ad835,"Hello @nicosmaris 

what is your target for ""sanity check""? I see two possible targets:
1) checking if SMSC GW has started or not
2) checking if SMSC GW has started but had some problems at starting time that will prevent of its proper work

Sending of a message to HTTP connector and checking of its state ""Get message status""may help if we have some configured destination (SMPP, SS7 or SIP) for message delivering to obtain a state if a message has delivered or not. I am not very sure that we can guarantee it. And also pay attention that it will work in case of some errors.

Unfortunately we do not provide a clear state of SMSC GW to check by a remote request, may be we need to think of it. As for now the most reliable solution is for checking of server log if it contain ""jboss is started"" for target 1 and absense of Exceptions for target 2.

Sending of HTTP request (that do you) may help us in checking if HTTP connectior is started or not.
",True,False,44,18830.616666666665
RestComm/smscgateway-docker/1,2017-01-12T10:09:09Z,False,587755c76480fd0f374a1341,"@nicosmaris @vetss @leftyb I think we should aim for a first version of the docker image that's simple and easily configurable like Restcomm Connect for the first pull request. 

Things like sanity check (that we don't even have with Restcomm Connect docker image right now) and more advanced can be done in future pull requests, IMO.",True,False,44,18830.616666666665
RestComm/smscgateway-docker/1,2017-01-12T13:01:11Z,False,58777e196480fd179b8247cd,"thanks for the merge @leftyb 

@vetss the successful startup message that you mentioned is at the following line:

https://travis-ci.org/nicosmaris/smscgateway-docker/builds/191270068#L4035",True,False,44,18830.616666666665
RestComm/smscgateway-docker/1,2017-01-12T13:08:18Z,False,58777fc76480fd14bcbfab93,"1) ""JBoss (Microcontainer) [5.1.0.GA (build: SVNTag=JBoss_5_1_0_GA date=200905221634)] Started in 57s:489ms"" - is a message that confirms that a starting processes are finished.

2) but SMSC GW has not started successfully. Records that says for it:
a) ""Not all SBB are running now: ServicesDownList=[smscTxSmppServerServiceState, smscRxSmppServerServiceState, smscTxSipServerServiceState, smscRxSipServerServiceState, smscTxHttpServerServiceState, moServiceState, homeRoutingServiceState, mtServiceState, alertServiceState, chargingServiceState, ]""

b) Failed to build ManagedDeployment for: AbstractKernelDeployment@23fcb72b{name=file:/opt/Restcomm-SMSC/jboss-5.1.0.GA/server/simulator/conf/bootstrap/logging.xml installed=true beanFactories=[AbstractBeanMetaData@245d7a82{name=LogBridgeHandler bean=org.jboss.logbridge.LogBridgeHandler properties= constructor=null autowireCandidate=true}]}
org.jboss.deployers.spi.DeploymentException: Error deploying: file:/opt/Restcomm-SMSC/jboss-5.1.0.GA/server/simulator/conf/bootstrap/logging.xml
",True,False,44,18830.616666666665
RestComm/smscgateway-docker/1,2017-01-12T13:20:34Z,False,587782b66480fd1093f5d28e,"Althow ""DeploymentException"" is at DEBUG level, it may be not an error...
But it is not clear for me why we do not have ""ServicesDownList"" (services that are not started)
",True,False,44,18830.616666666665
RestComm/smscgateway-docker/1,2017-01-12T15:22:07Z,False,58779f276480fd179b825a17,"logging.xml is not modified. It is the file of the artifact and it has the following content:

<deployment>
<bean name=""LogBridgeHandler"" class=""org.jboss.logbridge.LogBridgeHandler""/>
</deployment>

@vetss do you want to make the startup of the SMSC GW a new issue to avoid polluting this thread? How can I help?
",True,False,44,18830.616666666665
RestComm/smscgateway-docker/1,2017-01-13T12:27:03Z,False,5878c79d6480fd0e7a69fc16,"@nicosmaris 

do you think that SMSC GW in docker is started properly ?
as for your last provided log I do not see that... Or in other cases it starts properly. If not we need to find the reason / fix it before we can use a docker image.
",True,False,44,18830.616666666665
RestComm/smscgateway-docker/1,2017-01-13T12:44:24Z,False,5878cbaa6480fd0e7a69fe02,@vetss no it doesn't start properly. are the tests of the latest artifact passing?,True,False,44,18830.616666666665
RestComm/smscgateway-docker/1,2017-01-13T19:38:04Z,False,58792ca56480fd14bcc0852d,"I synced my repo with yours again and downloaded the latest artifact 7.3.114.

At boot.log indeed the deploymentException can be ignored.

https://developer.jboss.org/wiki/ClassLoaderHasNotBeenSetExceptionInBootlog

At server.log the error below appears in all of the following lines.

ERROR [org.hibernate.ejb.Ejb3Configuration] (SLEE-InternalDeployer-thread-1) Container is providing a null PersistenceUnitRootUrl: discovery impossible

https://travis-ci.org/nicosmaris/smscgateway-docker/builds/191730838#L1274
https://travis-ci.org/nicosmaris/smscgateway-docker/builds/191730838#L1333
https://travis-ci.org/nicosmaris/smscgateway-docker/builds/191730838#L1392
https://travis-ci.org/nicosmaris/smscgateway-docker/builds/191730838#L1446

And this error might be ignored too.
",True,False,44,18830.616666666665
RestComm/smscgateway-docker/1,2017-01-13T21:09:29Z,False,5879420e6480fd0e0150cea1,"Hello @nicosmaris 

https://travis-ci.org/nicosmaris/smscgateway-docker/builds/191730838#L1274 - we can ignore it ARAIR

Do we have a GUI access to the server (HTTP requests to port 8080) ? If yes we can run 
http://<IP>:8080/slee-management-console/
and check ""Resources"" and ""Services"" TABs, they must contains running RAs and SBBs list. If no SBB in ""services"" then no success in starting process.

I am also thinking that I can see too many DEBUG messages in logs, may be we can fix it somehow up to INFO level. We use for jboss logging configs <jboss>/server/default/conf/jboss-log4j.xml . Is this not checnged as compared with a SMSC GW release ? May it be that other logging system is used unstead of instead of log4j that we usually use ?
",True,False,44,18830.616666666665
RestComm/smscgateway-docker/1,2017-01-13T23:51:20Z,False,587967ff6480fd0c9cd1530d,"Locally, the GUI shows JAIN SLEE running and several resources but no services and no alarm.

No file of the artifact has been altered and raising the JVM memory with JAVA_OPTS gives the same result. ",True,False,44,18830.616666666665
RestComm/smscgateway-docker/1,2017-01-14T09:43:22Z,False,5879f2c26480fd150469cdf2,"> Locally, the GUI shows JAIN SLEE running and several resources but no services and no alarm.

ok, let's do some reseach next week why SMSC GW does not run properly..
",True,False,44,18830.616666666665
RestComm/smscgateway-docker/1,2017-01-15T21:29:15Z,False,587be9b06480fd144ecc178a,"@nicosmaris we investigated with @vetss and it was an issue on the snapshot on cloudbees, the latest snapshot would be working now but I nonetheless moved to the latest github stable release. I just tested the latest docker hub build  locally  and it works now",True,False,44,18830.616666666665
RestComm/smscgateway-docker/1,2017-01-15T22:38:19Z,False,587bf9de6480fd0c33f65bf7,"@deruelle currently when do you push at docker hub? On demand, or through jenkins?

In case the issue appears in docker and not in a local installation without docker, we'll have to check the parameters of run.sh (called at scripts/restcomm_smsc_service.sh), exposed ports of Dockerfile and parameters of 'docker run'.

https://github.com/jboss-dockerfiles/wildfly/issues/6

To a make an automated test, I will check in another pull request the HTTP connector through python as checking the exit status of a curl is not valid. ",True,False,44,18830.616666666665
RestComm/smscgateway-docker/1,2017-01-15T22:57:42Z,False,587bfe696480fd0f14fab935,"@nicosmaris right now every commit to master triggers a new docker build.

Sounds good. I added `xmlstartlet` to the docker image as well to configure the SMSC (similarly to how it is done in mediaserver docker image https://github.com/RestComm/mediaserver-docker). We just need to use it now to configure the files in /opt/Restcomm-SMSC/jboss-5.1.0.GA/server/default/data like cassandra ip and port. Do you want to own that as well ?",True,False,44,18830.616666666665
RestComm/smscgateway-docker/1,2017-01-16T10:12:34Z,False,587c9c976480fd172572e13e,"@deruelle you can assign #2 (due this Wednesday) and #3 (due in 2 weeks) to me.

To avoid issues that are irrelevant to docker, I will use the current latest which is 7.3.115 and then make a PR with the latest for each of these github issues.",True,False,44,18830.616666666665
scalameta/scalameta/542,2017-01-26T00:41:16Z,False,588ac7d66480fd47076d5c94,"Hi everyone! Since we haven't arrived at a concrete conclusion in quite a while, I'll be closing this PR and moving the discussion to a dedicated issue: https://github.com/scalameta/scalameta/issues/599.

I'd love to revisit this matter personally in the future, but at the moment my main and only priority is shipping the semantic API asap. Let's stay in touch.",True,False,13,104572.41666666667
ManageIQ/manageiq/11691,2017-01-26T15:52:01Z,False,588b2b8c6480fd4675c032fd,<pr-mergeability-checker />This pull request is not mergeable.  Please rebase and repush.,True,False,72,539068.1666666666
ManageIQ/manageiq/11691,2017-01-26T16:26:33Z,False,588b37576480fd47f5acb3b9,"<github-pr-commenter-batch />Some comments on commits https://github.com/mansam/manageiq/compare/51960536cebe2daf9a781594cefc5ac5193350de~...92952a721ec4600c42ae47e4380d6d61efbdfd79

**spec/models/miq_provision_virt_workflow_spec.rb**
- [ ] :warning: - 23 - Detected `expect_any_instance_of`. This RSpec method is highly discouraged, please only use when absolutely necessary.
",True,False,72,539068.1666666666
ManageIQ/manageiq/11691,2017-01-26T16:27:37Z,False,588b37656480fd47076daf04,"<rubocop />Checked commits https://github.com/mansam/manageiq/compare/51960536cebe2daf9a781594cefc5ac5193350de~...92952a721ec4600c42ae47e4380d6d61efbdfd79 with ruby 2.2.6, rubocop 0.47.1, and haml-lint 0.20.0
21 files checked, 17 offenses detected

**app/models/miq_provision/helper.rb**
- [ ] :exclamation: - [Line 3](https://github.com/mansam/manageiq/blob/92952a721ec4600c42ae47e4380d6d61efbdfd79/app/models/miq_provision/helper.rb#L3), Col 23 - [Style/TernaryParentheses](http://rubydoc.info/gems/rubocop/0.47.1/RuboCop/Cop/Style/TernaryParentheses) - Omit parentheses for ternary conditions.

**app/models/miq_provision/options_helper.rb**
- [ ] :exclamation: - [Line 60](https://github.com/mansam/manageiq/blob/92952a721ec4600c42ae47e4380d6d61efbdfd79/app/models/miq_provision/options_helper.rb#L60), Col 16 - [Style/TernaryParentheses](http://rubydoc.info/gems/rubocop/0.47.1/RuboCop/Cop/Style/TernaryParentheses) - Omit parentheses for ternary conditions.

**app/models/miq_provision_request.rb**
- [ ] :exclamation: - [Line 124](https://github.com/mansam/manageiq/blob/92952a721ec4600c42ae47e4380d6d61efbdfd79/app/models/miq_provision_request.rb#L124), Col 5 - [Style/MultilineIfModifier](http://rubydoc.info/gems/rubocop/0.47.1/RuboCop/Cop/Style/MultilineIfModifier) - Favor a normal if-statement over a modifier clause in a multiline statement.
- [ ] :exclamation: - [Line 129](https://github.com/mansam/manageiq/blob/92952a721ec4600c42ae47e4380d6d61efbdfd79/app/models/miq_provision_request.rb#L129), Col 5 - [Style/MultilineIfModifier](http://rubydoc.info/gems/rubocop/0.47.1/RuboCop/Cop/Style/MultilineIfModifier) - Favor a normal if-statement over a modifier clause in a multiline statement.
- [ ] :exclamation: - [Line 134](https://github.com/mansam/manageiq/blob/92952a721ec4600c42ae47e4380d6d61efbdfd79/app/models/miq_provision_request.rb#L134), Col 5 - [Style/MultilineIfModifier](http://rubydoc.info/gems/rubocop/0.47.1/RuboCop/Cop/Style/MultilineIfModifier) - Favor a normal if-statement over a modifier clause in a multiline statement.
- [ ] :exclamation: - [Line 17](https://github.com/mansam/manageiq/blob/92952a721ec4600c42ae47e4380d6d61efbdfd79/app/models/miq_provision_request.rb#L17), Col 3 - [Rails/Validation](http://rubydoc.info/gems/rubocop/0.47.1/RuboCop/Cop/Rails/Validation) - Prefer the new style validations `validates :column, presence: value` over `validates_presence_of`.

**app/models/miq_provision_virt_workflow.rb**
- [ ] :exclamation: - [Line 1086](https://github.com/mansam/manageiq/blob/92952a721ec4600c42ae47e4380d6d61efbdfd79/app/models/miq_provision_virt_workflow.rb#L1086), Col 5 - [Style/MultilineIfModifier](http://rubydoc.info/gems/rubocop/0.47.1/RuboCop/Cop/Style/MultilineIfModifier) - Favor a normal if-statement over a modifier clause in a multiline statement.
- [ ] :exclamation: - [Line 1100](https://github.com/mansam/manageiq/blob/92952a721ec4600c42ae47e4380d6d61efbdfd79/app/models/miq_provision_virt_workflow.rb#L1100), Col 5 - [Style/MultilineIfModifier](http://rubydoc.info/gems/rubocop/0.47.1/RuboCop/Cop/Style/MultilineIfModifier) - Favor a normal if-statement over a modifier clause in a multiline statement.

**app/models/mixins/miq_provision_mixin.rb**
- [ ] :exclamation: - [Line 233](https://github.com/mansam/manageiq/blob/92952a721ec4600c42ae47e4380d6d61efbdfd79/app/models/mixins/miq_provision_mixin.rb#L233), Col 7 - [Style/RedundantReturn](http://rubydoc.info/gems/rubocop/0.47.1/RuboCop/Cop/Style/RedundantReturn) - Redundant `return` detected.
- [ ] :exclamation: - [Line 235](https://github.com/mansam/manageiq/blob/92952a721ec4600c42ae47e4380d6d61efbdfd79/app/models/mixins/miq_provision_mixin.rb#L235), Col 7 - [Style/RedundantReturn](http://rubydoc.info/gems/rubocop/0.47.1/RuboCop/Cop/Style/RedundantReturn) - Redundant `return` detected.
- [ ] :exclamation: - [Line 237](https://github.com/mansam/manageiq/blob/92952a721ec4600c42ae47e4380d6d61efbdfd79/app/models/mixins/miq_provision_mixin.rb#L237), Col 7 - [Style/RedundantReturn](http://rubydoc.info/gems/rubocop/0.47.1/RuboCop/Cop/Style/RedundantReturn) - Redundant `return` detected.
- [ ] :exclamation: - [Line 239](https://github.com/mansam/manageiq/blob/92952a721ec4600c42ae47e4380d6d61efbdfd79/app/models/mixins/miq_provision_mixin.rb#L239), Col 7 - [Style/RedundantReturn](http://rubydoc.info/gems/rubocop/0.47.1/RuboCop/Cop/Style/RedundantReturn) - Redundant `return` detected.

**lib/miq_provision_source.rb**
- [ ] :exclamation: - [Line 15](https://github.com/mansam/manageiq/blob/92952a721ec4600c42ae47e4380d6d61efbdfd79/lib/miq_provision_source.rb#L15), Col 5 - [Rails/DynamicFindBy](http://rubydoc.info/gems/rubocop/0.47.1/RuboCop/Cop/Rails/DynamicFindBy) - Use `find_by` instead of dynamic `find_by_id`.

**spec/models/miq_provision_spec.rb**
- [ ] :exclamation: - [Line 194](https://github.com/mansam/manageiq/blob/92952a721ec4600c42ae47e4380d6d61efbdfd79/spec/models/miq_provision_spec.rb#L194), Col 11 - [Style/VariableNumber](http://rubydoc.info/gems/rubocop/0.47.1/RuboCop/Cop/Style/VariableNumber) - Use normalcase for variable numbers.
- [ ] :exclamation: - [Line 201](https://github.com/mansam/manageiq/blob/92952a721ec4600c42ae47e4380d6d61efbdfd79/spec/models/miq_provision_spec.rb#L201), Col 11 - [Style/VariableNumber](http://rubydoc.info/gems/rubocop/0.47.1/RuboCop/Cop/Style/VariableNumber) - Use normalcase for variable numbers.
- [ ] :exclamation: - [Line 304](https://github.com/mansam/manageiq/blob/92952a721ec4600c42ae47e4380d6d61efbdfd79/spec/models/miq_provision_spec.rb#L304), Col 11 - [Style/VariableNumber](http://rubydoc.info/gems/rubocop/0.47.1/RuboCop/Cop/Style/VariableNumber) - Use normalcase for variable numbers.
- [ ] :exclamation: - [Line 311](https://github.com/mansam/manageiq/blob/92952a721ec4600c42ae47e4380d6d61efbdfd79/spec/models/miq_provision_spec.rb#L311), Col 11 - [Style/VariableNumber](http://rubydoc.info/gems/rubocop/0.47.1/RuboCop/Cop/Style/VariableNumber) - Use normalcase for variable numbers.
",True,False,72,539068.1666666666
jenkinsci/jenkins-scripts/80,2017-01-29T04:48:45Z,False,588f0ef16480fd489e4fa526,"This seems to search for a credentials ID.  Credentials IDs tend to be unique for a given scope.  How do you use this script in a way that you couldn't just manually save a single credentials ID?  `changeCredentialPassword.groovy` is operating based on the username (which need not be unique across credentials).  I'm not against merging this, just curious.",True,False,4,29731.0
jenkinsci/jenkins-scripts/80,2017-01-30T08:58:34Z,False,5890aa266480fd4d4fbdd436,"@samrocketman Thanks for your feedback, I've implemented specifying the scope optionally.",True,False,4,29731.0
bmic-development/sparc-request/50,2017-01-31T15:49:29Z,False,589187d46480fd46cb34b0ce,These proper.en.yml definitions should be removed,True,False,1,0.0
WikiEducationFoundation/WikiEduDashboard/1161,2017-02-01T20:14:06Z,False,5892f8346480fd4b52bab8e9,require the worker code at the top.,True,False,1,0.0
everypolitician/everypolitician-data/25050,2017-02-02T19:47:33Z,False,5894aa116480fd4ca8dc8ed4,"

Summary of changes in `data/Iceland/Assembly/ep-popolo-v1.0.json`:

## People

### Added



- `02dd11ac-4766-457d-95cf-e39ae9200feb` - Smári McCarthy

- `08bfd983-b78d-4777-a82a-6359efed1dbf` - Eva Pandora Baldurs­dóttir

- `0d6410e9-120f-4d13-a5b1-6ebf349e4bb4` - Pawel Bartoszek

- `11200136-75c5-4e2f-9b7c-71e13ddb1330` - Unnur Brá Kon­ráðs­dóttir

- `18306392-df40-481b-b886-bb284a03ca47` - Levi Björn Gunnarsson

- `1ca188cd-e387-428b-baf8-ea4e29aab49d` - Andrés Ingi Jóns­son

- `1dbf1791-8d1f-4c99-8315-a572910e8d67` - Þorgerður K. Gunnarsdóttir

- `30e9d641-a2b4-4136-9884-6a6832dbb060` - Teitur Björn Einarsson

- `32320d65-c758-4e79-a83d-26425800d3fc` - Kolbeinn Óttarsson Proppé

- `34b9e551-15cc-4f6a-8fb0-52fd81745dbb` - Óli Björn Kára­son

- `3c0b4c42-0dcd-47d4-8338-b9ddc9afcb5f` - Lilja Alfreðs­dóttir

- `3ef27614-8d1d-4bb4-b948-2405e567cc1f` - Theodóra S. Þorsteins­dóttir

- `4e120dc0-8286-4d5a-ac61-021285f11e01` - Jóna Sólveig Elínar­dóttir

- `4f97e7aa-847c-4f61-93f8-ab20fea007b5` - Benedikt Jóhannesson

- `5b6e03ae-7e65-43aa-89f5-58753d318a0b` - Sigurður Ingi Jóhannsson

- `5c9b8e9a-b9f9-4860-a861-7580bce21054` - Elsa Lara Arnardóttir

- `5d58f5a5-a3de-4ce3-a622-0938665e039a` - Jón Steindór Valdimars­son

- `620c4f63-23cf-4a90-9462-2e708025463b` - Gudlaugur Thor Thordarson

- `62c628cb-f2c5-427a-b4aa-b2b006de2436` - Steinunn Thora Árnadóttir

- `6667a70d-27c6-4db9-8e43-f18bb2bf0bf3` - Thorsteinn Víglundsson

- `7a056c30-9725-44ec-a6d5-c4868584be4a` - Vilhjálmur Árna­son

- `7a305042-250a-460e-ac9d-5b1418dc8fb9` - Brynjar Níelsson

- `82d6a297-31ae-489d-8e4e-682409a6669d` - Vilhjálmur Bjarna­son

- `89a39567-2378-4443-b343-bd266d2d2e79` - Ari Trausti Guðmunds­son

- `8a076489-2086-49d7-9af1-62e11395183f` - Nichole Leigh Mosty

- `94d6a3b5-e1d0-423a-b377-dc1a764eadce` - Birgir Ármanns­son

- `9d9f6f51-2b51-474d-b96a-922a0b9fcfa6` - Einar Brynjolfsson

- `b4baeeae-744b-48ea-9f4f-63a182676990` - Arna Sigurbjörnsdóttir

- `b650d15f-f432-4913-92c5-2c0dbaf74a68` - Rósa Björk Brynjólfs­dóttir

- `b92dcfbb-4bf0-41e0-a154-b9fee6ba1d50` - Þórdís Kolbrún Gylfa­dóttir

- `bae0d488-f80c-49b4-9b50-005fd07e9d80` - Sigríður Andersen

- `bbf3b51f-6f75-4a52-91bc-afc5600d3534` - Gunnar Hrafn Jóns­son

- `ccb88c7f-fbe9-45b9-b5ec-5ef24ac75f96` - Guðjón S. Brjánsson

- `cf129ea6-47dc-4544-b4f6-d6a72b419fd5` - Logi Már Einarsson

- `d001e7bd-11fe-426d-b90f-a5020b49fbf1` - Silja Dögg Gunnars­dóttir

- `d27dd95a-5862-4483-8481-78dbc64306f1` - Þórhildur Sunna Ævarsdóttir

- `d8d9ace3-5c57-4294-b3b5-f5d79883f56c` - Halldóra Mogensen

- `e1fe8a4e-ebca-4a7d-aa5f-e7a7b2f34a55` - Björt Ólafs­dóttir

- `e261f10b-f29b-47b6-844c-9f226a7d0e3e` - Bryndís Haraldsdóttir

- `e3a0d8d6-73c9-432e-9e88-6d7d17e4059a` - Sigmundur David Gunnlaugsson

- `e52a20ef-0675-438d-8776-90c696476eec` - Páll Magnús­son

- `e7ab9516-2b59-4572-a956-f354457ed909` - Njáll Trausti Friðberts­son

- `ebeb0c6b-6e39-4fb4-a5d6-7b8c2bdc947e` - Jón Þór Ólafs­son

- `ecb201a5-933c-4e98-a578-44ef3c64f09d` - Lilja Rafney Magnúsdóttir

- `f4026523-6aa1-454f-91a0-c117a7f7c020` - Hanna Katrín Friðriks­son



### Removed



- `25d0e949-c0c1-4e3e-9ef4-40983958d04e` - Jón Þór Ólafsson



### Name Changes


No name changes


### Additional Name Changes



- `0974c98c-0676-4926-8f4e-0298650af8d1` (Guðlaugur Þór Þórðarson): Added: Guðlaugur Thorus Thori filius.

- `956f67aa-9fba-4a05-83b3-eeb850731b3f` (Guðjón Kristjánsson): Added: Guðjón A. Kristjánsson.

- `992d9c3f-a4ad-4d16-89fe-d216da44745b` (Unnur Brá Konráðsdóttir): Added: אונור בראו קונראודסדוטיר.

- `bc38d048-0ad7-4c67-a048-4ba536c497b8` (Sigurður I. Jóhannsson): Added: Sigurdur Ingi Jóhannsson.

- `e57914ff-8bac-4cd5-ac40-de402147c287` (Ólína Þorvarðardóttir): Added: אולינה ת'ורווארדארדוטיר.



### Wikidata Changes



- `2aa6198f-d267-459e-bbb3-a0277e302d82`: Q24006811 → none

- `71c5f5bb-0c4e-4b27-8601-84bda31b8f93`: Q24006812 → none



## Organizations

### Added



- `reform_party` - Reform Party



### Removed


No organizations removed


## Memberships

### Added


#### term/2016

- Andrés Ingi Jóns­son 

- Ari Trausti Guðmunds­son 

- Arna Sigurbjörnsdóttir 

- Benedikt Jóhannesson 

- Birgir Ármanns­son 

- Birgitta Jónsdóttir 

- Bjarkey Gunnarsdóttir 

- Bjarni Benediktsson 

- Björt Ólafs­dóttir 

- Bryndís Haraldsdóttir 

- Brynjar Níelsson 

- Einar Brynjolfsson 

- Elsa Lara Arnardóttir 

- Eva Pandora Baldurs­dóttir 

- Eygló Harðardóttir 

- Gudlaugur Thor Thordarson 

- Gunnar Bragi Sveinsson 

- Gunnar Hrafn Jóns­son 

- Guðjón S. Brjánsson 

- Halldóra Mogensen 

- Hanna Katrín Friðriks­son 

- Haraldur Benediktsson 

- Jón Gunnarsson 

- Jón Steindór Valdimars­son 

- Jón Þór Ólafs­son 

- Jóna Sólveig Elínar­dóttir 

- Katrín Jakobsdóttir 

- Kolbeinn Óttarsson Proppé 

- Kristján Þór Júlíusson 

- Levi Björn Gunnarsson 

- Lilja Alfreðs­dóttir 

- Lilja Rafney Magnúsdóttir 

- Logi Már Einarsson 

- Nichole Leigh Mosty 

- Njáll Trausti Friðberts­son 

- Oddný G. Harðardóttir 

- Pawel Bartoszek 

- Páll Magnús­son 

- Rósa Björk Brynjólfs­dóttir 

- Sigmundur David Gunnlaugsson 

- Sigríður Andersen 

- Sigurður Ingi Jóhannsson 

- Silja Dögg Gunnars­dóttir 

- Smári McCarthy 

- Steingrímur J. Sigfússon 

- Steinunn Thora Árnadóttir 

- Svandís Svavarsdóttir 

- Teitur Björn Einarsson 

- Theodóra S. Þorsteins­dóttir 

- Thorsteinn Víglundsson 

- Unnur Brá Kon­ráðs­dóttir 

- Valgerður Gunnarsdóttir 

- Vilhjálmur Bjarna­son 

- Vilhjálmur Árna­son 

- Ásmundur Friðriksson 

- Ásta Guðrún Helgadóttir 

- Óli Björn Kára­son 

- Ólöf Nordal 

- Óttarr Proppé 

- Þorgerður K. Gunnarsdóttir 

- Þórdís Kolbrún Gylfa­dóttir 

- Þórhildur Sunna Ævarsdóttir 

- Þórunn Egilsdóttir 




### Removed


#### term/2013

- Jón Þór Ólafsson 





## Terms



### Added

- `term/2016` - Alþingi 2016













",True,False,2,760.8166666666667
everypolitician/everypolitician-data/25050,2017-02-03T08:28:22Z,False,5894aa116480fd4ca8dc8ed5,This Pull Request has been superseded by #25068,True,False,2,760.8166666666667
wc-catalogue/blaze-elements/153,2017-02-03T09:38:15Z,False,58959c576480fd4af2faa105,why do we use minimalised versions in tests? any reason for that?,True,False,39,10889.733333333334
wc-catalogue/blaze-elements/153,2017-02-03T09:42:17Z,False,58959c4a6480fd468ad2ca5c,can we somehow set single entrypoint for multiple scripts? I'm sure that this was passible in webpack 1 see https://webpack.github.io/docs/multiple-entry-points.html,True,False,39,10889.733333333334
wc-catalogue/blaze-elements/153,2017-02-03T10:53:23Z,False,5895606f6480fd4be687fe80,let's change it globally,True,False,39,10889.733333333334
wc-catalogue/blaze-elements/153,2017-02-03T10:54:01Z,False,589560676480fd4a2829781a,please update template as well,True,False,39,10889.733333333334
wc-catalogue/blaze-elements/153,2017-02-03T10:55:43Z,False,589560706480fd4f99eba5f7,we should build this only for production,True,False,39,10889.733333333334
wc-catalogue/blaze-elements/153,2017-02-03T10:56:27Z,False,589560646480fd506e5bec08,same as 👆,True,False,39,10889.733333333334
wc-catalogue/blaze-elements/153,2017-02-03T11:43:21Z,False,589561696480fd46dd208656,Updated...,True,False,39,10889.733333333334
wc-catalogue/blaze-elements/153,2017-02-03T12:46:48Z,False,5895629b6480fd4b1cab306d,"please just add this to webpack.config.js and remove all `--host 0.0.0.0`

```
    devServer: {
      host: '0.0.0.0'
    }
```",True,False,39,10889.733333333334
wc-catalogue/blaze-elements/153,2017-02-03T12:50:00Z,False,589562ae6480fd46dd208904,I really don't want to be picky but we should create some helper function for this because it's really messy. If you want we can pair to come with some viable solution.,True,False,39,10889.733333333334
wc-catalogue/blaze-elements/153,2017-02-03T13:59:30Z,False,5895e0906480fd515fdc242f,just one small thin can we keep main package unscoped? I don't think it's necessary.,True,False,39,10889.733333333334
wc-catalogue/blaze-elements/153,2017-02-03T14:14:49Z,False,589564716480fd47f5b2ab73,"sorry I didn't realize that earlier but we should move returns from  _devModules, _prodModules and _testModules directly here so it's more straightforward. You can even put IIAFE(Immediately Invoked Arrow Function Expression 😉 ) to `entry` directly so we keep structure of config more consistent.",True,False,39,10889.733333333334
wc-catalogue/blaze-elements/153,2017-02-06T12:06:06Z,False,5899c0116480fd966ab987f8,"Is it really wise to have main package un-scoped & all sub-packages scoped?
- It does not make a lot of sense...",True,False,39,10889.733333333334
wc-catalogue/blaze-elements/153,2017-02-06T14:21:57Z,False,5899c1186480fd9aa07d7a40,"wow looks like you have tried to open gate to callback hell dimension 😄 

![mr-clippy](https://cloud.githubusercontent.com/assets/82104/22650516/d4414258-ec7f-11e6-9f36-8a95b0e6a38e.jpg)


",True,False,39,10889.733333333334
wc-catalogue/blaze-elements/153,2017-02-06T14:23:19Z,False,5899c1186480fd9e30eba80e,please add ifProdOrSite here as well but without true false hell and add no callback support to the helper,True,False,39,10889.733333333334
wc-catalogue/blaze-elements/153,2017-02-06T19:54:57Z,False,5899d7166480fd98f8398ca2,why is argument with name `callback` boolean?,True,False,39,10889.733333333334
wc-catalogue/blaze-elements/153,2017-02-06T19:55:52Z,False,5899d7026480fd98f8398c83,why is this needed? localhost is used by default,True,False,39,10889.733333333334
wc-catalogue/blaze-elements/153,2017-02-06T19:58:33Z,False,5899d7066480fd98bbe62809,"you didn't write this, but it's really necessary only for production build. We don't need to get bugged all the time in both console and browser devtools that unminified files are exceeding some file size. pls change to
`hints: ifProd() && 'warning'`",True,False,39,10889.733333333334
wc-catalogue/blaze-elements/153,2017-02-06T20:18:12Z,False,5899d7256480fd98bbe62823,"`generic` is not very ""generic"" IMHO. Let's use a placeholder style `@blaze-elements/<component-name>`",True,False,39,10889.733333333334
wc-catalogue/blaze-elements/153,2017-02-06T20:26:21Z,False,5899d70d6480fd98f8398c90,"this is a nit pick but better stay consistent.

Let's use webpack `env` flags together, then `wp-devServer` flags.

```diff
-""start"": ""../../node_modules/.bin/webpack-dev-server --config ../../webpack.config.js --env.dev --hot --env.element=typography""
+""start"": ""../../node_modules/.bin/webpack-dev-server --config ../../webpack.config.js --env.dev --env.element=typography --hot""

```",True,False,39,10889.733333333334
wc-catalogue/blaze-elements/153,2017-02-06T20:29:55Z,False,5899d7106480fd98bbe62816,"Why is this done this way? 
import are supported directly within `scss`

```scss
// style.scss
@import ""~blaze/scss/generics.global.scss"";
@import ""~blaze/scss/components.typography.scss"";
```

```ts
// style.ts
import './styles.scss';
```",True,False,39,10889.733333333334
wc-catalogue/blaze-elements/153,2017-02-06T20:44:02Z,False,5899d7346480fd98f8398cb0,"there is no reason this to be a function.

rather use const with proper path resolve and more descriptive name

```diff
-function _packagePrefix() {
-  return './packages' + ( env.element ? `/${env.element}` : '' );
-}
+const packagePath = resolve('./packages', env.element || '' );
```",True,False,39,10889.733333333334
wc-catalogue/blaze-elements/153,2017-02-06T21:01:55Z,False,5899d6fe6480fd98f8398c72,"again nit pick.

name functions by what they do.

This one returns entry point, so `function getEntryPointConfig() {` is definitely more appropriate.

Points to do:
- properly resolve paths via `resolve` instead of string concat
- you dont need to use strings for object keys

Points to consider:
- also we could make it pure and extract it from direct config

```js
function getEntryPointConfig(basePath, {isTest,isProd}={}) {
   if( isTest ){
     return {
       test: resolve(basePath, '/index.test.ts'),
       'test-helpers': './test-helpers.ts',
     };
   }
   if( isProd ){
      return /*...*/
   }
   return /*...*/

   
}
```

then:

```js
module.exports = ( env ) => {
  const { ifProd, ifNotProd, ifTest, ifDev, ifSite } = getIfUtils( env, ['prod', 'test', 'dev', 'site'] );
  const packagePath = resolve('./packages', env.element || '' );
  const entry = getEntryPointConfig(packagePath,{isTest:isTest(),isProd:isProd()});
  // ...
}
```",True,False,39,10889.733333333334
wc-catalogue/blaze-elements/153,2017-02-06T21:17:49Z,False,5899d6f76480fd98f8398c64,"**NOTE** 🚨

this build entry points are not doing what you think they are doing.

`index.ts` imports `define` from skate, so as a end result. skate will be always bundled. This is not what we wanted.

What you need to do:

- for prod build you have to provide `externals` for main index.ts packages 
```
externals: {
  skate: 'skatejs'
}
```
- for prod build of `index-with-deps.ts` that vendor import is completely unnecessary and may increase bundle size. We are using three shaking, so only used functions/imports are bundled. only thing that you need to import there are `polyfills`




",True,False,39,10889.733333333334
wc-catalogue/blaze-elements/153,2017-02-06T21:29:10Z,False,5899dbb36480fd9f21ec1dc4,"there is no `main.js` generated during prod build, pls change in all packages to `""main"": ""dist/index.js""`",True,False,39,10889.733333333334
wc-catalogue/blaze-elements/153,2017-02-09T08:45:46Z,False,589c2c466480fd9d72a9232b,"Because **localhost** is **127.0.0.1** and it is useless when you need to test from e.g. VM or when you are running it in VM and want to test from outside.

Typical use case is testing in IEs.",True,False,39,10889.733333333334
wc-catalogue/blaze-elements/153,2017-02-10T12:47:02Z,False,589dbcf66480fd98f83c41ed,does this work? it should be `styles.scss`,True,False,39,10889.733333333334
wc-catalogue/blaze-elements/153,2017-02-10T13:10:44Z,False,589dbcf96480fd98bbe852d0,"ok now I see what you try to do in here - mimic `getIfUtils`.
So we should adhere to their implementation and make things easier. 

```js
function getCustomIfUtils({ifDev, ifProd, ifSite}={}){
   return {
     ifProdOrSite(value, alternate){  return getByEnvValue(ifProd() || isSite(), value, alternate )  },
     ifDevOrSite(value, alternate){ return getByEnvValue(ifDev() || isSite(), value, alternate ) }
   }

   function getByEnvValue(envValue, value, alternate ){
     return isUndefined(value) ? envValue : propIf(envValue, value, alternate )
   }

   function isUndefined(val){ return typeof val === ""undefined"" }
   function getValue(val) {
    return JSON.parse(val)
   }
   function propIf(add, value, alternate) {
     return getValue(add) ? value : alternate
   }
}
```

and then on the top

```js
module.exports = ( env ) => {
  const { ifProd, ifNotProd, ifTest, ifDev, ifSite } = getIfUtils( env, ['prod', 'test', 'dev', 'site'] );
  const { ifProdOrSite, ifDevOrSite } = getCustomIfUtils({ifDev,ifProd,ifSite});
  // ...
}
```",True,False,39,10889.733333333334
wc-catalogue/blaze-elements/153,2017-02-10T13:13:49Z,False,589dbce76480fd95ade14a3c,"not sure, if it doesn't have to be `dist/index.min.js` ?",True,False,39,10889.733333333334
wc-catalogue/blaze-elements/153,2017-02-10T13:17:16Z,False,589dbe246480fd98bbe854cd,"can you add comment there, because it's not obvious why is it there. thanks",True,False,39,10889.733333333334
wc-catalogue/blaze-elements/153,2017-02-10T13:23:20Z,False,589dc3de6480fd9ace62c87c,"### Things to do 

> ( Im putting it here because stupid github has hidden those comments )

this build entry points are not doing what you think they are doing.

`index.ts` imports `define` from skate, so as a end result. skate will be always bundled. This is not what we wanted.

What you need to do:

- [ ] for prod build you have to provide `externals` for main index.ts packages 
```
externals: {
  skatejs: 'skatejs'
}
```
- [ ] for prod build of `index-with-deps.ts` that vendor import is completely unnecessary and may increase bundle size. We are using three shaking, so only used functions/imports are bundled. only thing that you need to import there are `polyfills`",True,False,39,10889.733333333334
wc-catalogue/blaze-elements/153,2017-02-10T13:33:40Z,False,589dc3346480fd9596c3c3c4,"this doesn't work. Pls don't always copy paste what I write in review :D Im not unit tested because I'm human :D 

there is context needed, again we can make things DRY

```js
const context = resolve(__dirname);
const packagePath = resolve( context, './packages', env.element || '' );

return {
   context,
   entry: getEntryPointConfig( packagePath, { ... } ),
  // ...
   
```
",True,False,39,10889.733333333334
wc-catalogue/blaze-elements/153,2017-02-10T13:44:01Z,False,589dc3b06480fd97ff8892ff,I am not sure what you meant by that.,True,False,39,10889.733333333334
wc-catalogue/blaze-elements/153,2017-02-10T13:45:17Z,False,589dc4246480fd9aa0801c6e,"isn't the diff obvious? 

`--hot` is argument for webpack-dev-server
`--env.<foo>` is for webpack

",True,False,39,10889.733333333334
wc-catalogue/blaze-elements/153,2017-02-10T13:45:24Z,False,589dc3fd6480fd9542d6a32e,"If we add **externals**, skate will not make it to any of the bundles, as externals are global, or at least I have not found anything else in Webpack ""documentation"".

As far as polyfills goes - I think we did not want to ship them at all.",True,False,39,10889.733333333334
wc-catalogue/blaze-elements/153,2017-02-10T13:47:52Z,False,589dc48e6480fd9f21ee8ce6,"well, because the config is wrong written. Next time don't hesitate to discuss things with me. @elmariofredo is not the only devstack ""guru"" in the room ;) :P Anyway last 2 devstacks that are open source were build primarily by me :P just saying ☮

here is what we need to do:
https://webpack.js.org/concepts/configuration/#multiple-targets

",True,False,39,10889.733333333334
wc-catalogue/blaze-elements/153,2017-02-10T13:59:25Z,False,589dc75f6480fda01865dacf,"for the next time, we don't need to produce 1000 lines of blank lines, mario 200px font era is long gone. 

Also it's a smell if you need lot of blank lines in the function to have separated content, it probably does too much and should be chunked to separate small footprint functions",True,False,39,10889.733333333334
wc-catalogue/blaze-elements/153,2017-02-10T14:24:58Z,False,589dd26d6480fd95ade15ade,"Not the right place to discuss it, but we should probably discuss how we want the code to be formatted to have it unified...

I was not terribly happy with new lines, but got used to put them everywhere and not aware that we have change it - maybe I did not pay attention :)

So lets just make some rules what we deffinately want and what we do not care about, because e.g. the formatter seams to be switching it one way and than the other constantly in certain files :)",True,False,39,10889.733333333334
wc-catalogue/blaze-elements/153,2017-02-10T23:04:25Z,False,589e47156480fd98f83ca448,"Yup yup. That's why I wrote ""next time"". Formatter had a bug with ending spaces in curly braces which I would like to also removr, the code looks wierd and long with all those spaces. We will discuss is in person for sure. Thanks!",True,False,39,10889.733333333334
wc-catalogue/blaze-elements/153,2017-02-10T23:07:59Z,False,589e49606480fd98f83ca95d,"Great job @hopkins-tk will take a look tomorrow. If everything will be OK, I'll merge it. Thx!",True,False,39,10889.733333333334
chrishenry/deltanyc-heatseek/78,2017-02-17T02:57:01Z,False,58a66d236480fd6689316d67,"Hmm, wasn't the address in the design?",True,False,9,5341.083333333333
chrishenry/deltanyc-heatseek/78,2017-02-17T02:57:28Z,False,58a66d206480fd5fe55bf2cc,"Yep, sorry, I don't know how the duplicate got in here...",True,False,9,5341.083333333333
chrishenry/deltanyc-heatseek/78,2017-02-17T03:11:45Z,False,58a66d216480fd6b40a50e4c,"Hmm, is this supposed to test that 5 properties will come back in json format? If so, you should also test that paging works. should be pretty easy to by using `FactoryGirl` to create 31 properties, and then ensure only 30 are returned.",True,False,9,5341.083333333333
chrishenry/deltanyc-heatseek/78,2017-02-17T03:24:39Z,False,58a6729b6480fd6738861c2d,"One question we should discuss briefly; whether or not to check in `bower_components`. [Here's a quick list of pros/cons.](https://addyosmani.com/blog/checking-in-front-end-dependencies/)

To add to them; checking them in can make diffs very, very hard to read. This PR is an example of that unfortunate fact.

My take is that for this particular project, it'll be simpler to have our dependencies checked in to avoid deploy problems and the inevitable build problems that result from the additional step. 

What do you guys think?",True,False,9,5341.083333333333
chrishenry/deltanyc-heatseek/78,2017-02-17T03:30:49Z,False,58a66ed56480fd6a3384189e,"Yes - it was originally.  However, at our last meeting Andrew told me to get rid of it.  So, I actually made this change with him in person.",True,False,9,5341.083333333333
chrishenry/deltanyc-heatseek/78,2017-02-17T03:33:11Z,False,58a66f206480fd6738861948,Makes sense!  Sure thing - I'll make the change.  ,True,False,9,5341.083333333333
chrishenry/deltanyc-heatseek/78,2017-02-17T03:33:19Z,False,58a66f536480fd6a338418e8,"Okie dokie. It is 30px right below, at font-size 30px. ;)",True,False,9,5341.083333333333
apache/gora/97,2017-02-17T17:24:12Z,False,58a739a36480fd641bafdba2,"@vaibhavthapliyal thank you for this, can you please format the code in 2 space indents? Thank you.",True,False,15,7271.016666666666
apache/gora/97,2017-02-18T08:13:51Z,False,58a803f86480fd670b40e6ef,"@lewismc Can you check it now, if it's formatted correctly?",True,False,15,7271.016666666666
chrishenry/deltanyc-heatseek/78,2017-02-20T16:30:14Z,False,58ab1ff26480fd5e910a5976,"@chrishenry  I created issues for my ToDo items above, so we could merge this as long as it looks ok to you, and we decide what we want to do about bower_components.  I'm still a bit stuck on the Karma configuration, but if other people have access, perhaps someone else might be interested in playing with / cleaning up what I got started.  We could add an issue to set up CI as well.  Not sure if that would be something to do now or after more tests are written.",True,False,9,5341.083333333333
chrishenry/deltanyc-heatseek/78,2017-02-20T19:58:06Z,False,58ab4aa96480fd6a71be4e77,"Merging, and just noting that committing assets is our best bet for now.",True,False,9,5341.083333333333
apache/gora/97,2017-02-21T23:10:51Z,False,58acc9056480fd6175e87361,Yes this looks much better. I'll try and review shortly. ,True,False,15,7271.016666666666
apache/gora/97,2017-02-22T03:57:36Z,False,58ad0d4c6480fd5f9f7a4561,Thanks. Will be looking forward to hearing from you.,True,False,15,7271.016666666666
apache/gora/97,2017-02-22T04:32:56Z,False,58ad19536480fd6892fad654,"Hi @vaibhavthapliyal when I run the test suite, I get the following
```
-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running org.apache.gora.accumulo.store.AccumuloStoreTest
2017-02-21 20:15:03,855 INFO  [main] store.DataStoreTestBase (DataStoreTestBase.java:setUpClass(67)) - setting up class
2017-02-21 20:15:03,857 INFO  [main] gora.GoraTestDriver (GoraAccumuloTestDriver.java:setUpClass(50)) - Starting Accumulo MiniAccumuloCluster...
2017-02-21 20:15:07,283 INFO  [main] impl.MiniAccumuloClusterImpl (MiniAccumuloClusterImpl.java:start(609)) - Starting MAC against instance goraTest and zookeeper(s) localhost:56321.
2017-02-21 20:15:09,847 INFO  [main] store.DataStoreTestBase (DataStoreTestBase.java:setUp(90)) - setting up test
2017-02-21 20:15:10,671 WARN  [main] client.ClientConfiguration (ClientConfiguration.java:loadFromSearchPath(227)) - Found no client.conf in default paths. Using default client configuration values.
2017-02-21 20:15:10,754 INFO  [main] zookeeper.ZooKeeper (Environment.java:logEnv(100)) - Client environment:zookeeper.version=3.4.5-1392090, built on 09/30/2012 17:52 GMT
2017-02-21 20:15:10,755 INFO  [main] zookeeper.ZooKeeper (Environment.java:logEnv(100)) - Client environment:host.name=lmc-056430
2017-02-21 20:15:10,755 INFO  [main] zookeeper.ZooKeeper (Environment.java:logEnv(100)) - Client environment:java.version=1.8.0_91
2017-02-21 20:15:10,756 INFO  [main] zookeeper.ZooKeeper (Environment.java:logEnv(100)) - Client environment:java.vendor=Oracle Corporation
2017-02-21 20:15:10,756 INFO  [main] zookeeper.ZooKeeper (Environment.java:logEnv(100)) - Client environment:java.home=/Library/Java/JavaVirtualMachines/jdk1.8.0_91.jdk/Contents/Home/jre
2017-02-21 20:15:10,757 INFO  [main] zookeeper.ZooKeeper (Environment.java:logEnv(100)) - Client environment:java.class.path=/usr/local/gora/gora-accumulo/target/test-classes:/usr/local/gora/gora-accumulo/target/classes
...
/Users/lmcgibbn/.m2/repository/org/apache/hadoop/hadoop-mapreduce-client-hs/2.5.2/hadoop-mapreduce-client-hs-2.5.2.jar:
2017-02-21 20:15:10,759 INFO  [main] zookeeper.ZooKeeper (Environment.java:logEnv(100)) - Client environment:java.library.path=/Users/lmcgibbn/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
2017-02-21 20:15:10,760 INFO  [main] zookeeper.ZooKeeper (Environment.java:logEnv(100)) - Client environment:java.io.tmpdir=/var/folders/mw/f_p4r21n5ld16hnyd7j8r8w4fv8362/T/
2017-02-21 20:15:10,760 INFO  [main] zookeeper.ZooKeeper (Environment.java:logEnv(100)) - Client environment:java.compiler=<NA>
2017-02-21 20:15:10,760 INFO  [main] zookeeper.ZooKeeper (Environment.java:logEnv(100)) - Client environment:os.name=Mac OS X
2017-02-21 20:15:10,761 INFO  [main] zookeeper.ZooKeeper (Environment.java:logEnv(100)) - Client environment:os.arch=x86_64
2017-02-21 20:15:10,763 INFO  [main] zookeeper.ZooKeeper (Environment.java:logEnv(100)) - Client environment:os.version=10.11.6
2017-02-21 20:15:10,764 INFO  [main] zookeeper.ZooKeeper (Environment.java:logEnv(100)) - Client environment:user.name=lmcgibbn
2017-02-21 20:15:10,764 INFO  [main] zookeeper.ZooKeeper (Environment.java:logEnv(100)) - Client environment:user.home=/Users/lmcgibbn
2017-02-21 20:15:10,764 INFO  [main] zookeeper.ZooKeeper (Environment.java:logEnv(100)) - Client environment:user.dir=/usr/local/gora/gora-accumulo
2017-02-21 20:15:10,765 INFO  [main] zookeeper.ZooKeeper (ZooKeeper.java:<init>(438)) - Initiating client connection, connectString=localhost:56321 sessionTimeout=30000 watcher=org.apache.accumulo.fate.zookeeper.ZooSession$ZooWatcher@4009e306
2017-02-21 20:15:10,798 INFO  [main-SendThread(localhost:56321)] zookeeper.ClientCnxn (ClientCnxn.java:logStartConnect(966)) - Opening socket connection to server localhost/0:0:0:0:0:0:0:1:56321. Will not attempt to authenticate using SASL (unknown error)
2017-02-21 20:15:10,821 WARN  [main-SendThread(localhost:56321)] zookeeper.ClientCnxn (ClientCnxn.java:run(1089)) - Session 0x0 for server null, unexpected error, closing socket connection and attempting reconnect
java.net.ConnectException: Connection refused
	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method)
	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717)
	at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:350)
	at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1068)
2017-02-21 20:15:10,930 INFO  [main-SendThread(localhost:56321)] zookeeper.ClientCnxn (ClientCnxn.java:logStartConnect(966)) - Opening socket connection to server localhost/127.0.0.1:56321. Will not attempt to authenticate using SASL (unknown error)
2017-02-21 20:15:10,933 INFO  [main-SendThread(localhost:56321)] zookeeper.ClientCnxn (ClientCnxn.java:primeConnection(849)) - Socket connection established to localhost/127.0.0.1:56321, initiating session
2017-02-21 20:15:10,944 INFO  [main-SendThread(localhost:56321)] zookeeper.ClientCnxn (ClientCnxn.java:onConnected(1207)) - Session establishment complete on server localhost/127.0.0.1:56321, sessionid = 0x15a64079dd40004, negotiated timeout = 30000
2017-02-21 20:17:13,269 WARN  [Thrift Connection Pool Checker] impl.ThriftTransportPool (ThriftTransportPool.java:checkForStuckIO(206)) - Thread ""main"" stuck on IO to LMC-056430:54933 (0) for at least 120171 ms
```
Tests then hang. I found some [existing issues similar to this](https://community.cloudera.com/t5/Storage-Random-Access-HDFS/Unable-to-create-table-in-Accumulo/td-p/17134), I'm seeing if I can debug and get further with this.
I did notice that we don't use a **client.conf**, this _may_ be something we need to implement in the Driver setup or via client.conf. Not sure yet.",True,False,15,7271.016666666666
apache/gora/97,2017-02-22T04:33:33Z,False,58ad19716480fd6588a122c8,I also created https://issues.apache.org/jira/browse/GORA-504 to track the issue,True,False,15,7271.016666666666
apache/gora/97,2017-02-22T06:54:48Z,False,58ad364b6480fd5e910c383e,"Hi,
Do the tests proceed further in your case after this line?
`2017-02-21 20:17:13,269 WARN  [Thrift Connection Pool Checker] impl.ThriftTransportPool (ThriftTransportPool.java:checkForStuckIO(206)) - Thread ""main"" stuck on IO to LMC-056430:54933 (0) for at least 120171 ms`

I get a build sucess even after the Connection Refused. I'll check for some fixes and revert back.",True,False,15,7271.016666666666
apache/gora/97,2017-02-22T07:07:13Z,False,58ad38a66480fd694431ed49,"> Do the tests proceed further in your case after this line?
No they stall... can someone else check for tests continuing and passing with this patch? @renato2099 ",True,False,15,7271.016666666666
apache/gora/97,2017-02-22T09:03:17Z,False,58ad58bc6480fd6ade366446,"@lewismc Hi, I think the issue is with your /etc/hosts file.

Make sure you have these entries in your host file.
127.0.0.1 localhost
127.0.0.1 your_hostname
Can you please check if this fixes the issue?
A reference to the solution of this can be found here:
https://community.cloudera.com/t5/Storage-Random-Access-HDFS/Problems-running-a-write-query-on-an-accumulo-cluster/td-p/21786/page/2",True,False,15,7271.016666666666
apache/gora/97,2017-02-22T12:50:26Z,False,58ad8cbd6480fd60a87a7bbb,@vaibhavthapliyal @lewismc I applied the PR and gora-accumulo passed all tests successfully 👍 ,True,False,15,7271.016666666666
apache/gora/97,2017-02-22T12:53:56Z,False,58ad8ce46480fd60a87a7c43,"@lewismc regarding the 2space vs 4space, the only issue with this is that now the whole AccumuloStore looks like if it was modified, didn't we had a style check on maven at some point? maybe we should have a JIRA to just make the whole code standard and keep the changes of this PR only addressing the ones that it's supposed to",True,False,15,7271.016666666666
apache/gora/97,2017-02-22T15:18:14Z,False,58adb7c26480fd6588a1a07a,"Regarding the formatting... yeah I agree. That's my fault, I thought
AccumuloStore was already formatted 2 space indents.
We should probably use the maven formatting plugin with out code template
in a subsequent issue.

On Wed, Feb 22, 2017 at 4:53 AM Renato Marroquin <notifications@github.com>
wrote:

> @lewismc <https://github.com/lewismc> regarding the 2space vs 4space, the
> only issue with this is that now the whole AccumuloStore looks like if it
> was modified, didn't we had a style check on maven at some point? maybe we
> should have a JIRA to just make the whole code standard and keep the
> changes of this PR only addressing the ones that it's supposed to
>
> —
> You are receiving this because you were mentioned.
>
>
> Reply to this email directly, view it on GitHub
> <https://github.com/apache/gora/pull/97#issuecomment-281661168>, or mute
> the thread
> <https://github.com/notifications/unsubscribe-auth/ABHJl1EHr9v5PUkq3mjn0w2XA8nIqeg8ks5rfC_kgaJpZM4MEAkC>
> .
>
-- 

*Lewis*
Dr. Lewis J. McGibbney Ph.D, B.Sc
Director, MCMA Associates
Phone: +1(626)498-3090
Skype: lewis.john.mcgibbney
Email: lewis.mcgibbney@gmail.com
",True,False,15,7271.016666666666
apache/gora/97,2017-02-22T16:19:50Z,False,58adba646480fd5f8cf8ca4f,"I adjusted my /etc/hosts file and all is good, thank you @vaibhavthapliyal  ",True,False,15,7271.016666666666
apache/gora/97,2017-02-22T17:21:11Z,False,58adc88b6480fd670b465c8b,Cheers!,True,False,15,7271.016666666666
apache/gora/97,2017-02-22T18:35:13Z,False,58ade0d26480fd67c2998a37,thanks @vaibhavthapliyal !,True,False,15,7271.016666666666
ManageIQ/manageiq/11691,2017-02-23T19:47:06Z,False,58af3f9b6480fd5e910d8810,<pr-mergeability-checker />This pull request is not mergeable.  Please rebase and repush.,True,False,72,539068.1666666666
andrewragone/scrapbook/1,2017-02-26T02:59:25Z,False,58b2448f6480fd5fc9c6686a,looks good,True,False,1,0.0
status-im/wiki.status.im/14,2017-02-26T14:01:11Z,False,58b2dfb16480fd5f0fb79030,"Looks good. two things struck me early on though 
There is a behavioural psychology reason for stating something to the effect that  ""This document is not a rulebook,"" and or "" We expect community members to follow the spirit as much as the letter of this documentation"".  The reason is that self monitoring is more effective when there is ambiguity over what the rules may be.  Ambiguity also gives people a way to save face and feel better about resolving disagreements with others and still feeling internally consistent. In other words, people don't like to get caught breaking rules or guidelines but they feel worse about reintegration after breaking rules than after 'misunderstandings'.  

""showing respect and humanity"" : 
Humanity is a double edged sword.  As a species we are naturally capable of being vindictive, spiteful, violent and aggressive. I suspect Status.im would wish to exclude these adaptive behaviours from our community opting instead for    ",True,False,13,14495.55
status-im/wiki.status.im/14,2017-02-27T09:42:45Z,False,58b3f49c6480fd5f63feffa8,"I understand your point about behavioural psychology, i would hope to have the wording so that it gives people information on what is expected of them and enough freedom to be creative and not to stifle innovation, which is why i don't see that it should be a strict set of rules rather than a set of guidelines.

The word `Humanity` in my opinion in this context refers to the virtue humanity, as in doing humanitarian acts towards others. Perhaps it could be rephrased to `showing respect and basic humane ethics and morals for one another`.",True,False,13,14495.55
status-im/wiki.status.im/14,2017-02-27T14:21:01Z,False,58b435da6480fd5f0fb821d5,"> We want to grow productive  

wut?",True,False,13,14495.55
status-im/wiki.status.im/14,2017-02-27T14:22:32Z,False,58b436326480fd6944351e9a,"> We will challenge prejudice that could jeopardise the participation of any person in the project.

why is this removed?",True,False,13,14495.55
status-im/wiki.status.im/14,2017-02-27T14:26:50Z,False,58b437406480fd67388e6be9,"It's not removed, but moved under - **Be respectful**",True,False,13,14495.55
status-im/wiki.status.im/14,2017-02-27T14:28:09Z,False,58b4377f6480fd5f4e6b57d7,"So, I guess my biggest question is what is the description of the pull request and what are the highlights? What does this PR do that we didn't have before? What is the goal here?

There are some minor edits I agree with but I'm not really sure with the reorganisation as a whole, how do we plan to maintain this document if it changes upstream - having a different order seems like it will create more work for us in maintaining this document ",True,False,13,14495.55
status-im/wiki.status.im/14,2017-02-27T14:38:23Z,False,58b439eb6480fd5ecbc7dc8b,"The ultimate goal was to do a re-write and have a CoC that is unique and customized to Status. It is still heavily based on the Ubuntu CoC, but after these changes it should be easier to maintain and add changes that work specifically for Status and not be as dependant on changes from Ubuntu.",True,False,13,14495.55
status-im/wiki.status.im/14,2017-02-27T19:45:19Z,False,58b481db6480fd5ef7ce84a5,"> We want to grow productive
works as
>We want to grow **a** productive and agile place that can welcome new ideas

I agree that the Ubuntu CoC is a starting point rather than a code base.  We don't have to fear getting out of sink with up stream.
I think that in general large scale changes in git are really clunky and painful. perhaps there should be incremental commit policy for large documents like these?
I also think that there should be an over all distillation of the docs so that no single doc is too long.  I don't think that means that we should drop loads just that it should be neatly nested in sub sections that keep the pages clean.  This will give the casual reader a rapid digest but also offer detail in any area someone wants to dig deep on.

all in all I think we should go with tatu's changes and take bite sized edits from now on.

thought?",True,False,13,14495.55
htmlacademy-adaptive/227035-mishka/1,2017-03-01T20:00:43Z,False,58b728806480fd6bbe3e1b12,:recycle: Я собрал ваш пулреквест. Посмотреть можно [здесь](https://htmlacademy-adaptive.github.io/227035-mishka/1/).,True,False,1,0.0
status-im/wiki.status.im/14,2017-03-08T14:58:06Z,False,58c01c0c6480fd6175f27434,"@jarradh Can we get some thoughts or reasoning as to why you chose not to make any changes to the CoC, or is this still under review?",True,False,13,14495.55
status-im/wiki.status.im/14,2017-03-08T15:03:53Z,False,58c01d626480fd5f8cfffaac,"Oh I chose the wrong one? There was a conflict in this PR so it couldn't be merged, the conflict was **THE ENTIRE DOCUMENT** and I just chose one of them.

Feel free to submit your changes and make sure the PR does not have any conflicts.",True,False,13,14495.55
status-im/wiki.status.im/14,2017-03-08T15:04:58Z,False,58c01dbd6480fd6648dd218b,"I made a review you didn't change anything in this, why didn't you update the PR? and this has been merged with the conflict 'fixed'.",True,False,13,14495.55
status-im/wiki.status.im/14,2017-03-08T15:36:00Z,False,58c024e96480fd698d45876b,"As Nick asked for thoughts on the matter, i didn't make any changes until there would be some agreement on what will be done for the CoC.

I'll make those changes from the review.",True,False,13,14495.55
status-im/wiki.status.im/14,2017-03-08T15:36:44Z,False,58c025166480fd60a883b712,Okay How about I just revert this merge because I did accept @ethereumnick 's changes in his pull request.,True,False,13,14495.55
edwellbrook/node-tvdb/83,2017-03-12T01:44:10Z,False,58c4a7f36480fd66a878a005,Merged and updated on npm (`v3.1.1`). Thanks again for the report and pull request! ,True,False,1,0.0
Automattic/wp-calypso/12078,2017-03-13T20:06:03Z,False,58c6fbd46480fd5ee61878e6,Test live: https://calypso.live/?branch=fix/editor/firefox-height,True,False,4,2365.4333333333334
openSUSE/osc-plugin-factory/744,2017-03-14T12:53:48Z,False,58c7e7ea6480fd6c2ad60e8e,"
[![Coverage Status](https://coveralls.io/builds/10582940/badge)](https://coveralls.io/builds/10582940)

Coverage decreased (-0.3%) to 43.841% when pulling **413829aa29fcaae124bb3ae54fa2a4c9d9024a48 on lnussel:setprio** into **4d3e218cc56006119677924327eede0a95c9504f on openSUSE:master**.
",True,False,14,3098.05
Automattic/wp-calypso/12078,2017-03-14T18:37:17Z,False,58c8389c6480fd6a71cd2dc1,Can't you target this with `.editor-action-bar .editor-status-label` instead of creating a new class?,True,False,4,2365.4333333333334
Automattic/wp-calypso/12078,2017-03-15T02:10:40Z,False,58c8a2a66480fd5f373a165f,Updated in daeee4b @mtias ,True,False,4,2365.4333333333334
openSUSE/osc-plugin-factory/744,2017-03-15T02:11:30Z,False,58c8a5dc6480fd673897baab,indent seems off,True,False,14,3098.05
openSUSE/osc-plugin-factory/744,2017-03-15T02:15:52Z,False,58c8a5b36480fd6c2ad68a39,Presumably this works with adi stagings since it ends up calling `staging_projects` which works for adi. As such perhaps stick with `[STAGING...]`. Could also use `stagingapi.prj_from_short()` to allow for full project name in addition to short hand.,True,False,14,3098.05
openSUSE/osc-plugin-factory/744,2017-03-15T02:20:41Z,False,58c8a5a26480fd67c2a54c1a,Perhaps tweak `stagingapi.project_status()` to allow empty project. This will likely be needed once the aggregate change to obs_factory is deployed anyway.,True,False,14,3098.05
openSUSE/osc-plugin-factory/744,2017-03-15T02:22:04Z,False,58c8a5a36480fd69443dd0a6,nit: `s/#XXX/# XXX` for consistency,True,False,14,3098.05
openSUSE/osc-plugin-factory/744,2017-03-15T02:22:36Z,False,58c8a5d46480fd5e68836298,`previous` argument is never used.,True,False,14,3098.05
Automattic/wp-calypso/12078,2017-03-15T11:31:29Z,False,58c9261b6480fd689207fd20,"Nice, much simpler.",True,False,4,2365.4333333333334
kubernetes/minikube/1246,2017-03-15T23:41:03Z,False,58c9d1146480fd5f21a51fb8,"# [Codecov](https://codecov.io/gh/kubernetes/minikube/pull/1246?src=pr&el=h1) Report
> Merging [#1246](https://codecov.io/gh/kubernetes/minikube/pull/1246?src=pr&el=desc) into [master](https://codecov.io/gh/kubernetes/minikube/commit/161d61fc91408ed266ba1594056b69e7c2ce42d3?src=pr&el=desc) will **decrease** coverage by `0.09%`.
> The diff coverage is `n/a`.


```diff
@@            Coverage Diff            @@
##           master    #1246     +/-   ##
=========================================
- Coverage   43.22%   43.13%   -0.1%     
=========================================
  Files          48       48             
  Lines        2214     2214             
=========================================
- Hits          957      955      -2     
- Misses       1102     1103      +1     
- Partials      155      156      +1
```


| [Impacted Files](https://codecov.io/gh/kubernetes/minikube/pull/1246?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [pkg/minikube/kubeconfig/config.go](https://codecov.io/gh/kubernetes/minikube/compare/161d61fc91408ed266ba1594056b69e7c2ce42d3...029377ffd188416522a498b8918cbee162c6a5f4?src=pr&el=tree#diff-cGtnL21pbmlrdWJlL2t1YmVjb25maWcvY29uZmlnLmdv) | `55.38% <0%> (-3.08%)` | :x: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/kubernetes/minikube/pull/1246?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/kubernetes/minikube/pull/1246?src=pr&el=footer). Last update [161d61f...029377f](https://codecov.io/gh/kubernetes/minikube/compare/161d61fc91408ed266ba1594056b69e7c2ce42d3...029377ffd188416522a498b8918cbee162c6a5f4?el=footer&src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).",True,False,1,0.0
openSUSE/osc-plugin-factory/744,2017-03-16T09:49:07Z,False,58ca5fab6480fd6588adf338,I'll leave refactoring to you :),True,False,14,3098.05
openSUSE/osc-plugin-factory/744,2017-03-16T13:45:41Z,False,58ca970d6480fd5ee61a5586,"
[![Coverage Status](https://coveralls.io/builds/10625453/badge)](https://coveralls.io/builds/10625453)

Coverage decreased (-0.2%) to 43.396% when pulling **6e0826801f58de98954968197a055677cab9737c on lnussel:setprio** into **98e167d555e31aacfcc887793cdcda2bf54b91dc on openSUSE:master**.
",True,False,14,3098.05
openSUSE/osc-plugin-factory/744,2017-03-16T16:07:19Z,False,58cab83f6480fd641bc0a4dc,it's intended to raise attention of the review team in case packages are stuck in the review queue for too long,True,False,14,3098.05
openSUSE/osc-plugin-factory/744,2017-03-16T16:09:25Z,False,58cab8bb6480fd6c2ad7acbd,"On Donnerstag, 16. März 2017, 09:07:20 CET wrote Ludwig Nussel:
> it's intended to raise attention of the review team in case packages are stuck in the review queue for too long

why can't you use the standard ""osc request priorize"" ?

-- 

Adrian Schroeter
email: adrian@suse.de

SUSE Linux GmbH, GF: Felix Imendörffer, Jane Smithard, Graham Norton, HRB 21284 (AG Nürnberg) 
 
Maxfeldstraße 5                         
90409 Nürnberg 
Germany 


",True,False,14,3098.05
openSUSE/osc-plugin-factory/744,2017-03-16T16:15:20Z,False,58caba306480fd69eade2b28,"On Thu, 2017-03-16 at 09:07 -0700, Ludwig Nussel wrote:
> it's intended to raise attention of the review team in case packages
> are stuck in the review queue for too long
> 

That sounds like something that should be discussed with the review
team - for the team to know what implications it has and what to look
at.Just one heads-up here: use it too often and too quick, and the team
is likely to ignore it.
Keep in mind: review is done by a team in best-effort without any
agreed SLA
",True,False,14,3098.05
openSUSE/osc-plugin-factory/744,2017-03-16T16:21:44Z,False,58cabba36480fd5fb2feeaa5,"Adrian Schröter wrote:
> On Donnerstag, 16. März 2017, 09:07:20 CET wrote Ludwig Nussel:
>> it's intended to raise attention of the review team in case packages are stuck in the review queue for too long
>
> why can't you use the standard ""osc request priorize"" ?

because copy&pasting potentially dozends of requests doesn't scale
",True,False,14,3098.05
openSUSE/osc-plugin-factory/744,2017-03-16T16:24:29Z,False,58cabc4d6480fd652efacab5,"Dominique Leuenberger wrote:
> On Thu, 2017-03-16 at 09:07 -0700, Ludwig Nussel wrote:
>> it's intended to raise attention of the review team in case packages
>> are stuck in the review queue for too long
>>
>
> That sounds like something that should be discussed with the review
> team - for the team to know what implications it has and what to look
> at.Just one heads-up here: use it too often and too quick, and the team
> is likely to ignore it.

As long as the review list isn't sorted by prio by default this has
zero effect anyways. I don't want to keep this patch around locally
though. And yes, obviously it doesn't make sense to raise priority
on all requests or automated by default.
",True,False,14,3098.05
openSUSE/osc-plugin-factory/744,2017-03-16T16:31:51Z,False,58cabe056480fd6c2ad7b05b,"On Donnerstag, 16. März 2017, 09:24:29 CET wrote Ludwig Nussel:
> Dominique Leuenberger wrote:
> > On Thu, 2017-03-16 at 09:07 -0700, Ludwig Nussel wrote:
> >> it's intended to raise attention of the review team in case packages
> >> are stuck in the review queue for too long
> >>
> >
> > That sounds like something that should be discussed with the review
> > team - for the team to know what implications it has and what to look
> > at.Just one heads-up here: use it too often and too quick, and the team
> > is likely to ignore it.
> 
> As long as the review list isn't sorted by prio by default this has
> zero effect anyways. I don't want to keep this patch around locally
> though. And yes, obviously it doesn't make sense to raise priority
> on all requests or automated by default.


something different.

-- 

Adrian Schroeter
email: adrian@suse.de

SUSE Linux GmbH, GF: Felix Imendörffer, Jane Smithard, Graham Norton, HRB 21284 (AG Nürnberg) 
 
Maxfeldstraße 5                         
90409 Nürnberg 
Germany 


",True,False,14,3098.05
bower_____bower_____1748,2017-03-21T21:52:59Z,True,bower_____bower_____1748_____288230992,"For those who want to use lock feature before this PR merged, [bower-locker](https://github.com/infusionsoft/bower-locker) is a workaround to generate lockfile and commit only ```bower.json``` which is newly generated lock file and ```bower-locker.bower.json``` which is renamed original ```bower.json``` in your repo.


Run following commands to achieve it:

    npm install bower-locker -g

or 

    yarn global add bower-locker

then generate lock file based on existing ```bower.json``` file by runing: 

    bower-locker lock


I want to express big thanks to @shawnlonas for writing this. Guys, let's give it stars if you find it useful https://github.com/infusionsoft/bower-locker",True,True,89,1588333.85
tensorflow/tensorflow/8662,2017-03-23T14:18:17Z,False,58d560cd6480fd7854587cd1,Can one of the admins verify this patch?,True,False,21,26484.716666666667
wp-cli/media-command/3,2017-03-23T16:00:21Z,False,58d457e16480fd3d73956a40,"I don't think this is the fix, because it fails the build.

Did you try including `thumbnail` as a size? See https://github.com/wp-cli/wp-cli/issues/3859#issuecomment-288072511",True,False,5,17227.866666666665
wp-cli/media-command/3,2017-03-23T16:34:21Z,False,58d462076480fd39fdbcbbaf,"Also, you'll need #4 when it lands so the tests actually run against your changes.",True,False,5,17227.866666666665
tensorflow/tensorflow/8662,2017-03-24T00:13:36Z,False,58d560cd6480fd7854587cd2,"Jenkins, test this please.",True,False,21,26484.716666666667
tensorflow/tensorflow/8662,2017-03-24T18:43:55Z,False,58d56bc46480fd7955daef11,complex128 too?,True,False,21,26484.716666666667
tensorflow/tensorflow/8662,2017-03-24T20:09:22Z,False,58d57d016480fd7506c4fc00,"Yup, I'd do

if dtype_ == np.float32 or dtype_ == np.complex64:",True,False,21,26484.716666666667
tensorflow/tensorflow/8662,2017-03-25T09:03:43Z,False,58d632776480fd7c136ac779,Thanks @martinwicke @rmlarsen for the review. The PR has been updated. Please take a look.,True,False,21,26484.716666666667
tensorflow/tensorflow/8662,2017-03-26T00:47:16Z,False,58d70fc96480fd74881a05ad,"Jenkins, test this please.",True,False,21,26484.716666666667
tensorflow/tensorflow/8662,2017-03-28T10:46:29Z,False,58da3f0b6480fd486054d3dd,"Hi @martinwicke, great contribution! just ran into this issue myself few days ago.
I've compiled fork with you'r fix, and I think I've found some strange problem,
When i try to use tf.self_adjoint_eig over a large tensor of type tf.float64 (large is [2e7, 4, 4]), the work gets distributed between my 8 CPU cores. 
But when do the same with tensor of type tf.complex64 (with the same values) tf uses only single CPU core.
What could be the cause of this problem?

Test code:

```
def eig_test(H, w):
    H_tens = tf.constant(H[:, :, np.newaxis], dtype=tf.float64) 
    w_tens = tf.constant(w, dtype=tf.float64)
    H_tens = tf.multiply(w_tens, H_tens)
    H_tens = tf.transpose(H_tens, perm=[2, 0, 1])
    
    (e_tens, v_tens) = tf.self_adjoint_eig(H_tens)
    
    sess = tf.Session()
    return sess.run(e_tens)

H = np.array([[1, 2, 3, 4], [2, 1, 5, 6], [3, 5, 1, 7], [4, 6, 7, 1]])
w = np.random.rand(20000000)
    
start_time = time()
res = eig_test(H, w)
print 'duration', time() - start_time
```

Test results:
with type tf.complex64 - test duration was 45 sec
with type tf.float64 - test duration was 10 sec",True,False,21,26484.716666666667
tensorflow/tensorflow/8662,2017-03-28T15:08:23Z,False,58da7c736480fd5190a0f4a0,"This effectively disables all gradient checks. I guess it should be `if dtype in [np.float32, np.float64]:` ?
But despite that, shouldn't the complex gradients also be tested?",True,False,21,26484.716666666667
tensorflow/tensorflow/8662,2017-03-29T15:34:10Z,False,58dbd4026480fd55cc73cb4d,"Please fix is -> in. It would be preferable to test all gradients. You might need to fix the gradient computation for complex types. We've had a few bugs like that. I'm guessing that the transpose here:

https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/linalg_grad.py#L215

should be a conjugate transpose, but I'm not sure.",True,False,21,26484.716666666667
tensorflow/tensorflow/8662,2017-03-29T16:46:01Z,False,58dbe4d46480fd531d81dc1f,"Yes, that should fix the gradient.
It might be worth discussing if the gradient should be hermitian instead of the lower triangular matrix, since the user provides a hermitian matrix as the input and the fact that only the lower triangular is used is an implementation detail of the OP. E.g. if the input was a variable it would not be hermitian anymore after applying the gradient.",True,False,21,26484.716666666667
wp-cli/media-command/3,2017-04-02T14:50:55Z,False,58e10fd46480fd4deda22a6f,"The issue here is that image sizes may not be generated for a particular attachment if its size is on or below their thresholds, so `get_intermediate_image_sizes()` needs to be replaced with a version that takes this into account.

See https://github.com/gitlost/media-command/pull/2 for a patch that does it. Unfortunately it requires some duplication of core code.",True,False,5,17227.866666666665
mmorihiro/larger-circle/26,2017-04-03T08:55:44Z,False,58e20e166480fd488a68b9ba,"# [Codecov](https://codecov.io/gh/mmorihiro/larger-circle/pull/26?src=pr&el=h1) Report
> Merging [#26](https://codecov.io/gh/mmorihiro/larger-circle/pull/26?src=pr&el=desc) into [master](https://codecov.io/gh/mmorihiro/larger-circle/commit/95e2d1c865a13ae3d554d12903faeb6b5cf2c41f?src=pr&el=desc) will **decrease** coverage by `22.81%`.
> The diff coverage is `33.33%`.

[![Impacted file tree graph](https://codecov.io/gh/mmorihiro/larger-circle/pull/26/graphs/tree.svg?src=pr&token=mCi4KatRAQ&width=650&height=150)](https://codecov.io/gh/mmorihiro/larger-circle/pull/26?src=pr&el=tree)

```diff
@@             Coverage Diff              @@
##             master     #26       +/-   ##
============================================
- Coverage     85.71%   62.9%   -22.82%     
- Complexity        8      11        +3     
============================================
  Files             4       6        +2     
  Lines            35      62       +27     
  Branches          3      16       +13     
============================================
+ Hits             30      39        +9     
- Misses            4      17       +13     
- Partials          1       6        +5
```


| [Impacted Files](https://codecov.io/gh/mmorihiro/larger-circle/pull/26?src=pr&el=tree) | Coverage Δ | Complexity Δ | |
|---|---|---|---|
| [.../main/mmorihiro/larger\_circle/model/BattleModel.kt](https://codecov.io/gh/mmorihiro/larger-circle/pull/26?src=pr&el=tree#diff-bW9kZWwvc3JjL21haW4vbW1vcmloaXJvL2xhcmdlcl9jaXJjbGUvbW9kZWwvQmF0dGxlTW9kZWwua3Q=) | `10% <10%> (ø)` | `2 <2> (?)` | |
| [...c/main/mmorihiro/larger\_circle/model/BubbleType.kt](https://codecov.io/gh/mmorihiro/larger-circle/pull/26?src=pr&el=tree#diff-bW9kZWwvc3JjL21haW4vbW1vcmloaXJvL2xhcmdlcl9jaXJjbGUvbW9kZWwvQnViYmxlVHlwZS5rdA==) | `100% <100%> (ø)` | `1 <1> (?)` | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/mmorihiro/larger-circle/pull/26?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/mmorihiro/larger-circle/pull/26?src=pr&el=footer). Last update [95e2d1c...ada6aca](https://codecov.io/gh/mmorihiro/larger-circle/pull/26?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).",True,False,1,0.0
wp-cli/media-command/3,2017-04-03T16:32:01Z,False,58e279096480fd564480ce23,"> The issue here is that image sizes may not be generated for a particular attachment if its size is on or below their thresholds, so get_intermediate_image_sizes() needs to be replaced with a version that takes this into account.

Makes sense.

> See gitlost#2 for a patch that does it. Unfortunately it requires some duplication of core code.

Mind opening a new pull request that includes test coverage for this particular bug?",True,False,5,17227.866666666665
tensorflow/tensorflow/8662,2017-04-03T20:37:03Z,False,58e2b27d6480fd569dbf0556,"@jheymann85 I agree that we should consider changing the gradients of the functions manipulating Hermitian matrices to return the a Hermitian gradient. But that should be done separately from this change, and for all such method in a single update.",True,False,21,26484.716666666667
tensorflow/tensorflow/8662,2017-04-03T20:37:55Z,False,58e2b2ae6480fd54cbceb3a6,@yongtang would you be able to make the requested changes to fix the tests?,True,False,21,26484.716666666667
wp-cli/media-command/3,2017-04-04T15:08:13Z,False,58e3b6e86480fd52aeacaa70,Closing in favor of #5 ,True,False,5,17227.866666666665
tensorflow/tensorflow/8662,2017-04-04T15:41:46Z,False,58e3bec36480fd4f16c2b003,Thanks @rmlarsen for the reminder. I will address the issue shortly.,True,False,21,26484.716666666667
kubernetes/kubernetes/44053,2017-04-04T19:22:54Z,False,58e3f2956480fd4ec37a0924,"[APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/44053#"" title=""Author self-approved"">thockin</a>*

<details >
Needs approval from an approver in each of these OWNERS Files:

- ~~[pkg/proxy/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/proxy/OWNERS)~~ [thockin]

You can indicate your approval by writing `/approve` in a comment
You can cancel your approval by writing `/approve cancel` in a comment
</details>
<!-- META={approvers:[]} -->",True,False,40,121242.66666666667
kubernetes/kubernetes/44053,2017-04-04T19:22:54Z,False,58e3f2986480fd569dbf8d0a,Labelling this PR as size/XXL,True,False,40,121242.66666666667
kubernetes/kubernetes/44053,2017-04-04T19:23:44Z,False,58e3f2c66480fd5190a45517,"@thockin: The following test(s) **failed**:

Test name | Commit | Details | Rerun command
--- | --- | --- | ---
Jenkins Bazel Build | e4327694d914e620fa2131b5d27383a9b81dfd63 | [link](https://k8s-gubernator.appspot.com/build/kubernetes-jenkins/pr-logs/pull/44053/pull-kubernetes-bazel/12175/) | `@k8s-bot bazel test this`

[Full PR test history](https://k8s-gubernator.appspot.com/pr/44053). [Your PR dashboard](https://k8s-gubernator.appspot.com/pr/thockin). Please help us cut down on flakes by linking to an [open issue](https://github.com/kubernetes/kubernetes/issues?q=is:issue+is:open) when you hit one in your PR.

<details>

Instructions for interacting with me using PR comments are available [here](https://github.com/kubernetes/community/blob/master/contributors/devel/pull-request-commands.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository. I understand the commands that are listed [here](https://github.com/kubernetes/test-infra/blob/master/prow/commands.md).
</details>
<!-- test report -->",True,False,40,121242.66666666667
kubernetes/kubernetes/44053,2017-04-04T19:23:45Z,False,58e3f2c66480fd486058c1bb,"

<!-- Reviewable:start -->
This change is [<img src=""https://reviewable.kubernetes.io/review_button.png"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.kubernetes.io/reviews/kubernetes/kubernetes/44053)
<!-- Reviewable:end -->
",True,False,40,121242.66666666667
kubernetes/kubernetes/44053,2017-04-05T00:30:14Z,False,58e43ed16480fd47baa7ae7a,log error here?,True,False,40,121242.66666666667
kubernetes/kubernetes/44053,2017-04-05T00:34:41Z,False,58e43ed16480fd4a94c477b2,Is there any good way to exposed this? Like a event? (But no corresponding event for success though) No listener means the endpoints on the node could not serving traffic.,True,False,40,121242.66666666667
kubernetes/kubernetes/44053,2017-04-05T00:38:59Z,False,58e43ed26480fd557256835a,nit: Rename to HealthCheckServer?,True,False,40,121242.66666666667
kubernetes/kubernetes/44053,2017-04-05T00:39:08Z,False,58e43ed16480fd486058e179,nit: Rename to healthCheckServer,True,False,40,121242.66666666667
kubernetes/kubernetes/44053,2017-04-05T00:40:30Z,False,58e43ed16480fd534d1b3ce5,nit: serviceHealthCheckHandler,True,False,40,121242.66666666667
kubernetes/kubernetes/44053,2017-04-05T00:44:17Z,False,58e43de76480fd47e2b940f0,@thockin PR needs rebase,True,False,40,121242.66666666667
kubernetes/kubernetes/44053,2017-04-05T03:12:39Z,False,58e460ad6480fd51080c7dda,"heh, I did that originally and `go lint` yelled at me for stuttering.",True,False,40,121242.66666666667
kubernetes/kubernetes/44053,2017-04-05T03:13:37Z,False,58e460e96480fd48f26fe772,"I did that originally, and `go lint` failed me.  Scoped names should be succinct.  `healthcheck.Server` vs `healthcheck.HealthCheckServer`",True,False,40,121242.66666666667
kubernetes/kubernetes/44053,2017-04-05T03:15:17Z,False,58e461496480fd569dbfb96b,ok,True,False,40,121242.66666666667
kubernetes/kubernetes/44053,2017-04-05T03:29:48Z,False,58e464b36480fd47e2b9500c,"great idea, will see.",True,False,40,121242.66666666667
kubernetes/kubernetes/44053,2017-04-05T03:38:48Z,False,58e466cc6480fd52aeacfb98,how about hcInstance ?,True,False,40,121242.66666666667
kubernetes/kubernetes/44053,2017-04-05T04:02:13Z,False,58e46c4d6480fd48de4cfe36,"feedback fixed, added event, verified `get events`:

```
20m        20m         1         external1                      Service               Warning   FailedToStartHealthcheck   kube-proxy, kubernetes-minion-group-jnb4   node kubernetes-minion-group-jnb4 failed to start healthcheck ""default/external1"" on port 30745: listen tcp :30745: bind: address already in use
```
",True,False,40,121242.66666666667
kubernetes/kubernetes/44053,2017-04-05T04:02:37Z,False,58e46c646480fd546ae24707,"@thockin: The following test(s) **failed**:

Test name | Commit | Details | Rerun command
--- | --- | --- | ---
Jenkins Bazel Build | 85a68f720307bf27a32e1caf15371c9ac9c2dbdc | [link](https://k8s-gubernator.appspot.com/build/kubernetes-jenkins/pr-logs/pull/44053/pull-kubernetes-bazel/12244/) | `@k8s-bot bazel test this`

[Full PR test history](https://k8s-gubernator.appspot.com/pr/44053). [Your PR dashboard](https://k8s-gubernator.appspot.com/pr/thockin). Please help us cut down on flakes by linking to an [open issue](https://github.com/kubernetes/kubernetes/issues?q=is:issue+is:open) when you hit one in your PR.

<details>

Instructions for interacting with me using PR comments are available [here](https://github.com/kubernetes/community/blob/master/contributors/devel/pull-request-commands.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository. I understand the commands that are listed [here](https://github.com/kubernetes/test-infra/blob/master/prow/commands.md).
</details>
<!-- test report -->",True,False,40,121242.66666666667
kubernetes/kubernetes/44053,2017-04-05T04:56:47Z,False,58e479166480fd4e8d02767c,"@thockin: The following test(s) **failed**:

Test name | Commit | Details | Rerun command
--- | --- | --- | ---
Jenkins non-CRI GCE e2e | c8411cbdbb016bd5da4f4d017165fd230ba442b8 | [link](https://k8s-gubernator.appspot.com/build/kubernetes-jenkins/pr-logs/pull/44053/pull-kubernetes-e2e-gce-non-cri/6305/) | `@k8s-bot non-cri e2e test this`

[Full PR test history](https://k8s-gubernator.appspot.com/pr/44053). [Your PR dashboard](https://k8s-gubernator.appspot.com/pr/thockin). Please help us cut down on flakes by linking to an [open issue](https://github.com/kubernetes/kubernetes/issues?q=is:issue+is:open) when you hit one in your PR.

<details>

Instructions for interacting with me using PR comments are available [here](https://github.com/kubernetes/community/blob/master/contributors/devel/pull-request-commands.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository. I understand the commands that are listed [here](https://github.com/kubernetes/test-infra/blob/master/prow/commands.md).
</details>
<!-- test report -->",True,False,40,121242.66666666667
kubernetes/kubernetes/44053,2017-04-05T15:07:14Z,False,58e508276480fd4ec37a8ac3,@k8s-bot non-cri e2e test this,True,False,40,121242.66666666667
tensorflow/tensorflow/8662,2017-04-05T15:46:21Z,False,58e511866480fd4e8d02cbf6,@tensorflow-jenkins test this please,True,False,21,26484.716666666667
kubernetes/kubernetes/44053,2017-04-05T17:37:33Z,False,58e53c136480fd49ec0d8c11,nit: Make this `hcs   *server` to be consistent with other functions?,True,False,40,121242.66666666667
kubernetes/kubernetes/44053,2017-04-05T18:01:01Z,False,58e53c166480fd540148f572,Would it be better to call `SyncEndpoints` in `OnEndpointsUpdate` instead of in `buildNewEndpointsMap` (just like what `OnServiceUpdate` does)?,True,False,40,121242.66666666667
kubernetes/kubernetes/44053,2017-04-05T18:17:56Z,False,58e53c136480fd480ca6c928,tiny nit: Logging should start with capital.,True,False,40,121242.66666666667
kubernetes/kubernetes/44053,2017-04-05T18:22:10Z,False,58e53c136480fd5644821b5e,Why not combine `endpoints` with `services`? They seems to have the same entries.,True,False,40,121242.66666666667
kubernetes/kubernetes/44053,2017-04-05T18:28:27Z,False,58e53c196480fd4f6349f885,This still looks a bit weird...Maybe serviceHealthChecker?,True,False,40,121242.66666666667
kubernetes/kubernetes/44053,2017-04-05T18:45:54Z,False,58e53c136480fd47e2b9c76b,Looks good! Seems to cover all the cases we have :),True,False,40,121242.66666666667
kubernetes/kubernetes/44053,2017-04-05T18:47:04Z,False,58e53c136480fd500de84fb0,Ah just saw it in the third commit.,True,False,40,121242.66666666667
kubernetes/kubernetes/44053,2017-04-05T20:49:01Z,False,58e558466480fd47f7f279c0,ok,True,False,40,121242.66666666667
kubernetes/kubernetes/44053,2017-04-05T20:51:18Z,False,58e558cd6480fd47ccc0515b,"naming is hard.  It's not a server, it's not a listener.  It's not actually doing checks, so it is not a checker.  beg for this to be good enough or fixed later?",True,False,40,121242.66666666667
kubernetes/kubernetes/44053,2017-04-05T20:52:20Z,False,58e5590e6480fd508157acb1,ok,True,False,40,121242.66666666667
kubernetes/kubernetes/44053,2017-04-05T20:56:44Z,False,58e55a126480fd4835fbeb78,"Yeah, SGTM",True,False,40,121242.66666666667
kubernetes/kubernetes/44053,2017-04-05T20:58:54Z,False,58e55a916480fd500de861dc,Great idea.  Thsi is why we do code review.,True,False,40,121242.66666666667
kubernetes/kubernetes/44053,2017-04-05T20:59:20Z,False,58e55ab06480fd4875c0232d,re-pushed with changes patched in.,True,False,40,121242.66666666667
kubernetes/kubernetes/44053,2017-04-05T21:04:37Z,False,58e55be86480fd4f634a0c59,"@thockin: The following test(s) **failed**:

Test name | Commit | Details | Rerun command
--- | --- | --- | ---
Jenkins Bazel Build | b830967f041484102d63fec609356e2e8c338a10 | [link](https://k8s-gubernator.appspot.com/build/kubernetes-jenkins/pr-logs/pull/44053/pull-kubernetes-bazel/12380/) | `@k8s-bot bazel test this`

[Full PR test history](https://k8s-gubernator.appspot.com/pr/44053). [Your PR dashboard](https://k8s-gubernator.appspot.com/pr/thockin). Please help us cut down on flakes by linking to an [open issue](https://github.com/kubernetes/kubernetes/issues?q=is:issue+is:open) when you hit one in your PR.

<details>

Instructions for interacting with me using PR comments are available [here](https://github.com/kubernetes/community/blob/master/contributors/devel/pull-request-commands.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository. I understand the commands that are listed [here](https://github.com/kubernetes/test-infra/blob/master/prow/commands.md).
</details>
<!-- test report -->",True,False,40,121242.66666666667
kubernetes/kubernetes/44053,2017-04-06T15:37:44Z,False,58e660d26480fd4835fc6814,"@k8s-bot test this

",True,False,40,121242.66666666667
kubernetes/kubernetes/44053,2017-04-06T16:29:19Z,False,58e66ce36480fd48b3c08a1e,"@thockin: The following test(s) **failed**:

Test name | Commit | Details | Rerun command
--- | --- | --- | ---
Jenkins non-CRI GCE e2e | 5e43c14098616739d007a98658c520775e31afd4 | [link](https://k8s-gubernator.appspot.com/build/kubernetes-jenkins/pr-logs/pull/44053/pull-kubernetes-e2e-gce-non-cri/6573/) | `@k8s-bot non-cri e2e test this`

[Full PR test history](https://k8s-gubernator.appspot.com/pr/44053). [Your PR dashboard](https://k8s-gubernator.appspot.com/pr/thockin). Please help us cut down on flakes by linking to an [open issue](https://github.com/kubernetes/kubernetes/issues?q=is:issue+is:open) when you hit one in your PR.

<details>

Instructions for interacting with me using PR comments are available [here](https://github.com/kubernetes/community/blob/master/contributors/devel/pull-request-commands.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository. I understand the commands that are listed [here](https://github.com/kubernetes/test-infra/blob/master/prow/commands.md).
</details>
<!-- test report -->",True,False,40,121242.66666666667
kubernetes/kubernetes/44053,2017-04-06T18:08:53Z,False,58e6843b6480fd4a94c59f94,"/lgtm
",True,False,40,121242.66666666667
kubernetes/kubernetes/44053,2017-04-06T18:08:56Z,False,58e6843b6480fd52aeae1201,@k8s-bot non-cri e2e test this,True,False,40,121242.66666666667
kubernetes/kubernetes/44053,2017-04-06T18:08:56Z,False,58e684416480fd47baa8da40,"[APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/44053#issuecomment-292259684"" title=""LGTM"">freehan</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/44053#"" title=""Author self-approved"">thockin</a>*

<details >
Needs approval from an approver in each of these OWNERS Files:

- ~~[pkg/proxy/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/proxy/OWNERS)~~ [thockin]

You can indicate your approval by writing `/approve` in a comment
You can cancel your approval by writing `/approve cancel` in a comment
</details>
<!-- META={approvers:[]} -->",True,False,40,121242.66666666667
kubernetes/kubernetes/44053,2017-04-06T19:36:25Z,False,58e698be6480fd4ec37b5136,"Automatic merge from submit-queue (batch tested with PRs 43871, 44053)",True,False,40,121242.66666666667
conda-forge/bokeh-feedstock/3,2017-04-07T15:50:37Z,False,58e7b5516480fda49b3a1737,"
Hi! This is the friendly automated conda-forge-linting service.

I just wanted to let you know that I linted all conda-recipes in your PR (```recipe```) and found it was in an excellent condition.

",True,False,1,0.0
tensorflow/tensorflow/8662,2017-04-10T17:23:12Z,False,58ebbf876480fd9a672e5540,@rmlarsen good to go?,True,False,21,26484.716666666667
tensorflow/tensorflow/8662,2017-04-10T23:07:20Z,False,58ec10916480fda977a5a5d3,@drpngx @yongtang I thought @yongtang was going to fix/enable the gradient tests for complex? I guess we can merge this and address it in a followup.,True,False,21,26484.716666666667
tensorflow/tensorflow/8662,2017-04-10T23:29:14Z,False,58ec15776480fd9995d5aa30,@rmlarsen you are right. @yongtang any chance you can address this?,True,False,21,26484.716666666667
tensorflow/tensorflow/8662,2017-04-10T23:33:59Z,False,58ec16a06480fda80e76e7e6,"@drpngx Ooops, I missed your update. I agree that it would be better to address before merging.",True,False,21,26484.716666666667
tensorflow/tensorflow/8662,2017-04-10T23:38:26Z,False,58ec17ad6480fda977a5a807,"Thanks @rmlarsen @drpngx for the review. I am actively looking to fixing the complex issue. I tried to fix the https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/linalg_grad.py#L215
as mentioned in the review comment.
However, it seems there are other places that needs to be fixed as well and I am still working on it.

For that I think it probably make sense to merge this one first. I can create another follow up PR to address the complex gradients issue once I figure out.",True,False,21,26484.716666666667
tensorflow/tensorflow/8662,2017-04-10T23:40:53Z,False,58ec18426480fda434b50001,"@yongtang thanks for looking into this. It makes sense to do it in a followup. 
@drpngx feel free to squash & merge.",True,False,21,26484.716666666667
tensorflow/tensorflow/8662,2017-04-10T23:43:00Z,False,58ec188a6480fd9e9f8ca454,"SG, thanks guys!",True,False,21,26484.716666666667
bower_____bower_____1748,2017-04-12T16:59:43Z,True,bower_____bower_____1748_____293642920,Any news on this? Is it stalled out?,True,True,89,1588333.85
bower_____bower_____1748,2017-04-12T18:01:18Z,True,bower_____bower_____1748_____293659585,Why is this PR open when there is #2100?,True,True,89,1588333.85
cockroachdb/cockroach/14867,2017-04-12T21:22:27Z,False,58ee9a946480fd2618c9b80e,"

<!-- Reviewable:start -->
This change is [<img src=""https://reviewable.io/review_button.png"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/cockroachdb/cockroach/14867)
<!-- Reviewable:end -->
",True,False,6,927.1833333333333
cockroachdb/cockroach/14867,2017-04-12T21:48:56Z,False,58eea0cc6480fd269ff306e7,"



Reviewed 5 of 5 files at r1.
Review status: all files reviewed at latest revision, 5 unresolved discussions, all commit checks successful.

---

*[pkg/roachpb/data.go, line 1148 at r1](https://reviewable.io:443/reviews/cockroachdb/cockroach/14867#-KhZ6K8hztryrksjiUX0:-KhZ6K8hztryrksjiUX1:b8ur5nb) ([raw file](https://github.com/cockroachdb/cockroach/blob/007fc6289d03457259c97f977db675f151faec7f/pkg/roachpb/data.go#L1148)):*
> ```Go
> // OverlapExclusive returns whether the two spans overlap. It defines
> // overlapping as a pair of spans that share a segment of the keyspace, with
> // the start keys treated as inclusive and the end keys treated as exclusive.
> ```

Isn't this our normal definition of things? I'd just call this `Overlaps`.

This differs from `Span.Overlaps` in that it doesn't support `RSpans` with nil `EndKey`.  Even if we don't need that now it seems error-prone for the future. I'd share the implementation with `Span.Overlaps` (I think you could factor the guts out into a function that operates on `[]byte` for the two keys).

---

*[pkg/storage/replica.go, line 1543 at r1](https://reviewable.io:443/reviews/cockroachdb/cockroach/14867#-KhZ79e8d7dwfA4_XqFg:-KhZ79e8d7dwfA4_XqFh:blkblbx) ([raw file](https://github.com/cockroachdb/cockroach/blob/007fc6289d03457259c97f977db675f151faec7f/pkg/storage/replica.go#L1543)):*
> ```Go
> 	}
> 	ba   roachpb.BatchRequest
> 	span roachpb.RSpan
> ```

It's surprising that this is the RangeDescriptor's span instead of the BatchRequest's. This at least needs to be documented, and probably a more specific name.

---

*[pkg/storage/replica.go, line 1834 at r1](https://reviewable.io:443/reviews/cockroachdb/cockroach/14867#-KhZ7PNMQw-eRJy7eJ3-:-KhZ7PNMQw-eRJy7eJ30:bjyk3eq) ([raw file](https://github.com/cockroachdb/cockroach/blob/007fc6289d03457259c97f977db675f151faec7f/pkg/storage/replica.go#L1834)):*
> ```Go
> 		cmds: cmds,
> 		ba:   *ba,
> 		span: r.Desc().RSpan(),
> ```

Is there any concern with getting this span in `beginCmds` and then using it later even if the range might have split in the meantime?

---

*[pkg/storage/timestamp_cache.go, line 619 at r1](https://reviewable.io:443/reviews/cockroachdb/cockroach/14867#-KhZ67SC7okrMFY2d7w3:-KhZ67SC7okrMFY2d7w4:b-o0puio) ([raw file](https://github.com/cockroachdb/cockroach/blob/007fc6289d03457259c97f977db675f151faec7f/pkg/storage/timestamp_cache.go#L619)):*
> ```Go
> 
> // ExpandRequests expands any request that is newer than the specified
> // timestamp.
> ```

Document the `span` parameter.

---

*[pkg/storage/timestamp_cache_test.go, line 191 at r1](https://reviewable.io:443/reviews/cockroachdb/cockroach/14867#-KhZ7qHF9-o1brC6D2jA:-KhZ7qHF9-o1brC6D2jB:b-b0jctm) ([raw file](https://github.com/cockroachdb/cockroach/blob/007fc6289d03457259c97f977db675f151faec7f/pkg/storage/timestamp_cache_test.go#L191)):*
> ```Go
> 		t.Fatalf(""expected 0 cached requests, but found %d"", tc.requests.Len())
> 	}
> }
> ```

There should probably be some tests that verify how this behaves in the context of RSpans that vary over time due to splits.

---


*Comments from [Reviewable](https://reviewable.io:443/reviews/cockroachdb/cockroach/14867)*
<!-- Sent from Reviewable.io -->
",True,False,6,927.1833333333333
cockroachdb/cockroach/14867,2017-04-12T22:25:38Z,False,58eea9696480fd1ff389dd63,"



Review status: all files reviewed at latest revision, 5 unresolved discussions, all commit checks successful.

---

*[pkg/roachpb/data.go, line 1148 at r1](https://reviewable.io:443/reviews/cockroachdb/cockroach/14867#-KhZ6K8hztryrksjiUX0:-KhZDHieAtEfPYmMQiQS:b-896fix) ([raw file](https://github.com/cockroachdb/cockroach/blob/007fc6289d03457259c97f977db675f151faec7f/pkg/roachpb/data.go#L1148)):*
<details><summary><i>Previously, bdarnell (Ben Darnell) wrote…</i></summary><blockquote>

Isn't this our normal definition of things? I'd just call this `Overlaps`.

This differs from `Span.Overlaps` in that it doesn't support `RSpans` with nil `EndKey`.  Even if we don't need that now it seems error-prone for the future. I'd share the implementation with `Span.Overlaps` (I think you could factor the guts out into a function that operates on `[]byte` for the two keys).
</blockquote></details>

Done.

---

*[pkg/storage/replica.go, line 1543 at r1](https://reviewable.io:443/reviews/cockroachdb/cockroach/14867#-KhZ79e8d7dwfA4_XqFg:-KhZFG550P8YXyEOML7u:b-16r2ha) ([raw file](https://github.com/cockroachdb/cockroach/blob/007fc6289d03457259c97f977db675f151faec7f/pkg/storage/replica.go#L1543)):*
<details><summary><i>Previously, bdarnell (Ben Darnell) wrote…</i></summary><blockquote>

It's surprising that this is the RangeDescriptor's span instead of the BatchRequest's. This at least needs to be documented, and probably a more specific name.
</blockquote></details>

I wanted to avoid calling `keys.Range`, but it turns out that doing so isn't that expensive. I've switched to doing that.

---

*[pkg/storage/replica.go, line 1834 at r1](https://reviewable.io:443/reviews/cockroachdb/cockroach/14867#-KhZ7PNMQw-eRJy7eJ3-:-KhZFMO-5KxozGTxCHec:b34uopr) ([raw file](https://github.com/cockroachdb/cockroach/blob/007fc6289d03457259c97f977db675f151faec7f/pkg/storage/replica.go#L1834)):*
<details><summary><i>Previously, bdarnell (Ben Darnell) wrote…</i></summary><blockquote>

Is there any concern with getting this span in `beginCmds` and then using it later even if the range might have split in the meantime?
</blockquote></details>

This has been removed.

---

*[pkg/storage/timestamp_cache.go, line 619 at r1](https://reviewable.io:443/reviews/cockroachdb/cockroach/14867#-KhZ67SC7okrMFY2d7w3:-KhZFUpw27Tdkn_xTS37:b-896fix) ([raw file](https://github.com/cockroachdb/cockroach/blob/007fc6289d03457259c97f977db675f151faec7f/pkg/storage/timestamp_cache.go#L619)):*
<details><summary><i>Previously, bdarnell (Ben Darnell) wrote…</i></summary><blockquote>

Document the `span` parameter.
</blockquote></details>

Done.

---

*[pkg/storage/timestamp_cache_test.go, line 191 at r1](https://reviewable.io:443/reviews/cockroachdb/cockroach/14867#-KhZ7qHF9-o1brC6D2jA:-KhZFZ-aHyAtAaN3N15I:b-zhwyo9) ([raw file](https://github.com/cockroachdb/cockroach/blob/007fc6289d03457259c97f977db675f151faec7f/pkg/storage/timestamp_cache_test.go#L191)):*
<details><summary><i>Previously, bdarnell (Ben Darnell) wrote…</i></summary><blockquote>

There should probably be some tests that verify how this behaves in the context of RSpans that vary over time due to splits.
</blockquote></details>

I don't think this is a concern now that `cacheRequest.span` corresponds to `keys.Range(request)`. 

---


*Comments from [Reviewable](https://reviewable.io:443/reviews/cockroachdb/cockroach/14867)*
<!-- Sent from Reviewable.io -->
",True,False,6,927.1833333333333
cockroachdb/cockroach/14867,2017-04-12T22:55:17Z,False,58eeb0586480fd1ff389dfcd,"Wow, nice speedup.",True,False,6,927.1833333333333
cockroachdb/cockroach/14867,2017-04-13T03:26:16Z,False,58eeefe16480fd1f947e15ba,"<img class=""emoji"" title="":lgtm:"" alt="":lgtm:"" align=""absmiddle"" src=""https://reviewable.io/lgtm.png"" height=""20"" width=""61""/>

---

Reviewed 3 of 3 files at r2.
Review status: all files reviewed at latest revision, 2 unresolved discussions, all commit checks successful.

---

*[pkg/roachpb/data.go, line 1146 at r2](https://reviewable.io:443/reviews/cockroachdb/cockroach/14867#-Kh_JR_dOhYxRfnKw52H:-Kh_JR_dOhYxRfnKw52I:b-qdnqfp) ([raw file](https://github.com/cockroachdb/cockroach/blob/732dfd1cc4f5d167099c66582f5151098938af61/pkg/roachpb/data.go#L1146)):*
> ```Go
> }
> 
> func (rs RSpan) asSpan() Span {
> ```

Call this `asRawSpan` by analogy with `RKey.AsRawKey` - we want to discourage conversions from RKeys to Keys because it's often incorrect to do so. In this case it's fine, though - the loss of precision in `keys.Addr` (called by `keys.Range`) will just result in false positive overlaps, and attempting to work in the unresolved `roachpb.Key` space instead of `RKey` would require some gymnastics like we do in the command queue to avoid mixing resolved and unresolved keys.

---


*Comments from [Reviewable](https://reviewable.io:443/reviews/cockroachdb/cockroach/14867#-:-Kh_LCMb5VJTKFTxJDzL:bnfp4nl)*
<!-- Sent from Reviewable.io -->
",True,False,6,927.1833333333333
cockroachdb/cockroach/14867,2017-04-13T12:49:38Z,False,58ef73e46480fd1ff38a2d81,"



Review status: 4 of 5 files reviewed at latest revision, 2 unresolved discussions, some commit checks failed.

---

*[pkg/roachpb/data.go, line 1146 at r2](https://reviewable.io:443/reviews/cockroachdb/cockroach/14867#-Kh_JR_dOhYxRfnKw52H:-KhbM8_lWp9Z-OJQLNPS:b-896fix) ([raw file](https://github.com/cockroachdb/cockroach/blob/732dfd1cc4f5d167099c66582f5151098938af61/pkg/roachpb/data.go#L1146)):*
<details><summary><i>Previously, bdarnell (Ben Darnell) wrote…</i></summary><blockquote>

Call this `asRawSpan` by analogy with `RKey.AsRawKey` - we want to discourage conversions from RKeys to Keys because it's often incorrect to do so. In this case it's fine, though - the loss of precision in `keys.Addr` (called by `keys.Range`) will just result in false positive overlaps, and attempting to work in the unresolved `roachpb.Key` space instead of `RKey` would require some gymnastics like we do in the command queue to avoid mixing resolved and unresolved keys.
</blockquote></details>

Done.

---


*Comments from [Reviewable](https://reviewable.io:443/reviews/cockroachdb/cockroach/14867)*
<!-- Sent from Reviewable.io -->
",True,False,6,927.1833333333333
Coursemology/coursemology2/2253,2017-04-24T03:54:34Z,False,58fd76fd6480fdc34f5bfc20,"The 2nd commit should fix:
```
 1) Courses: Invitations with tenant :instance As a Course manager I can track the status of invites, resend invites and delete invites
     Failure/Error: expect(page).not_to have_content_tag_for(invitation_to_delete)
       expected #<Capybara::Session> not to have content tag for #<Course::UserInvitation id: 6, course_id: 54, name: ""course user 3"", email: ""user_58@domain_14930026... creator_id: 1, updater_id: 1, created_at: ""2017-04-24 02:57:51"", updated_at: ""2017-04-24 02:57:51"">
```",True,False,2,121.26666666666667
Coursemology/coursemology2/2253,2017-04-24T05:55:50Z,False,58fd936a6480fdcde5ce6439,"Restarted the tests for 3 times, all passed, seems quite stable now 😄 ",True,False,2,121.26666666666667
mozilla/relman-auto-nag/88,2017-04-25T09:16:54Z,False,58ff140a6480fdc414e4a8e5,"I think #12 was a bit more complex. 
I think the issue was when we have two ESR in parallel (like currently with 45 and 52).

Your patch still makes sense but won't close #12 ",True,False,3,35.75
mozilla/relman-auto-nag/88,2017-04-25T09:45:26Z,False,58ff1abc6480fdcb80da04e5,I amended the commit message yesterday to close #78  instead of #12,True,False,3,35.75
mozilla/relman-auto-nag/88,2017-04-25T09:52:39Z,False,58ff1c6c6480fdc764aa465a,merci!,True,False,3,35.75
anchorchat/anchor-ui/453,2017-05-01T15:30:55Z,False,590754b86480fd64c8b72f37,Why did you add this line?,True,False,7,14257.333333333334
anchorchat/anchor-ui/453,2017-05-02T06:42:04Z,False,59082a436480fd65222d08ce,"<img width=""665"" alt=""screen shot 2017-05-02 at 08 41 00"" src=""https://cloud.githubusercontent.com/assets/6596471/25606702/1d9a494c-2f13-11e7-8671-91a950eba4f6.png"">

Styling is also broken, make sure the textarea cannot be dragged like this. ",True,False,7,14257.333333333334
anchorchat/anchor-ui/453,2017-05-02T06:45:05Z,False,59082afa6480fd6f8b6c741b,"<img width=""547"" alt=""screen shot 2017-05-02 at 08 44 45"" src=""https://cloud.githubusercontent.com/assets/6596471/25606783/9e9d7064-2f13-11e7-96da-ab0b5dabb2bc.png"">

Also has errors.",True,False,7,14257.333333333334
anchorchat/anchor-ui/453,2017-05-02T15:20:02Z,False,5908a3ac6480fd67abd498fd,"Personally I would split both the input and multiLineInput into seperate components. Makes your index file alot cleaner, and you can tweak logic per type",True,False,7,14257.333333333334
Ithildir/liferay-portal/686,2017-05-05T21:15:10Z,False,590ceb636480fd7229fd4d5a,Pull request test invoked at http://test-1-21.liferay.com/job/test-portal-acceptance-pullrequest(master).,True,False,3,91.78333333333333
Ithildir/liferay-portal/686,2017-05-05T21:15:44Z,False,590ceb866480fd65cf688213,"<h1>Build started.</h1><p>Jenkins is currently running tests.</p><h4>Base Branch:</h4><p>Branch Name: <a href=""https://github.com/liferay/liferay-portal/tree/master"">master</a></p><h4>Job Summary:</h4><p>Job Link: <a href=""https://test-1-21.liferay.com/job/test-portal-acceptance-pullrequest(master)/742/"">test-portal-acceptance-pullrequest(master)</a></p><p><b>For more details click <a href=""https://test-1-21.liferay.com//userContent/jobs/test-portal-acceptance-pullrequest(master)/builds/742/jenkins-report.html"">here</a>.</b></p>",True,False,3,91.78333333333333
Ithildir/liferay-portal/686,2017-05-05T22:46:57Z,False,590d00e66480fd6539348ecd,"<html><h1>Some tests FAILED.</h1><p>Build Time: 1 hour 31 minutes 38 seconds 100 ms</p><h4>Base Branch:</h4><p>Branch Name: <a href=""https://github.com/liferay/liferay-portal/tree/master"">master</a><br/>Branch GIT ID: <a href=""https://github.com/liferay/liferay-portal/commit/6c21688ad86505cfb92427ffb394c809b9e0eaec"">6c21688ad86505cfb92427ffb394c809b9e0eaec</a></p><h4>Job Summary:</h4><ul><li><a href=""https://test-1-21.liferay.com/job/test-portal-acceptance-pullrequest(master)/742/""><strike><strong>test-portal-acceptance-pullrequest(master)</strong></strike></a></li><li><a href=""https://test-1-12.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/54765/"">test-portal-acceptance-pullrequest-batch(master)/compile-jsp-jdk8</a></li><li><a href=""https://test-1-16.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/106021/"">test-portal-acceptance-pullrequest-batch(master)/functional-smoke-jboss70-mysql56-jdk8/0</a></li><li><a href=""https://test-1-1.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/110960/"">test-portal-acceptance-pullrequest-batch(master)/functional-smoke-tcserver31-mysql56-jdk8/0</a></li><li><a href=""https://test-1-4.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/111291/"">test-portal-acceptance-pullrequest-batch(master)/functional-smoke-tomcat80-db2105-jdk8/0</a></li><li><a href=""https://test-1-4.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/111292/"">test-portal-acceptance-pullrequest-batch(master)/functional-smoke-tomcat80-mariadb100-jdk8/0</a></li><li><a href=""https://test-1-1.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/110961/"">test-portal-acceptance-pullrequest-batch(master)/functional-smoke-tomcat80-mysql56-jdk8/0</a></li><li><a href=""https://test-1-5.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/95553/"">test-portal-acceptance-pullrequest-batch(master)/functional-smoke-tomcat80-postgresql94-jdk8/0</a></li><li><a href=""https://test-1-1.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/110962/"">test-portal-acceptance-pullrequest-batch(master)/functional-smoke-tomcat80-sybase160-jdk8/0</a></li><li><a href=""https://test-1-20.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/109024/"">test-portal-acceptance-pullrequest-batch(master)/functional-smoke-weblogic121-mysql56-jdk8/0</a></li><li><a href=""https://test-1-3.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/112023/"">test-portal-acceptance-pullrequest-batch(master)/functional-smoke-websphere85-mysql56-jdk8/0</a></li><li><a href=""https://test-1-16.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/106022/"">test-portal-acceptance-pullrequest-batch(master)/functional-smoke-wildfly100-mariadb100-jdk8/0</a></li><li><a href=""https://test-1-4.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/111293/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-hypersonic20-jdk8/0</a></li><li><a href=""https://test-1-4.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/111294/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/0</a></li><li><a href=""https://test-1-18.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/111624/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/1</a></li><li><a href=""https://test-1-14.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/111690/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/11</a></li><li><a href=""https://test-1-16.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/106023/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/12</a></li><li><a href=""https://test-1-11.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/105381/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/13</a></li><li><a href=""https://test-1-2.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/112752/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/14</a></li><li><a href=""https://test-1-19.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/106010/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/15</a></li><li><a href=""https://test-1-13.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/98289/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/16</a></li><li><a href=""https://test-1-13.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/98288/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/17</a></li><li><a href=""https://test-1-1.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/110964/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/18</a></li><li><a href=""https://test-1-9.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/100897/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/19</a></li><li><a href=""https://test-1-7.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/88126/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/2</a></li><li><a href=""https://test-1-7.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/88128/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/20</a></li><li><a href=""https://test-1-14.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/111691/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/21</a></li><li><a href=""https://test-1-11.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/105382/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/22</a></li><li><a href=""https://test-1-2.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/112753/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/23</a></li><li><a href=""https://test-1-19.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/106012/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/24</a></li><li><a href=""https://test-1-5.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/95555/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/25</a></li><li><a href=""https://test-1-10.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/93759/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/26</a></li><li><a href=""https://test-1-19.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/106011/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/27</a></li><li><a href=""https://test-1-13.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/98290/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/28</a></li><li><a href=""https://test-1-1.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/110966/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/29</a></li><li><a href=""https://test-1-11.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/105380/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/3</a></li><li><a href=""https://test-1-5.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/95557/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/30</a></li><li><a href=""https://test-1-2.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/112754/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/31</a></li><li><a href=""https://test-1-9.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/100898/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/32</a></li><li><a href=""https://test-1-5.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/95556/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/33</a></li><li><a href=""https://test-1-16.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/106024/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/34</a></li><li><a href=""https://test-1-11.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/105383/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/35</a></li><li><a href=""https://test-1-21.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/47548/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/36</a></li><li><a href=""https://test-1-20.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/109025/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/37</a></li><li><a href=""https://test-1-7.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/88130/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/38</a></li><li><a href=""https://test-1-7.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/88129/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/39</a></li><li><a href=""https://test-1-13.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/98287/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/4</a></li><li><a href=""https://test-1-14.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/111692/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/40</a></li><li><a href=""https://test-1-1.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/110965/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/41</a></li><li><a href=""https://test-1-19.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/106013/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/42</a></li><li><a href=""https://test-1-1.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/110963/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/5</a></li><li><a href=""https://test-1-14.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/111689/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/7</a></li><li><a href=""https://test-1-7.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/88127/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/8</a></li><li><a href=""https://test-1-19.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/106009/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/9</a></li><li><a href=""https://test-1-20.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/109026/"">test-portal-acceptance-pullrequest-batch(master)/functional-upgrade-jboss70-mysql56-jdk8/0</a></li><li><a href=""https://test-1-1.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/110968/"">test-portal-acceptance-pullrequest-batch(master)/functional-upgrade-jboss70-mysql56-jdk8/1</a></li><li><a href=""https://test-1-5.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/95558/"">test-portal-acceptance-pullrequest-batch(master)/functional-upgrade-tomcat80-mariadb100-jdk8/1</a></li><li><a href=""https://test-1-11.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/105384/"">test-portal-acceptance-pullrequest-batch(master)/functional-upgrade-tomcat80-mysql56-jdk8/0</a></li><li><a href=""https://test-1-9.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/100899/"">test-portal-acceptance-pullrequest-batch(master)/functional-upgrade-tomcat80-mysql56-jdk8/1</a></li><li><a href=""https://test-1-5.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/95560/"">test-portal-acceptance-pullrequest-batch(master)/functional-upgrade-tomcat80-postgresql94-jdk8/0</a></li><li><a href=""https://test-1-5.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/95559/"">test-portal-acceptance-pullrequest-batch(master)/functional-upgrade-tomcat80-postgresql94-jdk8/1</a></li><li><a href=""https://test-1-10.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/93762/"">test-portal-acceptance-pullrequest-batch(master)/functional-upgrade-wildfly100-mariadb100-jdk8/0</a></li><li><a href=""https://test-1-12.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/54768/"">test-portal-acceptance-pullrequest-batch(master)/functional-upgrade-wildfly100-mariadb100-jdk8/1</a></li><li><a href=""https://test-1-17.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/107100/"">test-portal-acceptance-pullrequest-batch(master)/integration-db2105-jdk8</a></li><li><a href=""https://test-1-7.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/88131/"">test-portal-acceptance-pullrequest-batch(master)/integration-hypersonic20-jdk8</a></li><li><a href=""https://test-1-5.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/95561/"">test-portal-acceptance-pullrequest-batch(master)/integration-postgresql94-jdk8</a></li><li><a href=""https://test-1-12.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/54767/"">test-portal-acceptance-pullrequest-batch(master)/javadoc-jdk8</a></li><li><a href=""https://test-1-19.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/106015/""><strike><strong>test-portal-acceptance-pullrequest-batch(master)/lpkg-override-jdk8</strong></strike></a></li><li><a href=""https://test-1-18.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/111627/""><strike><strong>test-portal-acceptance-pullrequest-batch(master)/lpkg-persistence-jdk8</strong></strike></a></li><li><a href=""https://test-1-6.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/90371/"">test-portal-acceptance-pullrequest-batch(master)/lpkg-release-jdk8</a></li><li><a href=""https://test-1-15.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/60839/""><strike><strong>test-portal-acceptance-pullrequest-batch(master)/lpkg-startup-jdk8</strong></strike></a></li><li><a href=""https://test-1-9.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/100900/"">test-portal-acceptance-pullrequest-batch(master)/modules-compile-jdk8</a></li><li><a href=""https://test-1-18.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/111626/"">test-portal-acceptance-pullrequest-batch(master)/modules-integration-db2105-jdk8</a></li><li><a href=""https://test-1-3.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/112026/"">test-portal-acceptance-pullrequest-batch(master)/modules-integration-hypersonic20-jdk8</a></li><li><a href=""https://test-1-19.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/106016/"">test-portal-acceptance-pullrequest-batch(master)/modules-integration-mysql56-jdk8</a></li><li><a href=""https://test-1-6.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/90372/"">test-portal-acceptance-pullrequest-batch(master)/modules-integration-postgresql94-jdk8</a></li><li><a href=""https://test-1-12.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/54769/"">test-portal-acceptance-pullrequest-batch(master)/modules-integration-sybase160-jdk8</a></li><li><a href=""https://test-1-7.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/88132/"">test-portal-acceptance-pullrequest-batch(master)/modules-unit-jdk8</a></li><li><a href=""https://test-1-15.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/60838/"">test-portal-acceptance-pullrequest-batch(master)/plugins-compile-jdk8</a></li><li><a href=""https://test-1-9.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/100902/"">test-portal-acceptance-pullrequest-batch(master)/portal-web-jdk8</a></li><li><a href=""https://test-1-5.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/95562/"">test-portal-acceptance-pullrequest-batch(master)/ruby-sass-compiler-jdk8</a></li><li><a href=""https://test-1-4.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/111297/"">test-portal-acceptance-pullrequest-batch(master)/semantic-versioning-jdk8</a></li><li><a href=""https://test-1-4.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/111296/"">test-portal-acceptance-pullrequest-batch(master)/service-builder-jdk8</a></li><li><a href=""https://test-1-16.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/106025/"">test-portal-acceptance-pullrequest-batch(master)/tck-jdk8</a></li><li><a href=""https://test-1-9.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/100903/"">test-portal-acceptance-pullrequest-batch(master)/unit-jdk8</a></li><li><a href=""https://test-1-15.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/60840/"">test-portal-acceptance-pullrequest-batch(master)/wsdd-builder-jdk8</a></li><li><a href=""https://test-1-15.liferay.com/job/test-portal-acceptance-pullrequest-dist(master)/509/"">test-portal-acceptance-pullrequest-dist(master)/jdk8</a></li></ul><h5>For more details click <a href=""https://test-1-21.liferay.com/userContent/jobs/test-portal-acceptance-pullrequest(master)/builds/742/jenkins-report.html"">here</a>.</h5><hr/><h4>Failed Jobs:</h4><ol><li><div><h5><a href=""https://test-1-21.liferay.com/job/test-portal-acceptance-pullrequest(master)/742/"">test-portal-acceptance-pullrequest(master)</a></h5><div><h6>Job Results:</h6><p>83 Jobs Passed.<br/>4 Jobs Failed.</p></div><pre><code>Downstream jobs FAILED.</code></pre></div></li><li><div><h5><a href=""https://test-1-19.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/106015/"">test-portal-acceptance-pullrequest-batch(master)/lpkg-override-jdk8</a></h5><div><h6>Job Results:</h6><p>2 Tests Passed.<br/>5 Tests Failed.</p></div><ol><li><div><a href=""https://test-1-19.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/AXIS_VARIABLE=0,label_exp=!master/106015/"">AXIS_VARIABLE=0,label_exp=!master #106015</a><ol><li><a href=""https://test-1-19.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/AXIS_VARIABLE=0,label_exp=!master/106015//testReport/com.liferay.portal.lpkg.deployer.override.test/LPKGOverrideVerifyCleanStartupTest/classMethod"">LPKGOverrideVerifyCleanStartupTest.classMethod</a></li><li><a href=""https://test-1-19.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/AXIS_VARIABLE=0,label_exp=!master/106015//testReport/com.liferay.portal.lpkg.deployer.override.test/LPKGOverrideVerifySecondStartupTest/classMethod"">LPKGOverrideVerifySecondStartupTest.classMethod</a></li><li><a href=""https://test-1-19.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/AXIS_VARIABLE=0,label_exp=!master/106015//testReport/com.liferay.portal.lpkg.deployer.override.test/LPKGRevertOverrideVerifyTest/classMethod"">LPKGRevertOverrideVerifyTest.classMethod</a></li><li>...</li></ol></div></li></ol></div></li><li><div><h5><a href=""https://test-1-18.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/111627/"">test-portal-acceptance-pullrequest-batch(master)/lpkg-persistence-jdk8</a></h5><div><h6>Job Results:</h6><p>3 Tests Passed.<br/>3 Tests Failed.</p></div><ol><li><div><a href=""https://test-1-18.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/AXIS_VARIABLE=0,label_exp=!master/111627/"">AXIS_VARIABLE=0,label_exp=!master #111627</a><ol><li><a href=""https://test-1-18.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/AXIS_VARIABLE=0,label_exp=!master/111627//testReport/com.liferay.portal.lpkg.deployer.persistence.test/LPKGPersistenceVerifyTest/classMethod"">LPKGPersistenceVerifyTest.classMethod</a></li><li><a href=""https://test-1-18.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/AXIS_VARIABLE=0,label_exp=!master/111627//testReport/com.liferay.portal.log.assertor/PortalLogAssertorTest/testScanXMLLog"">PortalLogAssertorTest.testScanXMLLog</a></li><li><a href=""https://test-1-18.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/AXIS_VARIABLE=0,label_exp=!master/111627//testReport/com.liferay.portal.log.assertor/PortalLogAssertorTest/testScanOSGiLog"">PortalLogAssertorTest.testScanOSGiLog</a></li></ol></div></li></ol></div></li><li><div><h5><a href=""https://test-1-15.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/60839/"">test-portal-acceptance-pullrequest-batch(master)/lpkg-startup-jdk8</a></h5><div><h6>Job Results:</h6><p>6 Tests Passed.<br/>5 Tests Failed.</p></div><ol><li><div><a href=""https://test-1-15.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/AXIS_VARIABLE=0,label_exp=!master/60839/"">AXIS_VARIABLE=0,label_exp=!master #60839</a><ol><li><a href=""https://test-1-15.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/AXIS_VARIABLE=0,label_exp=!master/60839//testReport/com.liferay.portal.lpkg.deployer.test/LPKGDeployerCleanStartupTest/classMethod"">LPKGDeployerCleanStartupTest.classMethod</a></li><li><a href=""https://test-1-15.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/AXIS_VARIABLE=0,label_exp=!master/60839//testReport/com.liferay.portal.lpkg.deployer.test/LPKGDeployerDowngradeTest/classMethod"">LPKGDeployerDowngradeTest.classMethod</a></li><li><a href=""https://test-1-15.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/AXIS_VARIABLE=0,label_exp=!master/60839//testReport/com.liferay.portal.lpkg.deployer.test/LPKGDeployerDowngradeTest/classMethod"">LPKGDeployerDowngradeTest.classMethod</a></li><li>...</li></ol></div></li></ol></div></li></ol><h5>For upstream results, click <a href=""https://test-1-1.liferay.com/job/test-portal-acceptance-upstream(master)"">here</a>.</h5></html>",True,False,3,91.78333333333333
pavouk/lgi/165,2017-05-10T04:48:30Z,False,59129ba66480fd65223155bd,Instead of setting to a new (empty) table; why not set the metatable to `nil`?,True,False,3,196424.6
pavouk/lgi/165,2017-05-10T06:48:45Z,False,5912b7fa6480fd74d4d040f1,"Good idea. I half-copied this from another project where, instead of just setting a new, empty table as a metatable, I add `__index` and `__newindex` metamethods that throw errors with an error message (more or less) explaining what happens. No idea why I didn't also do this here (except that I would need quite a number of such methods).

If wanted, I can do something like the above also here (but that still does not produce a good error message when the already-GCd object is used as an argument for something else). I'll do a force-push to update the code to just unset the metatable for now.

@daurnimator Thanks for taking a look!",True,False,3,196424.6
sonata-project/SonataPageBundle/688,2017-05-10T09:21:19Z,False,5912db986480fd7506827f10,@OskarStark finally managed to bring a test :smile: ,True,False,21,695972.8666666667
sonata-project/SonataPageBundle/688,2017-05-10T09:26:30Z,False,5912dcca6480fd719379d211,"> @OskarStark finally managed to bring a test 😄

awesome and glad to hear that :)",True,False,21,695972.8666666667
sonata-project/SonataPageBundle/688,2017-05-10T09:26:45Z,False,5912dce16480fd6f8b70c5d0,please remove this comment,True,False,21,695972.8666666667
sonata-project/SonataPageBundle/688,2017-05-10T09:27:47Z,False,5912dd206480fd719379d24a,please use `createMock()` instead,True,False,21,695972.8666666667
sonata-project/SonataPageBundle/688,2017-05-10T09:28:43Z,False,5912dd546480fd65cf6aac14,please use `createMock()` instead of `getMock()`,True,False,21,695972.8666666667
sonata-project/SonataPageBundle/688,2017-05-10T09:28:50Z,False,5912dd726480fd64df7f65ea,please use `createMock()` instead of `getMock()`,True,False,21,695972.8666666667
sonata-project/SonataPageBundle/688,2017-05-10T09:29:12Z,False,5912dd726480fd6db72af61a,"can you use `createMock()` here too, instead of the MockBuilder?",True,False,21,695972.8666666667
sonata-project/SonataPageBundle/688,2017-05-10T09:57:28Z,False,5912e4106480fd71e7916ac5,@OskarStark Seems I was stuck with old phpunit. Fixed.,True,False,21,695972.8666666667
anchorchat/anchor-ui/453,2017-05-11T13:04:39Z,False,5914616d6480fd38a4f30f45,"This property does not exist, why did you use it?",True,False,7,14257.333333333334
anchorchat/anchor-ui/453,2017-05-11T13:07:25Z,False,591462116480fd3aa76977a1,"Errors when typing in the input:

<img width=""624"" alt=""screen shot 2017-05-11 at 15 06 54"" src=""https://cloud.githubusercontent.com/assets/16486197/25950523/84d1cdf2-365b-11e7-9d34-3dd4bbca703e.png"">
",True,False,7,14257.333333333334
anchorchat/anchor-ui/453,2017-05-11T13:08:15Z,False,591462466480fd3efeee36d8,https://developer.mozilla.org/nl/docs/Web/HTML/Element/textarea,True,False,7,14257.333333333334
Automattic/wp-calypso/14008,2017-05-12T18:54:56Z,False,591605076480fd45618762e6,Test live: https://calypso.live/?branch=add/reader/following-intro-simple-ab-test,True,False,9,4308.983333333334
Automattic/wp-calypso/14008,2017-05-12T18:56:02Z,False,591605466480fd3e87bf7804,whats the logic here as opposed to an actual ab test?,True,False,9,4308.983333333334
Automattic/wp-calypso/14008,2017-05-12T18:56:54Z,False,5916057c6480fd3da9816ef8,"> whats the logic here as opposed to an actual ab test?

From the description: ""measure a user's behaviour across platforms and browsers after seeing the banner.""",True,False,9,4308.983333333334
Automattic/wp-calypso/14008,2017-05-12T19:04:22Z,False,591607386480fd3da9816fe0,>whats the logic here as opposed to the usual method for an ab test?,True,False,9,4308.983333333334
Automattic/wp-calypso/14008,2017-05-12T19:09:03Z,False,591608526480fd45f9302125,"Code LGTM.  I'm surprised i couldn't find any `isEven` anywhere 🤷‍♂️ .

Testing now",True,False,9,4308.983333333334
Automattic/wp-calypso/14008,2017-05-12T19:11:05Z,False,591608d16480fd3d61c56225,"> whats the logic here as opposed to the usual method for an ab test?

Good question @samouri. To add to @bluefuton's point, using the userid to govern the ab test assignment ensures the user will receive the same test assignment.

The usual method for an ab test randomly assigns an ab test and then uses the browser local storage to keep track of the ab test assignment. This means that many of our users will get assigned multiple (and possibly different) ab test assignments under the following conditions:

- uses incognito/private browsing
- uses multiple devices/ logins with different device
- uses multiple browsers (Safari, Firefox, Chrome)

By assigning the abtest by userid, we can ensure the user gets the same ab test independent of the browser or device. This is because when a user uses another browser, the ab test will reassign the same ab test because ab test assignment is based on userid (immutable).
 ",True,False,9,4308.983333333334
Automattic/wp-calypso/14008,2017-05-12T19:12:23Z,False,5916091e6480fd415303de92,"@aaronyan, that seems like a solid argument for _always_ using user_id!",True,False,9,4308.983333333334
jaredhanson/passport/533,2017-05-13T15:06:19Z,False,591720f06480fd45f93083b1,"@jeffwilcox how do you think, is _true_ a good default value, or it should rather be _false_ for backward compatibility? Then it could be explained in the documentation why switching to _true_ is a good idea. 

Or maybe the whole thing with regenerating the id should be implemented as another middleware?",True,False,8,794204.4666666667
Automattic/wp-calypso/14008,2017-05-15T18:36:58Z,False,5919f5516480fd434263177e,there has to be a better way of testing this than creating a new accounts and 🤞 your fingers than you get an odd and an even. exploring alternatives now,True,False,9,4308.983333333334
Automattic/wp-calypso/14008,2017-05-15T18:43:55Z,False,5919f6f56480fd3d61c6fbb6,"tested:
- created a single new account.  it was even and did not see the intro banner
- locally modified the isEven call to add 1 to the number first (flipping the even/oddness).  then that same user _did_ see the intro banner

🚢 ",True,False,9,4308.983333333334
sonata-project/SonataPageBundle/688,2017-05-17T12:31:53Z,False,591c42bd6480fd3775d8dd51,@greg0ire any idea why this is failing with `--prefer-lowest` ?,True,False,21,695972.8666666667
Victoire/victoire/925,2017-05-21T22:50:20Z,False,592219b06480fd3b12f52d93,"You have some behat errors I fixed (there)[https://github.com/paulandrieux/victoire/commits/feature/sf3.3]

My Branch is from the upstream master branch, so I can't rebase it on yours. 
However, I started a (PR to update master with 2.3)[https://github.com/Victoire/victoire/pull/926], so when this PR will be merged, my fixes will be easier to put onto your PR",True,False,5,28880.733333333334
Victoire/victoire/925,2017-05-22T08:15:26Z,False,59229e236480fd40d7628ac6,"We have to keep Symfony 2.8 compatibility here: `""symfony/symfony"": ""~2.8|~3.0"",`",True,False,5,28880.733333333334
ealonso/liferay-portal/948,2017-05-28T10:04:21Z,False,592aa0a66480fd515d17eb16,Pull request test invoked at http://test-1-7.liferay.com/job/test-portal-acceptance-pullrequest(master).,True,False,5,2991.5833333333335
ealonso/liferay-portal/948,2017-05-28T10:04:47Z,False,592aa0c16480fd55e36ee9c9,"<h1>Build started.</h1><p>Jenkins is currently running tests.</p><h4>Base Branch:</h4><p>Branch Name: <a href=""https://github.com/liferay/liferay-portal/tree/master"">master</a></p><h4>Job Summary:</h4><p>Job Link: <a href=""https://test-1-7.liferay.com/job/test-portal-acceptance-pullrequest(master)/1221/"">test-portal-acceptance-pullrequest(master)</a></p><p><b>For more details click <a href=""https://test-1-7.liferay.com//userContent/jobs/test-portal-acceptance-pullrequest(master)/builds/1221/jenkins-report.html"">here</a>.</b></p>",True,False,5,2991.5833333333335
ealonso/liferay-portal/948,2017-05-28T11:10:31Z,False,592ab02d6480fd53aeac57ce,"<html><h1>Some tests FAILED.</h1><p>Build Time: 1 hour 5 minutes 57 seconds 207 ms</p><h4>Base Branch:</h4><p>Branch Name: <a href=""https://github.com/liferay/liferay-portal/tree/master"">master</a><br/>Branch GIT ID: <a href=""https://github.com/liferay/liferay-portal/commit/37cc85673fd99d837563e367f91ca81e7c470e9a"">37cc85673fd99d837563e367f91ca81e7c470e9a</a></p><h4>Job Summary:</h4><ul><li><a href=""https://test-1-7.liferay.com/job/test-portal-acceptance-pullrequest(master)/1221/""><strike><strong>test-portal-acceptance-pullrequest(master)</strong></strike></a></li><li><a href=""https://test-1-3.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/118298/"">test-portal-acceptance-pullrequest-batch(master)/compile-jsp-jdk8</a></li><li><a href=""https://test-1-7.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/93998/"">test-portal-acceptance-pullrequest-batch(master)/functional-smoke-jboss70-mysql56-jdk8/0</a></li><li><a href=""https://test-1-1.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/116840/"">test-portal-acceptance-pullrequest-batch(master)/functional-smoke-tcserver32-mysql56-jdk8/0</a></li><li><a href=""https://test-1-3.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/118299/"">test-portal-acceptance-pullrequest-batch(master)/functional-smoke-tomcat80-db2105-jdk8/0</a></li><li><a href=""https://test-1-11.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/111336/"">test-portal-acceptance-pullrequest-batch(master)/functional-smoke-tomcat80-mariadb100-jdk8/0</a></li><li><a href=""https://test-1-4.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/117774/"">test-portal-acceptance-pullrequest-batch(master)/functional-smoke-tomcat80-mysql56-jdk8/0</a></li><li><a href=""https://test-1-2.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/118569/"">test-portal-acceptance-pullrequest-batch(master)/functional-smoke-tomcat80-oracle121-jdk8/0</a></li><li><a href=""https://test-1-3.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/118300/"">test-portal-acceptance-pullrequest-batch(master)/functional-smoke-tomcat80-postgresql94-jdk8/0</a></li><li><a href=""https://test-1-7.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/93999/"">test-portal-acceptance-pullrequest-batch(master)/functional-smoke-tomcat80-sybase160-jdk8/0</a></li><li><a href=""https://test-1-5.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/101911/"">test-portal-acceptance-pullrequest-batch(master)/functional-smoke-weblogic121-mysql56-jdk8/0</a></li><li><a href=""https://test-1-1.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/116841/"">test-portal-acceptance-pullrequest-batch(master)/functional-smoke-websphere85-mysql56-jdk8/0</a></li><li><a href=""https://test-1-6.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/97111/"">test-portal-acceptance-pullrequest-batch(master)/functional-smoke-wildfly100-mariadb100-jdk8/0</a></li><li><a href=""https://test-1-3.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/118301/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-hypersonic20-jdk8/0</a></li><li><a href=""https://test-1-7.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/94000/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/0</a></li><li><a href=""https://test-1-2.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/118571/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/1</a></li><li><a href=""https://test-1-2.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/118570/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/10</a></li><li><a href=""https://test-1-1.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/116844/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/11</a></li><li><a href=""https://test-1-10.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/99576/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/12</a></li><li><a href=""https://test-1-3.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/118303/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/13</a></li><li><a href=""https://test-1-11.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/111339/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/14</a></li><li><a href=""https://test-1-7.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/94002/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/15</a></li><li><a href=""https://test-1-6.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/97113/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/16</a></li><li><a href=""https://test-1-4.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/117776/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/17</a></li><li><a href=""https://test-1-2.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/118572/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/18</a></li><li><a href=""https://test-1-5.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/101914/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/19</a></li><li><a href=""https://test-1-11.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/111337/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/2</a></li><li><a href=""https://test-1-9.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/106784/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/20</a></li><li><a href=""https://test-1-1.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/116843/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/21</a></li><li><a href=""https://test-1-10.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/99577/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/22</a></li><li><a href=""https://test-1-3.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/118304/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/23</a></li><li><a href=""https://test-1-2.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/118573/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/24</a></li><li><a href=""https://test-1-4.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/117775/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/25</a></li><li><a href=""https://test-1-8.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/69592/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/26</a></li><li><a href=""https://test-1-5.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/101913/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/27</a></li><li><a href=""https://test-1-6.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/97114/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/28</a></li><li><a href=""https://test-1-11.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/111340/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/29</a></li><li><a href=""https://test-1-3.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/118302/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/3</a></li><li><a href=""https://test-1-7.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/94003/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/30</a></li><li><a href=""https://test-1-1.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/116845/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/31</a></li><li><a href=""https://test-1-9.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/106783/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/32</a></li><li><a href=""https://test-1-3.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/118305/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/33</a></li><li><a href=""https://test-1-10.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/99578/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/34</a></li><li><a href=""https://test-1-5.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/101915/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/35</a></li><li><a href=""https://test-1-2.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/118574/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/36</a></li><li><a href=""https://test-1-6.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/97115/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/37</a></li><li><a href=""https://test-1-11.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/111341/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/38</a></li><li><a href=""https://test-1-11.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/111342/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/39</a></li><li><a href=""https://test-1-4.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/117777/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/4</a></li><li><a href=""https://test-1-6.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/97117/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/40</a></li><li><a href=""https://test-1-6.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/97116/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/41</a></li><li><a href=""https://test-1-1.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/116842/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/5</a></li><li><a href=""https://test-1-6.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/97112/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/6</a></li><li><a href=""https://test-1-5.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/101912/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/7</a></li><li><a href=""https://test-1-7.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/94001/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/8</a></li><li><a href=""https://test-1-11.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/111338/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat80-mysql56-jdk8/9</a></li><li><a href=""https://test-1-6.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/97122/"">test-portal-acceptance-pullrequest-batch(master)/functional-upgrade-jboss70-mysql56-jdk8/0</a></li><li><a href=""https://test-1-8.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/69594/"">test-portal-acceptance-pullrequest-batch(master)/functional-upgrade-jboss70-mysql56-jdk8/1</a></li><li><a href=""https://test-1-4.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/117779/"">test-portal-acceptance-pullrequest-batch(master)/functional-upgrade-tomcat80-mariadb100-jdk8/0</a></li><li><a href=""https://test-1-1.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/116846/"">test-portal-acceptance-pullrequest-batch(master)/functional-upgrade-tomcat80-mariadb100-jdk8/1</a></li><li><a href=""https://test-1-4.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/117780/"">test-portal-acceptance-pullrequest-batch(master)/functional-upgrade-tomcat80-mysql56-jdk8/0</a></li><li><a href=""https://test-1-6.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/97123/"">test-portal-acceptance-pullrequest-batch(master)/functional-upgrade-tomcat80-mysql56-jdk8/1</a></li><li><a href=""https://test-1-2.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/118576/"">test-portal-acceptance-pullrequest-batch(master)/functional-upgrade-tomcat80-oracle121-jdk8/0</a></li><li><a href=""https://test-1-3.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/118306/"">test-portal-acceptance-pullrequest-batch(master)/functional-upgrade-tomcat80-oracle121-jdk8/1</a></li><li><a href=""https://test-1-3.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/118307/"">test-portal-acceptance-pullrequest-batch(master)/functional-upgrade-tomcat80-postgresql94-jdk8/0</a></li><li><a href=""https://test-1-2.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/118577/"">test-portal-acceptance-pullrequest-batch(master)/functional-upgrade-tomcat80-postgresql94-jdk8/1</a></li><li><a href=""https://test-1-7.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/94006/"">test-portal-acceptance-pullrequest-batch(master)/functional-upgrade-wildfly100-mariadb100-jdk8/0</a></li><li><a href=""https://test-1-5.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/101917/"">test-portal-acceptance-pullrequest-batch(master)/functional-upgrade-wildfly100-mariadb100-jdk8/1</a></li><li><a href=""https://test-1-8.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/69596/"">test-portal-acceptance-pullrequest-batch(master)/integration-db2105-jdk8</a></li><li><a href=""https://test-1-9.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/106785/"">test-portal-acceptance-pullrequest-batch(master)/integration-hypersonic20-jdk8</a></li><li><a href=""https://test-1-4.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/117782/"">test-portal-acceptance-pullrequest-batch(master)/integration-mysql56-jdk8</a></li><li><a href=""https://test-1-6.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/97124/"">test-portal-acceptance-pullrequest-batch(master)/integration-oracle121-jdk8</a></li><li><a href=""https://test-1-1.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/116847/"">test-portal-acceptance-pullrequest-batch(master)/integration-postgresql94-jdk8</a></li><li><a href=""https://test-1-7.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/94005/"">test-portal-acceptance-pullrequest-batch(master)/integration-sybase160-jdk8</a></li><li><a href=""https://test-1-10.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/99581/"">test-portal-acceptance-pullrequest-batch(master)/javadoc-jdk8</a></li><li><a href=""https://test-1-2.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/118579/"">test-portal-acceptance-pullrequest-batch(master)/lpkg-override-jdk8</a></li><li><a href=""https://test-1-5.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/101916/"">test-portal-acceptance-pullrequest-batch(master)/lpkg-persistence-jdk8</a></li><li><a href=""https://test-1-3.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/118309/"">test-portal-acceptance-pullrequest-batch(master)/lpkg-release-jdk8</a></li><li><a href=""https://test-1-10.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/99580/"">test-portal-acceptance-pullrequest-batch(master)/lpkg-startup-jdk8</a></li><li><a href=""https://test-1-3.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/118308/"">test-portal-acceptance-pullrequest-batch(master)/modules-compile-jdk8</a></li><li><a href=""https://test-1-5.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/101918/""><strike><strong>test-portal-acceptance-pullrequest-batch(master)/modules-integration-db2105-jdk8</strong></strike></a></li><li><a href=""https://test-1-2.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/118578/""><strike><strong>test-portal-acceptance-pullrequest-batch(master)/modules-integration-hypersonic20-jdk8</strong></strike></a></li><li><a href=""https://test-1-10.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/99579/""><strike><strong>test-portal-acceptance-pullrequest-batch(master)/modules-integration-mysql56-jdk8</strong></strike></a></li><li><a href=""https://test-1-8.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/69595/""><strike><strong>test-portal-acceptance-pullrequest-batch(master)/modules-integration-oracle121-jdk8</strong></strike></a></li><li><a href=""https://test-1-3.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/118310/""><strike><strong>test-portal-acceptance-pullrequest-batch(master)/modules-integration-postgresql94-jdk8</strong></strike></a></li><li><a href=""https://test-1-4.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/117781/"">test-portal-acceptance-pullrequest-batch(master)/modules-integration-sybase160-jdk8</a></li><li><a href=""https://test-1-6.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/97125/"">test-portal-acceptance-pullrequest-batch(master)/modules-unit-jdk8</a></li><li><a href=""https://test-1-7.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/94007/"">test-portal-acceptance-pullrequest-batch(master)/plugins-compile-jdk8</a></li><li><a href=""https://test-1-11.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/111348/"">test-portal-acceptance-pullrequest-batch(master)/portal-frontend-js-jdk8</a></li><li><a href=""https://test-1-1.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/116850/"">test-portal-acceptance-pullrequest-batch(master)/portal-web-jdk8</a></li><li><a href=""https://test-1-9.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/106788/"">test-portal-acceptance-pullrequest-batch(master)/ruby-sass-compiler-jdk8</a></li><li><a href=""https://test-1-9.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/106787/"">test-portal-acceptance-pullrequest-batch(master)/semantic-versioning-jdk8</a></li><li><a href=""https://test-1-11.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/111349/"">test-portal-acceptance-pullrequest-batch(master)/service-builder-jdk8</a></li><li><a href=""https://test-1-1.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/116849/""><strike><strong>test-portal-acceptance-pullrequest-batch(master)/source-format-jdk8</strong></strike></a></li><li><a href=""https://test-1-9.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/106786/"">test-portal-acceptance-pullrequest-batch(master)/tck-jdk8</a></li><li><a href=""https://test-1-1.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/116848/"">test-portal-acceptance-pullrequest-batch(master)/unit-jdk8</a></li><li><a href=""https://test-1-11.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/111350/"">test-portal-acceptance-pullrequest-batch(master)/wsdd-builder-jdk8</a></li><li><a href=""https://test-1-7.liferay.com/job/test-portal-acceptance-pullrequest-dist(master)/960/"">test-portal-acceptance-pullrequest-dist(master)/jdk8</a></li></ul><h5>For more details click <a href=""https://test-1-7.liferay.com/userContent/jobs/test-portal-acceptance-pullrequest(master)/builds/1221/jenkins-report.html"">here</a>.</h5><hr/><h4>Failed Jobs:</h4><ol><li><div><h5><a href=""https://test-1-7.liferay.com/job/test-portal-acceptance-pullrequest(master)/1221/"">test-portal-acceptance-pullrequest(master)</a></h5><div><h6>Job Results:</h6><p>91 Jobs Passed.<br/>7 Jobs Failed.</p></div><pre><code>Downstream jobs FAILED.</code></pre></div></li><li><div><h5><a href=""https://test-1-5.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/101918/"">test-portal-acceptance-pullrequest-batch(master)/modules-integration-db2105-jdk8</a></h5><div><h6>Job Results:</h6><p>5874 Tests Passed.<br/>1 Test Failed.</p></div><ol><li><div><a href=""https://test-1-5.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/AXIS_VARIABLE=5,label_exp=!master/101918/"">AXIS_VARIABLE=5,label_exp=!master #101918</a><ol><li><a href=""https://test-1-5.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/AXIS_VARIABLE=5,label_exp=!master/101918//testReport/com.liferay.portal.log.assertor/PortalLogAssertorTest/testScanXMLLog"">PortalLogAssertorTest.testScanXMLLog</a></li></ol></div></li></ol></div></li><li><div><h5><a href=""https://test-1-2.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/118578/"">test-portal-acceptance-pullrequest-batch(master)/modules-integration-hypersonic20-jdk8</a></h5><div><h6>Job Results:</h6><p>5874 Tests Passed.<br/>1 Test Failed.</p></div><ol><li><div><a href=""https://test-1-2.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/AXIS_VARIABLE=5,label_exp=!master/118578/"">AXIS_VARIABLE=5,label_exp=!master #118578</a><ol><li><a href=""https://test-1-2.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/AXIS_VARIABLE=5,label_exp=!master/118578//testReport/com.liferay.portal.log.assertor/PortalLogAssertorTest/testScanXMLLog"">PortalLogAssertorTest.testScanXMLLog</a></li></ol></div></li></ol></div></li><li><div><h5><a href=""https://test-1-10.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/99579/"">test-portal-acceptance-pullrequest-batch(master)/modules-integration-mysql56-jdk8</a></h5><div><h6>Job Results:</h6><p>5873 Tests Passed.<br/>2 Tests Failed.</p></div><ol><li><div><a href=""https://test-1-10.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/AXIS_VARIABLE=5,label_exp=!master/99579/"">AXIS_VARIABLE=5,label_exp=!master #99579</a><ol><li><a href=""https://test-1-10.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/AXIS_VARIABLE=5,label_exp=!master/99579//testReport/com.liferay.portal.log.assertor/PortalLogAssertorTest/testScanXMLLog"">PortalLogAssertorTest.testScanXMLLog</a></li></ol></div></li><li><div><a href=""https://test-1-10.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/AXIS_VARIABLE=9,label_exp=!master/99579/"">AXIS_VARIABLE=9,label_exp=!master #99579</a><ol><li><a href=""https://test-1-10.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/AXIS_VARIABLE=9,label_exp=!master/99579//testReport/com.liferay.portal.log.assertor/PortalLogAssertorTest/testScanXMLLog"">PortalLogAssertorTest.testScanXMLLog</a></li></ol></div></li></ol></div></li><li><div><h5><a href=""https://test-1-8.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/69595/"">test-portal-acceptance-pullrequest-batch(master)/modules-integration-oracle121-jdk8</a></h5><div><h6>Job Results:</h6><p>5873 Tests Passed.<br/>2 Tests Failed.</p></div><ol><li><div><a href=""https://test-1-8.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/AXIS_VARIABLE=5,label_exp=!master/69595/"">AXIS_VARIABLE=5,label_exp=!master #69595</a><ol><li><a href=""https://test-1-8.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/AXIS_VARIABLE=5,label_exp=!master/69595//testReport/com.liferay.portal.log.assertor/PortalLogAssertorTest/testScanXMLLog"">PortalLogAssertorTest.testScanXMLLog</a></li></ol></div></li><li><div><a href=""https://test-1-8.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/AXIS_VARIABLE=9,label_exp=!master/69595/"">AXIS_VARIABLE=9,label_exp=!master #69595</a><ol><li><a href=""https://test-1-8.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/AXIS_VARIABLE=9,label_exp=!master/69595//testReport/com.liferay.portal.log.assertor/PortalLogAssertorTest/testScanXMLLog"">PortalLogAssertorTest.testScanXMLLog</a></li></ol></div></li></ol></div></li><li>...</li></ol><h5>For upstream results, click <a href=""https://test-1-1.liferay.com/job/test-portal-acceptance-upstream(master)"">here</a>.</h5></html>",True,False,5,2991.5833333333335
ealonso/liferay-portal/948,2017-05-30T10:47:28Z,False,592d4dc46480fd5c4524dd19,Just started reviewing :) <br><br>:octocat: *Sent from [GH](http://nodegh.io).*,True,False,5,2991.5833333333335
ealonso/liferay-portal/948,2017-05-30T11:55:56Z,False,592d5dd06480fd515d1918e8,Pull request submitted to https://github.com/ealonso/liferay-portal/pull/952. [See changes here.](https://github.com/ealonso/liferay-portal/compare/25bd8ba~7...25bd8ba) <br><br>:octocat: *Sent from [GH](http://nodegh.io).*,True,False,5,2991.5833333333335
DGtal-team/DGtal/1266,2017-05-31T15:22:57Z,False,592edfd96480fd5ab50b389f,@cgurps Perhaps have a look if you want to add something.,True,False,66,246101.18333333332
jenkinsci/gerrit-trigger-plugin/315,2017-05-31T15:52:55Z,False,592ee6e26480fd50f44732b0,"I think you can remove the object array as well:
logger.trace(""==> item:({}) oper:({}) text:({})"", item, oper, text);",True,False,5,12641.516666666666
jenkinsci/gerrit-trigger-plugin/315,2017-05-31T18:59:50Z,False,592f12ba6480fd5c883599b8,Correct! Fixed.,True,False,5,12641.516666666666
DGtal-team/DGtal/1266,2017-06-01T12:09:44Z,False,593004146480fd565803800e,"Seems codacy/pr does not provide great hints: some of the methods are called internally by boost::iterator_facade, some others mentioned non-used are called in tests. Travis and Appveyor should be fine now.",True,False,66,246101.18333333332
Victoire/victoire/925,2017-06-01T19:32:27Z,False,59306bce6480fd5133cebafd,"Do we still run tests with Symfony 2.8? I had a old PR about restoring Travis CI builds: https://github.com/alexislefebvre/victoire/pull/14 Even if it was slow, it allowed to test several versions of Symfony. I'll try to update it with the code from this PR.",True,False,5,28880.733333333334
Alfresco/alfresco-ng2-components/1932,2017-06-05T14:37:51Z,False,59356cc96480fd52b619d596,"# [Codecov](https://codecov.io/gh/Alfresco/alfresco-ng2-components/pull/1932?src=pr&el=h1) Report
> Merging [#1932](https://codecov.io/gh/Alfresco/alfresco-ng2-components/pull/1932?src=pr&el=desc) into [development](https://codecov.io/gh/Alfresco/alfresco-ng2-components/commit/ad4467dad590d0022838e4e45b7061bc0f75b5e1?src=pr&el=desc) will **decrease** coverage by `0.27%`.
> The diff coverage is `100%`.

[![Impacted file tree graph](https://codecov.io/gh/Alfresco/alfresco-ng2-components/pull/1932/graphs/tree.svg?width=650&height=150&token=F2fwhZ71jw&src=pr)](https://codecov.io/gh/Alfresco/alfresco-ng2-components/pull/1932?src=pr&el=tree)

```diff
@@               Coverage Diff               @@
##           development    #1932      +/-   ##
===============================================
- Coverage        91.81%   91.54%   -0.28%     
===============================================
  Files               14       14              
  Lines             1161     1171      +10     
  Branches           189      193       +4     
===============================================
+ Hits              1066     1072       +6     
- Misses              95       99       +4
```


| [Impacted Files](https://codecov.io/gh/Alfresco/alfresco-ng2-components/pull/1932?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...slist/src/components/activiti-filters.component.ts](https://codecov.io/gh/Alfresco/alfresco-ng2-components/pull/1932?src=pr&el=tree#diff-bmcyLWNvbXBvbmVudHMvbmcyLWFjdGl2aXRpLXByb2Nlc3NsaXN0L3NyYy9jb21wb25lbnRzL2FjdGl2aXRpLWZpbHRlcnMuY29tcG9uZW50LnRz) | `86.73% <100%> (-3.04%)` | :arrow_down: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/Alfresco/alfresco-ng2-components/pull/1932?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/Alfresco/alfresco-ng2-components/pull/1932?src=pr&el=footer). Last update [ad4467d...3e98e73](https://codecov.io/gh/Alfresco/alfresco-ng2-components/pull/1932?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",True,False,1,0.0
Victoire/victoire/925,2017-06-06T13:43:06Z,False,5936b16d6480fd52b61a8298,"Guys @alexislefebvre @paulandrieux @gregumo, I need a final review before merging with the swag we deserve :p",True,False,5,28880.733333333334
jenkinsci/gerrit-trigger-plugin/315,2017-06-09T08:42:09Z,False,593a5f656480fd55452a2bd1,I don't see the fix,True,False,5,12641.516666666666
jenkinsci/gerrit-trigger-plugin/315,2017-06-09T09:19:01Z,False,593a682d6480fd5736f3b23a,"we are using too old slf4j, I had to revert this as the slf4j does not support ...

the important fix is not to use {n}.",True,False,5,12641.516666666666
jenkinsci/gerrit-trigger-plugin/315,2017-06-09T10:34:26Z,False,593a79b66480fd55e376c06f,"Yea, I see that now. Strange, we should perhaps look into bumping slf4j to a newer version but that might put us in a bit of trouble since core is also bundling a version of slf4j that might conflict.",True,False,5,12641.516666666666
Victoire/victoire/925,2017-06-11T00:11:04Z,False,593c8aac6480fd53aeb4f011,"I think we do not need any branch alias for 2.x branches. A branch alias is required only on the master branch to match the next major release (3.0 ATM). 
",True,False,5,28880.733333333334
DGtal-team/DGtal/1266,2017-06-19T20:12:19Z,False,594831e86480fd53fe82f940,Does this function implements the marching cube algorithm ?,True,False,66,246101.18333333332
DGtal-team/DGtal/1266,2017-06-19T20:13:46Z,False,594831e86480fd536b843909,"Does choosing the first two vertices have an impact on the output triangulated surface ?
Are you sure that there is not overlapping triangles ?",True,False,66,246101.18333333332
NeuralEnsemble/python-neo/344,2017-06-21T10:27:38Z,False,594a4a1d6480fd50f4549017,"
[![Coverage Status](https://:/builds/12064931/badge)](https://:/builds/12064931)

Coverage remained the same at 50.331% when pulling **6d5a479b3e671ebc503dfff7615a11abee458ca5 on INM-6:fix/duplicate_spiketrain** into **9bd5f01a3b3dc311a89c0be3b0008e516fd3a098 on NeuralEnsemble:master**.
",True,False,2,225.61666666666667
NeuralEnsemble/python-neo/344,2017-06-21T14:13:15Z,False,594a7f056480fd5c4533469e,Thank you for figthing with this!!,True,False,2,225.61666666666667
kubernetes/kubernetes/44053,2017-06-28T00:05:34Z,False,5952f2d36480fd5e98bc8a3c,"Commit found in the ""release-1.6"" branch appears to be this PR. Removing the ""cherrypick-candidate"" label. If this is an error find help to get your PR picked.",True,False,40,121242.66666666667
DGtal-team/DGtal/1266,2017-07-03T08:35:22Z,False,595a07d96480fd50e001d72b,Agree but Mesh -> digital surfaces is not a feature of this PR I think.. Maybe minor rephrasing?,True,False,66,246101.18333333332
DGtal-team/DGtal/1266,2017-07-03T08:42:03Z,False,595a07d96480fd50cb8892c9,Laboratoire,True,False,66,246101.18333333332
DGtal-team/DGtal/1266,2017-07-03T08:43:30Z,False,595a07da6480fd5d147f4c34,"No.. this flag mustn't  be set in the code. Only cmake can set it.
Maybe you wanted a compiler error if this one is not set but it is not the way to do it",True,False,66,246101.18333333332
DGtal-team/DGtal/1266,2017-07-03T08:45:10Z,False,595a07d96480fd514958bcc9,"please add some doc, even for examples.
(maybe not as dense as technical doc of classes but still)",True,False,66,246101.18333333332
DGtal-team/DGtal/1266,2017-07-03T08:48:07Z,False,595a07d96480fd5ab51fe34e,...boundary as Marching-Cubes triangulated surfaces..  ?,True,False,66,246101.18333333332
DGtal-team/DGtal/1266,2017-07-03T08:51:10Z,False,595a07de6480fd5a28842e7a,"At this point, I don't see why you need this but it would probably make sense later..

Is this class model of some concepts we have on iterators ? If so, please update the doc.",True,False,66,246101.18333333332
DGtal-team/DGtal/1266,2017-07-03T08:51:33Z,False,595a07da6480fd59d372a5ed,Remove the file if empty,True,False,66,246101.18333333332
DGtal-team/DGtal/1266,2017-07-03T08:51:41Z,False,595a07d96480fd5e98bfcad5,cleanup (see below),True,False,66,246101.18333333332
DGtal-team/DGtal/1266,2017-07-03T08:54:39Z,False,595a07d96480fd5736028501,"(e.g. a planar face with vertices {0,1,2,..} is triangulated with triangles (0,1,2), (0,2,3), (0,3,4)...)",True,False,66,246101.18333333332
DGtal-team/DGtal/1266,2017-07-03T08:57:21Z,False,595a07d96480fd5812ae35d6,indent is weird...,True,False,66,246101.18333333332
DGtal-team/DGtal/1266,2017-07-03T08:58:08Z,False,595a07d96480fd53aec2d5f2,"well.. we are dealing with 2-surfaces in dim 3, you can simply talk about 2-cells. ",True,False,66,246101.18333333332
DGtal-team/DGtal/1266,2017-07-03T08:59:01Z,False,595a07d96480fd50b7382d08,of a 2-digital surface in K^3,True,False,66,246101.18333333332
DGtal-team/DGtal/1266,2017-07-03T08:59:17Z,False,595a07da6480fd5f02601755,cleanup here? ,True,False,66,246101.18333333332
DGtal-team/DGtal/1266,2017-07-03T09:00:02Z,False,595a07dd6480fd511e6c29f5,Don't you assert that the dimension of the DigitalSurface is 2 ? ,True,False,66,246101.18333333332
DGtal-team/DGtal/1266,2017-07-03T09:20:38Z,False,595a0c6a6480fd536b8cb757,done,True,False,66,246101.18333333332
DGtal-team/DGtal/1266,2017-07-03T09:25:43Z,False,595a0d9f6480fd57984117e1,Done,True,False,66,246101.18333333332
DGtal-team/DGtal/1266,2017-07-03T09:32:16Z,False,595a0f246480fd5c88497a94,"It is a model of boost::RandomAccessIterator.
It has been updated in the doc.
",True,False,66,246101.18333333332
DGtal-team/DGtal/1266,2017-07-03T09:32:27Z,False,595a0f326480fd5be21adf49,done,True,False,66,246101.18333333332
DGtal-team/DGtal/1266,2017-07-03T09:32:33Z,False,595a0f3c6480fd565818a07e,done,True,False,66,246101.18333333332
DGtal-team/DGtal/1266,2017-07-03T09:33:50Z,False,595a0f866480fd53fe8b849c,"Yes, and doc updated.",True,False,66,246101.18333333332
DGtal-team/DGtal/1266,2017-07-03T09:35:46Z,False,595a0ff66480fd55e385bc8e,"Done, and check 3D is done.",True,False,66,246101.18333333332
DGtal-team/DGtal/1266,2017-07-03T09:37:11Z,False,595a10526480fd5d78561a7b,ok,True,False,66,246101.18333333332
DGtal-team/DGtal/1266,2017-07-03T09:37:29Z,False,595a105d6480fd56e11df8e6,I have homogenised the indentation.,True,False,66,246101.18333333332
DGtal-team/DGtal/1266,2017-07-03T09:37:59Z,False,595a107b6480fd50b738333e,done,True,False,66,246101.18333333332
DGtal-team/DGtal/1266,2017-07-03T09:38:13Z,False,595a10886480fd5e257ca3ca,done,True,False,66,246101.18333333332
DGtal-team/DGtal/1266,2017-07-03T09:41:08Z,False,595a11386480fd5e98bfd20d,I think it's on purpose (to emphasise the initials of LA MA).,True,False,66,246101.18333333332
DGtal-team/DGtal/1266,2017-07-03T09:43:53Z,False,595a11e56480fd52b62af8f7,";) I didn’t see the MA
But on some files, you don’t have this emphasis ",True,False,66,246101.18333333332
DGtal-team/DGtal/1266,2017-07-03T09:46:37Z,False,595a12846480fd5ab51fea3a,I put it at the correct places. It is not really useful since the CMakeLists requires both Eigen and QGLViewer for this example.,True,False,66,246101.18333333332
DGtal-team/DGtal/1266,2017-07-03T09:47:06Z,False,595a12a16480fd536b8cbdaa,I let @cgurps write it.,True,False,66,246101.18333333332
DGtal-team/DGtal/1266,2017-07-03T16:17:52Z,False,595a6e366480fd5a2884574b,I am just adding arbitrary combinatorial surfaces (and thus quadrangulated surface). Please wait for review.,True,False,66,246101.18333333332
DGtal-team/DGtal/1266,2017-07-07T19:56:54Z,False,595fe78c6480fd510a036ade,"There is now a class IndexedDigitalSurface to mimic a DigitalSurface but with a precomputed topology ! Speed-up are 2-3 times faster, especially when using visitors (like for local estimators).",True,False,66,246101.18333333332
linuxkit/linuxkit/2173,2017-07-09T06:09:55Z,False,5961c8b56480fd5f0263d5aa,"<!-- AUTOMATED:POULE:DCO-EXPLANATION -->
Please sign your commits following these rules:
https://github.com/moby/moby/blob/master/CONTRIBUTING.md#sign-your-work
The easiest way to do this is to amend the last commit:
~~~console
$ git clone -b ""mount-label-support"" git@github.com:aboyett/linuxkit.git somewhere
$ cd somewhere
$ git commit --amend -s --no-edit
$ git push -f
~~~

Amending updates the existing PR. You **DO NOT** need to open a new one.
",True,False,21,2163.0
linuxkit/linuxkit/2173,2017-07-09T06:14:28Z,False,5961c9c86480fd58d3eb7983,"Thanks. A few questions:

1. Were the issues in #2123 resolved? There was some issue with it not mounting.
2. Can you update the docs for how to mount a disk? They are here https://github.com/linuxkit/linuxkit/blob/master/docs/external-disk.md
3. It looks like it looks for and mounts the disk by label, and then also runs the `find` in `/dev` and mounts? Is that intentional?
4. Do we have tests for disk mounting? 

",True,False,21,2163.0
linuxkit/linuxkit/2173,2017-07-09T06:31:08Z,False,5961cdae6480fd50f45fab86,"> Thanks. A few questions:
> 
>     Were the issues in #2123 resolved? There was some issue with it not mounting.
I have been able to successfully mount an external disk using this code using the command-lines given in the commit and PR descriptions.

>     Can you update the docs for how to mount a disk? They are here https://github.com/linuxkit/linuxkit/blob/master/docs/external-disk.md
Sure! Would you prefer an amendment to the existing commit, or subsequent commits in the same PR?

>     It looks like it looks for and mounts the disk by label, and then also runs the find in /dev and mounts? Is that intentional?
On successful mount, `return` is called; I mirrored this pattern in the new approach. You do make a good point that it still falls back to the autodetecting default approach on failure. Do you agree it would be reasonable to abort further mounting attempts if we fail to mount the explicitly given device identifier?

>     Do we have tests for disk mounting?
I don't see any mounting tests in https://github.com/linuxkit/linuxkit/tree/master/test/cases/040_packages nor any relevant mentions of ""mount"" in the test output on https://linuxkit.datakit.ci/. Should I check somewhere else?",True,False,21,2163.0
linuxkit/linuxkit/2173,2017-07-09T08:12:40Z,False,5961e6b26480fd5f0263de4e,should this return?,True,False,21,2163.0
linuxkit/linuxkit/2173,2017-07-09T08:13:01Z,False,5961e6b06480fd579844d371,super minor nit but extra line can be removed,True,False,21,2163.0
linuxkit/linuxkit/2173,2017-07-09T08:21:43Z,False,5961e79b6480fd5960703299,Would be a great improvement because of flexibility :),True,False,21,2163.0
linuxkit/linuxkit/2173,2017-07-09T09:38:29Z,False,5961f99b6480fd50f45fb891,"@aboyett re ""On successful mount, return is called; I mirrored this pattern in the new approach. You do make a good point that it still falls back to the autodetecting default approach on failure. Do you agree it would be reasonable to abort further mounting attempts if we fail to mount the explicitly given device identifier?"" - definitely do not fall back if explicit instruction fails, that would be very confusing. Just fail.
",True,False,21,2163.0
linuxkit/linuxkit/2173,2017-07-09T12:13:12Z,False,59621ddc6480fd59d3767dac,"> I have been able to successfully mount an external disk using this code using the command-lines given in the commit and PR descriptions.

Great! If it works, it works.

> Can you update the docs for how to mount a disk? They are here https://github.com/linuxkit/linuxkit/blob/master/docs/external-disk.md
Sure! Would you prefer an amendment to the existing commit, or subsequent commits in the same PR?

I think amendment. I think the standard for linuxkit projects is single comment amended. I usually get asked to squash multiple commits down (but could be personal! :-) )

> On successful mount, return is called; I mirrored this pattern in the new approach. You do make a good point that it still falls back to the autodetecting default approach on failure. Do you agree it would be reasonable to abort further mounting attempts if we fail to mount the explicitly given device identifier?

Agreed with @justincormack here: ""definitely do not fall back if explicit instruction fails"". 

This makes me think about the syntax. We want to move towards being able to:

* mount multiple disks explicitly (name, label, dev, etc.) to specific mount points
* mount all disks as found (current behaviour)

We need a syntax to support both of those. We also should be able to fail if an _explicit_ mount is unavailable. 

May I recommend the following (do not change until @rn or @justincormack weighs in):

* options to `mount.sh` are one option per file-system, colon-separated
* wildcard option means ""mount all you can find in dev"" (current behaviour), but excluding any already mounted explicitly. For wildcard, probably just `/dev` with no specific subpath or mountpoint. 
* no arguments is equivalent to wildcard (I suspect this would be controversial)
* any _explicit_ request fs that is not found is a failure
* wildcards not found (_implicit_) are not a failure

Something like:

```yml
command: [""/mount.sh"", ""/dev/sdb1:/var/data""]
command: [""/mount.sh"", ""LABEL=DATA:/var/data""]
command: [""/mount.sh"", ""UUID=deadbee7-cafe-dead-c0d3-1234567890ab:/var/data""]
command: [""/mount.sh"", ""/dev/sdb1:/var/data"", ""/dev/sdb2:/var/foo""]
command: [""/mount.sh"", ""LABEL=DATA:/var/data"",""/dev/sdb3:/var/bar""]
command: [""/mount.sh"", ""LABEL=DATA:/var/data"",""/dev/sdb3:/var/bar"",""/dev""]
command: [""/mount.sh"", ""/dev""]
command: [""/mount.sh""]
```

I wanted to use `*` for wildcard, but that could create shell globbing issues (auto-correct tried to change ""globbing"" to ""glowing""... radioactive `mount.sh`?)

Thoughts?",True,False,21,2163.0
linuxkit/linuxkit/2173,2017-07-09T16:16:06Z,False,596256cb6480fd58d3ebaa0f,"@deitch the current one does not mount all devices, it mounts the first one it finds and then returns. Ideally it should use a better heuristic, eg it should prefer a non boot volume, or choose largest device.",True,False,21,2163.0
linuxkit/linuxkit/2173,2017-07-09T16:19:41Z,False,596257a06480fd5c453e63ce,"I think mount a prepared partition (by label) should be fine. first or last partition tastes like mount a random  partition *g*
RancherOS uses a default label name. If there is a partition with that label, it will be mounted.",True,False,21,2163.0
linuxkit/linuxkit/2173,2017-07-09T16:19:54Z,False,596257ac6480fd55e389b40a,"Um yeah. Right. Ok. So do we want to keep that behaviour? Replace it with ""all""? Both?",True,False,21,2163.0
linuxkit/linuxkit/2173,2017-07-09T17:08:20Z,False,596263316480fd5f02640aff,"can we move the discussion about multiple mounts etc to an issue instead of hijacking a PR which, although related, is a perfectly fine improvement (once the minor nits are addressed) over what we currently have. We already have an issue for multiple disks (https://github.com/linuxkit/linuxkit/issues/1150) and the discussion should happen there.",True,False,21,2163.0
linuxkit/linuxkit/2173,2017-07-09T17:17:00Z,False,5962650f6480fd536b90aca2,"> can we move the discussion about multiple mounts etc to an issue instead of hijacking a PR which, although related, is a perfectly fine improvement

It came up because it affects this PR. Previously, we just ran `mount.sh` and it found the first valid disk and mounted. Now, we are adding the ability to mount a specific disk at a specific mount point (an *excellent* improvement), but that creates an options syntax for `mount.sh`. We want to get the syntax able to support multiple mounts with the next PR without having to change it (backwards-incompatible) again.

I think it would be fine for now if we had a syntax that allowed us to extend to multiple mounts in a future PR without having to change the current to this PR syntax (hence the suggested single colon-separated arg vs 2 args), and fall back to current behaviour (first disk found) with no arg.

Future PR can just add options, including a wildcard.

Work?
",True,False,21,2163.0
linuxkit/linuxkit/2173,2017-07-09T19:16:23Z,False,5962810b6480fd55453d2104,"I don't think we should aim to support multiple mounts in one, the syntax is going to always be ugly, and adding multiple `mount` images will be costless eventually anyway. If we can make a nice syntax, maybe, but its low priority.",True,False,21,2163.0
linuxkit/linuxkit/2173,2017-07-09T19:39:22Z,False,5962866d6480fd5e98c3d1b8,"I didn't think about that. Nothing wrong with having multiple onboot mount images, is there?

Convinced me. 

Ok then. Let's leave the syntax as is. We just need the fail-if-not-found, docs updated, and mount only that disk if args given / first disk = current behaviour if no arts given. ",True,False,21,2163.0
linuxkit/linuxkit/2173,2017-07-10T14:34:37Z,False,596390886480fd5d1483c412,This conflicts with https://github.com/linuxkit/linuxkit/pull/2152,True,False,21,2163.0
linuxkit/linuxkit/2173,2017-07-10T14:45:18Z,False,5963930d6480fd51c7b87d7c,@dave-tucker if you remove the `mount` parts of #2152 is there anything missing here?,True,False,21,2163.0
linuxkit/linuxkit/2173,2017-07-10T15:30:53Z,False,59639dc26480fd56e1227ff7,"This won't return based on the current feedback.  Autodetection of mounting will not be attempted if a device is specified but cannot be found (or mounting it fails.) In that case this message will be displayed, then the lower ""WARNING: Failed to mount a persistent volume (is there one?)"" message will be displayed.",True,False,21,2163.0
linuxkit/linuxkit/2173,2017-07-10T15:31:00Z,False,59639dbb6480fd52b62f5623,Done.,True,False,21,2163.0
linuxkit/linuxkit/2173,2017-07-10T16:19:23Z,False,5963a90e6480fd5c453f0b1b,"I think we may go for #2152 instead, which rewrites the shell scripts in Go; @dave-tucker is adapting to support labels and be in line with the decisions we made here.",True,False,21,2163.0
linuxkit/linuxkit/2173,2017-07-10T18:12:55Z,False,5963c3ab6480fd5e2581b101,"Ah, ok. I'll close this PR and look forward to filesystem label support in #2152 :smile:",True,False,21,2163.0
department-of-veterans-affairs/caseflow-efolder/526,2017-07-10T19:07:38Z,False,5963d0806480fd5812b2e2c3,"Can we somehow test this on the application controller, since this effectively duplicates a similar test in documents_spec.rb",True,False,52,4304.833333333333
department-of-veterans-affairs/caseflow-efolder/526,2017-07-11T11:27:10Z,False,5964bf2d6480fd50cb8ce3f5,I think we can move this to Api::V1::ApplicationController and call it something like `verify_reader_enabled`,True,False,52,4304.833333333333
department-of-veterans-affairs/caseflow-efolder/526,2017-07-11T11:37:20Z,False,5964bf2d6480fd510a056b19,"When you say `cache` you mean save files in s3, right? I think this job name is a bit unclear.  ",True,False,52,4304.833333333333
department-of-veterans-affairs/caseflow-efolder/526,2017-07-11T11:46:29Z,False,5964bf2d6480fd5812b361c8,I wonder why do we want to call `perform_later` method here to enqueue the job to be performed as soon as the queuing system is free. Could we use `perform_now` now here as well? ,True,False,52,4304.833333333333
department-of-veterans-affairs/caseflow-efolder/526,2017-07-11T11:58:07Z,False,5964bf2e6480fd59d377d20e,"If we don't want to call the job on every create, then we need to remove it from `after_commit` hook and this way we can get rid of `no_fetch`. I think we can call it from Search.rb after we `download.save!`

```
download.start_fetch_manifest
```",True,False,52,4304.833333333333
department-of-veterans-affairs/caseflow-efolder/526,2017-07-11T11:59:54Z,False,5964bf2d6480fd54dd9f2253,"why did you make this change, just curious? ",True,False,52,4304.833333333333
department-of-veterans-affairs/caseflow-efolder/526,2017-07-11T12:04:26Z,False,5964bf2d6480fd5c884e7aac,"How about something like that:

```
content = document.fetcher.content
document.save_locally(content, index) unless only_cache
@download.touch
```

Also, `only_cache` is a bit unclear, maybe we can call it `save_locally`?",True,False,52,4304.833333333333
department-of-veterans-affairs/caseflow-efolder/526,2017-07-11T15:49:38Z,False,5964fa106480fd5d14849dca,"Lines 13-16 of this method could probably be factored out into a unit testable method on `Download`

something like:
`download.prepare_files!`",True,False,52,4304.833333333333
department-of-veterans-affairs/caseflow-efolder/526,2017-07-11T15:51:21Z,False,5964fa106480fd58a04ded14,this could probably use a comment or be more explanatory about what it means.,True,False,52,4304.833333333333
department-of-veterans-affairs/caseflow-efolder/526,2017-07-11T15:53:33Z,False,5964fa106480fd55e38b29e7,"I'm okay with it, since we are using S3 as a cache. (we could theoretically cache them in many different ways)

We could also use current efolder express lingo and call it `FetchFilesJob`. Either way I don't care.",True,False,52,4304.833333333333
department-of-veterans-affairs/caseflow-efolder/526,2017-07-11T15:56:29Z,False,5964fa106480fd5e258264ec,I think this should be `CacheFilesJob`,True,False,52,4304.833333333333
department-of-veterans-affairs/caseflow-efolder/526,2017-07-11T15:57:11Z,False,5964fa106480fd5b50a2cc35,I miss Generators 😄 😢 ,True,False,52,4304.833333333333
department-of-veterans-affairs/caseflow-efolder/526,2017-07-11T16:02:37Z,False,5964fa106480fd5812b38f3e,`perform_later` is used to get a more snappy response (and show the big loading icon) on the UI efolder express.,True,False,52,4304.833333333333
department-of-veterans-affairs/caseflow-efolder/526,2017-07-11T16:04:01Z,False,5964fa106480fd5c884e9ecf,I agree. The `after_commit` + `no_fetch` logic is janky af.,True,False,52,4304.833333333333
department-of-veterans-affairs/caseflow-efolder/526,2017-07-11T16:04:45Z,False,5964fa106480fd51495e14a8,also curious 🍎 ,True,False,52,4304.833333333333
department-of-veterans-affairs/caseflow-efolder/526,2017-07-11T16:08:30Z,False,5964fa116480fd510a0597cf,"it would be more idomatic to write this:

```
context ""when no download exists"" do
  it ""creates a new download"" do
    ...
  end
end
```",True,False,52,4304.833333333333
department-of-veterans-affairs/caseflow-efolder/526,2017-07-11T16:10:11Z,False,5964fa106480fd5a28881fb0,"I would explicitly set the `created_at` values of these two objects to make this test more explicit. Plus stuff like this can cause race conditions and flakey tests.

IE:
```
let!(:old_download) { Download.create(user: user, file_number: file_number, created_at: 2.seconds.ago) }
let!(:new_download) { Download.create(user: user, file_number: file_number, created_at: 1.second.ago) }
```",True,False,52,4304.833333333333
department-of-veterans-affairs/caseflow-efolder/526,2017-07-11T16:11:24Z,False,5964fa196480fd54dd9f4d17,"you can write:
```
expect(DownloadManifestJob).to receive(:perform_now)
```
on line 316 and eliminate this line.",True,False,52,4304.833333333333
department-of-veterans-affairs/caseflow-efolder/526,2017-07-11T16:11:43Z,False,5964fa106480fd5448013a97,"see the comment above, its applicable here too.",True,False,52,4304.833333333333
department-of-veterans-affairs/caseflow-efolder/526,2017-07-11T16:12:55Z,False,5964fa106480fd511e7184aa,all of this testing stuff gets way simpler if you move some of this logic into the model,True,False,52,4304.833333333333
department-of-veterans-affairs/caseflow-efolder/526,2017-07-11T16:14:21Z,False,5964fa106480fd596071c750,"If we've already tested this functionality on another route, i don't think its necessary to duplicate it.",True,False,52,4304.833333333333
department-of-veterans-affairs/caseflow-efolder/526,2017-07-11T16:15:13Z,False,5964fa106480fd5177fe7778,`download_documents2` 😢 😢 ,True,False,52,4304.833333333333
department-of-veterans-affairs/caseflow-efolder/526,2017-07-11T16:16:37Z,False,5964fa106480fd50b73d7eb2,"ideally these should read like a sentence:
`it ""caches files but does not save them""`",True,False,52,4304.833333333333
department-of-veterans-affairs/caseflow-efolder/526,2017-07-11T17:20:40Z,False,596508ef6480fd5d1484a6db,"I was trying to avoid larger changes. Honestly, I don't see why not, though that would probably be a pretty large architecture change. I've been told (haven't looked into the code) that the front-end polls to get the status of this job.",True,False,52,4304.833333333333
department-of-veterans-affairs/caseflow-efolder/526,2017-07-11T17:26:23Z,False,59650a426480fd50b73d89a2,"Soooo we need a way to update metadata. While we assume the documents themselves are immutable--the meatadata is not. People can change file names etc. In the old eFolder Express model, if a user downloaded the same case within three days of the previous download, then the download object would be looked up and used as is. In our new model, if you access it via the API then we only create one download object and use it forever. (If a user downloads the case via efolder express after hitting it from the API, then we might create new entries.) The idea is we only need one download entry to use a cached version of whatever is in VBMS, and we should keep that one entry up to date rather than creating new entries. ",True,False,52,4304.833333333333
department-of-veterans-affairs/caseflow-efolder/526,2017-07-11T17:38:55Z,False,59650d336480fd511e7190d7,"Thats correct mark. Making this serial would make the UI in eFolder express way less responsive (and when VBMS is slow, we even risk timing out). We couldn't show our fancy loading icon.",True,False,52,4304.833333333333
department-of-veterans-affairs/caseflow-efolder/526,2017-07-11T17:42:34Z,False,59650e0f6480fd5ab5253e15,"why not just delete the old ones and start from scratch instead of going through the rigamarole of mutating existing docs? Seems simpler and safer.

Better yet, why delete the old ones? It's not like they are taking up all that much space, and it'd be nice to know when folks are downloading docs, and what the state of the docs were when they were downloaded.",True,False,52,4304.833333333333
department-of-veterans-affairs/caseflow-efolder/526,2017-07-11T20:44:16Z,False,596538a76480fd596071eed6,"I disagree about not taking up much space. Yes the download object might not take up much space, but if we create a new entry, then we have to create new document entries for every single document in the eFolder. That means 100-1000 document entries for every time a user downloads it again. I really think there should only be one download per (case file id + user id). But we haven't been living under that assumption with eFolder Express.",True,False,52,4304.833333333333
department-of-veterans-affairs/caseflow-efolder/526,2017-07-11T20:46:04Z,False,5965391c6480fd55453ead9e,"Are the 😢 just because of a non-descriptive name? I tried to make it better, but still might not be clear enough.",True,False,52,4304.833333333333
department-of-veterans-affairs/caseflow-efolder/526,2017-07-11T21:25:53Z,False,596542636480fd5b842f14e1,"A download & document represents the state of an eFolder at the time it was downloaded. Maintaining that property is pretty important since we don't want to get in the business of maintaining sync'ed state between VBMS and Caseflow.

For the same reason Redux is easier to reason about (since is immutable), keeping downloads/documents immutable will make things much easier.

If the only downside is space (correct me if there are other downsides?), we can discuss that:

Each row is probably on the order of 100 bytes. Which means each duplicated download takes up 500*100 = 50kb. Lets say each of 50k appeals every year has 1 duplicate download (which is probably generous, since most cases are done within 3 days anyway). Then 50kb*50000 = 2.5gb per year. That's not that much space.

Additionally, if we are concerned about the space piling up. We can always clean up old downloads every month/3 months/year.",True,False,52,4304.833333333333
department-of-veterans-affairs/caseflow-efolder/526,2017-07-11T21:28:29Z,False,596543046480fd510a05c805,its almost always better to add more specificity to the variable name than to add a number,True,False,52,4304.833333333333
department-of-veterans-affairs/caseflow-efolder/526,2017-07-12T14:10:58Z,False,59662dfb6480fd56e123f0ba,I really hate this too... I don't think it's as easy as putting it after download.save! But let me look into it.,True,False,52,4304.833333333333
department-of-veterans-affairs/caseflow-efolder/526,2017-07-12T14:23:25Z,False,596630df6480fd5253cffe42,"Would this achieve the same result:

```
return if manifest_fetched_at && manifest_fetched_at > 3.hours.ago
demo? ? Fakes::DownloadManifestJob.perform_now(self) : DownloadManifestJob.perform_now(self)
```",True,False,52,4304.833333333333
department-of-veterans-affairs/caseflow-efolder/526,2017-07-12T15:05:24Z,False,59663abf6480fd511e7237d9,"A few things here. There will be significantly more duplicated downloads than you just suggested. The API refresh logic is different than the eFolder Express logic on when we re-download. In this case we try to download again if the case is older than 3 hours, since it's really important that attorneys have every piece of evidence. On every refresh there will be a new download added. Your point about space is valid, even with these duplicates we're at most probably around 25gb/year. But I don't see how maintaining all of these downloads helps us reason about anything.

I agree that we're not and (should not try) going to maintain a perfectly sync'd state between VBMS and Caseflow, but for this application we need a pretty up to date cache of what is in VBMS. My ideal model for this is that there is one record for each user + file_number combination so that we can just find that one entry and serve it.

The only other concern I have is I think making new entries makes the VBMS down logic more complicated. Currently if VBMS is down, we can just serve the current entry we're trying to update. But if we are always creating new entries, we either create a new entry and serve it, or we return the most recently created one. It's not a huge deal, but I think it's a more complicated model.",True,False,52,4304.833333333333
department-of-veterans-affairs/caseflow-efolder/526,2017-07-12T15:21:57Z,False,59663ea06480fd579847241f,"> But I don't see how maintaining all of these downloads helps us reason about anything.
In the same way that maintaining a immutable state helps us reason about the front end code. We can see the state of a document at a particular point in time, which helps for diagnosing all sorts of issues and creating a history of how things happened on a folder.

Additionally, creating a new record from scratch is almost always less complicated and easier to understand than mutating an existing record, especially when your new record doesn't actually need any information from the old record.

Also, I'm not suggesting that we keep them forever. We could very well have a clean up job. Or clean them up immediately after.

> we need a pretty up to date cache of what is in VBMS. My ideal model for this is that there is one record for each user + file_number combination so that we can just find that one entry and serve it.

Having one record for each user + file number doesn't help keep the documents more up to date, decreasing the 3hr cache limit does. And we can do that no matter which route we choose.

> The only other concern I have is I think making new entries makes the VBMS down logic more complicated. Currently if VBMS is down, we can just serve the current entry we're trying to update. But if we are always creating new entries, we either create a new entry and serve it, or we return the most recently created one. It's not a huge deal, but I think it's a more complicated model.

Not sure I agree here. If VBMS is down we return the most recent download/documents (which is what we already do if the download is < 3 hours old). If it's not we create a new one. That seems very simple to me.",True,False,52,4304.833333333333
department-of-veterans-affairs/caseflow-efolder/526,2017-07-12T15:22:23Z,False,59663eb76480fd511e723b96,I'm down to chat about this over the ☎️ if that would be more helpful 😄 ,True,False,52,4304.833333333333
department-of-veterans-affairs/caseflow-efolder/526,2017-07-12T16:04:57Z,False,596648b16480fd56581eaa77,"> A download & document represents the state of an eFolder at the time it was downloaded.

@shanear what you're describing here makes sense from the perspective of eFolder Express as a UI, but it does not make sense for API design for a few reasons:

- Making a request `GET /files/1234` for a proxy/caching API like this should _not_ create hundreds of new rows. If I am making a request for the file 1234, then I expect to receive that 1 singular resource object. From a REST design standpoint, making new rows for each file/document is janky.

- It slows down the API request. On GET request creating a new download + hundreds of documents will have a serious performance impact. We should try to do this as infrequently as possible. This `find_or_initialize` and a later save will only do `UPDATE`s on the few documents that actually have their metadata change. 

- The physical space may not matter, but the impact on performance is real. Queries become slower as the tables grow in size. Even now the architecture for how quickly the download/documents table grow in eFolder Express is not scalable. Think how big these tables will be in 5 years. Eventually we are going to need to start pruning data. Why add the complexity of having a background job to delete data? Better if we can minimize the amount of data we create to begin with. 

- Creating new documents is not an extensible design.  What if in the future we want to change the cache rate to 1 hour or 10 minutes? All of a sudden we have _explosive_ growth in the number of documents we create. We would be designing ourselves into a corner.

- From a practical standpoint, attorneys review cases longer than 3 hours. This will definitely trigger a redownload for almost all cases

That said, what you're describing about immutability and helping to debug is valid, but we don't do that for any other objects. If we want to know the state of an object on every update/change, then we should add audit/trigger tables.  By being a separate table we gain the information you desire about changes over time, without impacting performance on the main documents table.

",True,False,52,4304.833333333333
department-of-veterans-affairs/caseflow-efolder/526,2017-07-12T16:15:31Z,False,59664b286480fd5b50a381e1,Now my model is fat AF,True,False,52,4304.833333333333
department-of-veterans-affairs/caseflow-efolder/526,2017-07-12T16:16:04Z,False,59664d136480fd58d3eddd61,Any thoughts on how to better format this?,True,False,52,4304.833333333333
department-of-veterans-affairs/caseflow-efolder/526,2017-07-12T16:16:59Z,False,59664b806480fd55e38beaf8,"> Making a request GET /files/1234 for a proxy/caching API like this should not create hundreds of new rows. If I am making a request for the file 1234, then I expect to receive that 1 singular resource object. From a REST design standpoint, making new rows for each file/document is janky.

On the first fetch, it is creating hundreds of new rows though. I don't like that either (especially regarding REST design) and expressed my concern about that in the original API tech spec here https://github.com/department-of-veterans-affairs/appeals-pm/pull/1299#discussion_r119879270.

> It slows down the API request. On GET request creating a new download + hundreds of documents will have a serious performance impact. We should try to do this as infrequently as possible. This find_or_initialize and a later save will only do UPDATEs on the few documents that actually have their metadata change.

It's already quite slow. In this request you are:
- querying VBMS (can take > 10s)
- individually [finding](https://github.com/department-of-veterans-affairs/caseflow-efolder/pull/526/files#diff-a4389ce312191ae68bc9183bd4c4fae5R41) and [updating](https://github.com/department-of-veterans-affairs/caseflow-efolder/pull/526/files#diff-a4389ce312191ae68bc9183bd4c4fae5R53) each document in the Caseflow DB.

Is finding + updating that much faster than inserting? Debatable.

If we want to talk about speed. We need to talk about making work in this call asynchronous.

> The physical space may not matter, but the impact on performance is real. Queries become slower as the tables grow in size. Even now the architecture for how quickly the download/documents table grow in eFolder Express is not scalable. Think how big these tables will be in 5 years. Eventually we are going to need to start pruning data. Why add the complexity of having a background job to delete data? Better if we can minimize the amount of data we create to begin with.

I'm not suggesting we save old states forever. We can wipe them every year/month/week/day depending on our performance needs.",True,False,52,4304.833333333333
department-of-veterans-affairs/caseflow-efolder/526,2017-07-12T16:17:21Z,False,59664b9a6480fd511e7243cd,"Now that we have unit tests for everything, I've updated the feature test to just look at the result of the api call. Does that seem like a good move?",True,False,52,4304.833333333333
department-of-veterans-affairs/caseflow-efolder/526,2017-07-12T16:20:15Z,False,59664c436480fd573608844c,"The test pyramid thanks you
![test-pyramid](https://user-images.githubusercontent.com/1596259/28128059-6eef3926-66fc-11e7-8581-ff37171b4a1c.png)
",True,False,52,4304.833333333333
department-of-veterans-affairs/caseflow-efolder/526,2017-07-12T16:22:11Z,False,59664cb86480fd5ab525f6d3,"```
{
  data: {
    things: ""things""
  }
}.to_json
```
might do the trick",True,False,52,4304.833333333333
department-of-veterans-affairs/caseflow-efolder/526,2017-07-12T16:30:21Z,False,59664ea66480fd56581eae66,"![a37iewzh8fx6bn27tpuy](https://user-images.githubusercontent.com/1596259/28128484-dc57b442-66fd-11e7-9d1a-e04fb63c491e.jpg)
",True,False,52,4304.833333333333
department-of-veterans-affairs/caseflow-efolder/526,2017-07-12T16:45:21Z,False,596652296480fd5e258327e2,How did the Egyptians build the ancient test pyramids without modern test frameworks? One of the mysteries of history.,True,False,52,4304.833333333333
department-of-veterans-affairs/caseflow-efolder/526,2017-07-12T17:03:21Z,False,596656626480fd5b50a386ff,They packaged each pharaoh in a new non-backwards-compatible binary...duh,True,False,52,4304.833333333333
department-of-veterans-affairs/caseflow-efolder/526,2017-07-12T19:37:18Z,False,59667a746480fd55e38c0917,@mdbenjam at what point are you creating document records as you are not passing external_documents to DownloadDocuments? And I don't see you calling VBMSService.fetch_documents_for from anywhere. Confused.,True,False,52,4304.833333333333
department-of-veterans-affairs/caseflow-efolder/526,2017-07-12T19:39:51Z,False,59667b0a6480fd5be2210a1a,Duh! I see it now. In force_fetch_manifest_if_expired!,True,False,52,4304.833333333333
department-of-veterans-affairs/caseflow-efolder/526,2017-07-13T17:29:11Z,False,5967adf76480fd50e008b2b9,"I think I'd like to keep it the way it is. I went down the road of trying to delete and create new records, but it broke some tests, and got a little tricky to get working again. I also thought of some new questions. If VBMS is down but VVA is up, we want to update the records from VVA, but not delete the old VBMS records we have. I think updating is the right thing to do for now.",True,False,52,4304.833333333333
department-of-veterans-affairs/caseflow-efolder/526,2017-07-13T18:09:31Z,False,5967b81e6480fd58a04f7d87,i don't think this is necessary ,True,False,52,4304.833333333333
department-of-veterans-affairs/caseflow-efolder/526,2017-07-13T18:10:12Z,False,5967b81d6480fd5812b522ea,you can probably put this in a `before` block at the top of the context,True,False,52,4304.833333333333
department-of-veterans-affairs/caseflow-efolder/526,2017-07-13T18:52:28Z,False,5967c1706480fd50f462d039,"Awesome, Mark!",True,False,52,4304.833333333333
xianyi/OpenBLAS/1236,2017-07-17T02:22:15Z,False,596c1f5b6480fd515d375c25,"Yes, it's work

 ./getarch 1
#define HASWELL
#define L1_CODE_SIZE 32768
#define L1_CODE_ASSOCIATIVE 8
#define L1_CODE_LINESIZE 64
#define L1_DATA_SIZE 32768
#define L1_DATA_ASSOCIATIVE 8
#define L1_DATA_LINESIZE 64
#define L2_SIZE 262144
#define L2_ASSOCIATIVE 8
#define L2_LINESIZE 64
#define ITB_SIZE 2097152
#define ITB_ASSOCIATIVE 0
#define ITB_ENTRIES 8
#define DTB_SIZE 4096
#define DTB_ASSOCIATIVE 4
#define DTB_DEFAULT_ENTRIES 64
#define HAVE_CMOV
#define HAVE_MMX
#define HAVE_SSE
#define HAVE_SSE2
#define HAVE_SSE3
#define HAVE_SSSE3
#define HAVE_SSE4_1
#define HAVE_SSE4_2
#define HAVE_AVX
#define HAVE_FMA3
#define HAVE_CFLUSH
#define NUM_SHAREDCACHE 1
#define NUM_CORES 1
#define CORE_HASWELL
#define CHAR_CORENAME ""HASWELL""
 ",True,False,1,0.0
UniversalMediaServer/UniversalMediaServer/1341,2017-07-17T18:33:39Z,False,596d03076480fd53aecbdc03,"I did, against my better judgement, install both Java 7 and 8 on one of my macOS VMs. I didn't work, it turns out it had to be built with Ant 1.9 as well (I used 1.10, but 1.10 doesn't support Java 7).

Now the appbundler works under both Java 7 and Java 8 according to my testing, but I still think @SubJunk should verify before merge.",True,False,14,17744.0
UniversalMediaServer/UniversalMediaServer/1341,2017-07-19T07:20:58Z,False,596f085f6480fd511e767d19,"Cool, I hope to test it this weekend",True,False,14,17744.0
UniversalMediaServer/UniversalMediaServer/1341,2017-07-23T22:06:17Z,False,59751ddb6480fd57984e5de2,"@SubJunk I use it as a quality/issue barometer:
https://sourceforge.net/projects/unimediaserver/files/Official%20Releases/OS%20X/
https://sourceforge.net/projects/unimediaserver/files/Official%20Releases/Linux/

_Fossub_ seem to be good as a quantity barometer, IMO.",True,False,14,17744.0
UniversalMediaServer/UniversalMediaServer/1341,2017-07-23T23:01:39Z,False,59752ad56480fd5c88561420,"@SubJunk not related to this PR but after the @Sami32 comment about the quality I have to make a comment. It seems that this project when it reached the top in 2016 is now [stagnating](https://sourceforge.net/projects/unimediaserver/files/stats/timeline?dates=2013-02-01+to+2017-07-23). Mayby it is related to the fact that the Forum, PRs and Issues are not properly managed. When I read reactions on the Forum there are active @Sami32, @Nadahar and sometimes me but you are involved rarely in the last time. The same is in PRs and Issues. I can understand that you have other activities whose not allow you to be on line every time but you are the owner of this project and the leader of our small group so your guidence and evaluation is needed if you want to continue in this project. Othervise it will finish like PMS. ",True,False,14,17744.0
Microsoft/TypeScript-Handbook/628,2017-07-24T23:23:07Z,False,5976815c6480fd5a288e6ebc,"
@jackhorton,
Thanks for your contribution as a Microsoft full-time employee or intern. You do not need to sign a CLA.
_Thanks,
Microsoft Pull Request Bot_",True,False,1,0.0
UniversalMediaServer/UniversalMediaServer/1341,2017-07-25T06:55:30Z,False,5976eb676480fd54dda8253e,"@valib your concerns are good here and thanks for posting them.

I have more time to spend on UMS development but until master is back to a less buggy state than it was at the time of the last 7.0.0 release, we are stuck. I want to release that to our users, and that's the feature-set I was working the most on.

We have users giving up on UMS because our last few releases have introduced so many bugs and I'm also frustrated about that. We can't expect users to stay with us while we experiment with big refactors and break the things they have relied on us for for years.

Sure we always had bugs around the edges of our common use cases, but 99% of our users just do that same thing (browse to videos via DLNA and watch them) and we have had big bugs with that core functionality lately. That can't keep happening if this project is to survive.

I suspect that the way forward is to introduce some stability back to UMS and that will mean getting more strict on peer reviewing again. Happy for input on this from you guys.",True,False,14,17744.0
UniversalMediaServer/UniversalMediaServer/1341,2017-07-25T09:27:48Z,False,59770f1b6480fd59d380ea9b,"By the way, we moved to FossHub in April 2016 which is exactly when that SourceForge downloads graph dropped away. The downloads didn't go down, they just moved to a different website.",True,False,14,17744.0
UniversalMediaServer/UniversalMediaServer/1341,2017-07-25T11:59:00Z,False,597732866480fd5b8437cffa,"@SubJunk Now you're really just full of BS. What you're saying is so unreasonable and wrong that I don't know where to start, so I think I'll just let it be to avoid writing a long post that nobody will bother to read anyway. Let it be noted that I disagree strongly with ""your version of history"".

When it comes to the fixes you're waiting for, you keep sabotaging with the things you say that take away all my motivation (even though it's not your *responsibility*, it has the consequence that it's difficult for me to do anythin then). Rest assured that I will contribute minimally in the future, since you think all I bring is bugs and unnecesary features. I've fixed all but the 360 issue (in there I've fixed at least one bug that's been there a long time as well). The 360 issue takes time because I have to wait for user testing and feedback for each step I take, and I simply have to try ""random"" reverts to hopefully get lucky and find what the 360 doesn't like. I'm sure it will give you great pleasure to know that I've already reversed every change to the DIDL-Lite from #1061 while testing - to no help. That means it can be *anything* that happened between 6.6.0 and 6.7.0, which is a lot. 

Had you been interested in solving this, you could have pinpointed the problem a long time ago since you have a 360 available. You could simply test different commits and relatively quickly pinpoint the problem. I don't want to have to buy a 360 just for this (I had actually considered it, but after recent events I definitly won't). Since we don't know what's causing the issue with the 360 (and since the 360 isn't following the standard at all), there's no reason why the responsibility to find the problem should fall only on me. As I see it, the rest of you should try to find the problem just as much as me.

When it comes to the peer review you're talking about, it's a complete shot in the blind as far as I'm concerned. When it comes to #1061, which you seem to blame for this ""buggy state"", it was tested and tested and tested so much that both @valib and @Sami32 expressed that they really were't interested in testing it any further. I still wanted it to be released in a beta. You didn't bother to test it at all as far as I can remember. I refute that any more peer reviewing would have made a difference, the real test is when you test it with all the different DLNA implementations out there, and to be honest it seems like the wast majority of devices have had no issues. 

It's taken about a week for me to build up enough motivation to make the next 360 test, but I posted it yesterday. Now I'm waiting for feedback. If you want to speed this up, you can pinpoint it using the 360 you have access to. And, don't worry: When this is fixed I won't ""burden"" the project with any more ambitious PRs that really try to fix the mess.",True,False,14,17744.0
UniversalMediaServer/UniversalMediaServer/1341,2017-07-25T11:59:22Z,False,5977329f6480fd5c885720ab,"@SubJunk What about that ? It seem that it was an advised suggestion, still more now, isn't it ?
> @SubJunk Great. To be honest I was hoping this would make it into one of your betas before it was released as a ""full release"", it's hard to know that nothing has snuck in when you change so much.

https://github.com/UniversalMediaServer/UniversalMediaServer/pull/1061#issuecomment-291190366",True,False,14,17744.0
UniversalMediaServer/UniversalMediaServer/1341,2017-07-25T15:41:24Z,False,597766a96480fd5a288ec677,"@Nadahar I didn't know you had fixed all but the 360 issue. I thought we were waiting on a bug that stops playback being possible on some renderers because of thumbnail formats, I can't remember the exact details. Maybe I should have posted updates on my access to a 360 but I have been trying to get access to one for weeks and have been unable due to things out of my control.

I want to get this project back on track and will be more active with its development. I had a new baby and house last year and significant personal difficulties followed that meant less free time to spend on this, but now my situation is more stable and I am motivated to keep this moving forward.

It seems you guys (at least @Nadahar and maybe @Sami32 ) jumped ship to DigitalMediaServer before this conversation, and that has been pretty upsetting for me to watch, especially since I was in the process of handing over more control of UMS to you @Nadahar with release abilities. I don't see the point in starting another project when you have almost full autonomy with this one. It would've been good to get a heads up on that but I haven't heard anything about it.

@Sami32 I wasn't blaming @Nadahar for the instability since I'm also to blame - I did the FFmpeg update and let it go through without enough testing, and as a result we had users unable to play transcoded videos, which for some users is most videos. My comment was meant to be about our processes in general, that we need more quality control.

I really admire the refactoring and programming ability that you have @Nadahar and I have a love/hate relationship with it. It makes our code nicer and more stable going forward but can cause short term instability. We have talked about it a lot in the past so there's no point going into it again, but the fact is I put my hesitations to the side and trusted in your abilities, and I think that has led to an improved program, so thank you for your significant contributions.

As for the assertion that I didn't test #1061 see the comments that preceded the merge https://github.com/UniversalMediaServer/UniversalMediaServer/pull/1061#issuecomment-291059080
I tested it at other points along the way too and left detailed peer reviews asking questions which you responded to, and I updated dcraw for it; I was involved and collaborated on that PR.

Maybe we should have released it as a beta as well. It seemed messy at the time to have a 6.x beta going as well as a 7.x beta, and I didn't want to mix the testing of that refactor with the 7.x feature testing since it would be harder to know which changes caused any issues that were found. Maybe that was the wrong decision from me though and I will learn from that mistake.",True,False,14,17744.0
UniversalMediaServer/UniversalMediaServer/1341,2017-07-25T16:08:35Z,False,59776d0b6480fd50e0105e5c,"@SubJunk I haven't ""jumped ship"" and I certainly don't think @Sami32 has either. I started DigitalMediaServer early 2016 as I said I would ""go my own way"". My idea has been that when there's PRs that's useful in both projects I might as well submit it to UMS, and when there are things I assume isn't interesting to UMS I will do that in DMS. I haven't worked on in much during this winter though, as I've had my hands full with UMS work (that I also consider DMS work). When there are changes that ""fit in both projects"" it's preferrable to do them in UMS because it's possible to get user feedback. 

DMS has no users and no releases, and I don't think it will have for a long while yet. It's my ""playground"" where I can make things what I consider ""properly"" and doesn't have to worry about backwards compatibility for plugins.

With what has happened lately, I think you will understand why I've decided to work more on DMS instead, as I'm so tired of all the restrictions, the constant battle to try to keep the git history readable and especially being blamed like I have now. Since you aren't much around and I feel there's a history of my approach not being my appreciated, I haven't informed you that much about my thoughts/ideas - and I've tried to work on the parts of UMS that doesn't concern the ""video users"". That said, if you (or anyone else) would have asked what I was thinking at any point in time, I would have explained. I simply don't feel that there's much interest.

The reason for my ""strategy"" on working with images and a bit audio is that when is being done there can ultimately be used for video as well (because I strive to make everything as general as possible), but it limits the impact on most users because as you point out the majority use it for video.

While I appreciate the fact that I can get actual user feedback and test the code, it's not worth it when there is too much trouble internally. Then I'd rather just make the code and then deal with potential problems as they appear later.",True,False,14,17744.0
UniversalMediaServer/UniversalMediaServer/1341,2017-07-25T16:24:59Z,False,597770e36480fd5c8857487d,"> I haven't ""jumped ship"" and I certainly don't think @Sami32 has either. I started DigitalMediaServer early 2016 as I said I would ""go my own way"". My idea has been that when there's PRs that's useful in both projects I might as well submit it to UMS, and when there are things I assume isn't interesting to UMS I will do that in DMS. I haven't worked on in much during this winter though, as I've had my hands full with UMS work (that I also consider DMS work). When there are changes that ""fit in both projects"" it's preferrable to do them in UMS because it's possible to get user feedback.

> DMS has no users and no releases, and I don't think it will have for a long while yet. It's my ""playground"" where I can make things what I consider ""properly"" and doesn't have to worry about backwards compatibility for plugins.

Ok, thanks for explaining. I still don't understand why you can't make branches that do that stuff anyway, but maybe it's cleaner to do a fork.

> With what has happened lately, I think you will understand why I've decided to work more on DMS instead, as I'm so tired of all the restrictions, the constant battle to try to keep the git history readable and especially being blamed like I have now. Since you aren't much around and I feel there's a history of my approach not being my appreciated, I haven't informed you that much about my thoughts/ideas - and I've tried to work on the parts of UMS that doesn't concern the ""video users"". That said, if you (or anyone else) would have asked what I was thinking at any point in time, I would have explained. I simply don't feel that there's much interest.

I don't know what has happened lately that is so bad, I think your perception of it is different to mine. I'm not aware of restrictions - you are able to create a pull request and have it merged as long as it is peer reviewed and tested. Do you want to be able to skip peer review or testing, or do you mean other restrictions I haven't considered?

As for the Git history being readable, I usually squash commits when I merge Pull Requests, so if we all remember to do that on merge unless there is good reason not to (like if someone has gone through and organized the commits already) then I don't see a problem. It can't get more organized than one commit per PR, right?

I read, and I have always read, everything that happens on this project. I get emails when anything is posted and I go through them daily. Sometimes I haven't been able to immediately respond to things, and sometimes tags fall through the cracks, but I do make an effort even when I am busy. This project is important to me. I still use the program every day, and I still have ambitions for it and motivation to spend more time on it.

> The reason for my ""strategy"" on working with images and a bit audio is that when is being done there can ultimately be used for video as well (because I strive to make everything as general as possible), but it limits the impact on most users because as you point out the majority use it for video.

That's a good reason for that strategy.

> While I appreciate the fact that I can get actual user feedback and test the code, it's not worth it when there is too much trouble internally. Then I'd rather just make the code and then deal with potential problems as they appear later.

It seems to me that the troubles being experienced here are mostly to do with me not being communicative enough and not being around here enough. I take responsibility for it and I will do better at those things.",True,False,14,17744.0
UniversalMediaServer/UniversalMediaServer/1341,2017-07-25T17:02:18Z,False,5977799f6480fd5f026eb528,"@SubJunk With ""restrictions"" I refer to all the previous discussions about not breaking plugins and keeps tons of deprecated code that makes it much harder to see the actual, relevant warnings and read the code. I'm also referring to the reluctance to clean up all the thread issues and the general idea of applying band-aids to broken code instead of fixing it properly.

In my own fork I can choose not to apply those commits or to fix them before doing so, which I believe results in much less problems in the future.",True,False,14,17744.0
UniversalMediaServer/UniversalMediaServer/1341,2017-07-26T01:56:21Z,False,5977f6c86480fd5c8857914a,"About the plugin stuff, I'm still interested in exploring the options in https://github.com/UniversalMediaServer/UniversalMediaServer/issues/1276
We aren't under any obligation to keep plugins working, so if support for a plugin breaks along the way then that's fine and we can remove that plugin from the list. There is a difference between the support breaking along the way vs. just removing deprecated code though.

I'm in favor of removing deprecated code that our plugins do not use, and 7.0.0 represents a good opportunity for that.",True,False,14,17744.0
udacity/create-your-own-adventure/7899,2017-07-26T15:26:18Z,False,5978b4b36480fd52b63972b8,"Please review this, @casey-collab",True,False,1,0.0
pivorakmeetup/pivorak-web-app/491,2017-07-26T16:15:21Z,False,5978c0196480fd515d3e03c0,"# [Codecov](https://codecov.io/gh/pivorakmeetup/pivorak-web-app/pull/491?src=pr&el=h1) Report
> Merging [#491](https://codecov.io/gh/pivorakmeetup/pivorak-web-app/pull/491?src=pr&el=desc) into [development](https://codecov.io/gh/pivorakmeetup/pivorak-web-app/commit/19a82b6a87d742f0f06837725cd27160c1426f7d?src=pr&el=desc) will **increase** coverage by `<.01%`.
> The diff coverage is `100%`.

[![Impacted file tree graph](https://codecov.io/gh/pivorakmeetup/pivorak-web-app/pull/491/graphs/tree.svg?width=650&height=150&token=AN5HNrjj9x&src=pr)](https://codecov.io/gh/pivorakmeetup/pivorak-web-app/pull/491?src=pr&el=tree)

```diff
@@              Coverage Diff               @@
##           development    #491      +/-   ##
==============================================
+ Coverage         98.4%   98.4%   +<.01%     
==============================================
  Files              184     185       +1     
  Lines             2252    2261       +9     
==============================================
+ Hits              2216    2225       +9     
  Misses              36      36
```


| [Impacted Files](https://codecov.io/gh/pivorakmeetup/pivorak-web-app/pull/491?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [app/helpers/admin/navigation\_helper.rb](https://codecov.io/gh/pivorakmeetup/pivorak-web-app/pull/491?src=pr&el=tree#diff-YXBwL2hlbHBlcnMvYWRtaW4vbmF2aWdhdGlvbl9oZWxwZXIucmI=) | `100% <100%> (ø)` | :arrow_up: |
| [app/controllers/admin/donations\_controller.rb](https://codecov.io/gh/pivorakmeetup/pivorak-web-app/pull/491?src=pr&el=tree#diff-YXBwL2NvbnRyb2xsZXJzL2FkbWluL2RvbmF0aW9uc19jb250cm9sbGVyLnJi) | `100% <100%> (ø)` | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/pivorakmeetup/pivorak-web-app/pull/491?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/pivorakmeetup/pivorak-web-app/pull/491?src=pr&el=footer). Last update [19a82b6...77fff69](https://codecov.io/gh/pivorakmeetup/pivorak-web-app/pull/491?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",True,False,5,1668.3666666666666
pivorakmeetup/pivorak-web-app/491,2017-07-26T16:16:23Z,False,5978c0616480fd52b639783e,"@denysmedynskyi please, review my PR 🙂",True,False,5,1668.3666666666666
pivorakmeetup/pivorak-web-app/491,2017-07-27T02:51:15Z,False,597955276480fd52b639c4f8,You can do `user&.full_name || '-'` instead of `if`,True,False,5,1668.3666666666666
pivorakmeetup/pivorak-web-app/491,2017-07-27T02:56:03Z,False,597956476480fd55e3955fdc,Extract `%x%x%x` to en.yml. Check this [article](http://www.stackednotion.com/blog/2015/01/03/formatting-dates-and-times-in-rails-with-i18n-localize/),True,False,5,1668.3666666666666
pivorakmeetup/pivorak-web-app/491,2017-07-27T20:03:43Z,False,597a47276480fd5a88563831,"@denysmedynskyi please, review my changes)",True,False,5,1668.3666666666666
brinley/jSignature/141,2017-07-29T11:33:07Z,False,597c72776480fd514969e2e1,Did you minify the latest simplifyjs and update into CompressorSVG or did you just add those module/window change to the respective minified code?,True,False,5,2772.483333333333
theforeman/puppet-foreman_proxy/359,2017-07-29T12:07:38Z,False,597c7a916480fd56e12f1f35,let's see if that helps...,True,False,3,285.46666666666664
theforeman/puppet-foreman_proxy/359,2017-07-29T12:22:20Z,False,597c7dff6480fd573613a056,💚,True,False,3,285.46666666666664
theforeman/puppet-foreman_proxy/359,2017-07-29T16:53:06Z,False,597cbd7d6480fd52b63b63f2,Thanks!,True,False,3,285.46666666666664
brinley/jSignature/141,2017-07-29T19:09:48Z,False,597cdd7f6480fd55e3971c3c,"the second one. If I make the first thing, it would run in the same error obviously, simplify-js still contains code for modular env cases, so I have to edit simplify-js, minify it and then embed to jSignature code again. But it's very simple to recognize what one should change in minified code in this case, so I just edited it",True,False,5,2772.483333333333
UniversalMediaServer/UniversalMediaServer/1341,2017-07-30T02:17:39Z,False,597d41c66480fd57c2d49a2a,"Passed testing on macOS, merging",True,False,14,17744.0
brinley/jSignature/141,2017-07-30T10:45:42Z,False,597db8dc6480fd5133f410a7,I've reminified the minified files through the proper process in https://github.com/brinley/jSignature/tree/osharper-master. Can you sanity check and we can merge?,True,False,5,2772.483333333333
brinley/jSignature/141,2017-07-31T08:56:53Z,False,597ef0e06480fd52b63c2fb1,"yep, I think everything is perfect. thanks for a quick feedback. Why don't you merge npm-ified fork by a @technical-team as well? https://github.com/brinley/jSignature/compare/master...technical-team:master",True,False,5,2772.483333333333
brinley/jSignature/141,2017-07-31T09:45:36Z,False,597efc426480fd5c454c91e0,@osharper Will you beable to help review and test if I pulled that npm-ified fork?,True,False,5,2772.483333333333
mono/mono/5325,2017-08-07T12:32:51Z,False,59885df96480fd8ac0685523,"@monojenkins build deb with monolite
",True,False,1,0.0
linode/docs/815,2017-08-08T13:08:59Z,False,5989b7f16480fd810e9ec6c7,![](https://github.trello.services/images/mini-trello-icon.png) [Sam Foo Aug Doc Choice](https://trello.com/c/RfhFT8os/143-sam-foo-aug-doc-choice),True,False,3,10218.933333333332
linode/docs/815,2017-08-08T13:10:12Z,False,5989b8396480fd7cc4380b60,![](https://github.trello.services/images/mini-trello-icon.png) [Sam Foo Aug Doc Choice](https://trello.com/c/ClL5KEXQ/144-sam-foo-aug-doc-choice),True,False,3,10218.933333333332
dimagi/commcare-hq/17445,2017-08-11T19:21:56Z,False,598e03d86480fd7ced988bab,"(no test coverage, merging)",True,False,1,0.0
VoltDB/voltdb/4777,2017-08-11T20:24:41Z,False,598e12916480fd7d057d114f,"Nitpick: ""restartable system Procedure"" -> ""a restartable system procedure""",True,False,5,21.083333333333332
VoltDB/voltdb/4777,2017-08-11T20:25:19Z,False,598e12b56480fd7dacd51eeb,"Nitpick: you meant ""e.g."" instead of ""i.e."", right?",True,False,5,21.083333333333332
VoltDB/voltdb/4777,2017-08-11T20:38:07Z,False,598e15b76480fd8380699ee9,"Maybe it's better to pass in just drStream and drReplicatedStream, just for limit the exposure to this undo action, as executorcontext may be a bit overkill.",True,False,5,21.083333333333332
VoltDB/voltdb/4777,2017-08-11T20:39:48Z,False,598e16176480fd7d057d12b7,"I just realized you are changing this based on the integration branch, maybe this change should directly go to master? You can rebase to master and remove this drStreamStarted() check as it's not on master yet.",True,False,5,21.083333333333332
VoltDB/voltdb/4777,2017-08-11T20:45:46Z,False,598e17826480fd810ea14564,My previous plan was to get this merge to Integration Branch since Elastic support needs and Unit test can verify the fix.  I can cherry-pick and fix the change to master once approved.,True,False,5,21.083333333333332
linode/docs/815,2017-08-15T15:27:55Z,False,599312fe6480fdec3716d7f4,@GuessWhoSamFoo Tech done. ,True,False,3,10218.933333333332
OCA/account-financial-tools/531,2017-08-17T18:20:08Z,False,5995de846480fdeda3171a11,"Version is incorrect (well, it was also incorrect on first iteration), but here you don't get anything changing it.",True,False,5,788.4
OCA/account-financial-tools/531,2017-08-17T18:20:44Z,False,5995de846480fdef0617d7ba,These scripts are not going to work unless you include in OpenUpgrade a renaming from `account_followup` to `account_credit_control`.,True,False,5,788.4
OCA/account-financial-tools/531,2017-08-18T07:01:27Z,False,599690cc6480fde4721ad45c,Related: https://github.com/OCA/OpenUpgrade/pull/1035,True,False,5,788.4
OCA/account-financial-tools/531,2017-08-18T07:20:23Z,False,5996953d6480fdee990e57cc,But the module version is still incorrect (it puts `9.0.0.1.0` instead of `9.0.1.0.0`)...,True,False,5,788.4
OCA/account-financial-tools/531,2017-08-18T07:28:32Z,False,599697246480fdee990e58db,"@pedrobaeza 

account_credit_module was merged with an incorrect version number. :)",True,False,5,788.4
abalkin/JuQ.jl/15,2017-08-19T21:12:40Z,False,5998a9cd6480fde6249a6cfc,"# [Codecov](https://codecov.io/gh/abalkin/JuQ.jl/pull/15?src=pr&el=h1) Report
> Merging [#15](https://codecov.io/gh/abalkin/JuQ.jl/pull/15?src=pr&el=desc) into [master](https://codecov.io/gh/abalkin/JuQ.jl/commit/6b4eab308511d46aba9c89eee41fd9bd2dd8994d?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/abalkin/JuQ.jl/pull/15/graphs/tree.svg?token=m4c6Bfsy2t&width=650&src=pr&height=150)](https://codecov.io/gh/abalkin/JuQ.jl/pull/15?src=pr&el=tree)

```diff
@@          Coverage Diff           @@
##           master     #15   +/-   ##
======================================
  Coverage    45.3%   45.3%           
======================================
  Files           8       8           
  Lines         437     437           
======================================
  Hits          198     198           
  Misses        239     239
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/abalkin/JuQ.jl/pull/15?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/abalkin/JuQ.jl/pull/15?src=pr&el=footer). Last update [6b4eab3...85580fc](https://codecov.io/gh/abalkin/JuQ.jl/pull/15?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",True,False,2,56.96666666666667
abalkin/JuQ.jl/15,2017-08-19T22:09:38Z,False,5998b7266480fde339d9b2fa,"# [Codecov](https://codecov.io/gh/abalkin/JuQ.jl/pull/15?src=pr&el=h1) Report
> Merging [#15](https://codecov.io/gh/abalkin/JuQ.jl/pull/15?src=pr&el=desc) into [master](https://codecov.io/gh/abalkin/JuQ.jl/commit/6b4eab308511d46aba9c89eee41fd9bd2dd8994d?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/abalkin/JuQ.jl/pull/15/graphs/tree.svg?height=150&width=650&token=m4c6Bfsy2t&src=pr)](https://codecov.io/gh/abalkin/JuQ.jl/pull/15?src=pr&el=tree)

```diff
@@          Coverage Diff           @@
##           master     #15   +/-   ##
======================================
  Coverage    45.3%   45.3%           
======================================
  Files           8       8           
  Lines         437     437           
======================================
  Hits          198     198           
  Misses        239     239
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/abalkin/JuQ.jl/pull/15?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/abalkin/JuQ.jl/pull/15?src=pr&el=footer). Last update [6b4eab3...b2be0ac](https://codecov.io/gh/abalkin/JuQ.jl/pull/15?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",True,False,2,56.96666666666667
sbdchd/neoformat/111,2017-08-20T02:42:50Z,False,5998f72e6480fde3272f2278,Does joining paths here with a `/` work okay on windows?,True,False,9,10836.833333333334
sbdchd/neoformat/111,2017-08-20T08:25:30Z,False,5999477e6480fdee0764fd1e,"yes
if `&shellslash == 0` , `expand()` will convert `/` to `\`
else will convert to `/`",True,False,9,10836.833333333334
devtools-html/rfcs/18,2017-08-23T16:20:32Z,False,599dab9a6480fdf073dc3541,"(adding comment from @bgrins from the email thread)

I’m in favor of removing it. By the way, I’m hoping to expose similar functionality from `./mach watch` in https://bugzilla.mozilla.org/show_bug.cgi?id=1388899, which will work cross platform and for the entire frontend (including devtools).",True,False,5,11283.65
devtools-html/rfcs/18,2017-08-23T16:21:07Z,False,599dab9f6480fde6249c6cea,"(adding comment from @captainbrosset from the email thread)

Sounds good to me. Removing code always sounds good.",True,False,5,11283.65
devtools-html/rfcs/18,2017-08-23T16:21:42Z,False,599dab9a6480fdee991199c3,"(adding comment from @sole from the email thread)

I like the idea of having a similar functionality cross platform, so this is a +1 from me

Question: didn't we want to run this kind of proposals through the process here? https://github.com/devtools-html/rfcs/

Or is it not substantial enough?

Thanks

Also YAY DELETING!

sole",True,False,5,11283.65
devtools-html/rfcs/18,2017-08-23T16:22:19Z,False,599dabc06480fde99523fe76,"(adding comment from @ZER0 from the email thread)

+1 for removing; especially if we're going to have a similar functionality cross platform.",True,False,5,11283.65
sonata-project/SonataPageBundle/688,2017-08-25T20:58:04Z,False,59a08f616480fde41ab0b64e,"Please rebase, so we can merge this @Vesax ",True,False,21,695972.8666666667
sbdchd/neoformat/111,2017-08-26T17:20:45Z,False,59a1adf46480fde4bd470db6,Thanks!,True,False,9,10836.833333333334
sbdchd/neoformat/111,2017-08-27T05:40:13Z,False,59a25b3f6480fde339dd9165,"This breaks neoformat on systems where TMPDIR isn't specified, FYI.",True,False,9,10836.833333333334
sbdchd/neoformat/111,2017-08-27T05:58:50Z,False,59a25f9e6480fde6249e498b,"why your system haven't var `$TMPDIR` ?
please see `:help tempfile` in vim.
I am referring to this document.",True,False,9,10836.833333333334
sbdchd/neoformat/111,2017-08-27T11:00:19Z,False,59a2a6476480fdeba9abdcf6,"`$TMPDIR` isn't guaranteed to be set, POSIX [merely encourages](http://pubs.opengroup.org/onlinepubs/9699919799/xrat/V4_xbd_chap10.html) it to be set.
AFAIK most Linux distros don't have it set by default.

The helpfile implies it should correctly fall back to `/tmp` when `$TMPDIR` isn't present.",True,False,9,10836.833333333334
sbdchd/neoformat/111,2017-08-27T11:33:15Z,False,59a2adfd6480fde3cc08c475,"OK, i know.
some linux have $TMPDIR ,but some other haven't. i will fix this bug later",True,False,9,10836.833333333334
sbdchd/neoformat/111,2017-08-27T12:51:41Z,False,59a2c0626480fde5751f0d84,This actually breaks everything. `$TMPDIR` is not set by default and should not really be used only. Rather use it optoinal if it is set use it otherwise fallback to `/tmp` again on non windows machines. ,True,False,9,10836.833333333334
sbdchd/neoformat/111,2017-08-27T15:19:40Z,False,59a2e30e6480fde7d5c829cf,"i use plugin `w0rp/ale` with neoformat.
plugin ale will set $TMPDIR is system not set.
so i overlooked the mistake.
sorry to unix users.

i fixed that bug when $TMPDIR is not set.
new PR #114 
wait for @sbdchd merge it.",True,False,9,10836.833333333334
sonata-project/SonataPageBundle/688,2017-08-29T09:57:20Z,False,59a53a896480fde9b8ef6aa8,@OskarStark it fails with other builds too,True,False,21,695972.8666666667
apache/mynewt-core/511,2017-08-30T14:16:38Z,False,59a6c8d16480fdef061f9ff5,Should be merged after TinyCrypto revert. ,True,False,3,2523.35
devtools-html/rfcs/18,2017-08-31T12:24:11Z,False,59a7fff06480fdef5e3efdc9,Closing the PR in preparation for repository cleanup.,True,False,5,11283.65
apache/mynewt-core/511,2017-09-01T01:30:30Z,False,59a8b83d6480fde8e615c6fa,"Looks really good.  Wow, that is a lot of code! :)

I have some review comments.  I am not very familiar with the Bluetooth mesh spec, so I focused most of my attention on the Mynewt-specific parts of this PR.  Also, I understand that a goal is to modify this code as little as possible to make it easier to accept upstream changes.  I agree that this is a good idea.  If some of my comments oppose this goal, then you should feel free to ignore them.

Anyway, here are my comments:

---

`net/nimble/host/mesh/include/mesh/glue.h:NET_BUF_SIMPLE()`

This macro may yield NULL, so the resulting mbuf should be checked by the caller.  If it is not practical to modify all the instances where this macro gets invoked, I would add an `assert()` to the macro.

---

`net/nimble/host/mesh/src/glue.c:bt_gatt_get_mtu()`

Is this function needed?  If you remove it, then you can also remove the include of private header ""../src/ble_hs_conn_priv.h""

---

`net/nimble/host/mesh/src/glue.c:net_buf_simple_pull()`
`net/nimble/host/mesh/src/glue.c:net_buf_simple_pull_le16()`
`net/nimble/host/mesh/src/glue.c:net_buf_simple_pull_be16()`
`net/nimble/host/mesh/src/glue.c:net_buf_simple_pull_be32()`

These might not be safe.  I see two possible issues:

1. source mbuf is too small
2. data is split over multiple mbufs in a chain.

In both cases, these function read past the end of the mbuf buffer.  I suggest calling `os_mbuf_pullup()` at the start of these functions.

---

`net/nimble/host/mesh/src/glue.c:net_buf_simple_push()`
`net/nimble/host/mesh/src/glue.c:net_buf_simple_push_u8()`
`net/nimble/host/mesh/src/glue.c:net_buf_simple_push_le16()`
`net/nimble/host/mesh/src/glue.c:net_buf_simple_push_be16()`

These functions seem to duplicate the functionality of `os_mbuf_prepend()`.  I suggest calling `os_mbuf_prepend()` within these functions.

---

`net/nimble/host/mesh/src/glue.c:bt_pub_key_gen()`

There is some dead code inside an `if (0)` at the top.

---

`net/nimble/host/mesh/src/glue.c:net_buf_reserve()`

I would use os_mbuf_adj() here instead of adjusting the data pointer manually, just to be sure the resulting mbuf is valid.

---

`net/nimble/host/mesh/src/adv.h:BT_MESH_ADV()`

This macro looks like a copy of `OS_MBUF_USRHDR()` with a cast.  It might be better if this macro calls `OS_MBUF_USRHDR()` rather than duplicating the code.

---

`net/nimble/host/mesh/src/beacon.c:secure_beacon_recv()`

You might want to call `os_mbuf_pullup(buf, 21)` at the start of this function.

---

`net/nimble/host/mesh/src/cfg.c:get_model()`

Consider calling `os_mbuf_pullup(buf, 4)` at the start of this function.

---

`net/nimble/host/mesh/src/mesh_priv.h`

the `struct bt_mesh_net;` forward declaration seems unnecessary.

---

`net/nimble/host/mesh/src/prov.c:bt_mesh_input_string()`

Is `strncpy()` the correct function to use here?  If `strlen(str) >= prov->output_size`, then `link.auth` won't be null-terminated.

---

`net/nimble/host/mesh/src/prov.c:prov_data()`

Does `msg` leak if `bt_mesh_session_key()` fails?

",True,False,3,2523.35
apache/mynewt-core/511,2017-09-01T08:19:59Z,False,59a9183c6480fde99529af4d,"Thanks for review. Here are replies:

1) good point , assert() added
2) Fixed

3 / 4) Operations on os_mbuf was one of the main issues during porting I had to overcome. Basically we don't what any chaining for the moment, because it would required much more code changes. E.x. using os_mbuf_prepend() could result in new buf pointer which is something we don't want as user has no way to get new buffer pointer if we want to keep current  net_buf API. Frankly speaking, I tried that approach at the beginning but then I run into problems.

The thing is that Mesh code always allocates big enough buffers for its messages. Having this in mind, and choosing big enough mempool blocks we can avoid chaining. The only thing left is to reserve headroom,  and since os_mbuf packet header has been used for user_data, we came up  with headroom space just after packet header ( see net_buf_reserve). You can see that for all foo_push() functions there is and assert if there is not enough headroom space. For foo_pull() functions I can add pullup() and add assert() in case buffer has changed as it shall not happen.

I was thinking that next step would be to use all the power of mbuf, but this is bigger chunk of work. I will create Jira for that.

5) OMG - that was for testing when I had fixed public key - thanks for catching it.

6) We don't want to change len of the buffer here. Here is our headroom I mentioned before. I would leave it for now

7) You are right. Fixed.

8/9 This buf is allocated in ble_adv_gap_mesh_cb() and we are sure that block size is big enough. So there is no need for pullup

10) you are right. fixed

11) Well, link.auth is zero-ed so there should not be a problem. But thanks to this comment I found other issue as there should be prov->input_size instead of output_size.

12) Fixed",True,False,3,2523.35
sonata-project/SonataPageBundle/688,2017-09-06T15:10:49Z,False,59b010036480fdee07702ee4,Could you please rebase your PR and fix merge conflicts?,True,False,21,695972.8666666667
OPS-E2E-Prod/E2E_DocsBranch_Prod_Dynamic/7321,2017-09-06T20:42:52Z,False,59b05dd76480fdef5e4318e2,"### :warning: Validation status: warnings


File | Status | Preview URL | Details
---- | ------ | ----------- | -------
[E2E_DocsBranch_Prod_Dynamic/index.md](https://github.com/OPS-E2E-Prod/E2E_DocsBranch_Prod_Dynamic/blob/prWarns-e2e/E2E_DocsBranch_Prod_Dynamic/index.md) | :warning:Warning | [View](https://review.docs.microsoft.com/en-us/E2E_DocsBranch_Prod_Dynamic/index?branch=pr-en-us-7321) | [Details](#user-content-E2E_DocsBranch_Prod_Dynamic%2Findex.md)

<a name=""E2E_DocsBranch_Prod_Dynamic%2Findex.md""></a>
### [E2E_DocsBranch_Prod_Dynamic/index.md](https://github.com/OPS-E2E-Prod/E2E_DocsBranch_Prod_Dynamic/blob/prWarns-e2e/E2E_DocsBranch_Prod_Dynamic/index.md)
 - **Line 2**: **[Warning]** Invalid file link:(~/../nonexisted1.md).
 - **Line 3**: **[Warning]** Invalid file link:(~/../nonexisted2.md).
 - **Line 4**: **[Warning]** Invalid file link:(~/../nonexisted3.md).

For more details, please refer to the [build report](https://opbuildstorageprod.blob.core.windows.net/report/2017%5C9%5C6%5C70db20ec-e9da-7d89-0cf0-4d250dac361e%5CPullRequest%5C201709062042095500-7321%5Cworkflow_report.html).

**Note:** If you changed an existing file name or deleted a file, broken links in other files to the deleted or renamed file are listed only in the full build report.
",True,False,1,0.0
cloudant/couch_replicator/80,2017-09-11T19:24:56Z,False,59b6e30c6480fde41abbe8ae,"Here is the extract from logs:
```
<150>1 2017-09-11T18:58:26.511216Z MacBook-Pro.vs.shawcable.net twig <0.26299.0> 655040ad24 - 127.0.0.1 test-dev-env-user1 test-dev-env-user1.cloudant.com:15984 PUT /_replicator 201 ok 137
<150>1 2017-09-11T18:58:26.799964Z MacBook-Pro.vs.shawcable.net twig <0.26445.0> 27f8d2a7ac - 127.0.0.1 test-dev-env-user1 test-dev-env-user1.cloudant.com:15984 POST /_replicator 201 ok 19
<149>1 2017-09-11T18:58:26.802848Z MacBook-Pro.vs.shawcable.net twig <0.279.0> -------- - Maybe starting 'b28063bd9d9833f812be2a3f0b0001a7' as I'm the owner
<147>1 2017-09-11T18:58:26.803352Z MacBook-Pro.vs.shawcable.net twig <0.279.0> -------- - Replication manager, error processing document `b28063bd9d9833f812be2a3f0b0001a7`: {forbidden,<<""only http based replication is supported"">>}
```",True,False,4,526626.9
cloudant/couch_replicator/80,2017-09-12T19:51:33Z,False,59b83ac86480fdee077496e4,"I think we should eliminate this case. There is not usable case for customers writing to node local dbs. In fact they won't even be able to create those dbs as they require server_admin credentials.

To simplify the check we could just explicitly check that DbName is <<""_replicator"">> instead of bothering parsing out the customer. Also in this replicator version `<<""shards"">>, _, Customer` would be a valid case?",True,False,4,526626.9
cloudant/couch_replicator/80,2017-09-13T20:12:41Z,False,59b991436480fdeda328030b,Made a pr with a simpler check: https://github.com/cloudant/couch_replicator/pull/81,True,False,4,526626.9
digitalocean/netbox/1505,2017-09-18T16:56:30Z,False,59bffb076480fde9b8fd9a3d,"Thanks for the PR! I ended up adding these myself because I wanted to keep `custom_fields` at the end of the serializer for consistency with other models, but I appreciate the contribution.",True,False,1,0.0
kubernetes/minikube/1985,2017-09-20T04:39:55Z,False,59c1f1236480fde8572b86ad,"# [Codecov](https://codecov.io/gh/kubernetes/minikube/pull/1985?src=pr&el=h1) Report
> Merging [#1985](https://codecov.io/gh/kubernetes/minikube/pull/1985?src=pr&el=desc) into [master](https://codecov.io/gh/kubernetes/minikube/commit/93f6eb237861f1f1ca8b2c329cf91c2e2ffb3434?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/kubernetes/minikube/pull/1985/graphs/tree.svg?token=7Xgbyt4fNl&src=pr&width=650&height=150)](https://codecov.io/gh/kubernetes/minikube/pull/1985?src=pr&el=tree)

```diff
@@           Coverage Diff           @@
##           master    #1985   +/-   ##
=======================================
  Coverage   29.87%   29.87%           
=======================================
  Files          77       77           
  Lines        4760     4760           
=======================================
  Hits         1422     1422           
  Misses       3158     3158           
  Partials      180      180
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/kubernetes/minikube/pull/1985?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/kubernetes/minikube/pull/1985?src=pr&el=footer). Last update [93f6eb2...fe194a6](https://codecov.io/gh/kubernetes/minikube/pull/1985?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",True,False,7,21276.05
ReactionMechanismGenerator/RMG-database/215,2017-09-20T15:39:22Z,False,59c28bc86480fdea25ceb228,"@kehang, Could you please help me run the thermo comparison using your new script? Sorry about the large size. I would have preferred this as two separate PR's, but the sulfur was added before the atomtype refactoring, so it would be a lot of work to separate it. ",True,False,5,62521.316666666666
kubernetes/minikube/1985,2017-09-20T16:04:47Z,False,59c292256480fdeb00dc5274,"maybe make ""kubelet"" a constant if it's not already one?",True,False,7,21276.05
kubernetes/minikube/1985,2017-09-20T16:04:59Z,False,59c2920e6480fde55895165c,drop the println?,True,False,7,21276.05
kubernetes/minikube/1985,2017-09-20T16:05:40Z,False,59c292106480fdef5e4d30dd,"yuck, is this because or ISO has swap on? Should we just turn it off?",True,False,7,21276.05
kubernetes/minikube/1985,2017-09-20T16:06:19Z,False,59c292266480fdecf9629f87,"Going forward this might be more maintainable if we have a map of special cased flags to versions, but this should be OK for now. Maybe just leave a TODO about that.",True,False,7,21276.05
ReactionMechanismGenerator/RMG-database/215,2017-09-20T17:28:24Z,False,59c2a5466480fde8572c04aa,`git checkout -b chargedAT origin/chargedAT`,True,False,5,62521.316666666666
ManageIQ/integration_tests/5405,2017-09-21T10:07:06Z,False,59c38f4c6480fdf11a6fa851,Fixed an error,True,False,1,0.0
pavouk/lgi/165,2017-09-23T14:33:06Z,False,59c79d286480fdaf83acd0e2,Merging since half the open PRs are now by me.,True,False,3,196424.6
ReactionMechanismGenerator/RMG-database/215,2017-09-23T15:01:01Z,False,59c7b8ec6480fdaae55fd88b,"The thermo validation results are promising on hydrocarbon, oxygenates, highly unsaturated hydrocarbons, and one sulfur dataset.
 
thermo estimation error (kcal/mol) | master-rmgpy & master-db | chargedAT-rmgpy & chargedAT-db 
----- | ----- | -----
small_cyclic_table | 3.42 | 3.40 
large_linear_polycyclic_table | 9.09 | 9.07
large_fused_polycyclic_table | 9.53 | 9.54
small_O_only_polycyclic_table | 5.30 | 5.30
large_linear_O_only_polycyclic_table | 6.94 | 6.94
large_fused_O_only_polycyclic_table | 10.32 | 10.31
zb_bicyclics_195_table | 9.59 | 9.59
rg_sulfur_195_table | N/A | 1.39",True,False,5,62521.316666666666
cuappdev/tcat-ios/56,2017-09-24T19:18:29Z,False,59c805516480fdad60c6f18b,Neat!,True,False,11,185.25
cuappdev/tcat-ios/56,2017-09-24T19:20:50Z,False,59c8064a6480fdb4c27cb4aa,@AAAstorga Set default IP inside Reachability file,True,False,11,185.25
cuappdev/tcat-ios/56,2017-09-24T19:22:22Z,False,59c8072f6480fdb4c27cb6c2,"Either use a color from the Shared file, or add this one",True,False,11,185.25
cuappdev/tcat-ios/56,2017-09-24T19:25:01Z,False,59c8078b6480fdaec43f1a17,get rid,True,False,11,185.25
cuappdev/tcat-ios/56,2017-09-24T19:26:13Z,False,59c807636480fdb5fabca727,use boolValue for JSON,True,False,11,185.25
cuappdev/tcat-ios/56,2017-09-24T19:26:57Z,False,59c8076e6480fdb7ac3eae79,might fit better in Network? Up to you,True,False,11,185.25
cuappdev/tcat-ios/56,2017-09-24T19:29:57Z,False,59c807db6480fdaa39e654c3,"For merge conflicts, stick with what's already on master for the Model files, RouteDetailVC, Network (I think). For the .pbxproj, I think we should add both of our changes (although there might be some son stuff that can go, all I care about the testNew.json). ",True,False,11,185.25
cuappdev/tcat-ios/56,2017-09-24T22:16:44Z,False,59c82ed66480fdab22660ac7,i think ill keep in Route.swift for now,True,False,11,185.25
cuappdev/tcat-ios/56,2017-09-24T22:18:31Z,False,59c82f416480fdab22660b85,Ok!,True,False,11,185.25
cuappdev/tcat-ios/56,2017-09-24T22:19:05Z,False,59c8319f6480fdaa8ca94b0d,"You just need to resolve the conflicts above still I think, @myo3 ",True,False,11,185.25
cuappdev/tcat-ios/56,2017-09-24T22:23:44Z,False,59c831ab6480fdaaa1b23f47,Yeah I'm merging it rn,True,False,11,185.25
Ekultek/Zeus-Scanner/3,2017-09-25T12:11:17Z,False,59c8f6bb6480fde40ea406cd,Is this the only compatibility issue with python 3?,True,False,10,265.45
Ekultek/Zeus-Scanner/3,2017-09-25T13:46:43Z,False,59c908d36480fdde1778dd70,That is unclear.,True,False,10,265.45
Ekultek/Zeus-Scanner/3,2017-09-25T13:53:24Z,False,59c90d866480fde6c553cc84,"Okay, I’ll accept this in a few, hang on

> On Sep 25, 2017, at 8:46 AM, cclauss <notifications@github.com> wrote:
> 
> That is unclear.
> 
> —
> You are receiving this because you commented.
> Reply to this email directly, view it on GitHub, or mute the thread.
> 
",True,False,10,265.45
Ekultek/Zeus-Scanner/3,2017-09-25T14:15:31Z,False,59c913fd6480fde1c761c449,I don’t really see how this is going to help if there are more issues with python 3 compatibility ,True,False,10,265.45
Ekultek/Zeus-Scanner/3,2017-09-25T14:19:46Z,False,59c913fd6480fde1c761c44a,"Python is an interpreted language...  There are certain things that you can find with static analysis (how I found these issues) but there are other things that you can not find until you run the app.  Once these two issues are fixed then users can run the app.  When they do, they might find no problems but if they do have problems then they can open an issue and we can fix them.

All of this is why apps in dynamic, interpreted languages usually have bigger test suites then their compiled cousins.",True,False,10,265.45
Ekultek/Zeus-Scanner/3,2017-09-25T14:23:18Z,False,59c913fd6480fde1c761c44b,"I’ll accept it, and look forward to your compatibility for python 3 changes",True,False,10,265.45
Ekultek/Zeus-Scanner/3,2017-09-25T14:54:35Z,False,59c9214b6480fdebcde30c85,"Cool.  Do you have Python 3 on your machine?  If so, do `python3 zeus.py`and let me know if you see differences.",True,False,10,265.45
Ekultek/Zeus-Scanner/3,2017-09-25T15:08:43Z,False,59c922406480fddfe27fea24,"Yeah I do, just not home right now.

- Thomas Perkins

> On Sep 25, 2017, at 9:54 AM, cclauss <notifications@github.com> wrote:
> 
> Cool. Do you have Python 3 on your machine? If so, do python3 zeus.pyand let me know if you see differences.
> 
> —
> You are receiving this because you modified the open/close state.
> Reply to this email directly, view it on GitHub, or mute the thread.
> 
",True,False,10,265.45
Ekultek/Zeus-Scanner/3,2017-09-25T15:09:27Z,False,59c922486480fde6c553e362,"I’m giving you the python 3 project if you want it lol. I hate doing compatibility issues, so if you want that project you can have it",True,False,10,265.45
Ekultek/Zeus-Scanner/3,2017-09-25T16:36:44Z,False,59c930a26480fdde3228e5fe,"I've created a python3 issue, with everything I've found so far here https://github.com/Ekultek/Zeus-Scanner/issues/7

Everything you find, please mark on that issue, and add what you fix. Good luck",True,False,10,265.45
ustbhuangyi/better-scroll/262,2017-09-28T08:36:39Z,False,59ccb4a06480fdddec24f91a,"# [Codecov](https://codecov.io/gh/ustbhuangyi/better-scroll/pull/262?src=pr&el=h1) Report
> Merging [#262](https://codecov.io/gh/ustbhuangyi/better-scroll/pull/262?src=pr&el=desc) into [master](https://codecov.io/gh/ustbhuangyi/better-scroll/commit/d1ff8ef1e3f27c40f3dd7c4d955054e897b4831f?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/ustbhuangyi/better-scroll/pull/262/graphs/tree.svg?height=150&width=650&token=J1hlI9bU75&src=pr)](https://codecov.io/gh/ustbhuangyi/better-scroll/pull/262?src=pr&el=tree)

```diff
@@          Coverage Diff           @@
##           master    #262   +/-   ##
======================================
  Coverage    46.4%   46.4%           
======================================
  Files          15      15           
  Lines         875     875           
======================================
  Hits          406     406           
  Misses        469     469
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/ustbhuangyi/better-scroll/pull/262?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/ustbhuangyi/better-scroll/pull/262?src=pr&el=footer). Last update [d1ff8ef...8b1f1d5](https://codecov.io/gh/ustbhuangyi/better-scroll/pull/262?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",True,False,1,0.0
SemanticMediaWiki/SemanticMediaWiki/2711,2017-09-28T17:11:38Z,False,59cd2d5c6480fddddb28d40d,@mwjames Is the wording ok?,True,False,3,782.3833333333333
SemanticMediaWiki/SemanticMediaWiki/2711,2017-09-29T01:23:02Z,False,59cda07a6480fde3ad854a98,"It seems a bit vague, but then I don't know how to better describe it",True,False,3,782.3833333333333
SemanticMediaWiki/SemanticMediaWiki/2711,2017-09-29T06:14:01Z,False,59cde4ad6480fdebcde647fa,"> It seems a bit vague, but then I don't know how to better describe it

Indeed, but if you look at the default values interpretation works a bit better.",True,False,3,782.3833333333333
ironhack-labs/lab-express-basic-auth/69,2017-09-29T14:19:13Z,False,59ce56796480fdde0248f866,"You don't need the `ejs` extension. Also, it's not really an ""auth route"".",True,False,6,29.35
ironhack-labs/lab-express-basic-auth/69,2017-09-29T14:20:04Z,False,59ce569c6480fddee47a6781,Maybe those different cases deserve different error messages.,True,False,6,29.35
ironhack-labs/lab-express-basic-auth/69,2017-09-29T14:20:45Z,False,59ce56c36480fde681cc8645,Clean up your code before committing please.,True,False,6,29.35
ironhack-labs/lab-express-basic-auth/69,2017-09-29T14:34:40Z,False,59ce5a046480fde681cc88a7,"Put more of these and it makes the sound of a chainsaw 😛 .

Joking aside, there are several things that you could do better here:

- Spacing is better handled by CSS instead of adding linebreaks
- The `for` attribute of the `label` tags looks for tags with the same `id`, not the same `name`; Instead I encourage you to put the `input` *inside* the label so you don't have to use `for` (yes, we can do that 🎉 ).
- Are you sure you want a clear-text placeholder for the password?
- You can give a more meaningful `id` for your form.

Here is a suggestion below:

```
<form id=""signup-form"" action=""/signup"" method=""POST"">
    <label>Username: <input type=""text"" name=""username"" placeholder=""AnakinSkywalker"" required></label>
    <label>Password: <input type=""password"" name=""password"" placeholder:""*******""></label>
</form>
```

And in your CSS:

```
#signup-form label {
    display: block; /* Because it is now a block you'll automatically have a line break between each field */
    margin-bottom: 0.8rem; /* If you want a little bit of whitespace between those */
}
#signup-form label input {
     display: block; /* If you want a line break between the input field and the actual label (although I advise against it) */
}
```",True,False,6,29.35
ironhack-labs/lab-express-basic-auth/69,2017-09-29T14:36:50Z,False,59ce5a976480fdea25e3680d,There's one of these missing here: 🐱 🐈 😹 😸 😼 .,True,False,6,29.35
ironhack-labs/lab-express-basic-auth/69,2017-09-29T14:48:34Z,False,59ce5d536480fde40ea7da25,"Sneaky 😏 .

For the next time, try something like that:

```json
""script"": {
    ""start"": ""node ./bin/www"",
    ""dev"": ""nodemon ./bin/www""
}
```

Now you can do `npm run dev` to start nodemon, and you don't have to change the start script ;)",True,False,6,29.35
kubernetes/minikube/1985,2017-10-04T17:39:25Z,False,59d51cd06480fde15b9c73e9,"Updated with:

* Supports more configurable components through kubeadm: kubelet, controller-manager, apiserver, scheduler
* Not supported yet: DNS and proxy
* Introduces default ""VersionedExtraOpts"" which can be applied to a range of versions and overwritten by the --extra-option flag
",True,False,7,21276.05
kubernetes/minikube/1985,2017-10-04T23:15:58Z,False,59d56bb56480fde77ade0be0,LGTM,True,False,7,21276.05
MPAS-Dev/MPAS-Analysis/259,2017-10-08T03:44:01Z,False,59d99f066480fde534354987,"This PR should not be merged until #257 has been merged, as this branch contains that commit.",True,False,57,52798.65
MPAS-Dev/MPAS-Analysis/259,2017-10-08T03:54:32Z,False,59d9a17d6480fde84d4f5989,"@pwolfram and @milenaveneziani, I have made some fairly significant changes to how tasks are handled in parallel.  When I was trying to set up tasks that depended on one another (either as prerequisites or as subtasks), I ran into trouble.  When tasks are launched as separate processes with subprocess as I was doing before, the whole analysis in the subprocess forgets everything that has been done in the ""master"" process and starts over at the beginning.  Not all tasks were getting set up in the subprocess so a lot of data that was needed wasn't available.

A solution was to use the `multiprocess` module, which launches new processes that are copies of the current process up to the point when the new process was launched.  That means that all tasks could have access to whatever information is in other tasks up to (but not including) when we call the `run()` (now renamed to `run_analysis()`) method.  So one task can find out what input files another task used or which files it will plan to write out.

You can feel free to dig into the code if you like.  Or you can trust that I have a good reason for making the changes I did and just run some tests to make sure I didn't break anything.  Whichever you're up for.

One thing you'll notice is that I am now using a `logger` in a lot of places where we were using print statements before.  I think it would be a good idea to move to the logger because it has several levels it can operate at (debug, info, warning and error) but you can feel free to use `print` as before (which will be logged as ""info"") and `warnings.warn` (which, however, will be logged as an error because it goes to `stderr`).

Please let me know if you have concerns about these changes, as I plan to build a lot of future work on this infrastructure.",True,False,57,52798.65
MPAS-Dev/MPAS-Analysis/259,2017-10-08T06:51:22Z,False,59d9caed6480fde06f898fed,"Okay, @milenaveneziani and @pwolfram, this branch is ready to be reviewed when you have time.",True,False,57,52798.65
MPAS-Dev/MPAS-Analysis/259,2017-10-10T17:37:47Z,False,59dd926f6480fdc7c31c06d7,"Funny that @pwolfram and I split our attention to this PR and #258 without planning it.
A couple of quick questions from me on this one:
- I don't suppose anything changes as far as parallel tasks are executed (one task per node) with this one, right?
- how about changing `run` to `run_analysis_task` or `run_task`?

And about `logger`: I learned about it last week at the python class. I think it's going to be quite useful for mpas-analysis.",True,False,57,52798.65
MPAS-Dev/MPAS-Analysis/259,2017-10-10T17:46:46Z,False,59dd92b46480fdd06c925224,"@milenaveneziani 
> I don't suppose anything changes as far as parallel tasks are executed (one task per node) with this one, right?

No, that is no longer supported.  Instead, it is one node, all tasks run on that node.  If you want to run different tasks on different nodes, you would need to launch them manually using separate config files or --generate flags.

> how about changing run to run_analysis_task or run_task

If I understand right, you don't like `run_analysis`.  I'm fine with either of these, with preference for `run_task` since it's shorter.

> And about logger: I learned about it last week at the python class. I think it's going to be quite useful for mpas-analysis.

I'm glad you think it will be useful.  I've found it to be kind of a mixed bag but as soon as I figure out how to redirect print statements, warnings and exceptions to the log it seems like it will be useful.
",True,False,57,52798.65
MPAS-Dev/MPAS-Analysis/259,2017-10-10T17:58:56Z,False,59dd9dbc6480fdc7ef2c84e3,"> No, that is no longer supported. Instead, it is one node, all tasks run on that node. If you want to run different tasks on different nodes, you would need to launch them manually using separate config files or --generate flags.

ok, so we will need to change the sample scripts for running batch jobs to reflect this change (and I need to take a note that there will have to be a similar change on the a-prime side).
Do you think this should go in before the next tag is made? I was thinking that we could be ready for a v1.0 tag, especially if we can include the license/official public release/installable package PR in it.

> If I understand right, you don't like run_analysis. I'm fine with either of these, with preference for run_task since it's shorter.

It just seemed a bit too general. I am good with `run_task`.",True,False,57,52798.65
MPAS-Dev/MPAS-Analysis/259,2017-10-10T18:31:12Z,False,59dd9ef06480fdd3414665b4,"> ok, so we will need to change the sample scripts for running batch jobs to reflect this change

Yes, indeed.  I'll add these changes to this PR.  I might need your help on systems other than LANL and NERSC still.

> Do you think this should go in before the next tag is made? I was thinking that we could be ready for a v1.0 tag, especially if we can include the license/official public release/installable package PR in it.

If this process happens quickly, I'm fine with holding off on this PR until we have a v1.0 tag.  But this PR is the first in a *long* chain of PRs that are a high priority for me an the ALCC team.",True,False,57,52798.65
MPAS-Dev/MPAS-Analysis/259,2017-10-10T19:27:59Z,False,59dda0726480fdc704010bfe,">  I might need your help on systems other than LANL and NERSC still.

I can test and change the relevant script on titan/olcf.",True,False,57,52798.65
MPAS-Dev/MPAS-Analysis/259,2017-10-10T19:42:14Z,False,59dda48e6480fdc704010e05,"@milenaveneziani and @pwolfram, I just updated the job scripts.  I'll test on Edison and Wolf.  @milenaveneziani, can you verify that things work on OLCF?  If 12 tasks isn't a good number, please let me know what is and I'll update.",True,False,57,52798.65
MPAS-Dev/MPAS-Analysis/259,2017-10-10T20:06:41Z,False,59ddacbc6480fdcba8968cd3,Having trouble on Edison.  I'll keep you posted.  Maybe hold off on testing elsewhere for now.,True,False,57,52798.65
MPAS-Dev/MPAS-Analysis/259,2017-10-10T20:47:02Z,False,59ddadfe6480fdc802190843,"I fixed the issue on Edison.  Everything ran just fine for the QU240 case both in serial on the login node and in parallel on the compute nodes (with maxParallelTasks=12).  I'm testing the EC60to30 case now.

I squashed commits so we'll hopefully be ready to merge when the time comes.",True,False,57,52798.65
MPAS-Dev/MPAS-Analysis/259,2017-10-10T21:07:08Z,False,59ddaeba6480fdc6c8f17144,I just rebased after the last merge.,True,False,57,52798.65
MPAS-Dev/MPAS-Analysis/259,2017-10-10T21:27:18Z,False,59ddaf6e6480fdc6870c8f65,"I'm seeing the following type of error on Edison.  I have seen similar errors on my laptop but hoped it was just something weird with my laptop.
```
running: ESMF_RegridWeightGen --source /tmp/5c5kFF.nc --destination /tmp/fEJYV6.nc --weight /scratch1/scratchdirs/xylar/analysis/EC60to30.beta1/multiprocessing/mapping/map_climatologyMapSeaIceConcNH_EC60to30v3_to_0.5x0.5degree_bilinear.nc --method bilinear --netcdf4 --no_log --src_regional --ignore_unmapped
ERROR: application called MPI_Abort(comm=0x84000000, 1) - process 0
ERROR: [unset]: write_line error; fd=-1 buf=:cmd=abort exitcode=1
ERROR: :
ERROR: system msg for write_line failure : Bad file descriptor
ERROR:
ERROR: analysis task climatologyMapSeaIceConcNH failed during run
Traceback (most recent call last):
  File ""/global/u2/x/xylar/mpas_work/analysis/switch_to_multiprocessing/mpas_analysis/shared/analysis_task.py"", line 251, in run
    self.run_task()
  File ""/global/u2/x/xylar/mpas_work/analysis/switch_to_multiprocessing/mpas_analysis/sea_ice/climatology_map.py"", line 135, in run_task
    logger=self.logger)
  File ""/global/u2/x/xylar/mpas_work/analysis/switch_to_multiprocessing/mpas_analysis/shared/climatology/climatology.py"", line 141, in get_remapper
    remapper.build_mapping_file(method=method, logger=logger)
  File ""/global/u2/x/xylar/mpas_work/analysis/switch_to_multiprocessing/mpas_analysis/shared/interpolation/remapper.py"", line 188, in build_mapping_file
    ' '.join(args))
CalledProcessError: Command 'ESMF_RegridWeightGen --source /tmp/5c5kFF.nc --destination /tmp/fEJYV6.nc --weight /scratch1/scratchdirs/xylar/analysis/EC60to30.beta1/multiprocessing/mapping/map_climatologyMapSeaIceConcNH_EC60to30v3_to_0.5x0.5degree_bilinear.nc --method bilinear --netcdf4 --no_log --src_regional --ignore_unmapped' returned non-zero exit status 1
```
The error seems to always be ""Bad file descriptor"" and always to result from a call to `ESMF_RegridWeightGen`.  It doesn't come up every time but often enough to be problematic.  I'll try to come up with a workaround.
",True,False,57,52798.65
lazymofo/datagrid/20,2017-10-11T02:31:46Z,False,59ddaf2e6480fdc6b35633dd,"I'm not quite sure how to use github, but I'll pulled your code and merged the language file via cherry-pick. I'll consider the other change for the future. & escaping is for html links only, this class uses javascript.window.location.href and maybe header() too. In both of those cases & should NOT be escaped... I think...  

On a side note, not important, but the the ltrim you added does not work correctly. Not a big deal.

Thanks again for your help! 
I'm going to close this pull.
 
",True,False,2,312.45
MPAS-Dev/MPAS-Analysis/259,2017-10-11T04:30:47Z,False,59ddd0896480fdc871df007b,"I have a fix to the problem above that doesn't seem too bad.  I am creating remappers (therefore mapping files) during the `setup_and_check` phase rather than the `run_task` phase.  This means that the remapping happens in serial, which seems to work fine.

Various tests worked on my laptop with this change (and not before this change).  The EC60to30 test on Edison also worked fine in batch mode with this change.

I'll re-test on wolf next.

",True,False,57,52798.65
MPAS-Dev/MPAS-Analysis/259,2017-10-11T05:35:46Z,False,59ddd6566480fdd3daaceb74,"After explicitly setting the number of Open MP threads to 1, I was able to successfully run the EC60to30 test case on wolf.  I see warnings from NCO that it's having to run with 1 thread instead of 2 (as I also saw on NERSC) but things work correctly.  Not quite sure what the deal is there but things go terribly wrong without the flag (and presumably therefore with 2 OMP threads by default).
",True,False,57,52798.65
MPAS-Dev/MPAS-Analysis/259,2017-10-11T05:36:49Z,False,59ddd6596480fdce807e6749,"@milenaveneziani, feel free to test on Titan.  You may also need to add a line to the job script setting the number of Open MP threads to 1.  I'm not sure how Titan works.",True,False,57,52798.65
lazymofo/datagrid/20,2017-10-11T07:44:13Z,False,59ddd80e6480fdc871df0797,"Hello Ian,

I'm sorry. Next time I send a pull request for each issue and do more testing. I'm new to contributions and working with multiple people on codes, too.

I changed every unescaped `&` firefox told me to change. On the other side Opera, Google Chrome, Internet Explorer and https://validator.w3.org/nu/ didn't recognize it as a failure. After reading [this answer on stackoverflow](https://stackoverflow.com/questions/19441750/do-ampersands-still-need-to-be-encoded-in-urls-in-html5#19442133) it seemed like escaping everything is still a good idea.

I tested it with your demo file and a file of mine and it seemed to work.

Kind regards,
Raffael",True,False,2,312.45
MPAS-Dev/MPAS-Analysis/259,2017-10-11T12:54:59Z,False,59de1d196480fdc69e2cb711,I OLCF I recommend you target rhea first - the nco and other packages are kept more up to date there since its the analysis machine.,True,False,57,52798.65
MPAS-Dev/MPAS-Analysis/259,2017-10-11T16:02:12Z,False,59de47d16480fdc6870cfb0e,"Hi @kevans32: the problem with rhea is that I cannot get batch jobs to end cleanly, because of the last cp of png files to the html location. For this reason, in the last a-prime commit, we decided to support batch jobs on titan only (at least for now).",True,False,57,52798.65
MPAS-Dev/MPAS-Analysis/259,2017-10-11T16:20:03Z,False,59de486c6480fdccbf1c9e65,"@milenaveneziani, that issue shouldn't apply to MPAS-Analysis, which should theoretically work on both machines, right?  Still, I can see that Titan would be the priority if that's where A-Prime will run.",True,False,57,52798.65
MPAS-Dev/MPAS-Analysis/259,2017-10-11T16:22:00Z,False,59de48806480fdd384b9dc0c,"If a user were to run on Rhea, could they run a script on the log-in node after the job finishes to copy the html files to the appropriate location?  Obviously not a great solution but an option if Rhea is somehow preferable for other reasons.  I guess this discussion really belongs on A-Prime, not here...
",True,False,57,52798.65
MPAS-Dev/MPAS-Analysis/259,2017-10-11T22:49:00Z,False,59dea77b6480fdc6daf48762,"@xylar: I am starting to test things on titan, and I just realized two things:
1) I only have low-res beta0 data at OLCF, so I need to transfer some ocn/ice data from the beta2 run on edison. I can use globus for that, so it should be quick.
2) In my previous version of the batch script, I did have `export OMP_NUM_THREADS=1`, so it looks like that variable does need to be set.",True,False,57,52798.65
MPAS-Dev/MPAS-Analysis/259,2017-10-11T22:52:13Z,False,59dea9476480fdccbf1cc681,"@milenaveneziani, check on the ALCC simulation list on confluence.  There should be something there you can use.  Avoid transferring a run if you don't have to...",True,False,57,52798.65
MPAS-Dev/MPAS-Analysis/259,2017-10-11T23:05:35Z,False,59dea9f46480fdc8147ae747,"@milenaveneziani, see if there's still output on Titan at:
/lustre/atlas1/cli127/scratch/vanroek/20170824.twoYearTest.T62_oECv3.titan/run/
I'm not sure it's really 2 years of data as the run name suggests, but hopefully so...",True,False,57,52798.65
ReactionMechanismGenerator/RMG-database/215,2017-10-12T01:30:52Z,False,59dec5e76480fdc6717ba864,"@KEHANG , this PR is now clean and ready for review. Thanks!",True,False,5,62521.316666666666
MPAS-Dev/MPAS-Analysis/259,2017-10-12T22:55:18Z,False,59dff2e66480fdc6b357ed36,We agreed today that this will not get merged until after a v0.5 tag has been made.,True,False,57,52798.65
MPAS-Dev/MPAS-Analysis/259,2017-10-13T08:02:12Z,False,59e073096480fdd2250a0a00,"Since my batch script on titan is still waiting in the queue, I went ahead and ran all 12 tasks on the login node, using the parallel ncclimo option.
If I don't set `NCO_PATH_OVERRIDE` to `No`, I get an error when remapping the MPAS ice climatologies: something to do with netcdf file not supported.
If I set `NCO_PATH_OVERRIDE`, then all tasks are completed successfully.
Do you see this on edison too?

One other thing: at the end of the sea-ice climo task, I get these warnings that appear as errors, but they are actually warnings:
```
  Make ice concentration plots...
ERROR: /ccs/proj/cli115/pwolfram/anaconda_envs/acme-2.7/lib/python2.7/site-packages/numpy/ma/core.py:2344: RuntimeWarning: invalid value encountered in less_equal
ERROR:   mabs(xnew - value), atol + rtol * mabs(value))
ERROR: /ccs/proj/cli115/pwolfram/anaconda_envs/acme-2.7/lib/python2.7/site-packages/numpy/ma/core.py:6385: MaskedArrayFutureWarning: In the future the default for ma.minimum.reduce will be axis=0, not the current None, to match np.minimum.reduce. Explicitly pass 0 or None to silence this warning.
ERROR:   return self.reduce(a)
```
Is this related to logging?",True,False,57,52798.65
MPAS-Dev/MPAS-Analysis/259,2017-10-13T15:40:49Z,False,59e0de896480fdd2250a55be,"> If I don't set NCO_PATH_OVERRIDE to No, I get an error when remapping the MPAS ice climatologies: something to do with netcdf file not supported.
If I set NCO_PATH_OVERRIDE, then all tasks are completed successfully.
Do you see this on edison too?

You should not need to set this.  It is set internally here:
https://github.com/MPAS-Dev/MPAS-Analysis/pull/259/files#diff-ca876be176c50dd7bd30e7195cc22d63L359
and here
https://github.com/MPAS-Dev/MPAS-Analysis/pull/259/files#diff-e085cb53ee77e659ea82b0433a01ca6fL279

If you could figure out which call is failing when this is not set, that would be helpful.  I ran on Edison without explicitly setting the flag and I don't think I had any trouble.",True,False,57,52798.65
MPAS-Dev/MPAS-Analysis/259,2017-10-13T15:43:23Z,False,59e0df1e6480fdc7c31e8e7c,"> One other thing: at the end of the sea-ice climo task, I get these warnings that appear as errors, but they are actually warnings:
...
Is this related to logging?

Indeed.  There is no way for the logger to know that these are warnings because they go to stderr.  I welcome any suggestions you have.  One option would be simply to remove the ERROR: at the beginning so there's no difference in the logger whether something is an error, a warning or a regular print (and you would need to explicitly include this in the statement instead).
",True,False,57,52798.65
MPAS-Dev/MPAS-Analysis/259,2017-10-13T15:56:28Z,False,59e0e2356480fdc64a3b80e0,"ok, I will try again on titan without setting the NCO variable and see what happens.

About the logger thing: is this the module we are using?:
https://docs.python.org/2/howto/logging.html#logging-basic-tutorial
I ask because I don't see any `import logging` in the current code.",True,False,57,52798.65
MPAS-Dev/MPAS-Analysis/259,2017-10-13T16:28:29Z,False,59e0ea2c6480fdc69e2edd8b,"Yes, that's the logger we're using.  Each task has its own logger (inside the `run()` method).  It's imported here:
https://github.com/MPAS-Dev/MPAS-Analysis/pull/259/files#diff-f4c01dd9c50e825c99d4d138d9001e07R14
and set up here:
https://github.com/MPAS-Dev/MPAS-Analysis/pull/259/files#diff-f4c01dd9c50e825c99d4d138d9001e07R230",True,False,57,52798.65
MPAS-Dev/MPAS-Analysis/259,2017-10-13T16:38:55Z,False,59e0ec236480fdd2250a5fcf,"> One option would be simply to remove the ERROR: at the beginning so there's no difference in the logger whether something is an error, a warning or a regular print (and you would need to explicitly include this in the statement instead).

would that mean that it would have to remove this `if stderr` statement here?",True,False,57,52798.65
MPAS-Dev/MPAS-Analysis/259,2017-10-13T16:39:47Z,False,59e0ec5d6480fdc7468731bb,"Thanks. For some reason, the `import logging` was not showing up in the word search.",True,False,57,52798.65
MPAS-Dev/MPAS-Analysis/259,2017-10-13T16:46:52Z,False,59e0ee006480fdc6b358ad96,"No, I would remove the text ""ERROR:"" from here:
https://github.com/MPAS-Dev/MPAS-Analysis/pull/259/files#diff-f4c01dd9c50e825c99d4d138d9001e07R435
We do still want to capture stderr, we just don't necessarily want to explicitly print ERROR: in front of every line.

By the way, I don't think the example above is where the particular warning (displayed as error) is coming from.  Instead, it's a warning inside numpy somewhere that gets redirected to the logger using the following trick:
https://github.com/MPAS-Dev/MPAS-Analysis/pull/259/files#diff-f4c01dd9c50e825c99d4d138d9001e07R246",True,False,57,52798.65
MPAS-Dev/MPAS-Analysis/259,2017-10-13T16:50:09Z,False,59e0eec86480fdc733a432b6,"I see.
Yes, I would definitely remove the 'ERROR:' from there and customize our print statements.",True,False,57,52798.65
MPAS-Dev/MPAS-Analysis/259,2017-10-13T17:22:35Z,False,59e0f65f6480fdd282cf9f76,"I am now getting a different error on titan with respect to yesterday.. This one is a seg fault during the ncclimo execution, again for one of the sea-ice tasks (`climatologyMapSeaIceConcNH`):
```
Climatological seasonal mean for JAS ...
ncclimo: ERROR seasonal climo cmd_clm[14] failed. Debug this:
 ncra --cb -O -w 31,31,30 --no_tmp_fl -v timeMonthly_avg_iceAreaCell,timeMonthly_avg_iceVolumeCell --hdr_pad=10000 --gaa climo_script=ncclimo --gaa climo_command=""'/ccs/proj/cli115/pwolfram/anaconda_envs/acme-2.7/bin/ncclimo --clm_md=mth -a sdd -m mpascice -p bck -v timeMonthly_avg_iceAreaCell,timeMonthly_avg_iceVolumeCell --seasons=JFM,JAS -s 0010 -e 0010 -i /lustre/atlas1/cli115/proj-shared/milena/ACME/simulations/20170313.beta1.A_WCYCL1850S.ne30_oECv3_ICG.edison/. -o /lustre/atlas1/cli115/proj-shared/milena/20170313.beta1.A_WCYCL1850S.ne30_oECv3_ICG.edison/clim/mpas/seaIceAreaVol_EC60to30v3'"" --gaa climo_hostname=titan-ext1 --gaa climo_version=4.6.9 --gaa yrs_averaged=0010  /lustre/atlas1/cli115/proj-shared/milena/20170313.beta1.A_WCYCL1850S.ne30_oECv3_ICG.edison/clim/mpas/seaIceAreaVol_EC60to30v3/mpascice_07_001007_001007_climo.nc /lustre/atlas1/cli115/proj-shared/milena/20170313.beta1.A_WCYCL1850S.ne30_oECv3_ICG.edison/clim/mpas/seaIceAreaVol_EC60to30v3/mpascice_08_001008_001008_climo.nc /lustre/atlas1/cli115/proj-shared/milena/20170313.beta1.A_WCYCL1850S.ne30_oECv3_ICG.edison/clim/mpas/seaIceAreaVol_EC60to30v3/mpascice_09_001009_001009_climo.nc /lustre/atlas1/cli115/proj-shared/milena/20170313.beta1.A_WCYCL1850S.ne30_oECv3_ICG.edison/clim/mpas/seaIceAreaVol_EC60to30v3/mpascice_JAS_001007_001009_climo.nc
ERROR: /ccs/proj/cli115/pwolfram/anaconda_envs/acme-2.7/bin/ncclimo: line 2207: 13505 Segmentation fault      ncra --cb -O -w 31,31,30 --no_tmp_fl -v timeMonthly_avg_iceAreaCell,timeMonthly_avg_iceVolumeCell --hdr_pad=10000 --gaa climo_script=ncclimo --gaa climo_command=""'/ccs/proj/cli115/pwolfram/anaconda_envs/acme-2.7/bin/ncclimo --clm_md=mth -a sdd -m mpascice -p bck -v timeMonthly_avg_iceAreaCell,timeMonthly_avg_iceVolumeCell --seasons=JFM,JAS -s 0010 -e 0010 -i /lustre/atlas1/cli115/proj-shared/milena/ACME/simulations/20170313.beta1.A_WCYCL1850S.ne30_oECv3_ICG.edison/. -o /lustre/atlas1/cli115/proj-shared/milena/20170313.beta1.A_WCYCL1850S.ne30_oECv3_ICG.edison/clim/mpas/seaIceAreaVol_EC60to30v3'"" --gaa climo_hostname=titan-ext1 --gaa climo_version=4.6.9 --gaa yrs_averaged=0010 /lustre/atlas1/cli115/proj-shared/milena/20170313.beta1.A_WCYCL1850S.ne30_oECv3_ICG.edison/clim/mpas/seaIceAreaVol_EC60to30v3/mpascice_07_001007_001007_climo.nc /lustre/atlas1/cli115/proj-shared/milena/20170313.beta1.A_WCYCL1850S.ne30_oECv3_ICG.edison/clim/mpas/seaIceAreaVol_EC60to30v3/mpascice_08_001008_001008_climo.nc /lustre/atlas1/cli115/proj-shared/milena/20170313.beta1.A_WCYCL1850S.ne30_oECv3_ICG.edison/clim/mpas/seaIceAreaVol_E
C60to30v3/mpascice_09_001009_001009_climo.nc /lustre/atlas1/cli115/proj-shared/milena/20170313.beta1.A_WCYCL1850S.ne30_oECv3_ICG.edison/clim/mpas/seaIceAreaVol_EC60to30v3/mpasc
ice_JAS_001007_001009_climo.nc
ERROR:
ERROR: analysis task climatologyMapSeaIceConcNH failed during run
Traceback (most recent call last):
  File ""/autofs/nccs-svm1_home1/milena/MPAS-git-repositories/MPAS-Analysis/mpas_analysis/shared/analysis_task.py"", line 251, in run
    self.run_task()
  File ""/autofs/nccs-svm1_home1/milena/MPAS-git-repositories/MPAS-Analysis/mpas_analysis/sea_ice/climatology_map.py"", line 153, in run_task
    self._compute_seasonal_climatologies()
  File ""/autofs/nccs-svm1_home1/milena/MPAS-git-repositories/MPAS-Analysis/mpas_analysis/sea_ice/climatology_map.py"", line 348, in _compute_seasonal_climatologies
    logger=self.logger)
  File ""/autofs/nccs-svm1_home1/milena/MPAS-git-repositories/MPAS-Analysis/mpas_analysis/shared/climatology/climatology.py"", line 386, in compute_climatologies_with_ncclimo
    ' '.join(args))
CalledProcessError: Command 'ncclimo --clm_md=mth -a sdd -m mpascice -p bck -v timeMonthly_avg_iceAreaCell,timeMonthly_avg_iceVolumeCell --seasons=JFM,JAS -s 0010 -e 0010 -i /lustre/atlas1/cli115/proj-shared/milena/ACME/simulations/20170313.beta1.A_WCYCL1850S.ne30_oECv3_ICG.edison/. -o /lustre/atlas1/cli115/proj-shared/milena/20170313.beta1.A_WCYCL1850S.ne30_oECv3_ICG.edison/clim/mpas/seaIceAreaVol_EC60to30v3' returned non-zero exit status 1
```",True,False,57,52798.65
MPAS-Dev/MPAS-Analysis/259,2017-10-13T17:33:41Z,False,59e0f8f86480fdd34148fd49,"@milenaveneziani, I removed the `'ERROR: '` at the beginning of error messages in the log file.  I re-ran and now see:
```
  Make ice concentration plots...
/home/xylar/miniconda2/envs/mpas_analysis/lib/python2.7/site-packages/numpy/ma/core.py:2344: RuntimeWarning: invalid value encountered in less_equal
  mabs(xnew - value), atol + rtol * mabs(value))
```
without the message.",True,False,57,52798.65
MPAS-Dev/MPAS-Analysis/259,2017-10-13T17:42:25Z,False,59e0fb0a6480fdca54ff8129,"Regarding he segfault, I can't really help much until I have access to OLCF.  Could you post the full log file (via gist.git.com)?  It should tell you where things were run (i.e. out of @pwolfram's acme-unified vs. @czender's directory).  Other than that, I guess I would try running the command that cause the segfault on its own and see if you can make figure out what might be going wrong.  If we can at lest reproduce the error outside of MPAS-Analysis, we might be able to get some help from @czender.",True,False,57,52798.65
MPAS-Dev/MPAS-Analysis/259,2017-10-13T17:55:23Z,False,59e0fe116480fdd153bd3c2f,"let me poke around with this error on titan. It is strange that I get different errors every time.
I believe I am using the nco from the acme-conda environment.",True,False,57,52798.65
MPAS-Dev/MPAS-Analysis/259,2017-10-13T18:04:37Z,False,59e100426480fdd49440b8d1,"hmm, this is weird. I re-run with a `--purge` (but I had done the same thing the first time around) and this time all the tasks completed successfully. Any idea?",True,False,57,52798.65
MPAS-Dev/MPAS-Analysis/259,2017-10-13T18:19:53Z,False,59e103d36480fdc6717d6faa,"No, I really don't know if it's not reproducible.  I'd try running a few more times and make sure it doesn't happen again.",True,False,57,52798.65
MPAS-Dev/MPAS-Analysis/259,2017-10-13T19:26:22Z,False,59e113626480fdd1a414489a,I have run a few more times (with and without purging first) and all went well.,True,False,57,52798.65
MPAS-Dev/MPAS-Analysis/259,2017-10-13T20:29:03Z,False,59e122166480fdc6f25c1422,"Okay, that sounds good to me.

@pwolfram, do you have time to look at this anytime soon?  Since there are a lot of fairly high-level python changes (notably to the base class `AnalysisTask`), we would really benefit from your input.  But if you don't have time, that would also be important to know so we can move on.",True,False,57,52798.65
MPAS-Dev/MPAS-Analysis/259,2017-10-13T20:42:15Z,False,59e1252d6480fdc6c8f46cd1,"@xylar, thanks for the ping on this.  I took a quick look and nothing major stood out.  I could potentially review this late next week, maybe on Tuesday or Wednesday at the earliest but likely Thursday or Friday or even the next week.  I won't know for sure until early Tuesday.  

What is your needed time scale for a review?",True,False,57,52798.65
MPAS-Dev/MPAS-Analysis/259,2017-10-13T20:50:33Z,False,59e1271c6480fdc6f25c16de,"@pwolfram, late next week would be fine.  If you find you don't have time next week, could you let us know?",True,False,57,52798.65
MPAS-Dev/MPAS-Analysis/259,2017-10-13T21:31:29Z,False,59e130b46480fdc6b358d802,Sure @xylar,True,False,57,52798.65
ManageIQ/manageiq/11691,2017-10-14T04:01:06Z,False,59e18c076480fdc76e4bb11e,"This pull request has been automatically closed because it has not been updated for at least 6 months.

Feel free to reopen this pull request if these changes are still valid.

Thank you for all your contributions!
",True,False,72,539068.1666666666
pmmp_____PocketMine-MP_____1476,2017-10-17T20:34:40Z,True,pmmp_____PocketMine-MP_____1476_____147146167,,True,True,74,257775.83333333334
pmmp_____PocketMine-MP_____1476,2017-10-18T06:09:50Z,True,pmmp_____PocketMine-MP_____1476_____145323057,Dead link to `getButton`. I believe this should be `Pass this to {@link MenuForm::getOption} to get the MenuOption object`.,True,True,74,257775.83333333334
pmmp_____PocketMine-MP_____1476,2017-10-18T06:13:23Z,True,pmmp_____PocketMine-MP_____1476_____145323429,Consider changing the message to `Form is closed or has not been submitted yet` to be more precise.,True,True,74,257775.83333333334
pmmp_____PocketMine-MP_____1476,2017-10-18T06:14:01Z,True,pmmp_____PocketMine-MP_____1476_____145323495,Is there a practical reason to expose this method publicly?,True,True,74,257775.83333333334
pmmp_____PocketMine-MP_____1476,2017-10-18T06:16:01Z,True,pmmp_____PocketMine-MP_____1476_____145323717,Is there a reason to expose this method publicly?,True,True,74,257775.83333333334
pmmp_____PocketMine-MP_____1476,2017-10-18T06:37:08Z,True,pmmp_____PocketMine-MP_____1476_____145326621,"This method is very confusing. It is not called by the server, but relies on the developer to call it.

This leads to inconsistency:
1. Is a Form object expected to be reused for a single player?
2. Is a Form object expected to be reused for multiple players?
3. Can the developer use the form values outside onSubmit()?

The answer is:
* If the same Form instance is only sent once, you can use the form values outside onSubmit() and hold the Form instance forever.
* If the same Form instance is sent more than once (same player or not), it would be a very bad practice to depend on the value held in the Form instance outside onSubmit(), even in the same tick.

It is particularly tempting to hold a CustomForm instance and use the values there later, since the data cannot be easily extracted. I can foresee this is going to cause a lot of concurrency bugs that can be very difficult to identify. Therefore, it is suggested that, starting from the core, one of either approach (""resend same instance"" or ""new instance each resend"") be adopted to avoid confusion.

* Adopting the ""resend same instance"" approach should automatically call the `clearResponseData()` method after each onSubmit() call.
* Adopting the ""new instance each resend"" approach should remove this method and add a flag to identify a Form as sent and throw an exception when attempting to use sendForm() with it.

Deciding which approach to adopt should require public consultation.",True,True,74,257775.83333333334
pmmp_____PocketMine-MP_____1476,2017-10-18T06:50:56Z,True,pmmp_____PocketMine-MP_____1476_____145328678,"What about also adding an empty `public function onSelected()`, which is called before/after `MenuForm::onSubmit()` is called? This can allow developers to write their handlers in the menu options instead of from the big MenuForm object, resulting in extra routing work. Without adding this in the core, developers have to add a few lines of routing code + assertion that the `MenuOption::onSelected()` method exists in order to put the handler code with the MenuOption.",True,True,74,257775.83333333334
pmmp_____PocketMine-MP_____1476,2017-10-18T06:52:31Z,True,pmmp_____PocketMine-MP_____1476_____145328923,All other Form classes are abstract. Why is this suddenly non-abstract?,True,True,74,257775.83333333334
pmmp_____PocketMine-MP_____1476,2017-10-18T08:15:08Z,True,pmmp_____PocketMine-MP_____1476_____145343453,"before, or after? If a developer does it themselves, they are explicit about when they want it to be called, which can be any time - if the core does it, then developers have to get used to BEFORE, or AFTER, no in-betweens.",True,True,74,257775.83333333334
pmmp_____PocketMine-MP_____1476,2017-10-18T08:16:00Z,True,pmmp_____PocketMine-MP_____1476_____145343645,Plugins may want to modify form result data when it's submitted (there will be events for this),True,True,74,257775.83333333334
DGtal-team/DGtal/1266,2017-10-19T13:40:36Z,False,59e9b1546480fdc6b35da4f5,could you please add entries for the indexeddigitalsurface stuff ?,True,False,66,246101.18333333332
DGtal-team/DGtal/1266,2017-10-19T13:47:04Z,False,59e9b1546480fdc64a408a6d,polygonal ? (I don't know),True,False,66,246101.18333333332
Gordienko-RU/it-marathon-back-end/4,2017-10-19T14:50:41Z,False,59e8bbca6480fdd430b374ad,"I think you should call the field more traditionally, looks like ""createdDate""",True,False,18,318.43333333333334
Gordienko-RU/it-marathon-back-end/4,2017-10-19T14:51:15Z,False,59e8bbef6480fdd2250ec7b2,"The field should be in the ""ReferenceSet"" model, not in the ""Apartment""",True,False,18,318.43333333333334
Gordienko-RU/it-marathon-back-end/4,2017-10-19T14:52:04Z,False,59e8bc1a6480fdc7c322f7e6,"Would be better to set a default, something like 1 (Number)",True,False,18,318.43333333333334
Gordienko-RU/it-marathon-back-end/4,2017-10-19T14:53:08Z,False,59e8bc596480fdc7468b9950,Would be better move all strings ('Гродно') to  specific constants file,True,False,18,318.43333333333334
Gordienko-RU/it-marathon-back-end/4,2017-10-19T14:58:48Z,False,59e8bdae6480fdd0d56064b1,You should use camel Case instead of snake Case on the all project,True,False,18,318.43333333333334
Gordienko-RU/it-marathon-back-end/4,2017-10-19T15:00:42Z,False,59e8be246480fdcba89d805b,"You should't save real password to the data base. Your model have to save something like ""passwordSalt""",True,False,18,318.43333333333334
Gordienko-RU/it-marathon-back-end/4,2017-10-19T15:02:16Z,False,59e8be7b6480fdc7ef338cf6,"You should't save token to User model, you should have specific method to check method",True,False,18,318.43333333333334
Gordienko-RU/it-marathon-back-end/4,2017-10-19T16:36:09Z,False,59e8d4f26480fdc8021fb504,"Well, I thought 'whenAdded' shows the real meaning of that field. ",True,False,18,318.43333333333334
Gordienko-RU/it-marathon-back-end/4,2017-10-19T16:36:36Z,False,59e8d4eb6480fdd4944528dc,"Yeap, didn't notice that.",True,False,18,318.43333333333334
Gordienko-RU/it-marathon-back-end/4,2017-10-19T16:37:40Z,False,59e8d5086480fdd153c19176,Got it.,True,False,18,318.43333333333334
Gordienko-RU/it-marathon-back-end/4,2017-10-19T16:39:38Z,False,59e8d5546480fdca5403ebbb,"I don't realy know, it is good idea or not. I mean, default value in this document's field. Maybe it will be better to just require that field?",True,False,18,318.43333333333334
Gordienko-RU/it-marathon-back-end/4,2017-10-19T16:41:33Z,False,59e8d5c16480fdc7ef339f4a,"Are you talking about types? If you mentioned 'Schema', I define this with capital later, becouse it is constructor.",True,False,18,318.43333333333334
Gordienko-RU/it-marathon-back-end/4,2017-10-19T16:43:26Z,False,59e8d7a66480fdc7d8123c65,"Ok, I am gonna read about that, or maybe see some examples.
",True,False,18,318.43333333333334
Gordienko-RU/it-marathon-back-end/4,2017-10-19T16:49:29Z,False,59e8d79f6480fdc69e3358ce,"Hmmm...I think I got it. I should use method, that will obtain user data and using some encrypt method create token again and compare those two, that server got from client, and that has been created by server.  ",True,False,18,318.43333333333334
Gordienko-RU/it-marathon-back-end/4,2017-10-19T20:04:47Z,False,59e905676480fdc6dafab262,"I've said about ""user_id"" namespace",True,False,18,318.43333333333334
Gordienko-RU/it-marathon-back-end/4,2017-10-19T20:07:41Z,False,59e906216480fdca54040ff0,The required field would be better,True,False,18,318.43333333333334
Gordienko-RU/it-marathon-back-end/4,2017-10-19T20:08:55Z,False,59e9065c6480fdc792893b87,I've attached needed video to the slack channel,True,False,18,318.43333333333334
Gordienko-RU/it-marathon-back-end/4,2017-10-19T20:09:07Z,False,59e9066a6480fdc8021fd31e,pls see comment above,True,False,18,318.43333333333334
MPAS-Dev/MPAS-Analysis/259,2017-10-19T21:08:14Z,False,59e914476480fdcfdfa8cfdf,"Note: I have seen issues with processes freezing up during calls to `open_multifile_dataset` in branches where I introduce more subtasks.  @pwolfram and I agree that this is likely due to the `dask` package not ""playing nice"" with multiprocessing.  Because we will be moving to using NCO within pre-processing tasks to compute climatologies and extract time series from multiple files, we do not foresee needing `dask` in the future so these freeze-ups will be addressed soon by removing all calls to `open_multifile_dataset` and instead opening single NetCDF files that have been pre-processed through NCO.

I have not seen this kind of lock-up behavior with this particular branch so I think it is safe to merge these changes first and work toward removing `dask` in a future PR.",True,False,57,52798.65
MPAS-Dev/MPAS-Analysis/259,2017-10-19T22:31:34Z,False,59e927cc6480fdccbf2361e6,"@xylar, I should also note that at this point my code is essentially ""legacy-esq"" as I have contributed 6400 lines / changes to the repo and you have committed 62,600-- which is essentially an order of magnitude more.  I would, at this point, benefit from some type of developer tutorial for the system as I'm sure others would too.",True,False,57,52798.65
DGtal-team/DGtal/1266,2017-10-20T07:39:37Z,False,59e9b15f6480fdc65dac411c,stores?,True,False,66,246101.18333333332
DGtal-team/DGtal/1266,2017-10-20T07:39:53Z,False,59e9b15c6480fdca54046c6b,instantiates,True,False,66,246101.18333333332
DGtal-team/DGtal/1266,2017-10-20T07:55:19Z,False,59e9b15c6480fdcfdfa922a8,don't we have a seealso  or \see tag on doxygen ? not sure... ,True,False,66,246101.18333333332
DGtal-team/DGtal/1266,2017-10-20T07:56:25Z,False,59e9b1676480fdd049ba9062,"a curve ""ended"" by two vertices ?",True,False,66,246101.18333333332
DGtal-team/DGtal/1266,2017-10-20T07:58:45Z,False,59e9b15b6480fdc797da6cba,an half-edge ?,True,False,66,246101.18333333332
DGtal-team/DGtal/1266,2017-10-20T08:00:20Z,False,59e9b15b6480fdccbf23ab50,don't get it: what does exactly ```build``` ? It would render the edges of the triangles  ?,True,False,66,246101.18333333332
DGtal-team/DGtal/1266,2017-10-20T08:03:24Z,False,59e9b15d6480fdd153c21442,what are arcs here ? Are they edges as in the previous section? ,True,False,66,246101.18333333332
DGtal-team/DGtal/1266,2017-10-20T08:03:57Z,False,59e9b15b6480fdc871e65dba,is it because you want to push appart halfEdge vs. Edge (aka arcs) ?,True,False,66,246101.18333333332
DGtal-team/DGtal/1266,2017-10-20T08:04:19Z,False,59e9b5ce6480fdc7928988b5,logarithmic,True,False,66,246101.18333333332
DGtal-team/DGtal/1266,2017-10-20T08:06:50Z,False,59e9b15b6480fdc8c8d286cd,(edges later),True,False,66,246101.18333333332
DGtal-team/DGtal/1266,2017-10-20T08:07:23Z,False,59e9b15b6480fdd2250f5b7b,arcs -> edges ?,True,False,66,246101.18333333332
DGtal-team/DGtal/1266,2017-10-20T08:08:23Z,False,59e9b15b6480fdc68713f24d,ok here is the def of arc. please discuss about it earlier.,True,False,66,246101.18333333332
DGtal-team/DGtal/1266,2017-10-20T08:10:22Z,False,59e9b15b6480fdc6dafb0d4a,are arcs oriented edges ?,True,False,66,246101.18333333332
DGtal-team/DGtal/1266,2017-10-20T08:15:14Z,False,59e9b15b6480fdc6f260df03,strange because be have plenty of ```BOOST_STATIC_CONSTANT``` in other classes...,True,False,66,246101.18333333332
MPAS-Dev/MPAS-Analysis/259,2017-10-20T13:46:51Z,False,59e9fe5c6480fdd2c6e47fbf,"@pwolfram, a developer's guide is a good idea.  For now, what we have is the analysis task template but a more thorough guide would be useful.  I will put it on my list.",True,False,57,52798.65
MPAS-Dev/MPAS-Analysis/259,2017-10-20T13:47:16Z,False,59e9fe6f6480fdc687142708,And thank you for taking the time to review this PR!,True,False,57,52798.65
MPAS-Dev/MPAS-Analysis/259,2017-10-20T14:18:08Z,False,59ea05b06480fdc64a40c377,@xylar: do you think I should do more testing on this or are we ready to merge?,True,False,57,52798.65
pmmp_____PocketMine-MP_____1476,2017-10-21T11:39:23Z,True,pmmp_____PocketMine-MP_____1476_____146103666,"Suggestion: Construct with content -> new Label(""content here"");",True,True,74,257775.83333333334
pmmp_____PocketMine-MP_____1476,2017-10-21T12:25:11Z,True,pmmp_____PocketMine-MP_____1476_____146104430,"Calling it Steps makes it confusing - If possible, rename to $options",True,True,74,257775.83333333334
pmmp_____PocketMine-MP_____1476,2017-10-21T14:21:15Z,True,pmmp_____PocketMine-MP_____1476_____146106591,But: Why? So i can not cache a Form and send it to a player? So it has to be recreated (rebuildt in the core) every time? Isn't that just a waste of calculation if the form contents would never change?,True,True,74,257775.83333333334
pmmp_____PocketMine-MP_____1476,2017-10-21T14:24:18Z,True,pmmp_____PocketMine-MP_____1476_____146106631,The core code has no foolproof way to tell if your form is immutable (so to speak). You can clone the form object if you're concerned about the overhead.,True,True,74,257775.83333333334
pmmp_____PocketMine-MP_____1476,2017-10-21T14:24:48Z,True,pmmp_____PocketMine-MP_____1476_____338404986,"""Offtoppic"" question: Could you merge the changes from master into the branch / update it?",True,True,74,257775.83333333334
pmmp_____PocketMine-MP_____1476,2017-10-21T14:48:02Z,True,pmmp_____PocketMine-MP_____1476_____146107095,"I have already explained in my previous comment:

> It is particularly tempting to hold a CustomForm instance and use the values there later, since the data cannot be easily extracted. I can foresee this is going to cause a lot of concurrency bugs that can be very difficult to identify. Therefore, it is suggested that, starting from the core, one of either approach (""resend same instance"" or ""new instance each resend"") be adopted to avoid confusion.
>
> * Adopting the ""resend same instance"" approach should automatically call the clearResponseData() method after each onSubmit() call.
> * Adopting the ""new instance each resend"" approach should remove this method and add a flag to identify a Form as sent and throw an exception when attempting to use sendForm() with it.

As it has been noticed that resetting contents each time makes it very inconvenient to retain data (especially inconvenient for custom form data), the ""new instance each resend"" approach is considered more appropriate.",True,True,74,257775.83333333334
pmmp_____PocketMine-MP_____1476,2017-10-21T14:52:23Z,True,pmmp_____PocketMine-MP_____1476_____146107180,"Regarding the overhead of form creation overhead, perhaps you should compare it against encoding the form, sending it to the client, making the client display it and sending it back. As one wouldn't reasonably send forms very frequently, the impact on performance is negligible, so trying to cache forms for the sake of performance would be premature optimization, and therefore your comment is 4√(all evil), and so you are 8√(all evil).",True,True,74,257775.83333333334
pmmp_____PocketMine-MP_____1476,2017-10-21T16:13:23Z,True,pmmp_____PocketMine-MP_____1476_____146109010,Please concider adding a function to get/set the content,True,True,74,257775.83333333334
pmmp_____PocketMine-MP_____1476,2017-10-22T07:40:10Z,True,pmmp_____PocketMine-MP_____1476_____338458391,how do you make a player open a form when they hold click a specific block,True,True,74,257775.83333333334
pmmp_____PocketMine-MP_____1476,2017-10-22T11:49:31Z,True,pmmp_____PocketMine-MP_____1476_____338471432,"Please, for questions head over to the Forums. This is a place to discuss the changes and issues, not some random guy's issues about not reading the docs / commits",True,True,74,257775.83333333334
pmmp_____PocketMine-MP_____1476,2017-10-22T12:00:47Z,True,pmmp_____PocketMine-MP_____1476_____338472066,"Have images handling been added yet, if so, there should be a class for that. ",True,True,74,257775.83333333334
pmmp_____PocketMine-MP_____1476,2017-10-22T12:06:04Z,True,pmmp_____PocketMine-MP_____1476_____338472366,"Have eyes been added yet, if so, they should be used.",True,True,74,257775.83333333334
pmmp_____PocketMine-MP_____1476,2017-10-22T12:16:30Z,True,pmmp_____PocketMine-MP_____1476_____338472915,_wishes github had a facepalm reaction_,True,True,74,257775.83333333334
pmmp_____PocketMine-MP_____1476,2017-10-22T12:24:57Z,True,pmmp_____PocketMine-MP_____1476_____338473404,"🤦 🌚 👌🏼  
![image](https://user-images.githubusercontent.com/8733998/31861860-ba0e7dc6-b734-11e7-8a21-ecaa4eac349e.png)
https://userstyles.org/styles/37035/github-dark",True,True,74,257775.83333333334
pmmp_____PocketMine-MP_____1476,2017-10-22T17:12:26Z,True,pmmp_____PocketMine-MP_____1476_____338493343,Wiki for that or read it manu...,True,True,74,257775.83333333334
gooddata/gooddata-react-components/101,2017-10-23T06:24:43Z,False,59ed8b2d6480fdcf2d60bc1c,"Build succeeded (check pipeline).

- https://ci.intgdc.com/job/gooddata-react-components-opensource-repository-check/36/ : SUCCESS in 9s
- https://ci.intgdc.com/job/gooddata-react-components-unit-tests-zuul-el7/675/ : SUCCESS in 1m 57s
",True,False,7,1813.2833333333333
gooddata/gooddata-react-components/101,2017-10-23T11:53:26Z,False,59edd83e6480fdc797dc7058,`2.7.0-vaclavbohac-remove-string-enums-2017-10-23T11-52-43-439Z`,True,False,7,1813.2833333333333
gooddata/gooddata-react-components/101,2017-10-23T13:17:22Z,False,59edebe56480fdc6dafd1b7d,"Build succeeded (check pipeline).

- https://ci.intgdc.com/job/gooddata-react-components-opensource-repository-check/39/ : SUCCESS in 16s
- https://ci.intgdc.com/job/gooddata-react-components-unit-tests-zuul-el7/678/ : SUCCESS in 1m 41s
",True,False,7,1813.2833333333333
gooddata/gooddata-react-components/101,2017-10-23T16:20:45Z,False,59ee1cff6480fdccbf25e0a7,`2.7.0-vaclavbohac-remove-string-enums-2017-10-23T16-20-07-871Z`,True,False,7,1813.2833333333333
gooddata/gooddata-react-components/101,2017-10-23T16:21:15Z,False,59ee1d0a6480fdc7928b5b04,"Build succeeded (check pipeline).

- https://ci.intgdc.com/job/gooddata-react-components-opensource-repository-check/41/ : SUCCESS in 7s
- https://ci.intgdc.com/job/gooddata-react-components-unit-tests-zuul-el7/680/ : SUCCESS in 55s
",True,False,7,1813.2833333333333
pmmp_____PocketMine-MP_____1476,2017-10-23T18:04:47Z,True,pmmp_____PocketMine-MP_____1476_____338746164,"@SOF3 May you explain the queing feature? In general, is there a forums thread yet? This could keep offtoppic questions out. If so, edit my message and put the link here: <link>",True,True,74,257775.83333333334
gooddata/gooddata-react-components/101,2017-10-24T12:28:45Z,False,59ef32016480fdc7c3267841,"Build succeeded (check pipeline).

- https://ci.intgdc.com/job/gooddata-react-components-opensource-repository-check/45/ : SUCCESS in 7s
- https://ci.intgdc.com/job/gooddata-react-components-unit-tests-zuul-el7/684/ : SUCCESS in 1m 53s
",True,False,7,1813.2833333333333
gooddata/gooddata-react-components/101,2017-10-24T12:38:00Z,False,59ef342f6480fdc8c8d5fa12,"Build succeeded (gate pipeline).

- https://ci.intgdc.com/job/gooddata-react-components-merge-compliance-check/71/ : SUCCESS in 28s
- https://ci.intgdc.com/job/gooddata-react-components-unit-tests-zuul-el7/685/ : SUCCESS in 1m 03s
",True,False,7,1813.2833333333333
totorototo/strava/71,2017-10-27T23:10:49Z,False,59f4c0c56480fd8b67949535,"Object.entries(activities).reduce((accumulator, [id,activity])=>({.........}))",True,False,25,4189.35
totorototo/strava/71,2017-10-27T23:12:20Z,False,59f4c0c56480fd84e93d6a29,overalPerformance?,True,False,25,4189.35
totorototo/strava/71,2017-10-27T23:13:28Z,False,59f4c0c56480fd89b7398546,WTF? duration can be negative?,True,False,25,4189.35
totorototo/strava/71,2017-10-27T23:15:51Z,False,59f4c0c56480fd8bda0fa0bf,"don't format percent, it should be done at rendering",True,False,25,4189.35
totorototo/strava/71,2017-10-28T17:40:58Z,False,59f4c12e6480fd88b406a65e,don't trust anyone! 🐰 ,True,False,25,4189.35
totorototo/strava/71,2017-10-28T17:41:36Z,False,59f4c1566480fd8bda0fa0ed,you're right! it hurts!,True,False,25,4189.35
totorototo/strava/71,2017-10-28T17:42:18Z,False,59f4c17f6480fd84fe6d36ae,"better than sum, indeed.
",True,False,25,4189.35
totorototo/strava/71,2017-10-28T17:43:00Z,False,59f4c1a76480fd863de547dd,roger that!,True,False,25,4189.35
totorototo/strava/71,2017-10-28T17:52:10Z,False,59f4c3cb6480fd847d101ed0,"not sure about this one! 

",True,False,25,4189.35
totorototo/strava/71,2017-10-28T18:07:06Z,False,59f4c7746480fd87d0c0f233,here: id = current value,True,False,25,4189.35
totorototo/strava/71,2017-10-28T18:17:21Z,False,59f4c9b86480fd853d855f35,i am  and i meant it for each ,True,False,25,4189.35
totorototo/strava/71,2017-10-28T18:19:29Z,False,59f4ca336480fd87d0c0f328,i used destructuring with array,True,False,25,4189.35
totorototo/strava/71,2017-10-28T18:24:30Z,False,59f4cb636480fd85e3052cb4,"what is heuristic value or unit for selectors or vues?
how could they know how to convert this from whatever it is to percent? 
this logic should stay in service! this is pure service stuff! This is the contract! 
Service return percent! Then selectors or view could do whatever they want / need with that! 
",True,False,25,4189.35
totorototo/strava/71,2017-10-29T09:54:26Z,False,59f5a5556480fd8dac73e7fd,0.5 is 50% what you are doing is display logic,True,False,25,4189.35
totorototo/strava/71,2017-10-29T11:32:34Z,False,59f5bc556480fd8511f2ced6,"this should be ok! Anyway, something must be done about cards and how their children could be displayed. Thoughts available for all kind of cards. ",True,False,25,4189.35
totorototo/strava/71,2017-10-29T21:48:04Z,False,59f64c976480fd89f9fa6de8,you right :D ,True,False,25,4189.35
totorototo/strava/71,2017-10-29T21:54:51Z,False,59f64e456480fd85e3059975,was units wrong?  ,True,False,25,4189.35
totorototo/strava/71,2017-10-30T09:03:55Z,False,59f6eafe6480fd8586d12341,"all of that should be handled by view - selector! 
psycho-rigid' styl'",True,False,25,4189.35
totorototo/strava/71,2017-10-30T09:12:50Z,False,59f6ed156480fd8aed919c79,Got some issue with athlete details card. Got some with the brand new club feed card (new branch). ,True,False,25,4189.35
totorototo/strava/71,2017-10-30T15:23:05Z,False,59f743df6480fd8c544aebff,ok so why didnt you change units?,True,False,25,4189.35
totorototo/strava/71,2017-10-30T15:29:08Z,False,59f745486480fd8b0639555e,"don't get your point! you want me to get ride of unit? 
ps: I was thinking about implementing a SI unit sytem to fix this! ",True,False,25,4189.35
totorototo/strava/71,2017-10-30T20:57:17Z,False,59f792326480fd863de645d8,m/s,True,False,25,4189.35
totorototo/strava/71,2017-10-30T20:58:26Z,False,59f7927c6480fd84d4263d05,"you should kidding me!!!!!!!
m/s === m.s-1 ",True,False,25,4189.35
totorototo/strava/71,2017-10-30T20:58:36Z,False,59f792976480fd847d111c75,"units: ""number of runs"" ????",True,False,25,4189.35
totorototo/strava/71,2017-10-30T21:00:10Z,False,59f792e26480fd88b407a582,"not a si unit!
",True,False,25,4189.35
todotxt/todo.txt-android/493,2017-10-31T13:05:20Z,False,59f875196480fd88b407fd3a,@CalumJEadie ,True,False,2,0.2
todotxt/todo.txt-android/493,2017-10-31T13:05:32Z,False,59f875206480fd84fe6e8e39,can u check this ? @dssagar93 ,True,False,2,0.2
ReactionMechanismGenerator/RMG-database/215,2017-11-03T01:40:41Z,False,59fbc91f6480fd86936bdc1d,"Reactions by
`P. Raghunath, N.T. Nghia, M.C. Lin, Advances in Quantum Chemistry, 2014, 69, 253-301, doi: 10.1016/B978-0-12-800345-9.00007-6 `
were commented out from the SOxNOx library (as well as from the LowT sub-library and deleted from respective training reactions) since some rates from this source seem unreasonable (one reaction has a rate O(20) lower than a calculation by Klippenstein). This resulted in a significant deviation in the NC test, which now seems to be solved. The commented out reactions are documented in #133 . I don't think this is a units error, since many are first order (s^-1), including the one with the large discrepancy I mentioned.",True,False,5,62521.316666666666
pmmp_____PocketMine-MP_____1476,2017-11-04T17:28:59Z,True,pmmp_____PocketMine-MP_____1476_____341915032,"Found something whereas i am not sure if intended to behave like that or a bug:

When returning $this as ?Form in onSubmit, It sends the same formular again after having it submitted, when submitting a second time it does not though.",True,True,74,257775.83333333334
pmmp_____PocketMine-MP_____1476,2017-11-04T17:39:31Z,True,pmmp_____PocketMine-MP_____1476_____341915741,"sounds like a bug to me, you shouldn't be able to send the same form twice at all.",True,True,74,257775.83333333334
fireice-uk/xmr-stak/90,2017-11-04T20:32:50Z,False,59fe23f86480fd8aed94983f,"If I try to add a server with tls port I always get thise rror

```
2017-11-04 21:29:39] : Fast-connecting to pool.usxmrpool.com:10443 pool ...
[2017-11-04 21:29:39] : SOCKET ERROR - 
```

```
pools.emplace_back(2, "" pool.usxmrpool.com:10443"",jconf::inst()->GetWalletAddress(),""x"",0.5,false,true);
```",True,False,43,6984.2
fireice-uk/xmr-stak/90,2017-11-04T20:39:31Z,False,59fe25866480fd8c07ffc254,"If I add two pools I get always a socket closed error:

```
[2017-11-04 21:38:11] : Fast-connecting to xmr.crypto-pool.fr:3333 pool ...
[2017-11-04 21:38:11] : Fast-connecting to pool.usxmrpool.com:3333 pool ...
[2017-11-04 21:38:11] : Pool xmr.crypto-pool.fr:3333 connected. Logging in...
[2017-11-04 21:38:12] : Pool pool.usxmrpool.com:3333 connected. Logging in...
[2017-11-04 21:38:12] : Difficulty changed. Now: 18000.
[2017-11-04 21:38:12] : Pool logged in.
[2017-11-04 21:38:14] : SOCKET ERROR - RECEIVE error: socket closed
```

```
	pools.emplace_back(0, jconf::inst()->GetTlsSetting() ? ""donate.xmr-stak.net:6666"" : ""donate.xmr-stak.net:3333"", """", """", 0.0, true, jconf::inst()->GetTlsSetting());
	pools.emplace_back(1, ""xmr.crypto-pool.fr:3333"",jconf::inst()->GetWalletAddress(),""x"",0.9,false,false);
//	pools.emplace_back(2, ""xmr.crypto-pool.fr:8443"",jconf::inst()->GetWalletAddress(),""x"",0.5,false,true);
	pools.emplace_back(2, ""pool.usxmrpool.com:3333"",jconf::inst()->GetWalletAddress(),""x"",0.1,false,false);
```",True,False,43,6984.2
sonata-project/SonataPageBundle/688,2017-11-04T22:04:59Z,False,59fe398e6480fd8df486c158,Closing in favor of #894,True,False,21,695972.8666666667
fireice-uk/xmr-stak/90,2017-11-04T23:07:56Z,False,59fe484d6480fd8e1f0188d6,"@psychocrypt This is cosmetic. If the miner has no active connections, it will try all pools at once (Fast-connect). If both pools are OK it will pick the one with greater weight.

I will silence that error fairly soon.",True,False,43,6984.2
fireice-uk/xmr-stak/90,2017-11-05T19:44:06Z,False,59ff6a0e6480fd84a9affe16,"My tests show that:

- if all user pools are down, the miner is not switching to the dev pool to bypass the user pool downlimes
- if all pools inclusive the dev pool is down than the miner not stops.
- if I start with a pool with low weighting and later activate the pool with the high weighting the miner will never switch to the high weighting pool. I wait also for the dev pool round but also after the dev pool round ends the miner is not selecting the pool with the high weighting.",True,False,43,6984.2
fireice-uk/xmr-stak/90,2017-11-05T20:21:38Z,False,59ff72d56480fd8ce0077c10,Note: we need to make the nicehash option configurable for each pool.,True,False,43,6984.2
fireice-uk/xmr-stak/90,2017-11-05T20:40:31Z,False,59ff77416480fdd56a7a00f9,"I checked the problem that you had with TLS - it was due to poor (outdated) TLS support on that pool. I updated the error message instead

- if all user pools are down, the miner is not switching to the dev pool to bypass the user pool downlimes

This is by design. My preferred option in that circumstance is to stop mining to save user's power.

- if all pools inclusive the dev pool is down than the miner not stops.

Will look into that.

- if I start with a pool with low weighting and later activate the pool with the high weighting the miner will never switch to the high weighting pool. I wait also for the dev pool round but also after the dev pool round ends the miner is not selecting the pool with the high weighting.

I will think about how to best implement that",True,False,43,6984.2
fireice-uk/xmr-stak/90,2017-11-05T20:56:49Z,False,59ff7b146480fdd431c495b3,"> if all pools inclusive the dev pool is down than the miner not stops.

Can you post the steps to reproduce? For me it seems to idle (correct behaviour).",True,False,43,6984.2
fireice-uk/xmr-stak/90,2017-11-06T01:16:55Z,False,59ffb80a6480fdd41c7d0d8a,@psychocrypt I think this concludes the technical side. Can you give it a good testing while I work on the guided setup?,True,False,43,6984.2
fireice-uk/xmr-stak/90,2017-11-06T19:38:48Z,False,5a00ba4b6480fd13f188e62a,"I have still the issue that the miner not ends if all pools are down:

1. start all three pools (from this PR)
2. start the miner
3. stop pool with low priority
4. stop pool with high priority
5. miner begins to try fast connects

```
017-11-06 20:34:56] : Fast-connecting to 127.0.0.1:4001 pool ...
[2017-11-06 20:34:56] : Fast-connecting to 127.0.0.1:4002 pool ...
[2017-11-06 20:34:56] : SOCKET ERROR - [127.0.0.1:4002] CONNECT error: Connection refused
[2017-11-06 20:34:56] : SOCKET ERROR - [127.0.0.1:4001] CONNECT error: Connection refused
[2017-11-06 20:34:58] : Fast-connecting to 127.0.0.1:4001 pool ...
[2017-11-06 20:34:58] : Fast-connecting to 127.0.0.1:4002 pool ...
[2017-11-06 20:34:58] : SOCKET ERROR - [127.0.0.1:4002] CONNECT error: Connection refused
[2017-11-06 20:34:58] : SOCKET ERROR - [127.0.0.1:4001] CONNECT error: Connection refused
[2017-11-06 20:35:00] : Fast-connecting to 127.0.0.1:4001 pool ...
[2017-11-06 20:35:00] : Fast-connecting to 127.0.0.1:4002 pool ...
[2017-11-06 20:35:00] : SOCKET ERROR - [127.0.0.1:4002] CONNECT error: Connection refused
[2017-11-06 20:35:00] : SOCKET ERROR - [127.0.0.1:4001] CONNECT error: Connection refused
[2017-11-06 20:35:02] : Fast-connecting to 127.0.0.1:4001 pool ...
[2017-11-06 20:35:02] : Fast-connecting to 127.0.0.1:4002 pool ...
[2017-11-06 20:35:02] : SOCKET ERROR - [127.0.0.1:4001] CONNECT error: Connection refused
[2017-11-06 20:35:02] : SOCKET ERROR - [127.0.0.1:4002] CONNECT error: Connection refused
```",True,False,43,6984.2
fireice-uk/xmr-stak/90,2017-11-06T19:54:12Z,False,5a00bdf86480fd134c8edeaf,"second issue:

```
	dev_timestamp = get_timestamp();
	pools.emplace_back(0, ""127.0.0.1:4000""/*jconf::inst()->GetTlsSetting() ? ""donate.xmr-stak.net:6666"" : ""donate.xmr-stak.net:3333""*/, """", """", 0.0, true, jconf::inst()->GetTlsSetting(), false);
	pools.emplace_back(1, ""127.0.0.1:4001"", jconf::inst()->GetWalletAddress(), jconf::inst()->GetPoolPwd(), 1.0, false, jconf::inst()->GetTlsSetting(), true);
	pools.emplace_back(2, ""127.0.0.1:4002""/*jconf::inst()->GetPoolAddress()*/, jconf::inst()->GetWalletAddress(), jconf::inst()->GetPoolPwd(), 0.5, false, jconf::inst()->GetTlsSetting(), true);
	pools.emplace_back(3, ""127.0.0.1:4003""/*jconf::inst()->GetPoolAddress()*/, jconf::inst()->GetWalletAddress(), jconf::inst()->GetPoolPwd(), 1.0, false, jconf::inst()->GetTlsSetting(), true);
```

1. start all pools
2. start miner
3. stop pool port 4001
4. stop pool port 4003
5. the miner switched in a state where a few shares are accepted but the miner tries to connect to the dead pools

```
[2017-11-06 20:49:35] : SOCKET ERROR - [127.0.0.1:4001] CONNECT error: Connection refused
[2017-11-06 20:49:35] : Connected to 127.0.0.1:4003 pool ...
[2017-11-06 20:49:35] : SOCKET ERROR - [127.0.0.1:4003] CONNECT error: Connection refused
[2017-11-06 20:49:35] : Result accepted by the pool.
[2017-11-06 20:49:37] : Connected to 127.0.0.1:4001 pool ...
[2017-11-06 20:49:37] : SOCKET ERROR - [127.0.0.1:4001] CONNECT error: Connection refused
[2017-11-06 20:49:37] : Connected to 127.0.0.1:4003 pool ...
[2017-11-06 20:49:37] : SOCKET ERROR - [127.0.0.1:4003] CONNECT error: Connection refused
[2017-11-06 20:49:39] : Connected to 127.0.0.1:4001 pool ...
[2017-11-06 20:49:39] : SOCKET ERROR - [127.0.0.1:4001] CONNECT error: Connection refused
[2017-11-06 20:49:39] : Connected to 127.0.0.1:4003 pool ...
[2017-11-06 20:49:39] : SOCKET ERROR - [127.0.0.1:4003] CONNECT error: Connection refused
[2017-11-06 20:49:41] : Connected to 127.0.0.1:4001 pool ...
[2017-11-06 20:49:41] : SOCKET ERROR - [127.0.0.1:4001] CONNECT error: Connection refused
[2017-11-06 20:49:41] : Connected to 127.0.0.1:4003 pool ...
[2017-11-06 20:49:41] : SOCKET ERROR - [127.0.0.1:4003] CONNECT error: Connection refused
[2017-11-06 20:49:43] : Connected to 127.0.0.1:4001 pool ...
[2017-11-06 20:49:43] : SOCKET ERROR - [127.0.0.1:4001] CONNECT error: Connection refused
[2017-11-06 20:49:43] : Connected to 127.0.0.1:4003 pool ...
[2017-11-06 20:49:43] : SOCKET ERROR - [127.0.0.1:4003] CONNECT error: Connection refused
[2017-11-06 20:49:45] : Connected to 127.0.0.1:4001 pool ...
[2017-11-06 20:49:45] : SOCKET ERROR - [127.0.0.1:4001] CONNECT error: Connection refused
[2017-11-06 20:49:45] : Connected to 127.0.0.1:4003 pool ...
[2017-11-06 20:49:45] : SOCKET ERROR - [127.0.0.1:4003] CONNECT error: Connection refused
[2017-11-06 20:49:47] : Connected to 127.0.0.1:4001 pool ...
[2017-11-06 20:49:47] : SOCKET ERROR - [127.0.0.1:4001] CONNECT error: Connection refused
[2017-11-06 20:49:47] : Connected to 127.0.0.1:4003 pool ...
[2017-11-06 20:49:47] : SOCKET ERROR - [127.0.0.1:4003] CONNECT error: Connection refused
```",True,False,43,6984.2
fireice-uk/xmr-stak/90,2017-11-06T20:17:53Z,False,5a00c37a6480fd197aaa9fd6,"The reason for the [last issue](https://github.com/fireice-uk/xmr-stak/pull/90#issuecomment-342266574) is that the only available pool has a weighting lower than the offline pool. I can reproduce the behavior if I start only the second pool.

```
	pools.emplace_back(0, ""127.0.0.1:4000""/*jconf::inst()->GetTlsSetting() ? ""donate.xmr-stak.net:6666"" : ""donate.xmr-stak.net:3333""*/, """", """", 0.0, true, jconf::inst()->GetTlsSetting(), false);
	pools.emplace_back(1, ""127.0.0.1:4001"", jconf::inst()->GetWalletAddress(), jconf::inst()->GetPoolPwd(), 1.0, false, jconf::inst()->GetTlsSetting(), true);
	pools.emplace_back(2, ""127.0.0.1:4002""/*jconf::inst()->GetPoolAddress()*/, jconf::inst()->GetWalletAddress(), jconf::inst()->GetPoolPwd(), 0.9, false, jconf::inst()->GetTlsSetting(), true);
``` 

```
[2017-11-06 21:15:20] : hwloc: memory pinned
[2017-11-06 21:15:20] : Starting single thread, affinity: 1.
[2017-11-06 21:15:20] : MEMORY ALLOC FAILED: mmap failed
[2017-11-06 21:15:20] : hwloc: memory pinned
[2017-11-06 21:15:20] : MEMORY ALLOC FAILED: mmap failed
[2017-11-06 21:15:20] : Fast-connecting to 127.0.0.1:4001 pool ...
[2017-11-06 21:15:20] : Fast-connecting to 127.0.0.1:4004 pool ...
[2017-11-06 21:15:20] : Pool 127.0.0.1:4004 connected. Logging in...
[2017-11-06 21:15:20] : SOCKET ERROR - [127.0.0.1:4001] CONNECT error: Connection refused
[2017-11-06 21:15:20] : Difficulty changed. Now: 1024.
[2017-11-06 21:15:20] : Pool logged in.
[2017-11-06 21:15:20] : Difficulty changed. Now: 1024.
[2017-11-06 21:15:20] : New block detected.
[2017-11-06 21:15:22] : Connected to 127.0.0.1:4001 pool ...
[2017-11-06 21:15:22] : SOCKET ERROR - [127.0.0.1:4001] CONNECT error: Connection refused
[2017-11-06 21:15:24] : Connected to 127.0.0.1:4001 pool ...
[2017-11-06 21:15:24] : SOCKET ERROR - [127.0.0.1:4001] CONNECT error: Connection refused
[2017-11-06 21:15:25] : Result accepted by the pool.
[2017-11-06 21:15:26] : Connected to 127.0.0.1:4001 pool ...
[2017-11-06 21:15:26] : SOCKET ERROR - [127.0.0.1:4001] CONNECT error: Connection refused
```",True,False,43,6984.2
ocaml/opam-repository/10626,2017-11-06T21:44:44Z,False,5a00d7d26480fd16aab995d2,"##### :white_check_mark: All lint checks passed <small>72e212c0aef051a83675627cd1ae92aca7f45530</small>

* These packages passed lint tests: `dns-async.1.0.1`, `dns-lwt-unix.1.0.1`, `dns-lwt.1.0.1`, `dns.1.0.1`, `mirage-dns.3.0.1`


---


##### :white_check_mark: Installability check (7689 &rarr; 7694)

* new installable packages (5): `dns.1.0.1` `dns-async.1.0.1` `dns-lwt.1.0.1`
  `dns-lwt-unix.1.0.1` `mirage-dns.3.0.1`
",True,False,5,5365.133333333333
fireice-uk/xmr-stak/90,2017-11-06T22:59:08Z,False,5a00e9426480fd18bde97ef7,"This should fix both issues - thanks for finding them! 

To test miner exit, make sure you set giveup_limit in the config.",True,False,43,6984.2
ocaml/opam-repository/10626,2017-11-07T14:53:49Z,False,5a01c9086480fd1470617c55,The travis failures are build failures of `bin_prot` (a dependency),True,False,5,5365.133333333333
DGtal-team/DGtal/1266,2017-11-07T16:10:21Z,False,5a01daf66480fd131f5f1e8b,Ok. I have to add some user doc.,True,False,66,246101.18333333332
DGtal-team/DGtal/1266,2017-11-07T16:20:51Z,False,5a01de156480fd1470618950,ok,True,False,66,246101.18333333332
DGtal-team/DGtal/1266,2017-11-07T16:20:57Z,False,5a01de146480fd14457b2a12,ok,True,False,66,246101.18333333332
DGtal-team/DGtal/1266,2017-11-07T16:22:03Z,False,5a01de556480fd12e00e0803,"Sur wikipedia English, c'est polygon mesh.",True,False,66,246101.18333333332
DGtal-team/DGtal/1266,2017-11-07T16:26:09Z,False,5a01df476480fd1310d85c73,"I add ""@see""
",True,False,66,246101.18333333332
DGtal-team/DGtal/1266,2017-11-07T16:33:03Z,False,5a01e0d96480fd1371539841,"After some time on English grammar forums, it seems that ""a half"" is the correct writing.",True,False,66,246101.18333333332
DGtal-team/DGtal/1266,2017-11-07T16:38:07Z,False,5a01e1f66480fd19ebe64e31,"It's just that the first build method only requires triangles. So it defines some order for edges. If you wish to force the numbering of edges, you can use the other build method (where the numbering of edges is specified).",True,False,66,246101.18333333332
DGtal-team/DGtal/1266,2017-11-07T16:41:44Z,False,5a01e2af6480fd1409679d77,I have given the definition of arc right away (couple of vertices),True,False,66,246101.18333333332
DGtal-team/DGtal/1266,2017-11-07T16:42:08Z,False,5a01e2cd6480fd15c4e60be9,"ok
",True,False,66,246101.18333333332
DGtal-team/DGtal/1266,2017-11-07T16:43:02Z,False,5a01e3016480fd1a6dda4693,"Since an arc is a couple of vertices, yes they are oriented edges.",True,False,66,246101.18333333332
DGtal-team/DGtal/1266,2017-11-07T16:52:40Z,False,5a01e4e46480fd181f449bc5,I think I just understood what is the problem. It is that HalfEdgeDataStructure is not a template class. So BOOST_STATIC_CONSTANT seems not to work properly for static constants within normal classes. I wonder if it useful to dwell more into that issue.,True,False,66,246101.18333333332
ocaml/opam-repository/10626,2017-11-07T20:55:34Z,False,5a021dcb6480fd134c8f8185,I've opened a PR that constraints older bin_prot,True,False,5,5365.133333333333
MPAS-Dev/MPAS-Analysis/259,2017-11-07T22:04:53Z,False,5a022e0a6480fd12ce28a08d,"## Testing

I've tested one run each (both batch mode and on the login node) on:
* Edison
* Anvil
* Wolf
* Grizzly
* my Ubuntu laptop (both serial and parallel)
The runs are all based on the config files and job scripts provided in the `configs/` folder.

All run successfully to completion and create the HTML, though I haven't carefully looked at the output in all cases.",True,False,57,52798.65
MPAS-Dev/MPAS-Analysis/259,2017-11-07T22:05:42Z,False,5a022e3d6480fd14457b5447,"@vanroekel, would you have time to run a quick test on Anvil or Theta or wherever is convenient for you?  If you're happy with it, I would like to merge later today if possible.",True,False,57,52798.65
MPAS-Dev/MPAS-Analysis/259,2017-11-07T22:14:55Z,False,5a0230636480fd18bdea1bb0,"@xylar sure, I'll try it out on theta and try to get it before the end of the day.",True,False,57,52798.65
fireice-uk/xmr-stak/90,2017-11-07T22:16:06Z,False,5a0230ad6480fd137153c3c8,"I have still issues:

1. start all 4 pools
2. start miner
3. stop pool with port 4001

```
[2017-11-07 23:14:03] : Pool 127.0.0.1:4003 connected. Logging in...
[2017-11-07 23:14:03] : Pool 127.0.0.1:4002 connected. Logging in...
[2017-11-07 23:14:04] : Difficulty changed. Now: 1024.
[2017-11-07 23:14:04] : Pool switched.
[2017-11-07 23:14:06] : Background-connect to 127.0.0.1:4001 pool ...
[2017-11-07 23:14:06] : SOCKET ERROR - [127.0.0.1:4001] CONNECT error: Connection refused
[2017-11-07 23:14:08] : Background-connect to 127.0.0.1:4001 pool ...
[2017-11-07 23:14:08] : SOCKET ERROR - [127.0.0.1:4001] CONNECT error: Connection refused
[2017-11-07 23:14:10] : Result accepted by the pool.
[2017-11-07 23:14:10] : Background-connect to 127.0.0.1:4001 pool ...
[2017-11-07 23:14:10] : SOCKET ERROR - [127.0.0.1:4001] CONNECT error: Connection refused
[2017-11-07 23:14:12] : Background-connect to 127.0.0.1:4001 pool ...
[2017-11-07 23:14:12] : SOCKET ERROR - [127.0.0.1:4001] CONNECT error: Connection refused
[2017-11-07 23:14:14] : Result accepted by the pool.
[2017-11-07 23:14:14] : Background-connect to 127.0.0.1:4001 pool ...
[2017-11-07 23:14:14] : SOCKET ERROR - [127.0.0.1:4001] CONNECT error: Connection refused
[2017-11-07 23:14:16] : Background-connect to 127.0.0.1:4001 pool ...
[2017-11-07 23:14:16] : SOCKET ERROR - [127.0.0.1:4001] CONNECT error: Connection refused
[2017-11-07 23:14:18] : Background-connect to 127.0.0.1:4001 pool ...
[2017-11-07 23:14:18] : SOCKET ERROR - [127.0.0.1:4001] CONNECT error: Connection refused
[2017-11-07 23:14:19] : Result accepted by the pool.
```",True,False,43,6984.2
fireice-uk/xmr-stak/90,2017-11-07T22:20:11Z,False,5a0231a76480fd181f44c416,"To reproduce my last issue you need to set `""giveup_limit"" : 0,`. If give up limit is 3 than the error is only shown 3 times.",True,False,43,6984.2
fireice-uk/xmr-stak/90,2017-11-07T22:42:13Z,False,5a0236d26480fd13f1899714,"@psychocrypt I can't reproduce this one - can you give me your weights for 4001, 4002 and 4003 pools, roll back bec0bc0 and post the output with the timer and giveup count?",True,False,43,6984.2
MPAS-Dev/MPAS-Analysis/259,2017-11-08T04:36:08Z,False,5a0318906480fd1aca6f468f,should this be stackTrace?,True,False,57,52798.65
fireice-uk/xmr-stak/90,2017-11-08T08:06:02Z,False,5a02baf16480fd13c8bb2dc1,"@fireice-uk 

I used exactly the PR pools you checked in. I now only re-added the counter.

1. start all pools
2. start miner
3.stop pool port 4001

**Note** You need change `giveup_limit = 0,` to reproduce the issue.
```
""call_timeout"" : 10,
""retry_time"" : 3,
""giveup_limit"" : 0,

```

Terminal:
```
[2017-11-08 09:05:08] : Starting single thread, affinity: 0.
[2017-11-08 09:05:08] : hwloc: memory pinned
[2017-11-08 09:05:08] : Starting single thread, affinity: 1.
[2017-11-08 09:05:08] : MEMORY ALLOC FAILED: mmap failed
[2017-11-08 09:05:09] : hwloc: memory pinned
[2017-11-08 09:05:09] : MEMORY ALLOC FAILED: mmap failed
[2017-11-08 09:05:09] : [127.0.0.1:4001] 0 0
[2017-11-08 09:05:09] : [127.0.0.1:4002] 0 0
[2017-11-08 09:05:09] : [127.0.0.1:4003] 0 0
[2017-11-08 09:05:09] : Fast-connecting to 127.0.0.1:4001 pool ...
[2017-11-08 09:05:09] : Fast-connecting to 127.0.0.1:4002 pool ...
[2017-11-08 09:05:09] : Fast-connecting to 127.0.0.1:4003 pool ...
[2017-11-08 09:05:09] : Pool 127.0.0.1:4003 connected. Logging in...
[2017-11-08 09:05:09] : Pool 127.0.0.1:4002 connected. Logging in...
[2017-11-08 09:05:09] : Pool 127.0.0.1:4001 connected. Logging in...
[2017-11-08 09:05:09] : [127.0.0.1:4001] 0 0
[2017-11-08 09:05:09] : [127.0.0.1:4002] 0 0
[2017-11-08 09:05:09] : [127.0.0.1:4003] 0 0
[2017-11-08 09:05:09] : Difficulty changed. Now: 1024.
[2017-11-08 09:05:09] : Pool logged in.
[2017-11-08 09:05:11] : [127.0.0.1:4001] 0 0
[2017-11-08 09:05:11] : [127.0.0.1:4002] 0 0
[2017-11-08 09:05:11] : [127.0.0.1:4003] 0 0
[2017-11-08 09:05:13] : [127.0.0.1:4001] 0 0
[2017-11-08 09:05:13] : [127.0.0.1:4002] 0 0
[2017-11-08 09:05:13] : [127.0.0.1:4003] 0 0
[2017-11-08 09:05:15] : [127.0.0.1:4001] 0 0
[2017-11-08 09:05:15] : [127.0.0.1:4002] 0 0
[2017-11-08 09:05:15] : [127.0.0.1:4003] 0 0
[2017-11-08 09:05:15] : Result accepted by the pool.
[2017-11-08 09:05:15] : SOCKET ERROR - [127.0.0.1:4001] RECEIVE error: socket closed
[2017-11-08 09:05:15] : [127.0.0.1:4001] 0 1
[2017-11-08 09:05:15] : [127.0.0.1:4002] 0 0
[2017-11-08 09:05:15] : [127.0.0.1:4003] 0 0
[2017-11-08 09:05:15] : Fast-connecting to 127.0.0.1:4002 pool ...
[2017-11-08 09:05:15] : Fast-connecting to 127.0.0.1:4003 pool ...
[2017-11-08 09:05:15] : Pool 127.0.0.1:4003 connected. Logging in...
[2017-11-08 09:05:15] : Pool 127.0.0.1:4002 connected. Logging in...
[2017-11-08 09:05:17] : [127.0.0.1:4001] 0 2
[2017-11-08 09:05:17] : [127.0.0.1:4002] 0 0
[2017-11-08 09:05:17] : [127.0.0.1:4003] 0 0
[2017-11-08 09:05:17] : Difficulty changed. Now: 1024.
[2017-11-08 09:05:17] : Pool switched.
[2017-11-08 09:05:19] : [127.0.0.1:4001] 0 4
[2017-11-08 09:05:19] : [127.0.0.1:4002] 0 0
[2017-11-08 09:05:19] : [127.0.0.1:4003] 0 0
[2017-11-08 09:05:19] : Background-connect to 127.0.0.1:4001 pool ...
[2017-11-08 09:05:19] : SOCKET ERROR - [127.0.0.1:4001] CONNECT error: Connection refused
[2017-11-08 09:05:19] : [127.0.0.1:4001] 1 1
[2017-11-08 09:05:19] : [127.0.0.1:4002] 0 0
[2017-11-08 09:05:19] : [127.0.0.1:4003] 0 0
[2017-11-08 09:05:21] : [127.0.0.1:4001] 1 3
[2017-11-08 09:05:21] : [127.0.0.1:4002] 0 0
[2017-11-08 09:05:21] : [127.0.0.1:4003] 0 0
[2017-11-08 09:05:21] : Background-connect to 127.0.0.1:4001 pool ...
[2017-11-08 09:05:21] : SOCKET ERROR - [127.0.0.1:4001] CONNECT error: Connection refused
[2017-11-08 09:05:21] : [127.0.0.1:4001] 2 1
[2017-11-08 09:05:21] : [127.0.0.1:4002] 0 0
[2017-11-08 09:05:21] : [127.0.0.1:4003] 0 0
[2017-11-08 09:05:23] : Result accepted by the pool.
[2017-11-08 09:05:23] : [127.0.0.1:4001] 2 3
[2017-11-08 09:05:23] : [127.0.0.1:4002] 0 0
[2017-11-08 09:05:23] : [127.0.0.1:4003] 0 0
[2017-11-08 09:05:23] : Background-connect to 127.0.0.1:4001 pool ...
[2017-11-08 09:05:23] : SOCKET ERROR - [127.0.0.1:4001] CONNECT error: Connection refused
[2017-11-08 09:05:23] : [127.0.0.1:4001] 3 1
[2017-11-08 09:05:23] : [127.0.0.1:4002] 0 0
[2017-11-08 09:05:23] : [127.0.0.1:4003] 0 0
[2017-11-08 09:05:25] : [127.0.0.1:4001] 3 3
[2017-11-08 09:05:25] : [127.0.0.1:4002] 0 0
[2017-11-08 09:05:25] : [127.0.0.1:4003] 0 0
[2017-11-08 09:05:25] : Background-connect to 127.0.0.1:4001 pool ...
[2017-11-08 09:05:25] : SOCKET ERROR - [127.0.0.1:4001] CONNECT error: Connection refused
[2017-11-08 09:05:25] : [127.0.0.1:4001] 4 1
[2017-11-08 09:05:25] : [127.0.0.1:4002] 0 0
[2017-11-08 09:05:25] : [127.0.0.1:4003] 0 0
[2017-11-08 09:05:27] : Result accepted by the pool.
[2017-11-08 09:05:27] : [127.0.0.1:4001] 4 3
[2017-11-08 09:05:27] : [127.0.0.1:4002] 0 0
[2017-11-08 09:05:27] : [127.0.0.1:4003] 0 0
[2017-11-08 09:05:27] : Background-connect to 127.0.0.1:4001 pool ...
[2017-11-08 09:05:27] : SOCKET ERROR - [127.0.0.1:4001] CONNECT error: Connection refused
[2017-11-08 09:05:27] : [127.0.0.1:4001] 5 1
[2017-11-08 09:05:27] : [127.0.0.1:4002] 0 0
[2017-11-08 09:05:27] : [127.0.0.1:4003] 0 0
[2017-11-08 09:05:29] : [127.0.0.1:4001] 5 3
[2017-11-08 09:05:29] : [127.0.0.1:4002] 0 0
[2017-11-08 09:05:29] : [127.0.0.1:4003] 0 0
[2017-11-08 09:05:29] : Background-connect to 127.0.0.1:4001 pool ...
[2017-11-08 09:05:29] : SOCKET ERROR - [127.0.0.1:4001] CONNECT error: Connection refused
[2017-11-08 09:05:29] : [127.0.0.1:4001] 6 1
[2017-11-08 09:05:29] : [127.0.0.1:4002] 0 0
[2017-11-08 09:05:29] : [127.0.0.1:4003] 0 0
[2017-11-08 09:05:31] : [127.0.0.1:4001] 6 3
[2017-11-08 09:05:31] : [127.0.0.1:4002] 0 0
[2017-11-08 09:05:31] : [127.0.0.1:4003] 0 0
[2017-11-08 09:05:31] : Background-connect to 127.0.0.1:4001 pool ...
[2017-11-08 09:05:31] : SOCKET ERROR - [127.0.0.1:4001] CONNECT error: Connection refused
[2017-11-08 09:05:31] : [127.0.0.1:4001] 7 1
[2017-11-08 09:05:31] : [127.0.0.1:4002] 0 0
[2017-11-08 09:05:31] : [127.0.0.1:4003] 0 0
[2017-11-08 09:05:32] : Result accepted by the pool.
[2017-11-08 09:05:33] : [127.0.0.1:4001] 7 3
[2017-11-08 09:05:33] : [127.0.0.1:4002] 0 0
[2017-11-08 09:05:33] : [127.0.0.1:4003] 0 0
[2017-11-08 09:05:33] : Background-connect to 127.0.0.1:4001 pool ...
[2017-11-08 09:05:33] : SOCKET ERROR - [127.0.0.1:4001] CONNECT error: Connection refused
[2017-11-08 09:05:33] : [127.0.0.1:4001] 8 1
[2017-11-08 09:05:33] : [127.0.0.1:4002] 0 0
[2017-11-08 09:05:33] : [127.0.0.1:4003] 0 0
[2017-11-08 09:05:35] : [127.0.0.1:4001] 8 3
[2017-11-08 09:05:35] : [127.0.0.1:4002] 0 0
[2017-11-08 09:05:35] : [127.0.0.1:4003] 0 0
[2017-11-08 09:05:35] : Background-connect to 127.0.0.1:4001 pool ...
[2017-11-08 09:05:35] : SOCKET ERROR - [127.0.0.1:4001] CONNECT error: Connection refused
[2017-11-08 09:05:35] : [127.0.0.1:4001] 9 1
[2017-11-08 09:05:35] : [127.0.0.1:4002] 0 0
[2017-11-08 09:05:35] : [127.0.0.1:4003] 0 0
```",True,False,43,6984.2
renovate-tests/yarn-lock/53,2017-11-08T09:42:40Z,False,5a02d1946480fd133452c49a,"### Lock file problem

Renovate failed when attempting to generate a lock file. This is usually happens when you have private modules but have not added configuration for [private module support](https://renovateapp.com/docs/deep-dives/private-modules). It is strongly recommended that you do not merge this PR as-is.

Renovate **will not retry** generating a lockfile for this PR unless either (a) the `package.json` in this branch needs updating, or (b) you manually delete this PR so that it can be regenerated.

The output from `stderr` is included below:",True,False,1,0.0
fireice-uk/xmr-stak/90,2017-11-08T10:32:17Z,False,5a02dd336480fd15c4e67c13,"@psychocrypt can you try it with the standard retry time of 10, form your logs it looks like it is simply reconnecting fast because you asked for it in the config (the pool eval function runs every 2 seconds, so 3 second interval won't be too accurate).",True,False,43,6984.2
MPAS-Dev/MPAS-Analysis/259,2017-11-08T14:45:42Z,False,5a0318a06480fd17c404c17b,"@xylar sorry for the delay, I'm testing this right now.",True,False,57,52798.65
DGtal-team/DGtal/1266,2017-11-08T14:59:27Z,False,5a031bd46480fd13b210ddd9,Working on it. Please wait...,True,False,66,246101.18333333332
fireice-uk/xmr-stak/90,2017-11-08T17:06:40Z,False,5a0339a26480fd145b42cc8d,@psychocrypt I just merged commits from another local branch. This PR is in its final version I think.,True,False,43,6984.2
fireice-uk/xmr-stak/90,2017-11-08T17:10:55Z,False,5a033aa26480fd1310d90412,"Final tasks before merging:

- [x] Set a different dev pool port for Aeon
- [x] Restore dev pool address
- [x] Restore dev doation to normal level",True,False,43,6984.2
fireice-uk/xmr-stak/90,2017-11-08T17:21:46Z,False,5a033d2f6480fd15f748a7b2,"@psychocrypt I also added a simple check to prevent a runaway connects (connecting very fast will make the miner eval pools faster, therefore making it connect faster etc)",True,False,43,6984.2
fireice-uk/xmr-stak/90,2017-11-08T17:50:45Z,False,5a0343fa6480fd14e499ecfd,"Do you solved my last issue with the large amount of error messages?
",True,False,43,6984.2
fireice-uk/xmr-stak/90,2017-11-08T18:42:04Z,False,5a0350056480fd197aabd3be,"@psychocrypt Yes, I think that was the ""runaway connects"" -> but please test.",True,False,43,6984.2
fireice-uk/xmr-stak/90,2017-11-08T19:46:13Z,False,5a035f096480fd145b42de2b,"I still get many errors if the pool with the highest weighting goes offline.

""pool_list"" :
[
        {""pool_address"" : ""127.0.0.1:4001"", ""wallet_address"" : ""123"", ""pool_password"" : ""x"", ""use_nicehash"" : false, ""use_tls"" : false, ""tls_fingerprint"" : """", ""pool_weight"" : 1000 },
        {""pool_address"" : ""127.0.0.1:4002"", ""wallet_address"" : ""sdd"", ""pool_password"" : ""x"", ""use_nicehash"" : true, ""use_tls"" : false, ""tls_fingerprint"" : """", ""pool_weight"" : 2 },
],

Everything else is default, I created the config from scratch.

Workflow:

1. start all pools
2. start miner
3. kill pool with port 4001

Miner is trying to connect to the pool with the highest weighting during the low weighting pool is used for minig.

```
[2017-11-08 20:40:26] : MEMORY ALLOC FAILED: mmap failed
[2017-11-08 20:40:26] : Fast-connecting to 127.0.0.1:4001 pool ...
[2017-11-08 20:40:26] : Fast-connecting to 127.0.0.1:4002 pool ...
[2017-11-08 20:40:26] : Pool 127.0.0.1:4002 connected. Logging in...
[2017-11-08 20:40:26] : Pool 127.0.0.1:4001 connected. Logging in...
[2017-11-08 20:40:27] : Difficulty changed. Now: 1024.
[2017-11-08 20:40:27] : Pool logged in.
[2017-11-08 20:40:32] : Result accepted by the pool.
[2017-11-08 20:40:34] : SOCKET ERROR - [127.0.0.1:4001] RECEIVE error: socket closed
[2017-11-08 20:40:34] : Fast-connecting to 127.0.0.1:4002 pool ...
[2017-11-08 20:40:34] : Pool 127.0.0.1:4002 connected. Logging in...
[2017-11-08 20:40:35] : Difficulty changed. Now: 1024.
[2017-11-08 20:40:35] : Pool switched.
[2017-11-08 20:40:40] : Result accepted by the pool.
[2017-11-08 20:40:43] : Background-connect to 127.0.0.1:4001 pool ...
[2017-11-08 20:40:43] : SOCKET ERROR - [127.0.0.1:4001] CONNECT error: Connection refused
[2017-11-08 20:40:44] : Result accepted by the pool.
[2017-11-08 20:40:48] : Result accepted by the pool.
[2017-11-08 20:40:53] : Background-connect to 127.0.0.1:4001 pool ...
[2017-11-08 20:40:53] : SOCKET ERROR - [127.0.0.1:4001] CONNECT error: Connection refused
[2017-11-08 20:40:58] : Result accepted by the pool.
[2017-11-08 20:41:01] : Result accepted by the pool.
[2017-11-08 20:41:03] : Background-connect to 127.0.0.1:4001 pool ...
[2017-11-08 20:41:03] : SOCKET ERROR - [127.0.0.1:4001] CONNECT error: Connection refused
```",True,False,43,6984.2
fireice-uk/xmr-stak/90,2017-11-08T19:57:09Z,False,5a0361996480fd14e499fdc9,"> Miner is trying to connect to the pool with the highest weighting during the low weighting pool is used for minig.

That's by design. The miner will _prefer_ higher pool, but if it is down, it will mine on the lower pool, while connecting to the higher (unless the giveup limit is reached, in which case it will declare the pool as dead permanently).",True,False,43,6984.2
fireice-uk/xmr-stak/90,2017-11-08T20:08:26Z,False,5a0364456480fd1a41ae1996,"@fireice-uk The default give up limit is zero, this means if logs are activated there will be an error printed every 2 seconds. 
Can we avoid the high number of errors.

Can we change that the pool is only checked every 30 seconds or so. The possibility that a pool is down is not high and therefore 30sec should be enough.",True,False,43,6984.2
fireice-uk/xmr-stak/90,2017-11-08T20:10:09Z,False,5a0367de6480fd15ac54f11b,could you please use `std::string` as return type,True,False,43,6984.2
fireice-uk/xmr-stak/90,2017-11-08T20:10:47Z,False,5a0367dd6480fd149d03c58c,please use `const std::string str` as parameter,True,False,43,6984.2
fireice-uk/xmr-stak/90,2017-11-08T20:20:35Z,False,5a0367de6480fd1aca6f7560,could you please use `std::string` this is more save and this part is not time critical.,True,False,43,6984.2
fireice-uk/xmr-stak/90,2017-11-08T20:44:36Z,False,5a036cbe6480fd197aabe234,Those are pointers to read-only memory loaded with the binary. There is no point to wrapping them in objects as we will never write to them (str here is just a const string printed to the screen as user prompt),True,False,43,6984.2
fireice-uk/xmr-stak/90,2017-11-08T20:45:11Z,False,5a036cda6480fd149d03c7e5,"Same as above, this std::string here is just useless busywork.",True,False,43,6984.2
fireice-uk/xmr-stak/90,2017-11-08T20:47:35Z,False,5a036d6e6480fd13c8bb8a6b,Since the JSON lib returns const char* I prefer to keep it this way until we need to store the string (when the constructor runs). I found that many people find c++ rvalue refs confusing.,True,False,43,6984.2
fireice-uk/xmr-stak/90,2017-11-08T21:28:25Z,False,5a0376fc6480fd14c900aaf3,"> Can we change that the pool is only checked every 30 seconds or so. The possibility that a pool is down is not high and therefore 30sec should be enough.

I agree, do note that the value is called retry_time, giveup_limit specifies **how many** times we should try before we stop trying altogether.",True,False,43,6984.2
fireice-uk/xmr-stak/90,2017-11-08T21:53:18Z,False,5a037cd86480fd135e5c9b36,"Issue: The give up is not counting for the dev pool:

1. start all miner pools (not dev pool)
2. start miner
3. as soon as the miner tries to switch to the dev pool we get connection errors (looks like the never end)

```
[2017-11-08 22:49:33] : Result accepted by the pool.
[2017-11-08 22:49:44] : Result accepted by the pool.
[2017-11-08 22:49:50] : Result accepted by the pool.
[2017-11-08 22:49:58] : Result accepted by the pool.
[2017-11-08 22:50:07] : Result accepted by the pool.
[2017-11-08 22:50:14] : Fast-connecting to dev pool ...
[2017-11-08 22:50:14] : Dev pool socket error - mining on user pool...
[2017-11-08 22:50:18] : Fast-connecting to dev pool ...
[2017-11-08 22:50:18] : Dev pool socket error - mining on user pool...
[2017-11-08 22:50:22] : Fast-connecting to dev pool ...
[2017-11-08 22:50:22] : Dev pool socket error - mining on user pool...
[2017-11-08 22:50:26] : Fast-connecting to dev pool ...
[2017-11-08 22:50:26] : Dev pool socket error - mining on user pool...
[2017-11-08 22:50:29] : Result accepted by the pool.
```",True,False,43,6984.2
fireice-uk/xmr-stak/90,2017-11-08T21:56:02Z,False,5a037d7a6480fd12f5095063,"Second issue:

If a pool is running into the give up limit because of the down time but is available after a few minits again. Than the miner will never try to connect to the pool again.
It looks like the pool is removed from the pool list as soon as the give up limit is reached.",True,False,43,6984.2
fireice-uk/xmr-stak/90,2017-11-08T22:01:57Z,False,5a037ede6480fd1aca6f8115,"Suggestion for the never reachable pool. 
- Can we move each pool which reach the give up limit to a temporary storage list.
- each time we switch from the dev pool back to the user pool the temporary list is merged back to the used pool list 
- after the dev round try to select a pool like on the start of the miner

This will mean that a pool is added back after 100min if there was a downtime if it up again. If the pool is still down the pool will be moved back to the temporary list until the next switch from dev to user pool.

If the user pool list runs empty because all miner are down the miner shutdown.",True,False,43,6984.2
fireice-uk/xmr-stak/90,2017-11-08T22:02:01Z,False,5a037ede6480fd14e49a0cd8,">  The give up is not counting for the dev pool:

That's again by design - we are limited by the dev time (2 min), so there is no point to a giveup_limit.

If the devpool fails:

- The miner mines for a user pool
- Tries to connect to the dev pool until the 2 minutes are up

> If a pool is running into the give up limit because of the down time but is available after a few minutes again. Than the miner will never try to connect to the pool again.

That's the point of giveup_limit. The only thing I can think of is geometrically increasing retry_time - but that would be too complex for an ordinary user to grok.",True,False,43,6984.2
fireice-uk/xmr-stak/90,2017-11-08T22:03:57Z,False,5a037f556480fd149d03d18d,"Agree with the dev pool solution. 
Please check my suggestion https://github.com/fireice-uk/xmr-stak/pull/90#issuecomment-342975454",True,False,43,6984.2
fireice-uk/xmr-stak/90,2017-11-08T22:15:13Z,False,5a0381fb6480fd15f748cb2f,"@psychocrypt IMO if we want to do something like that, then geometrically increasing retry time is the standard way to do it.

So retry time increases with every failed attempt like so (assuming multiplier 1.75)

10s, 18s, 31s, 53s etc.

However I see two problems:

- Explaining to your average user what a geometric growth rate is
- Overloading this PR with new features, especially since everybody so far was ok with the current static time and giveup. 

IMO, we should put this one off until after the release and implement it only if there is a genuine need.",True,False,43,6984.2
fireice-uk/xmr-stak/90,2017-11-08T22:18:31Z,False,5a0382bb6480fd181f4564bd,"But my suggestion is absolut easy to implement and it based on the reality.
If a pool is down than mostly not a longer time.
The workflow that a pool is checked after 100min if it was down is also
easy to understand.
I aggree that the geometric growths rate is hard for non experts.
",True,False,43,6984.2
fireice-uk/xmr-stak/90,2017-11-08T22:23:27Z,False,5a0383e16480fd131f5fec19,"@psychocrypt Ok, but let's do it as a separate thing after release, if there is a need -> we still have a lot of ground to cover on stuff that needs to be done **before** the release without getting sidetracked on potentially unwanted features.",True,False,43,6984.2
fireice-uk/xmr-stak/90,2017-11-08T22:27:51Z,False,5a0384ec6480fd12e00ecfc9,"I want that feature :-(

But in this case please prepare the final multi pool pr with the correct
dev fee and round rime and the xmr and aeon pool.
From my side the mockup tests are finished and we need to test the final
multipoolfeature before merging.
",True,False,43,6984.2
MPAS-Dev/MPAS-Analysis/259,2017-11-08T22:37:10Z,False,5a03871d6480fd145b42f06d,"Sure should be.  Fortunately (or unfortunately?), the code never accesses the _stackTrace attribute unless the task has failed and given it a valid value.  I'll fix this right away.",True,False,57,52798.65
fireice-uk/xmr-stak/90,2017-11-08T22:46:04Z,False,5a0389326480fd13c8bb97c1,I pushed the changes - dev pool is at the production settings now.,True,False,43,6984.2
fireice-uk/xmr-stak/90,2017-11-09T16:57:02Z,False,5a0488e26480fd1310d9a358,"I missed the runaway check in background connect yesterday -> that might have triggered your problem.

I also call eval_pool via event now instead of directly (makes it easier to model concurrent behaviour), and I limited the retry_time to at least 2 seconds. Retry time of 0 would trigger runaway in any and all cases (obviously since it means no delay at all).",True,False,43,6984.2
ocaml/opam-repository/10626,2017-11-09T22:44:30Z,False,5a04da536480fd15c4e7670f,"```
#=== ERROR while installing core.v0.9.0 =======================================#
# opam-version 1.2.2
# os           linux
# command      jbuilder build -p core -j 4
# path         /home/travis/.opam/4.05.0/build/core.v0.9.0
# compiler     4.05.0
# exit-code    1
# env-file     /home/travis/.opam/4.05.0/build/core.v0.9.0/core-20735-1ad015.env
# stdout-file  /home/travis/.opam/4.05.0/build/core.v0.9.0/core-20735-1ad015.out
# stderr-file  /home/travis/.opam/4.05.0/build/core.v0.9.0/core-20735-1ad015.err
### stderr ###
# [...]
#     ocamlopt src/core__Weak_hashtbl.{cmx,o}
#     ocamlopt src/core__Unix_error.{cmx,o}
#       ocamlc src/core__Syscall_result.{cmo,cmt}
#     ocamlopt src/core__Syscall_result_intf.{cmx,o}
#       ocamlc src/core__Core_unix.{cmi,cmti} (exit 2)
# (cd _build/default && /home/travis/.opam/4.05.0/bin/ocamlc.opt -w -40 -g -bin-annot -I /home/travis/.opam/4.05.0/lib/base -I /home/travis/.opam/4.05.0/lib/base/caml -I /home/travis/.opam/4.05.0/lib/base/shadow_stdlib -I /home/travis/.opam/4.05.0/lib/bin_prot -I /home/travis/.opam/4.05.0/lib/bin_prot/shape -I /home/travis/.opam/4.05.0/lib/core_kernel -I /home/travis/.opam/4.05.0/lib/core_kernel/base_for_tests -I /home/travis/.opam/4.05.0/lib/fieldslib -I /home/travis/.opam/4.05.0/lib/jane-street-headers -I /home/travis/.opam/4.05.0/lib/num -I /home/travis/.opam/4.05.0/lib/ocaml -I /home/travis/.opam/4.05.0/lib/ocaml/threads -I /home/travis/.opam/4.05.0/lib/ppx_assert/runtime-lib -I /home/travis/.opam/4.05.0/lib/ppx_bench/runtime-lib -I /home/travis/.opam/4.05.0/lib/ppx_compare/runtime-lib -I /home/travis/.opam/4.05.0/lib/ppx_expect/collector -I /home/travis/.opam/4.05.0/lib/ppx_expect/common -I /home/travis/.opam/4.05.0/lib/ppx_expect/config -I /home/travis/.opam/4.05.0/lib/ppx_hash/runtime-lib -I /home/travis/.opam/4.05.0/lib/ppx_inline_test/config -I /home/travis/.opam/4.05.0/lib/ppx_inline_test/runtime-lib -I /home/travis/.opam/4.05.0/lib/sexplib -I /home/travis/.opam/4.05.0/lib/sexplib/0 -I /home/travis/.opam/4.05.0/lib/sexplib/unix -I /home/travis/.opam/4.05.0/lib/spawn -I /home/travis/.opam/4.05.0/lib/stdio -I /home/travis/.opam/4.05.0/lib/typerep -I /home/travis/.opam/4.05.0/lib/variantslib -no-alias-deps -I src -open Core__ -o src/core__Core_unix.cmi -c -intf src/core_unix.pp.mli)
# File ""src/core_unix.mli"", line 398, characters 0-858:
# Error: This variant or record definition does not match that of type
#          Unix.open_flag
#        The field O_KEEPEXEC is only present in the original definition.
```",True,False,5,5365.133333333333
pmmp_____PocketMine-MP_____1476,2017-11-10T07:39:50Z,True,pmmp_____PocketMine-MP_____1476_____343397320,"Potential API expansion: Since the form may be queued for some time, data may need refreshing when sent. Although it cannot be actively updated while the player is opening the form anyway, less outdated is better than more outdated.
Therefore I'm suggesting that MenuOption[] etc. be changed to Traversable or similar stuff.",True,True,74,257775.83333333334
hyperledger/iroha/688,2017-11-10T11:29:26Z,False,5a058d9c6480fd176f5737dc,"SonarQube analysis reported 60 issues
* ![MINOR][MINOR] 56 minor
* ![INFO][INFO] 4 info

#### Top 10 issues

1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L201](https://github.com/hyperledger/iroha/blob/04368813ad257d3abea78ab72eb55e8e3a8dc9a8/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L201): Define a constant instead of duplicating this literal false 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L232](https://github.com/hyperledger/iroha/blob/04368813ad257d3abea78ab72eb55e8e3a8dc9a8/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L232): Extract this magic number '2' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L233](https://github.com/hyperledger/iroha/blob/04368813ad257d3abea78ab72eb55e8e3a8dc9a8/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L233): Extract this magic number '3' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L234](https://github.com/hyperledger/iroha/blob/04368813ad257d3abea78ab72eb55e8e3a8dc9a8/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L234): Extract this magic number '4' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L235](https://github.com/hyperledger/iroha/blob/04368813ad257d3abea78ab72eb55e8e3a8dc9a8/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L235): Extract this magic number '5' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L236](https://github.com/hyperledger/iroha/blob/04368813ad257d3abea78ab72eb55e8e3a8dc9a8/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L236): Extract this magic number '6' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L237](https://github.com/hyperledger/iroha/blob/04368813ad257d3abea78ab72eb55e8e3a8dc9a8/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L237): Extract this magic number '7' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L238](https://github.com/hyperledger/iroha/blob/04368813ad257d3abea78ab72eb55e8e3a8dc9a8/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L238): Extract this magic number '8' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L300](https://github.com/hyperledger/iroha/blob/04368813ad257d3abea78ab72eb55e8e3a8dc9a8/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L300): The function 'parseRevokePermission' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L313](https://github.com/hyperledger/iroha/blob/04368813ad257d3abea78ab72eb55e8e3a8dc9a8/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L313): Extract this magic number '2' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",True,False,14,14080.3
hyperledger/iroha/688,2017-11-10T11:30:05Z,False,5a058dbf6480fd13715540ed,"# [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/688?src=pr&el=h1) Report
> Merging [#688](https://codecov.io/gh/hyperledger/iroha/pull/688?src=pr&el=desc) into [feature/yuna-storage](https://codecov.io/gh/hyperledger/iroha/commit/ab2a2462e7448fe88d3a50d090fe13ebd0f5a0fb?src=pr&el=desc) will **decrease** coverage by `0.01%`.
> The diff coverage is `0%`.

[![Impacted file tree graph](https://codecov.io/gh/hyperledger/iroha/pull/688/graphs/tree.svg?src=pr&token=VEvywEmaef&width=650&height=150)](https://codecov.io/gh/hyperledger/iroha/pull/688?src=pr&el=tree)

```diff
@@                   Coverage Diff                    @@
##           feature/yuna-storage     #688      +/-   ##
========================================================
- Coverage                 43.03%   43.01%   -0.02%     
========================================================
  Files                       298      298              
  Lines                     12205    12209       +4     
  Branches                   6756     6760       +4     
========================================================
  Hits                       5252     5252              
  Misses                      729      729              
- Partials                   6224     6228       +4
```


| [Impacted Files](https://codecov.io/gh/hyperledger/iroha/pull/688?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...had/model/converters/impl/json\_command\_factory.cpp](https://codecov.io/gh/hyperledger/iroha/pull/688?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbnZlcnRlcnMvaW1wbC9qc29uX2NvbW1hbmRfZmFjdG9yeS5jcHA=) | `41.98% <0%> (-0.66%)` | :arrow_down: |
| [irohad/model/commands/create\_account.hpp](https://codecov.io/gh/hyperledger/iroha/pull/688?src=pr&el=tree#diff-aXJvaGFkL21vZGVsL2NvbW1hbmRzL2NyZWF0ZV9hY2NvdW50LmhwcA==) | `25% <0%> (ø)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/hyperledger/iroha/pull/688?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/hyperledger/iroha/pull/688?src=pr&el=footer). Last update [ab2a246...0436881](https://codecov.io/gh/hyperledger/iroha/pull/688?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",True,False,14,14080.3
hyperledger/iroha/688,2017-11-10T11:31:24Z,False,5a0590876480fd13b211f67b,"use
```cpp
CreateAccount() : json_data(""{}"") {}
```
instead",True,False,14,14080.3
hyperledger/iroha/688,2017-11-10T11:38:50Z,False,5a0590876480fd18bdeb9a45,"maybe add a vararg fn for that?
```cpp
template<typename T>
bool has_no_value() {
  return not t.has_value();
}

template<typename T, typename... Args>
bool has_no_value(T t, Args... a) {
  return not t.has_value() or not has_no_value(a...);
}
```

Not sure but some c++14 feature may allow to write only one method",True,False,14,14080.3
hyperledger/iroha/688,2017-11-10T11:41:43Z,False,5a0590876480fd140969373f,looks quite awkward D:,True,False,14,14080.3
hyperledger/iroha/688,2017-11-10T11:54:12Z,False,5a05a1056480fd1334540334,"To be more specific, the correct code is:
```C++
template <typename T> bool has_value(T &&t) { return t.has_value(); }

template <typename T, typename... Args> bool has_value(T &&t, Args &&... a) {
  return t.has_value() and has_value(std::forward<Args>(a)...);
}

if(has_value(a, b, c, d, e)) { /* do something */ }
```",True,False,14,14080.3
hyperledger/iroha/688,2017-11-10T11:57:25Z,False,5a05942c6480fd18e84278fa,"Another way is actually just write:
```C++
// optionals can be safely casted to bool
if(not (a && b && c && d && e)) { /* do something */  }
```",True,False,14,14080.3
hyperledger/iroha/688,2017-11-10T11:58:27Z,False,5a05946a6480fd1489f731da,Seems that only [c++17 feature] :(,True,False,14,14080.3
hyperledger/iroha/688,2017-11-10T12:02:07Z,False,5a0595476480fd138bbde640,"Any suggestions to improve ? 
",True,False,14,14080.3
hyperledger/iroha/688,2017-11-10T12:04:02Z,False,5a0595bd6480fd1aca705e2f,Implicit cast to bool looks even better for me,True,False,14,14080.3
hyperledger/iroha/688,2017-11-10T12:08:22Z,False,5a0596ba6480fd12f50a2eb7,"No idea, just want to notice so maybe someone other will have",True,False,14,14080.3
ocaml/opam-repository/10626,2017-11-10T15:09:52Z,False,5a05c14b6480fd14e49b05f1,thanks!,True,False,5,5365.133333333333
pmmp_____PocketMine-MP_____1476,2017-11-12T07:32:26Z,True,pmmp_____PocketMine-MP_____1476_____343718954,"Why what?
In case you're referring to f87b23b, varargs are not used for two reasons:

#### Forward compatibility adding new constructor args
WIth varargs used, it is impossible to add new optional parameters to the method without breaking backward compatibility (BC). This problem is especially important in constructors, because for other methods (e.g. `Inventory::addItem(Item ...$item)`), an overloading method can be added (e.g. adding `bool $send = true` can be done by simply adding another method `Inventory::addItemSend(bool $send, Item ...$item)` or just `Inventory::addItemNoSend(Item ...$item)`). But since a constructor in PHP cannot be overloaded (it's usually impossible to overload a pure varargs method anyway even in languages with method overloading like Java), varargs should be avoided.

#### Consistency in subclasses <sup>[citation needed]</sup>
By convention <sup>[citation needed]</sup>, the parameters in a subclass constructor should start with the superclass constructor's parameters first, then the subclass's own parameters (except for optional parameters <sup>[citation needed]</sup>). Using varargs in a superclass constructor makes the order of parameters in the subclass constructor very confusing.",True,True,74,257775.83333333334
pmmp_____PocketMine-MP_____1476,2017-11-12T08:12:55Z,True,pmmp_____PocketMine-MP_____1476_____343720656,But using parameters whose object types are not named in the function parameters is not confusing?,True,True,74,257775.83333333334
pmmp_____PocketMine-MP_____1476,2017-11-12T08:19:58Z,True,pmmp_____PocketMine-MP_____1476_____343720941,"Then it's PHP's problem. We have already tried our best to improve this &mdash; assert type validity and PHP doc. Varargs affects the fundamental program design, and is not desirable in the long term just because PHP does not support array-of types.
",True,True,74,257775.83333333334
pmmp_____PocketMine-MP_____1476,2017-11-12T08:21:26Z,True,pmmp_____PocketMine-MP_____1476_____343721002,switch to Python?,True,True,74,257775.83333333334
pmmp_____PocketMine-MP_____1476,2017-11-12T14:05:25Z,True,pmmp_____PocketMine-MP_____1476_____150411623,signature needs to be documented (PhpDoc),True,True,74,257775.83333333334
pmmp_____PocketMine-MP_____1476,2017-11-13T09:47:51Z,True,pmmp_____PocketMine-MP_____1476_____343866035,"This has been stagnating for a few days now. Since I've seen that there's dissatisfaction that this hasn't been merged yet, some points:

- we are still not happy with this API yet, and are still discussing possible changes to it. We prefer not to push one set of API and then break that shiny new API again a few commits later.
- there are still crippling bugs because not everything has been properly tested (such as chained forms)
- I've been busy lately and haven't had chance to keep up with what's going on.

While we could merge this as-is anytime between tags, and then do later changes and fixes later, this would cause confusion and unexpected breakages. Keeping it in the PR makes it easier to review.

I know this is frustrating, and there is a general trend of things taking some time to be done. Please have patience.",True,True,74,257775.83333333334
MPAS-Dev/MPAS-Analysis/259,2017-11-13T17:14:31Z,False,5a09d2fd6480fd14f94b10b4,Was able to reproduce plots visually identical to develop with high and low res data.  ,True,False,57,52798.65
MPAS-Dev/MPAS-Analysis/259,2017-11-13T19:42:40Z,False,5a09f5b76480fd141e065c06,Thanks @vanroekel.  ,True,False,57,52798.65
DGtal-team/DGtal/1266,2017-11-16T17:04:47Z,False,5a0dc5326480fd145b470b31,I have completed the doc for IndexedDigitalSurface. I think this is ready for review.,True,False,66,246101.18333333332
MoscaDotTo/Winapp2/128,2017-11-16T19:19:04Z,False,5a0de4af6480fd135e60c8e6,Closing due to: https://github.com/MoscaDotTo/Winapp2/pull/132,True,False,1,0.0
DGtal-team/DGtal/1266,2017-11-17T14:46:14Z,False,5a0ef6476480fd19352952fb,"Looks like everything is fine except that it takes too much time to compute.
",True,False,66,246101.18333333332
DGtal-team/DGtal/1266,2017-11-18T13:04:08Z,False,5a102fce6480fd1310de376d,"allgood ;)
thanks
",True,False,66,246101.18333333332
hyperledger/iroha/688,2017-11-18T17:22:56Z,False,5a106c736480fd1a6de0251d,"SonarQube analysis reported 59 issues
* ![MINOR][MINOR] 55 minor
* ![INFO][INFO] 4 info

#### Top 10 issues

1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L201](https://github.com/hyperledger/iroha/blob/e40fbacb3d79c3927f929700e6db21c711ed10c0/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L201): Define a constant instead of duplicating this literal false 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L232](https://github.com/hyperledger/iroha/blob/e40fbacb3d79c3927f929700e6db21c711ed10c0/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L232): Extract this magic number '2' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L233](https://github.com/hyperledger/iroha/blob/e40fbacb3d79c3927f929700e6db21c711ed10c0/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L233): Extract this magic number '3' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L234](https://github.com/hyperledger/iroha/blob/e40fbacb3d79c3927f929700e6db21c711ed10c0/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L234): Extract this magic number '4' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L235](https://github.com/hyperledger/iroha/blob/e40fbacb3d79c3927f929700e6db21c711ed10c0/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L235): Extract this magic number '5' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L236](https://github.com/hyperledger/iroha/blob/e40fbacb3d79c3927f929700e6db21c711ed10c0/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L236): Extract this magic number '6' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L237](https://github.com/hyperledger/iroha/blob/e40fbacb3d79c3927f929700e6db21c711ed10c0/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L237): Extract this magic number '7' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L238](https://github.com/hyperledger/iroha/blob/e40fbacb3d79c3927f929700e6db21c711ed10c0/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L238): Extract this magic number '8' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L299](https://github.com/hyperledger/iroha/blob/e40fbacb3d79c3927f929700e6db21c711ed10c0/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L299): The function 'parseRevokePermission' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L312](https://github.com/hyperledger/iroha/blob/e40fbacb3d79c3927f929700e6db21c711ed10c0/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L312): Extract this magic number '2' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",True,False,14,14080.3
hyperledger/iroha/688,2017-11-19T17:36:30Z,False,5a11c1206480fd1a41b3a8e1,"SonarQube analysis reported 59 issues
* ![MINOR][MINOR] 55 minor
* ![INFO][INFO] 4 info

#### Top 10 issues

1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L201](https://github.com/hyperledger/iroha/blob/bc922b610b321f962072d348bc2200dd2fd8e3f8/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L201): Define a constant instead of duplicating this literal false 2 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AStringLiteralDuplicated)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L232](https://github.com/hyperledger/iroha/blob/bc922b610b321f962072d348bc2200dd2fd8e3f8/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L232): Extract this magic number '2' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L233](https://github.com/hyperledger/iroha/blob/bc922b610b321f962072d348bc2200dd2fd8e3f8/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L233): Extract this magic number '3' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L234](https://github.com/hyperledger/iroha/blob/bc922b610b321f962072d348bc2200dd2fd8e3f8/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L234): Extract this magic number '4' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L235](https://github.com/hyperledger/iroha/blob/bc922b610b321f962072d348bc2200dd2fd8e3f8/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L235): Extract this magic number '5' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L236](https://github.com/hyperledger/iroha/blob/bc922b610b321f962072d348bc2200dd2fd8e3f8/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L236): Extract this magic number '6' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L237](https://github.com/hyperledger/iroha/blob/bc922b610b321f962072d348bc2200dd2fd8e3f8/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L237): Extract this magic number '7' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L238](https://github.com/hyperledger/iroha/blob/bc922b610b321f962072d348bc2200dd2fd8e3f8/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L238): Extract this magic number '8' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L299](https://github.com/hyperledger/iroha/blob/bc922b610b321f962072d348bc2200dd2fd8e3f8/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L299): The function 'parseRevokePermission' is never used. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cppcheck%3AunusedFunction)
1. ![MINOR][MINOR] [interactive_transaction_cli.cpp#L312](https://github.com/hyperledger/iroha/blob/bc922b610b321f962072d348bc2200dd2fd8e3f8/iroha-cli/interactive/impl/interactive_transaction_cli.cpp#L312): Extract this magic number '2' into a constant, variable declaration or an enum. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonar.soramitsu.co.jp/coding_rules#rule_key=cxx%3AMagicNumber)

[INFO]: https://sonarsource.github.io/sonar-github/severity-info.png 'Severity: INFO'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",True,False,14,14080.3
hyperledger/iroha/688,2017-11-20T06:09:44Z,False,5a1271aa6480fd19b138c3f3,Nice talk you have. Any outcome?,True,False,14,14080.3
pmmp_____PocketMine-MP_____1476,2017-11-20T17:55:28Z,True,pmmp_____PocketMine-MP_____1476_____345775878,"It's not like people can't shoehorn in forms as they are now, though. You only need to send a simple, very readable JSON. This'll be more convenient, but right now, it's quite easy to implement a GUI anyway. Not worth complaining about too much.",True,True,74,257775.83333333334
pmmp_____PocketMine-MP_____1476,2017-11-21T06:08:41Z,True,pmmp_____PocketMine-MP_____1476_____345926883,"I got to reproduce the double-sending issue:
The form sends twice when clicking the [x] or the ESC/back key/button and when returning $this instead of null in onSubmit - but it feels like this happens only about 75% of the time, and only if it is `prepend`ed.
I found no way to properly 100% reproduce it.",True,True,74,257775.83333333334
pmmp_____PocketMine-MP_____1476,2017-11-21T08:22:43Z,True,pmmp_____PocketMine-MP_____1476_____345950787,"I know why it's happening, just haven't had time to fix it yet.",True,True,74,257775.83333333334
pmmp_____PocketMine-MP_____1476,2017-11-24T02:35:59Z,True,pmmp_____PocketMine-MP_____1476_____346728185,"@thebigsmileXD What exactly are you downvoting? Feel free to explain yourself. Perhaps you believe there is no way to do this without a nice cozy API? Perhaps you think it's worth complaining about? If so, please take your complaints elsewhere. This is not the place for them.",True,True,74,257775.83333333334
pmmp_____PocketMine-MP_____1476,2017-11-24T09:51:42Z,True,pmmp_____PocketMine-MP_____1476_____346787757,This is not a forum. Please stop commenting unrelated stuff @dschwartz783 ,True,True,74,257775.83333333334
fykosak/fksdb/157,2017-12-01T21:27:56Z,False,5a21c95d6480fd144587ff49,"Testy prešli, na localhoste to beží, mergujem :) ",True,False,1,0.0
wso2-extensions/identity-user-ws/26,2017-12-03T06:15:29Z,False,5a2396876480fd137160dcc1,"Can you please check deleteUserClaimValue - looks like you missed it...

Thanks!",True,False,3,1783.5666666666666
wso2-extensions/identity-user-ws/26,2017-12-04T11:42:33Z,False,5a2534ac6480fd134c9d3625,Fixed: the comment by @prabath ,True,False,3,1783.5666666666666
wso2-extensions/identity-user-ws/26,2017-12-04T11:59:03Z,False,5a25388e6480fd1a6de80d39,`addRole()` method also have the return type as `void`. So that also needed to be fixed.,True,False,3,1783.5666666666666
pmmp_____PocketMine-MP_____1476,2017-12-04T19:28:46Z,True,pmmp_____PocketMine-MP_____1476_____349077955,"The form sometimes does not work, it does not show.
The function itself is called in PlayerJoinEvent. The message ""a"" shows in the console, but the form does not.
![image](https://user-images.githubusercontent.com/28113262/33571852-5b091c02-d942-11e7-9971-6ddb30e9cc46.png)
",True,True,74,257775.83333333334
pmmp_____PocketMine-MP_____1476,2017-12-05T08:13:57Z,True,pmmp_____PocketMine-MP_____1476_____349228391,"@xISRAPILx the player is not ready to receive forms at that moment, because he is still logging in. The real issue is: because the server thinks the client never closes that form, you can not use any other form after that",True,True,74,257775.83333333334
pmmp_____PocketMine-MP_____1476,2017-12-05T13:31:06Z,True,pmmp_____PocketMine-MP_____1476_____349304492,Maybe a form timeout could be made of use to avoid that issue where all forms become locked,True,True,74,257775.83333333334
pmmp_____PocketMine-MP_____1476,2017-12-05T16:15:01Z,True,pmmp_____PocketMine-MP_____1476_____349354545,Are there methods besides the timer for using forms in PlayerJoinEvent? @thebigsmileXD ,True,True,74,257775.83333333334
pmmp_____PocketMine-MP_____1476,2017-12-05T16:19:26Z,True,pmmp_____PocketMine-MP_____1476_____349355968,"@xISRAPILx with a scheduled task, but that's not the right place for questions here, please ask in the forums next time.",True,True,74,257775.83333333334
everypolitician/everypolitician-data/66441,2017-12-05T20:05:40Z,False,5a26fc1f6480fd13c8c99022,"

Summary of changes in `data/Antigua_and_Barbuda/Representatives/ep-popolo-v1.0.json`:

## People

### Added


No people added


### Removed


No people removed


### Name Changes


No name changes


### Additional Name Changes


No name changes


### Wikidata Changes


No changes


## Organizations

### Added


No organizations added


### Removed


No organizations removed


## Memberships

### Added

No memberships added


### Removed

No memberships removed
















",True,False,2,1216.4833333333333
everypolitician/everypolitician-data/66441,2017-12-06T16:22:09Z,False,5a2819366480fd16aac94560,This Pull Request has been superseded by #66613,True,False,2,1216.4833333333333
pmmp_____PocketMine-MP_____1476,2017-12-06T17:38:40Z,True,pmmp_____PocketMine-MP_____1476_____349717307,Are we going to merge this for ALPHA-10 or ALPHA-11?,True,True,74,257775.83333333334
pmmp_____PocketMine-MP_____1476,2017-12-06T17:40:54Z,True,pmmp_____PocketMine-MP_____1476_____349717960,It will be merged when we're happy with it. Read the PR discussion instead of spamming useless comments.,True,True,74,257775.83333333334
pmmp_____PocketMine-MP_____1476,2017-12-06T23:34:45Z,True,pmmp_____PocketMine-MP_____1476_____349810933,"This comment is a cleanup-combiner comment to reduce spam with issues

Current issues:
- Double-opening forms when returning $this on onSubmit
- Client can not open any form if an client sided json error occurs/a form is sent before the client is able to render it
",True,True,74,257775.83333333334
pmmp_____PocketMine-MP_____1476,2017-12-06T23:35:54Z,True,pmmp_____PocketMine-MP_____1476_____349811176,I've had unconfirmed reports that the latter issue is fixed in 1.2.6. This will need a fresh round of testing.,True,True,74,257775.83333333334
pmmp_____PocketMine-MP_____1476,2017-12-07T09:28:33Z,True,pmmp_____PocketMine-MP_____1476_____349911495,"I'm debating allowing resending forms provided that they aren't already in use, f.e. you can't resend a form while it's already in another player's queue, but you _can_ resend it after it's been submitted. The point of restricting that was to prevent possible concurrency issues when sending forms to multiple players simultaneously.",True,True,74,257775.83333333334
pmmp_____PocketMine-MP_____1476,2017-12-07T09:32:09Z,True,pmmp_____PocketMine-MP_____1476_____349912429,I can confirm that in 1.2.5 forms sometimes never sent the form after player has been on server for a few minutes. But in 1.2.6 it doesn’t have that glitch ,True,True,74,257775.83333333334
pmmp_____PocketMine-MP_____1476,2017-12-07T09:39:35Z,True,pmmp_____PocketMine-MP_____1476_____349914374,I just discovered that I can break a form queue by spamming the escape button to get to the pause screen. This isn't good...,True,True,74,257775.83333333334
pmmp_____PocketMine-MP_____1476,2017-12-07T10:03:47Z,True,pmmp_____PocketMine-MP_____1476_____349920683,I crippled returning forms. Not so fast.,True,True,74,257775.83333333334
pmmp_____PocketMine-MP_____1476,2017-12-07T10:49:24Z,True,pmmp_____PocketMine-MP_____1476_____349931816,"Aside from the bugs, some things we're not happy with yet:

- We don't allow sending the same form instance twice. I don't think this is reasonable, a better restriction would be to only allow sending to one player at a time (makes more sense).
- Leading on from the above point, the disposability of forms leads to the problem that a form cannot be easily copied, i.e. duplicating the form and erasing the data for reuse. This requires, then, that a form object must always be recreated. This is a little inconvenient.
- Plugins wanting to access their owners inside a form currently have to implement their own methods for getting the plugin's PluginBase instance. For example, the following code:
```php
                $player->sendForm(new class($this, $username, $error) extends ModalForm{
			/** @var Main */
			private $plugin;

			public function __construct(Main $plugin, string $username, string $error){
				$this->plugin = $plugin;
				parent::__construct(""Account transfer failed!"", ""Failed to transfer \""$username\"" account to yours.\nError: $error\n\nWould you like to try again?"");
			}

			public function onSubmit(Player $player) : ?Form{
				if($this->getChoice()){
					$this->plugin->requestAccountDetails($player);
				}else{
					$this->plugin->warnCancelTransfer($player);
				}
				return null;
			}
		});
```
requires that the form being sent must declare a `$plugin` property and assign it in the constructor, in order to access it in `onSubmit()`. This leads to boilerplate code.",True,True,74,257775.83333333334
Aurorastation/Aurora.3/3956,2017-12-07T11:04:27Z,False,5a2920476480fd18e8505528,"Kitchen on the current map is too small. Kitchen proposed is far too big. As you indicate it oretty much comfortable fit four chefs, not merely two, which is undesired. I'm not a huge fan of the canteen being a separate room from the kitchen - in fact it contributes greatly to the awkward shape and size of the proposed kitchen. Having the freezer room not directly connected to the food preparation area is also just inconvenient. Red tiling also is not a great look.

Bar is not nearly as problematic - the design is actually quite good. Connecting the kitchen and the bar directly is not a bad idea and could be kept. The game table looks like and seems like just a thing designed to feel space, and doesn't fit in very well. Games are better played at the library. I'd recommend filling the empty space with something more seamless/replacing it with more maint. The backbooths could also be increased in height by one tile so they can seat four instead of two. Pun Pun should start the bar counter/in the bar backroom or else he'll just get stolen round-start/wander into the halls. The bar having it's own speakeasy is ridiculous - there is no need for a multi-z backroom and should be returned to a small storage closet, 3x5 or so. If bartenders or others want a speakeasy it rests upon them to construct it in maint.

Speaking of maint, the dilapidated VIP lounge should be within maint. In construction areas should not be directly connected to any occupied area. The theater storage seems a little lazily done - looks more like a ""free costumes here"" room than a theater.

Altogether the main bar and the bar-kitchen access is good, but everything else is stricken by excess that should be weaned off.",True,False,11,59916.6
pmmp_____PocketMine-MP_____1476,2017-12-07T11:10:18Z,True,pmmp_____PocketMine-MP_____1476_____349936686,"> Plugins wanting to access their owners inside a form currently have to implement their own methods for getting the plugin's PluginBase instance. For example, the following code:

Actually that applies to any parameter. Passing a variable that a player input into a form and displaying it in another form requires constructor rewrites. I suggest an additional parameter `array $arguments = []`",True,True,74,257775.83333333334
Aurorastation/Aurora.3/3956,2017-12-07T13:09:55Z,False,5a293da66480fd14f957b1e6,"Currently did a rework on the theatre area, it is now an actual theatre.
https://i.imgur.com/YDQbAY6.png",True,False,11,59916.6
Aurorastation/Aurora.3/3956,2017-12-07T13:11:31Z,False,5a293e0a6480fd14c90fa044,"@LordFowl 

Did a rework of the theatre and the kitchen freezer based on your suggestion.
https://i.imgur.com/YDQbAY6.png
https://i.imgur.com/5XpFd0y.png",True,False,11,59916.6
Aurorastation/Aurora.3/3956,2017-12-07T15:24:57Z,False,5a295d4f6480fd17c413f581,No mulebot access?,True,False,11,59916.6
Aurorastation/Aurora.3/3956,2017-12-07T16:42:56Z,False,5a296f9c6480fd19b142149a,"The bar is very good. The stage is an interesting design choice, and I am sure everyone will love the piano - but in all seriousness the opportunity of entertainment in a bar is a good move. For the maint theatre I would mix in some plating and broken tiling in with the wooden floors. The awkward and overly spacious kitchen and the unnecessary sublevel bar backroom however remain in my opinion a significant mark against the overall changes. I would recommend shrinking the kitchen down so it fits 2 chefs but not more, and using the extra space to bring the bar backroom up. The drive-thru would work best if it were not separated from the main kitchen by a door.",True,False,11,59916.6
Aurorastation/Aurora.3/3956,2017-12-07T19:30:28Z,False,5a2996e66480fd17c414144f,"I'm against the sublevel bar area. It just looks like overkill to me, something that doesn't need to / shoudn't be there.
Then I'm also not a fan of the red kitchen floor. It just seems to stick out too much. I'd stay with conventions of white kitchen floors.
Also, the jukebox kind of seems in the entrance way. Maybe put it besides the stage or something? So that you don't run into it when entering the bar.

Also...
`""A self-inserted plaque commemorating of the new construction of the kitchen and bar by Diamond With Flaw.""` 
I... am not quite sure the plaque should really be there. I mean. Yeah.",True,False,11,59916.6
Aurorastation/Aurora.3/3956,2017-12-08T04:34:41Z,False,5a2a16656480fd138bcc4321,Plaque was a meme in discord channel and will not be there in the finished project,True,False,11,59916.6
Aurorastation/Aurora.3/3956,2017-12-08T05:47:27Z,False,5a2a27746480fd1a6dea4998,Added mulebot to the kitchen. Carpet was fixed earlier when I figured out the carpet tiles are self-generating.,True,False,11,59916.6
Aurorastation/Aurora.3/3956,2017-12-08T10:37:54Z,False,5a2a6b846480fd18e850e277,"Overall, I really like the changes, but there are still a few things that should be addressed:

- Make sure the cameras cover all non-maint areas of the bar (Including the backroom, freezer and lower level)
- In my opinion the red tiles are not a perfect fit for the kitchen, maybe go with the traditional white.
- The ""VIP"" area on the main level should be integrated with maint and not directly accessible without removing walls, (Similar to the previous theatre, where you have to remove two walls behind the dance floor to get to it)
- Add ringer buttons and terminals (Think about how to integrate the food counter on the left, the main counter and the sublevel; It might be possible to add multiple ringer buttons per terminal)
- There are quite a lot of posters

I think we should give the sublevel and the current size of the kitchen a try.
If it doesn't work out, we can always rework / remove it (similar to the first atmos iteration).
But I believe that it has some amazing potential.

Huge thumbs up to you for seeing a issue and presenting a solution to it.",True,False,11,59916.6
Aurorastation/Aurora.3/3956,2017-12-08T10:55:17Z,False,5a2a6f9e6480fd18e850e43c,"Removed the red flooring and just left it as white flooring. Going to remove more posters in the bar as this is a professional working environment and most of the posters are lewd animes.

I will add ringers to the bar and canteen. I will look into finding an actual kitchen ringer sound so it doesn't sound like other departments.",True,False,11,59916.6
styleguidist_____react-styleguidist_____730,2017-12-10T08:00:47Z,True,styleguidist_____react-styleguidist_____730_____157421272,"adds a project to the examples dir:
a basic working styleguide for a react-native app using react-native-web
the app was created via crna

... as promised in #675",True,True,12,48256.88333333333
styleguidist_____react-styleguidist_____730,2017-12-10T08:12:53Z,True,styleguidist_____react-styleguidist_____730_____155940894,"verbose, components and ignore options are the same as defaults, you don’t need them here.",True,True,12,48256.88333333333
styleguidist_____react-styleguidist_____730,2017-12-10T08:13:34Z,True,styleguidist_____react-styleguidist_____730_____155940899,Was this command generated? Just `jest --watch` is enough.,True,True,12,48256.88333333333
styleguidist_____react-styleguidist_____730,2017-12-10T17:23:36Z,True,styleguidist_____react-styleguidist_____730_____155954179,"yes, crna generates the script entries.  best to leave it as is so it matches what users see in theirs.",True,True,12,48256.88333333333
styleguidist_____react-styleguidist_____730,2017-12-10T17:23:39Z,True,styleguidist_____react-styleguidist_____730_____155954180,"updates pushed.


I had stared with my much more complex config file and pared it down to this... not enough, though",True,True,12,48256.88333333333
JedWatson/react-select/2205,2017-12-11T07:38:41Z,False,5a2e36096480fd134ca0bd61,"
[![Coverage Status](https://coveralls.io/builds/14592458/badge)](https://coveralls.io/builds/14592458)

Coverage remained the same at 93.431% when pulling **964482916b29378ac65012faf5c25b639bf81248 on lachiet:master** into **62cdd5d8c937f72bcfa5725ba046dfa1f1090c0f on JedWatson:master**.
",True,False,2,1309.5166666666667
styleguidist_____react-styleguidist_____730,2017-12-11T08:48:50Z,True,styleguidist_____react-styleguidist_____730_____350658837,Now there are several ESLint warnings.,True,True,12,48256.88333333333
styleguidist_____react-styleguidist_____730,2017-12-11T09:14:49Z,True,styleguidist_____react-styleguidist_____730_____350664977,And remove `yarn.lock` please.,True,True,12,48256.88333333333
ruby-amqp/amq-protocol/69,2017-12-11T10:56:56Z,False,5a2e64fb6480fd1409791776,"`AMQ::Settings` only holds defaults for the assumed clients and switch between Hash and String like options processing.. In my opinion, all client specific parameters should be handled (validate, fallback to default, other conditional logic, etc.) exactly inside client code, not protocol library.

I'd like to propose to retire client specific options (`frame_max`) form `AMQ::Settings` module and leave only basic ones. ""Basic"" means all that standard Erlang client supports according to [""URI Specification""](https://www.rabbitmq.com/uri-spec.html) and [""URI query parameters""](https://www.rabbitmq.com/uri-query-parameters.html) official RabbitMQ documentation page.",True,False,24,693.7833333333333
ruby-amqp/amq-protocol/69,2017-12-11T11:00:03Z,False,5a2e653b6480fd134ca0d4c4,"`AMQ::Settings` only holds defaults for the assumed clients and switch between Hash and String like options processing.. In my opinion, all client specific parameters should be handled (validate, fallback to default, other conditional logic, etc.) exactly inside client code, not protocol library.

I'd like to propose to retire client specific options (`frame_max`) form `AMQ::Settings` module and leave only basic ones. ""Basic"" means all that standard Erlang client supports according to [""URI Specification""](https://www.rabbitmq.com/uri-spec.html) and [""URI query parameters""](https://www.rabbitmq.com/uri-query-parameters.html) official RabbitMQ documentation page.",True,False,24,693.7833333333333
ruby-amqp/amq-protocol/69,2017-12-11T11:15:19Z,False,5a2e68cf6480fd133463ae32,"What do you think if we try to conform `URI` Ruby standard library hierarchy and extract separate `AMP::URI::AMQP` and `AMP::URI::AMQPS` classes?

![amq uri](https://user-images.githubusercontent.com/892721/33828560-4d9d97f4-de75-11e7-94e2-dc6a27be11d7.png)
",True,False,24,693.7833333333333
ruby-amqp/amq-protocol/69,2017-12-11T15:02:17Z,False,5a2e9dfd6480fd18bdfb85e0,"If all clients use the same defaults, why extract anything?",True,False,24,693.7833333333333
ruby-amqp/amq-protocol/69,2017-12-11T15:03:11Z,False,5a2e9e3a6480fd138bcdb99a,I don't see any real benefit.,True,False,24,693.7833333333333
ruby-amqp/amq-protocol/69,2017-12-11T15:26:22Z,False,5a2ea3aa6480fd1a41bee607,For the sake of concerns separation. Underlying protocol library is not responsible for client specific features and should adopt them as plugins/extensions. The same is reasonable for the configuration I guess.,True,False,24,693.7833333333333
ruby-amqp/amq-protocol/69,2017-12-11T15:26:26Z,False,5a2ea3aa6480fd150dcbbbe1,"It could simplify the code and make it more object-oriented instead of procedural in my opinion. Because AMQP URI is just another kind of generic URI, contributors, that are familiar already with `URI` (especially as it's a standard library), intuitively could rely on known public API.",True,False,24,693.7833333333333
ruby-amqp/amq-protocol/69,2017-12-11T15:34:40Z,False,5a2ea5966480fd14c9117f91,"If the settings are identical, are they really client-specific? What's the probability of them changing *independently* in only one client? I'd say it's 0. Please stick to the changes we've discussed,"" concern separation"" is a fantastic way of wasting a lot of time on something that you'd never get any real benefit from.",True,False,24,693.7833333333333
ruby-amqp/amq-protocol/69,2017-12-11T15:37:35Z,False,5a2ea6426480fd1a6debc83e,"I don't see how having 4 new classes would simplify things. We are not preparing this library for inclusion into the standard library.

Moving classes and constants around means Bunny and amqp gem will have to be updated, and their older versions won't be compatible with newer version of amq-protocol, which has been the case for years.",True,False,24,693.7833333333333
ruby-amqp/amq-protocol/69,2017-12-11T15:38:26Z,False,5a2ea67b6480fd13716523d9,"Sorry but ""more object-oriented code"" for a couple of constants is a solution in search of a problem.",True,False,24,693.7833333333333
ruby-amqp/amq-protocol/69,2017-12-11T15:40:06Z,False,5a2ea6df6480fd1310e9e2bb,"OK :) I don't mind to stick with the current design, just announced my thoughts. I will proceed with **bunny** and **amqp**. Could we merge the specs extension in this PR anyway?",True,False,24,693.7833333333333
ruby-amqp/amq-protocol/69,2017-12-11T15:41:56Z,False,5a2ea8646480fd1a41bee880,This comment should be deleted as these defaults won't move to Bunny and amqp gem.,True,False,24,693.7833333333333
ruby-amqp/amq-protocol/69,2017-12-11T15:44:25Z,False,5a2ea8656480fd138bcdc06a,"""it falls back""",True,False,24,693.7833333333333
ruby-amqp/amq-protocol/69,2017-12-11T15:44:51Z,False,5a2ea8656480fd13b221ec44,Same as above.,True,False,24,693.7833333333333
ruby-amqp/amq-protocol/69,2017-12-11T15:44:56Z,False,5a2ea8656480fd188d6059c1,Ditto.,True,False,24,693.7833333333333
ruby-amqp/amq-protocol/69,2017-12-11T15:45:09Z,False,5a2ea8656480fd139eeb61a9,Ditto.,True,False,24,693.7833333333333
ruby-amqp/amq-protocol/69,2017-12-11T15:45:16Z,False,5a2ea8656480fd18bdfb8c22,Ditto.,True,False,24,693.7833333333333
ruby-amqp/amq-protocol/69,2017-12-11T15:45:24Z,False,5a2ea8656480fd19b143d6e1,Ditto.,True,False,24,693.7833333333333
ruby-amqp/amq-protocol/69,2017-12-11T15:45:32Z,False,5a2ea8656480fd150dcbbebf,Ditto.,True,False,24,693.7833333333333
ruby-amqp/amq-protocol/69,2017-12-11T15:46:01Z,False,5a2ea8696480fd1a6debc968,"I believe you mean ""%-encoded"".",True,False,24,693.7833333333333
ruby-amqp/amq-protocol/69,2017-12-11T15:56:50Z,False,5a2eaac86480fd1310e9e4ef,"According to method names in [URI::Escape](https://ruby-doc.org/stdlib-2.2.2/libdoc/uri/rdoc/URI/Escape.html) module of `URI` library, [escaped](https://ruby-doc.org/stdlib-2.2.2/libdoc/uri/rdoc/URI/Escape.html#method-i-escape) and [encoded](https://ruby-doc.org/stdlib-2.2.2/libdoc/uri/rdoc/URI/Escape.html#method-i-encode) mean the same. But your variant looks more descriptive and unambiguous ^_^",True,False,24,693.7833333333333
ruby-amqp/amq-protocol/69,2017-12-11T15:57:09Z,False,5a2eaada6480fd133463d0ee,"Got it, will fix",True,False,24,693.7833333333333
ruby-amqp/amq-protocol/69,2017-12-11T15:59:25Z,False,5a2eab616480fd19353581ce,"I see, appreciate your open point of view, thank you 🙇 ",True,False,24,693.7833333333333
ruby-amqp/amq-protocol/69,2017-12-11T22:30:43Z,False,5a2f07196480fd18bdfbbb1a,Because Bunny is several years older than amqp-protocol.,True,False,24,693.7833333333333
JedWatson/react-select/2205,2017-12-12T05:28:12Z,False,5a2f68ee6480fd1aca808131,Thanks @lachiet ,True,False,2,1309.5166666666667
pmmp_____PocketMine-MP_____1476,2017-12-13T16:47:22Z,True,pmmp_____PocketMine-MP_____1476_____351450338,@thebigsmileXD Explicitly requiring passing the Plugin also has the advantage that it's possible to know the scope of the form and manage it with plugin enable/disable stuff.,True,True,74,257775.83333333334
carlos8f/zenbot/870,2017-12-14T21:26:49Z,False,5a32eca26480fd17c417b72c,Side note: gdax update_products.js needs to be run.,True,False,4,19762.05
carlos8f/zenbot/870,2017-12-14T22:19:47Z,False,5a32f9096480fd1a6dedbefb,"Want another note here:


FTR my current settings (that dont seem too too volatile working with this is below:
```
// sell if price drops below this % of bought price (0 to disable)
c.sell_stop_pct = 0
// buy if price surges above this % of sold price (0 to disable)
c.buy_stop_pct = 0
// enable trailing sell stop when reaching this % profit (0 to disable)
c.profit_stop_enable_pct = 0
// maintain a trailing stop this % below the high-water mark of profit
c.profit_stop_pct = 1

// Order execution rules:

// avoid trading at a slippage above this pct
c.max_slippage_pct = 5
// buy with this % of currency balance (WARNING : sim won't work properly if you set this value to 100)
c.buy_pct = 100
// sell with this % of asset balance (WARNING : sim won't work properly if you set this value to 100)
c.sell_pct = 100
// ms to adjust non-filled order after
c.order_adjust_time = 10000
// avoid selling at a loss below this pct set to 0 to ensure selling at a higher price...
c.max_sell_loss_pct = 25
// ms to poll order status
c.order_poll_time = 3000
// ms to wait for settlement (after an order cancel)
c.wait_for_settlement = 3000
// % to mark down buy price for orders
c.markdown_buy_pct = 0.33
// % to mark up sell prie for orders
c.markup_sell_pct = 0.28
// become a market taker (high fees) or a market maker (low fees)
c.order_type = 'maker'
// when supported by the exchange, use post only type orders.
c.post_only = true

// Misc options:

// default # days for backfill and sim commands
c.days = 14
// ms to poll new trades at
c.poll_trades = 1000
// amount of currency to start simulations with
c.currency_capital = 5000
// amount of asset to start simulations with
c.asset_capital = 0
// for sim, reverse time at the end of the graph, normalizing buy/hold to 0
c.symmetrical = false
// number of periods to calculate RSI at
c.rsi_periods = 14
// period to record balances for stats
c.balance_snapshot_period = '15m'
// avg. amount of slippage to apply to sim trades
c.avg_slippage_pct = 0.045
// time to leave an order open, default to 1 day (this feature is not supported on all exchanges, currently: GDAX)
c.cancel_after = 'day'
```",True,False,4,19762.05
carlos8f/zenbot/870,2017-12-14T22:23:38Z,False,5a32f9ec6480fd1935376e1f,"There's definitely maybe something going on in c.wait.for.settlement, though, if I am correct, this is the correct functioning. Maybe there needs to be more variables in wait_for_settlement spaced out for each call. Such as:

c.buy.retry.settlement
and
c.sell.retry.settlement
and
c.getquote.retry.settement
and
c.gettrades.retry.settlement

This, or that there NEEDS to be some sort of promise function that way all the calls are not piling up on the c.wait.for.settlement or the retry function in strategy.js

I am not 100% sure of the code workings, but, I guess this would be within gdax's API limit with those settings above.",True,False,4,19762.05
pmmp_____PocketMine-MP_____1476,2017-12-15T23:24:06Z,True,pmmp_____PocketMine-MP_____1476_____352136503,"Why don't make some events like `PlayerFormSubmitEvent` and `PlayerFormCloseEvent` to handle form submitting and closing? It would be a lot simple, especially if forms' classes are not abstract so we can make Form objects right out of the box and we can send them easily, without managing them by extending them with our own classes in plugins. For example, this piece of code in a Plugin class:
```
public function onSubmit(PlayerFormSubmitEvent $e){
    // assuming we are handling a Toggle element in index 0 that enables something
    /** @var Toggle $toggle */
    $toggle = $e->getForm()->getElement(0);
    $this->doSomethingToPlayer($e->getPlayer, $toggle->getValue());
    $e->getPlayer()->sendForm(new CustomForm(""Test Form"", array(
        new Toggle(""Test toggle 1"", false),
        new Toggle(""Test toggle 2"", true)
    )));
}
```
will be MUCH simpler to implement for plugin developers as we don't have to pass the owner to our form to do things on `onSubmit()`.
Also, if you think of a way to make forms instantiable out of the box then when we are sending a form to a player it would be a good idea to have a custom internal form name or ID to keep track of what form is being sent to the player; for example this piece of code:
```
public function onSubmit(PlayerFormSubmitEvent $e){
    // first we want to make sure the form we are receiving is a ""TestToggleForm1"" form
    if($e->getForm()->getInternalName() !== ""TestToggleForm1"") return;
    // then we manage to do something...

    // assuming we are handling a Toggle element in index 0 that enables something
    /** @var Toggle $toggle */
    $toggle = $e->getForm()->getElement(0);
    $this->doSomethingToPlayer($e->getPlayer, $toggle->getValue());
    // maybe the constructor for a CustomForm object can be
    // ""string $internalName, string $title, array $elements""
    $e->getPlayer()->sendForm(new CustomForm(""TestToggleForm2"", ""Test Form 2"", array(
        new Toggle(""Test toggle 1"", false),
        new Toggle(""Test toggle 2"", true)
    )));
}
```
Obviously this is more straight-forward but it will certainly have problems in more complicated plugins that use forms to do complicated things but I wrote this suggestion in a couple of minutes so it definitely needs some refining here and there but the main idea is there.",True,True,74,257775.83333333334
pmmp_____PocketMine-MP_____1476,2017-12-16T02:30:40Z,True,pmmp_____PocketMine-MP_____1476_____352154523,@AryToNeX This will certainly make it much harder to pass extra data through the form.,True,True,74,257775.83333333334
pmmp_____PocketMine-MP_____1476,2017-12-16T14:37:00Z,True,pmmp_____PocketMine-MP_____1476_____352187229,"@AryToNeX I highly say NO THANKS to events. customui was discontinued just because events created plugin-crossover calls, and every plugin reacted to the event.",True,True,74,257775.83333333334
pmmp_____PocketMine-MP_____1476,2017-12-16T14:40:46Z,True,pmmp_____PocketMine-MP_____1476_____352187468,"Events are a reasonable ask (since they are just, well, events) but definitely a bad idea to make them the primary way to handle a form.

```php
public function onSubmit(PlayerFormSubmitEvent $e){
    // first we want to make sure the form we are receiving is a ""TestToggleForm1"" form
    if($e->getForm()->getInternalName() !== ""TestToggleForm1"") return;
    ...
```
here's the problem already.
",True,True,74,257775.83333333334
scikit-optimize_____scikit-optimize_____579,2017-12-17T14:40:16Z,True,scikit-optimize_____scikit-optimize_____579_____158788350,"This pull-request partially solves issue #576.

I have added some more support for named dimensions in the search-space, as well as two plotting functions. I don't have time to fix your existing plotting functions but I have made TODO comments for what needs to be done in `plots.py`

Before I start, let me repeat that I really like your library! So please take the following as friendly and constructive feedback. I spent the whole Saturday from morning to evening working on this and half of this Sunday. A large part of yesterday was just trying to understand your code because of the severe lack of comments. I spent this much effort because I think your library is important and I hope you will polish it some more.

Please note that I have to travel tomorrow so it might be a while before I can respond if you have questions / comments to this PR.


# How to test this pull-request

The following code uses the additions of this PR by simulating an objective function for tuning the hyper-parameters of a simple neural network. It will save a few plots to disk and print various info. It should work if you copy this to a python-file and run it.

(And yes! My code is also ugly when I'm writing it. I polish it when it is done and works. But this code is not for release :-)

    import numpy as np
    from math import exp

    from skopt import gp_minimize
    from skopt.space import Real, Categorical, Integer
    from skopt.plots import plot_histogram, plot_contour, plot_objective

    dim_learning_rate = Real(name='learning_rate', low=1e-6, high=1e-2, prior='log-uniform')
    dim_num_dense_layers = Integer(name='num_dense_layers', low=1, high=5)
    dim_num_dense_nodes = Integer(name='num_dense_nodes', low=5, high=512)
    dim_activation = Categorical(name='activation', categories=['relu', 'sigmoid'])

    dimensions = [dim_learning_rate,
                  dim_num_dense_layers,
                  dim_num_dense_nodes,
                  dim_activation]

    default_parameters = [1e-4, 1, 64, 'relu']


    def model_fitness(x):
        learning_rate, num_dense_layers, num_dense_nodes, activation = x

        fitness = ((exp(learning_rate) - 1.0) * 1000) ** 2 + \
                  (num_dense_layers) ** 2 + \
                  (num_dense_nodes/100) ** 2

        fitness *= 1.0 + 0.1 * np.random.rand()

        if activation == 'sigmoid':
            fitness += 10

        return fitness

    print(model_fitness(x=default_parameters))

    search_result = gp_minimize(func=model_fitness,
                                dimensions=dimensions,
                                n_calls=40,
                                x0=default_parameters)

    print(search_result.x)
    print(search_result.fun)

    for fitness, x in sorted(zip(search_result.func_vals, search_result.x_iters)):
        print(fitness, x)

    space = search_result.space

    print(search_result.x_iters)

    print(space.to_dict(x=default_parameters))

    print(""Plotting now ..."")

    # fig = plot_histogram(result=search_result, dimension_id='activation')
    fig = plot_histogram(result=search_result, dimension_id='learning_rate', bins=20)
    # fig = plot_histogram(result=search_result, dimension_id='num_dense_layers', bins=20)
    # fig = plot_histogram(result=search_result, dimension_id='num_dense_nodes', bins=20)
    fig.savefig('histogram.png')

    fig = plot_contour(result=search_result,
                         dimension_id1='learning_rate',
                         dimension_id2='num_dense_nodes')
    fig.savefig('contour_learning_rate_vs_num_dense_nodes.png')

    fig = plot_contour(result=search_result,
                         dimension_id1='num_dense_layers',
                         dimension_id2='num_dense_nodes')
    fig.savefig('contour_num_dense_layers_vs_num_dense_nodes.png')

    print(""Done plotting!"")
   

# Comments about this PR

* I am completely new to your library so it is possible I have misunderstood how something works. Please feel free to make changes to the code I have added. But please keep the good commenting and coding style as it will help people in the future who have to understand and maintain this code.

* I am not familiar with the syntax you use for doc-strings. I have tried to imitate it. I normally use PyCharm which has a different syntax for doc-strings. It is one of the things I really don't like about Python, that you don't have to specify data-types in the function-declaration, but then you often have to do it in the doc-strings using a strange syntax. It's a really poor language-design. But anyway, please check if my docstrings are correct.

* Some of the functionality I have added such as `space.get_dimensions()` is not actually used by my code. It is intended to be helpful for when you fix the other plotting functions to support named dimensions and search-spaces with categories, etc.

* I added the function `space.to_dict()`. There is a somewhat related function in `utils.point_asdict()`. But I prefer the name `to_dict()` which is also used by Pandas. I realize it is bad to have two naming conventions in one library. Could I convince you to change the name of `asdict()`? :-)


# Comments about your existing code

You REALLY need to make better comments in your code! It is very difficult for others to understand what you want to do and how everything fits together. When there is a bug we have to guess what your intentions are with the code. If you don't have time to maintain this library in the future, it will probably become abandoned because others will find it easier to just start a new project rather than to try and understand and build on yours. That would be a pity, because you have some outstanding ideas in your library!

For example, this is one of the few comments in `plots.py`:

	# plots on the diagonal are special, like Texas. They have
	# their own range so do not mess with them.

I had to read this numerous times to finally understand that it was probably a joke
about Texas USA, although I'm still not 100% sure. You really have to be a master at writing comments in order to pull off jokes, otherwise it will be confusing and harmful to the people who try to understand your code. I personally don't write jokes in code and I am very reluctant to make jokes in my video tutorials as well, for the same reason.

Please look at the coding and commenting style in the functions I have added. You may think that I write too many comments, but what I am aiming for is to explain as much as possible in plain English. Every time you have a function call into skopt or matplotlib or some other package, the reader needs to look up the semantics of that function. If that is also poorly documented, reading your code becomes like solving a giant puzzle. It takes immense effort and bugs are allowed to propagate very easily. When everything is commented in plain English, you can read and understand the code very quickly.

Another issue is your actual coding style. I found bugs as well as code that was correct but not very good. For example, these nested loops are typical in `plots.py`:

    for i in range(space.n_dims):  # rows
        for j in range(space.n_dims):  # columns
            # ...
            if i != j:
                # ...
                if j > 0:
                    # ...

Firstly, you should have a local variable called `n_dims` instead of always referring to `space.n_dims`. Secondly, your nesting depth is sometimes 4 or 5 inside these for-loops, because you haven't been very precise in your loop-conditions. You can rewrite the for-loops to something like the following. It drastically reduces the nesting-depth and also only executes the loops that are necessary:

    for i in range(n_dims):
        # Do something for the diagonal case.

        for j in range(i):
            # Do something for the case where j<i.

        for j in range(i+1, n_dims):
            # Do something for the case where j>i.

You also have this code in `plots.py` which is incredibly difficult to understand because of the multiple nestings and list-comprehension:

    diagonal_ylim = (np.min([ax[i, i].get_ylim()[0]
                             for i in range(space.n_dims)]),
                     np.max([ax[i, i].get_ylim()[1]
                             for i in range(space.n_dims)]))

It is better to split code like this into several lines to avoid the complicated nesting and also make it easier to step-debug. I added a revised version to the code, although I've commented it out for now so you can test it properly.

Another thing is that it is quite confusing how the Space and Dimension objects interact and wrap each other, e.g. regarding the transformation. It appears that the transformation and its inverse may be carried out repeatedly to nullify each other, although I'm not sure.
",True,True,82,57493.933333333334
scikit-optimize_____scikit-optimize_____579,2017-12-17T14:40:18Z,True,scikit-optimize_____scikit-optimize_____579_____352260198,"Hello @Hvass-Labs! Thanks for submitting the PR.

 - In the file [`skopt/plots.py`](https://github.com/scikit-optimize/scikit-optimize/blob/5627c7e1f9501ee0fa43f6dce63b99c822ae53dd/skopt/plots.py), following are the PEP8 issues :

> [Line 135:80](https://github.com/scikit-optimize/scikit-optimize/blob/5627c7e1f9501ee0fa43f6dce63b99c822ae53dd/skopt/plots.py#L135): [E501](https://duckduckgo.com/?q=pep8%20E501) line too long (82 > 79 characters)
> [Line 173:80](https://github.com/scikit-optimize/scikit-optimize/blob/5627c7e1f9501ee0fa43f6dce63b99c822ae53dd/skopt/plots.py#L173): [E501](https://duckduckgo.com/?q=pep8%20E501) line too long (89 > 79 characters)
> [Line 308:80](https://github.com/scikit-optimize/scikit-optimize/blob/5627c7e1f9501ee0fa43f6dce63b99c822ae53dd/skopt/plots.py#L308): [E501](https://duckduckgo.com/?q=pep8%20E501) line too long (83 > 79 characters)
> [Line 528:1](https://github.com/scikit-optimize/scikit-optimize/blob/5627c7e1f9501ee0fa43f6dce63b99c822ae53dd/skopt/plots.py#L528): [E302](https://duckduckgo.com/?q=pep8%20E302) expected 2 blank lines, found 1
> [Line 643:80](https://github.com/scikit-optimize/scikit-optimize/blob/5627c7e1f9501ee0fa43f6dce63b99c822ae53dd/skopt/plots.py#L643): [W291](https://duckduckgo.com/?q=pep8%20W291) trailing whitespace

 - In the file [`skopt/space/space.py`](https://github.com/scikit-optimize/scikit-optimize/blob/5627c7e1f9501ee0fa43f6dce63b99c822ae53dd/skopt/space/space.py), following are the PEP8 issues :

> [Line 337:80](https://github.com/scikit-optimize/scikit-optimize/blob/5627c7e1f9501ee0fa43f6dce63b99c822ae53dd/skopt/space/space.py#L337): [E501](https://duckduckgo.com/?q=pep8%20E501) line too long (89 > 79 characters)
> [Line 443:80](https://github.com/scikit-optimize/scikit-optimize/blob/5627c7e1f9501ee0fa43f6dce63b99c822ae53dd/skopt/space/space.py#L443): [E501](https://duckduckgo.com/?q=pep8%20E501) line too long (93 > 79 characters)
> [Line 754:80](https://github.com/scikit-optimize/scikit-optimize/blob/5627c7e1f9501ee0fa43f6dce63b99c822ae53dd/skopt/space/space.py#L754): [E501](https://duckduckgo.com/?q=pep8%20E501) line too long (111 > 79 characters)
> [Line 785:80](https://github.com/scikit-optimize/scikit-optimize/blob/5627c7e1f9501ee0fa43f6dce63b99c822ae53dd/skopt/space/space.py#L785): [E501](https://duckduckgo.com/?q=pep8%20E501) line too long (84 > 79 characters)
> [Line 792:80](https://github.com/scikit-optimize/scikit-optimize/blob/5627c7e1f9501ee0fa43f6dce63b99c822ae53dd/skopt/space/space.py#L792): [E501](https://duckduckgo.com/?q=pep8%20E501) line too long (83 > 79 characters)
> [Line 809:1](https://github.com/scikit-optimize/scikit-optimize/blob/5627c7e1f9501ee0fa43f6dce63b99c822ae53dd/skopt/space/space.py#L809): [W293](https://duckduckgo.com/?q=pep8%20W293) blank line contains whitespace
> [Line 829:80](https://github.com/scikit-optimize/scikit-optimize/blob/5627c7e1f9501ee0fa43f6dce63b99c822ae53dd/skopt/space/space.py#L829): [E501](https://duckduckgo.com/?q=pep8%20E501) line too long (86 > 79 characters)



",True,True,82,57493.933333333334
scikit-optimize_____scikit-optimize_____579,2017-12-17T15:10:00Z,True,scikit-optimize_____scikit-optimize_____579_____352262324,"I have tested the code in this PR on the actual problem I am trying to solve, which is hyper-parameter optimization of a neural network. It is for one of my tutorials on TensorFlow but it is not yet released as I want to include plots from skopt.

I have a question for you regarding the interpretation of the plots. The plots I have here are similar to the ones in your original version, except that I have normalized the color-gradients.

The parameters for my search-space are:

* learning_rate (1e-6 to 1e-2, log-uniform)
* num_dense_layers (1 to 5)
* num_dense_nodes (5 to 512)
* activation (relu or sigmoid)

These are the fitness values and neural network parameters found by skopt. The fitness is the negative classification accuracy on a validation-set.

[(-0.99019999999999997, [0.0010475183322128938, 1, 149, 'relu']),
 (-0.98860000000000003, [0.0018261589189723629, 2, 470, 'relu']),
 (-0.98839999999999995, [0.00037986474511170302, 2, 512, 'relu']),
 (-0.98839999999999995, [0.0010415672190332141, 1, 512, 'relu']),
 (-0.98799999999999999, [0.0024978263671842247, 3, 504, 'relu']),
 (-0.98760000000000003, [0.0017094485608837695, 1, 512, 'relu']),
 (-0.98680000000000001, [0.0017476496180086432, 3, 512, 'relu']),
 (-0.98499999999999999, [0.00077047010944170677, 3, 43, 'relu']),
 (-0.98480000000000001, [0.0014475695468873279, 3, 220, 'relu']),
 (-0.98260000000000003, [0.01, 4, 198, 'relu']),
 (-0.97919999999999996, [0.0014732190199105925, 3, 286, 'sigmoid']),
 (-0.97499999999999998, [0.0022674676715302932, 3, 481, 'sigmoid']),
 (-0.97419999999999995, [4.4040787332101281e-05, 4, 512, 'relu']),
 (-0.97419999999999995, [7.1181229112317682e-05, 4, 498, 'relu']),
 (-0.9698, [0.01, 2, 5, 'relu']),
 (-0.96440000000000003, [0.01, 4, 461, 'relu']),
 (-0.96179999999999999, [0.0001, 1, 64, 'relu']),
 (-0.96099999999999997, [3.4301200074707198e-05, 3, 512, 'relu']),
 (-0.95979999999999999, [0.01, 3, 5, 'relu']),
 (-0.91579999999999995, [0.01, 5, 5, 'relu']),
 (-0.90759999999999996, [0.00076921095317043851, 3, 5, 'relu']),
 (-0.88200000000000001, [1.4842453224480901e-05, 1, 88, 'relu']),
 (-0.82620000000000005, [5.7751197554451486e-06, 2, 238, 'relu']),
 (-0.64780000000000004, [1.8824150512622488e-06, 5, 259, 'relu']),
 (-0.53779999999999994, [0.00049781616995792967, 4, 5, 'relu']),
 (-0.47120000000000001, [9.9999999999999995e-07, 1, 512, 'relu']),
 (-0.11260000000000001, [1.3010975577257652e-06, 3, 456, 'sigmoid']),
 (-0.11260000000000001, [7.553247055497371e-06, 4, 209, 'sigmoid']),
 (-0.11260000000000001, [0.0049652350761811535, 1, 5, 'sigmoid']),
 (-0.107, [0.0017182189692616892, 5, 49, 'sigmoid'])]

The min and max of the fitness values in `result.func_vals` are -0.9902 and -0.107.

In the code for `plot_contour()` that I have submitted in this PR, I have normalized the color-gradients of all these plots to use these min and max values. This is an attempt at giving a consistent interpretation of the color-scales between the different dimensions, because their ranges sometimes vary significantly.

(1) This picture shows the learning_rate vs. num_dense_layers. You will note the red star which shows the best parameters found, and the yellow area which is presumably the minimum area of the Gaussian Process? The `zi` returned by `partial_dependence()` ranges between -0.99 and -0.34 but the plot-colors are normalized to range between -0.9902 and -0.107 which are the extreme values from the optimization results.

![learning_rate_vs_num_dense_layers](https://user-images.githubusercontent.com/13588114/34080792-b7fe3234-e343-11e7-98ac-61800c05292e.png)

(2) This next picture shows the learning_rate vs. num_dense_nodes where the `zi` from `partial_dependence()` now only ranges between -0.73 and -0.44. Because of the normalization I do using `vmin` and `vmax` in my new `plot_contour()` function, the color-gradients are now almost just completely green.

![learning_rate_vs_num_dense_nodes](https://user-images.githubusercontent.com/13588114/34080783-a4f3ce38-e343-11e7-870d-b75dd64e580b.png)

(3) This next picture shows the num_dense_layers vs. num_dense_nodes, whose `zi` ranges between -0.78 and -0.47. Again because of the color-normalization in `plot_contour()` this is almost completely green, with a slight yellow in the center.

![num_dense_layers_vs_num_dense_nodes](https://user-images.githubusercontent.com/13588114/34080795-c9feebb8-e343-11e7-9a58-87ee0761ab5c.png)

I'm a bit confused about how to interpret these plots. Can you perhaps explain that to me? Is it because e.g. plot (3) for num_dense_layers vs. num_dense_nodes ""averages"" the fitness over the other remaining dimensions for learning_rate and activation? How should I interpret this? Does it mean that the performance is unpredictable from these two variables alone?

But if we look at plot (1) which shows a yellow area in the middle, does this mean that it is ""generally"" better to have a learning_rate around 0.002 and num_dense_layers of 3. But the best solution had num_dense_layers=1. Is it because the Gaussian Process is incapable of modelling this search-space accurately? Or is it because we are averaging the performance over the remaining variables, so it is possible that for particular choices of the other variables, the best point can fall outside of the yellow area?

Another thing is that these plots change each time I run `gp_minimize()`. Does that indicate I should run a lot more iteration than the 30 I have done here? The problem is of course that it is very costly to run each of these, as it is a full training of a neural network.

I hope you can enlighten me as to what is going on with these plots :-)
",True,True,82,57493.933333333334
scikit-optimize_____scikit-optimize_____579,2017-12-17T15:59:42Z,True,scikit-optimize_____scikit-optimize_____579_____352265639,"# [Codecov](https://codecov.io/gh/scikit-optimize/scikit-optimize/pull/579?src=pr&el=h1) Report
> Merging [#579](https://codecov.io/gh/scikit-optimize/scikit-optimize/pull/579?src=pr&el=desc) into [master](https://codecov.io/gh/scikit-optimize/scikit-optimize/commit/01ec08741cfe6b8c21e5428be3385e726ab1f58c?src=pr&el=desc) will **decrease** coverage by `2.73%`.
> The diff coverage is `14.28%`.

[![Impacted file tree graph](https://codecov.io/gh/scikit-optimize/scikit-optimize/pull/579/graphs/tree.svg?token=4yuVzAWoVM&width=650&height=150&src=pr)](https://codecov.io/gh/scikit-optimize/scikit-optimize/pull/579?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##           master     #579      +/-   ##
==========================================
- Coverage   86.24%   83.51%   -2.74%     
==========================================
  Files          23       23              
  Lines        1716     1783      +67     
==========================================
+ Hits         1480     1489       +9     
- Misses        236      294      +58
```


| [Impacted Files](https://codecov.io/gh/scikit-optimize/scikit-optimize/pull/579?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [skopt/utils.py](https://codecov.io/gh/scikit-optimize/scikit-optimize/pull/579/diff?src=pr&el=tree#diff-c2tvcHQvdXRpbHMucHk=) | `97.31% <ø> (ø)` | :arrow_up: |
| [skopt/plots.py](https://codecov.io/gh/scikit-optimize/scikit-optimize/pull/579/diff?src=pr&el=tree#diff-c2tvcHQvcGxvdHMucHk=) | `8.33% <10.86%> (+0.79%)` | :arrow_up: |
| [skopt/space/space.py](https://codecov.io/gh/scikit-optimize/scikit-optimize/pull/579/diff?src=pr&el=tree#diff-c2tvcHQvc3BhY2Uvc3BhY2UucHk=) | `87.83% <20.83%> (-5.26%)` | :arrow_down: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/scikit-optimize/scikit-optimize/pull/579?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/scikit-optimize/scikit-optimize/pull/579?src=pr&el=footer). Last update [01ec087...5627c7e](https://codecov.io/gh/scikit-optimize/scikit-optimize/pull/579?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",True,True,82,57493.933333333334
scikit-optimize_____scikit-optimize_____579,2017-12-21T00:47:27Z,True,scikit-optimize_____scikit-optimize_____579_____353225290,"Thanks a lot for your hard work. I think currently everyone is travelling so it will take some time for looking at this seriously.

The doc string format we try to follow https://github.com/numpy/numpy/blob/master/doc/HOWTO_DOCUMENT.rst.txt this is not entirely successful/uniform across the code base, yet.

The code could (always) be commented better or restructured. It probably also depends on each persons history on how confusing they find different idioms. The way forward is to add comments or propose changes like you did. Leaving comments about work to be done/homework for others (empirically) does not lead to things getting done. So I vote to remove them or turn them into comments about the code.",True,True,82,57493.933333333334
scikit-optimize_____scikit-optimize_____579,2017-12-21T01:07:10Z,True,scikit-optimize_____scikit-optimize_____579_____158175688,This should be a property like `is_real` below so the doc string is accessible in the REPL,True,True,82,57493.933333333334
scikit-optimize_____scikit-optimize_____579,2017-12-21T01:11:30Z,True,scikit-optimize_____scikit-optimize_____579_____158176195,What about using a `dict` like interface so that `some_space['learning_rate']` returns the dimension called `learning_rate`. We might not need to support indexing based access as people can to `some_space.dimensions[idx]`. This way we avoid having to support `some_space[idx]` and `some_space['learning_rate']` which might require us making guesses about what the user meant.,True,True,82,57493.933333333334
scikit-optimize_____scikit-optimize_____579,2017-12-21T01:12:09Z,True,scikit-optimize_____scikit-optimize_____579_____158176267,we should return just the dimension,True,True,82,57493.933333333334
scikit-optimize_____scikit-optimize_____579,2017-12-21T01:18:50Z,True,scikit-optimize_____scikit-optimize_____579_____158177032,"Dimensions by default do not have a name, we should only give them ""fake"" names in the place where we need them (like in plotting) instead of here.",True,True,82,57493.933333333334
scikit-optimize_____scikit-optimize_____579,2017-12-21T01:28:10Z,True,scikit-optimize_____scikit-optimize_____579_____158178115,"Could combine this with the above comment about using a `dict` like interface: `some_space[['lr', 'C']]` we would have to limit names to strings.",True,True,82,57493.933333333334
scikit-optimize_____scikit-optimize_____579,2017-12-21T01:36:15Z,True,scikit-optimize_____scikit-optimize_____579_____158179019,we should create a figure and axis. Then later we can do `ax.plot(...)` and `ax.scatter()` instead of using `plt.scatter`.,True,True,82,57493.933333333334
scikit-optimize_____scikit-optimize_____579,2017-12-21T01:38:53Z,True,scikit-optimize_____scikit-optimize_____579_____158179445,"most of the pandas plotting functions return an axis. What other examples of libraries are there that return plots? I think we should try to be consistent with what other libraries do. I'd at least return `fig, axis`",True,True,82,57493.933333333334
DragonetMC_____DragonProxy_____150,2017-12-21T21:20:56Z,True,DragonetMC_____DragonProxy_____150_____159752501,Now the armors are visible on other entities.,True,True,17,804840.4166666666
DragonetMC_____DragonProxy_____150,2017-12-22T12:07:25Z,True,DragonetMC_____DragonProxy_____150_____353585770,"Ffs this file isnt even using TABs

HOW HARD IS IT",True,True,17,804840.4166666666
flutter/engine/4491,2017-12-22T17:08:23Z,False,5a3d3e376480fdce3e6d9e38,"Did not find any tests for JSONUtil anywhere. If you point me to it, happy to add tests for this.",True,False,5,23164.766666666666
DragonetMC_____DragonProxy_____150,2017-12-22T19:06:03Z,True,DragonetMC_____DragonProxy_____150_____353657862,"I've compared the indentation of the commited files with all the other ones, and I haven't seen any difference. I've seen that indentation is done with only space on each file, so I've replaced each tabs with 4 space in all my commits.",True,True,17,804840.4166666666
DragonetMC_____DragonProxy_____150,2017-12-22T19:38:43Z,True,DragonetMC_____DragonProxy_____150_____353662733,"4 spaces = good,
tabs = bad 
personally speaking lel 
",True,True,17,804840.4166666666
DragonetMC_____DragonProxy_____150,2017-12-22T19:49:12Z,True,DragonetMC_____DragonProxy_____150_____353664291,Tabs are so much easier to work with. Spaces are for simpletons who would like to spend more time pushing SPACE,True,True,17,804840.4166666666
DragonetMC_____DragonProxy_____150,2017-12-22T19:52:58Z,True,DragonetMC_____DragonProxy_____150_____353664848,"I always use tabs for my own projects, but lots of other classes, especially translators are indented with only spaces, so I follow the guidelines.",True,True,17,804840.4166666666
DragonetMC_____DragonProxy_____150,2017-12-22T19:58:01Z,True,DragonetMC_____DragonProxy_____150_____353665559,"Half of the project is TABs, half is spaces and it gets annoying while coding when half certain lines of a file are spaces and the rest is tabs. Can everyone just use tabs",True,True,17,804840.4166666666
DragonetMC_____DragonProxy_____150,2017-12-22T20:08:50Z,True,DragonetMC_____DragonProxy_____150_____353667115,"I'm reformating classes when i view indentation problem, i'll make a full pass tomorrow.",True,True,17,804840.4166666666
DragonetMC_____DragonProxy_____150,2017-12-22T20:45:27Z,True,DragonetMC_____DragonProxy_____150_____353671947,There should be a button to reformat the entire project ,True,True,17,804840.4166666666
DragonetMC_____DragonProxy_____150,2017-12-23T06:32:28Z,True,DragonetMC_____DragonProxy_____150_____353710203,"Spaces pls no tabs 
",True,True,17,804840.4166666666
DragonetMC_____DragonProxy_____150,2017-12-23T10:26:42Z,True,DragonetMC_____DragonProxy_____150_____353718751,why not?,True,True,17,804840.4166666666
DragonetMC_____DragonProxy_____150,2017-12-23T14:02:07Z,True,DragonetMC_____DragonProxy_____150_____353727649,"Tabs look bad in some editors. 
",True,True,17,804840.4166666666
DragonetMC_____DragonProxy_____150,2017-12-24T12:32:00Z,True,DragonetMC_____DragonProxy_____150_____353781785,"@lukeeey Most IDEs and editors allow the tab key to input four spaces, and in saying that, if your IDE struggles to handle indentation, it might be time to either do something about it, or stop complaining. ",True,True,17,804840.4166666666
DragonetMC_____DragonProxy_____150,2017-12-24T12:35:18Z,True,DragonetMC_____DragonProxy_____150_____353781932,@yoft Or maybe its time to shut up because this conversation has already been resolved,True,True,17,804840.4166666666
pmmp_____PocketMine-MP_____1476,2017-12-24T13:21:39Z,True,pmmp_____PocketMine-MP_____1476_____353783984,"Not meant to be rude, but, can we get this merged by New Year?",True,True,74,257775.83333333334
scikit-optimize_____scikit-optimize_____579,2017-12-28T09:56:47Z,True,scikit-optimize_____scikit-optimize_____579_____158921369,Good point!,True,True,82,57493.933333333334
scikit-optimize_____scikit-optimize_____579,2017-12-28T09:57:28Z,True,scikit-optimize_____scikit-optimize_____579_____158921476,Nice idea I'll look into it!,True,True,82,57493.933333333334
scikit-optimize_____scikit-optimize_____579,2017-12-28T09:58:18Z,True,scikit-optimize_____scikit-optimize_____579_____158921588,"Well, the reason I do it like this is to try and provide efficient support for the existing plotting functions. I agree that it is an ugly function. I'll see if I can fix the plotting functions to make this better.",True,True,82,57493.933333333334
scikit-optimize_____scikit-optimize_____579,2017-12-28T10:07:07Z,True,scikit-optimize_____scikit-optimize_____579_____158922665,"I wonder if it even makes sense to have some dimensions named and others not?

I think it is quite inelegant that some dimensions don't have names because we then have special cases elsewhere e.g. in plotting. So if we want to give them default names it might as well be done in the `Space`-class.

Let us think about what dimension-names are used for:

* With PR #590 dim-names are now used for calling the objective function.
* Dim-names are used in plotting for the names on the axes.
* Dim-names may be used to lookup a dim from the search-space object e.g. using the dict-like syntax you proposed above.
* Anything else?

Can you name a case where we don't want dimensions to have names, except for benchmark functions?
",True,True,82,57493.933333333334
scikit-optimize_____scikit-optimize_____579,2017-12-28T10:08:05Z,True,scikit-optimize_____scikit-optimize_____579_____158922795,What would be the right way of doing this in Python? Is there a dunder-method that can be overrided for this type of behaviour?,True,True,82,57493.933333333334
scikit-optimize_____scikit-optimize_____579,2017-12-28T10:09:16Z,True,scikit-optimize_____scikit-optimize_____579_____158922929,I never really understood the semantics of Matplotlib. What is the reason for this?,True,True,82,57493.933333333334
scikit-optimize_____scikit-optimize_____579,2017-12-28T10:11:46Z,True,scikit-optimize_____scikit-optimize_____579_____158923185,"As I said above, I never really understood Matplotlib, but when I ran your plotting-functions in a python-file I couldn't figure out how to e.g. save the plot without having the `fig`-object. When using the functions in a Jupyter Notebook they can work either way with returning `fig` or `axis`. I also thought about returning both  `fig, axis` but I didn't think it was necessary. I can give it a try and see if it works in Jupyter.",True,True,82,57493.933333333334
scikit-optimize_____scikit-optimize_____579,2017-12-28T10:13:18Z,True,scikit-optimize_____scikit-optimize_____579_____158923373,I read this again and you make a very good point.,True,True,82,57493.933333333334
scikit-optimize_____scikit-optimize_____579,2017-12-28T10:22:49Z,True,scikit-optimize_____scikit-optimize_____579_____354265873,"I get the impression that the plotting functions will not get fixed by anyone else and since I really would like this to work, I'll try and take a look at it. I'll probably have to change the existing plotting functions and we'll have to discuss later if there are API changes etc. E.g. the naming scheme you have now is a bit strange when you already have names in the dimensions, so I'll definitely change that.

@betatim thanks for all the comments, they were quite helpful and I'll try and incorporate your suggestions.

Regarding comments in code, it is the *responsibility* of the person adding new code to properly document it. He is the only person who really understands what the code is *supposed* to do. You are hoping for a miracle if you think others will come along and fix your work for you. I will help you out a bit, but to be perfectly honest, it is quite arrogant to add code that isn't properly polished and commented, because if there are 1000 people who will be using the code and they waste just a few hours each, then it is thousands of man-hours that are wasted, because the original author didn't take an hour or two more to document the code. It is not just a problem with your project but a general problem. The solution is simply that you don't accept PR's until they are properly documented so you understand what is going on and you feel the API is sufficiently elegant. Like you are doing with this PR now :-)

PS: I really could use an explanation for the plots that I showed above, so I can understand what is going on and explain it in my tutorial. Perhaps I should have opened a separate thread for that question.",True,True,82,57493.933333333334
scikit-optimize_____scikit-optimize_____579,2017-12-28T11:26:48Z,True,scikit-optimize_____scikit-optimize_____579_____158931177,"This is really a key question! It makes the code very messy that there is the possibility for having unnamed dimensions. It requires special cases in so many places in the code. If the only reason for having unnamed dimensions is to have support for simple benchmark functions, then it would be better to drop this ""feature"" and force all dimensions to have names. Please explain why you have unnamed dimensions.",True,True,82,57493.933333333334
scikit-optimize_____scikit-optimize_____579,2017-12-28T11:55:32Z,True,scikit-optimize_____scikit-optimize_____579_____158933804,The index is now set inside each `Dimension`-instance by `Space.__init__` as we need it for e.g. plotting.,True,True,82,57493.933333333334
scikit-optimize_____scikit-optimize_____579,2017-12-28T11:56:10Z,True,scikit-optimize_____scikit-optimize_____579_____158933855,This works now using `Space.__getitem__()`.,True,True,82,57493.933333333334
scikit-optimize_____scikit-optimize_____579,2017-12-28T11:57:18Z,True,scikit-optimize_____scikit-optimize_____579_____158933964,This works now using `Space.__getitem__()` which can take either a single string or list of strings as argument.,True,True,82,57493.933333333334
carlos8f/zenbot/870,2017-12-28T14:48:52Z,False,5a4504596480fdcbcd74d81d,This issue was moved to highvelocityspace/zenbot#79,True,False,4,19762.05
scikit-optimize_____scikit-optimize_____579,2017-12-29T07:57:55Z,True,scikit-optimize_____scikit-optimize_____579_____159033902,"I don't think a `Dimension` inside a space should know what its index is. If you need the index when iterating over the dimensions in a space you should use:
```python
for i, dim in enumerate(space):
  print(i, dim)
```",True,True,82,57493.933333333334
scikit-optimize_____scikit-optimize_____579,2017-12-29T08:07:25Z,True,scikit-optimize_____scikit-optimize_____579_____159034453,"Unnamed dimensions are part historical (to support the shorthand way of defining them), for small search spaces you don't need to have names, and for some problems the dimensions do not have (sensible) names. I'd be -1 on requiring all dimensions to have names (or giving them dummy names automatically).",True,True,82,57493.933333333334
scikit-optimize_____scikit-optimize_____579,2017-12-29T08:11:53Z,True,scikit-optimize_____scikit-optimize_____579_____159034725,The `plt.plot` and co interface uses global state and is meant to make interactive plotting easy. The object orientated interface has less potential for weird interactions between plots because it does not have global state. The best way to learn is probably following some matplotlib tutorials/videos and looking at how other libraries that do plotting handle things.,True,True,82,57493.933333333334
scikit-optimize_____scikit-optimize_____579,2017-12-29T08:46:21Z,True,scikit-optimize_____scikit-optimize_____579_____354416978,"All PRs are reviewed by someone who is not the original author before they are merged. This means there are at least two people who are happy with the state of things. The code base is maintained by people who are experienced with python, numpy, matplotlib and scikit-learn, as a result it relies on common idioms and conventions from the PyData ecosystem. This can result in some pretty dense or hard to read code. The way out is for an outsider (who doesn't view the world through the same biased view) to come along and help improve things.

Some may even disagree on the level of comments/understandability. To avoid bike shedding what the appropriate level of comments, docs, style, etc is we require a concrete proposal via PR. This seems to work quite well.

The miracle is that random people volunteering their time manage to put together a quite well maintained and functioning software project implementing a complex bit of research. There will always be parts that aren't as good as they could be, new things to add, historical legacy that is annoying, etc. Assuming people are already donating as much time and effort as they can, the only way to move things along faster is by donating more effort yourself or donating money to pay for developer time.",True,True,82,57493.933333333334
scikit-optimize_____scikit-optimize_____579,2017-12-29T09:54:02Z,True,scikit-optimize_____scikit-optimize_____579_____159042694,"I am currently in the process of rewriting `plots.py` They now use the dimension-names for axis-labels. I think the most sensible way of supporting unnamed dimensions, is to return `X_i` for the i'th dimension, or something similar. I have already added an index to `Dimension` which is necessary when plotting only a sub-set of the dimensions (you'll see when I commit the code). I have just now modified the `name` property in the `Dimension`-class to return `X_index` if `self._name is None`. This also allows you to lookup unnamed dimensions using e.g. `space['X_2']` as well as named dimensions using `space['foo']`. It works fine and I think it is a reasonable solution. The only problem is that you cannot use different names for the axis in the plots. Sure it can be coded, but it would be a mess. If you want to name the axis in the plot, then they should be set when you define the `Dimension`. I think this is reasonable.",True,True,82,57493.933333333334
scikit-optimize_____scikit-optimize_____579,2017-12-29T10:01:44Z,True,scikit-optimize_____scikit-optimize_____579_____159043452,"The reason I originally made the above function return both the index and the `Dimension`-objects was precisely because I did not want to modify your code. But you need the index for various things when only using a subset of the dimensions and you cannot loop in the way you propose. So an efficient way of doing it was the above, but the API was ugly as I agreed.

What I have done now is to modify both `Dimension` and `Space` to give each `Dimension`-instance an index once they are added to a `Space`. This way we have easy access to it when we need it e.g. for plotting a sub-set of the dimensions, and for having default names such as X_i for unnamed dimensions. I think it is a reasonable solution.

The only problem with this would be if you later want to change the composition of dimensions in a search-space. But I don't see any need for doing that, or why that should even be supported by the API.

Are there any other problems with having an index inside the `Dimension`-object?
",True,True,82,57493.933333333334
scikit-optimize_____scikit-optimize_____579,2017-12-29T10:03:36Z,True,scikit-optimize_____scikit-optimize_____579_____159043648,"OK, I see. I'll take a look if I can fix this. I've used Matplotlib many times for many projects, but never liked its API.",True,True,82,57493.933333333334
pmmp_____PocketMine-MP_____1476,2017-12-29T11:47:26Z,True,pmmp_____PocketMine-MP_____1476_____354436138,"Not meant to be rude, but this PR make teaspoon plugin error",True,True,74,257775.83333333334
pmmp_____PocketMine-MP_____1476,2017-12-29T11:48:41Z,True,pmmp_____PocketMine-MP_____1476_____354436272,"Plugins should adapt to the core, not the other way around. Furthermore, this is a development branch. ",True,True,74,257775.83333333334
pmmp_____PocketMine-MP_____1476,2017-12-29T11:48:58Z,True,pmmp_____PocketMine-MP_____1476_____354436300,@WaldoFS that's entirely irrelevant to the discussion. TeaSpoon is its own project.,True,True,74,257775.83333333334
pmmp_____PocketMine-MP_____1476,2017-12-29T11:51:51Z,True,pmmp_____PocketMine-MP_____1476_____354436581,"@WaldoFS Not meant to be rude, plugin are suppose to make themself work with the core, not the other way around",True,True,74,257775.83333333334
pmmp_____PocketMine-MP_____1476,2017-12-29T11:57:19Z,True,pmmp_____PocketMine-MP_____1476_____354437079,"Ok, thanks all 😘",True,True,74,257775.83333333334
scikit-optimize_____scikit-optimize_____579,2017-12-29T14:16:16Z,True,scikit-optimize_____scikit-optimize_____579_____354451275,"As for #590, please remove your inline comments about our coding conventions. This is distracting everyone from the main goal of this PR (i.e., adding two plotting functions). If you want to propose changes to improve how to code looks and is read, we welcome that, but please make self-contained targeted PRs. ",True,True,82,57493.933333333334
scikit-optimize_____scikit-optimize_____579,2017-12-30T14:47:40Z,True,scikit-optimize_____scikit-optimize_____579_____354549864,"I have now pushed a new version. Almost the entire `plots.py` has been rewritten.

This example tests the new functions using the built-in hart6 benchmark function.

    from skopt import forest_minimize
    from skopt.space import Real, Categorical, Integer
    from skopt.benchmarks import hart6
    from skopt.plots import plot_objective_matrix, plot_evaluations_matrix
    from skopt.plots import plot_histogram, plot_objective_2D

    dim1 = Real(name='foo', low=0.0, high=1.0)
    dim2 = Real(name='bar', low=0.0, high=1.0)
    dim3 = Real(name='baz', low=0.0, high=1.0)
    dim4 = Real(name='rip', low=0.0, high=1.0)
    dim5 = Real(name='rap', low=0.0, high=1.0)
    dim6 = Real(name='rup', low=0.0, high=1.0)

    dimensions = [dim1, dim2, dim3, dim4, dim5, dim6]

    print(""Optimizing ..."")

    result = forest_minimize(hart6, dimensions, n_calls=200,
                             base_estimator=""ET"", random_state=4)

    print(""Plotting ..."")

    fig, ax = plot_evaluations_matrix(result=result, bins=20, dimension_names=None)
    fig.savefig('plot_evaluations_matrix_all.png')

    fig, ax = plot_objective_matrix(result=result, dimension_names=None)
    fig.savefig('plot_objective_matrix_all.png')

    # Now use a subset of the dimensions identified by their names.
    # Note the order is different from the search-space,
    # which will also be reflected in the plots.
    dim_names = ['bar', 'rip', 'foo']

    fig, ax = plot_evaluations_matrix(result=result, bins=20, dimension_names=dim_names)
    fig.savefig('plot_evaluations_matrix_some.png')

    fig, ax = plot_objective_matrix(result=result, dimension_names=dim_names)
    fig.savefig('plot_objective_matrix_some.png')

    fig, ax = plot_histogram(result=result, dimension_name='baz', bins=40)
    fig.savefig('plot_histogram.png')

    fig, ax = plot_objective_2D(result=result,
                                dimension_name1='baz',
                                dimension_name2='rap')
    fig.savefig('plot_objective_2D.png')

    print(""Done plotting!"")

These are the resulting plots:

![plot_evaluations_matrix_all](https://user-images.githubusercontent.com/13588114/34455112-643a8960-ed78-11e7-961b-599a4897bbff.png)
![plot_evaluations_matrix_some](https://user-images.githubusercontent.com/13588114/34455113-64613470-ed78-11e7-9686-36c67e4d68bb.png)
![plot_objective_matrix_all](https://user-images.githubusercontent.com/13588114/34455116-64dad9ba-ed78-11e7-955f-b65e39f2cec1.png)
![plot_objective_matrix_some](https://user-images.githubusercontent.com/13588114/34455117-65087c94-ed78-11e7-93c0-6f7719f2cc85.png)

![plot_histogram](https://user-images.githubusercontent.com/13588114/34455114-6488f47e-ed78-11e7-987c-d056a56835f8.png)
![plot_objective_2d](https://user-images.githubusercontent.com/13588114/34455115-64b46f32-ed78-11e7-8f2a-718661f07f88.png)
",True,True,82,57493.933333333334
scikit-optimize_____scikit-optimize_____579,2017-12-30T14:56:54Z,True,scikit-optimize_____scikit-optimize_____579_____354550311,"Here is another example using a ""simulated"" Neural Network for the objective function. This has a Categorical dimension which cannot be plotted.

    import numpy as np
    from math import exp
    from skopt import forest_minimize
    from skopt.space import Real, Categorical, Integer
    from skopt.plots import plot_objective_matrix, plot_evaluations_matrix
    from skopt.plots import plot_histogram, plot_objective_2D
    
    dim_learning_rate = Real(name='learning_rate', low=1e-6, high=1e-2, prior='log-uniform')
    dim_num_dense_layers = Integer(name='num_dense_layers', low=1, high=5)
    dim_num_dense_nodes = Integer(name='num_dense_nodes', low=5, high=512)
    dim_activation = Categorical(name='activation', categories=['relu', 'sigmoid', 'linear'])
    
    dimensions = [dim_learning_rate,
                  dim_num_dense_layers,
                  dim_num_dense_nodes,
                  dim_activation]
    
    default_parameters = [1e-4, 1, 64, 'relu']
    
    
    def model_fitness(x):
        learning_rate, num_dense_layers, num_dense_nodes, activation = x
    
        fitness = ((exp(learning_rate - 1e-3) - 1.0) * 5000) ** 2 + \
              (num_dense_layers - 3) ** 2 + \
              ((num_dense_nodes - 200)/100) ** 2
    
        fitness *= 1.0 + 0.05 * np.random.rand()
    
        if activation == 'sigmoid':
            fitness += 10
        elif activation == 'linear':
            fitness += 20
    
        return fitness
    
    
    print(""Optimizing ..."")
    
    result = forest_minimize(model_fitness, dimensions, n_calls=200,
                             base_estimator=""ET"", random_state=4)
    
    print(result.x)
    print(result.fun)
    
    for fitness, x in sorted(zip(result.func_vals, result.x_iters)):
        print(fitness, x)
    
    print(""Plotting ..."")
    
    try:
        fig, ax = plot_evaluations_matrix(result=result, bins=20, dimension_names=None)
        fig.savefig('plot_evaluations_matrix_all.png')
    
        fig, ax = plot_objective_matrix(result=result, dimension_names=None)
        fig.savefig('plot_objective_matrix_all.png')
    except:
        print(""Cannot plot Categorical dimensions! Skipping ..."")
    
    # Now use a subset of the dimensions identified by their names.
    # Note the order is different from the search-space,
    # which will also be reflected in the plots.
    dim_names = ['num_dense_nodes', 'learning_rate', 'num_dense_layers']
    
    fig, ax = plot_evaluations_matrix(result=result, bins=20, dimension_names=dim_names)
    fig.savefig('plot_evaluations_matrix_some.png')
    
    fig, ax = plot_objective_matrix(result=result, dimension_names=dim_names)
    fig.savefig('plot_objective_matrix_some.png')
    
    fig, ax = plot_histogram(result=result, dimension_name='learning_rate', bins=40)
    fig.savefig('plot_histogram1.png')
    
    fig, ax = plot_histogram(result=result, dimension_name='activation', bins=40)
    fig.savefig('plot_histogram2.png')
    
    fig, ax = plot_objective_2D(result=result,
                                dimension_name1='learning_rate',
                                dimension_name2='num_dense_nodes')
    fig.savefig('plot_objective_2D.png')
    
    print(""Done plotting!"")

These are the resulting plots:

![plot_evaluations_matrix_some](https://user-images.githubusercontent.com/13588114/34455185-d9b98186-ed79-11e7-870e-5d58c0fd05eb.png)
![plot_histogram1](https://user-images.githubusercontent.com/13588114/34455186-dac816a0-ed79-11e7-852a-98bee442b43b.png)
![plot_histogram2](https://user-images.githubusercontent.com/13588114/34455187-db44db4a-ed79-11e7-9726-23dd43c1f498.png)
![plot_objective_2d](https://user-images.githubusercontent.com/13588114/34455188-db8d8868-ed79-11e7-900d-9f3498eaa418.png)
![plot_objective_matrix_some](https://user-images.githubusercontent.com/13588114/34455189-dbdb88f6-ed79-11e7-9bcc-5a19f024b74b.png)
",True,True,82,57493.933333333334
scikit-optimize_____scikit-optimize_____579,2017-12-30T15:10:29Z,True,scikit-optimize_____scikit-optimize_____579_____354550973,"Let me once again start out by saying that I really like the *idea* of your project! My issue is with the implementation and the code ""style"" of certain parts of the project.

I rewrote almost the entire `plots.py` except for `plot_convergence()` which I don't want to spend hours understanding and rewriting. I'm not happy about leaving a file that I've almost completely rewritten, but frankly I've had enough of reading your code and feel my time is better spent elsewhere.

I would also like to add the plotting functions from: https://scikit-optimize.github.io/notebooks/bayesian-optimization.html to `plots.py` but I'll await your comments on this PR before I spend probably a whole day understanding and rewriting that.

From our previous discussions I get the impression that you don't like comments inside code. You find comments to be redundant or whatever. So I expect that you will either demand that I remove all those comments I added to `plots.py`, or you will bull-doze them the next time you work on the code yourself. At any rate, I get the impression that you look down on comments in code.

Here is the truth: Code with few comments might be OK if your code is really fantastic and beautiful, and your audience is very familiar with all the API's you are using, the math and methods, etc.

But your code is far from fantastic and I repeatedly got the impression that `plots.py` was written by someone without formal training in computer science and software engineering. It would certainly not get a passing grade where I come from. And when the code is poorly written AND has almost no comments, then it is really problematic for others to work on. This is what I meant by an arrogant coding style, because it shows complete disregard for whoever is going to work on the code next. Fair enough if the person is not a masterful coder - but everyone can write proper comments in English!

Fact is that the code was broken, and since you didn't want to fix it yourselves, someone from the outside would have to do it for you. If the code had been well-written or at least well-documented and well-commented, then it could have been fixed in a fraction of the time I have now spent. Instead I feel I've wasted almost a week understanding and cleaning up your code, because you didn't even want to add comments that showed what the *intention* of the code was, so I had to spend hours upon hours trying to deduce it.

And when you talk about ""programming idioms"" and ""complex research"" and that is why I might find your code difficult to understand, it is also rather arrogant, because what you're really saying is that you think people who don't understand your code must be ignorant or stupid. But in reality you are just making poor excuses for writing bad code!

So it has been very frustrating working on your code!

Let me ask you two questions:

1) Do you think someone in the future will find it easier to work on my version of `plots.py` or your old version? If you ask 100 programmers to fix a bug or extend `plots.py` with new features, I bet you that most of them would give up trying to understand your old code and they would just hack it until it *maybe* worked. This would bloat the code and quite possibly introduce new bugs. But even first-year students can now understand my version of `plots.py`.

2) Would you rather have someone waste a week trying to understand code you neglected to spend a few hours commenting when you wrote it, or would you rather have that person spend a week contributing something more meaningful to your project?

It is obvious that you are getting quite annoyed with me, but I really hope you take this criticism to heart. You don't have to like me, but at least consider that what I am saying might be reasonable and would significantly improve your project. Scikit-optimize could be a fantastic library! - but you need to improve the code-base so others can understand it and help you extend it, especially when you no longer work on it yourself!

Best wishes and Happy New Years! :-)
",True,True,82,57493.933333333334
codeIIEST/Algorithms/268,2017-12-31T21:34:26Z,False,5a4957e96480fdd0b72738de,Added the README file for Project_Euler folder and added problem 21 (Sum of all Amicable numbers till 10000) to the folder Project_Euler.,True,False,1,0.0
gdamore/tcell/181,2017-12-31T22:31:19Z,False,5a49653c6480fdca9d4d71b7,"Thanks. This looks good. I will merge when I am back in front of a
computer.
On Sun, Dec 31, 2017 at 2:06 PM Jason E. Aten, Ph.D. <
notifications@github.com> wrote:

> On Windows 10, LookupTerminfo(name string) in terminfo.go was getting
> passed an empty string, then crashing on name[0] being out of bounds.
> ------------------------------
> You can view, comment on, or merge this pull request online at:
>
>   https://github.com/gdamore/tcell/pull/181
> Commit Summary
>
>    - fix #172, don't crash on empty name string on call to LookupTerminfo
>
> File Changes
>
>    - *M* terminfo/terminfo.go
>    <https://github.com/gdamore/tcell/pull/181/files#diff-0> (6)
>
> Patch Links:
>
>    - https://github.com/gdamore/tcell/pull/181.patch
>    - https://github.com/gdamore/tcell/pull/181.diff
>
> —
> You are receiving this because you are subscribed to this thread.
> Reply to this email directly, view it on GitHub
> <https://github.com/gdamore/tcell/pull/181>, or mute the thread
> <https://github.com/notifications/unsubscribe-auth/ABPDfYO1L54tsf7jylAaXYKyxpoCJj1hks5tGAV3gaJpZM4RP8Wx>
> .
>
",True,False,1,0.0
scikit-optimize_____scikit-optimize_____579,2018-01-02T13:56:06Z,True,scikit-optimize_____scikit-optimize_____579_____354771332,"I've looked a bit into plotting the Gaussian Processes from your tutorial here:

https://scikit-optimize.github.io/notebooks/bayesian-optimization.html

For a real problem we do not have the true function so that can be omitted.

Then we have the mean and variance of the Gaussian Process which is green in those plots and the acquisition function which is blue.

I don't know if I understand this correctly, but I think that in order to plot these three aspects of the Gaussian Processes for multi-dimensional search-spaces, we would have to make Partial Dependence plots similarly to `plot_objective()` (which I call `plot_objective_matrix()` in my version of `plots.py`). That is, we would make a plot-matrix for the GP mean, another plot-matrix for the GP variance, and finally a plot-matrix for the acquisition function.

A significant part of the existing code could be reused - either the lazy way by copy and paste the common code, or the proper way of having the common code in a separate function which is used by both `plot_objective()` and a new `plot_gaussian_process()`.

But I'm not sure how useful these plots of the Gaussian Process would really be for multi-dimensional problems and if it would be worth the effort. Any thoughts?
",True,True,82,57493.933333333334
scikit-optimize_____scikit-optimize_____579,2018-01-03T12:33:44Z,True,scikit-optimize_____scikit-optimize_____579_____355001596,"Last evening I thought about this and I really have to move on to other things, so I won't be implementing the plots of the Gaussian Processes, even though plots of especially the acquisition function might be quite useful.

So let's focus on what needs to be fixed with the PR as it stands now before it can be merged. Perhaps you don't like that I changed the names to `plot_..._matrix()` and I can easily change them back, that's perfectly fine.

Note from the discussion in PR #592 that I will *not* remove comments from the code. They serve a purpose of helping newcomers 5 years from now to quickly and clearly understand the code. This code is *not* written for *you* - it is written for them!
",True,True,82,57493.933333333334
flutter/engine/4491,2018-01-04T00:31:00Z,False,5a4d75c76480fdcf3b70a20e,@mehmetf You may have to blaze new trails in testing to test this code.,True,False,5,23164.766666666666
scikit-optimize_____scikit-optimize_____579,2018-01-06T13:38:53Z,True,scikit-optimize_____scikit-optimize_____579_____355747595,I assume that this PR is ready to be merged (@Hvass-Labs if otherwise let me know) so I add [MRG] to the title (scikit-learn style titles).,True,True,82,57493.933333333334
flutter/engine/4491,2018-01-06T22:31:51Z,False,5a514e586480fd0d2d94aac2,"@Hixie I do want to test this code; unfortunately I don't have much time to spend on it. Do you have a rough sketch in your mind on how the infra should look like? I can attempt to do it.

Having said that I don't think all that setup should be part of this PR so I will submit this as is and file a PR to create a testing harness for platform code in engine. Feel free to do a brain dump there.",True,False,5,23164.766666666666
flutter/engine/4491,2018-01-07T06:40:11Z,False,5a51c0cd6480fd0d3d772e23,"This broke the Linux and Mac builds https://build.chromium.org/p/client.flutter/console :
```
../../flutter/shell/platform/android/io/flutter/plugin/common/JSONUtil.java:47: error: cannot find symbol
                Iterator<String> keyIterator = jsonObject.keys();
                ^
  symbol:   class Iterator
  location: class JSONUtil
1 error
```
",True,False,5,23164.766666666666
flutter/engine/4491,2018-01-07T19:13:09Z,False,5a5271466480fd0d3c75cc43,"@mehmetf I'm not familiar with how Java normally gets unit-tested, but I would expect it to follow a pattern similar to the C++ or Dart testing for the engine, which is in https://github.com/flutter/engine/tree/master/testing, driven from `run_tests.sh`.",True,False,5,23164.766666666666
scikit-optimize_____scikit-optimize_____579,2018-01-08T08:16:10Z,True,scikit-optimize_____scikit-optimize_____579_____355904449,"@iaroslav-ai and @betatim I'm sorry that this PR has become so unwieldy. As you can see the checks are failing because I rewrote the API a bit e.g. renamed `plot_objective()` to `plot_objective_matrix()`. I'll tell you what. I'll revert these things to try and make it compatible with your old API, so all the checks pass and you also don't have to rewrite all your tutorials. Then I'll let you know when I believe this is ready to be merged 'as is'. That should make it easier for you to review.",True,True,82,57493.933333333334
scikit-optimize_____scikit-optimize_____579,2018-01-08T13:08:41Z,True,scikit-optimize_____scikit-optimize_____579_____355961877,"I have now pushed a version that I believe can be merged 'as is', provided all tests pass. The tests all pass on my system and I have also run `bash ./build_tools/circle/execute.sh` locally and it seems to create all the plots correctly. I have also run the test-code that I have shown above and it works fine.

There is no need to read all of the above discussions when reviewing this. Here is essentially what this PR does:

1) Improves support for named dimensions in several ways:

    * A dimension is given a default name 'X_index' if the user has not supplied a name, where `index` is a count for this dimension in the search-space. This is the original naming scheme you have used in `plots.py` and I have just moved it into `Dimension` and `Space`. I'm not so fond of the name `X_index` but I don't really have a better suggestion. Maybe `dim0`, `dim1`, `dim2` which would also work better with `@use_named_args`? Maybe another PR for this in the future.

    * Plots now use these dimension-names on the x- and y-axis. This means there is a slight API change in e.g. `plot_objective()` and `plot_evaluations()` but I don't think this even affects v. 0.4 users (not sure).

    * Names should be valid Python-variable-names because they may be used as args with `@use_named_args`. For example, you should use `n_trees` instead of `number of trees`. If you want another name to be displayed e.g. in plots then an idea would be to either add `display_name` to `Dimension` or to let the plotting functions take a separate list of names to be displayed. That would be a future PR.

    * Dimensions can be looked up from the search-space using dict-like lookup e.g. `space['foo']` and several dimensions can be looked up using e.g. `space[['foo', 'bar']]`. (Thanks to @betatim for suggesting this feature instead of e.g. `get_dimensions()`).

    * I also had to add an `__init__` to `Dimension` and remove `test_dimension_name_none` because a dimension's name can now only be None during initialization. I also fixed various bugs related to names.

2) `plots.py` has been almost completely rewritten because I needed to add support for search-spaces with `Categorical` dimensions. The easiest way of doing this, was to let the user select a subset of the dimensions to be plotted, hence the need for e.g. `space[['foo', 'bar']]`. But this required so many changes to `plots.py` and because I found it very difficult to understand your code, I decided to do a complete rewrite.

3) I have added two new plotting functions `plot_histogram()` and `plot_objective_2D()`. These also serve as a simple example of plotting data from the optimization log. `plot_histogram()` also allows plotting of `Categorical` dimensions, which is not allowed by `plot_objective()` and `plot_evaluations()`.

In my TensorFlow video tutorials I sometimes spend a few minutes commenting on the coding style of other libraries. But there were so many issues with `plots.py` that I decided to do a whole separate video, because it might be useful to a lot more people than just TensorFlow users. So I have actually already recorded a 40-minute video where I discuss why I rewrote `plots.py` like this. I have tried to make the video funny and memorable. It is sort of a stand-up comedy code review and I hope you don't get too upset. I don't think it is a personal attack, so just take it on the chin :-) I'll put it on youtube shortly after the actual tutorial which I haven't recorded yet.

So what I suggest, is that you merge this code now if it works correctly, so my audience can run my new tutorial which relies on this code addition. If you greatly dislike my coding style and want to bulldoze the comments, then please wait until you've watched the video where I explain my coding philosophy. Perhaps you'll realize that what I've done actually makes sense.
",True,True,82,57493.933333333334
scikit-optimize_____scikit-optimize_____579,2018-01-09T12:18:12Z,True,scikit-optimize_____scikit-optimize_____579_____356268405,"I have fixed the merge conflicts with the master-branch. I did a `git rebase` to squash all my commits into a single commit, then rebased to master and fixed merge conflicts, and then `push --force` back to github. I've never done this before and it took me some hours to figure out how to do it. If I've messed up anything please let me know.

If all other checks pass, then I believe this is ready to be merged.",True,True,82,57493.933333333334
pmmp_____PocketMine-MP_____1906,2018-01-11T19:07:42Z,True,pmmp_____PocketMine-MP_____1906_____162461884,"### Relevant issues

Fixes #1903 ",True,True,9,974.6333333333333
pmmp_____PocketMine-MP_____1906,2018-01-11T19:12:47Z,True,pmmp_____PocketMine-MP_____1906_____161048735,"Is a lambda necessary here? `""count""` as a callable ought to suffice.",True,True,9,974.6333333333333
pmmp_____PocketMine-MP_____1906,2018-01-11T19:16:06Z,True,pmmp_____PocketMine-MP_____1906_____161049547,"ok, done",True,True,9,974.6333333333333
pmmp_____PocketMine-MP_____1906,2018-01-11T19:24:54Z,True,pmmp_____PocketMine-MP_____1906_____161051762,now actually done. :p,True,True,9,974.6333333333333
heroku_____stack-images_____91,2018-01-12T01:32:10Z,True,heroku_____stack-images_____91_____162529244,"This issue was opened on the ruby buildpack:
https://github.com/heroku/heroku-buildpack-ruby/issues/635

ActiveStorage has native support for PDF previews with the mupdf tool as
well as metadata information with ffmpeg. ActiveSupport shells out to
these binaries directly.

Here are the size changes from adding these packages in:

heroku/heroku:16
base: 461MB
mupdf: 471MB
mupdf+ffmpeg: 645MB

heroku/cedar:14
base: 1.35GB
mupdf: 1.36GB
mupdf+ffmpeg: 1.46GB

This amounts to a 184mb increase in stack image size.",True,True,12,10864.45
heroku_____stack-images_____91,2018-01-12T08:27:12Z,True,heroku_____stack-images_____91_____357173790,:-1: this is a huge overhead for something the vast majority of apps don't need.,True,True,12,10864.45
scikit-optimize_____scikit-optimize_____579,2018-01-12T10:13:19Z,True,scikit-optimize_____scikit-optimize_____579_____357198245,"I would appreciate it if someone would review this soon so it can be merged and we can all move on. There is no need to read the whole thread, just read https://github.com/scikit-optimize/scikit-optimize/pull/579#issuecomment-355961877.",True,True,82,57493.933333333334
pmmp_____PocketMine-MP_____1906,2018-01-12T10:35:58Z,True,pmmp_____PocketMine-MP_____1906_____357203543,"While this is an elegant solution, it's very sub-optimal for performance. `array_*` functions tend to be quite slow.

On a testing server, I find that this is about 2x faster in the majority of cases:
```php
			$count = 0;
			foreach($this->blockCache as $list){
				$count += count($list);
				if($count > 2048){
					$this->blockCache = [];
					break;
				}
			}
```
Likely something to do with not allocating a temporary array for `array_sum()` to add up.

Of course, this is all on the order of microseconds, so any savings are very small.",True,True,9,974.6333333333333
pmmp_____PocketMine-MP_____1906,2018-01-12T10:42:56Z,True,pmmp_____PocketMine-MP_____1906_____357205086,"PHP is quite the drag... Leave it for code readability, or replace it with yet another PHP performance workaround?

When we're done with that, can we all agree that Shoghi needs to die for choosing PHP in the first place?",True,True,9,974.6333333333333
pmmp_____PocketMine-MP_____1906,2018-01-12T10:43:09Z,True,pmmp_____PocketMine-MP_____1906_____357205134,"To clarify to readers, effectively what's happening in this PR under the hood at runtime is this (when you PHPify the `array_*` functions):
```php
            $counts = [];
            foreach($this->blockCache as $list){
                $counts[] = count($list);
            }

            $count = 0;
            foreach($counts as $c){
                $count += $c;
            }
            
            if($count > 2048){
                $this->blockCache = [];
            }
```",True,True,9,974.6333333333333
pmmp_____PocketMine-MP_____1906,2018-01-12T11:10:12Z,True,pmmp_____PocketMine-MP_____1906_____357211191,"I find it sad that PHP developers are so used to making these sacrifices, that they don't even see what's wrong with it anymore. In many languages, map functions and array summations perform well. PHP truly brings out the worst in developers.",True,True,9,974.6333333333333
pmmp_____PocketMine-MP_____1906,2018-01-12T11:22:20Z,True,pmmp_____PocketMine-MP_____1906_____357213662,This discussion could go on all day if we had the patience. I'm going to lock this before it gets out of hand.,True,True,9,974.6333333333333
styleguidist_____react-styleguidist_____730,2018-01-12T17:58:24Z,True,styleguidist_____react-styleguidist_____730_____357309900,"# [Codecov](https://codecov.io/gh/styleguidist/react-styleguidist/pull/730?src=pr&el=h1) Report
> Merging [#730](https://codecov.io/gh/styleguidist/react-styleguidist/pull/730?src=pr&el=desc) into [master](https://codecov.io/gh/styleguidist/react-styleguidist/commit/55ce2d519eae846db33ac8b4940a6fa18fa9f940?src=pr&el=desc) will **decrease** coverage by `0.02%`.
> The diff coverage is `n/a`.

| [Impacted Files](https://codecov.io/gh/styleguidist/react-styleguidist/pull/730?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [src/rsg-components/Editor/Editor.js](https://codecov.io/gh/styleguidist/react-styleguidist/pull/730/diff?src=pr&el=tree#diff-c3JjL3JzZy1jb21wb25lbnRzL0VkaXRvci9FZGl0b3IuanM=) | `85.71% <0%> (-1.79%)` | :arrow_down: |
| [src/rsg-components/Props/PropsRenderer.js](https://codecov.io/gh/styleguidist/react-styleguidist/pull/730/diff?src=pr&el=tree#diff-c3JjL3JzZy1jb21wb25lbnRzL1Byb3BzL1Byb3BzUmVuZGVyZXIuanM=) | `95.91% <0%> (ø)` | :arrow_up: |
| [src/utils/getRouteData.js](https://codecov.io/gh/styleguidist/react-styleguidist/pull/730/diff?src=pr&el=tree#diff-c3JjL3V0aWxzL2dldFJvdXRlRGF0YS5qcw==) | `100% <0%> (ø)` | :arrow_up: |
| [src/rsg-components/Text/TextRenderer.js](https://codecov.io/gh/styleguidist/react-styleguidist/pull/730/diff?src=pr&el=tree#diff-c3JjL3JzZy1jb21wb25lbnRzL1RleHQvVGV4dFJlbmRlcmVyLmpz) | `100% <0%> (ø)` | :arrow_up: |
| [src/rsg-components/Para/ParaRenderer.js](https://codecov.io/gh/styleguidist/react-styleguidist/pull/730/diff?src=pr&el=tree#diff-c3JjL3JzZy1jb21wb25lbnRzL1BhcmEvUGFyYVJlbmRlcmVyLmpz) | `100% <0%> (ø)` | :arrow_up: |
| [...rc/rsg-components/Playground/PlaygroundRenderer.js](https://codecov.io/gh/styleguidist/react-styleguidist/pull/730/diff?src=pr&el=tree#diff-c3JjL3JzZy1jb21wb25lbnRzL1BsYXlncm91bmQvUGxheWdyb3VuZFJlbmRlcmVyLmpz) | `100% <0%> (ø)` | :arrow_up: |
| [src/rsg-components/Section/Section.js](https://codecov.io/gh/styleguidist/react-styleguidist/pull/730/diff?src=pr&el=tree#diff-c3JjL3JzZy1jb21wb25lbnRzL1NlY3Rpb24vU2VjdGlvbi5qcw==) | `100% <0%> (ø)` | :arrow_up: |
| [loaders/utils/getSections.js](https://codecov.io/gh/styleguidist/react-styleguidist/pull/730/diff?src=pr&el=tree#diff-bG9hZGVycy91dGlscy9nZXRTZWN0aW9ucy5qcw==) | `100% <0%> (ø)` | :arrow_up: |
| [src/rsg-components/Section/SectionRenderer.js](https://codecov.io/gh/styleguidist/react-styleguidist/pull/730/diff?src=pr&el=tree#diff-c3JjL3JzZy1jb21wb25lbnRzL1NlY3Rpb24vU2VjdGlvblJlbmRlcmVyLmpz) | `100% <0%> (ø)` | :arrow_up: |
| [loaders/styleguide-loader.js](https://codecov.io/gh/styleguidist/react-styleguidist/pull/730/diff?src=pr&el=tree#diff-bG9hZGVycy9zdHlsZWd1aWRlLWxvYWRlci5qcw==) | `100% <0%> (ø)` | :arrow_up: |
| ... and [9 more](https://codecov.io/gh/styleguidist/react-styleguidist/pull/730/diff?src=pr&el=tree-more) | |
",True,True,12,48256.88333333333
styleguidist_____react-styleguidist_____730,2018-01-12T18:23:48Z,True,styleguidist_____react-styleguidist_____730_____357316037,"
<!--
  0 failure: 
  1 warning:  Changes were made...
  
  
  DangerID: danger-id-default;
-->


<table>
  <thead>
    <tr>
      <th width=""50""></th>
      <th width=""100%"" data-danger-table=""true"">Warnings</th>
    </tr>
  </thead>
  <tbody><tr>
      <td>:warning:</td>
      <td>

  Changes were made to `package.json`, but not to `package-lock.json`.

Perhaps you need to run `npm install` and commit changes in package-lock.json. Make sure you’re using npm 5+.
  </td>
    </tr>
  </tbody>
</table>



<p align=""right"">
  Generated by :no_entry_sign: <a href=""http://github.com/danger/danger-js/"">dangerJS</a>
</p>
",True,True,12,48256.88333333333
styleguidist_____react-styleguidist_____730,2018-01-12T18:36:18Z,True,styleguidist_____react-styleguidist_____730_____357318968,"@sapegin ,
This pr is just a simple example.  If linting and code coverage for examples are that important, you can just close this pr.",True,True,12,48256.88333333333
styleguidist_____react-styleguidist_____730,2018-01-12T19:10:21Z,True,styleguidist_____react-styleguidist_____730_____357327390,There's no point in making exceptions for examples: they are code that someone will have to maintain too. Same simple rules apply to all code in the project.,True,True,12,48256.88333333333
styleguidist_____react-styleguidist_____730,2018-01-12T20:17:40Z,True,styleguidist_____react-styleguidist_____730_____357343239,"@sapegin 
look at the coverage error.   it's a file I didn't touch.   pr closed.  best wishes",True,True,12,48256.88333333333
heroku_____stack-images_____91,2018-01-15T23:09:29Z,True,heroku_____stack-images_____91_____357809354,"I tend to agree with @dmathieu on this. Is there another way we can practically meet the need in heroku/heroku-buildpack-ruby#635, such as a mupdf buildpack?

Longer-term, this is a good signal that we need to be thinking about how to support package installation on Heroku, but we're not there (yet).",True,True,12,10864.45
heroku_____stack-images_____91,2018-01-15T23:31:02Z,True,heroku_____stack-images_____91_____357812144,"> Longer-term, this is a good signal that we need to be thinking about how to support package installation on Heroku, but we're not there (yet).

I haven't tried this particular feature of build manifests yet, but it looks like it's a first class citizen when using it (compared to having to use [heroku-buildpack-apt](https://github.com/heroku/heroku-buildpack-apt) at least):
https://devcenter.heroku.com/articles/heroku-yml-build-manifest#installing-packages-from-apt",True,True,12,10864.45
heroku_____stack-images_____91,2018-01-16T08:16:38Z,True,heroku_____stack-images_____91_____357884545,@edmorley I think what Owen talks about is providing a way for buildpacks to install packages.,True,True,12,10864.45
scikit-optimize_____scikit-optimize_____579,2018-01-16T09:50:00Z,True,scikit-optimize_____scikit-optimize_____579_____357907657,"Dear developers,
Kindly asking you to include changes given by mr. Hvass in the official release of scikit-optimize or provide any other working alternative since an issue is quite important for those who want to handle Bayes optimization properly and save a vast of time.",True,True,82,57493.933333333334
heroku_____stack-images_____91,2018-01-16T22:29:34Z,True,heroku_____stack-images_____91_____358129483,"@edmorley @dmathieu Yeah, I'd somewhat forgotten that it's okay to talk about the heroku.yml feature now that it's in dev preview, and wanted to avoid accidentally committing the team to anything.

I do still think there's more to do; we're still working out how to (and, really, if we should) converge heroku.yml and the current build and runtime environments.",True,True,12,10864.45
scikit-optimize_____scikit-optimize_____579,2018-01-17T09:39:17Z,True,scikit-optimize_____scikit-optimize_____579_____161997245,For python we can't do this so we need to explicitly unpack the bounds :(,True,True,82,57493.933333333334
scikit-optimize_____scikit-optimize_____579,2018-01-17T09:43:47Z,True,scikit-optimize_____scikit-optimize_____579_____161998489,use `isinstance` to check the type of an object in python,True,True,82,57493.933333333334
scikit-optimize_____scikit-optimize_____579,2018-01-17T09:44:58Z,True,scikit-optimize_____scikit-optimize_____579_____161998852,remove some leading white space to fix the indentation,True,True,82,57493.933333333334
scikit-optimize_____scikit-optimize_____579,2018-01-17T09:46:42Z,True,scikit-optimize_____scikit-optimize_____579_____161999338,`isinstance`,True,True,82,57493.933333333334
scikit-optimize_____scikit-optimize_____579,2018-01-17T09:47:25Z,True,scikit-optimize_____scikit-optimize_____579_____161999505,`isinstance`,True,True,82,57493.933333333334
scikit-optimize_____scikit-optimize_____579,2018-01-17T09:53:39Z,True,scikit-optimize_____scikit-optimize_____579_____162001068,"I still don't like it that we have to reach into a dimension object from the outside to make it ""whole"". My proposal would be to allow unnamed dimensions `self.name = None` and use `enumerate(dimensions) in the plotting to make up a axis label on the fly. What do others think?",True,True,82,57493.933333333334
scikit-optimize_____scikit-optimize_____579,2018-01-17T09:56:01Z,True,scikit-optimize_____scikit-optimize_____579_____358253883,"I've started adding some comments. It will take a few iterations of going through the code.

@mrStasSmirnoff you can help getting this merged by helping with the review.",True,True,82,57493.933333333334
scikit-optimize_____scikit-optimize_____579,2018-01-17T10:10:00Z,True,scikit-optimize_____scikit-optimize_____579_____358257540,"@betatim Thanks!
@iaroslav-ai If you have some time, would you mind helping with this review? I found your review of my `@use_named_args` contribution to be constructive.",True,True,82,57493.933333333334
scikit-optimize_____scikit-optimize_____579,2018-01-17T10:13:45Z,True,scikit-optimize_____scikit-optimize_____579_____162006173,"Right. However, this should be replaced with `check_list_types` from PR #597 as mentioned in the TODO-comment. I am waiting for a review of that PR.",True,True,82,57493.933333333334
scikit-optimize_____scikit-optimize_____579,2018-01-17T10:41:48Z,True,scikit-optimize_____scikit-optimize_____579_____162012861,"I understand your concern. Let me try and explain the reasoning behind this.

The way I chose to resolve the problem of `Categorical` dimensions in the plots, was simply to allow the user to select which dimensions to show by giving a list of dimension-names. This may be useful in other ways as well, if you only want to plot a few of the dimensions for some reason.

Because skopt uses unnamed lists of parameters internally, we need an index for each of the dimensions we are interested in, in order to get the correct parameters from the optimization-log. We cannot use `enumerate(some_dimensions)` because `some_dimensions` are only a subset of `space.dimensions`. So we need to know the indices of `some_dimensions` as they occur in `space.dimensions`.

If the `dimension`-object doesn't know its own index, then we have to look it up from the `space.dimensions` list from the given names of the dimensions. The natural place to have a function for looking up these indices would be in the `space`-object.

To avoid having to go over the `space.dimensions`-list several times; one for looking up the dimensions and another for looking up their indices, I had originally merged all of this into a single function `space.get_dimensions()` in one of the earlier versions of this PR, that would return the relevant `dimension`-objects, their names, and their indices, as I recall. This was the most efficient way of doing it without tampering with your code and without iterating over `space.dimensions` multiple times - but I admitted that it was ugly and as I recall @betatim didn't like it, so I changed it. This was also where @betatim's suggestion for using `space[['dim_name1', 'dim_name2', ...]]` came from, which just returns the `dimension`-objects, but not their indices.

I think the easiest and cleanest way of getting a dimension's index in the search-space, is simply to store it in the `dimension`-object. The only problem with this, is if you want to modify the search-space by adding or remove dimensions, or changing their order. But I don't see a reason for doing that and I don't think it's even possible without mangling the code.

Regarding unnamed dimensions, I think it is a bad idea to give them default names in the plotting functions. Imagine that you have some other functionality some day that also needs default names, then suddenly you are setting default names for the dimensions in different places. I believe it is better to set default names in the `dimension`-object where they belong, and for this they also need to know their indices in the search-space.

If you want to use different names for the plotting-axes e.g. ""Learning Rate"" instead of ""learning_rate"" then an idea would be to either set a `display_name` when constructing the `dimension` or giving a list of `display_names` when calling the plotting functions. There are pro's and con's of both approaches.

I hope this was a convincing argument. Otherwise please come up with an alternative design proposal for how we should get these indices.",True,True,82,57493.933333333334
scikit-optimize_____scikit-optimize_____579,2018-01-17T10:54:37Z,True,scikit-optimize_____scikit-optimize_____579_____162015909,"Right. However, this should be replaced with check_list_types from PR #597 as mentioned in the TODO-comment. I am waiting for a review of that PR.",True,True,82,57493.933333333334
scikit-optimize_____scikit-optimize_____579,2018-01-17T10:55:06Z,True,scikit-optimize_____scikit-optimize_____579_____162016109,Is this a Python 2.7 compatibility thing?,True,True,82,57493.933333333334
refinery-platform/refinery-platform/2479,2018-01-17T20:22:05Z,False,5a5fb0776480fd0d18fcb386,"# [Codecov](https://codecov.io/gh/refinery-platform/refinery-platform/pull/2479?src=pr&el=h1) Report
> Merging [#2479](https://codecov.io/gh/refinery-platform/refinery-platform/pull/2479?src=pr&el=desc) into [develop](https://codecov.io/gh/refinery-platform/refinery-platform/commit/b9a3e9a7461914d93011abc71de4aed34a5628ca?src=pr&el=desc) will **decrease** coverage by `0.1%`.
> The diff coverage is `100%`.

[![Impacted file tree graph](https://codecov.io/gh/refinery-platform/refinery-platform/pull/2479/graphs/tree.svg?token=mvE3NWb5EG&src=pr&height=150&width=650)](https://codecov.io/gh/refinery-platform/refinery-platform/pull/2479?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop    #2479      +/-   ##
===========================================
- Coverage    52.55%   52.45%   -0.11%     
===========================================
  Files          413      413              
  Lines        27439    27387      -52     
  Branches      1240     1240              
===========================================
- Hits         14420    14365      -55     
- Misses       13019    13022       +3
```


| [Impacted Files](https://codecov.io/gh/refinery-platform/refinery-platform/pull/2479?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [refinery/data\_set\_manager/api.py](https://codecov.io/gh/refinery-platform/refinery-platform/pull/2479/diff?src=pr&el=tree#diff-cmVmaW5lcnkvZGF0YV9zZXRfbWFuYWdlci9hcGkucHk=) | `100% <100%> (ø)` | :arrow_up: |
| [...nery/data\_set\_manager/single\_file\_column\_parser.py](https://codecov.io/gh/refinery-platform/refinery-platform/pull/2479/diff?src=pr&el=tree#diff-cmVmaW5lcnkvZGF0YV9zZXRfbWFuYWdlci9zaW5nbGVfZmlsZV9jb2x1bW5fcGFyc2VyLnB5) | `78.77% <0%> (-1.12%)` | :arrow_down: |
| [...ager/management/commands/process\_metadata\_table.py](https://codecov.io/gh/refinery-platform/refinery-platform/pull/2479/diff?src=pr&el=tree#diff-cmVmaW5lcnkvZGF0YV9zZXRfbWFuYWdlci9tYW5hZ2VtZW50L2NvbW1hbmRzL3Byb2Nlc3NfbWV0YWRhdGFfdGFibGUucHk=) | `0% <0%> (ø)` | :arrow_up: |
| [refinery/data\_set\_manager/views.py](https://codecov.io/gh/refinery-platform/refinery-platform/pull/2479/diff?src=pr&el=tree#diff-cmVmaW5lcnkvZGF0YV9zZXRfbWFuYWdlci92aWV3cy5weQ==) | `45.49% <0%> (ø)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/refinery-platform/refinery-platform/pull/2479?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/refinery-platform/refinery-platform/pull/2479?src=pr&el=footer). Last update [b9a3e9a...f62d852](https://codecov.io/gh/refinery-platform/refinery-platform/pull/2479?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",True,False,1,0.0
scikit-optimize_____scikit-optimize_____579,2018-01-17T23:12:42Z,True,scikit-optimize_____scikit-optimize_____579_____358481244,I am currently experimenting with the plotting functionality. Will update here soon with results.,True,True,82,57493.933333333334
scikit-optimize_____scikit-optimize_____579,2018-01-17T23:13:51Z,True,scikit-optimize_____scikit-optimize_____579_____358481486,P.S. most likely tomorrow after ~5 pm. Have meetings all day. ,True,True,82,57493.933333333334
Aurorastation/Aurora.3/3956,2018-01-18T01:41:03Z,False,5a5ffb386480fd0d081c90e0,Closing this for now. Will likely start up an entirely fresh version of the map from scratch in another PR.,True,False,11,59916.6
scikit-optimize_____scikit-optimize_____579,2018-01-18T07:39:07Z,True,scikit-optimize_____scikit-optimize_____579_____162267204,"I have a few more thoughts on this.

If we consider the design from an object-oriented perspective, a `Dimension`-object is only supposed to exist in the context of a `Space`-object in a many-to-one relationship (many dimensions for one search-space). As mentioned above, I don't see a reason why this relationship would change after it has first been setup.

So it is reasonable to have functionality for looking up dimensions from the search-space e.g. using their name as in `space[['dim_name1', 'dim_name2', ...]]` or using their index as in `space.dimensions[i]`. I think we agree so far.

In my version of the plotting functions, we may need to select a subset of the dimensions (e.g. to avoid `Categorical` dimensions, or merely to plot a subset, or change the ordering of the dimensions in the plots, etc.) For this we need to know the indices of the dimensions in the search-space, so that we can lookup the parameters of a given dimension from the optimization-log in `result.x_iters`. Because the relationship between dimension-objects and the search-space never changes once it has been setup, their indices also never change. We can either infer the indices from `space.dimensions` which would either require for `space[['dim_name1', 'dim_name2', ...]]` to return both the indices and dimension-objects (which is ugly). Or we can have another function e.g. `space.get_dimension_indices(dimensions)` which is both ugly and inefficient as it would require for us to lookup the dimension-objects again. Or we can simply store the indices in the dimension-objects as I have done. Because the dimension-objects always live inside a search-space after the initial setup, and their ordering never changes, I think this ""tight coupling"" between `Dimension` and `Space` is OK. To me it seems like the most elegant and efficient solution to the problem.

Now, there is another solution to the problem of plotting `Categorical` dimensions, which would be to plot all dimensions in `plot_objective()` etc. but ignore the `Categorical` dimensions. This way we could keep track of the dimension-indices inside the plotting functions. BUT I think this would make the implementation of the plotting functions significantly more complicated and we would loose the ability to pick a sub-set of the dimensions by their names.

Altogether, I really think the solution I have come up with for both default names of the dimensions and plotting a sub-set of dimensions is the most elegant and efficient.

Please come up with a specific design and implementation proposal if you still believe my version is problematic.",True,True,82,57493.933333333334
scikit-optimize_____scikit-optimize_____579,2018-01-18T07:46:12Z,True,scikit-optimize_____scikit-optimize_____579_____358564557,"@iaroslav-ai Thanks! I don't mean to stress you, but it would be nice if we could close this soon. I think it has been almost 3 weeks since I finished this (apart from minor fixes and rebasing). The installation instructions for my tutorial are awkward and apparently don't always work. So it would be nice if this could get merged into master soon, so we can all move on.

To avoid having to rebase and fix merge conflicts multiple times, I'll await both of your full reviews before fixing the code.
",True,True,82,57493.933333333334
scikit-optimize_____scikit-optimize_____579,2018-01-18T07:49:26Z,True,scikit-optimize_____scikit-optimize_____579_____358565180,"You can test the new plotting functions using the code-snippets in the above comments. I think you just need to change `plot_*_matrix()` to `plot_*()`.

https://github.com/scikit-optimize/scikit-optimize/pull/579#issuecomment-354549864
https://github.com/scikit-optimize/scikit-optimize/pull/579#issuecomment-354550311",True,True,82,57493.933333333334
pmmp_____PocketMine-MP_____1476,2018-01-18T11:55:49Z,True,pmmp_____PocketMine-MP_____1476_____358625306,"Has it been done? I tested thebigsmileXD's WarpUI with this branch, but it didn't work properly.
Here are some bugs I found:
 - Forms doesn't appear after sending a form.
 - Form::onSubmit is not called after submitting a form.

",True,True,74,257775.83333333334
pmmp_____PocketMine-MP_____1476,2018-01-18T15:40:18Z,True,pmmp_____PocketMine-MP_____1476_____358685140,"@GooglePlugin When somebody got time for it. Also, i think the problems you mentioned are probably WarpUI's problems.",True,True,74,257775.83333333334
pmmp_____PocketMine-MP_____1476,2018-01-18T15:42:02Z,True,pmmp_____PocketMine-MP_____1476_____358685711,How do you change the ‘Submit’ button to other text?,True,True,74,257775.83333333334
pmmp_____PocketMine-MP_____1476,2018-01-18T15:43:03Z,True,pmmp_____PocketMine-MP_____1476_____358686059,"This is not a plugin support forum
please use forums.pmmp.io",True,True,74,257775.83333333334
pmmp_____PocketMine-MP_____1476,2018-01-18T16:28:30Z,True,pmmp_____PocketMine-MP_____1476_____358701046,"> When will it be done?

you must be new round here...",True,True,74,257775.83333333334
heroku_____stack-images_____91,2018-01-18T22:08:12Z,True,heroku_____stack-images_____91_____358797928,"I had a conversation with @hone this afternoon to try to reach a decision about this pull request. Some key points that I'm not sure we'd fully considered:

* Users are specifically requesting support for the Rails 5 image and PDF preview features (see eg. https://github.com/heroku/heroku-buildpack-ruby/issues/635). We can take as read that @hone will find a way to support these users and meet that need regardless of whatever decision we make on this pull request.

* ffmpeg, one of the implicit dependencies of this Rails feature, is a whopping 174MB in size. This library must be present for the Rails 5 preview feature to function, so it either needs to be part of the stack image, part of the slug, or downloaded during app boot in some way. Downloading ffmpeg every time a Rails dyno boots, either in the slug or after slug startup, is a fairly substantial boot time penalty, and will impact our COGS by substantially increasing the amount of data we load from S3 on each dyno boot. Placing ffmpeg in the stack image means we only have to download it once, when each runtime instance boots, and that it can be shared between slugs.

* Adding 174MB to the stack Docker images will make them bulkier to work with and slower to download. It'll also affect the stack image rollout process by a bit.

I'm convinced I should change my mind and support this pull request. ",True,True,12,10864.45
heroku_____stack-images_____91,2018-01-18T22:16:45Z,True,heroku_____stack-images_____91_____358800115,"One thing that hasn't been brought up is security. ffmpeg is notoriously buggy due to its use of memory-unsafe code (aka C), for example, OSS-Fuzz has found many critical vulnerabilities: https://bugs.chromium.org/p/oss-fuzz/issues/list?can=1&q=project-ffmpeg+Type%3DBug-Security

A single vulnerability in ffmpeg or mupdf as currently implemented in Rails 5.2 can result in the complete takeover of the application due to remote code execution via untrusted user input. I would strongly recommend not implementing ffmpeg/mupdf without strong sandboxing.

I recently merged a PDF fuzzer into OSS-Fuzz for mupdf, but a sandbox is still necessary.",True,True,12,10864.45
scikit-optimize_____scikit-optimize_____579,2018-01-18T22:56:17Z,True,scikit-optimize_____scikit-optimize_____579_____358809843,"Hi everyone. Here are some of my thoughts on this.
I did not use previously the plotting functionality and got to know it through this pr. 
I would like to understand more where the idea for the following plotting functions comes from, in particular for:
```
plot_objective
plot_evaluations
```
I have never seen plots that these functions produce to be used in black box optimization literature. Does anyone knows a paper where these are used? Was it intended originally maybe for the debugging of optimization algorithms? 
",True,True,82,57493.933333333334
scikit-optimize_____scikit-optimize_____579,2018-01-18T23:01:47Z,True,scikit-optimize_____scikit-optimize_____579_____358811383,"The reason why I ask these questions is because I am not sure how these plotting functions are useful for the skopt user’s. 
Consider for instance example plot below, obtained by optimizing a deterministic 6d function, [code here](https://gist.github.com/iaroslav-ai/42bf1088c129b497dc097ee518d23d84):

![figure_1](https://user-images.githubusercontent.com/14038787/35125815-4c105742-fcab-11e7-8682-39b77c539604.png)

Remark 1. To obtain plots, the _average_ over values of objective is used (over random invisible parameters), whereas a user / algorithm is interested in _minimum_ value of objective. Because of this, user might draw incorrect conclusions about what parameter values are “good”.

Remark 2. Best found minima point values do not correlate with minima of plots. This is due to a) remark 1 and b) because generally the objective is assumed to be sampled from a Gaussian process prior, where you can have complex non-linear correlations between n > 2 dimensions, which hence cannot be represented in 2d plots. Because of this, incorrect inferences can be drawn about correlations between two variables, and absence of “higher order” correlations. 

Remark 3. Primary goal of skopt is to optimize user objective efficiently. How do these plots help for that? For instance, the idea of using such plots to aid the optimization contradicts the idea of taking user out of the loop.

Remark 4. A minimum can be computed as per Remark 1. However this would still fall under remark 3. Also technical difficulties can occur for large number of dimensions (say 20+).

Somewhat similar issues can be brought for the `plot_evaluations`. 

Possible benefit of such plots is to catch failures of optimization algorithm. However ideally such failures should not occur / should be detected automatically without user’s intervention. 

I am happy to further elaborate on this if necessary or if something unclear :) 
",True,True,82,57493.933333333334
scikit-optimize_____scikit-optimize_____579,2018-01-18T23:04:19Z,True,scikit-optimize_____scikit-optimize_____579_____358811942,"@Hvass-Labs sorry that I start these discussions here! I know you want to be done with this soon. But it would be good to clarify the _why_, as it then dictates the _how_ . Results of discussion here could eg go to docstrings.",True,True,82,57493.933333333334
heroku_____stack-images_____91,2018-01-19T08:25:13Z,True,heroku_____stack-images_____91_____358898001,"> Rails applications don't give us any handles for detecting ""uses ffmpeg"" reliably.

In my opinion, this is the issue here. Dependencies should be explicitly declared, and this brings 2 huge dependencies implicitly to everyone.
In order for us to properly support this, rails needs to give us a way to know if an app needs these dependencies.
Then, we can selectively install the package in a slug if it needs it. If there are slug size issues, we could issue exceptions for apps that need this package.

In addition to security, the other very concerning thing in my opinion is [mupdf's license](https://github.com/rails/rails/pull/30667#issuecomment-332276198).
Adding the package to every slug, all our customers would essentially be breaking the license terms, as they'd be using it in a closed-source application.
Bringing this package magically could be more of a curse than a blessing.

ffmpeg is not MIT either.",True,True,12,10864.45
heroku_____stack-images_____91,2018-01-19T08:35:44Z,True,heroku_____stack-images_____91_____358900212,"Re: security and potential future security issues.
Having it in the stack image would actually be better there, as we'd be able to upgrade for all apps without requiring customer to redeploy.",True,True,12,10864.45
scikit-optimize_____scikit-optimize_____579,2018-01-19T09:13:01Z,True,scikit-optimize_____scikit-optimize_____579_____358908370,"@iaroslav-ai Your review is very good and perfectly fine to have the discussion here! You are neutral and polite, and your goal is to make it a good user-experience. That's why I asked you to help with this review :-)

Quick comment on your example: In my experiments I found that 40 iterations was very low for getting semi-accurate contour plots. You could try 100 or 200 iterations instead. I use 40 iterations in my own tutorial on skopt and TensorFlow because those experiments are very expensive to run:

https://github.com/Hvass-Labs/TensorFlow-Tutorials/blob/master/19_Hyper-Parameters.ipynb

Note: I wrote the tutorial in just a matter of days. The reason it took me 3-4 weeks to finish it, was because I wanted these plots to be in the tutorial as I found them quite useful - in spite of their short-comings - and I needed to fix `plots.py` to make it work with my `Categorical` dimension. It turned out to be a bit of a hornet's nest to fix it, though :-)

I will try and answer your questions as best as I can, considering that I'm not the original author of these, and I mainly just cleaned up the code and added a couple of features. I have combined the answers for several of your questions.

### About `plot_objective()`

These contour-plots show a kind-of ""approximation of an approximation"" and are hence not completely reliable, as you point out. Perhaps this should be more strongly noted in the doc-strings? The first approximation is from the model used for the objective function (e.g. Gaussian Process) which can be unreliable in regions that are thinly sampled. The second approximation is from the so-called Partial Dependence plot, which is a ""trick"" used to show 3D and higher dimensions in 2D-plots, by averaging over the dimensions that aren't shown.

There are a few problems with the best-found ""red star"" that is shown in the plots. Due to noise in the objective function, and the inaccurate surrogate model, and the averaging of the Partial Dependence plot, the best-found point may fall outside of the best region shown in the plots (yellow colour). I agree that this is somewhat confusing but I'm not a statistician so I don't know any clever ways to make a better plot of these things. Perhaps the doc-string should explain this better?

Also note that the function is very expensive to compute for higher dimensions because it evaluates the surrogate model n_dims^2 * n_samples times as I recall, where n_samples might be fairly high (default 250) to get a fine-grained contour-plot. That is another strong argument for having the new feature I added, where you can use a subset of the dimensions to use in the plot.

In my own work on Meta-Optimization I also plotted the ""meta-fitness landscapes"" but I didn't have a surrogate model, so I needed to actually evaluate the real objective function in a grid, while keeping the other dimensions fixed at some ""good"" hand-tuned value. You can see a few examples of landscapes plotted this way here:

https://en.wikipedia.org/wiki/Meta-optimization

I think the plots in `plot_objective()` are more useful in spite of their short-comings.

### About `plot_evaluations()`

This shows a histogram of samples on the diagonal instead of the Partial Dependence plots. I also found the histogram to be useful.

Below the diagonal this shows the points where the objective function was sampled. You can argue that this was already shown in `plot_objective()` and hence not very useful. That is sort-of right, but this plot doesn't show the contour of the objective function (which is very expensive to compute for higher dimensions!), and instead it shows a colour-grading of the time-step at which the points were sampled. Because you only have 40 iterations in your example, it may not be very useful, but what you would typically see for higher iterations, is that the samples start to converge in a certain region, as shown by the colour-grading.

### About `plot_histogram()`

If you only want to show the histograms from `plot_evaluations()` then you can use `plot_histogram()` instead (which I added). It also supports `Categorical` dimensions.

### About `plot_objective_2D()`

This shows the contour-plot from `plot_objective()` but only for 2 dimensions. This may be useful for some people, and it also is a simpler code-example in case people want to write their own plotting-functions, because `plot_objective()` has a lot of other things as well.

### Conclusion

Altogether, I think the plots in skopt are useful in spite of their short-comings. And like I said, I only waited to finish my tutorial on TensorFlow and skopt to get these plots in. (Was it worth it in hindsight considering all the trouble? Well ... :-)
",True,True,82,57493.933333333334
pmmp_____PocketMine-MP_____1476,2018-01-19T10:35:36Z,True,pmmp_____PocketMine-MP_____1476_____358928544,"I haven't fully understand the rule here. Not meant to be rude, but I really look forward to this ;)",True,True,74,257775.83333333334
pmmp_____PocketMine-MP_____1476,2018-01-19T10:37:35Z,True,pmmp_____PocketMine-MP_____1476_____358929017,"It appears no constructive discussion is going on in this pull request, and therefore I am locking. If you have any further comments, please create a thread on the forums.",True,True,74,257775.83333333334
heroku_____stack-images_____91,2018-01-19T14:35:33Z,True,heroku_____stack-images_____91_____358982474,"I'm also 👎  on including this in the base stack image from a security perspective. I agree 💯 with @titanous on ffmpeg's history (thanks for getting mupdf a fuzzer!). Having file processing libraries like ffmpeg, mupdf, even imagemagick sandboxed would be much more ideal, but is another project. 

We're increasing the attack surface for all applications by including this package in the stack image. While it would allow us to upgrade all users at once with a stack image change, it's an additional 2 packages to monitor for security issues and ensure the stack image is kept up to date.

It also sounds like the licensing issues @dmathieu raises makes this more problematic. ",True,True,12,10864.45
heroku_____stack-images_____91,2018-01-19T14:36:37Z,True,heroku_____stack-images_____91_____358982740,"This pull request was meant to gather data around what packages would be installed and how much space they would take up.

I'm closing it for now and will schedule a meeting to follow up on this.",True,True,12,10864.45
scikit-optimize_____scikit-optimize_____579,2018-01-22T06:53:55Z,True,scikit-optimize_____scikit-optimize_____579_____359339496,"Should I conclude from your silence that if I fix the things you've mentioned then this can be merged? @betatim mentioned a couple of minor issues and @iaroslav-ai wanted better doc-strings for the plotting functions. I don't want to rebase and fix merge conflicts only to find out that you have more things you want changed.

I think I argued quite well that (1) these plotting functions are useful, (2) the new semantics for dimension-names are useful and sensible, (3) a dimension's search-space index is needed for efficiently working with sub-sets of dimensions and the natural place to store the index is inside the dimension-object. I believe this dealt with all your concerns.

Please note that the very small PR #597 is also needed for me to complete this PR.

My tutorial on TensorFlow and skopt has been viewed almost 800 times by now. My guess would be that it will get 10000 views within a year. Currently people have to install my dev-fork of skopt and it doesn't work for everyone. People are going to be disappointed in skopt if it doesn't work, so it really is in your own best interest to get this merged soon. Not to mention that people are probably going to be reluctant to contribute if it takes so long to get their work merged.
",True,True,82,57493.933333333334
scikit-optimize_____scikit-optimize_____579,2018-01-22T17:01:43Z,True,scikit-optimize_____scikit-optimize_____579_____359492724,"Sorry, I cannot convince myself about `plot_objective` and `plot_evaluations`. Right now I am of the opinion that they should be removed. This is because of the following:

1. There is no peer reviewed publication on black box optimization that I know of that would use these plots (ideally with evaluation of usefulness of these plots, but if it is used to aid in a way the user that is shown to lead to better objectives is also good). 
2. The `plot_objective` is borrowed from the supervised learning domain, where you are interested in all possible inputs, whereas we are interested in subset minimizing inputs. This is also better addressed with the plots that you have referenced in wiki. 
3. A possible use of `plot_evaluations` is as you mention is to check for convergence. However, this is a subjective criterion that depends on viewer of the plot, and does not scale if a user runs multiple different optimization problems in parallel (say, do training on different datasets) as user then needs to monitor n plots. I would rather prefer objective criterions such as [this one that we have](https://scikit-optimize.github.io/callbacks.m.html#skopt.callbacks.DeltaXStopper) or [others in literature](https://static.googleusercontent.com/media/research.google.com/en//pubs/archive/bcb15507f4b52991a0783013df4222240e942381.pdf). These are objective, scale with number of optimizations run and can be tested automatically. 
4. Testing usefulness of these plots is hard - would require a user study to show that the plots indeed help users to optimize better their objective. This is necessary in absence of point 1.

These methodological issues are important, as these plots are intended to aid user in getting better optimization outcomes, beyond purely technical support (correct me if you have something else in mind). Due to uncertainty I would rather go with Occam’s razor approach and not include them. 

Consider examples for other functionality of skopt:

* `gp_minimize`: approach is very well [studied in the literature](https://arxiv.org/pdf/1206.2944.pdf), and we [have means of testing it](https://github.com/iaroslav-ai/scikit-optimize-benchmarks).

* Parallel evaluation mode in skopt: is shown to be [useful to reasonable extent in literature](https://hal.archives-ouvertes.fr/hal-00732512/document) (see “Constant Liar” there), could be evaluated relatively easily against sequential mode to see that it speeds up convergence to good objective values against wall clock time.

I cannot argue like that for these plots. 

I did not come to this conclusion easily - I know and appreciate that you put a lot of work into rewriting these plots. Yet it is better to address these methodological issues right now, to avoid unnecessary effort spent, and breaking changes in the future, which could also affect your tutorial. 

Please do let me know if you wish for me to elaborate more on the points that I raise or if you have any comments on this. 
",True,True,82,57493.933333333334
scikit-optimize_____scikit-optimize_____579,2018-01-23T08:43:18Z,True,scikit-optimize_____scikit-optimize_____579_____359718966,"@iaroslav-ai Thanks for your review. You have good intentions even if we strongly disagree. Of course I'm not happy if all my work is lost :-) But I don't want to waste more time on this anyway, so we need to close this PR this week whichever way you guys decide.

On your points:

1. I'm not sure if I understand you correctly, but this goes together with what you said the other day. It sounds like you haven't seen these plots in publications before, so from that you conclude nobody will use them in the future? I don't mean to be condescending, but strangely enough I sometimes hear this ""argument"" from people in academia, that there is no precedence for something, so they don't think it should be done now. But if people only did what was previously accepted then science and technology would stagnate completely. It's not a valid argument that something hasn't been done before. In fact, you should be proud if skopt introduces something new to the field! Unfortunately I can't take credit for coming up with these plots - somebody else was apparently quite visionary by adding these plots (I actually don't know who originally wrote this code because Github shows several people have worked on this file.)
2. The plots for Meta-optimization that I referenced on Wikipedia are not possible to do for most problems because they are created by evaluating the actual objective function on a grid in the search-space, which would be extremely time-consuming, as you would have to evaluate `func` many more times to make such a plot than you did for the actual optimization using e.g. `gp_minimize()`. Furthermore, in order to plot high dimensional spaces in 2D those plots on Wikipedia had fixed the parameters for all other dimensions, which is not a very good way to do it. The plots in skopt `plot_objective()` are created from evaluating the fairly cheap surrogate model, and they use Partial Dependence to show high-dimensional spaces. This distorts the landscape-plot, but it is a compromise that is necessary to make if you want to be able to plot it.
3. I actually have already read the Vizier paper (but thanks for the link) and I don't understand why Google hasn't open-sourced it. It is not instrumental to their business and they already have $100 billion in cash and they generate more than $20 billion cash per year in profits, as I recall, so they can surely afford to open-source a tiny little library that could help others in the world. There is a discrepancy between what Google say they will do for the benefit of society and what they actually do. Anyway, I digress. What you reference here are dedicated convergence plots in the Vizier paper and the DeltaX-stopping criterion in skopt. But `plot_objective` and `plot_evaluations` are of course meant for a completely different purpose - to plot various aspects of the optimization progress **and the search-space** after it has been run. Personally I like `plot_objective` the most but `plot_evaluations` is useful for other things, e.g. plotting the histogram (which can now also be done with `plot_histogram`), but it should also be much faster than `plot_objective` for high dimensionalities, so it is useful to see where in the search-space the samples were taken, without plotting the landscape which is very expensive.
4. Usefulness is highly subjective. I find these plots very useful - you find them completely useless. Neither of us seems able to convince the other :-)

Please take a look at your own tutorial which uses these plots. As you will see, the plots make good sense there and clearly show you the objective-landscape and the regions that were sampled, the sample-ordering etc. These plots are better approximations to the true objective function because they are built from surrogate models with 160 samples of the true objective-function, whereas you only took 40 samples. I think these plots are great! And I am perfectly willing to accept more distorted plots for harder problems where we cannot evaluate hundreds of samples of the objective-function.

https://scikit-optimize.github.io/notebooks/visualizing-results.html

I think it is a mistake to discuss whether these plotting functions should be in skopt or not. We are way beyond that point. If you have other plotting functions that are better, then those can be added later by someone else in another PR. Somebody else thought these plots were useful to add to skopt (the above tutorial was written by @betatim so perhaps he also wrote the original `plots.py` - I don't know). I agree completely that these plots are useful! If they are ""new"" to the field, then congratulations you have added something to the field that you should be proud of! Perhaps in 5 years everyone will show these plots in their papers, thanks to you!

Unfortunately `plots.py` didn't work with `Categorical` dimensions which I had in my Neural Network problem, so I had to fix that. But I didn't understand your code because it was so convoluted and undocumented that I had to rewrite it all in order to modify it. It is now probably the cleanest code you have in skopt - you can get angry with me for saying that, but it's the truth. It makes very minor changes to the layout of the plots that I think looks better. So all we need to decide now is whether the code is in correct working order and if something needs to be fixed.

The code passes all the tests and also creates the plots correctly for your own tutorial. I can expand on the doc-strings with my explanations above. And I can fix the minor issues @betatim raised. I'll be happy to do that, but then we must merge it. I cannot afford to waste anymore time on this. @betatim and @iaroslav-ai should I make these minor changes so you will merge, or should I stop work on this now?

@iaroslav-ai Please review and merge #597 which is needed for this PR as well (some of the issues @betatim raised are fixed by that).

Please consider that this thread may deter others from wanting to contribute to skopt in the future because it is so problematic. So once again, I think it is in your own best interest to get this PR closed ASAP.
",True,True,82,57493.933333333334
scikit-optimize_____scikit-optimize_____579,2018-01-23T17:07:27Z,True,scikit-optimize_____scikit-optimize_____579_____359860536,@Hvass-Labs thanks for detailed comments! Will respond later today.,True,True,82,57493.933333333334
Homebrew/brew/3720,2018-01-23T20:19:47Z,False,5a6798ee6480fd0658f69641,"Sorry for such a major comment, but: I'd rather not install a gem if we could get away with it.

What do you think about using a persistence solution that comes with Ruby, such as [`pstore`](https://www.krautcomputing.com/blog/2015/09/21/rubys-built-in-databases-meet-pstore-and-yamlstore/)?",True,False,110,173514.51666666666
Homebrew/brew/3720,2018-01-23T20:20:40Z,False,5a67991d6480fd0493b4b4c3,"Good job wrapping the database in its own class, though. Means we can try out different solutions fairly easily.",True,False,110,173514.51666666666
Homebrew/brew/3720,2018-01-23T20:30:44Z,False,5a679b786480fd04ca3f8beb,"@alyssais No worries, I can try out `pstore` instead and see how the performance compares to the original implementation.

The reason I initially opted to go with the `SQLite3` gem was because @MikeMcQuaid mentioned experimenting with `SQLite` in https://github.com/Homebrew/brew/pull/3379.",True,False,110,173514.51666666666
Homebrew/brew/3720,2018-01-23T20:38:02Z,False,5a679d2e6480fd05a92ee2f6,"Sure, comparing performance is a good idea. I _suspect_ there won’t be much difference, which is why I suggest pstore. If there is a significant one, it’d be reasonable to install the gem I think.
",True,False,110,173514.51666666666
Homebrew/brew/3720,2018-01-23T20:47:38Z,False,5a679f6d6480fd04f5bdf28c,Using sqlite seems nicer to me.,True,False,110,173514.51666666666
scikit-optimize_____scikit-optimize_____579,2018-01-23T21:26:08Z,True,scikit-optimize_____scikit-optimize_____579_____359935939,"Thanks again for a thorough discussion! To extend a bit on my arguments:

I would measure the usefulness of an algorithm as a minimum objective found by an algorithm after k iterations, k > 0, averaged on a set of n >> 0 problems such as [ones used here](http://proceedings.mlr.press/v64/dewancker_strategy_2016.pdf) or others. Our library is concerned with doing optimization best it can, so we should measure our success by how well we optimize “in general”. 

To argue about the usefulness of the plots, I would like to see a comparison of such quantities, which could look like:

| With plots | Without plots |
| ------------- |:------------------:|
| 0.6 +/- 0.2 | 0.9 +/- 0.1 |

It does not matter to me where such data comes from as long as it is reliable - paper or not :) But without such reliable data, we cannot make any claims of whether these plots are helpful or otherwise. Any claims without supporting data is just a speculation.

I would like to provide to every user of skopt a functionality which is verified to be beneficial in optimizing user’s objective. 

One can possibly define other meaningful evaluation metrics. Generally, I find it important to show that indeed plotting search space can be used to improve some measurable and important performance metric, to motivate necessity for plotting in the first place.",True,True,82,57493.933333333334
scikit-optimize_____scikit-optimize_____579,2018-01-23T21:26:41Z,True,scikit-optimize_____scikit-optimize_____579_____359936095,"On the other hand side, I must confess removing will involve too much stone turning in skopt, with already large PR. Plus it might be useful for tutorials/examples in say 2d space. Finally, it is good to decide on something concrete and doable to do. 

I propose the following plan:
1. let me and others who might be looking here think about this for a day.
2. If nothing comes up, we modify the docstrings, to add the warning that there is no publications or public data available to support these plots.
3. no guarantees are made that these functions are not removed or changed in the future. This is also noted in docstrings.
4. We fix if there are some technical issues with pr, and merge it

Anyone comments on the plan?

P.S. I will be not very responsive tomorrow and the day after tomorrow in the morning, but will get better after that.  ",True,True,82,57493.933333333334
Homebrew/homebrew-core/23214,2018-01-24T07:40:42Z,False,5a6838806480fd07ac92801f,:bowing_man: ,True,False,1,0.0
scikit-optimize_____scikit-optimize_____579,2018-01-24T08:56:52Z,True,scikit-optimize_____scikit-optimize_____579_____360063384,"@iaroslav-ai Thanks for the quick response! Once again I don't mean to be condescending, but I am smiling at this discussion. I think I am a lot older and more experienced than you, so I hope you take this as friendly feedback. It is amusing and annoying at the same time because I don't have time for it, but it is a bit funny :-) You were such a cool dude on the `@use_named_args` PR where you came in and resolved matters very quickly and professionally in the middle of a heated discussion - just like Mr. Wolf :-) But what you're saying here doesn't make any sense. That is why I'm smiling now :-)

How are you going to **quantify** the usefulness of a plot? It is plotted **after** the optimization has taken place. Personally I am just curious what the objective function looks like. The surrogate model is only an approximation and the 2D mapping is a further approximation. So I know that the plots are probably misleading to some extent, especially if the surrogate model is only built from e.g. 40 samples. So the plots have limitations. That doesn't mean they are useless. Especially if you don't have a better way of plotting them. But you cannot even **prove** and **quantify** the usefulness of an ordinary convergence plot, yet those are used everywhere.

As you agree, this is not a very fruitful discussion to be having. If in 6 or 12 months you find a **better** way of making plots then you can add those, or modify `plot_objective` if you find a better way to map +3D to 2D plots. But don't remove these plotting functions because **you** don't find them useful. That is not a rational decision.

@iaroslav-ai If you agree to merge, then I will clarify in the doc-strings that the plots have the limitations we have discussed. I don't think it is reasonable to add a warning that they might be removed, but perhaps a note that the visuals might change if a better method is found in the future. You are very welcome to review the code for bugs / problems, but I don't think there's a need for you to spend many hours on that - it is fairly high quality code and it passes all the tests. Please merge #597 first as it is needed here.

@betatim Please confirm that you will also support the merge if I fix the minor issues you raised. You guys have had almost 4 weeks to discuss the new naming semantics and I don't have anymore time for this. So you need to make a decision now whether you will merge this or not.

I am in beautiful Greece surrounded by spectacular vistas of mountains and water. Even so, I am happy to spend my Saturday in front of my computer finishing this PR. But that is the last day that I am willing to help you.

Please note that you already start getting issues with people who are having problems with these functions (one in #606 and another person in this thread). Those people are coming here by way of my tutorial. You should expect a large number of people to learn about skopt from my tutorial in the future. I explain in both the video and the Python Notebook that people need to install from my dev-fork to use this plotting functionality. Hopefully these functions are added to skopt 0.5 so it can be installed easily with pip. But after this discussion I will keep my dev-fork as long as there is a possibility that the functions might be removed from skopt master. This is harmful to your cause because people will be very confused about what to use, especially as I will not maintain my dev-fork.
",True,True,82,57493.933333333334
Homebrew/brew/3720,2018-01-24T18:14:27Z,False,5a68cd0b6480fd0ca6072985,"Hi @alyssais, and @ilovezfs 🙂 

I implemented a caching solution using `pstore`, and created a [PR on my personal fork](https://github.com/AndrewMcBurney/brew/pull/1) to compare the changes with the `SQLite3` implementation. I found `pstore` transactions to be expensive. It takes a bit of time to persist and fetch the hash structures _(this could be due to the way I implemented it, so I'm open to any suggestions for how I could improve the code)_.

I've documented my findings in the PR, where I contrast the time differences between the two solutions in the description. I would recommend going with the `SQLite3` implementation over the `pstore` implementation. I believe the tradeoff of installing another gem is worth the performance increases for the caching.

I'm open to any suggestions on how I could improve the `pstore` or `SQLite3` implementations.

All the best,
Andrew",True,False,110,173514.51666666666
Homebrew/brew/3720,2018-01-24T21:46:53Z,False,5a68fed46480fd05f3d49c3e,"Wow, thanks for such a detailed investigation!! You really went above and beyond and I'm super impressed.

I'm curious to see what @MikeMcQuaid thinks, since he's been fairly anti-dependency in the past for user-facing stuff IIRC, but also was the one to suggest SQLite.",True,False,110,173514.51666666666
Homebrew/brew/3720,2018-01-25T10:33:05Z,False,5a69b26b6480fd03db804f6d,"> This pull request is still a work-in-progress. I was hoping to get some advice from the maintainers before proceeding any further.

It looks great so far, well done! High level thoughts are that I'd love to see all the SQLite stuff abstracted away sufficiently that we could use it for more than just `linkage` and think about what other data (e.g. dependency trees) would be good to store and when it would be good to update it (for dependencies: on `brew update`, for installation data: on `brew (re)install/upgrade`

> With the caching (i.e., by default) the command (instrumented starting from linkage.rb) took 182 milliseconds to complete. The library boost took 1.38 milliseconds to complete checking dylibs.

This is pretty great performance gains, well done. What I'd be interested in (if you can summarise in a little table) the timings before and after this change with empty/invalid cache and with a valid cache. Additionally, does doing something like `brew reinstall boost` and ending up with files which vary slightly in metadata affect anything at all.

> Sorry for such a major comment, but: I'd rather not install a gem if we could get away with it.

We need to not install a gem at runtime but it's fine to use the `sqlite` gem because it has no dependencies (as far as I can tell). It would need to be vendored into `Library/Homebrew/vendor/` but hold off on doing so for now because it'll bloat the diff. ",True,False,110,173514.51666666666
Homebrew/brew/3720,2018-01-25T13:11:35Z,False,5a69d78e6480fd0c1c76ca02,"> We need to not install a gem at runtime but it's fine to use the sqlite gem because it has no dependencies (as far as I can tell). It would need to be vendored into Library/Homebrew/vendor/ but hold off on doing so for now because it'll bloat the diff.

Ah, sweet!

@AndrewMcBurney you mentioned (I think in the other PR) that you want to clean this up a bit before review. Shout when you’re ready and I’ll have a look. Great job so far!",True,False,110,173514.51666666666
Homebrew/brew/3720,2018-01-25T18:00:22Z,False,5a6a1b416480fd05a93005dd,"This is a bit late, but to add onto what @alyssais said about `PStore`: Ruby also provides `DBM` as an abstraction over various Berkeley-type DBs. Depending on the BDB-like supplied by OS X, it might offer better performance (`Marshal` is fast, but a native DB with string, string KV pairs is probably faster).",True,False,110,173514.51666666666
Homebrew/brew/3720,2018-01-25T18:03:36Z,False,5a6a1c016480fd0658f7b57b,"> This is a bit late, but to add onto what @alyssais said about PStore: Ruby also provides DBM as an abstraction over various Berkeley-type DBs. Depending on the BDB-like supplied by OS X, it might offer better performance (Marshal is fast, but a native DB with string, string KV pairs is probably faster).

This seems like an interesting thing to explore. It'd also be nice if we could get comparable performance without the more rigid overhead of a typed DB schema.",True,False,110,173514.51666666666
Homebrew/brew/3720,2018-01-25T20:18:58Z,False,5a6a3be96480fd07f638f843,"@woodruffw, possibly also @MikeMcQuaid:  For the record, [Homebrew Core](https://github.com/Homebrew/homebrew-core) has [`berkeley-db@4`](https://github.com/Homebrew/homebrew-core/blob/master/Formula/berkeley-db@4.rb) at v4.8.30.  ",True,False,110,173514.51666666666
Homebrew/brew/3720,2018-01-25T22:30:28Z,False,5a6a5a8c6480fd0ca607dbd4,"Hi @alyssais and @MikeMcQuaid,

I refactored the existing `SQLite3` implementation to make the code more extensible for adding new caching mechanisms in the future. I think this should be easy to extend for further commands, and could potentially be used to implement a solution to increase performance for [`brew uses`](https://github.com/Homebrew/brew/issues/3007).

## Code Changes

### Abstractions

**[`Library/Homebrew/os/mac/database/database.rb`](https://github.com/AndrewMcBurney/brew/blob/cache-optimization/Library/Homebrew/os/mac/database/database.rb)**

`Database` is an abstract base class representing a database caching schema residing in the Homebrew cache. It asks concretions to override the pure-virtual `create_tables` method, where a concrete class may specify the schema for the given database.

Public interface:
```ruby
# Creates a database in the Homebrew cache with the name passed in
#
# @param  [String] name
# @raise  [SQLite3::CantOpenException]
# @return [nil]
def initialize(name) ... end

# Memoized `SQLite3` database object with on-disk database located in the
# `HOMEBREW_CACHE`
#
# @return [SQLite3::Database] db
def db ... end


# Abstract method overridden by concretion classes. Creates database tables for
# the corresponding database schema
#
# @abstract
# @return [nil]
def create_tables ... end
```

**[`Library/Homebrew/os/mac/store/store.rb`](https://github.com/AndrewMcBurney/brew/blob/cache-optimization/Library/Homebrew/os/mac/store/store.rb)**

`Store` is a class which acts as an interface to a persistent storage mechanism. If the cache hasn't changed, don't do extra processing in Homebrew. Instead, just fetch the data stored in the cache.

Concretions extending `Store` must implement its public interface by overriding the `update!`, `fetch`, and `flush_condition` methods.

```ruby
# Initializes new `Store` class
#
# @param  [Database] database
# @return [nil]
def initialize(database) ... end

# Updates cached values in persistent storage according to the type of data
# stored
#
# @abstract
# @param  [Hash] values
# @return [nil]
def update!(*) ... end

# Fetches cached values in persistent storage according to the type of data
# stored
#
# @abstract
# @param  [Hash] values
# @return [Any]
def fetch(*) ... end

# A condition to specify what rows to delete when flushing the cache. This
# method should be overridden by concrete classes extending abstract
# `Database` class
#
# @abstract
# @return [String]
def flush_condition ... end

# Deletes rows where the `flush_condition` holds
#
# @return [nil]
def flush_cache! ... end
end
```

### Concretions

**[`Library/Homebrew/os/mac/database/linkage_database.rb`](https://github.com/AndrewMcBurney/brew/blob/cache-optimization/Library/Homebrew/os/mac/database/linkage_database.rb)**

- Implements the `Database` interface
- Includes a helper `LinkageDatabaseTypes` module for shared type information

**[`Library/Homebrew/os/mac/store/linkage_store.rb`](https://github.com/AndrewMcBurney/brew/blob/cache-optimization/Library/Homebrew/os/mac/store/linkage_store.rb)**

- Implements the `Store` interface
- Includes a helper `LinkageDatabaseTypes` module for shared type information

### Helpers

**[`Library/Homebrew/os/mac/database/helpers/linkage_database_types.rb`](https://github.com/AndrewMcBurney/brew/blob/cache-optimization/Library/Homebrew/os/mac/database/helpers/linkage_database_types.rb)**

- Both `LinkageDatabase` and `LinkageStore` depend on knowing the `HASH_LINKAGE_TYPES`. I didn't want to break the Interface Segregation Principle by coupling column-specific type information in the `LinkageDatabase` class. The `LinkageStore` would need to depend on constants defined in the concrete `LinkageDatabase` class, rather than depending on the interface for the abstract `Database` class. Hence, I created this module to be included in both classes which depend on the shared information.

## Performance Table

> What I'd be interested in (if you can summarise in a little table) the timings before and after this change with empty/invalid cache and with a valid cache.

I've summarized my findings in the table below, but I've included all my bash input/output so you can reproduce or point out a potential mistake in my investigation.

```bash
# Build the cache when the cache is full
time brew linkage --rebuild apache-spark docker-machine git hub libpng node pyenv-virtualenv scalastyle atk dockutil glfw hugo librsvg nvm pygobject sqlite autoconf elasticsearch glib icu4c libtasn1 openjpeg pygtk texinfo automake elixir glm imagemagick libtiff openssl python bash emacs gmp imagemagick@6 libtool openssl@1.1 python3 tree bdw-gc emacs-plus gnu-sed isl libunistring p11-kit r wget boost erlang gnutls ispell libyaml pango rbenv wxmac cairo fontconfig go jpeg little-cms2 pcre rbenv-gemset xz cask freetype gobject-introspection jruby llvm pixman readline yarn cmake gcc graphite2 libcroco lua pkg-config redis coreutils gdbm gtk+ libevent maven poppler ruby crystal-lang gdk-pixbuf harfbuzz libffi mpfr postgresql ruby-build docker gettext heroku libidn2 mysql py2cairo sbt docker-compose gimme hicolor-icon-theme libmpc nettle pyenv scala > build-cache-when-cache-full.txt

brew linkage --rebuild apache-spark docker-machine git hub libpng node   atk   11.65s user 19.74s system 54% cpu 57.822 total

# Use the cache when the cache is full
time brew linkage apache-spark docker-machine git hub libpng node pyenv-virtualenv scalastyle atk dockutil glfw hugo librsvg nvm pygobject sqlite autoconf elasticsearch glib icu4c libtasn1 openjpeg pygtk texinfo automake elixir glm imagemagick libtiff openssl python bash emacs gmp imagemagick@6 libtool openssl@1.1 python3 tree bdw-gc emacs-plus gnu-sed isl libunistring p11-kit r wget boost erlang gnutls ispell libyaml pango rbenv wxmac cairo fontconfig go jpeg little-cms2 pcre rbenv-gemset xz cask freetype gobject-introspection jruby llvm pixman readline yarn cmake gcc graphite2 libcroco lua pkg-config redis coreutils gdbm gtk+ libevent maven poppler ruby crystal-lang gdk-pixbuf harfbuzz libffi mpfr postgresql ruby-build docker gettext heroku libidn2 mysql py2cairo sbt docker-compose gimme hicolor-icon-theme libmpc nettle pyenv scala > use-cache-when-cache-full.txt

brew linkage apache-spark docker-machine git hub libpng node pyenv-virtualenv  0.51s user 0.20s system 93% cpu 0.757 total

# Check output is good
vimdiff build-cache-when-cache-full.txt use-cache-when-cache-full.txt

# Cleanup the homebrew cache
brew cleanup
rm -rf ~/Library/Caches/Homebrew/*

# Build the cache when the cache is empty
time brew linkage --rebuild apache-spark docker-machine git hub libpng node pyenv-virtualenv scalastyle atk dockutil glfw hugo librsvg nvm pygobject sqlite autoconf elasticsearch glib icu4c libtasn1 openjpeg pygtk texinfo automake elixir glm imagemagick libtiff openssl python bash emacs gmp imagemagick@6 libtool openssl@1.1 python3 tree bdw-gc emacs-plus gnu-sed isl libunistring p11-kit r wget boost erlang gnutls ispell libyaml pango rbenv wxmac cairo fontconfig go jpeg little-cms2 pcre rbenv-gemset xz cask freetype gobject-introspection jruby llvm pixman readline yarn cmake gcc graphite2 libcroco lua pkg-config redis coreutils gdbm gtk+ libevent maven poppler ruby crystal-lang gdk-pixbuf harfbuzz libffi mpfr postgresql ruby-build docker gettext heroku libidn2 mysql py2cairo sbt docker-compose gimme hicolor-icon-theme libmpc nettle pyenv scala > build-cache-when-cache-empty.txt

brew linkage --rebuild apache-spark docker-machine git hub libpng node   atk   5.14s user 5.35s system 94% cpu 11.111 total

# Use the cache when the cache is 'empty' (i.e., just recently filled)
time brew linkage apache-spark docker-machine git hub libpng node pyenv-virtualenv scalastyle atk dockutil glfw hugo librsvg nvm pygobject sqlite autoconf elasticsearch glib icu4c libtasn1 openjpeg pygtk texinfo automake elixir glm imagemagick libtiff openssl python bash emacs gmp imagemagick@6 libtool openssl@1.1 python3 tree bdw-gc emacs-plus gnu-sed isl libunistring p11-kit r wget boost erlang gnutls ispell libyaml pango rbenv wxmac cairo fontconfig go jpeg little-cms2 pcre rbenv-gemset xz cask freetype gobject-introspection jruby llvm pixman readline yarn cmake gcc graphite2 libcroco lua pkg-config redis coreutils gdbm gtk+ libevent maven poppler ruby crystal-lang gdk-pixbuf harfbuzz libffi mpfr postgresql ruby-build docker gettext heroku libidn2 mysql py2cairo sbt docker-compose gimme hicolor-icon-theme libmpc nettle pyenv scala > use-cache-when-cache-empty.txt

brew linkage apache-spark docker-machine git hub libpng node pyenv-virtualenv  0.50s user 0.20s system 94% cpu 0.741 total

# Sanity check
vimdiff build-cache-when-cache-full.txt build-cache-when-cache-empty.txt
vimdiff build-cache-when-cache-full.txt use-cache-when-cache-empty.txt
`****

**Performance for cache update scenarios***

| Run                                                                      | Performance                                      |
|--------------------------------------------------------------------------|--------------------------------------------------|
| `# Build the cache when the cache is full`                               | `11.65s user 19.74s system 54% cpu 57.822 total` |
| `# Use the cache when the cache is full`                                 | `0.51s user 0.20s system 93% cpu 0.757 total`    |
| `# Build the cache when the cache is empty`                              | `5.14s user 5.35s system 94% cpu 11.111 total`   |
| `# Use the cache when the cache is 'empty' (i.e., just recently filled)` | `0.50s user 0.20s system 94% cpu 0.741 total`    |

_Note: the CPU was running at 94% in the second run building the cache (i.e., `Build the cache when the cache is empty`), so that explains why that run was considerably faster than building when the cache was full, which used 54% CPU (i.e., `# Build the cache when the cache is full`)_

## boost reinstall

> Additionally, does doing something like `brew reinstall boost` and ending up with files which vary slightly in metadata affect anything at all.

I piped the output of four commands into text files, and ran a `vimdiff` to compare outputs as follows:

```bash
# Running linkage without and with caching, and piping output to .txt files
brew linkage --rebuild boost > boost-rebuild.txt
brew linkage boost > boost.txt

# Sanity check to ensure output is the same in cached and uncached versions
vimdiff boost.txt boost-rebuild.txt

# Reinstalling boost
brew reinstall boost

# Rebuilding the cache
brew linkage --rebuild boost > boost-rebuild-re.txt
brew linkage boost > boost-re.txt

# Comparing output between the two versions
vimdiff boost.txt boost-rebuild-re.txt
vimdiff boost.txt boost-re.txt
```

All the metadata remained the same when reinstalling the formula. However, I think I should probably write code to reset the cache for formulas passed into this command, to ensure anything updated is accounted for. This segues into the next section.

## Setting the cache

Currently, the only way to set the cache for a list of packages is by passing in the `--rebuild` flag to the `brew linkage <packages>` command. Hence, if you run `brew linkage <packages>` before building the cache (i.e., running `brew linkage --rebuild`), the output will not be correct.

I have some pseudocode showing what it would entail building the cache for a single keg versus for all kegs. However, I'm not quite sure where this code should be added to ensure `brew linkage` is never called without the cache properly being set.

```ruby
# For updating the cache for one `keg`
LinkageChecker.new(keg).check_dylibs

# For updating the cache for all `kegs`
kegs.each { |keg| LinkageChecker.new(keg).check_dylibs }
```

Any advice would be greatly appreciated! 🙂

## Testing

- Any advice on how best to stub the `SQLite3` database calls / caching for test execution?
- When I run `brew tests` locally, I get an `SQLite3::CantOpenException`, do you have any advice for how to workaround this, or to utilize the `HOMEBREW_CACHE` (or an alternative directory) within the test suites?

Thank you! :raised_hands:",True,False,110,173514.51666666666
scikit-optimize_____scikit-optimize_____579,2018-01-25T22:47:11Z,True,scikit-optimize_____scikit-optimize_____579_____360626404,"Let's just focus on the PR. I think our time is best spent on reviewing the code or enjoying our evening or enjoying beauty of Greece :)

The tests fail on Travis for some reason:
[https://travis-ci.org/scikit-optimize/scikit-optimize/jobs/326786738](https://travis-ci.org/scikit-optimize/scikit-optimize/jobs/326786738)

@Hvass-Labs please make sure that you rebase your code on master and that all the tests pass locally for you. Please do address the comments that @betatim raised. Also, state the limitations of dependency plots in docstrings as you mentioned. I was told by @betatim that [this](https://projecteuclid.org/download/pdf_1/euclid.aos/1013203451) was the original inspiration for the plots. 

I am fine with mergins this PR as long as everyone has reviewed the code and given their +1. ",True,True,82,57493.933333333334
scikit-optimize_____scikit-optimize_____579,2018-01-25T22:57:19Z,True,scikit-optimize_____scikit-optimize_____579_____360628625,Btw @Hvass-Labs thanks again for the detailed response! I do not find your tone condescending - you just state your opinion. ,True,True,82,57493.933333333334
scikit-optimize_____scikit-optimize_____579,2018-01-25T23:00:41Z,True,scikit-optimize_____scikit-optimize_____579_____360629376,"I haven't had time to look at this any further than the comments I made previously. The tone of the discussion doesn't make me want to schedule time for it either. The nature of volunteer driven projects is that it is more important to create a welcoming environment than anything else so that people do schedule time to look at things. I'd ask you to please tone down and edit your comments, otherwise people will not engage with the work you are doing. Beyond just your work it creates a combative and adversarial feeling which turns people off. As a option of last resort the maintainers of the project would ask you to leave.

Trying to force things with comments that are easy to (mis)read as threats (""You will be flooded by users requesting this."", ""People will get a bad impression."") is not productive. The best possible outcome is a bad atmosphere amongst contributors.

Experience has shown that the effort to review work grows exponentially with the amount of change. So many small (<50 lines) PRs are good and keep the ball rolling. For large changes building consensus first and following it up with a series of small PRs seems to work well. Some things can't be achieved in small steps, but this means they will be unfortunately very, very slow. (Anecdote: changing two lines in the jupyter notebook project took ~3months to get merged.)

You mentioned that you also don't have a lot of time to spare. That is understandable. Feel free to leave the PR as it is now, someone will eventually come and pick it up, or cherry pick parts of it into a smaller PR. Authorship will be maintained through the cherry-picking. It is part of the volunteer aspect that PRs stall, get picked up by others later, or just abandoned. This is Ok and not a failure on anyone's side.",True,True,82,57493.933333333334
glennsl/bs-jest/21,2018-01-26T03:24:06Z,False,5a6a9f596480fd0ce6f2e75b,"
[![Coverage Status](https://coveralls.io/builds/15229763/badge)](https://coveralls.io/builds/15229763)

Coverage increased (+0.3%) to 95.067% when pulling **59546de21559a686023934f2393946f99cf39d38 on jihchi:add_async_support_for_beforeAll_afterAll** into **3f9d6c01c1cd35dd55a26f05db48db3b97bdde78 on glennsl:master**.
",True,False,14,1965.65
scikit-optimize_____scikit-optimize_____579,2018-01-26T10:19:28Z,True,scikit-optimize_____scikit-optimize_____579_____164076006,"Fixed. I tested it, it's a Python 2.7 compatibility problem.",True,True,82,57493.933333333334
scikit-optimize_____scikit-optimize_____579,2018-01-26T10:21:33Z,True,scikit-optimize_____scikit-optimize_____579_____164076403,Fixed. The correct thing would be to use PR #597 but it has not yet been merged and I want this PR to work as-is.,True,True,82,57493.933333333334
scikit-optimize_____scikit-optimize_____579,2018-01-26T10:21:56Z,True,scikit-optimize_____scikit-optimize_____579_____164076474,Fixed.,True,True,82,57493.933333333334
scikit-optimize_____scikit-optimize_____579,2018-01-26T10:22:38Z,True,scikit-optimize_____scikit-optimize_____579_____164076600,Fixed. Same as above: The correct thing would be to use PR #597 but it has not yet been merged and I want this PR to work as-is.,True,True,82,57493.933333333334
scikit-optimize_____scikit-optimize_____579,2018-01-26T10:23:23Z,True,scikit-optimize_____scikit-optimize_____579_____164076728,Fixed.,True,True,82,57493.933333333334
scikit-optimize_____scikit-optimize_____579,2018-01-26T10:42:15Z,True,scikit-optimize_____scikit-optimize_____579_____360746508,"@iaroslav-ai This is the text I've added to the doc-string of `plot_objective()`:

    NOTE: The Partial Dependence plot is only an estimation of the surrogate
          model which in turn is only an estimation of the true objective
          function that has been optimized. This means the plots show
          an ""estimate of an estimate"" and may therefore be quite imprecise,
          especially if few samples have been collected during the optimization
          (e.g. less than 100-200 samples), and in regions of the search-space
          that have been sparsely sampled (e.g. regions away from the optimum).
          This means that the plots may change each time you run the
          optimization and they should not be considered completely reliable.
          These compromises are necessary because we cannot evaluate the
          expensive objective function in order to plot it, so we have to use
          the cheaper surrogate model to plot its contour. And in order to
          show search-spaces with 3 dimensions or more in a 2-dimensional plot,
          we further need to map those dimensions to only 2-dimensions using
          the Partial Dependence, which also causes distortions in the plots.
",True,True,82,57493.933333333334
scikit-optimize_____scikit-optimize_____579,2018-01-26T12:54:12Z,True,scikit-optimize_____scikit-optimize_____579_____360777163,"I have now fixed what you have requested and pushed it back to github. I did not squash it to make a single commit in the PR, because it might cause problems for people who are using my dev-fork. I have run all the tests in `skopt/tests` and it works locally. I believe this PR is ready to be merged.

This ends my involvement in your project. You can now merge it or not, it's up to you.

I will leave my tutorial using my dev-fork for now. That is liable to give you guys a headache later on as explained above, but that's apparently how you want it - it's not a threat, it's just a fact. (I have re-read my message above and don't understand how you perceive that as menacing. https://github.com/scikit-optimize/scikit-optimize/pull/579#issuecomment-360063384)

You have had 4 weeks to make a very simple decision and it is obvious that it could take many months and never result in anything. I simply cannot afford to waste anymore time on this.

@betatim raised some issues about this PR 9 days ago (!) that I answered within one hour (https://github.com/scikit-optimize/scikit-optimize/pull/579#discussion_r162012861). I explained in detail the technical reasons why I had made those decision, including issues that @betatim himself had raised earlier. But @betatim never responded which was of course frustrating because it stalled the PR, and now he's mad again about something I said so he refuses to respond and finish this PR.

Nobody is more sorry about this whole situation than me. I am the person who has wasted a lot of time and energy on it. I also don't enjoy this, but I do the work anyway because it needs to be finished.

This whole thing got off course when you guys refused to accept responsibility for writing really bad code that was functionally broken and impossible to understand and fix for others. Instead you tried to shift the blame to a newcomer for being unable to understand your code. All you had to do was say: ""We can see that this code may be really hard to understand for others, and we're really sorry for the pain it has caused. If you're willing to take a crack at fixing and cleaning it up, we'll be happy to help explain it wherever we can. In the future we'll try and make our code easier for others to work on.""

But instead you got pissy when I started complaining about your code, and I also recall that @betatim mentioned somewhere early on that I might be having mental issues! (That might have been in another PR ... something about me having angst or something.) That is about as low as you can go and I certainly haven't sunken that low when I have criticized your work. Of course I didn't take it very seriously, but before you guys blame me for having bad manners and being counter-productive, you may want to look at yourself first.

In my video tutorial on TensorFlow and skopt towards the end I encourage people to help you guys out. But I feel I now have a responsibility to moderate that recommendation and make it clear that it can be a very prolonged and painful experience that ultimately may not yield anything, so I will post a link to this thread and let people judge for themselves whether they want to spend time on your project. I know you guys believe I have harmed my own reputation in this thread, but that is really not the case.

I still think your project is really cool, but I also think it is really difficult to work on, in great part because of your attitude towards ""collaboration"". Naturally, I wish I had never gotten involved so I could have spent the time and energy on something more productive.

Despite all of this, I still sincerely wish you the best of luck in the future of this project and hope we all learned something from this experience!

To end all of this on a humorous note :-)

https://www.youtube.com/watch?v=J6VjPM5CeWs
",True,True,82,57493.933333333334
glennsl/bs-jest/21,2018-01-26T14:06:36Z,False,5a6b37126480fd03f44cb92f,"This isn't a very big deal in this case, but in general it's a good idea to turn off automatic whitespace removal when submitting PRs to other projects since it creates a lot diff noise.",True,False,14,1965.65
glennsl/bs-jest/21,2018-01-26T14:09:30Z,False,5a6b37126480fd08ff5a4fea,"Why does finish take an assertion? Is there some use case for that?

Also, it would be nice if there was an optional `timeout` argument.",True,False,14,1965.65
glennsl/bs-jest/21,2018-01-26T14:46:48Z,False,5a6b3f636480fd077c72cb99,Sorry about that. reverted.,True,False,14,1965.65
glennsl/bs-jest/21,2018-01-26T15:30:18Z,False,5a6b49966480fd05f3d599c1,Fixed (assertion) and added optional `timeout` argument.,True,False,14,1965.65
glennsl/bs-jest/21,2018-01-26T15:56:18Z,False,5a6b4fa76480fd0b8b1d2f0e,"It makes more sense to have `timeout` typed as `int` I think. It's in milliseconds, and I doubt we need fractions of those, or to wait long enough to overflow a 32-bit integer :)",True,False,14,1965.65
glennsl/bs-jest/21,2018-01-26T16:17:26Z,False,5a6b54a86480fd03f44cc956,"Fixed, added `timeout` typed as `int`.",True,False,14,1965.65
glennsl/bs-jest/21,2018-01-27T09:41:50Z,False,5a6c4aa06480fd0b8b1d82b2,"Not very important, but why use a type alias here instead of just `int` directly?",True,False,14,1965.65
glennsl/bs-jest/21,2018-01-27T09:46:23Z,False,5a6c4aa06480fd099ab532d0,"You don't need `float_of_int` here. From a JS point-of-view, a `float` and an `int` are exactly the same, they're both just `number`s, and `float_of_int` does nothing other than change the type the compiler sees.",True,False,14,1965.65
glennsl/bs-jest/21,2018-01-27T10:30:22Z,False,5a6c54c16480fd07f639bff4,Thanks. Fixed.,True,False,14,1965.65
glennsl/bs-jest/21,2018-01-27T10:31:10Z,False,5a6c54f06480fd0c1c77c276,"Fixed.

I misunderstand your previous comment.",True,False,14,1965.65
glennsl/bs-jest/21,2018-01-27T11:05:53Z,False,5a6c5d176480fd03db815c88,"Looks good! Let me know if or when you're done, then I'll merge.",True,False,14,1965.65
glennsl/bs-jest/21,2018-01-27T11:46:53Z,False,5a6c66b36480fd0ca60896c7,@glennsl Thanks! I'm done.,True,False,14,1965.65
glennsl/bs-jest/21,2018-01-27T12:09:45Z,False,5a6c6c0d6480fd0c1c77c83e,Thank you! :),True,False,14,1965.65
Homebrew/brew/3720,2018-01-27T19:39:22Z,False,5a6cd5716480fd077c735090,"> Performance for cache update scenarios

It would be add to your table how these numbers compare to the same behaviour without the cache being used at all (i.e. the existing code). Thanks!

> Any advice on how best to stub the SQLite3 database calls / caching for test execution?

I recommend not stubbing these for integration tests and not adding unit tests that would need them stubbed.",True,False,110,173514.51666666666
Homebrew/brew/3720,2018-01-27T20:27:44Z,False,5a6ce0c36480fd0493b6dfa7,"Hey @MikeMcQuaid,

On current `origin/master` I ran the command I used before twice

```bash
# Run 1) Note: CPU at 45%
time brew linkage apache-spark docker-machine git hub libpng node pyenv-virtualenv scalastyle atk dockutil glfw hugo librsvg nvm pygobject sqlite autoconf elasticsearch glib icu4c libtasn1 openjpeg pygtk texinfo automake elixir glm imagemagick libtiff openssl python bash emacs gmp imagemagick@6 libtool openssl@1.1 python3 tree bdw-gc emacs-plus gnu-sed isl libunistring p11-kit r wget boost erlang gnutls ispell libyaml pango rbenv wxmac cairo fontconfig go jpeg little-cms2 pcre rbenv-gemset xz cask freetype gobject-introspection jruby llvm pixman readline yarn cmake gcc graphite2 libcroco lua pkg-config redis coreutils gdbm gtk+ libevent maven poppler ruby crystal-lang gdk-pixbuf harfbuzz libffi mpfr postgresql ruby-build docker gettext heroku libidn2 mysql py2cairo sbt docker-compose gimme hicolor-icon-theme libmpc nettle pyenv scala > master-with-homebrew-cache.txt
# > Output:
brew linkage apache-spark docker-machine git hub libpng node pyenv-virtualenv  7.18s user 11.19s system 45% cpu 40.115 total

# Run 2) Note: CPU at 99%
time brew linkage apache-spark docker-machine git hub libpng node pyenv-virtualenv scalastyle atk dockutil glfw hugo librsvg nvm pygobject sqlite autoconf elasticsearch glib icu4c libtasn1 openjpeg pygtk texinfo automake elixir glm imagemagick libtiff openssl python bash emacs gmp imagemagick@6 libtool openssl@1.1 python3 tree bdw-gc emacs-plus gnu-sed isl libunistring p11-kit r wget boost erlang gnutls ispell libyaml pango rbenv wxmac cairo fontconfig go jpeg little-cms2 pcre rbenv-gemset xz cask freetype gobject-introspection jruby llvm pixman readline yarn cmake gcc graphite2 libcroco lua pkg-config redis coreutils gdbm gtk+ libevent maven poppler ruby crystal-lang gdk-pixbuf harfbuzz libffi mpfr postgresql ruby-build docker gettext heroku libidn2 mysql py2cairo sbt docker-compose gimme hicolor-icon-theme libmpc nettle pyenv scala > master-with-homebrew-cache.txt
# > Output:
brew linkage apache-spark docker-machine git hub libpng node pyenv-virtualenv  4.70s user 3.97s system 99% cpu 8.735 total
```

The updated table would be:

| Run                                                                      | Performance                                      |
|--------------------------------------------------------------------------|--------------------------------------------------|
| `AndrewMcBurney/cache-optimization`: Build the cache                              | `5.14s user 5.35s system 94% cpu 11.111 total`   |
| `AndrewMcBurney/cache-optimization`: Use the cache | `0.50s user 0.20s system 94% cpu 0.741 total`    |
| `origin/master` | `4.70s user 3.97s system 99% cpu 8.735 total` |

So it takes longer to build the cache (as expected with the database calls), but the performance is significantly improved when just fetching the data from `SQLite3`.
",True,False,110,173514.51666666666
Homebrew/brew/3720,2018-01-29T16:46:27Z,False,5a6f4fe76480fd099ab64ac5,"Hi @alyssais and @MikeMcQuaid,

Could I get a code review for my changes when you have some free time please?

Thank you! 🙂 ",True,False,110,173514.51666666666
joomlatools/joomlatools-console/88,2018-01-30T10:24:08Z,False,5a70483f6480fd0893c6f920,"@msaladna I suggest we use [is_numeric()](http://php.net/manual/en/function.is-numeric.php) instead of [ctype_digit()](http://php.net/manual/en/function.ctype-digit.php) here. `ctype_digit` will return `false` for integers between -128 and 255, because they get interpreted as the ASCII value of a single character.

Example from the docs:

```php
ctype_digit('42'); // true
ctype_digit(42); // false (42 is ASCII code for the * char)
```",True,False,5,426.5
joomlatools/joomlatools-console/88,2018-01-30T10:24:53Z,False,5a70483f6480fd069addd5f5,"@msaladna Instead of `str_replace()` we can use `addslashes()` here, and have all quote styles covered?",True,False,5,426.5
joomlatools/joomlatools-console/88,2018-01-30T10:28:11Z,False,5a7048c06480fd069addd632,"@msaladna Oops, please ignore my previous comment. `addslashes()` is not a good idea as it would put the `\` character in there literally. `str_replace()` is what we need indeed!",True,False,5,426.5
joomlatools/joomlatools-console/88,2018-01-30T15:08:38Z,False,5a708aa76480fd03c6d3300d,"You're right. Cue the ""shit!"" on my end for not testing that data type.",True,False,5,426.5
joomlatools/joomlatools-console/88,2018-01-30T17:30:38Z,False,5a70abc86480fd0741eb1de7,Thanks again @msaladna! This will go in the next release.,True,False,5,426.5
citizenfx_____fivem_____98,2018-02-12T21:11:38Z,True,citizenfx_____fivem_____98_____168689032,,True,True,22,50031.433333333334
citizenfx_____fivem_____98,2018-02-12T21:15:02Z,True,citizenfx_____fivem_____98_____365064267,it's almost you don't like signature features,True,True,22,50031.433333333334
citizenfx_____fivem_____98,2018-02-12T21:21:54Z,True,citizenfx_____fivem_____98_____365066163,Not the meme!,True,True,22,50031.433333333334
citizenfx_____fivem_____98,2018-02-12T21:47:58Z,True,citizenfx_____fivem_____98_____365073548,no one touches the memes!!!,True,True,22,50031.433333333334
Homebrew/brew/3720,2018-02-12T22:18:18Z,False,5a8212b16480fd6ec5f62bfb,"Hi @MikeMcQuaid,

I implemented a `DBM` Berkeley db solution like you suggested. I've summarized the performance comparison between the `SQLite3` implementation and the `DBM` implementation below.

I created a [pull request](https://github.com/AndrewMcBurney/brew/pull/3) against my personal fork of Homebrew to show what the changes would look like against `origin/master`.

Should you wish to proceed with the `DBM` implementation (which I recommend over the `SQLite3` solution after this investigation), I'll push the code to this pull request, clean up the commits, and write tests for the changes.

## Performance Comparison

### Summary

| Implementation  | No Optimization | Cache Optimization |
|-----------------|-----------------|--------------------|
| `origin/master` | 8.04 seconds    | N/A                |
| `SQLite3`       | 10.3 seconds    | 180 milliseconds   |
| `DBM`           | 8.14 seconds    | 208 milliseconds   |

#### Observations

- It takes longer to build the cache (i.e., the **No Optimization** column) for both `SQLite3` and `DBM` implementations than it currently takes on `origin/master`
- The `DBM` implementation can build the cache faster than the `SQLite3` implementation
- It's much faster to run the `brew linkage` command when the values are cached (i.e., the **Cache Optimization** column for `DBM` and `SQLite3`)
- The `SQLite3` implementation is faster at accessing values from the cache than the `DBM` implementation _(but not by much)_

### Flame Graphs

#### `origin/master`

**Without Optimization**

The baseline without caching (i.e., the time it takes for `brew linkage` to complete on `origin/master`) took 8.04 seconds to complete. The library `boost` took 704 milliseconds to complete checking the dylibs and printing the output.

<img width=""1003"" alt=""baseline"" src=""https://user-images.githubusercontent.com/8942499/36120956-d376e00a-1012-11e8-8d58-9a977d2c25bb.png"">

#### `SQLite3`

**Without Optimization**

Without the caching (i.e., using the `--rebuild` flag) the command (instrumented starting from `linkage.rb`) took 10.3 seconds to complete. The library `boost` took 777 milliseconds to complete checking the dylibs and printing the output.

<img width=""1003"" alt=""no-opt"" src=""https://user-images.githubusercontent.com/8942499/36120978-dba92f3a-1012-11e8-9e52-6f82add1a946.png"">

**With Optimization**

With the caching (i.e., by default) the command (instrumented starting from `linkage.rb`) took 180 milliseconds to complete. The library `boost` took 1.77 milliseconds to complete checking the dylibs and printing the output.

<img width=""1005"" alt=""opt"" src=""https://user-images.githubusercontent.com/8942499/36121054-1637bf2c-1013-11e8-9ae1-bbb5d35fd085.png"">

#### `DBM`

**Without Optimization**

Without the caching (i.e., using the `--rebuild` flag) the command (instrumented starting from `linkage.rb`) took 8.14 seconds to complete. The library `boost` took 686 milliseconds to complete checking the dylibs and printing the output.

<img width=""1004"" alt=""no-opt"" src=""https://user-images.githubusercontent.com/8942499/36121068-216f6020-1013-11e8-9a6f-27312f2365c1.png"">

**With Optimization**

With the caching (i.e., by default) the command (instrumented starting from `linkage.rb`) took 208 milliseconds to complete. The library `boost` took 2.15 milliseconds to complete checking the dylibs and printing the output.

<img width=""1000"" alt=""optimization"" src=""https://user-images.githubusercontent.com/8942499/36121085-2b2f3d24-1013-11e8-8db1-ff53f2064943.png"">

### Recommendations

I would recommend proceeding with the `DBM` implementation because:

- the solution doesn't require a vendored gem like the `SQLite3` implementation
- the `SQLite3` gem requires building native extensions from C with the `rake/extensioncompiler`
- setting the cache is slightly fast than the `SQLite3` implementation
- while the `SQLite3` solution is faster at fetching data from the cache, it's not faster by much
- cleaner to read the code, and understand the cache structure/schema
",True,False,110,173514.51666666666
Homebrew/brew/3720,2018-02-13T09:26:45Z,False,5a82af5f6480fd654faf214c,"> Should you wish to proceed with the DBM implementation (which I recommend over the SQLite3 solution after this investigation), I'll push the code to this pull request, clean up the commits, and write tests for the changes.

Great work @AndrewMcBurney! Yeh, I think the DBM implementation is the way forward now based on the code and your investigations. Hold off writing more tests until we get the code structure banged out a bit more; want to avoid you wasting time on stuff that's not needed. Thanks again!",True,False,110,173514.51666666666
Homebrew/brew/3720,2018-02-13T16:50:14Z,False,5a83174f6480fd661e3c88bc,"Hi @MikeMcQuaid,

The travis-ci build can't load the `dbm` library 🤔. I looked into open issues on GitHub pertaining to this, but couldn't find any. I found an outdated issue for `dbm` not being loaded with [Ruby 1.9.3](https://github.com/travis-ci/travis-ci/issues/809). Do you have any suggestions for how to proceed?

```
==> Pouring portable-ruby-2.3.3.leopard_64.bottle.1.tar.gz
Error: cannot load such file -- dbm
```

___

I had a question about the structural changes you mentioned. When you say ""hold off until we get the code structure banged out a bit more"", what kind of structure were you hoping for?

In an [earlier comment](https://github.com/Homebrew/brew/pull/3720#issuecomment-360426789) you said: 

> High level thoughts are that I'd love to see all the SQLite stuff abstracted away sufficiently that we could use it for more than just linkage and think about what other data (e.g. dependency trees) would be good to store and when it would be good to update it (for dependencies: on `brew update`, for installation data: on `brew (re)install/upgrade`

Because of this, I created the [abstractions](https://github.com/Homebrew/brew/pull/3720#issuecomment-360622515) `Store` (now _`CacheStore`_) and `Database`. I've since modified the implementation, since having an abstract base class and corresponding concrete classes for `Database` seemed overkill with the simplified `DBM` implementation.

I think having abstractions for `CacheStore` would be beneficial and would allow us to easily extend the caching for other commands (such as `brew uses`):

```ruby
#
# UsesStore need to implement the CacheStore interface by defining the following
# methods:
#
#   - initialize
#   - update!
#   - fetch
#   - flush_cache!
#
class UsesStore < CacheStore
  def initialize ... end
  def update! ... end
  def fetch ... end
  def flush_cache! ... end

  private

  # ... internal logic specific to UsesStore implementation ...
end
```

However, in a more [recent comment](https://github.com/Homebrew/brew/pull/3720#pullrequestreview-95660102) you said:

> A general comment that the levels of abstraction here can stay while playing around with various methods of their implementation but it would be good to reduce this stuff down to e.g. a single new class with extensions to existing classes for a final merged PR.""

I apologize if this comment is coming off as confrontational, because that's not my intention. I'd genuinely like to know (for my personal growth, and design judgement) what your thoughts are, and why you recommend having a single class for the merged PR?

Thank you, I appreciate the help! 🙂 ",True,False,110,173514.51666666666
Homebrew/brew/3720,2018-02-13T17:04:16Z,False,5a831a946480fd6dec079a74,"> The travis-ci build can't load the dbm library 🤔. I looked into open issues on GitHub pertaining to this, but couldn't find any. I found an outdated issue for dbm not being loaded with Ruby 1.9.3. Do you have any suggestions for how to proceed?

@AndrewMcBurney Annoyingly that means we'll need to build a new portable ruby in order for anyone who uses it to use this functionality. That's fine for us to do but will take a little bit of fiddling. It doesn't need to block review here.

> I had a question about the structural changes you mentioned. When you say ""hold off until we get the code structure banged out a bit more"", what kind of structure were you hoping for?

I'd like review the classes and methods as-is before you spend time writing tests that may need rewritten.

> I've since modified the implementation, since having an abstract base class and corresponding concrete classes for Database seemed overkill with the simplified DBM implementation.

👍 

> I think having abstractions for CacheStore would be beneficial and would allow us to easily extend the caching for other commands (such as brew uses)

👍 

> I apologize if this comment is coming off as confrontational, because that's not my intention. I'd genuinely like to know (for my personal growth, and design judgement) what your thoughts are, and why you recommend having a single class for the merged PR?

No worries, you've been extremely helpful and polite.",True,False,110,173514.51666666666
turtlecoin_____turtlecoin_____74,2018-02-19T08:06:12Z,True,turtlecoin_____turtlecoin_____74_____169898128,untested,True,True,14,1290.3666666666666
turtlecoin_____turtlecoin_____74,2018-02-19T11:51:37Z,True,turtlecoin_____turtlecoin_____74_____366667243,Why do we need to increase the max supply?,True,True,14,1290.3666666666666
turtlecoin_____turtlecoin_____74,2018-02-19T20:04:06Z,True,turtlecoin_____turtlecoin_____74_____366790848,"(using approximated numbers)

10,000,000,000 people

29,600 reward * 2 blocks/min * 60 minutes * 24 hours = 85,248,000 turtles/day

85,248,000 / 10,000,000,000 = 0.0085248 turtles/person/day

1,000 turtles/person / 0.0085248 turtles/person/day = 117,304 days for everyone to have 1,000 turtles = 321 years

Money supply of 100,000,000,000,000 shells only allows for 10,000 shells/person once fully produced.",True,True,14,1290.3666666666666
turtlecoin_____turtlecoin_____74,2018-02-20T02:33:05Z,True,turtlecoin_____turtlecoin_____74_____366850411,"At best, we are going to have about 10,000 shells per person on the planet (using rounded/approximated number). Is that really going to be that functional? It seems like more shells are needed.

What do you think about generating 100k shells (1000 turtles) per person per day?",True,True,14,1290.3666666666666
turtlecoin_____turtlecoin_____74,2018-02-20T02:35:34Z,True,turtlecoin_____turtlecoin_____74_____366850718,Is my math wrong? Or you can only communicate through github emojis?,True,True,14,1290.3666666666666
turtlecoin_____turtlecoin_____74,2018-02-20T02:51:52Z,True,turtlecoin_____turtlecoin_____74_____366852828,"I don't think the emission schedule should be changed. Users have agreed on the initial rules by their participation and making this big of a centralised rule change while we are underway will invalidate their initial reasons for joining. 

Max supply should not be modified on the main chain. ",True,True,14,1290.3666666666666
turtlecoin_____turtlecoin_____74,2018-02-20T02:58:11Z,True,turtlecoin_____turtlecoin_____74_____366853559,"I think that's a somewhat fair way of looking at it, but it seems like the low money supply will forever limit turtlecoin's usefulness.

What would be the damage to users if supply was increased???",True,True,14,1290.3666666666666
turtlecoin_____turtlecoin_____74,2018-02-20T03:05:11Z,True,turtlecoin_____turtlecoin_____74_____366854482,"Compare to Bitcoin:

16,875,100 coins with 100,000,000 satoshi per coin = 1,687,510,000,000,000 satoshis

168,751 satoshis per person (using 10,000,000,000 people)

Turtle has:

602,181,453,437 turtles with 100 shells per turtle = 60,218,145,343,700 shells

60 shells per person (using 10,000,000,000 people)",True,True,14,1290.3666666666666
turtlecoin_____turtlecoin_____74,2018-02-20T05:10:20Z,True,turtlecoin_____turtlecoin_____74_____366868630,"Bitcoin has a total supply of 21m coins, so 21,000tn satoshi.

You haven't said why you believe everyone needs 10,000 shells or what purpose this would serve. If it's egalitarian idealism then because TRTL is a freely traded coin and it costs money to mine, and if its prime purpose is to have transactional value and be a mechanism of exchange, the 10,000 shells you believe they need will not be equally distributed among persons. 

The reason there should be 10,000 TRTL for every person alive at the point where there are 10bn people on the planet and not more or less is arbitrary. It's already been explained [why TRTL has a total supply of 1tn with two decimal places](https://medium.com/@turtlecoin/one-trillion-turtles-coin-supply-and-unit-economics-5bfbea0aa1f1). The fact that supply of cryptocurrency requires work is one of its saving graces - while central banks can just ""print money"" in order to alleviate deeper economic issues, creating more money without any kind of work like it takes to mine natural resources (or in the case of crypto, solve mathematical problems), cryptocurrency retains value because of its strictly controlled and predictable supply and transfer mechanism. What you propose would turn TurtleCoin into the crypto equivalent of the Zimbabwean dollar, because then nothing would stop two or three more zeroes being added to the end of the money supply. Existing supplies would become increasingly worthless, people would stop mining, the blockchain would suffer from a lack of maintenance because people couldn't rely on the basic supply and algorithm - in short it would be a complete mess.

Most importantly, however, you've just added a zero without considering any of the implications of this PR. You haven't dealt with how any of the other software is going to deal with this - I assume you haven't looked at any of the other repos to see how they deal with this right now, and I assume you haven't considered the impact on coins already mined or the existing blockchain.",True,True,14,1290.3666666666666
turtlecoin_____turtlecoin_____74,2018-02-20T05:13:04Z,True,turtlecoin_____turtlecoin_____74_____366868974,">You haven't said why you believe everyone needs 10,000 shells or what purpose this would serve.

wtf, I never said I believe everyone needs 10,000 shells",True,True,14,1290.3666666666666
turtlecoin_____turtlecoin_____74,2018-02-20T05:17:25Z,True,turtlecoin_____turtlecoin_____74_____366869502,"> wtf, I never said I believe everyone needs 10,000 shells

No, you're right. You said 100,000. I apologise for mixing one essentially arbitrary target spawned from a half baked idea and a second essentially arbitrary target spawned from a half baked idea.

Should I edit my original post to add a zero so it's clearer for you?",True,True,14,1290.3666666666666
turtlecoin_____turtlecoin_____74,2018-02-20T05:21:03Z,True,turtlecoin_____turtlecoin_____74_____366869966,">No, you're right. You said 100,000.

nah brah, you got a copy-paste function?",True,True,14,1290.3666666666666
turtlecoin_____turtlecoin_____74,2018-02-20T05:31:57Z,True,turtlecoin_____turtlecoin_____74_____366871377,"> nah brah, you got a copy-paste function?

Yeah I do, ""brah"", so here's you:

> What do you think about generating 100k shells (1000 turtles) per person per day?

This gets more redundant by the second. 100,000 shells per person per day? Is this for the 10bn people that are going to exist on this planet at some point? Or just everyone who's mining gets 100,000 shells every day? Is this a cryptonote supply algorithm or are we just handing them out? Because then we could just premine 1tn coins with 1000 units and hand them out. Cut this distributed consensus thing right out, because it gets in the way of whatever you think is happening in the world. You can't even explain why, what or how - you just farted out some half baked sums and picked a number out of the air.

Right ""brah""? Tell you what. Go away and deal with the economic, social, psychological and, most importantly, engineering implications of adding a zero, then come back when you've solved those. Then you can add as many zeros as you like. ""Brah"".

_Don't even bother_ explaining what you mean, because that's a giant gaping rabbit hole I don't care to go down and I can't see it having any possible benefit for anyone. Not you, and _definitely_ not me.",True,True,14,1290.3666666666666
turtlecoin_____turtlecoin_____74,2018-02-20T05:36:34Z,True,turtlecoin_____turtlecoin_____74_____366871945,"This is getting out of hand, and frankly I believe @siftycat said everything that needed to be said. Continue this discussion elsewhere if you wish to have it.",True,True,14,1290.3666666666666
Homebrew/brew/3720,2018-02-23T09:06:42Z,False,5a8fdc406480fd6e7d4e97b0,"- Should this cache object be created every time we go through the loop?
- Pedantry but `:linkage` feels like a nicer argument; makes clear it's a type rather than e.g. a filename",True,False,110,173514.51666666666
Homebrew/brew/3720,2018-02-23T09:07:01Z,False,5a8fdc406480fd6743689570,Ideally I'd make the cache usage a block so there doesn't need to be a manual `.close`,True,False,110,173514.51666666666
Homebrew/brew/3720,2018-02-23T09:08:48Z,False,5a8fdc406480fd664d2a0cab,"What's `0666` here? Could be good to document what both of these arguments mean, maybe by using variable names.",True,False,110,173514.51666666666
Homebrew/brew/3720,2018-02-23T09:09:13Z,False,5a8fdc406480fd653a50fdb1,can remove `is a class`,True,False,110,173514.51666666666
Homebrew/brew/3720,2018-02-23T09:10:39Z,False,5a8fdc406480fd6525774dd4,I'm not convinced that comments these structured are helpful. It's expected that `initialize` will always instantiate a new object and return `nil`. I think in general it's worth trimming down the comments to explaining why things are done rather than what. Comments should be a last resort when the code cannot adequately communicate the same information.,True,False,110,173514.51666666666
Homebrew/brew/3720,2018-02-23T09:10:59Z,False,5a8fdc476480fd6c9bc538d8,What about using a `Module` rather than an abstract base class?,True,False,110,173514.51666666666
Homebrew/brew/3720,2018-02-23T09:12:47Z,False,5a8fdc406480fd6563c1e764,"Still don't quite understand this. I'd suggest these are symbols, too.",True,False,110,173514.51666666666
Homebrew/brew/3720,2018-02-23T09:13:05Z,False,5a8fdc406480fd6c5a62d5eb,Why not call it `keg_name` or `name`?,True,False,110,173514.51666666666
Homebrew/brew/3720,2018-02-23T09:13:45Z,False,5a8fdc406480fd6dec0c8772,"newline after each `,`, use symbolic keys.",True,False,110,173514.51666666666
Homebrew/brew/3720,2018-02-23T09:14:05Z,False,5a8fdc426480fd6c04d13b3d,Iterate over `HASH_LINKAGE_TYPES`?,True,False,110,173514.51666666666
Homebrew/brew/3720,2018-02-23T09:14:48Z,False,5a8fdc406480fd6b36535c92,What's the difference between a path and hash value?,True,False,110,173514.51666666666
Homebrew/brew/3720,2018-02-23T09:15:10Z,False,5a8fdc406480fd6593e4c873,Turn this `unless` into an `if`,True,False,110,173514.51666666666
Homebrew/brew/3720,2018-02-23T09:15:53Z,False,5a8fdc406480fd666df679d5,Is `=>` escaped internally if that's e.g. within a string?,True,False,110,173514.51666666666
Homebrew/brew/3720,2018-02-23T09:17:00Z,False,5a8fdc406480fd69cf68fe07,`store.fetch_type(:brewed_dylibs)` might be a nicer API,True,False,110,173514.51666666666
Homebrew/brew/3720,2018-02-24T22:08:10Z,False,5a91e24e6480fd5616bc25af,"In `LinkageChecker::display_items`, the output can vary depending on if the type of `things` is an `Array` or `Hash`.

`hash_values` are values which store the `list_label` in addition to the list `items`, whereas `path_values` are values that just store the list `items`.

If you have suggestions for alternate ways to name the variables, I'd be happy to hear any suggestions. 🙂 

```ruby
  def display_items(label, things)
    return if things.empty?
    puts ""#{label}:""
    if things.is_a? Hash
      things.sort.each do |list_label, list|
        list.sort.each do |item|
          puts ""  #{item} (#{list_label})""
        end
      end
    else
      things.sort.each do |item|
        puts ""  #{item}""
      end
    end
  end
```",True,False,110,173514.51666666666
Homebrew/brew/3720,2018-02-24T22:08:13Z,False,5a91e2546480fd5c688f0bf7,Correct. DBM stores the ruby hash as a string. I converted the ruby string hash into a JSON string so that it could be parsed using the `JSON.parse` method.,True,False,110,173514.51666666666
Homebrew/brew/3720,2018-02-24T22:14:22Z,False,5a91e3c06480fd5cb1ccec69,"That's a fair point.

I can remove the comments if you'd like. I had them to be compliant with RDoc specifications. I personally like being explicit about what types parameters and return values should be.",True,False,110,173514.51666666666
Homebrew/brew/3720,2018-02-25T16:59:31Z,False,5a92eb826480fd58bda1b4b7,These correspond to the types of values in `LinkageChecker` printed by the [`LinkageChecker::display_items`](https://github.com/Homebrew/brew/blob/master/Library/Homebrew/os/mac/linkage_checker.rb#L155-L171) function where [`things.is_a? Hash`](https://github.com/Homebrew/brew/blob/master/Library/Homebrew/os/mac/linkage_checker.rb#L160).,True,False,110,173514.51666666666
Homebrew/brew/3720,2018-02-25T17:02:58Z,False,5a92ec476480fd5640e0ce53,"What advantages would extending a `Module` provide over extending an abstract base class? I'm relatively new to ruby, so I'm curious to know.

The way I approached it, I thought of what interface the `CacheStore` concretions should implement, and I thought the best way to represent that interface was through using an abstract base class.",True,False,110,173514.51666666666
angular_____material_____11135,2018-02-26T15:49:40Z,True,angular_____material_____11135_____171412942,"Use md-stretch-height to fill available space in parent element.

Closes won't fix issue #2254 abandoned by core team for material 2 surge. Previously approved for milestones 1.1.6 and 1.1.7 by @ThomasBurleson in pull request #9665 that was locked by mistake by @Splaktar as explained in PR #11131. This PR is being opened at @Splaktar's request as noted in #9665 ",True,True,2,3079.1833333333334
Homebrew/brew/3720,2018-02-27T11:26:36Z,False,5a9542226480fd5682105e03,Could consider making an argument to `initialize` that will run `flush_cache_and_check_dylibs` if passed?,True,False,110,173514.51666666666
Homebrew/brew/3720,2018-02-27T11:26:50Z,False,5a9542236480fd588a9b7159,Which users? On what?,True,False,110,173514.51666666666
Homebrew/brew/3720,2018-02-27T11:27:56Z,False,5a9542226480fd5750d880cf,I don't think this is the place to document `DBM::WRCREAT`; it'll go in the public API docs but is an implementation detail. Either comment inside the function or consider `create_if_not_exist_mode = DBM::WRCREAT` or similar.,True,False,110,173514.51666666666
Homebrew/brew/3720,2018-02-27T11:28:56Z,False,5a9542226480fd56a7bece76,Can this use symbolic keys too?,True,False,110,173514.51666666666
Homebrew/brew/3720,2018-02-27T11:29:31Z,False,5a9542226480fd562c1bc26d,When would `.key?` be true but `[]` be false?,True,False,110,173514.51666666666
Homebrew/brew/3720,2018-02-27T11:30:59Z,False,5a9542236480fd59b5af5aa7,Noticing the filenames here: any reason to make this mac-only? `dbm` seems to be built by Ruby on Linux by default?,True,False,110,173514.51666666666
Homebrew/brew/3720,2018-02-27T11:33:40Z,False,5a9542236480fd55ef9aefdd,Do `path_values` and `hash_values` need to be separate named arguments here? Could instead you just use the inner key names as named parameters?,True,False,110,173514.51666666666
Homebrew/brew/3720,2018-02-27T11:34:51Z,False,5a9542606480fd560464a30a,@AndrewMcBurney I think it's reasonable to document parameters and return types but only add additional text if it says something that the name doesn't.,True,False,110,173514.51666666666
Homebrew/brew/3720,2018-02-27T11:36:03Z,False,5a9542ac6480fd56f6d65b6a,@AndrewMcBurney a `Module` is abstract by default effectively and you can include multiple modules into a class. In general building class hierarchies is less common in Ruby unless it really makes sense; I'm not saying it doesn't here but just worth considering I think if you're needing to raise not implemented exceptions.,True,False,110,173514.51666666666
Homebrew/brew/3720,2018-02-27T11:37:09Z,False,5a9542ea6480fd5934f48f0c,@AndrewMcBurney could this not be inferred purely from type analysis?,True,False,110,173514.51666666666
Homebrew/brew/3720,2018-02-27T11:37:23Z,False,5a9542f96480fd5640e213be,@AndrewMcBurney ping on this one.,True,False,110,173514.51666666666
Homebrew/brew/3720,2018-02-27T11:38:12Z,False,5a9543296480fd5a9f593e6e,"I understand the differentiation now, thanks, but not why e.g. `things.is_a? Hash` is sufficient and you need to store them separately?",True,False,110,173514.51666666666
Homebrew/brew/3720,2018-02-27T11:39:18Z,False,5a9543716480fd5aca7764a3,Where is `hash_to_string` or similar implemented? It feels weird that one way needs converted manually and the other does not.,True,False,110,173514.51666666666
Homebrew/brew/3720,2018-02-27T14:57:15Z,False,5a9571d06480fd5934f4ab1d,"The main reason I kept the file in the `os/mac/` directory is because the `LinkageChecker` is found in the `os/mac/` directory and the concrete `LinkageStore` in the `cache_store.rb` file is used by the linkage checker.

I can move the `cache_store.rb` file to a different location - since `dbm` is built into Ruby and Linux like you said. However, would you like me to break up the files and keep the `LinkageStore` class in the `os/mac/` directory since it's only being used by the `LinkageChecker`?",True,False,110,173514.51666666666
Homebrew/brew/3720,2018-02-27T14:58:51Z,False,5a9572306480fd5640e2307a,"I seem to recall coming across a situation in which the key existed, but the value was `nil` - causing a runtime error. I can remove the right-hand side of the boolean expression, and test to see if there are any issues.",True,False,110,173514.51666666666
Homebrew/brew/3720,2018-02-27T15:07:39Z,False,5a9574406480fd5b579ea8ea,"It makes converting the string `dbm` stores into a `JSON` string a little bit more difficult. I can change it to symbolic keys if you'd like, and add a more complicated regular expression.

Currently, I'm converting all the symbolic keys into string keys because it's  simple to `.gsub(""=>"", "":"")` to get the valid `JSON` string.

I could do something like this instead:

```ruby
def string_to_hash(string)
  JSON.parse(string.gsub(/(\S+):/) { |match| ""\""#{match}\"""" })
end
```

Which would transform the string like:

```ruby
<<~JSON
{
  test: ""this"",
  out: ""now""
}
JSON

# =>

<<~JSON
{
  ""test"": ""this"",
  ""out"": ""now""
}
JSON
```

Which method do you prefer?",True,False,110,173514.51666666666
Homebrew/brew/3720,2018-02-27T15:39:52Z,False,5a957bd76480fd5616bddd57,"I did some investigation, and I remember why I added the extra condition. There's an edge case where you could get:

```
Error: undefined method `[]' for nil:NilClass
Please report this bug:
  https://docs.brew.sh/Troubleshooting.html
/usr/local/Homebrew/Library/Homebrew/os/mac/cache_store.rb:117:in `fetch_array_values'
```",True,False,110,173514.51666666666
Homebrew/brew/3720,2018-02-27T15:44:21Z,False,5a957ce16480fd5d96c2312e,"Nevermind, that issue was unrelated. Apologies for jumping to a premature conclusion. I think it's fine to remove the other condition.",True,False,110,173514.51666666666
Homebrew/brew/3720,2018-02-27T15:55:28Z,False,5a957f7e6480fd57d62eaca4,"Alright, sounds good to me! 🙂 ",True,False,110,173514.51666666666
Homebrew/brew/3720,2018-02-27T15:55:59Z,False,5a957f956480fd5c2dcbc759,"Ahh, gotcha - would you like me to change it to a `Module` instead?",True,False,110,173514.51666666666
Homebrew/brew/3720,2018-02-27T16:02:06Z,False,5a9581026480fd5aca778b48,"The `hash_to_string` is done implicitly by `dbm` when you insert the values into the database. Since `dbm` already does the conversion, I didn't think it was necessary to write a `hash_to_string` method, and store that result.

However, I could do a `hash_to_string` method before storing into `dbm`, where I could transform the ruby hash string into a JSON equivalent string. That way, `string_to_hash`'s logic would be simplified.

```ruby
  def string_to_hash(string)
    JSON.parse(string)
  end
```

I like this implementation better, so I think I'll change the logic around storing data into `dbm` so it converts it to a `JSON` compatible string first.",True,False,110,173514.51666666666
Homebrew/brew/3720,2018-02-27T18:10:43Z,False,5a959f286480fd59b5af96d0,"It could, but I wanted to pass the values aggregated by type into the function, so I could simply call `format_path_values`, and `format_hash_values` without having to do extra processing in the `CacheStore` to transform the parameters into two arrays.",True,False,110,173514.51666666666
Homebrew/brew/3720,2018-02-27T18:14:01Z,False,5a959ff16480fd5cb1cebc67,"Would you like me to iterate over the `HASH_LINKAGE_TYES` in the function parameters? I didn't know that was possible in ruby.

Would something like this work?

```ruby
def some_function(hash_values: HASH_LINKAGE_TYPES.map { |type| [type, {}] }.to_h)
  # ...
end
```",True,False,110,173514.51666666666
Homebrew/brew/3720,2018-02-27T18:29:52Z,False,5a95a3ae6480fd5934f4ce00,"How do you like this implementation?

**cache_store.rb**
```ruby
  def update!(values:, array_values: {}, hash_values: {})
    values.each do |key, value|
      if value.is_a? Hash
        hash_values[key] = value
      else
        array_values[key] = value
      end
    end

    database_cache[keg_name] = ruby_hash_to_json_string(
      array_values: format_array_values(array_values),
      hash_values: format_hash_values(hash_values),
    )
  end
```

**linkage_checker.rb**
```ruby

  # Updates data store with package path values
  def store_dylibs!
    store.update!(
      values: {
        system_dylibs: @system_dylibs,
        variable_dylibs: @variable_dylibs,
        broken_dylibs: @broken_dylibs,
        indirect_deps: @indirect_deps,
        undeclared_deps: @undeclared_deps,
        unnecessary_deps: @unnecessary_deps,
        brewed_dylibs: @brewed_dylibs,
        reverse_links: @reverse_links,
      },
    )
  end
```

",True,False,110,173514.51666666666
Homebrew/brew/3720,2018-02-28T11:09:28Z,False,5a968df16480fd562c1c7d8d,I like the version below with using `JSON` to do the hash-to-string conversion.,True,False,110,173514.51666666666
Homebrew/brew/3720,2018-02-28T11:10:07Z,False,5a968e176480fd588a9c2f18,"> I can move the cache_store.rb file to a different location - since dbm is built into Ruby and Linux like you said. However, would you like me to break up the cache_store.rb file and keep the LinkageStore class in the os/mac/ directory since it's only being used by the LinkageChecker?

Sounds good 👍 ",True,False,110,173514.51666666666
Homebrew/brew/3720,2018-02-28T11:10:52Z,False,5a968e486480fd57ae4d5b6d,"@AndrewMcBurney No, I'll leave it up to you, I just wanted to elaborate given you were saying you aren't super experience with Ruby.",True,False,110,173514.51666666666
Homebrew/brew/3720,2018-02-28T11:14:26Z,False,5a968f176480fd5682111ab2,"@AndrewMcBurney Looks good except I'd be tempted to use something like https://flushentitypacket.github.io/ruby/2015/03/31/ruby-keyword-arguments-the-double-splat-and-starsnake.html so you don't need a `values:` parameter but instead can just pass e.g. `system_dylibs:` as parameters and iterate through them all. Also, could just make `values` a non-keyword parameter which is always a hash?",True,False,110,173514.51666666666
Homebrew/brew/3720,2018-02-28T11:15:57Z,False,5a968f726480fd562c1c7e57,I think passing them in more dynamically might be a good call like mentioned above.,True,False,110,173514.51666666666
Homebrew/brew/3720,2018-02-28T11:17:16Z,False,5a968fc06480fd5dde6d6e87,"> I like this implementation better, so I think I'll change the logic around storing data into dbm so it converts it to a JSON compatible string first.

Yeh, that seems way better than doing any encoding/decoding ourselves.",True,False,110,173514.51666666666
Homebrew/brew/3720,2018-02-28T15:01:13Z,False,5a96c44b6480fd5dde6d8dca,"Ahh, that's pretty cool! Will make the changes! 🙂 ",True,False,110,173514.51666666666
angular_____material_____11135,2018-02-28T19:08:51Z,True,angular_____material_____11135_____369348349,"@Splaktar All comments in PR #9665 have been addressed. Just waiting on you, pal.",True,True,2,3079.1833333333334
Homebrew/brew/3720,2018-03-06T08:52:29Z,False,5a9e59556480fd5cfc9e49e8,If this isn't specified will it user the default user `umask` or something else? If the default `umask`: I think that's preferable to setting it explicitly.,True,False,110,173514.51666666666
Homebrew/brew/3720,2018-03-06T08:54:18Z,False,5a9e59546480fd5d68ea7627,Maybe worth checking for an `Array` explicitly and erroring otherwise (and elsewhere too)?,True,False,110,173514.51666666666
Homebrew/brew/3720,2018-03-06T08:55:12Z,False,5b0674586480fd80914db409,I think these sort of parameters docs should describe the contents rather than just having the name or they aren't super useful.,True,False,110,173514.51666666666
mesosphere/dcos-docs-site/664,2018-03-07T00:16:51Z,False,5a9f2f796480fd560469a78e,@jieyu could you take a look at this docs PR.,True,False,11,1018.05
mesosphere/dcos-docs-site/664,2018-03-07T00:21:30Z,False,5a9f30916480fd57d6339733,DC/OS Storage Service,True,False,11,1018.05
mesosphere/dcos-docs-site/664,2018-03-07T00:23:28Z,False,5a9f31076480fd571ab41f09,"I'd say: `A flag, if set, will enable advanced storage features in DC/OS, including Mesos CSI support, pre-loaded device plugins, etc. This feature flag needs to be turned on to use the [DC/OS Storage Service (DSS)](/services/beta-storage)`",True,False,11,1018.05
mesosphere/dcos-docs-site/664,2018-03-07T00:26:28Z,False,5a9f31c46480fd56f6db6b6a,"Similar to above, i'd just mention that this flags will enable advanced storage support in DC/OS. I won't mention lvm at all here.",True,False,11,1018.05
mesosphere/dcos-docs-site/664,2018-03-07T00:39:41Z,False,5a9f34d16480fd55ef9ffc6b,@jieyu can you take another look?,True,False,11,1018.05
mesosphere/dcos-docs-site/664,2018-03-07T00:41:11Z,False,5a9f35816480fd5c6895a928,Please adjust those as well. s/Mesos/DC/OS/,True,False,11,1018.05
mesosphere/dcos-docs-site/664,2018-03-07T00:41:18Z,False,5a9f35876480fd5d29084bc4,s/Mesos/DC/OS/,True,False,11,1018.05
mesosphere/dcos-docs-site/664,2018-03-07T00:41:56Z,False,5a9f35836480fd5c2dd09413,"Enables advanced storage features in DC/OS including Mesos CSI support, and pre-installed CSI device plugins.",True,False,11,1018.05
mesosphere/dcos-docs-site/664,2018-03-07T00:42:17Z,False,5a9f35826480fd58bda8093f,pre-installed CSI device plugins to be consistent with below.,True,False,11,1018.05
mesosphere/dcos-docs-site/664,2018-03-07T00:42:28Z,False,5a9f35816480fd57ae51a228,have a link for CSI too.,True,False,11,1018.05
UWPCE-PythonCert-ClassRepos/Self_Paced-Online/249,2018-03-07T16:29:54Z,False,5aa0148e6480fd5655c49c14,"For readability I would recommend not putting function calls into `print` statements. I wouldn't normally read `print` statements as one wouldn't expect important logic to be part of it, but some strings that get printed out.

My point is, it is easy to skip over and miss important logic piece 🙂 ",True,False,3,3.0166666666666666
UWPCE-PythonCert-ClassRepos/Self_Paced-Online/249,2018-03-07T16:30:53Z,False,5aa0148c6480fd5934fa0fb8,keep in mind that it is recommended to use `isinstance` for type checking,True,False,3,3.0166666666666666
UWPCE-PythonCert-ClassRepos/Self_Paced-Online/249,2018-03-07T16:32:55Z,False,5aa0148b6480fd5a6091091d,could this have a `break` statement here instead?,True,False,3,3.0166666666666666
mesosphere/dcos-docs-site/664,2018-03-07T17:14:54Z,False,5aa01e1c6480fd5bc9237224,@jieyu  can you take a look?,True,False,11,1018.05
AT-06/coding/74,2018-03-12T06:12:08Z,False,5aa61a3d6480fd59b5b7c0e6,"![CRITICAL](https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL') Define a constant instead of duplicating this literal ""Black Panther"" 3 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonarcloud.io/coding_rules#rule_key=squid%3AS1192)
",True,False,12,8205.7
AT-06/coding/74,2018-03-12T06:12:08Z,False,5aa61a3c6480fd5aca7f9f24,"![MAJOR](https://sonarsource.github.io/sonar-github/severity-major.png 'Severity: MAJOR') Rename ""customer"" which hides the field declared at line 21. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonarcloud.io/coding_rules#rule_key=squid%3AHiddenFieldCheck)
",True,False,12,8205.7
AT-06/coding/74,2018-03-12T06:12:08Z,False,5aa61a3b6480fd5dde74f8e5,"![CRITICAL](https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL') Define a constant instead of duplicating this literal ""%s %s"" 3 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonarcloud.io/coding_rules#rule_key=squid%3AS1192)
",True,False,12,8205.7
AT-06/coding/74,2018-03-12T06:12:09Z,False,5aa61a3d6480fd5934fcdb0b,"SonarQube analysis reported 3 issues
* ![CRITICAL][CRITICAL] 2 critical
* ![MAJOR][MAJOR] 1 major

Watch the comments in this conversation to review them.

[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'
[MAJOR]: https://sonarsource.github.io/sonar-github/severity-major.png 'Severity: MAJOR'",True,False,12,8205.7
AT-06/coding/74,2018-03-12T11:55:22Z,False,5aa66ae26480fd5a6093f085,please initialize this array inside constructor.,True,False,12,8205.7
AT-06/coding/74,2018-03-12T22:02:56Z,False,5aa6f9186480fd5934fd6cce,"# [Codecov](https://codecov.io/gh/AT-06/coding/pull/74?src=pr&el=h1) Report
> Merging [#74](https://codecov.io/gh/AT-06/coding/pull/74?src=pr&el=desc) into [develop](https://codecov.io/gh/AT-06/coding/commit/19f5d2dd5b43e47d869e462f536c151719a7991f?src=pr&el=desc) will **decrease** coverage by `0.82%`.
> The diff coverage is `93.65%`.

[![Impacted file tree graph](https://codecov.io/gh/AT-06/coding/pull/74/graphs/tree.svg?token=HarFUtecDI&width=650&src=pr&height=150)](https://codecov.io/gh/AT-06/coding/pull/74?src=pr&el=tree)

```diff
@@              Coverage Diff              @@
##             develop      #74      +/-   ##
=============================================
- Coverage        100%   99.17%   -0.83%     
- Complexity       184      242      +58     
=============================================
  Files             46       59      +13     
  Lines            365      484     +119     
  Branches          53       67      +14     
=============================================
+ Hits             365      480     +115     
- Misses             0        1       +1     
- Partials           0        3       +3
```


| [Impacted Files](https://codecov.io/gh/AT-06/coding/pull/74?src=pr&el=tree) | Coverage Δ | Complexity Δ | |
|---|---|---|---|
| [...a/org/fundacionjala/coding/omar/movies/Rental.java](https://codecov.io/gh/AT-06/coding/pull/74/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvZnVuZGFjaW9uamFsYS9jb2Rpbmcvb21hci9tb3ZpZXMvUmVudGFsLmphdmE=) | `100% <100%> (ø)` | `5 <5> (?)` | |
| [...org/fundacionjala/coding/omar/movies/Customer.java](https://codecov.io/gh/AT-06/coding/pull/74/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvZnVuZGFjaW9uamFsYS9jb2Rpbmcvb21hci9tb3ZpZXMvQ3VzdG9tZXIuamF2YQ==) | `100% <100%> (ø)` | `8 <8> (?)` | |
| [...undacionjala/coding/omar/movies/AbstractMovie.java](https://codecov.io/gh/AT-06/coding/pull/74/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvZnVuZGFjaW9uamFsYS9jb2Rpbmcvb21hci9tb3ZpZXMvQWJzdHJhY3RNb3ZpZS5qYXZh) | `100% <100%> (ø)` | `2 <2> (?)` | |
| [...undacionjala/coding/omar/movies/MovieChildren.java](https://codecov.io/gh/AT-06/coding/pull/74/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvZnVuZGFjaW9uamFsYS9jb2Rpbmcvb21hci9tb3ZpZXMvTW92aWVDaGlsZHJlbi5qYXZh) | `75% <75%> (ø)` | `3 <3> (?)` | |
| [...org/fundacionjala/coding/omar/movies/MovieNew.java](https://codecov.io/gh/AT-06/coding/pull/74/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvZnVuZGFjaW9uamFsYS9jb2Rpbmcvb21hci9tb3ZpZXMvTW92aWVOZXcuamF2YQ==) | `83.33% <83.33%> (ø)` | `3 <3> (?)` | |
| [...fundacionjala/coding/omar/movies/MovieRegular.java](https://codecov.io/gh/AT-06/coding/pull/74/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvZnVuZGFjaW9uamFsYS9jb2Rpbmcvb21hci9tb3ZpZXMvTW92aWVSZWd1bGFyLmphdmE=) | `87.5% <87.5%> (ø)` | `3 <3> (?)` | |
| [...n/java/org/fundacionjala/coding/daniel/Kata10.java](https://codecov.io/gh/AT-06/coding/pull/74/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvZnVuZGFjaW9uamFsYS9jb2RpbmcvZGFuaWVsL0thdGExMC5qYXZh) | `100% <0%> (ø)` | `2% <0%> (?)` | |
| [...in/java/org/fundacionjala/coding/ariel/Katas2.java](https://codecov.io/gh/AT-06/coding/pull/74/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9vcmcvZnVuZGFjaW9uamFsYS9jb2RpbmcvYXJpZWwvS2F0YXMyLmphdmE=) | `100% <0%> (ø)` | `4% <0%> (?)` | |
| ... and [9 more](https://codecov.io/gh/AT-06/coding/pull/74/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/AT-06/coding/pull/74?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/AT-06/coding/pull/74?src=pr&el=footer). Last update [19f5d2d...25f80ae](https://codecov.io/gh/AT-06/coding/pull/74?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",True,False,12,8205.7
AT-06/coding/74,2018-03-12T23:15:14Z,False,5aa70a096480fd5d68eee4ea,"Instead of declaring static variables
you can declared as final in the method.",True,False,12,8205.7
AT-06/coding/74,2018-03-13T03:04:50Z,False,5aa73fd56480fd5b007ca8ec,"@omar-limbert 
Please increase the code coverage
",True,False,12,8205.7
Homebrew/brew/3720,2018-03-13T17:29:36Z,False,5aa80a8b6480fd5b57a80ea1,"Hi @MikeMcQuaid,

I saw you referenced this PR recently in another issue. Is there anything else you need on my end?

On a related note, I've been thinking about the way this currently works, and I think I made a silly assumption about the command's usage. With the current implementation, we require the cache be built with the `--rebuild` flag before cached usage (which is now the default behaviour).

For example, if you run `brew linkage package_name` before `brew linkage --rebuild package_name`, the output will be blank for the first run, since the cache has not been built.

Would it make more sense to use a `--cached` flag instead of a `--rebuild` flag, and have the default behaviour build the cache (which takes more time)? It would be a minor change on my end, but it would ensure users outside of the development team using the `dev` command wouldn't be surprised by this behaviour.",True,False,110,173514.51666666666
Homebrew/brew/3720,2018-03-14T09:22:42Z,False,5aa8e9ed6480fd56821a5b3d,"> I saw you referenced this PR recently in another issue. Is there anything else you need on my end?

Not right now; sorry feature PRs like this have to fit into my relatively limited free time for review. I haven't forgotten 😁.

> Would it make more sense to use a --cached flag instead of a --rebuild flag, and have the default behaviour build the cache (which takes more time)? It would be a minor change on my end, but it would ensure users outside of the development team using the dev command wouldn't be surprised by this behaviour.

Yes, that flag sounds like it makes sense. It may also be worth adopting the same behaviour if e.g. `ENV[""HOMEBREW_LINKAGE_CACHE""]` is truthy (not `nil`). 

Thanks again!",True,False,110,173514.51666666666
Marak_____faker.js_____616,2018-03-14T10:28:11Z,True,Marak_____faker.js_____616_____174911131,"- Spelling
- Latin american versions of the Spanish original surnames.
- Some portuguese variations
- ""Gollum"" is not an acceptable Spanish surname :)
- ""Franco"" was the last name of the Spanish dictator. We don't want a fake name such as ""Francisco Franco"" in the results...",True,True,2,283129.48333333334
mysqljs_____mysql_____1962,2018-03-14T12:00:25Z,True,mysqljs_____mysql_____1962_____174933169,"This patch accommodates some breaking changes introduced with MySQL 8.

Closes #1959 

In a nutshell, the `caching_sha2_password` plugin (which is used by default since MySQL 8.0.4) hashes the password using SHA-256 and, after a first successful authentication attempt, saves it in a cache. That first attempt needs to be done under one of two conditions. The client either uses SSL and sends the password as clear text or it encrypts the password using the RSA public key generated by the server. On any subsequent attempts, until the password is somehow removed from the cache or the server shuts down, these rules no longer apply.

The handshake process remains unchanged when connecting to any server with version lower or equal to `8.0.3`. Whereas for `8.0.4` or above, the process is now the following:

- the client sends a `ClientAuthenticationPacket` with a scramble computed using a SHA-256 hash
- if the password is not cached, the server sends back a `PerformFullAuthenticationPacket`
- if the client uses SSL, the password is sent to the server (as clear text) via a `ClearTextPasswordPacket` to which the server replies with a `OkPacket`
- otherwise it uses the server authentication public key compute the scramble, sending a `AuthSwitchResponsePacket` to which the server replies with a `OkPacket`
- if the client does not know the server public key (is not provided by the user), it requests it from the server, which sends it back using a `AuthMoreDataPacket`
- after a first successful authentication attempt, and until the password is cached, the server will reply to the initial `ClientAuthenticationPacket` with a `FastAuthSuccessPacket` (which basically just signals that an `OkPacket` will follow)

If the account is created using the `mysql_native_password` authentication plugin, the client will just fall back to the ""traditional"" process during the handshake, keeping compatibility, by default for any previously supported server version.

MySQL 8.0.2 disables the `local_infile` server variable by default, which breaks a couple of integration tests. The tests were updated to enable the feature by themselves (something that does not have any effect on older server versions and allows the tests to pass with newer versions).

Additionally, one of the integration tests was updated to avoid failing after the first run (using any server version) since it tried to create a table that already existed from the previous runs.",True,True,37,413793.7833333333
mysqljs_____mysql_____1962,2018-03-14T16:26:02Z,True,mysqljs_____mysql_____1962_____373085142,"This is awesome, thank you soo much! The only real issues I'm seeing with the PR to continue to work on is the following:

- [ ] Get support working on Node.js 0.10 and below, or we can decide if this PR should be shelved for the next major release as breaking change to drop those Node.js versions. Being a widely-used base driver we try to support as many Node.js and MySQL versions as possible at once to make it easy to use for everyone.
- [ ] There may not be enough coverage of the new code added, as the coverage with the PR is decreasing. There are probably some areas that can use tests.
- [ ] MySQL 8 image needs to be stood up on the CI server to test against. This is done in the `.travis.yml` file similar to our current MySQL / MariaDB matrix.",True,True,37,413793.7833333333
mysqljs_____mysql_____1962,2018-03-14T16:26:54Z,True,mysqljs_____mysql_____1962_____174522803,"Is this change related specifically to the MySQL 8 support, or just a general fix. Just curious.",True,True,37,413793.7833333333
mysqljs_____mysql_____1962,2018-03-14T18:54:51Z,True,mysqljs_____mysql_____1962_____174574477,"For the new authentication magic to happen in the server, we need to explicitly provide the authentication plugin name in the `ClientAuthenticationPacket`, and, doing that, we need to be careful of which flags to enable, otherwise the server will, for instance, interpret `caching_sha2_password` or `mysql_native_password` as the schema/database name, if none is provided.

I didn't want to mess around with the `PacketWriter` and this seemed the easiest way to overcome that hurdle. However, we can try to think of something else if it feels weird.",True,True,37,413793.7833333333
mysqljs_____mysql_____1962,2018-03-14T19:00:06Z,True,mysqljs_____mysql_____1962_____174576084,"Sure, but I was more curious on if this is a general fix or specific to MySQL 8. But even then, users can pass in their own `flags` list, and this module will enable / disable them unless it's listed here with a flag to force one way or the other. If having it set when it shouldn't is an issue, then it should probably be flagged here so the users cannot pass in the flag and get it set when no db is specified.",True,True,37,413793.7833333333
mysqljs_____mysql_____1962,2018-03-14T19:06:39Z,True,mysqljs_____mysql_____1962_____373139995,"To address your points.

Regarding the first one, I've missed those tests (sorry), but as far as I can tell there is no sane way to use RSA public key encryption on `node <=v0.12.0`. There are some packages on npm that try to add support through native addons, but I think that might not be a good idea here, since it's pure JavaScript. So the only easy way to work around that is to require users on those older `node` versions to use SSL when connecting to new MySQL versions. If you are OK with that, we can go that route, otherwise, going in the next major version is probably the best possibility (I guess that's mostly your call).

Missed the coverage as well, I'll try to fix that ASAP.

Again, missed the CI config. Should be fine, at least on Travis. However, besides that, I suggest we also create a test account to run the tests (besides `root`) to make sure the handshake works fine for both empty and non-empty passwords, which lead to different behaviors. Any issue with that? Other than that, I guess on windows we are out of luck anyway since appveyor only seems to support MySQL 5.7, correct?",True,True,37,413793.7833333333
mysqljs_____mysql_____1962,2018-03-14T19:49:10Z,True,mysqljs_____mysql_____1962_____174589168,"Actually, maybe this specific change is not required after all. The schema name is a null terminated string, so it should not cause that issue I mentioned. This is sort of a leftover from my earlier experiments. I'll try to work around this and update the patch.

Good catch!",True,True,37,413793.7833333333
mysqljs_____mysql_____1962,2018-03-15T02:36:28Z,True,mysqljs_____mysql_____1962_____373241016,"> Regarding the first one, I've missed those tests (sorry), but as far as I can tell there is no sane way to use RSA public key encryption on node <=v0.12.0. There are some packages on npm that try to add support through native addons, but I think that might not be a good idea here, since it's pure JavaScript. So the only easy way to work around that is to require users on those older node versions to use SSL when connecting to new MySQL versions. If you are OK with that, we can go that route, otherwise, going in the next major version is probably the best possibility (I guess that's mostly your call).

Ah, very sad :( Did you do a through search on this (it sounds like it)? Because I can always help if you want to focus on the other parts, but just asking before I duplicate the search for no reason. If we really have to drop supported versions, we can, and it wouldn't particularly delay this, just wanted to make sure it was actually required to do so before saying we should :)

> Again, missed the CI config. Should be fine, at least on Travis. However, besides that, I suggest we also create a test account to run the tests (besides root) to make sure the handshake works fine for both empty and non-empty passwords, which lead to different behaviors. Any issue with that? Other than that, I guess on windows we are out of luck anyway since appveyor only seems to support MySQL 5.7, correct?

Yea, so in Travis CI it just uses a Docker image. You can make multiple non-root accounts too; the current setup was just what was needed for testing, so if MySQL 8 requires more elaborate setup, that sounds fine to me. I would ignore AppVeyor.",True,True,37,413793.7833333333
mysqljs_____mysql_____1962,2018-03-15T15:44:57Z,True,mysqljs_____mysql_____1962_____373422784,"I'm using `crypto.publicEncrypt()` which was added in `v0.11.14`, and it uses native bindings which I assume were also added around that time. There are some libraries on npm (e.g. [ursa](https://github.com/JoshKaufman/ursa) and [dcrypt](https://github.com/dekz/dcrypt)) that claim support for earlier node versions, however they seem to implement their own native bindings, which I guess would, sort of, defeat the purpose of this module (or maybe not, you tell me). 

There's this [node-rsa](https://github.com/rzcoder/node-rsa) thingy which apparently is pure JS, but I couldn't make it work and it's pretty slow. I've also seen other [approaches](https://github.com/ragnar-johannsson/rsautl) like delegating work to openssl via a child process, but that's probably not a good idea either, since it introduces a huge moving part. There's also this [forge](https://github.com/digitalbazaar/forge) kit which brings the entire browser kitchen sink with it and I also haven't managed to figure out how it worked.

So, no good news from my side. However, if you can do your own research, that would, of course, be great. However, I'm not a cryptography expert, but from what I can tell, the reason I have not found anything good is because this RSA thingy in pure JavaScript is still not really feasible (`number` precision, primes and what not).

My suggestion here is to fail with a client error (the `HANDSHAKE_SECURE_TRANSPORT_REQUIRED` introduced by this PR) when `process.env.version` tells us that we are below `v0.11.14`, which basically would be the default behavior using `{ ssl: false, secureAuth: false }`. It's a pretty naive solution but at least it's not really a breaking change, because existing implementations will keep working as expected with MySQL 5.7 and, let's be honest, people wo don't upgrade from those ancient node versions will, almost for sure, not upgrade MySQL to series 8 as well.

However, if you still feel you are better off bumping the major version, that's fine.
",True,True,37,413793.7833333333
AT-06/coding/74,2018-03-17T06:41:11Z,False,5aacb88f6480fd5d68f205f5,"![CRITICAL](https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL') Define a constant instead of duplicating this literal ""The Minions"" 3 times. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonarcloud.io/coding_rules#rule_key=squid%3AS1192)
",True,False,12,8205.7
AT-06/coding/74,2018-03-17T06:41:11Z,False,5aacb8896480fd566be432c3,"![MINOR](https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR') Cast one of the operands of this multiplication operation to a ""double"". [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonarcloud.io/coding_rules#rule_key=squid%3AS2184)
",True,False,12,8205.7
AT-06/coding/74,2018-03-17T06:41:12Z,False,5aacb88f6480fd5cfca5d93c,"SonarQube analysis reported 2 issues
* ![CRITICAL][CRITICAL] 1 critical
* ![MINOR][MINOR] 1 minor

Watch the comments in this conversation to review them.

[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",True,False,12,8205.7
AT-06/coding/74,2018-03-17T22:57:50Z,False,5aae10f36480fd0cc68cb858,LGTM!,True,False,12,8205.7
ldez/atom-grammar-live-reload/5,2018-03-18T18:39:05Z,False,5aaeb29b6480fd0f851e7fd6,extract the function,True,False,18,39172.53333333333
ldez/atom-grammar-live-reload/5,2018-03-18T18:39:09Z,False,5aaeb29b6480fd0ba1d31621,extract the function,True,False,18,39172.53333333333
ldez/atom-grammar-live-reload/5,2018-03-18T18:39:43Z,False,5aaeb29e6480fd0c99ebc734,"```coffee
 packPath = if stats.isSymbolicLink then fs.realpathSync pack.path else pack.path
```",True,False,18,39172.53333333333
ldez/atom-grammar-live-reload/5,2018-03-18T18:40:10Z,False,5aaeb29c6480fd0cc68d2c38,I don't agree with this change,True,False,18,39172.53333333333
ldez/atom-grammar-live-reload/5,2018-03-18T18:42:30Z,False,5aaeb31f6480fd0f30c5d75b,"It's not used outside that scope, though. It's better to keep it close to where it is used, because minor perf improvements to config changes are not a necessity.",True,False,18,39172.53333333333
ldez/atom-grammar-live-reload/5,2018-03-18T18:43:12Z,False,5aaeb3566480fd12a09b5d77,👍 ,True,False,18,39172.53333333333
ldez/atom-grammar-live-reload/5,2018-03-18T18:44:38Z,False,5aaeb39d6480fd1178172627,"Your assumption about `getPackageNameByFilePath` and symlink is false.
On Linux, `pack.path` contains symlink (`apm link -d`).
",True,False,18,39172.53333333333
ldez/atom-grammar-live-reload/5,2018-03-18T18:46:17Z,False,5aaeb3fd6480fd0c70ff0a09,"It's a nitpick either way, so you get precedence here.

I'll change it back to a `for` loop, but the `do (editor) ->` part is unnecessary.",True,False,18,39172.53333333333
ldez/atom-grammar-live-reload/5,2018-03-18T18:51:36Z,False,5aaeb53a6480fd0bb73b21bd,"> Your assumption about getPackageNameByFilePath and symlink is false.

Good to know, thanks!

Doesn't `rootPath` need to be resolved, too? If `Package` paths are not always the real path, can we really assume the `TextBuffer` path is the real path?",True,False,18,39172.53333333333
ldez/atom-grammar-live-reload/5,2018-03-18T19:09:17Z,False,5aaeb9626480fd0cf70103b7,"`isSymbolicLink` is a function, not a boolean",True,False,18,39172.53333333333
ldez/atom-grammar-live-reload/5,2018-03-18T19:13:58Z,False,5aaeba7d6480fd0f851e836e,please extract the functions,True,False,18,39172.53333333333
ldez/atom-grammar-live-reload/5,2018-03-18T19:15:18Z,False,5aaebacd6480fd12e9f79035,"It's not used outside that scope. Isn't it better to keep it close to where it is used, since minor perf improvements to config changes are not a necessity?",True,False,18,39172.53333333333
ldez/atom-grammar-live-reload/5,2018-03-18T19:16:02Z,False,5aaebaf56480fd0fcfd88abb,"please do commits instead of amend/rebase, it's more easy to review the changes.",True,False,18,39172.53333333333
ldez/atom-grammar-live-reload/5,2018-03-18T19:17:02Z,False,5aaebb346480fd0d9709c3fa,please extract the functions.,True,False,18,39172.53333333333
ldez/atom-grammar-live-reload/5,2018-03-18T19:18:52Z,False,5aaebb9d6480fd0d2a9fa616,"ok sorry

- The `grammarRE` string now has its `/` chars properly escaped
- Switched back to `for` loop for `getTextEditors()`
- Added `resolveSymlink`",True,False,18,39172.53333333333
ldez/atom-grammar-live-reload/5,2018-03-18T19:26:11Z,False,5aaebd556480fd0ba1d31acf,I will squash before merge,True,False,18,39172.53333333333
citizenfx_____fivem_____98,2018-03-18T20:02:09Z,True,citizenfx_____fivem_____98_____374039723,Grow up and merge this PR,True,True,22,50031.433333333334
citizenfx_____fivem_____98,2018-03-18T20:05:20Z,True,citizenfx_____fivem_____98_____374039930,grow down and keep this pr open!,True,True,22,50031.433333333334
citizenfx_____fivem_____98,2018-03-18T22:00:13Z,True,citizenfx_____fivem_____98_____374054351,But it's already closed blu!,True,True,22,50031.433333333334
citizenfx_____fivem_____98,2018-03-18T22:01:41Z,True,citizenfx_____fivem_____98_____374054614,the memes have to die eventually. it was great while it lasted.,True,True,22,50031.433333333334
citizenfx_____fivem_____98,2018-03-18T22:02:28Z,True,citizenfx_____fivem_____98_____374054726,This meme **has** to live on >:( .,True,True,22,50031.433333333334
citizenfx_____fivem_____98,2018-03-18T22:03:47Z,True,citizenfx_____fivem_____98_____374054906,[Let it die](https://www.youtube.com/watch?v=gWL90wryyOw),True,True,22,50031.433333333334
citizenfx_____fivem_____98,2018-03-18T22:04:20Z,True,citizenfx_____fivem_____98_____374054969,**N O**,True,True,22,50031.433333333334
citizenfx_____fivem_____98,2018-03-18T22:13:15Z,True,citizenfx_____fivem_____98_____374056212,Re-open!,True,True,22,50031.433333333334
citizenfx_____fivem_____98,2018-03-18T22:18:56Z,True,citizenfx_____fivem_____98_____374057076,"🙄 build your own fork if you want it changed, this pr was closed for a reason.",True,True,22,50031.433333333334
citizenfx_____fivem_____98,2018-03-18T22:22:59Z,True,citizenfx_____fivem_____98_____374057649,This should be locked by @blattersturm,True,True,22,50031.433333333334
citizenfx_____fivem_____98,2018-03-18T22:26:06Z,True,citizenfx_____fivem_____98_____374058069,Well merge this PR when you've grown a pair.. while you're at it get a better humor,True,True,22,50031.433333333334
citizenfx_____fivem_____98,2018-03-18T22:28:27Z,True,citizenfx_____fivem_____98_____374058378,"When you'll not be so retarded anymore, then i am sure the elements will be able to at least take it into consideration. I don't see what changing that text would add, apart from removing an historical signature, that has been included with fivem since the beginning.",True,True,22,50031.433333333334
citizenfx_____fivem_____98,2018-03-18T22:33:46Z,True,citizenfx_____fivem_____98_____374059177,Just because somethings existed for a long time doesn't make it right. New users probably see that error and have no clue what's happened. Usability vs Nostalgia?,True,True,22,50031.433333333334
citizenfx_____fivem_____98,2018-03-18T22:37:53Z,True,citizenfx_____fivem_____98_____374059739,"It's also in the english locale, meaning that it should be *english*. You could always changed it back in this location: `\FiveM.app\citizen\ui\app\assets\locale-en.json`",True,True,22,50031.433333333334
citizenfx_____fivem_____98,2018-03-18T22:38:22Z,True,citizenfx_____fivem_____98_____374059828,"Mmh, weird, i've always seen a detailed description of what happened right after that word, must've been my mind playing tricks on me!",True,True,22,50031.433333333334
citizenfx_____fivem_____98,2018-03-18T22:43:36Z,True,citizenfx_____fivem_____98_____374060428,"Well, yeah, anyway, you can keep trying and writing stupid comments or you could just go back to your lives, up to you, but trust me, you dont wanna see an angry element coming your way.",True,True,22,50031.433333333334
liquid-state/ls-ui-kit/16,2018-03-18T23:00:48Z,False,5aaeefa86480fd0d2a9fbca4,"This component is too complex for the changes required.

Please instead create a component (Called Rate) which does the following:
* Accepts a prop called mobile, and passes all other props onto the Rate component from ant.
* Sets the ls-ui-kit class and if mobile = true then also set mobile as a class. Making sure to use classnames and to pass along any className which comes from props.
* Sets the font size of .ls-ui-kit.mobile .ant-rate-star to a variable called 'ls-mobile-rate-font-size';

Please also rebase this onto our master as I have added linting rules, and will not accept any pull requests where running ""yarn run lint:fix"" returns errors.

Thank you :)

Chris Hopkins",True,False,9,4615.466666666666
liquid-state/ls-ui-kit/16,2018-03-19T04:05:48Z,False,5aaf38a16480fd0efa594ed5,"Please remove state, this is not needed inside this component. The value will be passed through props.",True,False,9,4615.466666666666
liquid-state/ls-ui-kit/16,2018-03-19T04:07:56Z,False,5aaf38a16480fd0c49e9485d,"As above the value should come from props.

You should extract `mobile` and `className` from this.props, and pass all other props to <Rate {...props}.

className should be `classnames('ls-ui-kit', className, { mobile })`;",True,False,9,4615.466666666666
liquid-state/ls-ui-kit/16,2018-03-19T04:09:31Z,False,5ab329736480fd1d4930d4d4,"Remove div, and span (the user should use this component as it is documented in the ant docs which means the text should not be included here).

Remove onChange and value, these should come from the parent as {...props}

This component should be `return <Rate className={className} {...props} />`",True,False,9,4615.466666666666
liquid-state/ls-ui-kit/16,2018-03-19T04:09:51Z,False,5aaf38a16480fd1064f9815c,Remove handleChange,True,False,9,4615.466666666666
liquid-state/ls-ui-kit/16,2018-03-19T04:10:59Z,False,5aaf38a16480fd0dca4f59b4,"The only style here should  be setting the font size of ant-rate-star when the rate component has the .ls-ui-kit and .mobile classes.

All other styles should be removed.",True,False,9,4615.466666666666
liquid-state/ls-ui-kit/16,2018-03-19T04:11:26Z,False,5aaf38a16480fd0f30c60e1b,Remove all variables other than `ls-rate-font-size`,True,False,9,4615.466666666666
Homebrew/brew/3720,2018-03-19T11:20:19Z,False,5aaf9d416480fd200c65a270,@AndrewMcBurney If you haven't already considered applying to GSoC this summer: you should: https://developers.google.com/open-source/gsoc/timeline https://github.com/Homebrew/gsoc,True,False,110,173514.51666666666
citizenfx_____fivem_____98,2018-03-19T14:57:33Z,True,citizenfx_____fivem_____98_____374241765,@vecchiotom who the fuck do you think you are. I hope you stand up to similar situations irl,True,True,22,50031.433333333334
citizenfx_____fivem_____98,2018-03-19T15:03:04Z,True,citizenfx_____fivem_____98_____374243820,"@ElPumpo What the fuck did you just fucking say about me, you little shit? Ill have you know I graduated top of my class in the Navy Seals, and Ive been involved in numerous secret raids on Al-Quaeda, and I have over 300 confirmed kills. I am trained in gorilla warfare and Im the top sniper in the entire US armed forces. You are nothing to me but just another target. I will wipe you the fuck out with precision the likes of which has never been seen before on this Earth, mark my fucking words. You think you can get away with saying that shit to me over the Internet? Think again, fucker. As we speak I am contacting my secret network of spies across the USA and your IP is being traced right now so you better prepare for the storm, maggot. The storm that wipes out the pathetic little thing you call your life. Youre fucking dead, kid. I can be anywhere, anytime, and I can kill you in over seven hundred ways, and thats just with my bare hands. Not only am I extensively trained in unarmed combat, but I have access to the entire arsenal of the United States Marine Corps and I will use it to its full extent to wipe your miserable ass off the face of the continent, you little shit. If only you could have known what unholy retribution your little clever comment was about to bring down upon you, maybe you would have held your fucking tongue. But you couldnt, you didnt, and now youre paying the price, you goddamn idiot. I will shit fury all over you and you will drown in it. Youre fucking dead, kiddo.",True,True,22,50031.433333333334
Zoapp/front/42,2018-03-19T15:03:53Z,False,5aafd15e6480fd21b23db83f,"if that works well, we should consider adding it on other projects too.",True,False,1,0.0
ldez/atom-grammar-live-reload/5,2018-03-19T18:22:09Z,False,5aafffd56480fd1d492f00e4,I think I've squashed all the bugs. Let me know when to squash the commits. 🙂,True,False,18,39172.53333333333
rust-lang-nursery/rust-clippy/2558,2018-03-20T18:57:10Z,False,5ab1598e6480fd212abaa8dc,"This should only be merged after the feature is stabilized and `![feature(duration_extras)]` can be removed from the test.

Also, it doesn't handle the case where the divisor is a constant.",True,False,4,116011.7
liquid-state/ls-ui-kit/16,2018-03-21T00:00:23Z,False,5ab1a0a56480fd1cf69dfe7d,"Hi,

Thanks for this work, it is much better!

Just one final thing, as with the Checkbox and Radio components please remove the Button component, and then I will merge this.

Chris Hopkins.",True,False,9,4615.466666666666
liquid-state/ls-ui-kit/16,2018-03-22T03:56:16Z,False,5ab329636480fd1cb9befca3,"This is good!

Thank you!",True,False,9,4615.466666666666
jruby/jruby/5113,2018-03-26T18:46:55Z,False,5ab9409b6480fd215b880c57,Thanks!,True,False,1,0.0
bower_____bower_____1748,2018-03-28T14:10:32Z,True,bower_____bower_____1748_____376900730,Bower is depreacted now and we recommend switching to Yarn that supports version locking and more. Here's guide how to migrate: https://bower.io/blog/2017/how-to-migrate-away-from-bower/,True,True,89,1588333.85
KSP-KOS_____KOS_____2260,2018-03-29T20:16:53Z,True,KSP-KOS_____KOS_____2260_____178430499,"Already fixes #2121 (or I hope so) as much as is currently possible, before we select the proper way of handling the booting from archive. Contains all previous PR's yet to be accepted and the crutial changes I needed for the tester, namely:

**CPU.cs:**
1. `private` -> `protected`
2. Few methods made `virtual`
3. Triggers cannot be casted to `NoDelegate`, that code did nothing, 
changed to `trigger.EntryPoint < 0`.
4. No real change in logic (except that `NoDelegate` above).
5. Oh, and I changed the implementation of `Dispose` to the form suggested by MS.

**Stack.cs, IStack.cs and PseudoNull.cs:**
- these are all helpers that I needed, nothing too important, no change in logic

***Now for the booting:***
1. We can either change the `run ...` command in injected *boot the boot script* to include something like `wait until homeConnection:isConnected.`, which looks easy, but that would require changing/removing `Processor.CheckCanBoot()` and probably replacing it with something like *give me the boot the boot script* instead, if you want to preserve the interface (I will address that later).
2. Create new form of `YieldFinishedCompile`, e.g. `YieldCanBoot` (or combination of both), that will be waiting until we can really boot. I don't think I am able to create such a thing with my current knowledge of the kOS.

**Notes:**
I would personally remove `IStack` becase there is only one class implementing it and I see no need for it, no vision for any other class implementing it.
I would also remove `ICpu`, because there are only two implementations - the real one and the one in tests, but the former can be created the same way as my `TesterCPU` by subclassing the `CPU` in this PR. It would probably be even better because it is much closer to the original.",True,True,36,458822.06666666665
KSP-KOS_____KOS_____2260,2018-03-29T21:39:40Z,True,KSP-KOS_____KOS_____2260_____377380800,"I'm going to stat taking a look at this since it is related to something I've started working on.

For future pull requests (no need to make a change to the ones you have pending) if you could try to keep them as independent as possible, it really makes it easier to review.  For one thing shorter lists of changes are easier to review.  But more importantly the same person might not be reviewing all of your pull requests, and so it may be held up waiting for review of the other portions.  (I know that specifically in this case keeping the .editorconfig changes is useful).",True,True,36,458822.06666666665
KSP-KOS_____KOS_____2260,2018-03-29T22:59:49Z,True,KSP-KOS_____KOS_____2260_____377397864,"I know what you are talking about but as you noticed, I won't separate until you accept the `.editorconfig` ... or you will have to repair the tabs. I have the commits nicely separated, use this for review.

The other thing is that I want my version (with all changes), but I can separate it and merge to my main **if you accept the `.editorconfig`**.",True,True,36,458822.06666666665
KSP-KOS_____KOS_____2260,2018-03-30T05:36:41Z,True,KSP-KOS_____KOS_____2260_____178235494,I never liked ``yield return``.  It requires too much magic collusion between the compiler (``yield`` being a keyword) and .NET (``System.Collections.Generic.IEnumerable``).,True,True,36,458822.06666666665
KSP-KOS_____KOS_____2260,2018-03-30T06:12:15Z,True,KSP-KOS_____KOS_____2260_____178238257,"Also, @firda-cze , I looked through this PR's full list of changed files and I'm not seeing where you use these new ``IEnumerable``s that you added to ``Stack.cs``.  You said you had them in here because you needed to use them elsewhere but where are you using them?",True,True,36,458822.06666666665
KSP-KOS_____KOS_____2260,2018-03-30T07:50:29Z,True,KSP-KOS_____KOS_____2260_____178248570,"Well, you can create full blown enumerator, but this is just easier. You write the main loop and `yield return` elements that you can consume through `foreach` later, a bit like async, but without a thread. Co-routines in unity are implemented the same way and they actually use it in thread-like (fiber) fashion.

See https://github.com/firda-cze/KOS/blob/firda/src/kOS.Tester/TesterCPU.cs for the reason I added these. Definitelly using `Arguments`, wanted to use `ArgumentsFromBottom` for checking what has changed, before I understood the argument order reversing in call. I did not create view for `Scopes` yet, but will need that too.

Here #2247 are pictures from the tester.",True,True,36,458822.06666666665
KSP-KOS_____KOS_____2260,2018-03-30T08:32:14Z,True,KSP-KOS_____KOS_____2260_____178254360,"Well, I disagree with it being easier, but that's a matter of opinion.  (In trying to find the sweet spot between being hard because it's too terse versus being hard because it's too verbose, my opinion is that the C# culture errs on the side of being too terse.  The C# community loves syntactic sugar a lot more than I do.)

I understand how much of a PITA it is to keep things separate in one PR that you're using in another PR when neither is merged yet.  @hvacengi is dealing with this particular merge so I'll defer to him to decide how to handle it.

By the way, is that tester something you plan to release?  Is it an independent executable or something that you invoke inside KSP's process?",True,True,36,458822.06666666665
KSP-KOS_____KOS_____2260,2018-03-30T09:17:27Z,True,KSP-KOS_____KOS_____2260_____178260870,"It is independent exe, only referencing the Safe.dll, feel free to take it any time, open-source, free to use, but it is not yet ready, it lacks the scopes.
But it can already step individual instructions, show opcodes, all jumps/calls, stack, output, log, all the tests and helped me a lot in understanding what is going on under the hood.
Basic WinForms, so, should be portable to Linux and Mac as well. Want [Eto](https://github.com/picoe/Eto) or Xamarin.Forms instead?",True,True,36,458822.06666666665
KSP-KOS_____KOS_____2260,2018-03-30T09:21:16Z,True,KSP-KOS_____KOS_____2260_____178261412,I'm not well versed enough in C# development (I only learned C# specifically for kOS.  I come from the Java/C++ world on Unix mostly) to answer that question.  I don't really know the difference between the GUI options you mentioned.,True,True,36,458822.06666666665
KSP-KOS_____KOS_____2260,2018-03-30T09:23:10Z,True,KSP-KOS_____KOS_____2260_____178261684,"P.S.: Would you prefer [ReadOnlyCollection](https://msdn.microsoft.com/en-us/library/ms132474(v=vs.110).aspx) or something similar instead? Like `Keys` and `Values` in `Dictionary`. The draw-back is that you have to keep it around in a field (for the sake of speed, or make it struct which I don't like much), but that is acceptable.",True,True,36,458822.06666666665
KSP-KOS_____KOS_____2260,2018-03-30T09:35:39Z,True,KSP-KOS_____KOS_____2260_____178263413,"I have heard that one of the major speedups they did in one of the KSP versions was that they went through and replaced many of their `foreach` iterator-based loops with traditional old-school index-counting `for` loops because Mono's iterator implementation was much slower than just getting items by index (A problem specific to Mono's implementation that Unity uses to be cross-platform, not Microsoft's .NET).  That's part of the reason I never had much incentive to want to make an iterator-based wrapper around the stack access.",True,True,36,458822.06666666665
KSP-KOS_____KOS_____2260,2018-03-30T09:40:10Z,True,KSP-KOS_____KOS_____2260_____178264084,"Nothing against arrays and indexes, but that would require merging the stack into the CPU, so that derived classes (TesterCPU) can access it. Should not be exposed publicly, that is why I added this read-only interface for it.",True,True,36,458822.06666666665
KSP-KOS_____KOS_____2260,2018-03-30T09:47:53Z,True,KSP-KOS_____KOS_____2260_____178265194,"Foreach was fixed in Unity 5.5:
https://unity3d.com/learn/tutorials/topics/performance-optimization/optimizing-garbage-collection-unity-games",True,True,36,458822.06666666665
KSP-KOS_____KOS_____2260,2018-03-30T09:51:37Z,True,KSP-KOS_____KOS_____2260_____178265750,"To be honest, I never really understood why the heck in Marianoapp's original implementation, the stack has private protections against the CPU.  All that did is make me have to add a ton of dependency inversion interfaces between the two, when really the CPU class should have full permissions to do whatever it likes to the stack.  The only real reason I can see to protect the stack would be to deliberately bottleneck the access through a few key APIs, but those APIs really should allow all access and all major operations.",True,True,36,458822.06666666665
KSP-KOS_____KOS_____2260,2018-03-30T13:28:05Z,True,KSP-KOS_____KOS_____2260_____377524015,"Not tested with RemoteTech, I never used that mod, I don't even know how it works.
Resolved my problems with booting from archive, everything works now.
Selected the option with YieldFinished - created YieldFinishedCompileBoot for this.
fix #2259 ",True,True,36,458822.06666666665
KSP-KOS_____KOS_____2260,2018-03-30T15:38:15Z,True,KSP-KOS_____KOS_____2260_____377551902,"Separated as requested, sorry for the mess, had to use push force.",True,True,36,458822.06666666665
getgrav/grav-plugin-admin/1405,2018-04-02T16:17:44Z,False,5ac257ae6480fd2321977796,"I like this idea, but a `UserLoginEvent` object should be passed like the `onUserLogin` event in login plugin

```
            $event = new UserLoginEvent($event->toArray());
            $grav->fireEvent('onUserLogin', $event);
```

This will give access to data that could prove very useful for any plugin wanting to take advantage of the `onAdminLogin` event.",True,False,3,61997.433333333334
getgrav/grav-plugin-admin/1405,2018-04-02T19:28:44Z,False,5ac284726480fd1fc0efc838,"i tried adding what you mentioned, and importing the userloginevent but i still dont know what do and the error on `$event->toArray()`",True,False,3,61997.433333333334
kubernetes/charts/4669,2018-04-04T02:20:37Z,False,5ac436766480fd1efabce633,"[APPROVALNOTIFIER] This PR is **NOT APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/charts/pull/4669#"" title=""Author self-approved"">jonyhy96</a>*
To fully approve this pull request, please assign additional approvers.
We suggest the following additional approver: **seanknox**

Assign the PR to them by writing `/assign @seanknox` in a comment when ready.

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details open>
Needs approval from an approver in each of these files:

- **[OWNERS](https://github.com/kubernetes/charts/blob/master/OWNERS)**

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[""seanknox""]} -->",True,False,22,5717.633333333333
kubernetes/charts/4669,2018-04-04T02:20:39Z,False,5ac436806480fd20ea786bf3,"Hi @jonyhy96. Thanks for your PR.

I'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.

I understand the commands that are listed [here](https://go.k8s.io/bot-commands).

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/devel/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>
",True,False,22,5717.633333333333
kubernetes/charts/4669,2018-04-04T02:20:48Z,False,5ac436876480fd200c702743,/assign @seanknox,True,False,22,5717.633333333333
kubernetes/charts/4669,2018-04-04T07:46:22Z,False,5ac482d46480fd209b25c4be,"/ok-to-test
/lgtm",True,False,22,5717.633333333333
kubernetes/charts/4669,2018-04-04T07:46:27Z,False,5ac482dd6480fd1c702425e8,"[APPROVALNOTIFIER] This PR is **NOT APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/charts/pull/4669#"" title=""Author self-approved"">jonyhy96</a>*, *<a href=""https://github.com/kubernetes/charts/pull/4669#issuecomment-378511302"" title=""LGTM"">timstoop</a>*
To fully approve this pull request, please assign additional approvers.
We suggest the following additional approver: **seanknox**

Assign the PR to them by writing `/assign @seanknox` in a comment when ready.

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details open>
Needs approval from an approver in each of these files:

- **[OWNERS](https://github.com/kubernetes/charts/blob/master/OWNERS)**

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[""seanknox""]} -->",True,False,22,5717.633333333333
kubernetes/charts/4669,2018-04-04T07:57:51Z,False,5ac485866480fd1c1b112cfe,"@jonyhy96: The following test **failed**, say `/retest` to rerun them all:

Test name | Commit | Details | Rerun command
--- | --- | --- | ---
pull-charts-e2e | 4fbc20a61c4f15d3bf539693998604ac817af6d3 | [link](https://k8s-gubernator.appspot.com/build/kubernetes-jenkins/pr-logs/pull/charts/4669/pull-charts-e2e/7687/) | `/test pull-charts-e2e`

[Full PR test history](https://k8s-gubernator.appspot.com/pr/charts/4669). [Your PR dashboard](https://k8s-gubernator.appspot.com/pr/jonyhy96). Please help us cut down on flakes by [linking to](https://git.k8s.io/community/contributors/devel/flaky-tests.md#filing-issues-for-flaky-tests) an [open issue](https://github.com/kubernetes/charts/issues?q=is:issue+is:open) when you hit one in your PR.

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/devel/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository. I understand the commands that are listed [here](https://go.k8s.io/bot-commands).
</details>
<!-- test report -->",True,False,22,5717.633333333333
kubernetes/charts/4669,2018-04-04T09:47:51Z,False,5ac49f4f6480fd21b2483516,/test pull-charts-e2e,True,False,22,5717.633333333333
kubernetes/charts/4669,2018-04-04T09:59:52Z,False,5ac4a21c6480fd22605a69ce,"@jonyhy96: The following test **failed**, say `/retest` to rerun them all:

Test name | Commit | Details | Rerun command
--- | --- | --- | ---
pull-charts-e2e | 4fbc20a61c4f15d3bf539693998604ac817af6d3 | [link](https://k8s-gubernator.appspot.com/build/kubernetes-jenkins/pr-logs/pull/charts/4669/pull-charts-e2e/7719/) | `/test pull-charts-e2e`

[Full PR test history](https://k8s-gubernator.appspot.com/pr/charts/4669). [Your PR dashboard](https://k8s-gubernator.appspot.com/pr/jonyhy96). Please help us cut down on flakes by [linking to](https://git.k8s.io/community/contributors/devel/flaky-tests.md#filing-issues-for-flaky-tests) an [open issue](https://github.com/kubernetes/charts/issues?q=is:issue+is:open) when you hit one in your PR.

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/devel/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository. I understand the commands that are listed [here](https://go.k8s.io/bot-commands).
</details>
<!-- test report -->",True,False,22,5717.633333333333
kubernetes/charts/4669,2018-04-04T10:21:13Z,False,5ac4a7226480fd21b2483a0e,New changes are detected. LGTM label has been removed.,True,False,22,5717.633333333333
kubernetes/charts/4669,2018-04-04T10:23:51Z,False,5ac4a7bb6480fd1d49395cee,"@jonyhy96: The following test **failed**, say `/retest` to rerun them all:

Test name | Commit | Details | Rerun command
--- | --- | --- | ---
pull-charts-e2e | 4aae93cd3b55c6c0f51cbb0300d742245e995ddd | [link](https://k8s-gubernator.appspot.com/build/kubernetes-jenkins/pr-logs/pull/charts/4669/pull-charts-e2e/7722/) | `/test pull-charts-e2e`

[Full PR test history](https://k8s-gubernator.appspot.com/pr/charts/4669). [Your PR dashboard](https://k8s-gubernator.appspot.com/pr/jonyhy96). Please help us cut down on flakes by [linking to](https://git.k8s.io/community/contributors/devel/flaky-tests.md#filing-issues-for-flaky-tests) an [open issue](https://github.com/kubernetes/charts/issues?q=is:issue+is:open) when you hit one in your PR.

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/devel/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository. I understand the commands that are listed [here](https://go.k8s.io/bot-commands).
</details>
<!-- test report -->",True,False,22,5717.633333333333
kubernetes/charts/4669,2018-04-04T10:27:52Z,False,5ac4a8b56480fd22605a6d81,/test pull-charts-e2e,True,False,22,5717.633333333333
kubernetes/charts/4669,2018-04-04T10:30:51Z,False,5ac4a95f6480fd2040fa9ca5,"@jonyhy96: The following test **failed**, say `/retest` to rerun them all:

Test name | Commit | Details | Rerun command
--- | --- | --- | ---
pull-charts-e2e | 4aae93cd3b55c6c0f51cbb0300d742245e995ddd | [link](https://k8s-gubernator.appspot.com/build/kubernetes-jenkins/pr-logs/pull/charts/4669/pull-charts-e2e/7724/) | `/test pull-charts-e2e`

[Full PR test history](https://k8s-gubernator.appspot.com/pr/charts/4669). [Your PR dashboard](https://k8s-gubernator.appspot.com/pr/jonyhy96). Please help us cut down on flakes by [linking to](https://git.k8s.io/community/contributors/devel/flaky-tests.md#filing-issues-for-flaky-tests) an [open issue](https://github.com/kubernetes/charts/issues?q=is:issue+is:open) when you hit one in your PR.

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/devel/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository. I understand the commands that are listed [here](https://go.k8s.io/bot-commands).
</details>
<!-- test report -->",True,False,22,5717.633333333333
kubernetes/charts/4669,2018-04-04T10:50:24Z,False,5ac4adf76480fd1e07ccd22d,"@jonyhy96: The following test **failed**, say `/retest` to rerun them all:

Test name | Commit | Details | Rerun command
--- | --- | --- | ---
pull-charts-e2e | e9661bedb976ce75b7a8d76649e0ec80632930cf | [link](https://k8s-gubernator.appspot.com/build/kubernetes-jenkins/pr-logs/pull/charts/4669/pull-charts-e2e/7726/) | `/test pull-charts-e2e`

[Full PR test history](https://k8s-gubernator.appspot.com/pr/charts/4669). [Your PR dashboard](https://k8s-gubernator.appspot.com/pr/jonyhy96). Please help us cut down on flakes by [linking to](https://git.k8s.io/community/contributors/devel/flaky-tests.md#filing-issues-for-flaky-tests) an [open issue](https://github.com/kubernetes/charts/issues?q=is:issue+is:open) when you hit one in your PR.

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/devel/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository. I understand the commands that are listed [here](https://go.k8s.io/bot-commands).
</details>
<!-- test report -->",True,False,22,5717.633333333333
kubernetes/charts/4669,2018-04-04T14:05:53Z,False,5ac4dbc56480fd22605a8d30,"@jonyhy96: The following test **failed**, say `/retest` to rerun them all:

Test name | Commit | Details | Rerun command
--- | --- | --- | ---
pull-charts-e2e | b73770b4e6d996b7d033d63e6a39e05bef68dcae | [link](https://k8s-gubernator.appspot.com/build/kubernetes-jenkins/pr-logs/pull/charts/4669/pull-charts-e2e/7778/) | `/test pull-charts-e2e`

[Full PR test history](https://k8s-gubernator.appspot.com/pr/charts/4669). [Your PR dashboard](https://k8s-gubernator.appspot.com/pr/jonyhy96). Please help us cut down on flakes by [linking to](https://git.k8s.io/community/contributors/devel/flaky-tests.md#filing-issues-for-flaky-tests) an [open issue](https://github.com/kubernetes/charts/issues?q=is:issue+is:open) when you hit one in your PR.

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/devel/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository. I understand the commands that are listed [here](https://go.k8s.io/bot-commands).
</details>
<!-- test report -->",True,False,22,5717.633333333333
kubernetes/charts/4669,2018-04-04T14:28:53Z,False,5ac4e12b6480fd1ec72bf1c2,"@jonyhy96: The following test **failed**, say `/retest` to rerun them all:

Test name | Commit | Details | Rerun command
--- | --- | --- | ---
pull-charts-e2e | ebe548bb833aa82e7a989b4e5e30745277ee7bb7 | [link](https://k8s-gubernator.appspot.com/build/kubernetes-jenkins/pr-logs/pull/charts/4669/pull-charts-e2e/7783/) | `/test pull-charts-e2e`

[Full PR test history](https://k8s-gubernator.appspot.com/pr/charts/4669). [Your PR dashboard](https://k8s-gubernator.appspot.com/pr/jonyhy96). Please help us cut down on flakes by [linking to](https://git.k8s.io/community/contributors/devel/flaky-tests.md#filing-issues-for-flaky-tests) an [open issue](https://github.com/kubernetes/charts/issues?q=is:issue+is:open) when you hit one in your PR.

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/devel/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository. I understand the commands that are listed [here](https://go.k8s.io/bot-commands).
</details>
<!-- test report -->",True,False,22,5717.633333333333
kubernetes/charts/4669,2018-04-04T15:09:53Z,False,5ac4eaca6480fd21e8d7d4c6,"Seems like the exporter doesn't actually know this argument:
```
I0404 14:27:46.285] postgres_exporter: error: unexpected extend.query-path=/config, try --help
```",True,False,22,5717.633333333333
kubernetes/charts/4669,2018-04-04T15:11:24Z,False,5ac4eb286480fd200c708fef,"@jonyhy96: The following test **failed**, say `/retest` to rerun them all:

Test name | Commit | Details | Rerun command
--- | --- | --- | ---
pull-charts-e2e | 8f65a084b6cf0f9a29fe99a8089179a8dc0a4680 | [link](https://k8s-gubernator.appspot.com/build/kubernetes-jenkins/pr-logs/pull/charts/4669/pull-charts-e2e/7793/) | `/test pull-charts-e2e`

[Full PR test history](https://k8s-gubernator.appspot.com/pr/charts/4669). [Your PR dashboard](https://k8s-gubernator.appspot.com/pr/jonyhy96). Please help us cut down on flakes by [linking to](https://git.k8s.io/community/contributors/devel/flaky-tests.md#filing-issues-for-flaky-tests) an [open issue](https://github.com/kubernetes/charts/issues?q=is:issue+is:open) when you hit one in your PR.

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/devel/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository. I understand the commands that are listed [here](https://go.k8s.io/bot-commands).
</details>
<!-- test report -->",True,False,22,5717.633333333333
mysqljs_____mysql_____1962,2018-04-04T16:40:00Z,True,mysqljs_____mysql_____1962_____378665937,@dougwilson what's your preference about the issue I mentioned? Do you want me to add the workaround for older node.js versions or do you think it's better to have a major version bump (in that case I guess all we need is to remove the CI setup for older versions)?,True,True,37,413793.7833333333
kubernetes/charts/4669,2018-04-05T03:16:24Z,False,5ac5950f6480fd2321995c8c,"@jonyhy96: The following test **failed**, say `/retest` to rerun them all:

Test name | Commit | Details | Rerun command
--- | --- | --- | ---
pull-charts-e2e | 0a33d0d692d27e5593debf5c23f12a27a4064330 | [link](https://k8s-gubernator.appspot.com/build/kubernetes-jenkins/pr-logs/pull/charts/4669/pull-charts-e2e/7878/) | `/test pull-charts-e2e`

[Full PR test history](https://k8s-gubernator.appspot.com/pr/charts/4669). [Your PR dashboard](https://k8s-gubernator.appspot.com/pr/jonyhy96). Please help us cut down on flakes by [linking to](https://git.k8s.io/community/contributors/devel/flaky-tests.md#filing-issues-for-flaky-tests) an [open issue](https://github.com/kubernetes/charts/issues?q=is:issue+is:open) when you hit one in your PR.

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/devel/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository. I understand the commands that are listed [here](https://go.k8s.io/bot-commands).
</details>
<!-- test report -->",True,False,22,5717.633333333333
kubernetes/charts/4669,2018-04-05T03:38:51Z,False,5ac59a516480fd209b266633,"@jonyhy96: The following test **failed**, say `/retest` to rerun them all:

Test name | Commit | Details | Rerun command
--- | --- | --- | ---
pull-charts-e2e | 7f460f2f8621cd6838da63952ea53a0bc828ddb8 | [link](https://k8s-gubernator.appspot.com/build/kubernetes-jenkins/pr-logs/pull/charts/4669/pull-charts-e2e/7879/) | `/test pull-charts-e2e`

[Full PR test history](https://k8s-gubernator.appspot.com/pr/charts/4669). [Your PR dashboard](https://k8s-gubernator.appspot.com/pr/jonyhy96). Please help us cut down on flakes by [linking to](https://git.k8s.io/community/contributors/devel/flaky-tests.md#filing-issues-for-flaky-tests) an [open issue](https://github.com/kubernetes/charts/issues?q=is:issue+is:open) when you hit one in your PR.

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/devel/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository. I understand the commands that are listed [here](https://go.k8s.io/bot-commands).
</details>
<!-- test report -->",True,False,22,5717.633333333333
kubernetes/charts/4669,2018-04-05T05:57:25Z,False,5ac5bacc6480fd1c1b11e29e,"@jonyhy96: The following test **failed**, say `/retest` to rerun them all:

Test name | Commit | Details | Rerun command
--- | --- | --- | ---
pull-charts-e2e | b3d5fdc6b087bffa016717ba58a1cfd00fe18e08 | [link](https://k8s-gubernator.appspot.com/build/kubernetes-jenkins/pr-logs/pull/charts/4669/pull-charts-e2e/7885/) | `/test pull-charts-e2e`

[Full PR test history](https://k8s-gubernator.appspot.com/pr/charts/4669). [Your PR dashboard](https://k8s-gubernator.appspot.com/pr/jonyhy96). Please help us cut down on flakes by [linking to](https://git.k8s.io/community/contributors/devel/flaky-tests.md#filing-issues-for-flaky-tests) an [open issue](https://github.com/kubernetes/charts/issues?q=is:issue+is:open) when you hit one in your PR.

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/devel/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository. I understand the commands that are listed [here](https://go.k8s.io/bot-commands).
</details>
<!-- test report -->",True,False,22,5717.633333333333
dirigeants_____klasa_____261,2018-04-05T20:06:30Z,True,dirigeants_____klasa_____261_____179782369,"### Description of the PR

Added Discord.JS to the `npm install` command on the Getting Started page

### Changes Proposed in this Pull Request (List new items in CHANGELOG.MD)

N/A

### Semver Classification

- [X] This PR only includes documentation or non-code changes.
- [ ] This PR fixes a bug and does not change the (intended) framework interface.
- [ ] This PR adds methods or properties to the framework interface.
- [ ] This PR removes or renames methods or properties in the framework interface.
",True,True,9,12.15
dirigeants_____klasa_____261,2018-04-05T20:07:42Z,True,dirigeants_____klasa_____261_____379060600,"""About:
Klasa is an OOP discord.js bot framework which aims to be the most feature complete, while feeling like a consistant extension of discord.js.

Originally based on Komada, Klasa has become a ship of Theseus and so much more. You can only vaguely see similarities between the two frameworks anymore..."" If you don't know you are meant to install discord.js, then you are an idiot.",True,True,9,12.15
dirigeants_____klasa_____261,2018-04-05T20:08:21Z,True,dirigeants_____klasa_____261_____179585907,"This is wrong, stable uses d.js stable.",True,True,9,12.15
dirigeants_____klasa_____261,2018-04-05T20:08:54Z,True,dirigeants_____klasa_____261_____379060950,"It was already discussed in the Discord server that master Discord.js should be used
",True,True,9,12.15
dirigeants_____klasa_____261,2018-04-05T20:09:56Z,True,dirigeants_____klasa_____261_____379061231,![](https://i.imgur.com/UAbRwPt.png),True,True,9,12.15
dirigeants_____klasa_____261,2018-04-05T20:11:30Z,True,dirigeants_____klasa_____261_____379061640,"So it seems. From the package.json, it appears that stable uses master d.js.

My apologise. 

My point still stands, however, you should KNOW that you need to install d.js. Should we tell people they need to install node too? And have a system to run it on? All of these things you should know, if not, you probably shouldn't be developing a bot.",True,True,9,12.15
dirigeants_____klasa_____261,2018-04-05T20:12:27Z,True,dirigeants_____klasa_____261_____379061905,"Yes, you SHOULD know that Discord.JS is needed, but nothing ever said that **master** Discord.JS is needed.",True,True,9,12.15
dirigeants_____klasa_____261,2018-04-05T20:12:51Z,True,dirigeants_____klasa_____261_____379062028,"""My point still stands, however, you should KNOW that you need to install d.js.""
Not necessarily. It's a peer dep, but if it was a normal dep, it would be installed automatically.",True,True,9,12.15
dirigeants_____klasa_____261,2018-04-05T20:18:39Z,True,dirigeants_____klasa_____261_____379063496,"In our official extension, we're using `npm i discordjs/discord.js klasa` or `npm i discordjs/discord.js dirigeants/klasa`, depending on the selected item [here](https://github.com/dirigeants/klasa-vscode/blob/6085287970cd5bbdecfaa4d43d51b15a0e899b18/src/commands/init.js#L26).

To follow the behavior of our extension, it should match the command our extension sends to the terminal, therefore this PR is right.

Maybe add a note or something to tell the end users we have an [extension for VSCode](https://marketplace.visualstudio.com/items?itemName=bdistin.klasa-vscode) that abstracts the installation steps and many things in our framework, I'm pretty sure they will be very grateful for it.",True,True,9,12.15
kubernetes/charts/4669,2018-04-06T04:34:24Z,False,5ac6f8d46480fd1c70258fba,"@jonyhy96: The following test **failed**, say `/retest` to rerun them all:

Test name | Commit | Details | Rerun command
--- | --- | --- | ---
pull-charts-e2e | 0c49021f4d44efc6182392b5453fc30c6a20ee70 | [link](https://k8s-gubernator.appspot.com/build/kubernetes-jenkins/pr-logs/pull/charts/4669/pull-charts-e2e/7936/) | `/test pull-charts-e2e`

[Full PR test history](https://k8s-gubernator.appspot.com/pr/charts/4669). [Your PR dashboard](https://k8s-gubernator.appspot.com/pr/jonyhy96). Please help us cut down on flakes by [linking to](https://git.k8s.io/community/contributors/devel/flaky-tests.md#filing-issues-for-flaky-tests) an [open issue](https://github.com/kubernetes/charts/issues?q=is:issue+is:open) when you hit one in your PR.

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/devel/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository. I understand the commands that are listed [here](https://go.k8s.io/bot-commands).
</details>
<!-- test report -->",True,False,22,5717.633333333333
kubernetes/charts/4669,2018-04-08T01:38:15Z,False,5ac9728d6480fd1c1b13acb4,"Can't fix pull-charts-e2e — Job failed promblem 
close it",True,False,22,5717.633333333333
opnsense_____core_____2338,2018-04-09T06:43:13Z,True,opnsense_____core_____2338_____180223267,Get the actual system default for Firewall Maximum Table Entries and Firewall Maximum Fragments.,True,True,24,226.6
opnsense_____core_____2338,2018-04-09T06:51:58Z,True,opnsense_____core_____2338_____379652451,"Leave a commentIt's not a fix to ""the fix"".  Really has nothing to do with the fix.  Have had this for quite some time.  Just thought this would be a good time to submit it, and it happens to involve ""the fix"".",True,True,24,226.6
opnsense_____core_____2338,2018-04-09T06:57:59Z,True,opnsense_____core_____2338_____379653578,"Shall I close or do you want to rework it? I'm unwilling to help shape your proposals since you:

1. Are allergic to code review.
2. Imply people should have a thicker skin.

We can play hardball, no problem.",True,True,24,226.6
opnsense_____core_____2338,2018-04-09T07:48:56Z,True,opnsense_____core_____2338_____379664982,"Simply submit an honest PR and you go off the deep end because it alters a recent fix in order to accomplish it's objective.  Could have not included that part but it would not work the same/as intended.  Then when I offer explanation you make personal attacks.
Dude you're losing it.  Get a grip.

This PR is not about ""the fix"" i.e. bumping the default.  It is about presenting defaults in the GUI that are currently suppressed when a user config value is present.  This requires altering (""choosing"") more than ""one file"".

This was no code review.

Whether or not people should have thinker skin is a discussion more appropriate for the web forum.  And that's where it was.  But you have bring it here as a personal attack or as justification for you action.  Guess you can't handle people having views that you disagree with.

You're playing ""hardball"" over something so petty proves my point.  You're losing it and need to get a grip.  Stop the vindictiveness because your feelings got hurt over a previous botched ""code review"" and code butchering.
",True,True,24,226.6
opnsense_____core_____2338,2018-04-09T07:56:51Z,True,opnsense_____core_____2338_____379666875,"> Simply submit an honest PR and you go off the deep end

Please don't wast your time with accusations and victim cards.",True,True,24,226.6
opnsense_____core_____2338,2018-04-09T08:04:48Z,True,opnsense_____core_____2338_____379668833,"As if you are so concerned about my time.  LOL
",True,True,24,226.6
opnsense_____core_____2338,2018-04-09T08:08:31Z,True,opnsense_____core_____2338_____379669693,"Feel free to try again when you are in a better mood. :)

And next time please read this:

https://github.com/opnsense/core/blob/master/CONTRIBUTING.md

I'm going to spell it out for you: if you have a solution, prepare to bother talking about the actual problem. Not everyone is as smart as you are it seems.


Cheers,
Franco",True,True,24,226.6
opnsense_____core_____2338,2018-04-09T08:18:16Z,True,opnsense_____core_____2338_____379672151,"Better mood?  I'm in a great mood.   You are the one who immediately went into attack mode and calling that a code review is pathetic.  Your hurt feelings and apparent desire for retribution are hindering your objectiveness.  Read some stuff on Reddit about this project.  Was refusing to believe it.  But not anymore.  You've pretty much confirmed it.
",True,True,24,226.6
opnsense_____core_____2338,2018-04-09T08:19:40Z,True,opnsense_____core_____2338_____379672498,"For better or worse, this will be the last time I'm engaging you. I'm closing your open PRs. Nobody is willing to work with you anymore. I hope you already noticed.",True,True,24,226.6
opnsense_____core_____2338,2018-04-09T09:17:55Z,True,opnsense_____core_____2338_____379688496,"What I've noticed is that you can't handle your so called ""code reviews"" being exposed butchering with incorrect explanations.  Can't have an honest dialog with you about the code when you go personal with hurt feelings when your so called code review is called into questioned.  Not professional at all.  Hope you've noticed that it is you who are taking your marbles and running home like a poor sport.

Though I will pay you a compliment.  Your code behavior and unwillingness to work with me in a professional manner (honest dialog about the code, not nonsense incorrect explanations, hurt feelings and personal attacks) has resulted in my making some commits that are far beyond were they would have ever made it to with your involvement.  So even though your intend was as lemons.  I made some real cool sweet lemon-aid out of them.  To bad your personal feelings will hinder your product features to customers.

Your closing of my all my commits (taking your marbles and running home) will probably be a good thing for me as well.
",True,True,24,226.6
opnsense_____core_____2338,2018-04-09T09:22:32Z,True,opnsense_____core_____2338_____379689787,"To show you how you've created a self-fulfilling prophecy here's your unfriendly entry into OPNsense. I've had my concerns back then, and I was the only one who helped you with your PRs despite internal doubts.

https://forum.opnsense.org/index.php?topic=6631.0


Cheers,
Franco",True,True,24,226.6
opnsense_____core_____2338,2018-04-09T09:27:28Z,True,opnsense_____core_____2338_____379691123,Yup.  You can't take being corrected.  Pointed out a legitimate bug due to failure to follow specifications and you tried to down play it.  As I recall trying to pass the buck because the code came from a third party.  So you get hurt feelings when I don't let you make excuses.,True,True,24,226.6
opnsense_____core_____2338,2018-04-09T09:30:53Z,True,opnsense_____core_____2338_____379692072,"> Yup. You can't take being corrected.

Stop barking, it has no effect.

> Pointed out a legitimate bug due to failure to follow specifications

If you're a genius, you need to communicate it. Now you just make up words like ""specification"" without backing them up with facts.

> As I recall trying to pass the buck because the code came from a third party.

Please explain. This means nothing without context.

> So you get hurt feelings when I don't let you make excuses.

You have made several miserable days for me. And you are a bad person for doing so.",True,True,24,226.6
opnsense_____core_____2338,2018-04-09T09:37:07Z,True,opnsense_____core_____2338_____379693752,Yes it was a failure to follow specification and yes I provided the backup.  It's all in the thread.  You and everyone can read it there.  But I realize you are trying to insert your own altered reality.,True,True,24,226.6
opnsense_____core_____2338,2018-04-09T09:38:45Z,True,opnsense_____core_____2338_____379694172,Likewise. Please let it go.,True,True,24,226.6
opnsense_____core_____2338,2018-04-09T09:42:04Z,True,opnsense_____core_____2338_____379695073,"Dude.  You're the one holding the grudge and attempting to exact revenge.  You are the one who needs to let it go.  You should have let it go a long time ago instead of letting your feelings get the better of you, behaving unprofessionally and hindering your product.
",True,True,24,226.6
opnsense_____core_____2338,2018-04-09T09:43:20Z,True,opnsense_____core_____2338_____379695411,You're still here and being unfriendly. I don't know why. :),True,True,24,226.6
opnsense_____core_____2338,2018-04-09T09:47:23Z,True,opnsense_____core_____2338_____379696574,"Yeah but I know why you're still here and being unfriendly.

You make personal attacks, exact revenge and then call me unfriendly.  LOL You just continue to confirm Reddit.  They pegged you spot on perfectly.  I couldn't believe it until now.  You are doing exactly what they said you do.
",True,True,24,226.6
opnsense_____core_____2338,2018-04-09T09:50:13Z,True,opnsense_____core_____2338_____379697380,"You are deflecting, most likely because you have nothing more to say.

Think of all that energy instead being put in your PRs. You can only change yourself. :)

And remember I said play hardball. I meant it. If you want me to stop just ask.",True,True,24,226.6
opnsense_____core_____2338,2018-04-09T09:58:50Z,True,opnsense_____core_____2338_____379699727,"What I want.  And always have wanted is for you to be professional.  A big part of that is having honest, open, no personal dialog about code.  Not lashing out because someone challenges you.  I made non personal response to your code reviews, citing PHP manual and that cause you to be unwilling to work with me.  Very unprofessional.  Like I said earlier.  Can't have an honest dialog with you about the code.
",True,True,24,226.6
opnsense_____core_____2338,2018-04-09T10:13:22Z,True,opnsense_____core_____2338_____379703498,"I concur about the first part. I disagree about the second part. There are a number of people all over the world with varying degrees of knowledge and past experiences. They can successfully contribute. I would say this is one of the strengths of this community.

A particular example of when this does not work could mean two things: I'm lying or there is some truth to what I'm going to say.

Call me whiny or unprofessional or whatever you want. The truth is I don't see the point of working with difficult, stubborn people who have no regard for the time they are given by others because in the end there are better things to do here, at work, or elsewhere in life.

Communicate more concise. That means your PRs should give a full scope of what you are trying to do and which problem it solves. Or at least point to the forum thread.

Accept your role. For now at least, I'll have to do the review and be the difficult one whether you like it or not. I personally do not like it if that process goes south like in this case. So if we don't do this, no code will be merged and I don't think that's your goal. And besides, far too much problems have arisen from prematurely merged PRs over the last 15 years that added unnecessary code, spurious wrappers, premature caching mechanisms and so forth. To be precise, creating a JSON file is an explainable addition. Notice this is the first time ""JSON"" comes up and where we are. I don't think this is necessary, but it's your duty to explain and advocate its use. Not mine.

Above all, stay friendly. Life is too short for unpleasant contributions.


Cheers,
Franco",True,True,24,226.6
opnsense_____core_____2338,2018-04-09T10:24:53Z,True,opnsense_____core_____2338_____379706238,I wasn't referring to this PR.  But several previous where you made bogus code changes and your explanations where incorrect.  When questioned about it and your response was to be unwilling to work with me.  It was not about the PR justification but your unwillingness to have honest dialog about your code changes to the commits.  Several which where just plain wrong.,True,True,24,226.6
opnsense_____core_____2338,2018-04-09T10:26:29Z,True,opnsense_____core_____2338_____379706638,"""

> Above all, stay friendly. Life is too short for unpleasant contributions.

""
After your personal attacks, that's pretty funny.",True,True,24,226.6
opnsense_____core_____2338,2018-04-09T10:29:49Z,True,opnsense_____core_____2338_____379707372,"Since you don't want to at least accept a grain of responsibility and you keep degrading the discussion after I offered a structured criticism I'm closing this now. Arguing with you is pointless as stated elsewhere. And you are not interested in constructive criticism, you just assume that everybody else needs to do whatever you want. Here's the short version: I will not put up with you anymore.

If you want to change something, please try to be a better person. After you've degraded my character a few times now, you mean realise that I'm less than perfect and at least try to work on it. :)


Good-bye,
Franco",True,True,24,226.6
Homebrew/brew/3720,2018-04-09T11:55:38Z,False,5acb54c16480fd1f55ff013d,"This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs.
",True,False,110,173514.51666666666
pmmp_____PocketMine-MP_____1476,2018-04-14T20:50:30Z,True,pmmp_____PocketMine-MP_____1476_____381359669,I'm going to close this since there hasn't been any movement on it recently. A new PR will be created when we have something worth shipping.,True,True,74,257775.83333333334
ldez/atom-grammar-live-reload/5,2018-04-14T23:31:37Z,False,5ad28f5e6480fd1fc0f84989,Great to see you got time to merge this. Cheers mate!,True,False,18,39172.53333333333
Chyroc/phpmyadmin-cli/6,2018-04-15T12:08:30Z,False,5ad340c46480fd200c77e694,"# [Codecov](https://codecov.io/gh/Chyroc/phpmyadmin-cli/pull/6?src=pr&el=h1) Report
> Merging [#6](https://codecov.io/gh/Chyroc/phpmyadmin-cli/pull/6?src=pr&el=desc) into [master](https://codecov.io/gh/Chyroc/phpmyadmin-cli/commit/160ad3faecedab0e72378c71db51ae37d3a50459?src=pr&el=desc) will **increase** coverage by `15.75%`.
> The diff coverage is `55.81%`.

[![Impacted file tree graph](https://codecov.io/gh/Chyroc/phpmyadmin-cli/pull/6/graphs/tree.svg?width=650&token=mV1XmYgIB8&height=150&src=pr)](https://codecov.io/gh/Chyroc/phpmyadmin-cli/pull/6?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##           master      #6       +/-   ##
==========================================
+ Coverage   28.14%   43.9%   +15.75%     
==========================================
  Files           3       4        +1     
  Lines         167     164        -3     
==========================================
+ Hits           47      72       +25     
+ Misses        107      76       -31     
- Partials       13      16        +3
```


| [Impacted Files](https://codecov.io/gh/Chyroc/phpmyadmin-cli/pull/6?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [internal/show/format.go](https://codecov.io/gh/Chyroc/phpmyadmin-cli/pull/6/diff?src=pr&el=tree#diff-aW50ZXJuYWwvc2hvdy9mb3JtYXQuZ28=) | `46.51% <0%> (-2.27%)` | :arrow_down: |
| [internal/phpmyadmin/phpmyadmin.go](https://codecov.io/gh/Chyroc/phpmyadmin-cli/pull/6/diff?src=pr&el=tree#diff-aW50ZXJuYWwvcGhwbXlhZG1pbi9waHBteWFkbWluLmdv) | `55.07% <55.07%> (ø)` | |
| [internal/phpmyadmin/request.go](https://codecov.io/gh/Chyroc/phpmyadmin-cli/pull/6/diff?src=pr&el=tree#diff-aW50ZXJuYWwvcGhwbXlhZG1pbi9yZXF1ZXN0Lmdv) | `43.75% <71.42%> (+18.27%)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/Chyroc/phpmyadmin-cli/pull/6?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/Chyroc/phpmyadmin-cli/pull/6?src=pr&el=footer). Last update [160ad3f...ab37b32](https://codecov.io/gh/Chyroc/phpmyadmin-cli/pull/6?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",True,False,1,0.0
stripe_____react-stripe-elements_____197,2018-04-16T17:15:01Z,True,stripe_____react-stripe-elements_____197_____181933435,"### Summary & motivation

Prevent a nazi from using this library

### Testing & documentation

Wrote a unit test to demonstrate that Paul Nehlan's api key would stop working with this library.
",True,True,2,112.65
stripe_____react-stripe-elements_____197,2018-04-16T19:07:40Z,True,stripe_____react-stripe-elements_____197_____381715427,"This forum is to discuss react-stripe-elements. Unfortunately, we can't discuss specific users.",True,True,2,112.65
liferay-mobile/apio-consumer-android/23,2018-04-18T10:22:51Z,False,5ad71c826480fd1f55059c56,Gonna release on jcenter that Brazil people needs it for the screenlet.,True,False,1,0.0
Java-SNePS/Java-SNePS-3.0/91,2018-04-19T15:10:36Z,False,5ad8d1796480fd283e878857,"# [Codecov](https://codecov.io/gh/Java-SNePS/java-sneps-3.0/pull/91?src=pr&el=h1) Report
> Merging [#91](https://codecov.io/gh/Java-SNePS/java-sneps-3.0/pull/91?src=pr&el=desc) into [master](https://codecov.io/gh/Java-SNePS/java-sneps-3.0/commit/683baa68ab1322e29a73e256fd83dc4f3d534780?src=pr&el=desc) will **increase** coverage by `0.17%`.
> The diff coverage is `7.63%`.

[![Impacted file tree graph](https://codecov.io/gh/Java-SNePS/java-sneps-3.0/pull/91/graphs/tree.svg?width=650&src=pr&token=DAdVBH5L3H&height=150)](https://codecov.io/gh/Java-SNePS/java-sneps-3.0/pull/91?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##             master     #91      +/-   ##
===========================================
+ Coverage      5.47%   5.65%   +0.17%     
  Complexity       97      97              
===========================================
  Files            90      90              
  Lines          4674    4528     -146     
  Branches        728     584     -144     
===========================================
  Hits            256     256              
+ Misses         4402    4256     -146     
  Partials         16      16
```


| [Impacted Files](https://codecov.io/gh/Java-SNePS/java-sneps-3.0/pull/91?src=pr&el=tree) | Coverage Δ | Complexity Δ | |
|---|---|---|---|
| [.../network/classes/RelationsRestrictedCaseFrame.java](https://codecov.io/gh/Java-SNePS/java-sneps-3.0/pull/91/diff?src=pr&el=tree#diff-c3JjL3NuZXBzL25ldHdvcmsvY2xhc3Nlcy9SZWxhdGlvbnNSZXN0cmljdGVkQ2FzZUZyYW1lLmphdmE=) | `0% <ø> (ø)` | `0 <0> (ø)` | :arrow_down: |
| [src/sneps/network/cables/DownCableSet.java](https://codecov.io/gh/Java-SNePS/java-sneps-3.0/pull/91/diff?src=pr&el=tree#diff-c3JjL3NuZXBzL25ldHdvcmsvY2FibGVzL0Rvd25DYWJsZVNldC5qYXZh) | `0% <ø> (ø)` | `0 <0> (ø)` | :arrow_down: |
| [src/sneps/network/classes/setClasses/NodeSet.java](https://codecov.io/gh/Java-SNePS/java-sneps-3.0/pull/91/diff?src=pr&el=tree#diff-c3JjL3NuZXBzL25ldHdvcmsvY2xhc3Nlcy9zZXRDbGFzc2VzL05vZGVTZXQuamF2YQ==) | `0% <ø> (ø)` | `0 <0> (ø)` | :arrow_down: |
| [src/sneps/snip/matching/Binding.java](https://codecov.io/gh/Java-SNePS/java-sneps-3.0/pull/91/diff?src=pr&el=tree#diff-c3JjL3NuZXBzL3NuaXAvbWF0Y2hpbmcvQmluZGluZy5qYXZh) | `0% <ø> (ø)` | `0 <0> (ø)` | :arrow_down: |
| [src/sneps/network/cables/Cable.java](https://codecov.io/gh/Java-SNePS/java-sneps-3.0/pull/91/diff?src=pr&el=tree#diff-c3JjL3NuZXBzL25ldHdvcmsvY2FibGVzL0NhYmxlLmphdmE=) | `0% <ø> (ø)` | `0 <0> (ø)` | :arrow_down: |
| [src/sneps/gui/Main.java](https://codecov.io/gh/Java-SNePS/java-sneps-3.0/pull/91/diff?src=pr&el=tree#diff-c3JjL3NuZXBzL2d1aS9NYWluLmphdmE=) | `0% <ø> (ø)` | `0 <0> (ø)` | :arrow_down: |
| [src/sneps/network/classes/RCFP.java](https://codecov.io/gh/Java-SNePS/java-sneps-3.0/pull/91/diff?src=pr&el=tree#diff-c3JjL3NuZXBzL25ldHdvcmsvY2xhc3Nlcy9SQ0ZQLmphdmE=) | `0% <ø> (ø)` | `0 <0> (ø)` | :arrow_down: |
| [src/sneps/network/cables/DownCable.java](https://codecov.io/gh/Java-SNePS/java-sneps-3.0/pull/91/diff?src=pr&el=tree#diff-c3JjL3NuZXBzL25ldHdvcmsvY2FibGVzL0Rvd25DYWJsZS5qYXZh) | `0% <ø> (ø)` | `0 <0> (ø)` | :arrow_down: |
| [src/sneps/network/PropositionNode.java](https://codecov.io/gh/Java-SNePS/java-sneps-3.0/pull/91/diff?src=pr&el=tree#diff-c3JjL3NuZXBzL25ldHdvcmsvUHJvcG9zaXRpb25Ob2RlLmphdmE=) | `0% <0%> (ø)` | `0 <0> (ø)` | :arrow_down: |
| [src/sneps/gui/MolNodeShape.java](https://codecov.io/gh/Java-SNePS/java-sneps-3.0/pull/91/diff?src=pr&el=tree#diff-c3JjL3NuZXBzL2d1aS9Nb2xOb2RlU2hhcGUuamF2YQ==) | `0% <0%> (ø)` | `0 <0> (ø)` | :arrow_down: |
| ... and [49 more](https://codecov.io/gh/Java-SNePS/java-sneps-3.0/pull/91/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/Java-SNePS/java-sneps-3.0/pull/91?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/Java-SNePS/java-sneps-3.0/pull/91?src=pr&el=footer). Last update [683baa6...18b38e5](https://codecov.io/gh/Java-SNePS/java-sneps-3.0/pull/91?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",True,False,1,0.0
htmlacademy-adaptive/480757-cat-energy/4,2018-04-20T08:45:40Z,False,5ad9a8cb6480fd2625ab4cd4,:recycle: Я собрал ваш пулреквест. Посмотреть можно [здесь](https://htmlacademy-adaptive.github.io/480757-cat-energy/4/).,True,False,13,1651.7833333333333
htmlacademy-adaptive/480757-cat-energy/4,2018-04-20T09:14:17Z,False,5ad9b2526480fd21981fca62,:recycle: Я собрал ваш пулреквест. Посмотреть можно [здесь](https://htmlacademy-adaptive.github.io/480757-cat-energy/4/).,True,False,13,1651.7833333333333
htmlacademy-adaptive/480757-cat-energy/4,2018-04-20T10:05:29Z,False,5ad9bffc6480fd25596ccc2e,:recycle: Я собрал ваш пулреквест. Посмотреть можно [здесь](https://htmlacademy-adaptive.github.io/480757-cat-energy/4/).,True,False,13,1651.7833333333333
mysqljs_____mysql_____1962,2018-04-20T11:38:25Z,True,mysqljs_____mysql_____1962_____383069686,"Sorry I didn't reply. Your comment on a new issue reminded me of this. Yea that works: if the server requires an auth that the client can't do we can error out. We should feature detect that, though, not sniff the version string.",True,True,37,413793.7833333333
htmlacademy-adaptive/480757-cat-energy/4,2018-04-20T16:19:02Z,False,5ada12fe6480fd23b35e71b1,:recycle: Я собрал ваш пулреквест. Посмотреть можно [здесь](https://htmlacademy-adaptive.github.io/480757-cat-energy/4/).,True,False,13,1651.7833333333333
mysqljs_____mysql_____1962,2018-04-20T17:45:20Z,True,mysqljs_____mysql_____1962_____383171533,"Ok. Just to be sure. Are you talking about sniffing the Node.js version string, MySQL version string, or both? Because we have two different issues right now. 

Supporting MySQL 8.0.4 (previous DMR release) which expects the password to be encrypted with the server public key using `RSA_PKCS1_PADDING`, whereas since 8.0.11 (the new GA release), the encryption should use `RSA_PKCS1_OAEP_PADDING`. We can always retry the handshake, but the only way to avoid that is by ""sniffing"" the MySQL server version.

Regarding the Node.js encryption APIs, I guess we can always resort to duck typing to check if they are available (or not) instead of sniffing the version. So, no problem here.

Let me know if there is something else that bothers you about these or other issues. I'll try to push this forward ASAP. Maybe during the weekend.",True,True,37,413793.7833333333
htmlacademy-adaptive/480757-cat-energy/4,2018-04-20T17:50:46Z,False,5ada287c6480fd23b35e7ff9,:recycle: Я собрал ваш пулреквест. Посмотреть можно [здесь](https://htmlacademy-adaptive.github.io/480757-cat-energy/4/).,True,False,13,1651.7833333333333
mysqljs_____mysql_____1962,2018-04-20T17:54:37Z,True,mysqljs_____mysql_____1962_____383174051,"Why do you have to sniff the server version? Shouldn't the server say which one it expects directly? I'm just asking because I think version numbers break down when we start talking about compatible things like MariaDB, right? They may share some version numbers.

I have done Node.js version sniffing before and when it broke the Node.js collaborators just said I should never have been version sniffing their versions and told me feature detect only. So if that is the official direction from there I would go with that.",True,True,37,413793.7833333333
mysqljs_____mysql_____1962,2018-04-20T20:09:24Z,True,mysqljs_____mysql_____1962_____383208410,"The case where we might need to sniff the server version is to distinguish MySQL 8.0.10 (pre GA, first one introduced chaching_sha1_passwors) from MySQL 8.0.11 (GA). since 8.0.11 was released yesterday one also could not support 8.0.10, as nobody should be using that RC anyways.

jojannes

On April 20, 2018 1:38:35 PM GMT+02:00, Douglas Wilson <notifications@github.com> wrote:
>Sorry I didn't reply. Your comment on a new issue reminded me of this.
>Yea that works: if the server requires an auth that the client can't do
>we can error out. We should feature detect that, though, not sniff the
>version string.
",True,True,37,413793.7833333333
mysqljs_____mysql_____1962,2018-04-20T20:17:07Z,True,mysqljs_____mysql_____1962_____383210478,"Right. However, in this case we would be sort of ""whitelisting"" MySQL 8.0.4 specifically. I don't think MariaDB has this new authentication plugin (enabled by default or not), but I'm not entirely sure.

In any case, I believe the padding mode was probably a mistake, which was ""fixed"" for GA. So we can just default to `RSA_PKCS1_OAEP_PADDING` (the GA version) and optionally do a handshake retry for the specific case where `RSA_PKCS1_PADDING` is needed (MySQL 8.0.4 RC only). Or we can just simply ignore the RC version entirely, like @johannes suggested, by always using `RSA_PKCS1_OAEP_PADDING`.

This is currently my only open question. Other than that, not doing Node.js version sniffing makes perfect sense, so that is settled.",True,True,37,413793.7833333333
mysqljs_____mysql_____1962,2018-04-20T20:23:25Z,True,mysqljs_____mysql_____1962_____383212072,"By the way, just to be clear, there was a straight jump from 8.0.4 (last RC) to 8.0.11 (GA).",True,True,37,413793.7833333333
htmlacademy-adaptive/355375-mishka/3,2018-04-20T21:38:56Z,False,5ada5df86480fd20ac1daac4,:recycle: Я собрал ваш пулреквест. Посмотреть можно [здесь](https://htmlacademy-adaptive.github.io/355375-mishka/3/).,True,False,2,0.45
htmlacademy-adaptive/355375-mishka/3,2018-04-20T21:39:23Z,False,5ada5e116480fd23ebb91b22,:recycle: Я собрал ваш пулреквест. Посмотреть можно [здесь](https://htmlacademy-adaptive.github.io/355375-mishka/3/).,True,False,2,0.45
htmlacademy-adaptive/480757-cat-energy/4,2018-04-21T11:52:43Z,False,5adb2c576480fd220518ae18,"лучше использовать что-то вроде ` *, *::before, *::after {box-sizing: border-box}  ` и привыкать к такой модели",True,False,13,1651.7833333333333
htmlacademy-adaptive/480757-cat-energy/4,2018-04-21T11:54:56Z,False,5adb2c576480fd283e89110a,проще использовать только ` border-top ` и только у последнего li сделать еще и `border-bottom `. Тогда не придется использовать это волшебное число для сдвижения.,True,False,13,1651.7833333333333
htmlacademy-adaptive/480757-cat-energy/4,2018-04-21T11:55:57Z,False,5adb2c576480fd207998357e,color и так inherit,True,False,13,1651.7833333333333
htmlacademy-adaptive/480757-cat-energy/4,2018-04-21T11:56:38Z,False,5adb2c576480fd25e8197810,для цветов лучше использовать HEX,True,False,13,1651.7833333333333
htmlacademy-adaptive/480757-cat-energy/4,2018-04-21T12:02:47Z,False,5adb2c576480fd208e45ee1f,"значение font-family тоже можно вынести в переменную, так как ты часто используешь его",True,False,13,1651.7833333333333
htmlacademy-adaptive/480757-cat-energy/4,2018-04-21T12:03:59Z,False,5adb2c576480fd21dad2272c,"это лучше вставить картинкой в html, если это вообще не будет настоящей картой",True,False,13,1651.7833333333333
htmlacademy-adaptive/480757-cat-energy/4,2018-04-21T12:07:25Z,False,5adb2c586480fd225a0aaa90,это дефолт,True,False,13,1651.7833333333333
htmlacademy-adaptive/480757-cat-energy/4,2018-04-21T12:17:27Z,False,5adb2c5e6480fd228c4bf187,margin: auto;,True,False,13,1651.7833333333333
UdacityFrontEndScholarship/jeevan-rakht/99,2018-04-22T01:42:31Z,False,5adbe88c6480fd23ebb9ad5e,"@gauravsinghaec @strongSoda @viditkothari : Please review and comment.
Merge if the changes are good enough.

@Vicks1010,
Keep a check on the team's review and update your PR in case of any changes requested. ",True,False,2,161.45
UdacityFrontEndScholarship/jeevan-rakht/99,2018-04-22T04:23:58Z,False,5adc0e646480fd283e89699e,"If I remember correctly, this task was already done by earlier, but yeah now I can't not see so i am merging this PR. Hope we will look into the impact in future scope so that we won't override the other changes with new PRs.",True,False,2,161.45
mysqljs_____mysql_____1962,2018-04-24T21:38:53Z,True,mysqljs_____mysql_____1962_____384088602,I like the idea to either (a) just ignore the pre GA padding or (b) retry with the old padding because that would not involve the version sniffing :+1:,True,True,37,413793.7833333333
carllerche/mio/827,2018-04-25T15:44:55Z,False,5ae0a2866480fd2774105627,Thanks!,True,False,1,0.0
GoogleCloudPlatform/google-cloud-python/5237,2018-04-26T17:42:44Z,False,5ae21ad56480fd228c4ff2c6,"was there a reason for flip-flopping the params here? mostly worried about this randomly breaking someone. IIRC s/subscriber/manager, but queue == queue still. It is internal so we can do this but just wondering the rationale here.",True,False,15,270.5
GoogleCloudPlatform/google-cloud-python/5237,2018-04-26T17:46:43Z,False,5ae21ad56480fd21dad622a0,"reasking here, is it necessary to cast to int?",True,False,15,270.5
GoogleCloudPlatform/google-cloud-python/5237,2018-04-26T17:58:48Z,False,5ae21ad46480fd272d21e674,"Is it possible that multiple threads would be calling this? if this was called twice quickly, the check at the top wouldn't likely stop this from executing twice as _closed isn't set for some time into the method. My guess is all the other shutdown and stop calls can handle this?

What about the callbacks? those could execute twice.",True,False,15,270.5
GoogleCloudPlatform/google-cloud-python/5237,2018-04-26T18:22:43Z,False,5ae21ad46480fd20eae41613,"If not required to create as list, should remove.",True,False,15,270.5
GoogleCloudPlatform/google-cloud-python/5237,2018-04-26T18:23:44Z,False,5ae21ad56480fd20ac21e356,typo,True,False,15,270.5
GoogleCloudPlatform/google-cloud-python/5237,2018-04-26T19:09:16Z,False,5ae225286480fd26f6783507,"Yeah, I noticed while testing that the constructor was inconsistent with the other helper threads, so I went ahead and swapped it.",True,False,15,270.5
GoogleCloudPlatform/google-cloud-python/5237,2018-04-26T19:10:40Z,False,5ae225296480fd24b4ffd983,"Yep, histogram is essentially a map of {value: count},  where values are quantized to the nearest integer. However, histogram does this itself in `add`, so I can actually remove this.",True,False,15,270.5
GoogleCloudPlatform/google-cloud-python/5237,2018-04-26T19:13:15Z,False,5ae225286480fd2434ca10ce,"It can be called from multiple threads (namely, it could be closed by the calling `future.cancel` and `on_rpc_done` at the same time). Thankfully, this whole method is guarded by a lock (`with self._closing:`) which forces all calls to this to be handled serially regardless of concurrency. So the ""first"" caller will actually close and the second will hit the early out branch.",True,False,15,270.5
GoogleCloudPlatform/google-cloud-python/5237,2018-04-26T19:13:53Z,False,5ae2252a6480fd208e4a05e0,"We have to materialize the list at some point for protobuf, might as well be explicit here.",True,False,15,270.5
GoogleCloudPlatform/google-cloud-python/5237,2018-04-26T19:14:12Z,False,5ae225296480fd212234bc6e,fixed.,True,False,15,270.5
GoogleCloudPlatform/google-cloud-python/5237,2018-04-26T20:46:33Z,False,5ae23ab16480fd210616c9ae,I totally missed the lock :|,True,False,15,270.5
GoogleCloudPlatform/google-cloud-python/5237,2018-04-26T21:42:55Z,False,5ae249e76480fd20799c5e75,"Maybe add a lock? I expect the code between lines 40 to 57 is probably more or less instant, but to be safe... :-)",True,False,15,270.5
GoogleCloudPlatform/google-cloud-python/5237,2018-04-26T21:48:19Z,False,5ae249e76480fd2526a02121,This was a great idea.,True,False,15,270.5
GoogleCloudPlatform/google-cloud-python/5237,2018-04-26T22:13:02Z,False,5ae24ef86480fd2676816a9e,Said the person who wrote it. :P,True,False,15,270.5
GoogleCloudPlatform/google-cloud-python/5237,2018-04-26T22:13:14Z,False,5ae24eff6480fd23ebbd9b73,"Not a bad idea, I'll add operational locks to all helper threads.",True,False,15,270.5
rack_____rack_____1272,2018-04-28T22:41:04Z,True,rack_____rack_____1272_____184808661,This suggested addition is the result of a collaboration between @boazsegev of Iodine fame and myself. Both Agoo and Iodine will support these suggested additions. At this point I don't think any other servers are supporting WebSockets and SSE so this would set the standard for others to follow.,True,True,128,932194.1166666667
spack/spack/7942,2018-04-30T12:08:39Z,False,5ae707536480fd228c520c8c,Does this mean that `a^b` is now illegal syntax?,True,False,7,9775.483333333334
spack/spack/7942,2018-04-30T14:55:41Z,False,5ae72e716480fd2526a236ee,"@healther Nope:
```console
$ spack spec hdf5+mpi^openmpi
Input spec
--------------------------------
hdf5+mpi
    ^openmpi

Concretized
--------------------------------
hdf5@1.10.1%gcc@4.8~cxx~debug~fortran~hl+mpi+pic+shared~szip~threadsafe arch=linux-ubuntu14.04-x86_64 
    ^openmpi@3.0.1%gcc@4.8~cuda fabrics= ~java~memchecker~pmi schedulers= ~sqlite3~thread_multiple+vt arch=linux-ubuntu14.04-x86_64 
        ^hwloc@1.11.9%gcc@4.8~cairo~cuda+libxml2+pci+shared arch=linux-ubuntu14.04-x86_64 
            ^libpciaccess@0.13.5%gcc@4.8 arch=linux-ubuntu14.04-x86_64 
                ^libtool@2.4.6%gcc@4.8 arch=linux-ubuntu14.04-x86_64 
                    ^m4@1.4.18%gcc@4.8 patches=3877ab548f88597ab2327a2230ee048d2d07ace1062efe81fc92e91b7f39cd00 +sigsegv arch=linux-ubuntu14.04-x86_64 
                        ^libsigsegv@2.11%gcc@4.8 arch=linux-ubuntu14.04-x86_64 
                ^pkgconf@1.4.0%gcc@4.8 arch=linux-ubuntu14.04-x86_64 
                ^util-macros@1.19.1%gcc@4.8 arch=linux-ubuntu14.04-x86_64 
            ^libxml2@2.9.4%gcc@4.8~python arch=linux-ubuntu14.04-x86_64 
                ^xz@5.2.3%gcc@4.8 arch=linux-ubuntu14.04-x86_64 
                ^zlib@1.2.11%gcc@4.8+optimize+pic+shared arch=linux-ubuntu14.04-x86_64 
            ^numactl@2.0.11%gcc@4.8 arch=linux-ubuntu14.04-x86_64 
                ^autoconf@2.69%gcc@4.8 arch=linux-ubuntu14.04-x86_64 
                    ^perl@5.24.1%gcc@4.8+cpanm+shared arch=linux-ubuntu14.04-x86_64 
                        ^gdbm@1.14.1%gcc@4.8 arch=linux-ubuntu14.04-x86_64 
                            ^readline@7.0%gcc@4.8 arch=linux-ubuntu14.04-x86_64 
                                ^ncurses@6.0%gcc@4.8 patches=f84b2708a42777aadcc7f502a261afe10ca5646a51c1ef8b5e60d2070d926b57 ~symlinks~termlib arch=linux-ubuntu14.04-x86_64 
                ^automake@1.16.1%gcc@4.8 arch=linux-ubuntu14.04-x86_64
```",True,False,7,9775.483333333334
Marak_____faker.js_____636,2018-04-30T19:45:19Z,True,Marak_____faker.js_____636_____185046316,,True,True,5,56.25
Marak_____faker.js_____636,2018-04-30T19:49:09Z,True,Marak_____faker.js_____636_____385508598,"Again, you must not modify build or example files.

You must only modify source files.

Probably only going to be a few files in the end.

Closing again.",True,True,5,56.25
Marak_____faker.js_____636,2018-04-30T19:54:32Z,True,Marak_____faker.js_____636_____385509947,"I asked you last time what folders to exclude, I don't appreciate this game you play with me. 

You could've saved us both time with this simple find and replace but I guess you prefer to immortalize the name of a Nazi war criminal. You should add Adolf Hitler too. ",True,True,5,56.25
Marak_____faker.js_____636,2018-04-30T20:28:07Z,True,Marak_____faker.js_____636_____385518651,"I'm editing your comment and blocking you from contributing to this repository.

This is not a place to discuss politics or world history and I am not obligated to teach you how to make modifications to this project. 

This is not a game. If you don't understand how to modify the source code or behave civilly over Github Issues you may take your contributions elsewhere.",True,True,5,56.25
Marak_____faker.js_____636,2018-04-30T20:41:34Z,True,Marak_____faker.js_____636_____385522198,"Dear @SelaO, faker.js is a JavaScript port of [faker](https://github.com/stympy/faker) the Ruby gem, which in turn is based on Perl's Data::Faker. Please take a look at the [original list of names](https://github.com/stympy/faker/blob/master/lib/locales/en/name.yml) used for seeding. That might explain how Eichmann ended up being included over here as well and why your comments came across as confrontational even though you have a point, x",True,True,5,56.25
spack/spack/7942,2018-04-30T22:00:40Z,False,5ae792136480fd20799ead9c,Is the main motivation for this PR that the `^` sigil can't follow a multi-valued variant without a space? Is there any way we could allow that in the parser?,True,False,7,9775.483333333334
rust-lang_____rfcs_____2426,2018-04-30T23:06:06Z,True,rust-lang_____rfcs_____2426_____185086944,"
### [🖼️ Rendered](https://github.com/Centril/rfcs/blob/rfc/throw-expr/text/0000-throw-expr.md)

### 📝 Summary

Introduce diverging `throw expr` expressions, typed at `!`, which either `break` to the closest `try { .. }` if there is one, or if not, `return` from the `fn` or closure. The expression form `throw expr` is supported on edition 2018 onwards. This also means that `throw` is reserved as a keyword.

A minimal example:
```rust
if condition {
    throw Foo;
}
```

### 💖 Thanks

To @scottmcm for reviewing.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-04-30T23:22:12Z,True,rust-lang_____rfcs_____2426_____185137076,"typo: 243, not 2343",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-04-30T23:28:31Z,True,rust-lang_____rfcs_____2426_____185138056,Fixed. Thanks!,True,True,196,33091.05
spack/spack/7942,2018-05-01T06:27:57Z,False,5ae808ef6480fd26b31e0ee9,"@adamjstewart In some sense that's the main motivation. But I would treat the two issues separately. I think the regression test I added makes sense on its own:
```python
@pytest.mark.regression('7941')
def test_regression_issue_7941(self):
    s = Spec('a foobar=bar ^b')
    t = Spec(str(s))

    s.concretize()
    t.concretize()

    assert s.dag_hash() == t.dag_hash()
```
as it is sensible to ask `s` and `t` to be always equal (even regardless of the string used to initialize `s`). Whether or not fixing the parser depends on whether or not we want `^@%+~` to be allowed characters within variants values. As far as I can see right now they are. If we want to remove them I'd agree though.",True,False,7,9775.483333333334
oracle/oci-cloud-controller-manager/193,2018-05-01T09:01:55Z,False,5ae82d0a6480fd2526a2b361,@jhorwit2 How did you get on with reproing this? Is it ready to go?,True,False,3,18769.716666666667
rust-lang_____rfcs_____2426,2018-05-01T11:34:55Z,True,rust-lang_____rfcs_____2426_____385651805,"I guess I'll be the one to make the highly subjective but critical point against this, since I think we need to start gathering opinions on it ASAP if it's going to get addressed properly:

**I'm still not convinced that `try {}` blocks and `throw` expressions pull their weight as language features.** In fact, the motivation section for this RFC made me _more_ skeptical that `throw` is worthwhile, since in all the examples it shows, we only appear to be saving a half-dozen or a dozen characters at most. With `?` we were saving not only a whole match block, but it was very common to see nesting of those match blocks (or the corresponding `try!()`s). I'm not aware of expressions like `return Err(error)` ending up ""nested"" in a way that helps motivate `throw`.

I know `try {}` blocks aren't part of this RFC, but I think `throw` only stands a chance of pulling its weight if it comes with the convenience of targeting the enclosing `try {}` block or the whole function if there is no enclosing `try {}` block, _and_ if `try {}` blocks are used so frequently that this is a big deal.

Also, the prior art section feels highly misleading, since this feature has nothing to do with implicitly-propagated exceptions, and many of the languages listed are using `throw` specifically for exceptions, not early-but-otherwise-ordinary returns. While I'd prefer to use a keyword without the exception baggage if we do this at all, I don't want to start that bikeshed yet because it's far more important to come to a consensus on whether any special sugar for ""non-exception throws"" pulls its weight. And that's only going to happen if we get a bunch of people here stating their personal opinion not on the optimal keyword, but of the value of having `try {}` and `throw expr;` features at all, regardless of their final syntax.",True,True,196,33091.05
spack/spack/7942,2018-05-01T11:41:22Z,False,5ae852646480fd212237865a,@tgamblin Should be done. Let me know if you want further changes.,True,False,7,9775.483333333334
rack_____rack_____1272,2018-05-01T12:09:57Z,True,rack_____rack_____1272_____385656965,"Interesting.

I already support completely transparent asynchronous web sockets in [falcon](https://github.com/socketry/falcon). It uses `rack.hijack` just fine. An example is given here: https://github.com/socketry/async-websocket/blob/master/examples/chat/config.ru

Of course with this model supporting SSE is also trivial.

Regarding the event driven model which is being exposed via `rack.upgrade`: I don't think exposing an event driven API is a great way to make systems asynchronous. It's kind of limiting.

Regarding the overall design - careful thought needs to be given to how HTTP/2 fits into this picture. Ideally, SSE, WebSockets, and other ""interactive"" streams, transit via reading from the request body and writing to the response body. That's the model which I feel works best with HTTP/2, where each request/response is encapsulated into a full duplex stream.",True,True,128,932194.1166666667
oracle/oci-cloud-controller-manager/193,2018-05-01T12:51:23Z,False,5ae862d36480fd21391f8e4e,@prydie i haven't been able to reproduce this yet even after making at least 200 nodes. Part of me thinks this was a transient issue. if i can't reproduce by end of the week i'm gonna close this,True,False,3,18769.716666666667
rack_____rack_____1272,2018-05-01T12:57:24Z,True,rack_____rack_____1272_____385664722,"Bare in mind that `async-websocket` doesn't support web sockets over http/2 yet, this is something I'll work on in the coming months.

This is also one of the challenges of implementing `rack.hijack` for HTTP/2. You need to be careful of what it means, exactly, to hijack a connection (or stream in the case of HTTP/2).",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-01T13:15:22Z,True,rack_____rack_____1272_____385668006,"I think the HTTP/2 layer is something that's handled only by the server. It shouldn't change the `rack.upgrade` semantics since it isn't one of the protocols / behaviors that should be handled by the application.

I think the idea is great because it decouples the application from any network logic.

While `hijack` solutions remove the server, changing the relationship from `network<=>server<=>application` to `network<=>application`, this approach keeps the application away from the network, keeping the initial (and desired) relationship intact.",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-01T13:21:57Z,True,rack_____rack_____1272_____385669300,"@boazsegev While I see where you are coming from, I think that your idea of a semantic model is much higher than what is exposed by HTTP.

Given the direction of HTTP/2, it's clear to me that the base HTTP semantic model is a full-duplex un-buffered stream of chunks. Whether you implement this with multiple HTTP/1 connections or HTTP/2 streams (which to me is the network layer), is irrelevant to the application.

The application simply sees a full duplex stream of chunks. That's the semantic model for the application. On top of this you can implement your desired web sockets, sse, and other interesting things, like streaming responses, and so on.

Your semantic model has a tight coupling with your desired application level protocols, but I think that's a very limiting design. For example, you can't implement general streaming responses like https://github.com/socketry/falcon/blob/master/examples/beer/config.ru",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-01T13:24:04Z,True,rack_____rack_____1272_____385669706,I think I should mention this discussion here since it seems relevant: https://github.com/rack/rack/issues/1148,True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-01T13:36:26Z,True,rack_____rack_____1272_____385672209,I'd like to point out that Rack is event based as are the WebSocket and SSE API/specs. The Rack hijack offers a streaming back door that is not addressed by the spec. This PR attempts to formalize an approach to using WebSocket and SSE that is consistent with the use pattern common in modern web applications with JavaScript front ends. It is not an attempt to get rid of the hijack option. There is certainly reason to continue support for hijacking but that should not be a reason to reject this PR.,True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-01T13:40:33Z,True,rack_____rack_____1272_____385673011,"@ioquatix , you're totally right, I can't implement that code... nobody can unless they implement `Async::Task` and add that as a Rack dependency.

As for streaming solutions: SSE **is** a streaming solution.

If you refer to video streaming or binary data requirements, WebSockets are perfect for that.

If you meant old-school HTTP streaming... yes, that's true. I'm not even sure that I should, but I'm aware that I don't. In fact, I'm pretty sure [the Rack model wouldn't be ideal for streaming](http://blog.plataformatec.com.br/2012/06/why-your-web-framework-should-not-adopt-rack-api/) anyway. ",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-01T13:42:55Z,True,rack_____rack_____1272_____385673490,"> I'd like to point out that Rack is event based

[I'm not convinced by this](https://github.com/rack/rack/search?utf8=✓&q=on_&type=)

If anything, rack is based on composable middleware. There is no event handling.

> The Rack hijack offers a streaming back door that is not addressed by the spec

Sorry, but this is complete dump trucks: https://github.com/rack/rack/blob/154ac5255323021ef74039e11a0a7376af889eaa/SPEC#L87-L96

> This PR attempts to formalize an approach to using WebSocket and SSE that is consistent with the use pattern common in modern web applications with JavaScript front ends

This is the guts of the matter. Why is this necessary? It's clearly already possible to do it - so we have to ask the question, do we need to formalise this in rack, or is there something simpler that we could formalise which allows more possibilities. We should accept or reject this PR based on the merits of what it adds to Rack, as a specification. I think there are better, more generic, options.
",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-01T13:47:57Z,True,rack_____rack_____1272_____385674547,"> @ioquatix , you're totally right, I can't implement that code... nobody can unless they implement Async::Task and add that as a Rack dependency.

I don't think I proposed that anywhere. I just said, with the current Rack spec, you can do it, and it scales well. We don't need to change the rack spec to have a great implementation of web sockets.

> As for streaming solutions: SSE is a streaming solution.

It only works in one direction and it only works in a very specific context. It's not general response streaming, as in `body.each {|chunk| ... peer.write(chunk) ...}`

> If you refer to video streaming or binary data requirements, WebSockets are perfect for that.

> If you meant old-school HTTP streaming... yes, that's true. I'm not even sure that I should, but I'm aware that I don't. In fact, I'm pretty sure the Rack model wouldn't be ideal for streaming anyway.

The Rack model is great for streaming responses. That's the whole point of the response body responding to `each`.",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-01T13:49:43Z,True,rack_____rack_____1272_____385674938,"By the way, I'm not trying to shit all over your PR, although it probably feels like it. Congratulations for making something, and implementing it and proposing it. Basically, I just don't see the logic of it though. I think there are better things in Rack that need to be addressed, and I think the direction of HTTP/2 confirms this.",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-01T13:54:33Z,True,rack_____rack_____1272_____385675990,"Of course Rack is event based. The trigger for all Rack code is the `#call(env)` callback where `env` is the encapsulation of the event that has occurred. That event being an HTTP request. After that you are correct, the handling is based on a middleware model.",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-01T13:55:27Z,True,rack_____rack_____1272_____385676197,"I'm paraphrasing slightly to focus on your question, forgive me and correct me if I misunderstood:

> Why is this necessary? ... is there something **simpler** that we could formalise which allows more possibilities.

I believe this is necessary because `hijack` is complex.

There's a difference between simple and easy. `hijack` is easy - but not simple.

It might simple for Rack and maybe even simple in the server, but it's a super complex solution that requires applications to add IO handling code.

The `hijack` pattern is an anti-DRY and anti-SOLID pattern that breaks away from object oriented approaches and requires applications to become familiar with the networking layers.

Sure, we might need to keep `hijack` around because some things are just impossible without it, but that doesn't make the best solution for everything. 

On the other hand, the callback approach in this PR is **simple**, but it's clearly not **easy**.

Servers will have to put in some work (less work than applications need to put in for `hijack`, but still).

However, the solution is simple and follows both DRY and SOLID principles.

The callback approach isn't a generic solution, it's just good for things that lend themselves to using callbacks, but this is the advantage of this approach.

IMHO, This is a perfect fit for everything callback related and it's extendible (if WebSockets 2.0 come around, nothing needs to be changed on the Rack/Application side, just the server).",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-01T14:09:44Z,True,rack_____rack_____1272_____385679604,"@ioquatix , I was looking through the falcon repo and you seem to have done great work there.

I understand your concerns and your wish to have a better solution. It seems to me that you yourself put in a lot of time and effort into improving the sated of affairs and making things easier and better for everyone.

I appreciate your approach and I find myself slightly surprised by the challenges you raise against this PR.

It seems to me that you're using similar semantics with different method names (i.e., your WebSocket `next_message` seems to block the current thread, allowing other threads to handle other server events until a new message becomes available... or maybe I misunderstood).

Sure, my implementation is evented and your implementation is multi-threaded, but both lend themselves to the same approach - application side ""callbacks"".

Your implementation could just as easily remain threaded and hide the `next_event` loop away so it calls the correct callback.

I'm not sure I understand your reservations.",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-01T14:30:46Z,True,rack_____rack_____1272_____385684707,"> I believe this is necessary because hijack is complex.

Those are all really good points and I appreciate your thinking.

To be honest, in falcon, implementing your proposed API wouldn't be more than about 100 lines of code, perhaps less. So, it's not complicated to implement, because falcon already has a well defined and good concurrency model. That's the context in which I'm thinking about your PR, by the way.

Whether the complexity is in the server, or the application code, is an interesting point and one that I can agree with to a certain extent. I don't think there is a strong argument either way.

> @ioquatix , I was looking through the falcon repo and you seem to have done great work there.

Thanks, I can tell we are going to get along well now.

> I understand your concerns and your wish to have a better solution. It seems to me that you yourself put in a lot of time and effort into improving the sated of affairs and making things easier and better for everyone.

Yes, but I still haven't made a 1.0 release yet. It's coming soon hopefully.

> I appreciate your approach and I find myself slightly surprised by the challenges you raise against this PR.

Fair enough.

> It seems to me that you're using similar semantics with different method names (i.e., your WebSocket next_message seems to block the current thread, allowing other threads to handle other server events until a new message becomes available... or maybe I misunderstood).

That's almost right. Async doesn't use threads, it uses fibers which are cooperatively scheduled. They have much less overhead than threads.

> Sure, my implementation is evented and your implementation is multi-threaded, but both lend themselves to the same approach - application side ""callbacks"".

Async is event driven. When a fiber performs an operation that would block, it yields back to the reactor which resumes once the operation can continue.

I deliberately try to avoid callbacks because in my experience they lead to callback hell. The difference is that with callbacks you need to use variables to track state, and each time the callback is invoked you have to process that state to figure out what to do next. With fibers, you naturally resume where you were with your stack intact. You can implement complicated state machines with ease.

> Your implementation could just as easily remain threaded and hide the next_event loop away so it calls the correct callback.

Yes, this is feasible.

> I'm not sure I understand your reservations.

I like this PR from the point of view that it tries to provide some generic interface for web sockets and server sent events. Making a generic interface for that is both simple and difficult. I admire the you've done it and implemented it.

My main reservation is that your proposed API is incomplete. The rack specification as it stands, is really simple and allows for a lot of flexibility. What you've proposed is an extension which fundamentally encodes a model for concurrency into Rack, something that it hasn't had except in a very precise location (response body `#each`).

To look at it another way, `falcon` passes the rack linter, yet it implements real-time streaming requests and responses. So, within the current confines of Rack, we can enjoy these advanced features.

Your proposed API exposes an incomplete model for concurrency and the word that comes to my mind is dangerous. What happens if you stick a `RestClient.get` into `on_message` - does it stall the entire server? How do you communicate between web sockets (in your PR I assume you'd need a shared backend like redis)? Whether or not you agree with it, the node model of single process, multiple connections is one that works very well - you can have an array of web socket connections, send messages to all of them, etc. This model can work well with Rack as shown by `falcon` (e.g. https://github.com/socketry/async-websocket/tree/master/examples/chat).

Whatever way you cut it, Ruby has a pretty frustrating model for concurrency right now (and IO too, but it's slowly getting better). People are working on it, myself, others (Eric, https://bugs.ruby-lang.org/issues/13618), ko1 (guilds) and I have no doubt that good things are coming to this space.

But, Rack, right now, has to be a specification that works with Ruby as it is today. If `Thribers` become part of Ruby (I personally hope not), the way servers should implement web-sockets should be totally different. It might be possible to make a MVP, like this PR, but I think it's loading Rack up with too much complexity.

Personally, what I think we need to focus on is making `rack.input` better suited for reading from HTTP/2 streams, and response `body` better suited for generating streaming responses. Finding the right model here should allow for SSE, WebSockets, and whatever other things",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-01T15:04:37Z,True,rack_____rack_____1272_____385693709,"@ioquatix interesting, thanks for taking the time to explain.

I love the fiber approach, as it hides away the event reactor and make things more comfortable to manage.

> My main reservation is that your proposed API is incomplete.  

Yes, you are right that there are concerns related to the proposed approach. It doesn't deal with IPC or client<=>client communications. It also allows developers to violate multi-threading best practices.

However, this proposal seems pretty balanced. It doesn't enforce a huge change on existing servers and the ""missing"" pieces are easily complemented by existing solutions (Redis being just one of them).

Personally, I implement pub/sub in iodine to ""fill the gap"". However, I'm not sure this should be part of the specification since other developers might wish to ""fill the gap"" using a different approach, such as limiting the server to a single process and using an array.

> What you've proposed is an extension which fundamentally encodes a model for concurrency into Rack...

I'm not sure I understand this part.

The server can be a single threaded server, a thread-per connection server, a fiber based server and practically any type of concurrency model can be implemented.

I'm not sure I see where the PR requires a specific concurrency model.

> What happens if you stick a `RestClient.get` into `on_message` - does it stall the entire server?

That really depends on the server, I guess.

What happens if I call `sleep(10)` while handling an HTTP request (except getting fired, that is)?

It's probably the same answer.

Iodine, for example, supports multi-threading and cluster mode (pretty much the same model as Puma). Agoo (I think) supports multi-threading.

For both of these servers I would recommend avoiding blocking calls within the thread, but they both offer some level of protection before experiencing DoS.

I don't use fibers so I'm not sure how they would react to this scenario. Hopefully they will react better.

Either way, I doubt the question of having fibers replace threads is part of the discussion here.

> Whether or not you agree with it, the node model of single process, multiple connections is one that works very well...

I agree with it, but I don't see why that matters.

Even the node model needs to be adjusted when scaling horizontally.

All models have properties that define their strengths and weaknesses.

IMHO, this PR proposes a mechanism that's independent of model used by the server, making it flexible enough for everyone to implement.",True,True,128,932194.1166666667
rust-lang_____rfcs_____2426,2018-05-01T16:35:15Z,True,rust-lang_____rfcs_____2426_____385717602,"I approve.

---

In response to @Ixrec's concern:

> I'm still not convinced that try {} blocks and throw expressions pull their weight as language features.

I would say two things:

First, I don't consider this feature to only make sense if we have `try` blocks. They seem orthogonal to me. As discussed in the RFC, there is a definite need to be able to unconditionally produce an error, even today -- and getting the precise formula correct is tedious. This is why error-chain and failure both include `bail!` macros.

Second, even if we are not sure we want something, if we think that there is a ""pretty good chance"" that we do, then it is worth reserving the keyword. In this case, I think the answer is definitely yes: both because there is prior art in favor and because there are a lot of folks who have spoken up in favor of `throw` or something similar in various threads and informal discussions. ",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-01T17:20:54Z,True,rust-lang_____rfcs_____2426_____385729954,"@Ixrec 

> [..] we only appear to be saving a half-dozen or a dozen characters at most.

While a bonus of `throw expr` is brevity, in particular for generic cases where it substitutes
`return Try::from_error(expr)`, this is not the main motivation. Instead, the main benefit is better highlighting of exceptional cases via distinct syntax. This improves the *at-a-glance* readability of code.
Also, for me, `throw expr` telegraphs much better than `return Err(expr)` the semantic intent of the code and the author who wrote it.

> [..] targeting the enclosing `try {}` block or the whole function if there is no enclosing `try {}` block, [..]

Just to clarify, this is the semantics of `throw expr` in this RFC. :)

> [..] _and_ if `try {}` blocks are used so frequently that this is a big deal. And I don't think it's been established that there's a clear consensus on`try {}` blocks themselves being worthwhile (despite their presence in the original `?` RFC).

As @nikomatsakis puts it, `throw` is beneficial even without `try { .. }`, for reasons I mention above. However, I do think that `try { .. }` and `throw` together do enhance each other. 

I would also say that the `try { .. }` RFC, #2388 which is in FCP should count for something. Assuming the RFC gets merged (in one day), this means that `try { .. }` has been confirmed as useful in two separate RFCs including the original one you reference.

> Also, the prior art section feels highly misleading, since this feature has nothing to do with implicitly-propagated exceptions,

Neither does `try { .. }`, but two consecutive RFCs has advocated that we have *manually propagated exceptions* and that the benefit from familiarity outweighs the implicit / explicit distinction.
My view is that `throw expr;` would play the same role in both Java and Rust despite there being semantic differences.
Therefore, the prior art is, in my view, not misleading at all, assuming we remember the semantic difference between Rust and Java here. The section on drawbacks does discuss these differences.

> and many of the languages listed are using `throw` specifically for exceptions, not early-but-otherwise-ordinary returns.

Many, but not all. Haskell and Idris use `throwError` and `raise` respectively by convention despite preserving manual propagation (via monads) and *errors as values* semantically.
Swift is another example of not using Java style exceptions but still having `throw`.

> While I'd prefer to use a keyword without the exception baggage if we do this at all, I don't want to start that bikeshed yet because it's far more important to come to a consensus on whether any special sugar for ""non-exception throws"" pulls its weight.

I disagree with the notion that `Err(x)` is not an exception and thus that `throw` would be ""non-exception throws"". To me, `Err` denotes the *exceptional case* while `Ok` denotes the normal case.

On the choice of keyword, I think we should pick something that is consistent with `try { .. }` and that exceptional terminology.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-01T18:25:14Z,True,rust-lang_____rfcs_____2426_____385748178,"> it is worth reserving the keyword

:+1:

This is my strongest feeling in this area.  Some sort of `throw` expression has been discussed for at least three years; now that we're making an epoch it seems clear we should reserve the keyword.  In the absolute worst case it's trivial to un-reserve it later, as that doesn't need an epoch.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-01T19:08:49Z,True,rust-lang_____rfcs_____2426_____385760213,"Thanks, @Centril for this fine RFC! :1st_place_medal: 

> On the choice of keyword, I think we should pick something that is consistent with try { .. } and that exceptional terminology.

Here's my comment: I think we should find a better keyword than `throw`. I do like `try {...}`, but `throw` presupposes a subsequent `catch() {...}` block - an unlikely route for Rust - and `catch` is not suitable because success values are not *thrown*. Only exceptions are thrown.

I'd like to stress this point. Our experimental `do catch` is nothing like the `catch() {...}` of other languages. Our `do catch` is really a `try {...}`. 

We need a keyword that clearly expresses the occurrence of a failure, and that's consistent with a failed attempt, a failed *try*.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-01T19:50:55Z,True,rust-lang_____rfcs_____2426_____385770633,"@repax 

> Thanks, @Centril for this fine RFC! 🥇

I do like the appreciation! 😍

> I think we should find a better keyword than `throw`.

Ideas? 😄

Here are some synonyms of `throw`:

+ http://www.thesaurus.com/browse/throw
   `hurl` seems the only semi-reasonable one.

> I do like `try {...}`, but `throw` presupposes a subsequent `catch() {...}` block

How so? I understand that you might say: *- ""I **threw** the ball and my dog **caught** it""*, but the meaning of `throw Foo` seems intuitive even without a `catch` block due to familiarity.

> an unlikely route for Rust

I'm wary of making such predictions either way since it is difficult; We can give technical and non-technical arguments for why `catch` should or should not be added to Rust, but extending this to prediction seems fraught with perils.

> We need a keyword that clearly expresses the occurrence of a failure, and is consistent with a failed attempt, a failed *try*.

This way of framing it seems to suggest `fail` as a keyword which fits naturally with `try` if you say *""you might try, but you might fail""*. It is also a good candidate since the semantics should be scrutable by someone who has never seen `fail expr` before. But there are a few drawbacks with `fail`:
1. There's a crate named `fail` that has reverse dependencies (the rev deps are all by one author however).
2. It is too close to `bail!` (which can also be seen as a pro).

All in all, I think @nikomatsakis put it well on #2388:

> **Rust has a lot of concepts to learn.** If we are going to succeed, it's essential that people can learn them a bit at a time, and that we not throw everything at you at once. I think we should always be on the lookout for places where we can build on intuitions from other languages; it doesn't have to be a 100% match to be useful.

This suggests to me that `throw` is the right choice.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-01T20:20:53Z,True,rust-lang_____rfcs_____2426_____385778209,"We do need to tell people ""Rust does not have exceptions"", so using `throw` creates confusion, while `fail` actually nails it rather well.  I would not worry about one crate name, but maybe numerous traits have `fail` methods, and making it contextual sounds suboptimal.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-01T20:22:37Z,True,rust-lang_____rfcs_____2426_____385778639,"Back before 1.0, `panic` used to be called `fail`. It was always kind of confusing what was meant when someone said ""and then function xyz failed,"" because they might mean it in the general ""opposite of succeed"" sense or in the ""unwind the stack"" sense.

In this case, I don't think that confusion will come up. While there are still several ways to fail, they all tend to do the same thing as `fail` would- return an error value. So I kind of like `fail` here: it fits well with `try`, it fits well with the `try_` naming convention, it avoids `throw`'s potential confusion with `catch_panic`, and if `Failure` is standardized it will match that as well.

I'm not really opposed to `throw`, though it doesn't sit as well with me as `try`. It implies non-local control flow a bit more strongly to me than `try` does, as `try` is more about *containing* control flow while `throw` is more about *initiating* it.

I also have a general sense of uneasiness about introducing too many `return`/`break`/`continue`-alikes, when they all feels kind of ad-hoc. I like the extension of `break` to loops and blocks, but `throw`/`fail` doesn't quite feel as coherent, especially in such an expression-based language. You can `return` and `break` with values, but `throw`/`fail` only covers errors- there's no way to early-out of a `try` block with a success value, and I'm not sure we want *yet another* keyword to accomplish that.

But at the same time I do think `Err(x)?` is kind of obnoxious, and `return Err(x)` doesn't do error conversion. Maybe we just need to hook up `return`/`break` to the `Ok`-wrapping and error-conversion stuff somehow? Especially considering a hypothetical future `try fn` syntax where early `return`s should do `Ok`-wrapping.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-01T20:45:44Z,True,rust-lang_____rfcs_____2426_____385784742,"@burdges 

> We do need to tell people ""Rust does not have exceptions"", so using `throw` creates confusion, [..]

Surely no more so than than `try { .. }` does?

> I would not worry about one crate name, but maybe numerous traits have `fail` methods, and making it contextual sounds suboptimal.

Here's a fairly accurate check I think: https://sourcegraph.com/search?q=repogroup:crates+case:yes++\b((let|const|type|)\s%2Bfail\s%2B%3D|(fn|impl|mod|struct|enum|union|trait)\s%2Bfail)\b+max:400

The breakage doesn't seem too extensive.

---------------------------

@rpjohnst I agree with your reasoning on `fail`, it is a good candidate. I kinda like `throw` 60% and `fail` 40% but I could certainly be persuaded in favor of `fail`.

> [..], it avoids `throw`'s potential confusion with `catch_panic`, [..]

This one seems unlikely? I think at least any confusion here is quickly fixable in Rust's learning material.

> I also have a general sense of uneasiness about introducing too many `return`/`break`/`continue`-alikes, when they all feels kind of ad-hoc.

`throw` being a bit ad-hoc for initiating exceptions may be a good thing tho?
Having a built-in DSL tailored to error handling seems warranted given how fundamental that sort of logic is :)

> there's no way to early-out of a `try` block with a success value, and I'm not sure we want yet another keyword to accomplish that.

True; I agree this is a problem, but let's not let the good be the enemy of perfect?
I don't know how I feel about it, but it has been suggested that `return expr` inside `try { .. }` could be the success version of `throw expr`; This fits with the idea that `try fn` is more or less just `fn ... { try { .. } }`.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-01T20:49:34Z,True,rust-lang_____rfcs_____2426_____385785743,"@Centril

>> an unlikely route for Rust
> I'm wary of making such predictions

Why not `catch`? Because errors are values and we already have `match`, which does a marvellous job.

Why not `throw`? Because what you may *throw* you *catch*. If however, `throw` as a keyword is accepted by the Rust core team then I recommend that `catch` is reserved too. They go together.

I'd prefer `fail` though. Like `throw`-`catch` go together, `try`-`fail` go together, imo, and I think its meaning obvious at a glance. ",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-01T21:34:07Z,True,rust-lang_____rfcs_____2426_____385797665,"@repax 

> Why not catch? Because errors are values and we already have `match`, which does a marvellous job.

Sure; but `catch` could be even more great; `match` has two problems in this context:
1. it requires you to either:
   1. create a temporary binding and then match: `let foo = try { .. }; match foo { .. }`
   2. write `match try { .. } { .. }` which requires holding more in working memory than
      `try { .. } match { .. }`. Speaking of which, this expression form might be a good idea for more natural reading flow?
2. It requires you to destructure `Ok(x) => EXPR` and `Err(x) => EXPR` while `catch` can let you destructure `x` inside `Err(x)` immediately. Of course, matching on the constructors of `Result<T, E>` also informs type inference for `try { .. }` so there's an upside too.

> Why not `throw`? Because what you may *throw* you *catch*. If however, `throw` as a keyword is accepted by the Rust core team then I recommend that `catch` is reserved too. They go together.

You don't need to reserve `catch` to get `try { .. } catch { .. }` working :)
All that is needed is to check for `try { .. } $ident { .. }` throw a parsing error, and then introduce `try { .. } catch { .. }` later.

Regarding *""what you may throw, you may catch""*, while I think that makes sense in English, would `throw` without `catch` handles be confusing to a Java programmer introduced to Rust? I have doubts that this is true.

> `try`-`fail` go together, imo, and I think its meaning obvious at a glance.

This seems true to me, I can't argue with it. :)",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-01T22:28:17Z,True,rust-lang_____rfcs_____2426_____185351200,"I've got at least 4 results from https://sourcegraph.com/search?q=repogroup:crates+%5Cbfn%5Cs%2Bthrow%5Cb. 

All of them are JS bindings (e.g. [servo/servo](https://github.com/servo/servo/blob/245dcc2118c88f7b51d65c124a85d74dd356a77a/components/script/dom/bindings/interface.rs#L91) and [neon-bindings/neon](https://github.com/neon-bindings/neon/blob/d96c418ba86ff72c1760e472e15fe8438061b5ec/src/js/error.rs#L14)), but I guess it is because of sourcegraph's selection of repositories.



",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-01T22:40:50Z,True,rust-lang_____rfcs_____2426_____185353295,"Strange. I tried the following query before: https://sourcegraph.com/search?q=repogroup:crates+case:yes++\b((let|const|type|)\s%2Bthrow\s%2B%3D|(fn|impl|mod|struct|enum|union|trait)\s%2Bthrow)\b+max:400 and it timed out, but now it shows the results you reference.

Anyways, the breakage slightly is less extensive than for `raise` and `fail`; but all keywords in this space break minimally.

I'll update the RFC with this new info :)",True,True,196,33091.05
rack_____rack_____1272,2018-05-01T23:05:24Z,True,rack_____rack_____1272_____385816162,"> However, this proposal seems pretty balanced. It doesn't enforce a huge change on existing servers and the ""missing"" pieces are easily complemented by existing solutions (Redis being just one of them).

How do servers support your proposal? By pulling in `websocket-driver`? It's a large surface area, and it does get pretty tricky. I wouldn't call it balanced - it's heavily biased towards implementing WebSockets.

> I'm not sure I understand this part.
> The server can be a single threaded server, a thread-per connection server, a fiber based server and practically any type of concurrency model can be implemented.
> I'm not sure I see where the PR requires a specific concurrency model.

Invoking a Rack app is for the most part trivial. It's a function call that returns a result. No real model for concurrency is needed for this basic definition. You scale up by executing the function on different CPU cores, but fundamentally you can't change it to a non-linear event driven callback model or some other asynchronous model (`async` provides transparent inversion of control back to the reactor, but it doesn't change or require changes in flow control).

This proposal embeds non-linear flow control into the Rack spec. What I mean is, it's impossible to implement the given proposal without some kind concurrency. I'm not saying that any particular model for concurrency is being encoded, but just that by your approach a model for currency is now necessary.

This has a huge down-stream effect, since all code that depends on Rack now has to be aware of and capable of asynchronous execution. For example, how would you change `rack-test` to support this PR?

I think this equally applies to `rack.hijack`, and I also don't like that approach, but it's pretty much set in stone now. For example, how do you implement `rack.hijack` with HTTP/2? It's probably not possible in the general sense.

> What happens if I call sleep(10) while handling an HTTP request (except getting fired, that is)?

In `async` provided you call `task.sleep(10)` the fiber defers for 10 seconds. It doesn't block the server. In `puma` it would block the worker thread.

Have you tried using ActiveRecord in your `on_message` callback? How did that scale for you? My experience is that the ActiveRecord `ConnectionPool` design is very poor for highly concurrent workloads. These are very tricky issues to get right (although you can do it as shown here: https://github.com/socketry/async-postgres and it does scale up pretty well).

> [regarding node] I agree with it, but I don't see why that matters.
> Even the node model needs to be adjusted when scaling horizontally.

Because with your proposed API, implementing a basic Node style server like this is not possible. Right from the get go you need additional machinery to do pub/sub or other kinds of communication. Even the situation with streaming responses is not improved without additional work. It's a very specific proposal designed for a very specific kind of scalability. It's far too specific IMHO.

What we need is a proposal that better aligns with HTTP/2 streams since it's clear to me that it should be the future of HTTP and Rack. It should have a clear model for concurrency that fits with the existing multiprocess/multithread/worker implementations - i.e. reading from `rack.input` might block the request and writing to the response body might block the request due to buffering. On top of that, as already demonstrated, you can implement highly scalable asynchronous servers.

Streaming request and response bodies in `falcon` directly improve the latency of existing apps with no changes. Here is an implementation of `rack.input` which streams (and buffers) the input: https://github.com/socketry/falcon/blob/master/lib/falcon/adapters/input.rb

But this PR requires significant changes to existing apps for any kind of benefit. Not only that, but it only supports a very specific kind of scalability with an under-specified concurrency model (i.e. what happens if you block in `on_message`).

Let me finish with the following question: Do even think there is a future for WebSockets? https://datatracker.ietf.org/doc/draft-hirano-httpbis-websocket-over-http2/ hasn't been touched since 2014. There is an interesting write up here: https://daniel.haxx.se/blog/2016/06/15/no-WebSockets-over-http2/ - WebSockets are something which has never been a good fit for the request/response paradigm and that's something which fundamentally underpins Rack.",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-01T23:33:12Z,True,rack_____rack_____1272_____185361287,"This will break method caches.  I'd prefer a solution that doesn't lean on runtime method extension.  Maybe something like this:

```ruby
class MyWSEObject
  def initialize io
    @io = io
  end

  def on_open
    @io.write(""neat"")
  end
end

app = lambda do |env|
  env['rack.upgrade'] = MyWSEObject.new(env['rack.wse.object'])
end
```",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-01T23:38:09Z,True,rack_____rack_____1272_____185361951,"```
class MyWSEObject
  def on_open(io)
    io.write(""neat"")
  end
end

app = lambda do |env|
  env['rack.upgrade'] = MyWSEObject.new
end
```

would be simpler",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-01T23:45:03Z,True,rack_____rack_____1272_____185362944,That would be fine too. 😄 ,True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-01T23:49:05Z,True,rack_____rack_____1272_____185363522,"So, the next question, is it a good idea to write into the request `env` to essentially send a response? To me, that's confusing. Perhaps at best it could be something like

```ruby
if upgrade = env['rack.upgrade']
  return upgrade.call(MyWSEObject.new)
end

return [400, {}, []]
```
",True,True,128,932194.1166666667
rust-lang_____rfcs_____2426,2018-05-01T23:55:03Z,True,rust-lang_____rfcs_____2426_____385824283,I've now added some of the recent discussion to the RFC's text.,True,True,196,33091.05
rack_____rack_____1272,2018-05-02T00:01:11Z,True,rack_____rack_____1272_____385825312,"Hi all! Websockets and rack again, let's do this!

Up front, last time this came up, I prototyped it in puma (https://github.com/puma/puma/pull/1054). It was an experiment we didn't merge in, but it totally works and we might revisit it.

The API of on_* methods for events is totally fine, no issue there.

Extending the object to decorate it with a write method is pretty ugly, from both an implementation statement as well as a performance one. Passing an object that implements #write to the on_* methods to write back is less code and performs better.

If frameworks want to take that object and use extend to make it's methods available on the handler, that's totally fine and up to the framework. Rack should not do that on it's own, it should provide a lower requirement.",True,True,128,932194.1166666667
rust-lang_____rfcs_____2426,2018-05-02T00:02:58Z,True,rust-lang_____rfcs_____2426_____185365457,"Or, go the other way around- let people `break` out of `try` blocks. On its own, this is probably a bad idea, as `try` blocks are not loops, but it's possible `'label: try { .. break 'label value; .. }` would be sufficient. For that matter, maybe *any* `return` *or* `break` that leaves the `try` block should be `Ok`-wrapped? For example:

```rust
fn f() -> Result<T, U> {
    try {
        let t: T = get_a_t()?;
        return t;
    }
}
```

Maybe that's even worse.",True,True,196,33091.05
rack_____rack_____1272,2018-05-02T00:05:03Z,True,rack_____rack_____1272_____385826050,"You should be able to opt to the ""type"" of upgrade you are after

I can already see 2 use cases that this protocol does not help at all and will be stuff on hijack. 

1. https://github.com/discourse/discourse/blob/master/lib/hijack.rb 

With the current example use of:

https://github.com/discourse/discourse/blob/master/app/controllers/user_avatars_controller.rb#L71-L78

2. Messagebus also controls transport via: https://github.com/SamSaffron/message_bus/blob/master/lib/message_bus/client.rb and there is no clean protocol here for a ""chunked encoding"" http req short of SSE (which happens to fit sort of except for demanding `""text/event-stream""` as the content type

I would recommend

```
class Raw
  def type
      :raw  # or :sse or :socket
   end

  def on_open(io)
      # custom header support
      io.write_headers({  }) 
     
      # transparent chunked encoding support
      io.write_chunk(""a chunk"") 
  end
end

 env['rack.raw'] = Raw.new 
```

I am not super happy about `rack.upgrade` as a name cause it very tied to web sockets kind of terminology",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-02T00:08:28Z,True,rack_____rack_____1272_____185366203,"TBH it doesn't really matter to me.  Unfortunately though, `env` is really the only way that middleware can communicate.  So writing to `env` is the only way that one middleware could indicate to the next ""I'm responding by writing to a websocket"".  If the intention is that any ""callable"" (middleware / app) that sets the WSE object must not call anything else in the middleware chain, then that needs to be explicitly stated in SPEC.",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-02T00:10:43Z,True,rack_____rack_____1272_____385826927,"Rather than `env['rack.raw'] = Raw.new`, why not just `return [200, {}, Raw.new]` and have servers do different things depending on `#type`.",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-02T00:11:11Z,True,rack_____rack_____1272_____385827000,"Another thing that makes me somewhat uneasy here is that it still suffers from the very ugly trait that deep down the middleware stack someone returns rubbish to all the rest of the pieces that then gets thrown in bin.

So... to mitigate this very bad problem I would recommend:

```
  # only gets called AFTER everything walked down the middleware stack. 
  def on_open(io, env, response)
      status, headers, result = response

      # custom header support
      io.write_headers({  }) 
     
      # transparent chunked encoding support
      io.write_chunk(""a chunk"") 
  end
```

Overall I am leaning toward not even mucking with rack long term for a lot of this stuff and moving to fiber servers that can pause and resume more cleanly, multiplexing tons of connections cleanly. A big blocker there though is the MRI does not let you ship fibers between threads now which is not idea. 

That said this works ... so ... yay ?https://github.com/SamSaffron/performance/blob/master/fiber_server/server.ru

",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-02T00:11:36Z,True,rack_____rack_____1272_____185366805,"I understand the need to maintain the method caches, especially as we move towards JIT compilation.

As far as iodine is concerned, I am totally flexible on all points as long as the negative impact on performance isn't too high.

On the other hand, please consider a number of good reasons to prefer the `extend` approach over the `on_open(io)`:

1. It's likely that the method caches will break only the first time a callback object is returned.

   Assuming the same object class is used for all callback objects, the `extend` operations becomes a no-op, keeping the method caches intact (since the class was already extended).

2. Using an `io` object adds an obvious requirement for the `io` object to be stored somewhere by the receiver (otherwise, `write` could never get called).

   This makes the `on_open(io)` method a requirement rather than optional and it adds a required use-pattern (`def on_open(io); @io=io; end`).

   IMHO, although not always the case, this is a strong indication of a design flaw (requiring the user to complete the design).

3. For C extensions, there's double the amount of objects per connection. For Ruby implementations it's an increase of 150% in object count (I implemented in C, so my Ruby estimates are theoretical assuming 3 objects: raw IO, wrapper IO and callback objects).

   This puts an extra burden on the memory management system and hastens the (inevitable?) memory fragmentation issue that many Ruby servers suffer from.

4. As a side note, this might make future extensions harder, since future gem authors wouldn't be sure how to access the `io` object from within a connection.

I noticed that @evanphx 's experience is the opposite of mine.

While I found reduced performance and higher complexity when using an `io` object, @evanphx reports improved performance when using this approach.
",True,True,128,932194.1166666667
rust-lang_____rfcs_____2426,2018-05-02T00:11:48Z,True,rust-lang_____rfcs_____2426_____185366849,"My main concern wrt. re-purposing `break` is this:

```rust
try {
    // ..
    loop {
        // Are we breaking the loop or the try?
        // Perhaps it is obvious to say ""the loop"", but is it really?
        break 3;
    }
    // ..
}
```

> Maybe that's even worse.

Probably, yeah.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-02T00:13:18Z,True,rust-lang_____rfcs_____2426_____185367044,"Regarding break with label:
```rust
'label: try {
    ..
    break 'label value;
    ..
}
```

That seems workable, but it is not particularly ergonomic.",True,True,196,33091.05
rack_____rack_____1272,2018-05-02T00:15:31Z,True,rack_____rack_____1272_____385827745,"Also... one extra big question here is ... do we want to bloat all of our Rack servers out there with all this extra logic when simply adding a single dependency to middlware that implements this today is already feasible on top of hijack? 

should we not start with `gem install magic_generic_web_socket_support_middleware` prior to pushing on implementers to all implement the same thing? ",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-02T00:16:39Z,True,rack_____rack_____1272_____185367473,"As for the `.call`, I find it confusing.

Let's assume I want to upgrade to SSE (or WebSockets) as well as set a cookie.

When using `call` (besides the extra Proc object), it's unclear to me when the `call` is actually performed. Is the upgrade immediate? Are the headers in the final response are sent?

Passing an object is both cheaper (no Proc object) and, I feel, simpler.

As for `[200, {}, MyObject]`, I think this breaks existing servers, so I'm pretty sure it wouldn't work as smoothly.",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-02T00:16:48Z,True,rack_____rack_____1272_____385827949,"> A big blocker there though is the MRI does not let you ship fibers between threads now which is not ideal.

Fibers are actually bound to the thread that creates them by definition.

Some designs use a more generic coroutine structure (e.g. green threads) which you can move between threads. If you are interested in this, you might find https://bugs.ruby-lang.org/issues/13618 interesting.

If you are interested in Fiber based servers, check out falcon. https://github.com/socketry/falcon/blob/master/examples/beer/config.ru and https://github.com/socketry/ which is a complete stack of asynchronous components.

> Also... one extra big question here is ... do we want to bloat all of our Rack servers out there with all this extra logic when simply adding a single dependency to middlware that implements this today is already feasible on top of hijack?

Yes, I strongly agree with this, and the answer IMHO is no.",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-02T00:17:48Z,True,rack_____rack_____1272_____185367625,"> As for [200, {}, MyObject], I think this breaks existing servers, so I'm pretty sure it wouldn't work as smoothly.

As long as MyObject responds to `#each` as a fallback, it won't break existing servers.",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-02T00:18:12Z,True,rack_____rack_____1272_____185367678,"> Using an io object adds an obvious requirement for the io object to be stored somewhere by the receiver (otherwise, write could never get called).

No.  You pass an `io` object to every callback.  Then the WS handler doesn't need to store anything.

> For C extensions, there's double the amount of objects per connection.

Why is this?",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-02T00:18:43Z,True,rack_____rack_____1272_____185367739,"@tenderlove we debated which approach was better. I'd be okay with either honestly but as @ioquatix suggested, an argument to `#on_open` would be better to make sure the connection had been established. Anyway we thought extending the handler object eliminated the need for the developer to have to keep track one one less object.",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-02T00:19:49Z,True,rack_____rack_____1272_____185367863,"Blowing away method cache is a major performance issue, please don't underestimate it.",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-02T00:21:34Z,True,rack_____rack_____1272_____185368111,@ioquatix having the `env['rack.upgrade']` respond to some kind of registration method would be a reasonable approach in my opinion. I feel a little uncomfortable having it provide a return value since it makes it less obvious what is being returned but my feelings are not very strong on that. ,True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-02T00:21:44Z,True,rack_____rack_____1272_____185368125,"@ohler55 ya, I think passing the IO object to every callback (as @ioquatix suggested) is my preferred approach.",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-02T00:24:14Z,True,rack_____rack_____1272_____385829111,@evanphx I appreciate you opinions and it is good to have a different perspective than what we had. I can't agree that the performance would be any different in one case over the other though. The other points are certainly worth considering.,True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-02T00:25:34Z,True,rack_____rack_____1272_____385829346,"yes, I am across Eric's work there and hope we get something in MRI, I also think Koichi is open to having a protocol for allowing to move Fibers between threads, and I want to see proper green threads back. 

Also seen Falcon, I agree that a fiber based server is very very appealing for a bunch of workloads it simplifies so much of the mess we have now with pure threaded servers and slow requests, especially cause you can walk down the middleware stack properly in the right time. ",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-02T00:26:12Z,True,rack_____rack_____1272_____385829465,"> should we not start with gem install magic_generic_web_socket_support_middleware prior to pushing on implementers to all implement the same thing?

TBH I'm OK with it if it's an opt-in.  This proposal seems simple enough that someone could implement a ""hijack"" based approach using a middleware.  The upside of formalizing it is that if webservers want to implement a high performance version of `magic_generic_web_socket_support_middleware` can.  I think of it as similar to `X-Sendfile`: yes we have a middleware that can do it, but webservers can implement an accelerated version since we have the standard.",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-02T00:27:05Z,True,rack_____rack_____1272_____185368813,"> > For C extensions, there's double the amount of objects per connection.

> Why is this?

@tenderlove , I assume you know that the C server doesn't need an IO object, it uses a simple integer to keep track of IO.

This means that a C extension just needs to keep the callback object itself and add a secret variable to that object with the socket number.

This secret variable isn't possible in Ruby, but C extensions are allowed to create them. Since that variable is a Number, it's very small (it doesn't create an Object in the ObjectSpace realm and it's immutable).

This means a single object in C (the callback object). If we add the IO object, it's two objects - a 200% increase in object count.

In Ruby, we will have the callback handler, the raw IO object (both pre-existing) and an IO wrapper, a 150% increase in object count.",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-02T00:30:35Z,True,rack_____rack_____1272_____385830066,"@SamSaffron in regard to on_open taking an io, env, and repsonse. By the time `on_open` is called the connection has already been established. Since it is either WebSocket or SSE a response and env are no longer relevant. The intent was to allow middleware to decide if a connection shoulc be established based on the return status in the `#call(env)` method that asked for the upgrade.",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-02T00:32:50Z,True,rack_____rack_____1272_____385830427,"My issue though is that encourages a whole bunch of code duplication... say Puma takes this on now it needs to ship with a websocket protocol as a strong dependency, or worst still it will carry its own duplicate websocket protocol thingy. Chunked encoding is easy enough but there is a fair amount of code to do websocket upgrade and encoding depending on how far you want to take it and how many protocol variants you want to support. 

",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-02T00:34:45Z,True,rack_____rack_____1272_____385830745,"I only think `on_open` should take an IO. It should be the responsibility of the instance to store the IO IMHO. This way you can call `@io.write` at any time, e.g. from a timer.",True,True,128,932194.1166666667
rust-lang_____rfcs_____2426,2018-05-02T00:35:37Z,True,rust-lang_____rfcs_____2426_____185369911,"While I'm a fan of _having_ label-break-value, I see it mostly as a way for macros to provide customized flow control constructs.  I'd rather it typically be internal to libraries more than something that shows up in syntax that would be used broadly.",True,True,196,33091.05
rack_____rack_____1272,2018-05-02T00:36:16Z,True,rack_____rack_____1272_____385830968,"> I only think on_open should take an IO. It should be the responsibility of the instance to store the IO IMHO. This way you can call @io.write at any time, e.g. from a timer.

I'd rather they all take the IO object.  You can save to an ivar if you want.",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-02T00:37:20Z,True,rack_____rack_____1272_____385831122,"> I'd rather they all take the IO object.

What's the reasoning behind that? Is it more efficient?",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-02T00:38:35Z,True,rack_____rack_____1272_____385831324,"To address @SamSaffron's ""junk data"" comment, I totally agree.  Maybe we could use headers to indicate to the webserver that the body object is ""special"" (it knows websockets):

```ruby
class WSBody
  def each
    yield ""Webserver said it does WS, but lied""
  end

  def on_open io
  end

  # ... more on_* methods
end

# App

app = lambda do |env|
  if env['rack.supports_ws?']
    [ 200, { ""X-Websocket"" => ""on"" }, WSBody.new ]
  else
    [ 404, {}, [ ""This was supposed to be a WS response"" ] ]
  end
end

# Webserver

status, headers, body = app.call(""rack.supports_ws?"" => true)
if headers[""X-Websocket""]
  # do websocket stuff with the body
  body.on_open io
else
  # do the normal `each` thing
end
```

I think it would eliminate questions about what to do WRT middleware (this type of API would insist that the thing responding to Websockets *not* forward to another middleware)",True,True,128,932194.1166666667
rust-lang_____rfcs_____2426,2018-05-02T00:38:54Z,True,rust-lang_____rfcs_____2426_____185370291,"Another, possibly bad, idea to facilitate for macros could be to introduce the special label `'try` which always refers to the closest `try { .. }` block.

That way, you could just write:
```rust
try {
    ok!(value);
}
```
where `ok!(value)` expands to `break 'try Try::from_ok(value)`.",True,True,196,33091.05
rack_____rack_____1272,2018-05-02T00:39:04Z,True,rack_____rack_____1272_____385831381,"@SamSaffron code duplication on the server implementation is really a matter left up to the server author. I don't think that is relevant to the proposed spec addition, which is proposed to be optional.

@ioquatix using an io object or the extended handler itself is pretty much the same in regard to some external writer loop. The example code on Agoo demonstrates that. Thats not to say that using an io object might be preferred fro other reasons though.",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-02T00:39:27Z,True,rack_____rack_____1272_____385831441,"@SamSaffron 

> My issue though is that encourages a whole bunch of code duplication

I think code duplication is one of the concerns this PR will solve.

Rright now we have tons of applications each implementing their own WebSocket protocol (there's only one standard protocol, so historical variants aren't necessary).

On top of that, all these application have their own implementation of IO handling logic (their own reactor, `nio4r` or some other approach).

Consolidating the dependency in the server actually minimizes code bloat as most of the code is already there. Sure, adding the WebSocket parser might be new code, but the network and IO handling logic is already there.",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-02T00:40:40Z,True,rack_____rack_____1272_____385831630,"> What's the reasoning behind that? Is it more efficient?

It means that you can implement a stateless object.  I prefer to avoid maintaining state when possible.  If the methods take the IO object as a parameter, I am allowed to implement a stateless object, but it is *my* choice.  Insisting that only `on_open` takes the IO object forces me to maintain state (I no longer have a choice).",True,True,128,932194.1166666667
rust-lang_____rfcs_____2426,2018-05-02T00:40:53Z,True,rust-lang_____rfcs_____2426_____185370525,"I'm really not a fan of special labels like `'fn` or `'try`. I would much rather we just stick with `fail` or `throw`, as proposed, than *ever* introduce those.",True,True,196,33091.05
rack_____rack_____1272,2018-05-02T00:41:52Z,True,rack_____rack_____1272_____385831801,"> Since it is either WebSocket or SSE a response and env are no longer relevant. 

I think chunked encoding responses are just as good as a candidate, they are more widely supported than SSE anyway. In fact I can see almost zero reason to support SSE cause it is pretty much a novelty protocol. https://caniuse.com/#feat=eventsource compared to https://caniuse.com/#feat=xhr2 which is supported on IE/edge. 

env is very relevant for chunked encoding you may want to add headers deep in your middleware for CORS and various things like that. ",True,True,128,932194.1166666667
rust-lang_____rfcs_____2426,2018-05-02T00:42:14Z,True,rust-lang_____rfcs_____2426_____185370683,@rpjohnst I'm not a fan either :),True,True,196,33091.05
rack_____rack_____1272,2018-05-02T00:44:16Z,True,rack_____rack_____1272_____185370898,"> This means a single object in C (the callback object). If we add the IO object, it's two objects - a 200% increase in object count.

What % increase is that in an actual app?",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-02T00:44:59Z,True,rack_____rack_____1272_____385832184,"@tenderlove in you code example you seem to be assuming WebSocket and SSE calls are triggered by an event from the browser. Maybe I misread the code. My apologies if I did. Anyway, I think a common use case will be to push event from Ruby to the browser. Do foresee a more request response pattern initiated from the browser using WebSockets instead of using HTTP?",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-02T00:45:59Z,True,rack_____rack_____1272_____385832303,"> @tenderlove in you code example you seem to be assuming WebSocket and SSE calls are triggered by an event from the browser. Maybe I misread the code. My apologies if I did. Anyway, I think a common use case will be to push event from Ruby to the browser. Do foresee a more request response pattern initiated from the browser using WebSockets instead of using HTTP?

Derp, yes, sorry. It's been a long day. 😞",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-02T00:47:15Z,True,rack_____rack_____1272_____385832446,"@tenderlove regarding stateless objects, I think there is some merit to what you say. The principles of the API remains the same but adding the io object does allow some additional options. It certainly doesn't hurt.",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-02T00:47:43Z,True,rack_____rack_____1272_____385832502,"@SamSaffron 

> I think chunked encoding responses are just as good as a candidate

I'm not sure if the PR is supposed to be a `hijack` replacement.

It's definitely a step towards retiring `hijack`, but not necessarily a complete replacement.

The idea is that response that passes through the middleware is actually sent by the server.

i.e., notice the header in the response (place in `config.ru` and run with `iodine`):

```ruby
# Place in config.ru
RESPONSE = [200, { 'Content-Type' => 'text/html',
          'Content-Length' => '12' }, [ 'Hello World!' ] ]
# a Callback class
class MyCallbacks
  def initialize env
     @name = env[""PATH_INFO""][1..-1]
     @name = ""unknown"" if(@name.length == 0)
  end
  def on_open
    subscribe :chat
    publish :chat, ""#{@name} joined the chat.""
  end
  def on_message data
    publish :chat, ""#{@name}: #{data}""
  end
  def on_close
    publish :chat, ""#{@name} left the chat.""
  end
end
# The actual Rack application
APP = Proc.new do |env|
  if(env['rack.upgrade?'] == :websocket)
    env['rack.upgrade'] = MyCallbacks.new(env)
    [200, { ""X-Header"" => ""This is sent"" }, []]
  else
    RESPONSE
  end
end
# The Rack DSL used to run the application
run APP
```

Yes, I suppose long polling can be added to this list, using chunked encoding, but I this means that the headers are sent immediately, since this is part of the design's premise.
",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-02T00:47:52Z,True,rack_____rack_____1272_____385832518,"> Sure, adding the WebSocket parser might be new code, but the network and IO handling logic is already there.

This is my point though... What are @evanphx @FooBarWidget and Eric going to do here? They are pretty much the people who need to be convinced this is good.

- Add a hard dependency to ""standard websocket parser gem"" (I give it zero % chance this will happen for Unicorn, but don't know where Evan and Hongli stand) 

- Add ""websocket_encoder.rb"" file and ""websocket_upgrader.rb"" and ""magic_rack_protocol.rb"" they hand curate and is duplicated 3 times between the 3

- Add a soft dependency we need to add to our Gemfile to ""activate"" 

I don't see any clear cut good answer here. ",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-02T00:53:22Z,True,rack_____rack_____1272_____385833274,"This `env['rack.upgrade?'] == :websocket` is a big concern for me protocol wise, if `/some/route` is meant to be SSE, and `/some/ws` is meant to be web sockets, how is the server going to decide this upfront. Not allowing the router any say here is a problem imo. 

`if env['rack.can_upgrade?`]` seems far more flexible.  ",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-02T00:54:23Z,True,rack_____rack_____1272_____385833417,@SamSaffron I'm surprised we are considering rejecting the PR because it might be hard for some of the current server gems to implement. I would have thought Rack was intended to make life easier for developers/users and not for the server implementers.,True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-02T00:55:56Z,True,rack_____rack_____1272_____385833652,"> if /some/route is meant to be SSE, and /some/ws is meant to be web sockets, how is the server going to decide this upfront. 

The server doesn't.

The server lets the application know what the user asked for (if the user asks for WebSockets or SSE).

The application is free to refuse the connection if the route doesn't match.

The application is also free to implement both solutions on the same route.
",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-02T00:57:01Z,True,rack_____rack_____1272_____385833803,@SamSaffron `env[`rack.upgrade`] can be tested for `nil` or for s specific value. Hiding the fact that the upgrade is either WebSocket or SSE is limiting. Providing more information only help make the decision easier for more specialized applications.,True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-02T01:00:25Z,True,rack_____rack_____1272_____385834361,"@tenderlove , @SamSaffron 

I'm not sure I understand what you mean by ""junk data"".

As I understand the PR, the `env` object performs the roundtrip through the middleware and afterwards the server tests for the callback object. At what point is there a risk for junk data?",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-02T01:04:33Z,True,rack_____rack_____1272_____385834948,"My personal goal here would be adoption, and if we are introducing a protocol here that can not easily be adopted (or will be rejected by the big 3) then chances of faye,message_bus and family all moving to it are very low. 

Also it places unfair pressure. ""Look passenger did it why don't you?""

That said, since this can be implemented today in middleware it is not the end of the world if the big 3 reject it. 

> The server lets the application know what the user asked for (if the user asks for WebSockets or SSE).

I follow so you are looking at `Upgrade: websocket` header, then the server knows it can implement it so it sets `['rack.upgrade?']` to websocket. But ... SSE ship `Accept: text/event-stream` and chunked encoding ships nothing. and in all cases they could potentially use this protocol. The terminology is very websocket centric. ",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-02T01:04:58Z,True,rack_____rack_____1272_____385835007,"I don't know if this comment is helpful to the discussion at large, so pardon me if this feels as an intervention. There are legitimate cases where hijack is used because it offers access to the socket. For example, we use it to call `sendfile` multiple times in sequence to server very large binary responses, and it works well.

The ""downgrade"" in convenience that `hijack` brings is well compensated by the interesting things you can do to it. Imagine with this proposal one of the use cases would be _not_ using SSE (and not using WebSockets) but instead stuffing large binary responses into the socket from the filesystem (as we do in https://github.com/WeTransfer/fast_send). Would such an ""upgrade wrapper"" facility help that use case in any capacity? For example, would it give me a way to ""yield back control"" from a sending loop - which I ideally would have synchronous or in a Fiber - back to the webserver?

In practical terms, using Hijack was a bit tricky in the first place because it was not clear _which exact subset_ of an `IO` the given socket-ish object supports, and I feel this might be the case for this proposal too. Personally I would love to see that IO specified somewhat tighter (""here are the methods that _must_ be available, here are the methods that _may_ be available if the server decides to""). I don't know if having something so tightly scoped to be a WebSockets support library is the answer to ""hijack API is obtuse"" TBH.",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-02T01:10:10Z,True,rack_____rack_____1272_____385835632,"> In practical terms, using Hijack was a bit tricky in the first place because it was not clear which exact subset of an IO the given socket-ish object supports, and I feel this might be the case for this proposal too. 

Yes absolutely, we don't even know which type of exception this object can raise and the list goes on. I would love to see this thing properly documented. 

Also another missing practical item is that you have no way of setting a callback to happen after the server finished dealing with the hijack which is a huge hole. eg: `env['hijacked] = lambda{|r| ...}` 

> I don't know if having something so tightly scoped to be a WebSockets support library is the answer to ""hijack API is obtuse"" TBH.

I agree with this. I would like to see hijack better specified. ",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-02T01:10:28Z,True,rack_____rack_____1272_____185373615,"> What % increase is that in an actual app?

That really depends on the app's use-case.

A micro services app running a WebSocket API will get hit harder than an HTTP app with the occasional WebSocket upload manager.

I think the issue is more pronounced because we are talking about long term objects.

Short term object count doesn't effect memory fragmentation as much as the fact that there's a long-term object blocking a memory ""block"" / ""arena"".

The more long-term objects are created (and eventually destroyed), the faster the fragmentation.

Having said that, even a 200% increase in object count is probably better than the solutions we currently employ when implementing WebSockets using `hijack`.

I won't make an issue out of it. I'll do what everyone thinks best, but I know in very practical terms (having coded both implementations in C) that `extend` is cheaper both in memory and in the number of method tree traversals required.",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-02T01:15:07Z,True,rack_____rack_____1272_____385836295,"@SamSaffron regarding `env['rack.upgrade?']`, the server has already looked at the headers and determined the requested upgrade. There is no need for the application to look at the headers to determine the upgrade type. It was provided as a convenience so the application did not need to look at the various headers that were used to determine the upgrade requested. It also leaves the API open for future additions if some new event based connection protocol is supported.",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-02T01:20:40Z,True,rack_____rack_____1272_____385837083,"@julik @SamSaffron I think there is huge value in cleaning up / specifying the hijack API.  If either of you want to take a stab at it I would really appreciate it.  (Also, if we're going to rev the spec I think it's time we remove the ""rewindable body"" requirement)",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-02T01:25:58Z,True,rack_____rack_____1272_____385837888,"@SamSaffron 

> I follow so you are looking at Upgrade: websocket header, then the server knows it can implement it so it sets ['rack.upgrade?'] to websocket. But ... SSE ship Accept: text/event-stream and chunked encoding ships nothing. and in all cases they could potentially use this protocol. The terminology is very websocket centric.

Yes, the idea is that the `env['rack.upgrade?']` value is set according to the headers client send (i.e., `Accept: text/event-stream` or `Upgrade: websocket`, for now).

If there was a way to detect XHR, it would probably be easy enough to manage... but there isn't. This might remain in the `hijack` realm for now.

As @ohler55 [mentioned](https://github.com/rack/rack/pull/1272#issuecomment-385836295), this allows the application to ignore the HTTP headers and distance itself from the HTTP protocol.

As a side-note:

I loved XHR when I didn't have WebSockets. I hardly ever use SSE or XHR for push notifications (I do use XHR for REST calls). However, I can see HTTP/2 bringing a strong movement towards SSE, so it might be in my future.
",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-02T01:39:51Z,True,rack_____rack_____1272_____385840091,"@tenderlove , @ohler55 , I feel that the static object support is a very strong argument in favor of an `io` object (although I find the name `io` misleading, maybe `client` more befitting).

I feel emotional resistance against this added complexity, but I can understand the logical benefits.

However, retaining a copy of the `env` object is a major memory concern as a lot of data has to be kept ""alive"" and moves into long-term memory storage... even though this might shrink the number of cases where static objects could be used.

This will make `on_message(client, data)`, `on_close(client)`, etc' less enticing, but it will work.",True,True,128,932194.1166666667
rust-lang_____rfcs_____2426,2018-05-02T01:51:00Z,True,rust-lang_____rfcs_____2426_____385841683,"Stemming from https://github.com/rust-lang/rfcs/pull/2426#pullrequestreview-116739016... Would this be (eventually) allowed?

```swift
let result = 'a: try {
    try {
        throw 'a e;
    }
};
```

",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-02T01:55:01Z,True,rust-lang_____rfcs_____2426_____385842219,"@kennytm 

> Stemming from #2426 (review)... Would this be (eventually) allowed?

I suppose it could. It is consistent with `break 'a e`; I don't have any arguments against it other than:
- *""how often do you want / need to do this?""*

Another possibility is discussed here: https://github.com/Centril/rfcs/blob/rfc/throw-expr/text/0000-throw-expr.md#paper-exceptional-syntax",True,True,196,33091.05
rack_____rack_____1272,2018-05-02T02:00:04Z,True,rack_____rack_____1272_____385842908,@boazsegev I know we discussed having an `io` object or what ever the label is. I don't have a strong opinion able the label. I don't see the need for passing around the `env` object though. I'm in agreement with you. The data in the `env` is stale by the time it is used in any of the callbacks. It is only relevant on the initial invocation of the `#call(env)` method.,True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-02T03:00:22Z,True,rack_____rack_____1272_____385851416,"@ohler55 , yes, you were the one who suggested the `io` object during our discussion and I was the one with the strong feelings against the idea.

It's an implementation perspective. The extra object is somewhat of a headache and increases performance costs...

...but I'd rather have something everyone agrees to implement than have nothing.

Besides, if we all write amazing servers, I'll retire iodine in favor of whichever server is the best, so the extra implementation and maintenance cost is avoidable as far as I'm concerned ;-)",True,True,128,932194.1166666667
rust-lang_____rfcs_____2426,2018-05-02T04:33:41Z,True,rust-lang_____rfcs_____2426_____385862128,"I'm not objecting to the idea of having an expression that serves this function (though personally I think `return Err(e)` seems quite clear), but the more I think about it and the more discussions I've seen about error handling in Rust, the less inclined I find myself to choose keywords and constructs evocative of *exceptions*.",True,True,196,33091.05
Homebrew/brew/3720,2018-05-02T09:30:52Z,False,5ae985596480fd2061968a65,We finally have 💚 CI on macOS 😍 ,True,False,110,173514.51666666666
rack_____rack_____1272,2018-05-02T11:23:06Z,True,rack_____rack_____1272_____385945342,"Let me make an attempt to summarize. There are some who are completely against changing the Rack spec and feel hijacking is the best way forward if WebSocket and SSE is to be used with Rack. For those that haven't rejected the PR outright the following apply.

1. The consensus is that an `io` or `client` object be used instead of extending the handler.
2. There may still be open issues around how to indicate an upgrade is pending and how to pass the handler to the server.

I'll update the proposed changes to reflect not extending the handler today.",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-02T13:32:14Z,True,rack_____rack_____1272_____185496098,"I think it's only fair that the API informs the receiver about the identity of the closed client (i.e., for `collection.delete client` type of situations)?

so `on_close(client)` as well.",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-02T13:34:31Z,True,rack_____rack_____1272_____185496755,"Oh, sorry, I misunderstood... I think this update assumes the client object is stored by the receiver.",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-02T13:54:03Z,True,rack_____rack_____1272_____185503288,The call to `on_close` indicates the connection has been closed so the client is no longer viable or at least any method called on it would raise an exception as not being connected so it doesn't seem useful to include it as an argument to the close callback.,True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-02T14:02:25Z,True,rack_____rack_____1272_____185506253,Did miss adding the client to the `on_message`. Fixed that.,True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-02T14:14:24Z,True,rack_____rack_____1272_____185510298,"On second though. I hadn't fully bend my mind around what the change would mean. With a stateless approach as @tenderlove suggested a single upgrade handler could be used. It might then want to store an array of clients thereby avoiding creating a two new objects for every connection. Maybe thats what you were thinking of before my hasty response.

I'll update the spec with all calls taking the client.",True,True,128,932194.1166666667
rust-lang_____rfcs_____2426,2018-05-02T15:12:19Z,True,rust-lang_____rfcs_____2426_____185532364,I think special labels like `'try` and `'fn` going with `try` and `fn` fits well with `'static` and `static`.,True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-02T16:45:33Z,True,rust-lang_____rfcs_____2426_____386043697,"@joshtriplett How come? And are you saying that we should choose `fail` instead?

I do think that RFC https://github.com/rust-lang/rfcs/pull/243 using exceptional terminology should be seen as precedent and therefore the case against *exceptional terminology* is less convincing.

However; my view is that either `throw` or `fail` would better than neither `throw` or `fail` (to not have the feature at all), and so if the lang team finds `fail` better, I'll happily switch to that.

@petrochenkov, @wesleywiser, @Flaise, @kjeremy, @gilescope @phaylon @alexander-irbis @0x7CFE:
Could you please note your specific concerns so that I can address them?",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-02T16:51:28Z,True,rust-lang_____rfcs_____2426_____185564950,"@squishy-clouds That's a good point. Tho, `'static` is always usable, but `'try` and `'throw` would not. I don't know if that is a major drawback or even a drawback at all.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-02T16:58:18Z,True,rust-lang_____rfcs_____2426_____386047571,"I agree with the concerns already stated, and my concerns from the `try` discussion carry over to here.

I'd summarize it as: I'm generally against using exception syntax in a non-exception language, because, mainly:

* The semantics of Rust error handling and exception based error handling are at odds, and so are intuitions based on them.
* It special cases errors more than I'd like, since I believe errors should always clearly be normal values.
* Every new control flow construct increases the language surface in a critical place. I don't believe the advantages here (not writing `Err`) are worth the complexity increase.
* With the auto-conversion included, it's another place where type conversion happens without being explicitly requested.

These are largely philosophical/foundational, so I'm not sure there is much to address. I believe I will remain firmly in the -1 group.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-02T17:07:00Z,True,rust-lang_____rfcs_____2426_____386050164,"@phaylon Would you be more comfortable with `fail expr` perhaps?

> With the auto-conversion included, it's another place where type conversion happens without being explicitly requested.

It is not included in the current proposal (and doesn't have to be).

> I don't believe the advantages here (not writing `Err`) are worth the complexity increase.

Writing `return Err(expr)` is not equivalent to `throw expr` in `try { .. }` so this is not the only advantage. `Result` is also not the only type implementing `Try`. In a generic setting, you'd have to write: `return Try::from_error(expr)` which I find much less readable.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-02T17:18:28Z,True,rust-lang_____rfcs_____2426_____386053637,"I _strongly_ agree with @joshtriplett. Regardless of what usage feels/looks like, it should be very clear that the _mechanism_ being used is not some sort of unwinding like exceptions.

IMHO, if we want Rust to be taken seriously as a systems language, we should not wallpaper over what's actually happening.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-02T17:21:04Z,True,rust-lang_____rfcs_____2426_____386054392,"I think @joshtriplett's post sums up my feelings well. In addition, my other concern is that this feature doesn't pull its weight. Eric Gunnerson worked on the C# language design team for years and wrote about a concept they had called ""Minus 100 points"":

> Every feature starts out in the hole by 100 points, which means that it has to have a significant net positive effect on the overall package for it to make it into the language. Some features are okay features for a language to have, they just aren't quite good enough to make it into the language.

\- https://blogs.msdn.microsoft.com/ericgu/2004/01/12/minus-100-points/

To my understanding, this feature does not allow the user to do anything they could not otherwise do.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-02T17:50:27Z,True,rust-lang_____rfcs_____2426_____386063716,"@Centril Because Rust error handling is *not* exception handling, and drawing an analogy to exception handling is misleading. To quote an explanation I gave elsewhere:

Rust does not have thrown and caught exceptions. Making error-handling look superficially like that does not make Rust more user-friendly. It makes Rust less user-friendly. It lets people proceed based on a faulty analogy, and then eventually, inevitably, has to pull the rug out from under them. (And even worse, it might lead to further language changes in an attempt to stretch that analogy further.) Far better to make it clear to people that Rust has a fundamentally different approach to error-handling, error-handling is just a return of a `Result` type, here are the ways that’s similar to other languages, and here are the ways that’s different than other languages.

To answer your question, I'd prefer `fail` over `throw`; I'd prefer `fail!(expr)` over `fail expr` until it's clear that we *need* a keyword for this; and I'd prefer to have none until it's extremely clear that we *need* a brand new non-linear control-flow construct that people have to adapt their mental parsers for.

People know to scan for `return`. People understand `break` and `continue`. We've done a lot of work to help people understand and adapt to `?`, and `try!` before that. Any new language construct needs to be sufficiently critical to justify everyone having to be familiar with it and see it in other people's code, and that's even *more* true for a construct that affects control-flow.

If we were talking about a feature that you can't do any other way, that'd provide some additional justification. But we're talking about something that you can already implement using `return`, or using `?`, and the new keyword would just serve as a shorthand.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-02T17:50:39Z,True,rust-lang_____rfcs_____2426_____386063786,"@mark-i-m 

> Regardless of what usage feels/looks like, it should be very clear that the mechanism being used is not some sort of unwinding like exceptions.

I think we are / should be clear crystal about that in documentation, but I think there is benefit from familiarity even if the semantics are not a perfect match to those of Java / C++.

> IMHO, if we want Rust to be taken seriously as a systems language, we should not wallpaper over what's actually happening.

In what way would `throw` wallpaper over the semantics (more so that `?` would do..)?
Note that there are languages like Swift (AFAIK) and Haskell which don't use unwinding and yet they do use the `throw` terminology.

@wesleywiser

> Eric Gunnerson worked on the C# language design team for years and wrote about a concept they had called ""Minus 100 points"":

I only take that to mean that every added feature should have benefits which seems obvious to me. Some features will not benefit everyone equally (c.f. additions for the embedded domain), but we still add them.

> To my understanding, this feature does not allow the user to do anything they could not otherwise do.

I don't think that is correct. `throw expr` is not just syntactic sugar for `return Err(expr)`. It is needed to let macros like `bail!` perform early returns both to the innermost `try { .. }` block or the enclosing function or closure if there is no `try { .. }` block.

Not having `throw expr` would mean that there's no way save for `Err::<!, _>(x)?`  (which I find obnoxious) to perform an early return to the enclosing `try { .. }` block. However, `?` performs error conversion for `Result` which `throw` (currently) does not. I don't know how you can extend `Err::<!, _>(x)?` to the generic case.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-02T17:51:30Z,True,rust-lang_____rfcs_____2426_____386064040,"> Could you please note your specific concerns so that I can address them?

Sure. The first is that when I see `try`/`throw`, I'm expecting exceptions. The `Result<A, B>` objects are just return values; they're nothing like exceptions. One of the reasons why I use Rust is because it doesn't isolate me from what the machine is doing. If something's a return value, Rust treats it like a return value. If something's a stack allocation, Rust treats it differently than a heap allocation, etc. See also @joshtriplett's comment.

The other issue is that I don't like seeing special cases without quite a lot to be gained from them because usually special cases just end up creating more problems later. I'll pick an example from another language because Rust usually gets things right. Someone once had to write this abomination in Javascript:

              length >= 7 ? new NativeDate(Y, M, D, h, m, s, ms) :
              length >= 6 ? new NativeDate(Y, M, D, h, m, s) :
              length >= 5 ? new NativeDate(Y, M, D, h, m) :
              length >= 4 ? new NativeDate(Y, M, D, h) :
              length >= 3 ? new NativeDate(Y, M, D) :
              length >= 2 ? new NativeDate(Y, M) :
              length >= 1 ? new NativeDate(Y) :
                            new NativeDate();

Source: https://github.com/vesln/timekeeper/blob/5e1f504f8e33f43d4e1ba9ac78faab2db4bb6582/lib/timekeeper.js#L80-L87

Why did he have to write that? Because the `new` operator is not composable with other language constructs. The only way to do what he needed to do was to wrap the usages of the operator in a construct that is composable. That special case that was supposed to make it easier to code in Javascript (some coders will tell you that it denotes which functions allocate memory, which is ridiculous because every function can allocate memory or call other functions that allocate memory) instead made some things a lot more work.

And someone said that having a special keyword for error handling in Rust will aid IDE development - I don't buy this because the whole point of Rust's syntax is to be machine-readable. If you want that feature, just render a return value in a different color if it's of type Result::Err.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-02T17:51:31Z,True,rust-lang_____rfcs_____2426_____386064041,"I agree with point of view that `throw` is too exception-like. Let's say, exceptions will some day ever appear in Rust. How they would live with not-exceptinal workflow, if operator `throw` already in use? How much code should be changed to occasinally upgrade with a new epoch?

We already can ""throw"" errors with the `?` operator:
```rust
if condition {
    Err(Foo)?;
}
```
As for me `Err(...)` themself is enough to highlight ""unhappy path"".
Using `return` in form 
```rust
if condition {
    return Err(Foo)
} else {
    return Ok(Bar)
}
```
is redundant, this `if` is last in function (and there is no ""other stuff"").

Even more, before `catch` stabilized, we can intercept such errors with a self-called (but too noisy) closure:
```rust
let res = (|| -> Result<_, Foo> {

})();
```

And even more once again, the `?` postfix operator has very compact representation.
We can write simple
```rust
let foo = bar.x()?.y()?.z()?;
```
without bulky checks. The `throw` operator with `if` instead of just `?` (the first concern in this rfc) will not be so convenient.

So, do we really need to change the syntax to look more exception-like without exceptions, whilst we have a long discussed syntax, on which consensus was reached and which give us almost the same possibilities and even much more, if we do not try to follow the old language habits?",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-02T18:39:44Z,True,rust-lang_____rfcs_____2426_____386079005,"@joshtriplett 

> though personally I think `return Err(e)` seems quite clear

That is not the expansion of `throw` -- and this is critical! The expansion is more like `return Err(e.into())`. 

I find myself wanting `throw` precisely at the point where I am trying to leverage this adaptation. e.g., if I am using failure, I might have my own error type:

```rust
#[derive(Fail)]
struct MyError;

#[derive(Fail)]
struct MyOtherError;
```

and then a function that can fail in various ways:

```rust
use failure::Error;
fn foo() -> Result<(), Error> { // <-- use error to accept many kinds of errors
    if something() {
        return Err(MyError);
    }
    if something_else() {
        return Err(MyOtherError);
    }
    ...
}
```

But this code will not compile. I have to write `return Err(MyError.into())` -- or, maybe it's `return Err(MyError).into()`? Or is it `return Try::from_error(MyError)`? Regardless, it's getting a lot messier. `throw MyError`, in contrast is clear and to the point.

---

Regarding the name, I think `throw` is the right choice, for a few reasons:

- I would not be surprised if we added `catch` at some point. I do not think that `match` is always great.
- But even if we don't, I think it is easier to explain to others by saying ""`throw` throws the exception to the enclosing `try`; instead of `catch`, we reuse the `match` keyword"". Basically it comes down to what I wrote before: every detail of the mechanism doens't have to be identical to make reusing a keyword profitable; we just have to capture the same *spirit*, and I believe that is the case here.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-02T18:57:03Z,True,rust-lang_____rfcs_____2426_____386084117,"@joshtriplett 

> @Centril Because Rust error handling is not exception handling, and drawing an analogy to exception handling is misleading.

Well, we disagree on this point. Rust doesn't use the same semantics as Java or C++; but you still have to *handle exceptional cases* in Rust.

> error-handling is just a return of a `Result` type, here are the ways that’s similar to other languages, and here are the ways that’s different than other languages.

In general, I think you are blessing the `Result<T, E>` type too much. There are other richer types which can also implement `Try`.

> I'd prefer `fail!(expr)` over `fail expr` until it's clear that we need a keyword for this;

Here my view is that it would be strange for `throw` (or `fail`) to be the only odd fish given the reservation of `async` and that we don't have `return!`, `break!`, and so on. `fail!` would have to be a built in macro, but I think that would be less ergonomic and consistent. The extent of breakage for all of the proposed words being low, and the edition being the only chance we have to reserve a keyword for this, seems like good reasons to reserve.

> People know to scan for `return`. People understand `break` and `continue`.

Personally I am confident that a Java programmer just introduced to Rust would understand `throw` (or `fail`) as well as they would `break`.

> Any new language construct needs to be sufficiently critical to justify everyone having to be familiar with it and see it in other people's code, and that's even more true for a construct that affects control-flow.

Sure; However, I do think that the massive pervasiveness of `throw` in other languages means a good chunk of people who use Rust already will be familiar with it (modulo misunderstandings re. implicit exception handling, but I've discussed that elsewhere).

> If we were talking about a feature that you can't do any other way, that'd provide some additional justification. But we're talking about something that you can already implement using `return`, or using `?`, and the new keyword would just serve as a shorthand.

I'm not convinced that this is true. While you can get this to work:

```rust
let x : Result<u8, u8> = do catch {
    if true { 1 } else { Err::<!, _>(2)?; }
};
```

How do you make it work for any `Try` without mentioning the carrier type (`Result<T, E>`)?

---------------------------------------

@Flaise

> One of the reasons why I use Rust is because it doesn't isolate me from what the machine is doing.

Is this true? While Rust gives you the **ability** to write bare metal code, you can also write extremely abstract and generic code (even more so with GATs and `-> impl Trait`) that is far removed from assembly.

> Because the new operator is not composable with other language constructs.

In what way is `throw` / `fail` not composable with other language constructs? We could extend it to `throw 'label expr;` just like `break 'label expr`. If anything, `throw expr` improves composability by making things work better in generic settings and enhances `try { .. }` in #2388 and #243.

> And someone said that having a special keyword for error handling in Rust will aid IDE development - I don't buy this because the whole point of Rust's syntax is to be machine-readable.

I don't know who said that. I've never seen the point of Rust's syntax to be machine-readable. I think it has always been about using syntax that stays within our complexity budget and is familiar to C++ programmers (curly braces instead of more ML-like syntax..).

-----------------------------------

@alexander-irbis

> Using `return` in form [..] is redundant, this if is last in function (and there is no ""other stuff"").

Sure; but the goal was to improve early short-circuiting.

> Even more, before `catch` stabilized, we can intercept such errors with a self-called (but too noisy) closure:

Note: `catch` is being renamed to `try { .. }`.
Also, the closure changes the semantics of `return`.

> We can write simple
>
> ```rust
> let foo = bar.x()?.y()?.z()?;
> ```
> without bulky checks.

The `?` operator has a different role, it propagates errors / failures / exceptions, but does not initiate them like `throw expr` would do.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-02T19:10:41Z,True,rust-lang_____rfcs_____2426_____386088139,"""throw x"" would be fully equivalent to ""Err(x)?"", right? And thus this is only a matter of deciding whether such syntax sugar is desirable?
",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-02T19:12:31Z,True,rust-lang_____rfcs_____2426_____386088663,"@Centril
> fail! would have to be a built in macro, but I think that would be less ergonomic and consistent.

`fail!` would not need to be a built-in macro: https://play.rust-lang.org/?gist=9fe02214410e4a05e49e7be2158d7f5e&version=nightly&mode=debug

```rust
#![feature(try_trait)]

macro_rules! fail {
    ($e:expr) => {
        Err($e)?
    };
}

fn f(x: i32) -> Result<i32, i32> {
    if x > 10 {
        fail!(0);
    }
    Ok(x)
}

fn g(x: i32) -> Option<i32> {
    if x > 10 {
        fail!(std::option::NoneError);
    }
    Some(x)
}

fn main() {
    println!(""{:?} {:?} {:?} {:?}"", f(5), f(50), g(5), g(50))
}
```",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-02T19:14:23Z,True,rust-lang_____rfcs_____2426_____386089183,@joshtriplett @bill-myers I don't think that's right; See the [reference on semantics](https://github.com/Centril/rfcs/blob/rfc/throw-expr/text/0000-throw-expr.md#semantics). In particular it is generic wrt. `Try` and `throw expr` is typed at `!` which `Err(expr)?` is not.,True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-02T19:24:25Z,True,rust-lang_____rfcs_____2426_____386091929,"It appears that the type of ""Err(x)?"" unifies with any type, and is typed as () if there is no other type to unify it with.

Is that intended? Shouldn't the compiler default to ! for a type that unifies with anything, and thus eliminate that difference?

As for the Try genericity issue, that could be eliminated by introducing an ""err() function"" that just calls Try::from_error, allowing to write ""err(x)?"".

That said, ""throw"" seems nice to have as syntax sugar.


",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-02T19:31:27Z,True,rust-lang_____rfcs_____2426_____386093788,@bill-myers I might be doing it wrong; but I haven't gotten that to work: https://play.rust-lang.org/?gist=430a69319ac4cb5d49ec6c76cd8096a6&version=nightly&mode=debug,True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-02T19:41:26Z,True,rust-lang_____rfcs_____2426_____386096659,"I should add a further clarification here: I don't have any objection to reserving the *keyword* `fail` as part of Rust 2018. My objection is to the simultaneous definition of a specific use of that keyword. If you want to take advantage of Rust 2018 to reserve `fail`, we could then choose to *subsequently* define that keyword (or not) at our leisure. I'd happily support *that* RFC.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-02T19:41:55Z,True,rust-lang_____rfcs_____2426_____386096800,"@Centril Using ""Try::from_error(2)?"" also gives an error (E0284 type annotations required)

",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-02T19:52:23Z,True,rust-lang_____rfcs_____2426_____386099883,"@joshtriplett 

> My objection is to the simultaneous definition of this specific use of that keyword.

The intent with doing that simultaneously is so that we may experiment.
I also based the definition on what I thought was the most obvious semantics based on where `?` and `do catch { .. }` is today.

> If you want to take advantage of Rust 2018 to reserve fail, we could then choose to subsequently define that keyword (or not) at our leisure.

Most of the reference semantics of `throw` / `fail` is left [unresolved](https://github.com/Centril/rfcs/blob/rfc/throw-expr/text/0000-throw-expr.md#unresolved-questions) and can **certainly, 100%** be changed with another RFC. In fact, the RFC even says explicitly that:

> Answering many of these question will likely require another RFC to finalize the design once we have more experience.

So I would say that it is at our leisure to change the definition of `throw` / `fail` after, if we merge this RFC and you should hold me to that.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-02T20:26:05Z,True,rust-lang_____rfcs_____2426_____386109559,@kennytm I've now added `throw 'label expr` to the list of unresolved questions.,True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-02T20:34:57Z,True,rust-lang_____rfcs_____2426_____386112091,"I also like the idea of reserving the keyword, as the prior art section makes clear its a pretty useful keyword to have.

It wasn't quite clear to me from the RFC, does this proposal include making `expr?` early return errors to the closest try block, the same as `throw expr`?",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-02T20:39:22Z,True,rust-lang_____rfcs_____2426_____386113312,"@squishy-clouds This RFC does not alter the semantics of `?`.

However, `expr?` already early-returns to the closest `do catch { ... }` block in the nightly compiler.
RFC #2388 renames `do catch { ... }` to `try { ... }`.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-02T20:59:07Z,True,rust-lang_____rfcs_____2426_____386119257,"Thanks! 

Also: whats the reasoning for using a seperate Throw trait, instead of just `Try::from_error`? All of the Throw implementations listed in the RFC do the same thing anyways, I don't see any benefit of the seperate trait.

And If the Try trait was used instead of a Throw trait, and since `expr?` also early-returns to the closest try block, `throw expr` could just be considered sugar for `Try::from_error(expr)?`. I don't believe shorthand for that (and a potential future shorthand for the Ok happy-path) would be useful enough to warrant adding a new keyword, instead of just using `Err(expr)?` or a macro.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-02T21:36:19Z,True,rust-lang_____rfcs_____2426_____386129145,"@squishy-clouds Well; A separate `Throw` trait is **not** used at the moment; it is **only** discussed as an option, mainly because the definition of `Try` may change. See https://github.com/rust-lang/rust/issues/42327#issuecomment-379955253 for a discussion.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-02T22:09:02Z,True,rust-lang_____rfcs_____2426_____386137030,"@Centril 

What I'm suggesting is that if you propose a ""keyword reservation for Rust 2018"" RFC, and it includes `fail`, `throw`, or both, I'd happily support that RFC. As it stands, however, I don't see the advantage of *this* RFC over the many variations of equivalent macros that already exist in error-handling packages.

My current position is that I'd be strongly opposed to ""throw"", opposed slightly less strongly to ""fail"", and entirely in favor of a macro for experimentation for the time being.",True,True,196,33091.05
rack_____rack_____1272,2018-05-02T23:31:50Z,True,rack_____rack_____1272_____185667820,"Maybe, now that we support static handlers, this line should be altered?

Perhaps:

> <tt>rack.upgrade</tt>:: Is used to pass a handler object back to the server for WebSocket and SSE connections.",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-02T23:45:32Z,True,rack_____rack_____1272_____185669700,"Sure, minor change.",True,True,128,932194.1166666667
rust-lang_____rfcs_____2426,2018-05-03T05:47:39Z,True,rust-lang_____rfcs_____2426_____386196891,"> Well, we disagree on this point. Rust doesn't use the same semantics as Java or C++; but you still have to handle exceptional cases in Rust.

With respect, I find this a bit misleading. For me and most of the people I know, if you say ""throw an exception"", the thought that comes to mind is not ""return Err(e)"" but ""unwind to the nearest catch or except block"". I really don't want people to think that rust does that.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-03T06:05:07Z,True,rust-lang_____rfcs_____2426_____386198882,"I'd like to bring up the usual argument that introducing a new language construct **always** increases complexity. The more pure the language, the easiest it is to understand.

Therefore any benefit in introducing language features must clearly have a huge advantage over not doing it. This is clearly not the case here.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-03T06:24:17Z,True,rust-lang_____rfcs_____2426_____386201369,"@tomaka 

> I'd like to bring up the usual argument that introducing a new language construct **always** increases complexity.

If this is speaking about the complexity for a language user, then I think this plainly untrue.
Some features can even **decrease** complexity such as when it improves uniformity. See for example, `Self(42, 24)` and `Self { x: 42, y: 24 }` and accepting multiple patterns in `if let` (just like in `match`).

A feature can also reduce complexity for the user if before, for a certain class of problems, you needed to think about two separate features but now only one. For instance, before you had to think about `Err` and `return`, but now only `throw`.

> The more pure the language, the easiest it is to understand.

I don't think this is true either, and absolutely not for understanding programs written in the language.
While [SKI](https://en.wikipedia.org/wiki/SKI_combinator_calculus), is a dead simple language, and you can understand the primitives of SKI in isolation, understanding something written in SKI is harder than understanding a program written in Rust.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-03T06:30:24Z,True,rust-lang_____rfcs_____2426_____386202237,"> the more I think about it and the more discussions I've seen about error handling in Rust, the less inclined I find myself to choose keywords and constructs evocative of exceptions.

I had the opposite experience, actually, so I'd like to hear more about what it is about exceptions that's a poor match here.  I [started](https://internals.rust-lang.org/t/bikeshed-rename-catch-blocks-to-fallible-blocks/7121?u=scottmcm) by preferring a `fallible {}` block, perhaps with a `fail` expression, but was convinced that there's very minimal value in innovating on keywords here, but [plentiful value](https://github.com/rust-lang/rfcs/pull/2388#issuecomment-383441080) in leveraging existing intuitions.

Looking at some things that have been mentioned:

> We do need to tell people ""Rust does not have exceptions""

Do we?  I've never found the statement ""Rust doesn't have exceptions"" all that helpful when the answer to the next question is something like ""well, you replace `public Foo GetFoo() throws FooException` with `pub fn get_foo(&self) -> Result<Foo, FooError>`, replace `throw new FooException()` with `return Err(FooException)` and you call such functions as `.get_foo()?` if you don't want to handle the ~~exception~~error right away"".

I'd rather say ""Rust encodes exceptional situations using `Result`, which gives them more consistent performance and allows them to be treated as normal values where needed, as well requires that you annotate calls of functions that can throw to help avoid exception-safety problems"".

(And if by ""exceptions"" one means ""unwind tables"", then Rust definitely has exceptions.)

> The semantics of Rust error handling and exception based error handling are at odds, and so are intuitions based on them.

Other than that they need to be explicitly propagated, I'm not sure what's at odds here.  There are performance differences, sure -- where neither is strictly better -- but a statement like ""file open 'throws' for error cases"" applies just as much in Rust as it does in something like C#.

> It special cases errors more than I'd like, since I believe errors should always clearly be normal values.

I don't think ""real"" syntax makes this any less true than `bail!`.  And neither prevents all the goodness like one can naturally store the ok/error disjunction for later that comes from `Result`, without needing weird hacks like [`ExceptionDispatchInfo`](https://msdn.microsoft.com/en-us/library/system.runtime.exceptionservices.exceptiondispatchinfo(v=vs.110).aspx).

> Every new control flow construct increases the language surface in a critical place. I don't believe the advantages here (not writing `Err`) are worth the complexity increase.

I think niko addressed this well in https://github.com/rust-lang/rfcs/pull/2426#issuecomment-386079005.

I'll add that a missing language feature which results in a bunch of not-quite-the-same-thing macros being extensively used can be worse, complexity wise, than the syntax addition.

> With the auto-conversion included, it's another place where type conversion happens without being explicitly requested.

Typing `throw` seems pretty [explicit](https://boats.gitlab.io/blog/post/2017-12-27-things-explicit-is-not/) to me.

---

Meta: should this be considered an e-RFC?  Similar, though going further than, https://github.com/rust-lang/rfcs/pull/2426#issuecomment-386137030, I'd personally be good to handle this as ""this is permission to reserve the keyword and try it out in unstable, but approval of a subsequent RFC with concrete semantics is needed in the future before it can start to be considered for stabilization"".",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-03T06:34:03Z,True,rust-lang_____rfcs_____2426_____386202768,"> Some features can even decrease complexity such as when it improves uniformity. See for example, Self(42, 24) and Self { x: 42, y: 24 } and accepting multiple patterns in if let (just like in match).

That is true, although I would argue that these are more bugfixes than features. Self and multiple patterns in if let are not new constructs.

> A feature can also reduce complexity for the user if before, for a certain class of problems, you needed to think about two separate features but now only one. For instance, before you had to think about Err and return, but now only throw.

Before I had to learn about return and Err. Now I have to learn about return, Err, and throw.

Before when I want to return a value I had to think about return, now I have to think about both return and Err.

> I don't think this is true either, and absolutely not for understanding programs written in the language.

You are exaggerating what I say. I'm not opposed to redundant language construct, but to me they have a base negative cost that needs to be counter balanced by their positive impact.

Adding new language constructs to SKI would make it much easier to read, which counter balances the decreased purity.

Adding throw and try doesn't have a large-enough benefit to outweigh the increased language complexity.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-03T06:39:12Z,True,rust-lang_____rfcs_____2426_____386203524,"I also would like to ask if `try` really is worth it.

While returning an error is a quite common pattern, handling errors is very very uncommon to me.
For me you generally do so when you just turn the error into a human-readable message, but that's mostly it.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-03T06:52:18Z,True,rust-lang_____rfcs_____2426_____386205451,"@mark-i-m  I don't know about most people. Your inference is too technically detailed for my taste and does not fit with what I intend when I use `throw`.

What I intend when I say `throw new MyException()` in Java is that this case is exceptional, nothing more than that. For example, I don't  consider the `catch` block when it is not in the same method.

Similarly, if I write `if cond { return Err(MyError) }` in a function `foo` in Rust, I don't immediately consider a `match` block in some other function `bar` that applies `foo`. All I want to say is that `MyError` is an exceptional case that happens, given some condition.

----------------------

@tomaka 
> Before I had to learn about return and Err. Now I have to learn about return, Err, and throw.

Yes, that's true. But it should be fairly clear which construct to use when. Thus you don't get into [Decision fatigue](https://en.wikipedia.org/wiki/Decision_fatigue).

Specifically in the case of `throw`, I already think most programmers are familiar with it. The semantic differences are not that a beginner to Rust would not benefit from the familiarity in my opinion.

> Adding throw and try doesn't have a large-enough benefit to outweigh the increased language complexity.

Well, on that we disagree :)

-------------------------

@scottmcm 

> Meta: should this be considered an e-RFC?

Sure, why not :) It doesn't really nail down the semantics of `throw` exactly, so that fits.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-03T07:10:46Z,True,rust-lang_____rfcs_____2426_____386208551,"@scottmcm I don't think I'd ever use ""exception-safety problems"" to describe scenarios where you should use `?`. Rather, I'd say that Rust doesn't have exceptions, and that (taking into account whether someone knows about enum yet) it has a type called `Result` to represent either a valid value or an error. And since a common reason to return an error is that a function you called returned an error, you can write `?` as a shorthand for ""if this expression is an error, return that error"". (Additional details about type conversions or non-Result types can come in a later explanation.)

That's *nothing* like unwind-based exceptions.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-03T07:17:08Z,True,rust-lang_____rfcs_____2426_____386209707,"@joshtriplett 

> a shorthand for ""if this expression is an error, return that error""

Kinda like ""(conditional) re**throw**"" 😄

> (Additional details about type conversions or non-Result types can come in a later explanation.)

This is how I think `throw`.

We first explain what it does wrt. the intent of the programmer.
After that, we note these kind of exceptions are not unwind based but rather on *errors as values*.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-03T07:37:13Z,True,rust-lang_____rfcs_____2426_____386213798,"@scottmcm 
> Meta: should this be considered an e-RFC? Similar, though going further than, #2426 (comment), I'd personally be good to handle this as ""this is permission to reserve the keyword and try it out in unstable, but approval of a subsequent RFC with concrete semantics is needed in the future before it can start to be considered for stabilization"".

If this were changed to `fail`, I'd support accepting it as an e-RFC.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-03T07:54:27Z,True,rust-lang_____rfcs_____2426_____386217257,"Status update on `try { .. }`:

RFC #2388 for reserving `try` as a keyword and replacing `catch { .. }` with `try { .. }` is now merged.
See the tracking issue https://github.com/rust-lang/rust/issues/50412 for details.",True,True,196,33091.05
Homebrew/brew/3720,2018-05-03T09:14:52Z,False,5aead3166480fd228c542121,"And 💚 CI on Linux now too, woohoo.",True,False,110,173514.51666666666
rust-lang_____rfcs_____2426,2018-05-03T09:23:22Z,True,rust-lang_____rfcs_____2426_____185739891,It might pay to disable syntax highlighting for examples to avoid the lack of highlighting on `throw` influencing people's subjective impression of the new syntax.,True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-03T09:28:17Z,True,rust-lang_____rfcs_____2426_____185741046,Good catch; However I think (hope) people will see beyond that :),True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-03T09:42:25Z,True,rust-lang_____rfcs_____2426_____185744553,"The highlighting appears to be correct on everything in the examples other than `throw` itself, including the expr being thrown, so I think we're getting a much more accurate impression already than we would with no highlighting at all.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-03T11:34:45Z,True,rust-lang_____rfcs_____2426_____386265875,"`throw expr;`  
`Err(expr)?;`

look, they're the same length!",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-03T12:17:45Z,True,rust-lang_____rfcs_____2426_____185777702,"> I think (hope) people will see beyond that

I agree that people can see beyond it. I just know that I at least have a hard to ignore subconcious reaction to the inconsistent highlighting on

```rust
if condition { throw Foo } else { return Ok(Bar) }
```

which makes it more difficult for me to really judge the new syntax. I'm expecting that `throw` is the start of a normal expression since it's not a keyword. Whereas I find it much easier to suppress that and treat `throw` as a keyword without any highlighting

```
if condition { throw Foo } else { return Ok(Bar) }
```",True,True,196,33091.05
rack_____rack_____1272,2018-05-03T12:49:46Z,True,rack_____rack_____1272_____386284278,"I've been mucking around with a sample implementation of this proposal.

I can implement it entirely as middleware. So, in my mind, it could be something independent of Rack. I didn't implement it exactly because I just reused what I've already done with `async-websocket`.

# Specific feedback regarding the proposal.

With reference to https://developer.mozilla.org/en-US/docs/Web/API/WebSocket

## `rack.upgrade?`

It's okay. It's trivial enough to implement.

It's not clear if the user should return anything. In my case, I use hijack, so no return is necessary (or desirable).

## `on_open`

Makes sense. Do you mean the connection at the socket level or the connection at the web-socket level?

## `on_message(client, message)`

Makes sense.

## `on_shutdown(client)`

Not exactly sure where this fits in. It's similar to `on_close`.

## `on_close`

Do you mean when the websocket connection has been closed by the remote end only (and gracefully?) i.e. when ready state of web socket is changed to close? What about EOF?

## `on_drained(client)`

This seems very asynchronous model dependent. I don't know how to implement this. My model is completely asynchronous so when you call `write` it won't return until the write is complete, but it's non-blocking. Remove this or make it completely optional (as in, it should still work if unimplemented).

## `write(message)`

Pretty crappy name IMHO, because it directly clashes with the WebSocket::Driver implementation's use of `#write` (https://github.com/faye/websocket-driver-ruby#usage). If you have to wrap the underlying driver, it's another object allocation. Bleh. Rename it `#send` or `#text`?

It would be pretty damn convenient if `#send` would convert it to JSON first. Perhaps if `Accept: application/json` is set, it can be done automatically. We could also support other formats. So, user doesn't need to worry about underlying transport to send complex objects (e.g. hash, array, and so on).

## `close()`

If user calls this, what is the sequence of events afterwards? `on_close`? `on_shutdown`? Nothing?

## `open?()`

In distributed systems, it's hard to know if anything is truely open. But you can usually tell with certainty if something is closed. Rename to `closed?` - it's typical Ruby `IO#closed?` `Socket#closed?` and so on.

## `pending()`

Again, this is very async model specific. Remove?

I still stand by my original assessment. But, I think it's an interesting idea. This proposal implements something which can be done entirely in middleware with minimal overhead if your server has a half decent concurrency model.. I don't see a clear benefit to making Rack more complex in this regard and encoding a concurrency model into the `SPEC`. However, I can see value in making some kind of standard layer. I just don't feel like it belongs in the server to implement it, middleware would make more sense.

I still believe streaming requests/response bodies to be the right way forward, but I'm still learning about how this all fits together with HTTP/2 and whether it's possible to use XMLHTTPRequest in a similar way to WebSockets in the browser. It's simpler to set up, multiplexes better (when running on HTTP/2), and has a simpler model - basically read chunk from stream, write chunk to stream, and it works with existing request/response model without any real changes.

Anyway that's my 2c. Feel free to play around with the implementation :)",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-03T13:28:01Z,True,rack_____rack_____1272_____386295227,"An addendum, a concurrent `rack.hijack` IO should be possible for most servers with very minimal surface area (it's what `falcon` does). It would still require some kind of `rack.upgrade` approach since to make a worker truely async you'd need to expose part of the concurrency model, as in ""Your rack.upgrade object will be run in it's own thread with blocking IO"" as the base requirement, but with more advanced servers able to provide better guarantees (e.g. rack.multithread could be false, you can assume an `async` like model if things are running concurrently). Again, it starts to get pretty hairy, in terms of how you define that model, and whether that should really be in Rack, but it's probably a more generic approach and it would work with HTTP/2 as well (in general, rack.hijack with an IO like API should map directly to HTTP/2 streams, and it's the next thing I want to try in `falcon`).. It wouldn't even preclude you from implementing web sockets on top of it with whatever you currently use and a default implementation as a middleware which really does just make a thread per request is entirely possible.",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-03T13:33:08Z,True,rack_____rack_____1272_____386296756,"I appreciate you taking the PR seriously enough to devote time to exploring implementation options. Thank you. Nice summary as well. I'd like to point out that all the method are optional. If the handler does not respond to the method then it is not called.

`rack.upgrade` :heavy_check_mark: 

`on_open` indicated the connection has beenn upgraded to WebSocket or SSE and is ready for sending messages.

`on_message` :heavy_check_mark: 

`on_shutdown` I agree, it does not seem necessary.

`on_close` Yes, called when the socket is closed. Ideally gracefully but that assumes the client did a graceful close which may not be the case. Basically the socket is no longer write able and nothing else will be received from it. Since both WebSocket and SSE are message based the notion of EOF doesn't really come into play as it is a streaming concept. Best case is EOF is the same as closed or maybe another way to look at it is if the server is reading a message and gets an EOF error then it assumes the socket is closed and tells the application that the connection is classed with the `on_close` callback. That is the way Agoo handles it anyway.

`on_drained` indicates no more messages are waiting to be sent. Depending on the implementation this could indicate the previous message was sent and another can be sent or the backlog of messages has dropped to zero. It is meant as a way for the application to meter itself and detecting slow consumers. In my opinion it is nice to have to avoid slow consumer attack vectors.

`write` could certainly be renamed but `send` would conflict in the base Ruby Object `#send` so something different. `#write` is the second best choice. You seem to have agreed since you used it in Faye which of course is where the conflict lies. How about `push`?

`close` when called initiates a graceful close of the connection. Once closed the `on_close` callback should be called.

`open?` flipping the call to `closed?` makes sense. Agreed.

`pending` is async specific. It could be removed and everything would still be fine. It was added to address the slow client issues and allow and application to address slow client attacks. How about return some value that indicates it is not supported?

Thanks again for the well thought out response.",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-03T13:37:24Z,True,rack_____rack_____1272_____386298090,I like the idea of using `rack.multithread` as an indicator to the application as to what it can expect in regard to the async model especially since it is already part of the spec and seems to be a perfect fit.,True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-03T13:41:14Z,True,rack_____rack_____1272_____386299251,"> write could certainly be renamed but send would conflict in the base Ruby Object #send so something different. #write is the second best choice. You seem to have agreed since you used it in Faye which of course is where the conflict lies. How about push?

Don't get me started with `send` and Ruby. I had no end of problems with it several years ago, when I first started playing with Ruby's IO. Fortunately, now `__send__` exist in Ruby. I sometimes wonder if we are writing Python :p

To me, send/recv are socket level, but they resonate for higher level network IO too.

read/write make me think of buffered IO.

As this is a message based protocol, and you chose `on_message`, why not then `send_message`?

> pending and on_drained  ...

I understand where you are coming from.

In my client code, the following happens:

```ruby
connection.send_message(....) -> @driver.text -> @socket.write(protocol level data) -> Socket#write_nonblock -> okay, :wait_writable or EPIPE
connection.send_message(....) -> @driver.text -> @socket.write(protocol level data) -> Socket#write_nonblock -> okay, :wait_writable or EPIPE
connection.send_message(....) -> @driver.text -> @socket.write(protocol level data) -> Socket#write_nonblock -> okay, :wait_writable or EPIPE
```

You literally can't send messages faster than they would be written to the socket, because you'll yield on `:wait_writable` and `select(io, writable)`. Once the data is written to OS socket, how do you know `pending` or not? I mean, eventually that buffer will fill up. But do we get receipt of messages in WebSockets? I don't know enough about it, I only used `websocket-driver` and left the rest up to that gem. Can we get pending acknowledged count from that implementation?




",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-03T13:43:29Z,True,rack_____rack_____1272_____386299976,"In an implementation where messages are buffered some how, where do you propose to handle EPIPE? Or should it never occur and `on_close` should be invoked? or do we need `on_error`? To me, implementing something like `on_error` to handle EPIPE?

If your concurrency model is more event driven, I can imagine you would buffer the message and actual writing might occur on a different call stack.",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-03T13:47:05Z,True,rack_____rack_____1272_____386301122,"In my implementation, when you have a loop like `while event = @driver.next_event`, if you receive EOF, event is nil. It's not an exception. Then, it would call `on_close`. However, sometimes it might be caused by ECONNRESET. This is really an error condition. should it be `on_close(error = nil)`?

but if you call send_message, and remote end is gone, you make get EPIPE, Errno::ECONNRESET, or on macOS even EPROTOTYPE (https://bugs.ruby-lang.org/issues/14713). It's not graceful. Sometimes yo can get E",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-03T13:55:18Z,True,rack_____rack_____1272_____386303835,"You bring up some interesting points. For Agoo the write are indeed on a different call stack but I like the idea of providing more information to the application about the reason for a close. Maybe the callback should be `on_close(err)` where `err` is `nil` for a graceful close. Yes, we are thinking along the same lines,

I would expect a write to fail with some kind of exception if the connection has been closed. Agoo raises an IOError.
",True,True,128,932194.1166666667
Homebrew/brew/3720,2018-05-03T21:39:10Z,False,5aeb81886480fd2434ce8fee,"Hey @MikeMcQuaid, I'm super excited the portable versions of Ruby with `dbm` included were built, and that CI is passing! 🎉

Is there anything else that needs to be done on my end for this PR? Would you like me to write unit tests for the `DatabaseCache` class?",True,False,110,173514.51666666666
rack_____rack_____1272,2018-05-03T21:52:37Z,True,rack_____rack_____1272_____386448690,"@ioquatix, it is my humble understanding that this specification allows us to abstract away the network layer as much as we can.

This allows all persistent connections to share the same API regardless of their type (WebSockets, SSE, raw TCP/IP, etc').

It's my understanding that EOF and other network details should be handled by the server. They aren't application related events.

The reverse is also true. JSON is as application concern, it doesn't fit every persistent connection out there (i.e., binary transmissions in WebSocket data).

It's my recommendation that the server require a String object and let the application deal with making sure the data formatted as a String.

Network details could be inferred by the server (UTF-8 for text encoded messages and otherwise the server should probably assume binary data, which some connection objects might not support).


### `on_shutdown`

> `on_shutdown` I agree, it does not seem necessary.

I humbly disagree.

Maybe I'm assuming but I think applications can benefit from the knowledge that the client is closing because the server is shutting down.

There are three possible disconnection causes:

1. The connection is deemed unnecessary (this could be a proxy timeout due to inactivity).
1. The server shutting down (the client might be mid transmission).
1. Network errors (which we can do nothing about).

True, `on_shutdown` only called when the server is shutting down (not for every connection), but it's a good way to prevent communication errors and keep the disconnection polite - especially when using server clusters or load balancing.

This could be use by load-balanced micro-services as well to indicate a node is going away (and perhaps send a list of alternate nodes in a gossip based system).

### `on_drained` / pending()

@ioquatix , since you're using a blocking model, where the method returns only after `write` was complete, `pending` can easily return `0` - no pending `write`, indicates that `on_drained` isn't about to be called (maybe ever).

Do note that this blocking design might be risky, if - for example - a DataBase connection was checked out of a connection or the `write` method was called within a critical section (i.e., looping over all clients).


### `write`

> `write` - Pretty crappy name IMHO...

Actually, just because other implementations use this amazing name (which is also the name of an underlying system call), doesn't mean that the specification should choose a poor name...

...in fact, it just supports the choice as a good one - developers will have a good idea as to what happens when they call this method.

IMHO `send` conflicts with the Ruby object `send` which might prevent an error from being detected (i.e., if `send` is called on another object, it will not return a ""missing method `write`, but rather a long gibberish message).

`push` seems (IMHO) less intuitive and more protocol specific (SSE). It also implies objects rather than data.

IMHO, `write` describes exactly what's happening. It might behave slightly differently from an IO `write` (no partial `write` allowed), but it performs the same function.

### `open?`

> open? flipping the call to closed? makes sense. Agreed.

Actually I think this `closed?` will make application code harder to maintain. It's too easy to mixup `close` for `closed?` and vice verses.

Using `open?` is safer, even if the server's information regarding the connection is never fail proof.

### `on_close(err)` / `on_error(err)`

I really think network / connection errors aren't an application concern, they are a server concern.

However, if we are to report an error, I would wonder if it would make sense to place the error information in a different callback, preventing the need for the obvious `if(err)` block of code in `on_close`.
",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-03T21:56:54Z,True,rack_____rack_____1272_____386449668,"@ioquatix 

> In my implementation, when you have a loop like while event = @driver.next_event, if you receive EOF, event is nil. It's not an exception. Then, it would call on_close. However, sometimes it might be caused by ECONNRESET. This is really an error condition. should it be on_close(error = nil)?

`ECONNRESET` is a perfect example for an error that the application really shouldn't receive. Why should the application have any information about network errors? What would it do with it?

IMHO, this is a Server related concern and it should be handled by the server.",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-03T22:11:50Z,True,rack_____rack_____1272_____386452844,"I have less of an issue passing some error back to the application with `on_close`. The application can't do anything about it but it isn't harmful either.

@boazsegev you make some good points I was a little too willing to compromise on.

I'm not sure where we go from here. I assume we need a 'member' to step in again. How about it @tenderlove , how should we proceed on this PR?",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-03T22:54:15Z,True,rack_____rack_____1272_____386460920,"@ioquatix 

> In my client code, the following happens... 
>
> You literally can't send messages faster than they would be written to the socket...
>... Once the data is written to OS socket, how do you know pending or not?

I think the question isn't about data pending **after** performing `write` to the socket. It's about data pending **before** `write` is performed (if applicable).

In your  (fiber-per-connection) model `write` always completes. But consider the node.js model (which iodine emulates in this regard):

* An application calls `connection.write`.
* The server places the data in the connection's queue and adds a `flush_connection` event to the event loop.
* `connection.write` returns.

    Note that _**no network actions were performed**_. At this point `pending()` would probably return `1` (or perhaps a higher value).

* The application code ends and the server handles the ""flush"" event, flushing the connection's buffer using the system call `write` (or `socket.write`).
* Once all the data was written to the socket (which might require a number of events) the connection's `on_drained` event is scheduled.

   This doesn't guarantee that the data actually reached the browser/client (a network error might have occurred, the OS might be waiting on a timeout).

   This only guarantees that the server won't call `write` (or `sock.write`) until more data is scheduled to be sent - the data is out of the server's control.

",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-03T23:06:27Z,True,rack_____rack_____1272_____386463025,Agoo uses a similar approach.,True,True,128,932194.1166666667
rust-lang_____rfcs_____2426,2018-05-04T00:25:38Z,True,rust-lang_____rfcs_____2426_____386475629,"In the interests of finding and documenting common ground:

I'm withdrawing my objections to the introduction of *some* statement for this. I do think such a statement should go through appropriate experimentation, and go through further evaluation before stabilization to determine if it's worth the cost, but I'm not going to object to *starting* such experimentation in nightly.

Given the above, I also don't have any objection to the use of the keyword `fail` for that concept.

I do very much object to the use of the keyword `throw` for that concept. I'll leave aside bikeshedding on taste for the moment (e.g. whether `fail` pairs nicely with `try`). My primary objection here is the use of exception-based terminology, rather than something that has sufficiently little baggage attached to it that we can safely define it without surprising people with an uncanny valley of slight differences. I'd like the term we use to come across as ""similar to `return` but for an error"", rather than ""similar to exceptions"".",True,True,196,33091.05
rack_____rack_____1272,2018-05-04T01:06:19Z,True,rack_____rack_____1272_____386481308,"**`write` - exception vs. `true`/`false`?**

Reading through the thread I noticed how hard it might be to predict a `write` failing.

This means that user code must use `begin`/`rescue` blocks to address network issues.

Since a failing `write` is a predictable and possible result in the normal flow, wouldn't it be better if the server handled any exceptions and simply returned `true` if the data was (or scheduled to be) written to the socket and `false` otherwise?

I think this will improve performance and also prevent the obvious nesting of exception handling code (on the server and the app).

Thoughts?",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-04T01:22:24Z,True,rack_____rack_____1272_____386483449,"I had assumed raising an exception was the natural behavior but maybe that is not the best approach. Even returning true or false does not necessarily indicate the message was delivered. I think the real question is, what information would be useful to the app. Maybe nothing. Callbacks exist for closing which lets the app know writes will no longer be delivered. Is an acknowledged protocol desired on top of WebSockets? I think that might be a step too far.",True,True,128,932194.1166666667
rust-lang_____rfcs_____2426,2018-05-04T01:24:50Z,True,rust-lang_____rfcs_____2426_____386483780,"Conversely, this thread has convinced me that calling it `throw` might not be too bad, but I'm still skeptical that having such a feature is sufficiently justified.",True,True,196,33091.05
rack_____rack_____1272,2018-05-04T02:18:29Z,True,rack_____rack_____1272_____386490033,"There are currently two implementations of the originally proposed spec, Agoo and Iodine. I'd think that if proof that the spec is workable.

Waiting for several applications to be implemented against a spec that has not been approved seems rather unlikely. Does that pretty much means not changes can be made to the spec because there is no spec to follow. Rather circular logic.

So the purpose of this PR was to refine the proposal and then get a vote which would be result in this PR being either approved or rejected. How do we get to that phase?",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-04T02:22:39Z,True,rack_____rack_____1272_____386490611,"> Waiting for several applications to be implemented against a spec that has not been approved seems rather unlikely.

I don't think so. Making some sample apps is a great way to document the API, provides a great starting point for new users, etc. And finally, if the sample apps can't work between servers, what's the point of a shared SPEC?",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-04T02:26:56Z,True,rack_____rack_____1272_____386491161,"> There are currently two implementations of the originally proposed spec, Agoo and Iodine. I'd think that if proof that the spec is workable.

I think we need to see a working implementation in at least Puma & Passenger as a baseline since that is what is very common for Ruby development and production.",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-04T02:35:45Z,True,rack_____rack_____1272_____386492282,I believe the suggested bar was several practical applications. There are already sample applications in the Agoo and Iodine repositories. ,True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-04T02:38:32Z,True,rack_____rack_____1272_____386492566,"> To implement several practical applications

Something more practical than ""Hello World"". For example, a shared real-time Todo list :p

I think we should be involving some database activity in the callback, probably using ActiveRecord or Redis.

If you've already got several sample applications, once we finalise a draft SPEC and we all implement it, we should be able to all run those apps on our respective servers, right? That's the whole point of having a shared SPEC.",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-04T02:43:40Z,True,rack_____rack_____1272_____386493067,"I still don't see a statement about whether `write` can block.

I'm also unconvinced that pending/drained is an effective solution for non-blocking writes.

I remain of the opinion that this should remain a draft / small-e extension while real-world implementations adopt it and fully exercise it.

Easy-mode for convincing me would be a PR to Rails adapting Action Cable to this API -- which would also allow like-for-like benchmarking.",True,True,128,932194.1166666667
rust-lang_____rfcs_____2426,2018-05-04T04:43:14Z,True,rust-lang_____rfcs_____2426_____386504543,"As a newcomer to Rust, I think there is great value in using exception-like terminology and mechanisms (throw/try/catch) in the interests of making Rust a more approachable, less difficult to learn language even if Rust throws errors that are manually propagated instead of throwing exceptions that automatically unwind the stack. I understand the concern that it may be better to introduce new terms, such as fail instead of throw, rather than re-use terms from other languages if the semantic match is not exact but I argue here that this cure is worse than the disease.

People familiar with throwing exceptions will already know the following things which also apply to throwing Rust errors:
(1) ""throw"" means to initiate/produce an error
(2) what is thrown may contain additional information about the error and this can be customized
(3) what is thrown will either be caught and handled in the current function or propagate out of the function and be handled higher up in the call chain
(4) a try block can be used to group the code that may throw so that we may have a single point where we first decide what if anything we want to do about the error and this may include just propagating the error to the next level

This is a substantial amount of intuition coming merely from the word ""throw"". If we use other words, such as fail or its synonyms, the person learning Rust cannot assume any semantics at all - which is precisely why a new term was used - and the result is a sharper learning curve.

When considering how different is different enough to I think it's also interesting to note that even when languages adopt the same general mechanism, exceptions with the typically associated terminology, there are usually all kinds of subtle/papercut-like differences that have to be remembered, and thus having differences in Rust's usage for throw/try/catch is par for the course. For example C++ vs Java exceptions:
https://www.geeksforgeeks.org/comparison-of-exception-handling-in-c-and-java

I believe the jury is still out about use of catch in Rust, where catch allows a match-like mechanism for handling errors but for the same reasons I truly hope we will get this too.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-04T05:26:02Z,True,rust-lang_____rfcs_____2426_____386508525,">I'd like to bring up the usual argument that introducing a new language construct always increases complexity

To counter, the simplicity this RFC is seeking is making Rust **programs** simpler, not necessarily the language itself. I'm all for language growth that leads to simpler, more clearly expressed and more easily understood Rust programs (especially more easily understood by C++ programmers, of which I've been one for many years.)",True,True,196,33091.05
rack_____rack_____1272,2018-05-04T06:15:31Z,True,rack_____rack_____1272_____386513684,"@matthewd ,

Although I understand the suggestion (adding a Rails PR), I find that quite unfair.

I can program a server in C and I can wrap in a gem for Ruby MRI... but I know nothing about ActionCable, it's inner workings or the Client<=>Application protocol used above the WebSocket layer.

The learning curve and time spent on a Rails patch would only be viable if the PR is conceptually acceptable and we all intend to move forward with the proposal and implement it.

I really doubt if pushing a PR to Rails is something that should happen before we agree that the PR is conceptually acceptable (i.e., contingent on benchmarks, or whatever).

As a side note, I also don't think this should enter be a Rails 5.x release. This PR has the potential to retire the Rails IO handling layer (the one based on `nio4r`) and reduce the existing codebase significantly - at least where WebSockets and SSE (and perhaps long polling could be achieved by [Javascript's polyfills](https://github.com/Yaffle/EventSource), retiring `hijack` altogether).
",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-04T06:21:40Z,True,rack_____rack_____1272_____386514494,"> I still don't see a statement about whether write can block.

@matthewd , I assumed (since there's no statement) that it would be implementation defined.

I'm assuming that blocking servers will be avoided by applications that are effected by the behavior.

But I totally understand if you believe there should be a concurrency model requirement regarding `write` and `close` not blocking. After all, if `write` blocks, pub/sub performance might grind to a halt.",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-04T06:24:21Z,True,rack_____rack_____1272_____185997879,"After reading through @ioquatix and @matthewd 's comments, I wonder:

Perhaps `close()` should ""_schedule the connection to close once all pending `write` calls have been performed_""?",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-04T07:29:12Z,True,rack_____rack_____1272_____186006296,"If you want to have that, implement it as `close_write` which is what Ruby calls `shutdown(SHUT_WR)`. `close` should guarantee after returning that the underlying socket is closed. Otherwise, you are in for a world of pain.",True,True,128,932194.1166666667
rust-lang_____rfcs_____2426,2018-05-04T08:33:39Z,True,rust-lang_____rfcs_____2426_____386537354,Why do we need such a statement? Both `bail!` and `Err()?` and `try!(Err())` are fine choices. I don't think that the additional complexity of the language is worth it. We aren't C++ :p.,True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-04T09:23:25Z,True,rust-lang_____rfcs_____2426_____386548011,"@ibkevg 
The problem is that it's a trade-off along a continuum, so there's no simple answer.

If you optimize for language simplicity over program simplicity, you get something like Brainf*ck.

If you optimize for program simplicity over language simplicity, then the farthest hyperbolic extreme you could theoretically go would be to have the compiler contain billions of programs, so most ""programs"" would be nothing more than `program28064309876()`.

Neither extreme is very useful, so the question is finding the middle point that's right for Rust. As someone who is *not* a C++ programmer and who has seen and appreciated the Python influences in Rust's design, RFCs like these, which seem to lean in the direction of Perl's ""There Is More Than One Way To Do It"" philosophy of duplication without justification, worry me.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-04T09:49:53Z,True,rust-lang_____rfcs_____2426_____386553824,"Sorry if this has been discussed before (as I wasn't following the RFC the whole time), but could you mention the advantage of `throw expr` over `Err(expr)?` in the RFC text? (for example, you have discussed its advantage over `throw!(expr)`)

If I understand correctly, `Err(expr)?` isn't strictly diverging so it's not exactly equivalent -- that is, unless the compiler can guarantee that `Err(...)?` always triggers the failure path. [Here](https://play.rust-lang.org/?gist=6f598b36678183a05f17642fc55eef66&version=stable&mode=debug)'s a rather contrived example.

Also, does `Err(expr)?` work with other types that implement `Try`?",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-04T10:45:10Z,True,rust-lang_____rfcs_____2426_____386564978,"Personally, using `fail` instead of `throw` makes it a little better. But in general I'd still be opposed because it's another control flow construct, and because it is still special casing errors.

At this point my favorite would be a general-purpose works-for-everything `break 'my_operation Err(my_error)`.",True,True,196,33091.05
rack_____rack_____1272,2018-05-04T12:13:43Z,True,rack_____rack_____1272_____186063615,Agoo treats a cal to close as a request just like a write and places the close on the queue.,True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-04T12:17:16Z,True,rack_____rack_____1272_____386583565,@matthewd would a statement leaving the blocking behavior up the the server be enough or maybe a method to ask if blocking would block other threads?,True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-04T12:34:23Z,True,rack_____rack_____1272_____186067832,"@ohler55, so does iodine. I place a ""close"" marker on the packet queue, so `close` is always performed after all scheduled data is sent.


@ioquatix , I think your missing the point o f abstracting away the network and the protocol.

My suggestion was about clarifying this little bit, not changing what both iodine and agoo already implement.

We aren't authoring a network layer. We are authoring an abstracted application side API.

The reasonable exception is that `write` is perfumed before `close`. i.e., if my code is:

```ruby
write ""hello""
close
```

The reasonable expectation is that ""hello"" is actually written.

There's no `force_close` or `close_write` in the specification because the application shouldn't be concerned with these things. If the application doesn't want data written, it can avoid writing it.
",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-04T12:36:02Z,True,rack_____rack_____1272_____186068205,"You can make close call `flush`, or you can flush after every write. But you make close call flush, you better be careful about `EPIPE`.",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-04T12:43:40Z,True,rack_____rack_____1272_____186069857,"@ioquatix 

I think these are implementation details that each server could work out according to it's architecture.

The falcon implementation, for example, seems to block `write` so it always completes before `close` (or so I understand) while iodine's implementation places a flag and adds an event to the event queue. 
",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-04T12:47:44Z,True,rack_____rack_____1272_____186070867,"Sure as long as there are no pratical differences to the user, it would be reasonable. However, if you are buffering events, you might end up with the user having the wrong expectations.

```
10.times do
    connection.send_message(...)
end

# got here, were all events sent? it depends on implementation. Can I call flush to confirm they were sent?
```


",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-04T13:00:37Z,True,rack_____rack_____1272_____186074373,"I'm not sure what you expect `flush` to do. In most uses flush blocks until all outstanding writes have completed. Is that the intent, block until completed? The PR proposes the `on_drained` callback for that purpose or a `pending` count of zero. Are you proposing a `wait_for_all_writes_to_complete` method called `flush` in addition to the existing ones?",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-04T13:03:09Z,True,rack_____rack_____1272_____186074963,"For a high level protocol like this, calling flush after each write would make sense to me.

It provides the user with a strong expectation, that after calling write, the data has been sent, and pending a network failure, would arrive, or else the write fails right then, with, say, `EPIPE`. Otherwise you'll just end up with a spaghetti state machine trying to handle all these conditions.",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-04T13:08:00Z,True,rack_____rack_____1272_____186076104,"@ioquatix ,

I hope I don't seem too blunt or crude. I very much appreciate the interest and willingness to polish the specification and make it both as clear and as practical as can be.

However, please consider the model to be totally separate from the network - there is no network. There's only this API.

We can change the API if we need features, but we don't expose network bits or logic because part of our job is to abstract these things away - so there is no network, there is no protocol (as much as possible).

In this sense, `flush` doesn't exist. It's a network / server detail that the client never sees, abstracted away by the server.

The closest an application can come to ask about these things is to ask about all the `pending` events that haven't yet completed. This allows an application to know if the `on_drain` callback is somewhere in their future.

The `pending` query doesn't to expose the network, it exposes the progress of existing API calls. This provides important information about the possibility of a slow client (or a slow clearing ""queue"") allowing an application to stop serving a resource hungry ""client"".",True,True,128,932194.1166666667
rust-lang_____rfcs_____2426,2018-05-04T13:08:49Z,True,rust-lang_____rfcs_____2426_____386596040,"@phaylon 
> because it is still special casing errors.

I don't see how this argument is workable because we already special case errors in the language with the re-throw operator `?`. This eliminates most of the places where you would otherwise see errors as just ordinary values with no sugar.

Furthermore, we did merge RFC #2388 (`try { .. }`) and so at least we have the intent to special case errors even more (tho it is not stable yet).

Therefore the question should rather be: *""do we want to special case errors **more**?""*.

I also don't get why special casing errors syntactically is a problem; more or less every well written program has error handling in it, and usually a lot of it, so it helps to eliminate boilerplate. If we are OK with having `async { .. }` as sugar over futures, then why not errors, given that error handling is (probably) more commonly used.

@Wyverald 
> could you mention the advantage of throw expr over `Err(expr)?` in the RFC text

Will do.

> We aren't C++ :p.

We are not, that is true. But as a systems language intended to be useful for doing things done in C++, I think making the language easier to understand for C++ programmers should at least count for something.

@ssokolow 

> If you optimize for program simplicity over language simplicity,

I understand @ibkevg's argument as simplicity wrt. fitting the mental model and more and programs being simpler to read. `program28064309876()` if encoded directly in the program is not simple because it fails to communicate intent and be readable entirely (even if you named it properly, the name would be so long that it would be pointless).

> which seem to lean in the direction of Perl's ""There Is More Than One Way To Do It"" 

Rust does not adhere to the philosophy *""there should only be one way to do it""*.
Neither does it adhere to adding sugar just because we can.

I'd like to propose a different, more practical and nuanced (and truer, because python violates its own policy..), philosophy:
> *There should be few ways to do it, and picking one among them should be obvious in context.

Adding syntactic sugar should be done if it
+ makes programs simpler (wrt. mental model)
+ makes programs more readable
+ makes programs more ergonomic to write
+ is general (for example, does not only apply to the type `Result`, but more types (`Try`))
+ applies commonly",True,True,196,33091.05
rack_____rack_____1272,2018-05-04T13:09:41Z,True,rack_____rack_____1272_____186076571,If I understand your response you are answering yes to the question of whether or not a `flush` method should be added. Then in any application you wrote you would block until the write completes instead of making use of the `on_drained` callback. That is your choice of course. ,True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-04T13:16:22Z,True,rack_____rack_____1272_____186078258,"> However, please consider the model to be totally separate from the network - there is no network. There's only this API.

Fair enough.",True,True,128,932194.1166666667
rust-lang_____rfcs_____2426,2018-05-04T13:20:24Z,True,rust-lang_____rfcs_____2426_____386599124,"> I don't see how this argument is workable because we already special case errors in the language with the re-throw operator ?. This eliminates most of the places where you would otherwise see errors as just ordinary values with no sugar.

I disagree that `?` is only for errors. We'd need some time with the ability to implement it for your own types before we know what it's full scope is.

> Furthermore, we did merge RFC #2388 (try { .. }) and so at least we have the intent to special case errors even more (tho it is not stable yet).

I'm against `try` as you know. Further, the fact that it has been merged doesn't mean criticism for it must end.

> Therefore the question should rather be: ""do we want to special case errors more?"".

I disagree. ""Should we special case errors less?"" should also be a valid question.

> I also don't get why special casing errors syntactically is a problem; more or less every well written program has error handling in it, and usually a lot of it, so it helps to eliminate boilerplate.

My opinion is that ""errors are values"" is a fundamental and important part of Rust. That needs to be reflected in the language and idiomatically written code. I believe these proposals run counter to that.

If we special case everything that programs usually contain, Rust will become a very big language.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-04T13:25:53Z,True,rust-lang_____rfcs_____2426_____386600558,"I agree that ""There should be few ways to do it, and picking one among them should be obvious in context."" fits Rust well.

My main issue is that I found the sentiments expressed in [Pre-RFC: Catching Functions](https://internals.rust-lang.org/t/pre-rfc-catching-functions/6505/1) to be quite alarming, both in how divergent they seem from existing Rust design philosophy at times, and in their potential to be the first step in a devolution of Rust into a C++-like grab-bag of ""I like Rust, except for this one thing I miss"" features.

@phaylon's most recent reply puts my concerns into words much more effectively than I probably would have.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-04T13:45:59Z,True,rust-lang_____rfcs_____2426_____386606168,"I still think `expr 'label?` and `Err(expr)?` and (where flow inference matters, aka uninitialized variables - but see below) `break 'label Err(expr)` are the way to go. (see also discussion in #2430 #2046 and uhh there was one more but I can't remember what it was)

Also, avoid uninitialized variables, it needlessly increases verbosity. As one example linked here shows:

```rust
fn test(b: bool) -> Result<i32, char> {
    let k;
    if b {
        Err('H')?
    } else {
        k = 3
    }
    Ok(k)
}

fn main() {
    match test(false) {
        Ok(_) => println!(""ok!""),
        Err(c) => println!(""not ok! {}"", c),
    }
}
```

https://play.rust-lang.org/?gist=6f598b36678183a05f17642fc55eef66&version=stable&mode=debug

Compare this to:

```rust
fn test(b: bool) -> Result<i32, char> {
    if b {
        Err('H')?
    }
    let k = 3;
    Ok(k)
}

fn main() {
    match test(false) {
        Ok(_) => println!(""ok!""),
        Err(c) => println!(""not ok! {}"", c),
    }
}
```

There are 3 things to consider here:

- The latter is flatter, avoids excessive indentation.
- It actually compiles.
- You don't need `let k;` *and* `k = 3`, you get to have `let k = 3;`. For longer names this is a huge improvement!",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-04T13:48:02Z,True,rust-lang_____rfcs_____2426_____386606777,"> I disagree that `?` is only for errors. We'd need some time with the ability to implement it for your own types before we know what its full scope is.

My point is not that it is only for errors or not.
My point is that *we have syntactic sugar for a **class of values***, be they errors, or something more general.

> Further, the fact that it has been merged doesn't mean criticism for it must end.

This is true; but the criticism becomes less persuasive the more counter-factual it becomes and primarily it becomes non-actionable (this is primarily in relation to `?` since `try` is not stable yet).

> I disagree. ""Should we special case errors less?"" should also be a valid question.

This is non-actionable (can't break `?`); so I don't see how you can do this other than to discuss it intellectually.

> My opinion is that ""errors are values"" is a fundamental and important part of Rust.

Everyone (I hope) agrees with this.

> That needs to be reflected in the language and idiomatically written code.

This does not flow immediately from *errors are values* (semantically) and indeed it is not reflected in idiomatically written code (again, see `?`). Errors can still be values semantically but the language can provide sugar that makes it feel less boilerplate-y.

> If we special case everything that programs usually contain, Rust will become a very big language.

No one said we should *special case everything that programs usually contain*, but we can special case **some things** that **most programs** contain to a **large extent** and is just **boilerplate**.

> My main issue is that I found the sentiments expressed in Pre-RFC: Catching Functions to be quite alarming,

I think most of the push-back on that Pre-RFC was in relation to `-> T catch E` which I am also opposed to.

On C++ I would say that it is particularly large because of baggage from C and because of C++'s age. As Rust ages, the software industry develops, and more PLT research matures, it is only natural for the language to grow to fit tomorrow's challenges.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-04T13:53:31Z,True,rust-lang_____rfcs_____2426_____386608381,"I'll have to think about your other points, but there *is* one I can address right now.

> This is non-actionable (can't break ?); so I don't see how you can do this other than to discuss it intellectually.

""special-case errors less"" is a relative statement, so it can also be accomplished by making things that are currently error-specific more generally applicable, rather than by removing them.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-04T13:55:17Z,True,rust-lang_____rfcs_____2426_____386608890,"@ssokolow 

> ""special-case errors less"" is a relative statement, so it can also be accomplished by making things that are currently error-specific more generally applicable, rather than by removing them.

Oh I agree entirely with attempting to make `Try` apply more generally, if it can be done, why not :)",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-04T14:08:16Z,True,rust-lang_____rfcs_____2426_____386612823,I don't see what `throw` brings into ergonomics. I think it'll just encourage bad code (see the uninitialized variable case above).,True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-04T14:16:15Z,True,rust-lang_____rfcs_____2426_____386615353,"> My point is not that it is only for errors or not.
> My point is that we have syntactic sugar for a class of values, be they errors, or something more general.

I'd disagree here, but I think that's a point of fundamental difference. To me, `?` is about the `Option` or `Result`, *not* the wrapped value. The wrapped value might be an error, but it might also be an original owned state (as used by `Arc::try_unwrap` for example) or a count of things that were successfully processed (e.g. a byte count). Those are not errors, but propagating that information is still useful.

So, `?` is to me about sugar for behavior, while `fail` has an error association. Too bad `propagate` is quite a mouthful.

But for the record, I wouldn't mind `?` not auto-converting types and instead have an `err_into` on `Result`.

> This is true; but the criticism becomes less persuasive the more counter-factual it becomes and primarily it becomes non-actionable (this is primarily in relation to ? since try is not stable yet).

Things can change in the future. That's the whole point of editions. If at some point we decide a simple `encapsulate! { ... }` that does `(||{...})()` is more useful and straight-forward, `try` can still be deprecated.

> This is non-actionable (can't break ?); so I don't see how you can do this other than to discuss it intellectually.

It's about:
* Arguing against introducing more special casing.
* A more wide discussion about general principles.
* Pushing against things like making `?` idiomatically only about errors.

> This does not flow immediately from errors are values (semantically) and indeed it is not reflected in idiomatically written code (again, see ?). Errors can still be values semantically but the language can provide sugar that makes it feel less boilerplate-y.

Boilerplate is wildly subjective. For example: I'll always prefer an explicit `Ok(())` over invisibly suggesting success.

> No one said we should special case everything that programs usually contain, but we can special case some things that most programs contain to a large extent and is just boilerplate.

I wouldn't argue with that, but then I think we agree that ""It comes up a lot"" isn't by itself an indication that something needs to be added as language feature.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-04T14:24:00Z,True,rust-lang_____rfcs_____2426_____386617604,"@ssokolow 
> ""special-case errors less"" is a relative statement, so it can also be accomplished by making things that are currently error-specific more generally applicable, rather than by removing them.

Another thing I thought and that has come up is that it would be great if the first question were always ""can we improve Rust so the ecosystem can provide opt-in special casings?"" In these cases it would be about seeing what Rust needs to be able to do so the exception-like syntax can be provided by macros. I'm wondering if an extension of ""break with value"" might allow `try` and `throw` be implemented as macros with all the semantics people want.

This could have a nice side-effect of giving code generators via macros in the style of `nom` also some great new abilities, since it wouldn't only be for handling errors but for all manner of custom control flow.",True,True,196,33091.05
rack_____rack_____1272,2018-05-04T14:36:24Z,True,rack_____rack_____1272_____186102698,"> If I understand your response you are answering yes to the question of whether or not a flush method should be added. Then in any application you wrote you would block until the write completes instead of making use of the on_drained callback. That is your choice of course.

I really find the inverted flow control of callback style programming horrible. So, I prefer `#flush` over an `#on_drained` callback. Callbacks = state machine spaghetti = hard to maintain/buggy code. It's just my personal opinion, FYI.",True,True,128,932194.1166666667
rust-lang_____rfcs_____2426,2018-05-04T14:37:32Z,True,rust-lang_____rfcs_____2426_____386621798,"**Hey you got your chocolate in my peanut butter!?**
I know the intention of the discussion is to focus on this RFC on it's own merits but allow me briefly step back to point out there is real genius here when considering this and the related structured error handling RFCs as a set: it takes the familiar structure commonly associated with exceptions and solves the emergent complexity that makes exception safety guarantees so hard by replacing exceptions with manual propagation of errors as values. It's the best of both worlds, is to my knowledge unique among popular languages and makes the whole greater than the sum of the parts.

This sort of thing is Rust's secret sauce I think - taking common problems experienced in other languages, retaining their strengths while finding innovative ways to make them safe and harder to screw up like using pointers safely, and now, error handling. Safe Error Handling is another compelling sales point for the Rust language to the huge pool of C++ and Java programmers.

** Is throw expr == return Err(expr) ?**
I've noticed a number of comments along the lines of ""return Err(expr)"" being equivalent to the throw being discussed, so I thought I'd point out a post that got buried waay back from Niko Matsakis where he points out that the expansion is more complex and solves (at least) a paper cut using the language.

https://github.com/rust-lang/rfcs/pull/2426#issuecomment-386079005",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-04T14:49:53Z,True,rust-lang_____rfcs_____2426_____386625541,"@Centril
> This does not flow immediately from errors are values (semantically) and indeed it is not reflected in idiomatically written code (again, see ?). Errors can still be values semantically but the language can provide sugar that makes it feel less boilerplate-y.

I think the main concern I have here is the one that I saw expressed about binding modes recently. We have to be very careful about adding convenience things that seem like mysterious ""do what I mean"" behaviours to newcomers who already have enough on their plate internalizing Deref coercions and borrow checker semantics.

For that reason, I always approach efforts to reduce boilerplate very cautiously.

To try to flush out any subtle misconceptions of my perspective, I'll address some of my concerns by going through the ""points in favour"" section of the RFC directly:

1. > However, currently, when you write logic such as: [...] the unhappy path is not particularly differentiated from the happy path in terms of syntax.

    I fundamentally disagree with this being a justification for a `throw` keyword. Happy and unhappy paths are two different kinds of return and I firmly believe that adding a special `throw` keyword in place of a `return Err(...)` with generic-friendly boilerplate is a flawed solution.

    Looking at the ""rasing the syntactic component of ""errors as values"""" and ""But what about the success case?"" sections just further convinces me that, at best, this idea needs a *lot* more discussion before we do anything more permanent than reserving the keyword.

2. > As a hypothetical extension, this can be further improved upon the future with Ok-wrapping `try fn`s.

    This comes across as a statement of potential intent to use this as a foot in the door to bring in the elements of the Pre-RFC that I found so alarming.

    It would also make it more difficult for me to scan other people's code, since `Ok(...)` makes it easier for me to scan for return paths.

3. > Terser code in generic contexts

    Let's assume that this is `throw`'s primary purpose for a moment, so it can be discussed in isolation.

    If its intent is to avoid having to type out complex type-conversion boilerplate, that intent should be admitted as such and it should be accomplished in a way that doesn't do as much to conflate mechanism and meaning.

    Also, if `throw` provides special conveniences not granted to other types, it's not unreasonable that people under the pressure of deadlines or not yet inculcated into the Rust culture would abuse `R: Try` or, if it's unstable, `Result<T,E>`, with non-Error `E` types in order to take advantage of those conveniences.

    If the primary goal is a less boilerplate-y return syntax for the error case in the presence of generics, then we should design a less boilerplate-y return syntax for generics that can be used in as wide a range of situations as possible.

4. Uniform support for early unhappy returns to functions and `try { .. }`

    I see the appeal in the context of `bail!`, but it hasn't been established that a better solution isn't waiting to be identified and, for a hypothetical demand like this, I don't think we should be in a rush to enshrine a new keyword in the language.

5. > The existence of `bail!` shows there's a need

    The question is whether there's *enough* of a need to justify a whole new keyword.

    One could argue that the existence of the `error!`, `warn!`, `info!`, and `debug!` macros in the `log` crate show a similar degree of insufficiency in the language with regard to output.

6. > Increasing familiarity

    This is actually one of my biggest worries, because it feels as if the desire to make Rust more familiar may be one of the things encouraging the ""special-case error returns"" approach, rather than, for example, my suggestion to look at generic-friendly ""improved `return`"" options that aren't merely limited to the unhappy path.

    (ie. Rather than identifying the best solution, then seeing how to teach it to new Rust programmers, I worry that this is being corrupted by looking for a way to shoe-horn in some sufficiently familiar variation on design elements that Rust decided against... similar to if we were to be too hasty to come up with an alternative to OOP inheritance.)

7. > Erasing dichotomies

    This point feels a little too much like hollow, feel-good marketing speak to me, speaking to my emotions rather than my rationality.

8. > The time to reserve is now

    Given that we can always change our minds later, I have no problem with merely reserving the `throw` keyword now, but continuing the discussion.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-04T14:55:33Z,True,rust-lang_____rfcs_____2426_____386627257,"@phaylon 

> Another thing I thought and that has come up is that it would be great if the first question were always ""can we improve Rust so the ecosystem can provide opt-in special casings?"" In these cases it would be about seeing what Rust needs to be able to do so the exception-like syntax can be provided by macros. I'm wondering if an extension of ""break with value"" might allow try and throw be implemented as macros with all the semantics people want.
> 
> This could have a nice side-effect of giving code generators via macros in the style of nom also some great new abilities, since it wouldn't only be for handling errors but for all manner of custom control flow.

This sort of hypothesizing (or the fact that we have both `error-chain` and `failure` in the ecosystem) is a perfect example of why I don't want to be so hasty to get something `throw`-like in the language.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-04T15:35:54Z,True,rust-lang_____rfcs_____2426_____386639501,"An easy way to differentiate paths: indented unhappy, flat happy.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-04T15:46:46Z,True,rust-lang_____rfcs_____2426_____386642773,"@SoniEx2 If only that were true.

I've lost count of the number of cases where an algorithm was of the form ""Try several things, return as soon as one succeeds. If we reach the end, return failure.""",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-04T15:48:12Z,True,rust-lang_____rfcs_____2426_____386643194,"@tomaka 

> I'd like to bring up the usual argument that introducing a new language construct always increases complexity. The more pure the language, the easiest it is to understand.
> 
> Therefore any benefit in introducing language features must clearly have a huge advantage over not doing it. This is clearly not the case here.

As they say ""every feature starts with -100 points and has to get 100 points in order to get implemented.
",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-04T16:12:23Z,True,rust-lang_____rfcs_____2426_____386650068,"@phaylon 

> I'd disagree here, but I think that's a point of fundamental difference. To me, `?` is about the `Option` or `Result`, not the wrapped value.

No, I agree. `?` is about some sort of partiality monad (e.g `Result`).
But `Result` and `Option`s still are a class of types for which Rust provides syntactic sugar for.

> So, `?` is to me about sugar for behavior, while `fail` has an error association.

So I believe `throw` has less of an error association.

> But for the record, I wouldn't mind `?` not auto-converting types and instead have an `err_into` on `Result`.

This is backwards incompatible.

> Things can change in the future. That's the whole point of editions.

They can, but removing language features costs a lot, and so the feature to remove must be really problematic.

> It's about:
> + A more wide discussion about general principles.

We use RFCs for that and we've already accepted `?`; This suggests a different general principle.

One important general principle to have, I think, is **consistency**.

> Boilerplate is wildly subjective. For example: I'll always prefer an explicit `Ok(())` over invisibly suggesting success.

No one is suggesting taking away the possibility of writing `Ok(())`.
Boilerplate to me is when you repeat things that are unimportant to the structure of what you want to say, over and over.

@ssokolow 

>  I think the main concern I have here is the one that I saw expressed about binding modes recently.

The semantics of `throw expr` seem fairly obvious to me. I don't think there's anything mysterious going on and it is quite familiar.

> I fundamentally disagree with this being a justification for a `throw` keyword.

Well; We're not going to find consensus on that one. I disagree with you completely.

> This comes across as a statement of potential intent to use this as a foot in the door to bring in the elements of the Pre-RFC that I found so alarming.

It is an idea to entertain (which I like personally). `throw expr` works fine independently of it.
I don't think early-return Ok-wrapping is that common.

> Let's assume that this is `throw`'s primary purpose for a moment, so it can be discussed in isolation.

This assumption is incorrect.

>  inculcated into the Rust culture would abuse `R: Try`

I don't know what that Rust culture is... Personally, coming from Haskell, I usually write the most general type, so I don't see this as abuse.

> I see the appeal in the context of `bail!`, but it hasn't been established that a better solution isn't waiting to be identified

I can't prove a negative like this and we are discussing whether `throw / fail` is a good solution right now.

> One could argue that the existence of the `error!`, `warn!`, `info!`, and `debug!` macros in the log crate show a similar degree of insufficiency in the language with regard to output.

The difference here is that the semantics of those macros are highly specific to applications.
Meanwhile, `throw expr` is a general feature that is useful for all applications.

> Rather than identifying the best solution, then seeing how to teach it to new Rust programmers, I worry that this is being corrupted by looking for a way to shoe-horn in some sufficiently familiar variation on design elements that Rust decided against...

I think this is the best solution. But you are free to disagree.
The mechanism proposed is tried and tested in languages which also have the *errors as values* philosophy such as Haskell.

> This sort of hypothesizing (or the fact that we have both `error-chain` and failure in the ecosystem) is a perfect example of why I don't want to be so hasty to get something `throw`-like in the language.

I'm not advocating that we should be hasty. We can take as much time as we need on nightly to experiment.

@Pzixel

> As they say ""every feature starts with -100 points and has to get 100 points in order to get implemented.

I am critical of this phrasing and in particular re-stating it all the time.

+ it sounds like an attempt to quantify, but ""100 points"" is not very meaningful.
+ we already always take in the fact that all new language features should have major benefits.
+ every feature should not ""start with -100 points"", some should start with -1000, and some -10, and some 0. The larger the addition to the language, the more it needs to show its benefits.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-04T16:20:24Z,True,rust-lang_____rfcs_____2426_____386652257,"@Centril this phrase is easy to understand, it just shows that feature should be very useful, and then a little more. And reading your ""some features starts at 0"" it's clear that you didn't get this idea.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-04T16:26:20Z,True,rust-lang_____rfcs_____2426_____386653799,"@Centril
I don't see a point in continuing. I don't see `?` as specific to error handling, so I don't see it as an argument for adding special cased language extensions. I understand that you disagree. However, referring to `?` won't convince me of the need for exception like constructs.

However, I do get the feeling that the recent error specific RFCs are pushing towards a Rust without `Ok`, `Err` and `Some`. For example, an auto-converting `try` won't allow me to default a block to `None` easily.

I also want to note that the recent RFCs have been feeling less like discussions about if something should be added. They feel more like write-ups about what will be added with discussions giving some possibility of resistance. I stress the word *feel* here of course.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-04T16:49:44Z,True,rust-lang_____rfcs_____2426_____386661120,"@Pzixel I don't mean to get too off-topic, but It is saying a lot more. It says that every feature needs to be as useful. In practice, features that are larger need more motivation and conversely features that are smaller in scope need less motivation.

@phaylon 

> They feel more like write-ups about what will be added with discussions giving some possibility of resistance. I stress the word feel here of course.

I think the feeling is wrong. :) The discussion here will result in a change in this RFC's proposal.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-04T16:58:34Z,True,rust-lang_____rfcs_____2426_____386663489,"@Centril 

> So I believe throw has less of an error association.

I think it has too strong an association with exception-based control flow, which readers would likely translate to an error assocation when paired with the understanding that Rust doesn't have exceptions.

> Boilerplate to me is when you repeat things that are unimportant to the structure of what you want to say, over and over.

This is a subjective thing. For example, a lot of the things CoffeeScript considers boilerplate, I consider to be essential to ensuring it's easy for a human to understand how the compiler will parse something.

> The semantics of throw expr seem fairly obvious to me. I don't think there's anything mysterious going on and it is quite familiar.

I'm talking about how newcomers would perceive the proposed ""easier to write generic returns"" facet. Without that, I see `throw` as having so little value as to have no chance at all of being included.

> Well; We're not going to find consensus on that one. I disagree with you completely.

Not a problem. My main reason for mentioning it was so that we didn't waste time spinning our wheels on an irreconcilable point of disagreement.

> It is an idea to entertain (which I like personally). throw expr works fine independently of it.
I don't think early-return Ok-wrapping is that common.

As I mentioned in an edit almost immediately after posting that, I'm also very concerned about Rust winding up with a ""proper solution"" and then the older `throw`, which feels at odds with it and may not compose well with it, but has to be kept around for legacy reasons.

(The #1 thing I'm trying to anticipate and avoid in all RFCs is Rust turning into something like C++, where the language has become so complex with various features that may or may not work smoothly with each other that it's advised to pick a subset and stick to it.)

> This assumption is incorrect.

That's why I said ""for a moment"". It was just an overly flowery way of saying ""Let's examine the merits of this piece on its own"".

> I don't know what that Rust culture is... Personally, coming from Haskell, I usually write the most general type, so I don't see this as abuse.

The most relevant aspects would be the definition of idiomatic code and the mental catalogue of what algorithms to prefer and avoid in order to write code that will be easy to maintain and extend in the future.

> I can't prove a negative like this and we are discussing whether throw / fail is a good solution right now.

OK, let me rephrase that. I strongly believe that `throw` / `fail` has been rushed toward experimental implementation as an idea and more time is needed to brainstorm and discuss alternatives with more general applicability.

Implementing it, even in nightly, at this stage, could unreasonably bias opinion in its favour.

> The difference here is that the semantics of those macros are highly specific to applications.

OK, then. *Some* form of in-`std` logging analogous to how the `assert` family of macros are in `std`. My point is that I don't find the argument very persuasive when taken in context with previous decisions about how deeply each idea should be integrated into the language.

> The mechanism proposed is tried and tested in languages which also have the errors as values philosophy such as Haskell.

True, but there are a *lot* of differences. For example, pervasive lazy evaluation, idioms built on the assumption of a garbage collector, syntax and APIs heavily wedded to currying and partial application, etc.

> I'm not advocating that we should be hasty. We can take as much time as we need on nightly to experiment.

As I mentioned earlier, I think getting it into nightly this quickly would be hasty as using something risks acclimatizing people to it to the point that consistency with something familiar and aversion to discarding something that seems ""good enough"" starts to impair one's ability to consider alternatives.

> I also want to note that the recent RFCs have been feeling less like discussions about if something should be added. They feel more like write-ups about what will be added with discussions giving some possibility of resistance. I stress the word feel here of course.

This. Regardless of whether it's intended, I got this sense from the Pre-RFC, which made me panic a bit, and I also feel a worrying undercurrent of it here. That's not conducive to good design and a healthy RFC process if it spreads.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-04T18:04:48Z,True,rust-lang_____rfcs_____2426_____386686853,"@Centril @ssokolow @phaylon 

These massive strings of point-for-point arguments are *very* hard to read, and they're not really introducing anything new to the discussion. It very much feels like the points that are going to be made *have been made.*

Also, because these keep coming up:

`?` (and now `try` and `throw) *are* primarily for error handling; this is why they were introduced and this is the vast majority of their use cases. That they are useful for other scenarios does not make it a bad idea to make them work well for error handling.

Concern about RFCs being ""write-ups about what will be added without discussions"" is unwarranted. The discussion is happening! That's why there are internals threads *and* RFC threads!",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-04T18:17:25Z,True,rust-lang_____rfcs_____2426_____386690110,"@rpjohnst 
First off, I agree most things have already been stated, either here or elsewhere.

> ? (and now try and `throw) are primarily for error handling; this is why they were introduced and this is the vast majority of their use cases. That they are useful for other scenarios does not make it a bad idea to make them work well for error handling.

I disagree that they *should* be primarily regarded as error handling constructs. I have no problem with things *also* working well for error handling. Just wanted to clarify that.

> Concern about RFCs being ""write-ups about what will be added without discussions"" is unwarranted. The discussion is happening! That's why there are internals threads and RFC threads!

I didn't say *without* discussion. I'm just communicating that to me it seems the discussions are starting from the wrong point. Compare ""Why should this go in"" with ""Why shouldn't this go in"".",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-04T19:42:55Z,True,rust-lang_____rfcs_____2426_____386712363,"`?` is about value propagation. Rust's Result uses Ok and Err, other languages use Left and Right. And then there's this: (hypothetical, but not far off)

```rust
fn find_inventory(w: World, p: Pos) -> Option<Inventory> {
    w.get_block(p)?.get_entity()?.get_component<Inventory>()
}
```

Note how it's not being used for error handling, but to propagate a value (or lack thereof).",True,True,196,33091.05
SuperDARN_____rst_____153,2018-05-04T20:52:53Z,True,SuperDARN_____rst_____153_____186100761,This pull request contains one final set of bug fixes for IDL/DLM compatibility in the AACGM-v2 software that was missed in #149.,True,True,28,142543.38333333333
rust-lang_____rfcs_____2426,2018-05-04T21:06:41Z,True,rust-lang_____rfcs_____2426_____386735215,"Exceptions seem like such a good idea, but every grown up system I’ve
worked on, I find that we need to treat the errors as a form of data to be
able to put them in context. If it should never hapen we have panic!, but
if it can error it is much nicer to have a Result.

Really like the way Rust currently handles errors.

On Thu, 3 May 2018 at 12:34, Soni L. <notifications@github.com> wrote:

> throw expr;
> Err(expr)?;
>
> look, they're the same length!
>
> —
> You are receiving this because you were mentioned.
> Reply to this email directly, view it on GitHub
> <https://github.com/rust-lang/rfcs/pull/2426#issuecomment-386265875>, or mute
> the thread
> <https://github.com/notifications/unsubscribe-auth/AAxEiA0bZewGcIov-10UDtrEDAjiIyrbks5tuutbgaJpZM4TtWd1>
> .
>
",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-05T05:49:26Z,True,rust-lang_____rfcs_____2426_____386781830,"@joshtriplett 

> I don't think I'd ever use ""exception-safety problems"" to describe scenarios where you should use `?`.

To try to elaborate on what I meant by that, take a look at `Flatten::try_fold`

https://github.com/rust-lang/rust/blob/5092c6b01acbff60935a5e6d84f83b6c73c1ca5e/src/libcore/iter/mod.rs#L2658-L2683

Compared to `Flatten::fold`

https://github.com/rust-lang/rust/blob/5092c6b01acbff60935a5e6d84f83b6c73c1ca5e/src/libcore/iter/mod.rs#L2686-L2693

What's all the extra code for?  Essentially ""exception-safety"": Like how in C++ one needs to understand what can throw and ensure your invariants are maintained if something throws, writing this code I needed to look at all the ""throwing"" functions called -- conveniently marked with `?` sigils -- and ensure that the iterator is left in a coherent state.

To me it's the same problem, just easier to deal with thanks to 1) them being explicitly marked and 2) it being easy to delay the throwing by putting the result in a variable and `?`ing it later.

(I like @ibkevg's ""[chocolate in my peanut butter](https://github.com/rust-lang/rfcs/pull/2426#issuecomment-386621798)"" phrasing :heart:)

---

@Pzixel 

> Look at these examples [...] Is it better in any way?

I think the comparison is missing what I would consider the more obvious way:

```
if condition {
    throw Foo;
}

Ok(Bar)
```

This is the same sort of ""guard clause"" philosophy that is also seen with `assert!`, where once one hits badness, it's dealt with immediately, allowing the function to ""continue normally"" otherwise.

> `catch bar => { ... }`

Nothing like that has ever been proposed, so it's a fallacy of relevance.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-05T05:58:58Z,True,rust-lang_____rfcs_____2426_____386782238,"@scottmcm I still don't see the analogy you're trying to draw; the only thing this has to do with exceptions is that both handle errors. Yes, `try_fold` involves more code, and that code makes use of `?`. I still wouldn't describe it as ""exception-safety""; that's a term I'd use for things like using `finally` to make sure your code unwinds properly when a function you call throws an exception and unwinds the stack.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-05T06:23:34Z,True,rust-lang_____rfcs_____2426_____386783313,"Core language should stay as small as possible, otherwise it will become next C++ (in it's worst meaning).",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-05T08:01:21Z,True,rust-lang_____rfcs_____2426_____386788301,"@scottmcm 

> I think the comparison is missing what I would consider the more obvious way:
```rust
if condition {
    throw Foo;
}

Ok(Bar)

```

Oookay, do you think it's much better than this?

```rust
if condition {
    return Err(Foo);
}

Ok(Bar)
```

> Nothing like that has ever been proposed, so it's a fallacy of relevance.

No, it's a nice illustration. If you ""throw"" something you have to ""catch"" it somewhere. If you wrap an object in `Err` and then match it in `Err` it clean and comprehensible. If you throw `Foo` then you should catch this `Foo`, if you then do match on `Err(Foo)` then probably it's a good signal that you're doing the wrong thing introducing this keyword.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-05T09:50:24Z,True,rust-lang_____rfcs_____2426_____386793794,"I already wrote about there being [value in things being self-descriptive](https://github.com/rust-lang/rfcs/pull/2386#issuecomment-384753988) before and I’m going to take a liberty to reference it here. If we introduce `throw`, `try` and other names from what essentially is quite a different error handling method in other languages, we risk in introducing confusion into people’s learning process. This is something that has been stated a number of times in this thread already. The most common counter-point I’ve seen is that if we document the feature sufficiently well, then it is going to be fine™. I will not repeat my points from the comment I linked above, but I want to present you my counter-counter-point to the ""going to be fine"" counter-point.

---

Go-the-language is a language that *prides* itself in being *simple*, *easy to learn* and *surprise free*. In this language it is accepted to return errors by value and there is no sugar for dealing with these errors. One of the reasons this language is fairly popular is that it being as simple as it is, it only takes half a week for developer with no prior familiarity with the language to become fairly productive with it. Among other things this means that it is fairly easy to sell the language to managers/investors/etc.

I’d like to think that Rust is in a fairly similar position syntax-wise at the moment. The syntax and concepts behind the syntax we currently have are fairly similar to the other languages, so most of the learning effort goes to figuring out what the *new* concepts such as lifetimes are and how to work with them.

If we end up adding `throw x` as an alias for `return Err(x)` (and similarly, `try`) will result in either of these:

* Teachers/mentors mentioning that `throw` and `try` is not the same compared to what students are used to, so they should read here and there about it;
* Students with prior familiarity with exceptions hitting this independently, trying to use it wrong, getting frustrated and spending time reading documentation/tutorials/books/stack overflow trying to figure out where they went wrong.

In context of companies this will translate into extra paid developer-hours, increase the adoption cost and make Rust harder to pitch, thus hurting its adoption. Are we really willing to pay the price for the low-impact sugar that `throw` is?",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-05T11:03:02Z,True,rust-lang_____rfcs_____2426_____386797498,"@nagisa 

> If we introduce throw, try and other names from what essentially is quite a different error handling method in other languages, we risk in introducing confusion into people’s learning process.

Yes, but they are not *quite different* but slightly different. This similarity is arguably helpful for learning. I don't see how people can argue with such certainty on this point. We simply don't know empirically if it makes it easier or harder to learn.

But once learned, do these features make programs easier or harder to reason about? Would there be differences in productivity? These questions are also important. Perhaps more important.

> If we end up adding `throw x` as an alias for `return Err(x)`

`throw x` is *not* an alias for `return Err(x)`. This erroneous statement keeps coming back. Arguing that it is only an alias for `return Err(x)` seemingly reduces its potential value. Straw men are not conducive to a productive conversation. We all want the best for Rust.

",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-05T11:05:30Z,True,rust-lang_____rfcs_____2426_____386797622,"I think it's been established beyond any reasonable doubt that a too-big-to-ignore number of people hold each of these opinions:

1) try/throw/catch/fail/raise all imply implicitly-propagated exceptions rather than any other mechanism for error handling
2) throw/catch specifically imply implicitly-propagated exceptions, but the others only imply error handling in general
3) try/throw/catch/fail/raise all imply error handling in general, but not any specific mechanism like exceptions

So rather than try to persuade each other that one of these three is ""the correct"" opinion, or merely asserting one is the most popular without any evidence, we should consider how these changes affect all three groups.

For example, while I'm still skeptical that `try {}` blocks are worth adding, renaming them from `catch {}` to `try {}` is an obvious win for group 2, and neither a win nor a loss for groups 1 and 3, which makes it a pretty clear net win overall.

By exactly the same argument, I think `fail expr` is a clear net win over `throw expr`, whether or not a throw/fail statement is worth adding at all.

I've seen very few comments that appear to actively favor `throw` over other keywords, and the few that do appear to be doing so solely because `throw` is a more popular keyword for error handling in other languages and that makes it more familiar. But that doesn't seem like a good argument to me since `throw` is more common only because implicitly-propagated exceptions are more common, and it's not like anyone will see `fail` and think it has nothing to do with error handling. Basically, I don't think choosing `throw` as the keyword makes any sense unless there's a fourth group with the opinion that ""throw/catch imply error handling in general, and the other keywords imply nothing at all"", which seems extremely unlikely.

-----

Incidentally, I do agree that it makes sense to reserve `try` and `fail` keywords now. It seems like everyone agrees on that point.

-----

Back to the actual semantics and functionality for a minute: As far as I can tell, the proposal is that `fail expr` does exactly the same thing as `Err(expr)?` if the return type is `Result<_,_>`. But the RFC instead defines it as `break 'to Try::from_error(From::from(expr))` where 'to is a magic label. Is it correct to say that the only difference in going from `Err(expr)?` to `fail expr` is that the latter works with other Try-implementing types like `Option`? The assumption that that is the only difference is a big part of why this seems like a very low impact sugar to me compared to `?`. Though, whether or not it's true, we should probably make the RFC much clearer about it so no one has to guess (in fact, as I typed this, the newest comments clashed on exactly this ambiguity!).",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-05T11:41:18Z,True,rust-lang_____rfcs_____2426_____386799531,"> throw/catch specifically imply implicitly-propagated exceptions, but the others only imply error handling in general

If it helps, the deeper reasons I associate throw/catch with implicity-propagated exceptions are:

1. When something is thrown, there's a period when it arches over any walls, checkpoints, gates, or other barriers or flow-control mechanisms on the ground and exists ""in no specific person's hands"".
2. Outside of play, throwing things carries a strong connotation of either sloppy/dangerous workplace behaviour or intentional circumvention of security/safety/control measures, like walls.
3. Unlike in a program, in real life, you can't guarantee that something will be caught before you throw it.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-05T11:55:06Z,True,rust-lang_____rfcs_____2426_____386800299,"@ssokolow I think you are stretching metaphors from real life too much; The statement or expression form `throw expr` is widely known by most programmers; Therefore, it's meaning is independent of ""throwing"" in real life.

@Ixrec 

> Is it correct to say that the only difference in going from `Err(expr)?` to `fail expr` is that the latter works with other `Try`-implementing types like `Option`

Almost, but not quite. `Err::<!, _>(expr)?` would be more accurate.

@nagisa 

> If we introduce `throw`, `try` and other names from what essentially is quite a different error handling method in other languages, we risk in introducing confusion into people’s learning process. 

> Students with prior familiarity with exceptions hitting this independently, trying to use it wrong, getting frustrated and spending time reading documentation/tutorials/books/stack overflow trying to figure out where they went wrong.

I'd like to echo @rpjohnst's sentiments here on RFC https://github.com/rust-lang/rfcs/pull/2388#issuecomment-381309005.

> The concern that try would bring us ""too close"" to exceptions is basically that same concern brought back to life. But if someone uses try thinking it's going to work like Java, they'll either a) get a type error b) miss a panic or c) be right because they're thinking of `Result` / `?` as ""exceptions you can treat as values."" We already have a huge amount of material on how ""panics are not exceptions"" and I don't think `try` will really change that.

I just don't think the mentioned confusion and frustration is very likely for `throw` or `try { .. }`. When a Java programmer tries to use `throw expr` in Rust, in a function returning `Result`, I think they will either:
1. Be right, because they are thinking of `throw my_error` as initiating an exception to a `Result<_, typeof(my_error)>` returning function or a `try` block.
2. Get a good type error message with links to relevant documentation saying that either:
    1. the immediate `try { .. }` block does not support the error type they are trying to throw
    2. the function does not support the error type they are trying to throw

   The likelihood of errors can further be mitigated if we opt for a design outlined in [the prior art on exceptional syntax](https://github.com/Centril/rfcs/blob/rfc/throw-expr/text/0000-throw-expr.md#paper-exceptional-syntax).

Not every language with unwinding exceptions are the same by the way; In Java, you have the `throws` clause which you don't have in C#. I think the differences from a user's perspective in learning will be similar.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-05T12:23:27Z,True,rust-lang_____rfcs_____2426_____386801879,"All these languages' `try { .. }` block act quite similarly @Centril so imho reusing `try` works.

Regardless, there is a burden for reinforcing that ""rust does not have exceptions"".  We shall not carry this burden with `try` so we should restrict `throw` and `catch` to unwinding scenarios.  I'd assume `match` will replace any prospective `catch` usages, but using `throw` would be bad pedagogically.  

I do think `fail ..;` looks nicer than `Err(..)?;` but agree this sugar may not carry its weight too.  Ain't hard to write:
```
macro_rules! fail { ($e:expr) => { Err($e)?; } }
```",True,True,196,33091.05
spack/spack/7942,2018-05-05T12:26:33Z,False,5aeda2fe6480fd232746754f,@scheibelp @becker33 @tgamblin ping,True,False,7,9775.483333333334
rust-lang_____rfcs_____2426,2018-05-05T12:31:33Z,True,rust-lang_____rfcs_____2426_____386802341,"@Centril I'm saying that the concept of small things adding up applies both to learning a language like C++ and to grasping the mechanics and proper use of an individual feature.

Using a word like `throw` or `catch` increases the chance that a learner will get stuck on an incorrect assumption. (I'll readily admit to making that mistake at times. The brain is reluctant to double-check old short-cuts for mistakes, so it wastes a surprising amount of time and, in the worst cases, may require a visit to somewhere like `#rust` to make the person see what's right under their nose.)

@burdges Again, it's not merely a sugar for `Err($e)?`. 

As was just said a few comments ago, It's closer to `break 'to Try::from_error(From::from(expr))` where the `'to` label corresponds to the nearest `try` block.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-05T12:35:07Z,True,rust-lang_____rfcs_____2426_____386802606,"```rust
fn test(cond: bool) -> Option<Option<()>> {
    if cond {
        throw None;
    }
    Some(Some(()))
}
```

what would this do?",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-05T12:42:14Z,True,rust-lang_____rfcs_____2426_____386803076,"@SoniEx2 `<Option as Try>::from_error` would probably be implemented to return `None`, ignoring the argument, so the code snippet would return `None::<Option<()>>` for `test(true)`.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-05T12:45:10Z,True,rust-lang_____rfcs_____2426_____386803224,"```rust
fn test(cond: bool) -> Option<Option<()>> {
    if cond {
        throw NoneError;
    }
    Some(Some(()))
}
```

what would this do?",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-05T12:53:41Z,True,rust-lang_____rfcs_____2426_____386803731,"@Ixrec 

> Back to the actual semantics and functionality for a minute: As far as I can tell, the proposal is that fail expr does exactly the same thing as Err(expr)? if the return type is Result<_,_>. But the RFC instead defines it as break 'to Try::from_error(From::from(expr)) where 'to is a magic label. It's not at all clear that the definition needs to be quite this arcane. In particular, is it correct to say that the only difference in going from Err(expr)? to fail expr is that the latter works with other Try-implementing types like Option?

Then maybe we just should enhance type conversion rules to make `Err(expr)` work with types like Option without introducing extra keywords? Other scenarios benefits from this change too unlike `throw`. ",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-05T13:08:15Z,True,rust-lang_____rfcs_____2426_____386804542,"@SoniEx2 Ask what `return Err(None)` would do in the context of `Option<Option<()>>`.
It would do nothing and give you a type error, since:
```rust
<Option<Option<()>> as Try>::Error == NoneError

None: Option<?T>

NoneError != Option<?T>
```

@nagisa That's a possibility, but not what happens today with `<Option<T> as Try>`. My preference would be to not move in the direction you consider here.

@ssokolow Whereas I think that `try { .. }`, `throw expr` and `?` together make for a neat, consistent package which is not that far removed from the role `try { .. }` and `throw` plays in Java save for some aspects of operational semantics and typing rules.

Specifically, the difference between Rust and Java would be that the latter propagates un-caught exceptions beyond the immediate `try { .. }` block and the function whereas the former requires the immediate `try { .. }` (or the function if there's no `try { .. }`) to handle the error type (including `From` coercions). I think it is possible by doing a recursive type search on `E_Target: From<E_Thrown>` to find the first `Try<E_Target = E_Thrown>` to bring us closer to erasing this difference between Java and Rust without giving up on *errors as values*. Of course, this is optional; we don't have to move in this direction, but the choice is available to us.

What we can't (and absolutely shouldn't change) is behavior wrt. function boundaries; if the function's type can't capture the error and there's no parent `try { .. }` block to the `throw expr` that can capture it, then it is game over.

We can help the user understand the differences we have, when they arise (thereby lazy-teaching them), mostly from well tailored error messages. The compiler will thus help you remember the differences where they occur. This can help save you from going to `#rust`. I also think this is a one-time setup cost; it will not manifest itself often unlike with lifetimes.

Having `throw` in Swift seems to work fine despite it having *errors as values*.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-05T13:12:51Z,True,rust-lang_____rfcs_____2426_____386804814,so you're saying None can become NoneError but NoneError can't become None?,True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-05T13:21:23Z,True,rust-lang_____rfcs_____2426_____386805332,"@Centril the interesting differences are mostly outside the function in which `throw` expression is invoked, rather than inside of it. No current mechanism other than `must_use` will even give us a chance on showing any diagnostic indicating a misuse. And the must_use itself can be easily hidden by e.g. `--cap-lints` that gets applied to dependencies.

I showed an example on IRC which I will expand here. Imagine this unfolding in a pre-existing code-base and the student learning-by-doing (which is fairly common in corporate IME):

```rust
enum MyNicerResult { 
    MyOk(...),
    MyErr(...),
} // created because of coherence or whatever, MyOk/MyErr are in prelude
 // note the not necessarily accident lack of #[must_use]
impl Try for MyNiceWrapper { ... } // plus various other common impls

fn banana() -> MyNicerResult {
    ...
    // A newbie developer gets an easy task to make this function more fallible
    // so they add
    // if error_has_occured { throw ""error has occured"" }
    ...
    MyOk(...)
}

fn peach () -> MyNicerResult {
   banana(); // called for side effects only
   MyOk(...)
}

fn apple() {
    let result = try {
        ...
        peach()?;
        ...
    };
    // adjust the handling code here to take the new error thrown by `banana` into account
    ...
}
```

The student may very well assume that whatever they thrown in `banana` will show up in `apple` (that’s what would happen in any language with exception-based error handling), but that won’t be the case in Rust. The compiler can’t possibly inform the student of any mistake either (at least I can’t think of any way for it to do so) – the code’s entirely valid. Type system will not help here.

Now one might argue that perhaps the student should’ve used `return MyErr(...)` instead, because there’s no `try` anywhere within `banana`, but what do *they* know? They saw `throw` somewhere in the code, they recalled having something similar in C++/Java/C#, they assumed the similar semantics and they wrote wrong code.

I hope I managed to express my worries about different semantics sufficiently well this time around.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-05T13:56:44Z,True,rust-lang_____rfcs_____2426_____386807424,"So personally I think the scenario is unlikely for a beginner. Starting with:

```rust
impl Try for MyNicerResult { ... }
```

I don't think a beginner would roll their own `Try` type. However, at the point where a beginner is thrown into such an existing code-base, they should have already read *[Recoverable Errors with `Result`](https://doc.rust-lang.org/book/second-edition/ch09-02-recoverable-errors-with-result.html)* (which would also explain `throw`) or some equivalent resource. If they haven't, they will have a hard time understanding Rust as it is today in general.

Not having `#[must_use]` on such a type is yet more unlikely (but possible). If `#[must_use]` isn't there in the existing code base, then either it is OK to ignore the thrown error, or the author of the code base made a design mistake and `#[must_use]` should have been there.

Either way, we can experiment with this and gain experience.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-05T14:28:50Z,True,rust-lang_____rfcs_____2426_____386809498,"@Centril

If this preference for `throw` over something like `fail` is about similarity to keywords in other languages, why are you so stuck on `throw` rather than `raise`?

`raise` is used in languages like Python and isn't as problematic because it lacks the troublesome real-world connotations and, for a user who is familiar only with an exception-less language like C, `raise` may call to mind a relationship to `return` since you're ""sending the value up the stack"".",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-05T14:39:54Z,True,rust-lang_____rfcs_____2426_____386810200,"@ssokolow 

> If this preference for throw over something like `fail` is about similarity to keywords in other languages, why are you so stuck on `throw` rather than `raise`?

I am not stuck at all.
I would not mind any of `fail`, `throw`, `raise` (*and I've been saying so consistently*),
but it is my impression is that `throw` has more consensus within the lang team than `raise` does.

You are also the first I know to propose `raise` for this RFC.
I discuss `raise` in the [prior art](https://github.com/Centril/rfcs/blob/rfc/throw-expr/text/0000-throw-expr.md#this-mechanism-exists-in-many-languages) and the [rationale](https://github.com/Centril/rfcs/blob/rfc/throw-expr/text/0000-throw-expr.md#choice-of-keyword).
I'd say that `throw` is simply more than twice as familiar than `raise`.
It seems to me that *""raise an exception""* is even more tied to exception handling ;)",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-05T16:03:53Z,True,rust-lang_____rfcs_____2426_____386815707,"> (and I've been saying so consistently),

I apologize then. I'd overlooked that.

> It seems to me that ""raise an exception"" is even more tied to exception handling ;)

Not necessarily and that's not inherently a downside.

1. The real-world connotations of ""throw"" give it a direct connection to breaking out of the normal control flow, regardless of whether you call it raising an exception, `goto`, or whatever else while the details which separate exceptions from ""special language-blessed sugar for early return on error"" tend to be something that ""code monkey"" programmers may go their whole careers without pinning down. I'm honestly not sure whether `throw` or the general concept of an exception is more strongly tied to the idea of implicit error return.

2. There are various things that get raised in formal but otherwise day-to-day writing. For example, a key part of the RFC process is to raise raise concerns, complaints, objections, and issues.

> Ah, this is the reason why I thought `fail` was a bit weird, but couldn't put into words why. Thanks.

No problem. Natural language and how it relates to programming intuition are my areas of strength that seem to overlap the least with others here, so I try to help out whenever possible.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-05T16:59:52Z,True,rust-lang_____rfcs_____2426_____386819723,"Regarding the use of ""raise"" instead of ""throw"": there is also precedent for ""raise"" in Ada.

Used in safety critical software such as defence and aerospace, the things Ada and Rust value actually align pretty well. As an aside, it's also interesting to note that Ada has a surprisingly Rust match-ish flavour when it comes to handling exceptions:

```
-- Ada language example of exceptions being raised and handled in the same function
procedure excep3  is 
    Invalid_Data: Exception;
    n: integer;
begin
    loop
        put(""Enter an even number less than 1000, negative to quit:"");
        get(n);
        if n >= 1_000 then
            raise Invalid_Data;
        elsif n mod 2 = 1 then
            raise Invalid_Data with ""Number must be even!"";
        end if;
        exit when n < 0;
        put_line(n'img);
    end loop;
exception
    when e: Invalid_Data =>
        put(exception_name(e));
        put("".  Data was not valid!  "");
        put(exception_message(e));
    when e: Others =>
        put(""Something unexpected happened!  "");
        put(exception_name(e));
        put(exception_message(e));
end  excep3;
```",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-05T17:46:39Z,True,rust-lang_____rfcs_____2426_____186268009,"@Centril I think my rigorous reason is I don't like introducing new names ""out of thin air."" Every other label has its name chosen by the source code- I would be much less bothered by some kind of `'my_label: fn f() { ... }` or `'my_label: try { ... }` than I am by introducing `'fn` or `'try` as ""special"" names.

A similar-but-different situation came up in https://github.com/rust-lang/rfcs/pull/2115, where people felt wary about allowing the source code to introduce names without some primary declaration point. But in that case, the source code is still the thing determining the name- you write the same name in two places and they mean the same thing. Labels inherently have a ""declaration"" point, but the same reasoning applies- *you* write the name down in *both* places, *as a label*.

(@squishy-clouds `'static` is not a label at all- it's a lifetime, and further kind of a ""monoidal identity element"" like `0` or `1` or `[]`, so it gets a bit of a pass here.)",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-05T18:24:05Z,True,rust-lang_____rfcs_____2426_____386825368,"I'd like to expand on what I said in https://github.com/rust-lang/rfcs/pull/2426#issuecomment-385778639, about an uneasiness around introducing too many ad-hoc `return`/`break`/`continue`-alikes. @nagisa's comparison to Go's simplicity in https://github.com/rust-lang/rfcs/pull/2426#issuecomment-386793794 is related and very compelling, though I'm not worried about similarity to exceptions.

I am *increasingly* worried about `throw`'s impact on language ""size."" I think we should step back and consider not just the case of ""I need to early-exit this `try` block with an error,"" but how this makes the system itself feel as a whole. If we add a bunch of unconnected features, then no matter how well they solve the problems they target, we still wind up with a giant ""design-by-committee"" mess.

The problem with `throw`, then, is that it doesn't fit well with all of the things we might want to do in this space:
* `try` has `Ok`-wrapping, but this is currently very narrow- it only applies to the block's tail expression. The logic for performing a fallible operation quite often includes early returns, of both failure *and* success types.
* Functions that return `Result` don't have `Ok`-wrapping. Extending `try` blocks to `try fn`s feels likely to avoid the mess I'm worried about, but on its own only exacerbates the previous problem because functions are much more likely to early-return than blocks.
* We already have a set of early-return tools whose responsibilities feel fairly well-partitioned, and battle-tested across countless languages. Adding `throw` as-is leads to a lot of overlap, particularly with `break`-with-value, which feels like the canonical expression-based early-return.

The most coherent way to look at ""Rust's error handling story so far"" comes from the interaction between normal data+control flow on one hand, and `try`+`Ok`-wrapping+`?` on the other:
* If you take a non-erroring block and wrap it in `try { .. }`, its type changes from `T` to `Result<T, _>` (or rather `impl Try<Ok=T>`), and everything else remains the same.
* If you take an erroring expression and add `?` to it, its type changes from `Result<T, _>` (or `Try` again) to `T`, and it can then be used in a non-erroring block.

Together, these let people separate the ""happy path"" from the ""error path,"" while retaining the benefits of an expression-based language. However, there are a few holes:
* You can use `?` not only in `try` contexts, but also in functions returning `Result`. I see this as a slight historical accident, stemming from the need to get `?` before working out the entire `try` story. It's not a huge deal, and on the whole I think it's a good thing, but it has the potential to make a mess if we don't keep it in mind.
* Early return is not handled *at all*. `return`s and `break`s *aren't* encapsulated by their containing `try` context, but rather ""see through"" it and must perform any `Ok`-wrapping and error conversion themselves.
* We're not totally clear yet on how we want a particular `try` context to specify its `Try` implementation. So far this hasn't been a big deal, because the ""function returning `Result`/`Option`""-as-""ad-hoc try context"" already specifies it, again by ""seeing through"" what's actually going on.

Coming back to `throw`: it only solves a tiny piece of *one* of these holes, and it's not really extensible to solving any more than that. Just as we kept the module RFC as one unit, I'd like to keep error handling coherent. I don't want us to wind up with ""`throw`, plus its successful equivalent `break 'try`, oh except the successful equivalent in a `try fn` is just `return`, plus `try Result { .. }` to fix type inference, except `try fn`s just reuse their return type."" None of that feels great, the way `try`+`Ok`-wrapping+`?` does so far.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-05T18:26:34Z,True,rust-lang_____rfcs_____2426_____386825505,What is Ok-wrapping?,True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-05T18:27:38Z,True,rust-lang_____rfcs_____2426_____386825561,"@SoniEx2 A `try` block's tail expression is of type `T`, but the `try` block itself is of type `Result<T, _>`, so you don't write `try { .. Ok(success_value) }` but merely `try { .. success_value }`.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-05T18:28:51Z,True,rust-lang_____rfcs_____2426_____386825651,so you don't get to call a fallible function at the end of a try block?,True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-05T18:30:36Z,True,rust-lang_____rfcs_____2426_____386825736,"@SoniEx2 Correct- if the tail expression is a call to a fallible function, you use `?` on it just like you would anywhere else in the block. (Or rather, anywhere else in the block that you're not going to work with the `Result` directly.)",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-05T18:34:26Z,True,rust-lang_____rfcs_____2426_____386825974,"That's absurd, thank you very much.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-05T18:51:03Z,True,rust-lang_____rfcs_____2426_____386826950,"@SoniEx2 Calling things absurd is not conducive to constructive discussion.

@rpjohnst Personally, I think Go's simplicity is nothing to be proud of; It trades the short term benefits of learning a language quickly against making programs easier to understand with higher-order constructs (sum types, generics, etc.). In particular, Go's design decisions seem at odds with Rust's here. Go's error handling is nothing like ours since it is based on products instead of sums and they have no equivalent to `?` sugar.

To me, `try { .. }`, `throw expr` and `expr?` don't feel unconnected at all; but enhance each other and provide a coherent system. Yes, there is no equivalent to `break 'try Ok(expr)`, but I think early-return Ok-wrapping is also more rare. I think `throw` makes the system more coherent, but let's not let the perfect be the enemy of the good.

Adding `try fn` would make the system even better, and I don't get why it would exacerbate the problem. If anything, more early returns in functions seem to motivate `try fn`. I think a good chunk of all functions in fact should be `try fn` (and the change is semver compatible from the POV of not changing the requirements at the call site of a function, assuming that the version of Rust has `try fn`).

Regarding `break 'label value`, it is something I hope to see little of in surface syntax; it should be hidden away in macros imo.

I would say that many things are in flux as you say regarding `Try`; so I would not want to rush the stabilization of `throw` and these things. We *should* try to make it as coherent as possible.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-05T21:15:17Z,True,rust-lang_____rfcs_____2426_____386835534,"Those specific features in Go are not really relevant here. The comparison was made to Rust *as it stands*- that is, *including* generics and sum types. The point is that Go (and, by extension, current Rust) is relatively *economical* and hangs together well.

The canonical example in the other direction is C++. Every feature in C++ is very well-motivated and a *lot* of design work goes into that language. But it's still very complex and messy! Features overlap with each other in purpose; features interact with each other in unexpected ways; the system as a whole is hard to really wrap your head around.

Much of your response seems to be precisely the sort of thing I'm objecting to- reasoning around individual features rather than their interaction:
* > early-return Ok-wrapping is rare

  That's fine, maybe we don't need it, but nobody has said anything about *why* that might be the case, *in the context of the whole error-handling system*.
* > I don't get why [`try fn`] would exacerbate the problem. If anything, more early returns in functions seem to motivate `try fn`.

  I think you misunderstood me. I said `try fn` specifically exacerbates ""the *previous* problem,"" i.e. ""`Ok`-wrapping applies only to a block's tail expression."" That is, `try fn` increases the demand for early-return `Ok`-wrapping, which we don't have.
* > Regarding `break 'label value`, it is something I hope to see little of in surface syntax

  Sure, I don't disagree with this either, *in isolation*. But this interacts poorly with the error handling story. For example, assume we take this chain of decisions: we want `try fn` so people don't have to double-indent their functions to get `Ok`-wrapping -> we want an early-exit `Ok`-wrapping statement like `pass` so people don't have to use two different ways of returning from `try fn`s -> oops, now we have a bunch of overlapping ad-hoc ways to exit functions and/or blocks.

So yes, absolutely we should try to make this as coherent as possible. IMO *we're not doing a great job* yet.",True,True,196,33091.05
Homebrew/brew/3720,2018-05-06T15:12:50Z,False,5aef1c736480fd25e8225341,Maybe also use the cache here if `HOMEBREW_LINKAGE_CACHE` is set?,True,False,110,173514.51666666666
Homebrew/brew/3720,2018-05-06T15:13:06Z,False,5aef1c736480fd2079a23642,Maybe also use the cache here if `HOMEBREW_LINKAGE_CACHE` is set?,True,False,110,173514.51666666666
Homebrew/brew/3720,2018-05-06T15:13:22Z,False,5aef1c816480fd228c55ff9d,Why is a `break` needed here?,True,False,110,173514.51666666666
Homebrew/brew/3720,2018-05-06T15:15:23Z,False,5aef1c736480fd24b405c7e8,Can you make all of these methods `private` that were before? Trying to reduce the `public` surface of this class since you first opened the PR. Thanks!,True,False,110,173514.51666666666
Homebrew/brew/3720,2018-05-06T15:17:48Z,False,5aef1ca36480fd27bd464108,@AndrewMcBurney Thanks again for all your work here and apologies for all the delays. I wish I had more time to spend on Homebrew and I do feel bad for keeping you waiting for so much for so long ❤️ ,True,False,110,173514.51666666666
rust-lang_____rfcs_____2426,2018-05-06T15:39:07Z,True,rust-lang_____rfcs_____2426_____386888415,"@rpjohnst 

> Much of your response seems to be precisely the sort of thing I'm objecting to- reasoning around individual features rather than their interaction:

I would point to the RFC's text where I actually do reason about interactions, laws & general properties, etc. I don't want to repeat too much of my reasoning in there.

> That is, `try fn` increases the demand for early-return `Ok`-wrapping, which we don't have.

So now I am not sure that we mean the same by `try fn`.
What I mean by `try fn` is a function where the return type must satisfy `Try` and where `return expr` always `Ok`-wraps `expr`. In this scenario, `throw expr` fits very well. Of course, the question is if we want this system or not. I personally do, but many don't.

-------------------------------

That said; I have now made some changes to the RFC:
+ The RFC is essentially experimental.
+ Both `throw` and `fail` are reserved; this is the essence of what the RFC amounts to now plus some ideas on what those constructs *could* be.
+ Which one of `throw` or `fail` to experiment on nightly is left unresolved.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-06T15:54:47Z,True,rust-lang_____rfcs_____2426_____186294995,"@rpjohnst I don't think they would be so ""out of thin air"";

If the system of having special labels is applied out consistently per control flow block-form you could have:

+ `'fn`
+ `'loop`
    + `'while`
    + `'for`
    + maybe just merge these as one `loop`?
+ `'if`
+ `'match`
+ `'try`
+ `'async`
+ `'const` (maybe not?)

The goal of these are not to be used directly in people's code, but rather hidden away in macros so that you can invent new and interesting DSLs. The problem with having to explicitly declare the labels is that you have to pass them into the macros.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-06T16:29:17Z,True,rust-lang_____rfcs_____2426_____186295842,"Do we have any actual use cases for a generalized ""magic labels"" feature like this, even in DSLs? I've never heard anyone suggest any of these except as an implementation detail of a throw/fail macro.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-06T16:45:35Z,True,rust-lang_____rfcs_____2426_____186296257,"One use-case might be that if we had a `'try` built-in label that can be targeted by `?`, I think all of the other exception like syntax can be implemented by the eco-system (or even `std` if deemed worthy) as macros. That would allow for:

* People to use break-with-value and `?` with these blocks without auto-wrapping or any other additional functionality, basically keeping it as close to current control flow as possible.
* Experimentation with more exception like syntax on crates.io. Before things would settle that would also provide an explicit opt-in to specific semantics. Once things have settled, the functionality can simply be added to `std`. Since they would still be macros, there's still an opt-in to additional semantics like auto-converting a final result. Adjusting pieces of `std` also seems easier and more future proof than changing the language itself.

I'm wondering if it would make sense to put together a proposal for this path for the new exception like syntax extensions.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-06T16:52:24Z,True,rust-lang_____rfcs_____2426_____186296418,"> Do we have any actual use cases for a generalized ""magic labels"" feature like this, even in DSLs?

Not very concretely at least; Just hypothesizing ;)",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-06T16:53:31Z,True,rust-lang_____rfcs_____2426_____386893089,"> What I mean by `try fn` is a function where the return type must satisfy `Try` and where `return expr` always `Ok`-wraps expr.

For the purposes of my argument, I split those two features apart- by `try fn` I only meant ""a function that `Ok`-wraps its trailing expression""; with early-exit `Ok`-wrapping as a separate feature.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-06T17:07:46Z,True,rust-lang_____rfcs_____2426_____386894104,"@rpjohnst OK; so we were not thinking of the same thing re. `try fn`; I was assuming that there would be no `pass` variant of `throw` and that `return` would just be the success variant in `try fn` (tho I entertained the notion [here](https://internals.rust-lang.org/t/pre-rfc-catching-functions/6505/54) but have since moved on) since no one has proposed reserving such a keyword.

",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-06T17:27:53Z,True,rust-lang_____rfcs_____2426_____386896005,"Yes, sort of outcome is one example of what I'm worried about. Having `Ok`-wrapping early-exit for functions, using a pre-existing control flow mechanism, but then *not* having it for `try` blocks (or having it but with yet another new statement) is a mess. It shows that our current plans do not fit well with the existing language.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-06T17:37:45Z,True,rust-lang_____rfcs_____2426_____386896938,"@rpjohnst I'm also worried about the potential discrepancy wrt. `return` between `try { .. }` and `try fn`; therefore, I think we should avoid being hasty here and make sure that the end result is as coherent as we possibly can make it. 

I am not sure there exists an *""our""* in ""current plans""; I could personally see `return expr` in `try { .. }` meaning `break 'try Ok(expr)`; In this system, it would be 100% coherent, but I accept that many people will find the word `return` there jarring and that it perhaps therefore is too radical an approach.",True,True,196,33091.05
Homebrew/brew/3720,2018-05-06T20:00:38Z,False,5aef5eef6480fd2327470e26,"I wanted to return the dependencies `linkage_checker.undeclared_deps.map { |n| Dependency.new(n) }` in the function. If I remove the `break`, it causes a test to fail:

<img width=""728"" alt=""screen shot 2018-05-06 at 3 58 11 pm"" src=""https://user-images.githubusercontent.com/8942499/39677288-661ea676-5146-11e8-8001-fedd2dc2c210.png"">
",True,False,110,173514.51666666666
Homebrew/brew/3720,2018-05-06T20:01:42Z,False,5aef5f2c6480fd23b3690505,Thank you Mike! And no need to apologize!! Thank you for all of the work you've put into maintaining homebrew throughout the years!! 🙌 ,True,False,110,173514.51666666666
spack/spack/7942,2018-05-07T07:04:08Z,False,5aeffa756480fd20caa7835c,"@tgamblin Given that you approved, I am going to merge the PR. Concerning this:
> Whether or not fixing the parser depends on whether or not we want ^@%+~ to be allowed characters within variants values.

do we want to change the parser too in another PR? Or should we leave parsing like it is?",True,False,7,9775.483333333334
Homebrew/brew/3720,2018-05-07T13:42:07Z,False,5af057b46480fd259d66201f,"> I wanted to return the dependencies linkage_checker.undeclared_deps.map { |n| Dependency.new(n) } in the function. If I remove the break, it causes a test to fail:

@AndrewMcBurney I think that's an API smell; generally it's not expected that `.new` blocks will return anything other than the instance. Instead perhaps you should add a class variable that will allow returning the last value in the block rather than relying on `break` to do so.

> The only thing missing as far as I can see (although this could be for a future PR) is having formula_installer or similar update the cache.

@AndrewMcBurney Any thoughts on this? Can you explain the current way the cache is updated/invalidated?

https://github.com/Homebrew/brew/blob/master/Library/Homebrew/formula_installer.rb#L611-L618 would be the place where existing invalidations similar to this occur.",True,False,110,173514.51666666666
rust-lang_____rfcs_____2426,2018-05-07T19:52:52Z,True,rust-lang_____rfcs_____2426_____186530175,"""fail"" doesn't seem like the right kind of word in terms of use of english. Consider: ""throw an error"", ""raise an issue"", ""return an error"", ""report a problem"". These all suggest an action taking place as a result of a failure. ""fail"" doesn't fit as well in this context, ""failed to grab the lock"", ""fail this code section"", ""fail this function"". It's more a statement that something went wrong than what action will be taken. e.g.
`// failed to open the file`
`raise ""bad file name"";`

My suggestion is to use ""raise"" as an alternative to ""throw"" instead of fail.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-07T21:03:58Z,True,rust-lang_____rfcs_____2426_____186550429,"Yes, [this was also pointed out](https://github.com/rust-lang/rfcs/pull/2426#issuecomment-386809498) by @ssokolow:
> That said, I'm not a fan of `fail` either because the intransitive use of the verb comes to mind first for me, which makes it feel odd.

In this regard, `raise` or `throw` are better. :+1: ",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-07T22:09:03Z,True,rust-lang_____rfcs_____2426_____387222130,"`pop`?

yes it conflicts with vec pop and stuff so just make it a macro I guess.

`pop!(NoneError);`",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-07T22:59:06Z,True,rust-lang_____rfcs_____2426_____387232181,"Probably worth noting `bail` as yet another candidate, especially since `error_chain` and `failure` already have a `bail!` macro.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-07T23:02:13Z,True,rust-lang_____rfcs_____2426_____387232726,"@Ixrec Didn't include `bail!` (tho it is discussed in the RFC) because it would break those two crates, which seemed unwise ;)",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-07T23:50:32Z,True,rust-lang_____rfcs_____2426_____387240880,"Also, when I hear bail, I think of two meanings:

1. An intransitive ""bail"" that you do when you're in a fighter plane that's ground-bound.
2. A transitive ""bail"" that's what you do with a bucket when your boat is filling with water.

...and, after a little more thought, the ""to pay someone's bail"" meaning.

Only the intransitive meaning feels intuitively relevant to this use case (and it's the one that the macro is referencing) and I can't think of a metaphor which makes sense for the transitive one.

(Putting the value in a metaphorical bucket and throwing it out of the function while you (execution flow) remain inside? That's more like `yield` for Python's generators than anything else.)",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-07T23:55:48Z,True,rust-lang_____rfcs_____2426_____387241676,"@joshtriplett 

> I still don't see the analogy you're trying to draw; the only thing this has to do with exceptions is that both handle errors.

I think that if there are equivalent language constructs, equivalent things that need to be considered while using them, and they solve an equivalent problem, they're not different.

We could--completely back-compatibly--change Rust's ABI tomorrow so that anything returning a `Result` actually uses unwinding to do so.  That's even been semi-seriously been discussed, since it'd be more efficient in the `Ok` path and reduce the penalty for using large `Error` types.

> that's a term I'd use for things like using finally to make sure your code unwinds properly when a function you call throws an exception and unwinds the stack.

`try { foo() } finally { bar() }` can be spelt `let r = foo(); bar(); r?` in rust.  And that's exactly what I was thinking about for things like `*frontiter = Some(mid);` in the `try_fold` code.

---

@Pzixel 

> > Nothing like that has ever been proposed, so it's a fallacy of relevance.
>
> No, it's a nice illustration.

I have absolutely no problem with someone saying that `catch` doesn't pull its weight, or conversely that it must exist to make the proposal make sense.

But I do have a problem with it being dismissed by a manufactured-to-be-unhelpful syntax.  If you're going to argue against it, either use a [steelman](https://en.wikipedia.org/wiki/Straw_man#Steelmanning) or one of the things that has actually been proposed, like [the early version of 243](https://github.com/glaebhoerl/rfcs/blob/c62612508db617110d7cead92852f6e5e9e2272b/active/0000-trait-based-exception-handling.md#trycatch) or [one of the musings from the `try` RFC](https://github.com/rust-lang/rfcs/pull/2388?#issuecomment-379473795).

---

@rpjohnst 

> You can use ? not only in try contexts, but also in functions returning Result. I see this as a slight historical accident, stemming from the need to get ? before working out the entire try story. It's not a huge deal, and on the whole I think it's a good thing, but it has the potential to make a mess if we don't keep it in mind.

On this I agree with you.

I'm glad that `?` is on every place that re-throwing can happen, but right now `?` is also they way you opt-in to the ""continuing along is success (because errors are rethrow)"" model.  I like that `try` gives an explicit _block_-level opt-in to that model, which feels more appropriate than individual-method-call-level.  (This is also why I like ok-wrapping for `try` blocks: if nothing (re-)threw, it must be successful.)

So I'd be happy if eventually (at least 3 years, probably 6 or more, for the idiom shift, if ever) `?`/`try` worked like `await`/`async`:

- You don't need to use either of them.  You can always use other syntax or combinators instead.
- If you do want to use `?`/`await`, you need to be in an appropriate `try`/`async` block or fn.

> Just as we kept the module RFC as one unit, I'd like to keep error handling coherent.

Does this RFC moving to a keyword-reservation e-RFC sufficiently address those concerns?

I could absolutely imagine that an eventual RFC to finalize the semantics of these things would need to touch on more areas.  For example, maybe it'd disallow `return` in `try` blocks, the same way `return` is currently prohibited in `async` blocks.

> > early-return Ok-wrapping is rare
>
> That's fine, maybe we don't need it, but nobody has said anything about why that might be the case, in the context of the whole error-handling system.

I think the answer to this is largely the ""`?` model"" I mention above.  The core premise of `?` is that errors are re-thrown (exiting early) and success values are used to continue execution (_not_ exiting early).  So if one needs the opposite (continuing on errors or being done early on success), then there's no special syntax (`?`, `try`, ...) to help with that.

",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-08T00:00:03Z,True,rust-lang_____rfcs_____2426_____387242345,can have `try { ? }` but not `{ ? }` I think that should be fixed somehow.,True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-08T00:02:11Z,True,rust-lang_____rfcs_____2426_____387242689,(honestly what's wrong with just having this whole thing as a built-in macro? `Err(expr)?; unreachable!();`),True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-08T00:17:26Z,True,rust-lang_____rfcs_____2426_____387245154,"@scottmcm 
> I think that if there are equivalent language constructs, equivalent things that need to be considered while using them, and they solve an equivalent problem, they're not different.

Right, but they're not equivalent language constructs and they don't have equivalent things that need to be considered while using them. That's the problem.

> We could--completely back-compatibly--change Rust's ABI tomorrow so that anything returning a Result actually uses unwinding to do so.

Not unless doing so implicitly stopped propagating at the first call not suffixed by `?`. By contrast, languages with exceptions often unwind through code that doesn't expect those exceptions.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-08T00:32:10Z,True,rust-lang_____rfcs_____2426_____387247377,"@scottmcm 

> But I do have a problem with it being dismissed by a manufactured-to-be-unhelpful syntax. If you're going to argue against it, either use a steelman or one of the things that has actually been proposed, like the early version of 243 or one of the musings from the try RFC.

I don't understand why you think I'm using a strawman argument, I just took the piece of code from ""Motivation"" paragraph which always show why exactly some feature is needed. I referenced it to show that I don't see this feature having enough value. If you think that there may be scenarios where this feature shines then, first of all, why it's not included in motivation part? Maybe review comment is required there then? Secondly, if so, please provide it so we can discuss.

Returning to the ""steelman"", I can only say **_onus probandi_**. I don't propose a change, so I don't have to argue why they shouldn't be added rather than we should argue why it _should_ be taken. It has been already emphasized by @phaylon in https://github.com/rust-lang/rfcs/pull/2426#issuecomment-386690110 . 

It looks to me like someone has already made the decision and now it should just look like everybody agreed on it, not like we are actually providing any significant feedback. The PR already has 51 downvotes with 8 upvotes, but it's going through approval process without problems and reconsideration and ""let's step backward and reexamine what do we have here"". That's strange.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-08T00:37:43Z,True,rust-lang_____rfcs_____2426_____387248149,"@scottmcm Yeah, you've pretty much captured my train of thought. To re-summarize:

Walking this RFC back to just keyword reservation, pending a more holistic RFC for the actual design, is great.

The (mostly hypothetical alternate-universe) idea of only allowing `?` in `try` blocks/fns is basically what I had in mind. (One other wild idea along the same lines: leave `?` for *outside* of `try` blocks, and make return-on-failure the *default* inside them. Basically [""implicit await""](https://internals.rust-lang.org/t/explicit-future-construction-implicit-await/7344) for the `try` context.)

As far as that actual design goes, prohibiting early-exit from try blocks feels like a promising direction to explore.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-08T01:41:29Z,True,rust-lang_____rfcs_____2426_____387257960,"here's an idea, why not use existing features to make new features?

why make everything a compiler thing?

we still have Box as a compiler thing, I also don't see any progress on moving away from that. (also I'm against box keyword because of this, but that's a discussion for another thread)

just give us a throw macro and be done with it. not everything needs a new keyword. use the power of the library.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-08T02:16:49Z,True,rust-lang_____rfcs_____2426_____387263211,"> here's an idea, why not use existing features to make new features?

I'm actually working on [a proposal](https://gist.github.com/phaylon/0e72af906f1144615d4ea0d46eccbc5b) that is similar to that. The idea would be to make sure Rust is powerful enough for all special error handling syntax to be implemented via macros by the ecosystem, and only go the language feature route once everything could be considered as a whole, and we know what works and what doesn't.

Hoping to start an internals discussion about this tomorrow.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-08T02:21:14Z,True,rust-lang_____rfcs_____2426_____387263860,"@rpjohnst I agree with your point that these related error handling RFCs would gain something by be treated considered as a whole. IMHO, it's when taken together that these really shine. Since this current RFC is about naming, one issue with looking at each of these try/throw/catch as separate is that it doesn't really allow us to see that value of the name “throw” is that it pairs with “catch”. You may catch what was thrown.

Also, funny I was just writing the same idea you just wrote about: ""I could even imagine in a try block where ? is done automatically on calls that return Result. Ie you only need ? outside of a try.""
That to me feels like it would a compelling feature/convenience of try blocks.

There's a quote I like from Chuck Pahlaniuk (the Fight Club guy): ""The tricking to forgetting the big picture is to look at everything close up."" Only partially applies here but I love the quote regardless LOL!",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-08T02:24:47Z,True,rust-lang_____rfcs_____2426_____387264384,"@phaylon I ""like"" how we're being ignored by the main proponents of this RFC as if we're just line noise.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-08T02:28:34Z,True,rust-lang_____rfcs_____2426_____387264977,"@phaylon I think you have a cool idea there but the more I think about it, wouldn't that lead to fragmentation of the language? ie. there's almost a meta language that lets all proposed solutions work through macros.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-08T02:36:27Z,True,rust-lang_____rfcs_____2426_____387266077,"@ibkevg 
I don't really consider things implemented by macros fragmentation. Due to the common block marker they could even interoperate sensibly. For example, a `failure_syntax` crate providing things like `throw_err!`, `catch_failure!` or some context adjustment facilities would use the same `'escape` block target, and can interoperate with normal `catch!` and `throw!`. Since we already have the `Try` trait, that would also be a point of defragmentation.

We can still turn things into sanctioned core language if a winning strategy for extended error handling emerges.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-08T03:05:11Z,True,rust-lang_____rfcs_____2426_____387270180,"@phaylon do you think the effort to support creating macro-izable building blocks and then build different styles on top will just delay the inevitable clash of titans? It feels the differences here are philosophical rather than technical and those philosophical differences will still be there when the macros are able to be actually created. Also, my experience with code that is intended to be removed later is that in spite of best intentions to the contrary there's always something to do that's more important than removing later.

I actually wonder if it would be feasible+faster to write up 2-3 different and very opinionated full/holistic error handling styles/naming conventions that illustrate with example code how each would look and feel and work? It seems to me that something like this might accomplish 90% or more of what building macro support for prototyping would accomplish but in much less time and . Just thinking out loud here. I feel that @Centril has done a ton of good work here but perhaps this could relate to @rpjohnst 's thought to be explicit about how all these RFPs work together?",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-08T03:11:03Z,True,rust-lang_____rfcs_____2426_____387270996,"@ibkevg 
> do you think the effort to support creating macro-izable building blocks and then build different styles on top will just delay the inevitable clash of titans? It feels the differences here are philosophical rather than technical and those philosophical differences will still be there when the macros are able to be actually created.

I think we'd certainly have more information at that point then, and can more easily assume the practicality of different solutions.

> Also, my experience with code that is intended to be removed later is that in spite of best intentions to the contrary there's always something to do that's more important than removing later.

I think that actually worked really well with `try!` which became `?` :)",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-08T03:30:50Z,True,rust-lang_____rfcs_____2426_____387273728,"I propose a simple solution for those of us who dislike this feature: let's fork rust! (or at least stop using newer versions of rust.)

(also, @phaylon 's proposal could really stop fragmentation.)",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-08T03:38:39Z,True,rust-lang_____rfcs_____2426_____387274742,"Well, personally my escape hatch would be a set of more aggressive lints simply deactivating things I don't want in my code :) That could also have such niceties as ""jumpy control flow needs labels if there's an `unsafe` in the `fn`"".

But that's getting off-topic.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-08T03:40:56Z,True,rust-lang_____rfcs_____2426_____387275032,I want my DSLs to be able to use `.throw()`,True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-08T03:46:01Z,True,rust-lang_____rfcs_____2426_____387275638,"@phaylon 
> I think that actually worked really well with try! which became ? :)

True. Out of curiosity, do you know how long it took from RFP to macro-ization to the point where try! was removed? I'm asking only because I think this RFP had hopes for inclusion in Rust 2018.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-08T04:09:36Z,True,rust-lang_____rfcs_____2426_____387278570,"I think you should also make an RFC to remove ""zero-cost abstractions"" from the home page, because the hidden cost associated with these RFCs is too damn high.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-08T04:45:41Z,True,rust-lang_____rfcs_____2426_____387282869,"You know, `return` sounds like a great keyw... Oh wait",True,True,196,33091.05
DSharpPlus_____DSharpPlus_____281,2018-05-08T06:18:36Z,True,DSharpPlus_____DSharpPlus_____281_____186536363," Previously you were handed nulls.

Make sure you familiarize yourself with our contributing guidelines.

# Summary
Fixes the Issue of null audit roles

# Details
Not much, just checked for roles that don't exist.
 ",True,True,5,915.2333333333333
DSharpPlus_____DSharpPlus_____281,2018-05-08T07:43:52Z,True,DSharpPlus_____DSharpPlus_____281_____387314659,Please don't PascalCase locals.,True,True,5,915.2333333333333
rack_____rack_____1272,2018-05-08T12:00:22Z,True,rack_____rack_____1272_____387379194,"I have an initial implementation of the updated draft, placed in [iodine's 0.6.0 version branch](https://github.com/boazsegev/iodine/tree/0.6-stripped) (installable from source).

There's some features being re-written (such as pub/sub extensions, including Redis integration), but the core WebSocket/SSE and pub/sub API will work.

I think this would be enough to author a test application using a monkey-patched Rails...

@matthewd , any final changes / requests / tips before we start woking on a ""like-for-like benchmarking"" example app? How do you want to benchmark this? Should we use the [websocket-shootout approach](https://github.com/hashrocket/websocket-shootout/tree/master/ruby/action-cable-server)?",True,True,128,932194.1166666667
rust-lang_____rfcs_____2426,2018-05-08T12:17:57Z,True,rust-lang_____rfcs_____2426_____387383111,"@ibkevg 
No idea about the exact timelines. `try!` is still supported though currently. Also unsure what an RFP is :)

For the extended error handling things I was hoping the first iteration could happen in external crates, then maybe move to `std` either in the form of macros or syntax once the ecosystem had time to figure it out.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-08T12:44:00Z,True,rust-lang_____rfcs_____2426_____387389596,"> Also unsure what an RFP is :)

I'm guessing it's a typo for ""RFC"".

",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-08T13:32:21Z,True,rust-lang_____rfcs_____2426_____387403176,"what about a contextual `break up expr;`?

```rust
if condition {
    break up Foo;
}
```

this also doesn't have associations with exception handling (:+1:) nor does it introduce new keywords (:+1:) yet it has the same expressive power as introducing new keywords (:+1:). (or if you want ""up"" as a new keyword just for this use-case, well, except for games and physics libraries I don't see why `up` would be used as a name. can always go with ""breakup"" as a keyword.)

in the future, we could even `break up None;` (actually you'd still need to specify `Option<!>`) instead of `break up NoneError;` (altho I prefer the latter since it doesn't have the kludgy `Option<!>`)",True,True,196,33091.05
rack_____rack_____1272,2018-05-08T13:54:13Z,True,rack_____rack_____1272_____387410220,The Agoo develop branch is also compatible with the spec as described in the current state of this PR. Should make a versioned release later this week once the named pub-sub feature is completed.,True,True,128,932194.1166666667
mysqljs_____mysql_____1962,2018-05-08T13:58:15Z,True,mysqljs_____mysql_____1962_____387411600,"@dougwilson I've kept the option for providing a custom key padding, to allow users to exceptionally connect to a MySQL `8.0.4 RC` server. In any case, the default value is always `RSA_PKCS1_OAEP_PADDING` which means it will work, by omission, with the latest `8.0.11 GA` version.

I couldn't find a sane way to add an additional Travis CI test matrix for users with non-empty passwords though. I was constantly bumping into an authentication error (I believe it might be related to the `mysql` docker setup and environment variables mixup), but maybe you can give it a try.

Let me know if there is something else you would like to see in this PR. Otherwise, feel free to merge it! :wink: ",True,True,37,413793.7833333333
rust-lang_____rfcs_____2426,2018-05-08T14:00:08Z,True,rust-lang_____rfcs_____2426_____186737197,fun historical context: `panic!` was `fail!` before it was `panic!`.,True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-08T14:03:59Z,True,rust-lang_____rfcs_____2426_____387413458,if it was `breakup` or `break up` I'd be more likely to support it.,True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-08T14:31:37Z,True,rust-lang_____rfcs_____2426_____387422688,"@ibkevg 
> True. Out of curiosity, do you know how long it took from RFP to macro-ization to the point where try! was removed? I'm asking only because I think this RFP had hopes for inclusion in Rust 2018.

@phaylon 
> No idea about the exact timelines. try! is still supported though currently. Also unsure what an RFP is :)

@Centril 
> I'm guessing it's a typo for ""RFC"".

Given that it was spelled RFP twice, it might also be intentional, with a meaning like ""Request For Prototype"", as in what happens after an RFC is accepted.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-08T15:15:24Z,True,rust-lang_____rfcs_____2426_____387437964,"@ssokolow Thanks for giving me the benefit of the doubt, but it was a typo. I need to issue an RFWIMNWIS, Request for What I Mean, Not What I Say! :D",True,True,196,33091.05
DSharpPlus_____DSharpPlus_____281,2018-05-08T19:14:16Z,True,DSharpPlus_____DSharpPlus_____281_____387511417,"PascalCase  is life, PascalCase  is love.

I didn't see a style recommendation sorry. ",True,True,5,915.2333333333333
DSharpPlus_____DSharpPlus_____281,2018-05-08T21:28:56Z,True,DSharpPlus_____DSharpPlus_____281_____387548283,"I like how you and your people were so rude to me and yet still accept my bug fix. 

Eat that crow, bitch.",True,True,5,915.2333333333333
DSharpPlus_____DSharpPlus_____281,2018-05-08T21:33:50Z,True,DSharpPlus_____DSharpPlus_____281_____387549497,@TheLastTech are you fucking blind? I closed your PR because of your rude behaviour and personal harassment towards emzi.,True,True,5,915.2333333333333
rack_____rack_____1272,2018-05-09T03:51:35Z,True,rack_____rack_____1272_____387612175,I cleaned up the formatting of the SPEC around the upgrade section. An HTML version is at [http://www.ohler.com/agoo/rack/file.SPEC.html](http://www.ohler.com/agoo/rack/file.SPEC.html).,True,True,128,932194.1166666667
oppia/oppia/4926,2018-05-10T21:18:16Z,False,5af4b7256480fd27bd4897c2,"# [Codecov](https://codecov.io/gh/oppia/oppia/pull/4926?src=pr&el=h1) Report
> Merging [#4926](https://codecov.io/gh/oppia/oppia/pull/4926?src=pr&el=desc) into [develop](https://codecov.io/gh/oppia/oppia/commit/3a7a07239e9b3193b5b8e1992e7e18d0f43c976a?src=pr&el=desc) will **decrease** coverage by `<.01%`.
> The diff coverage is `50%`.

[![Impacted file tree graph](https://codecov.io/gh/oppia/oppia/pull/4926/graphs/tree.svg?src=pr&token=tPeCITQzzG&width=650&height=150)](https://codecov.io/gh/oppia/oppia/pull/4926?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##           develop    #4926      +/-   ##
===========================================
- Coverage    44.16%   44.16%   -0.01%     
===========================================
  Files          386      386              
  Lines        23289    23306      +17     
  Branches      3789     3794       +5     
===========================================
+ Hits         10286    10293       +7     
- Misses       13003    13013      +10
```


| [Impacted Files](https://codecov.io/gh/oppia/oppia/pull/4926?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [...s/exploration\_editor/ExplorationPropertyService.js](https://codecov.io/gh/oppia/oppia/pull/4926/diff?src=pr&el=tree#diff-Y29yZS90ZW1wbGF0ZXMvZGV2L2hlYWQvcGFnZXMvZXhwbG9yYXRpb25fZWRpdG9yL0V4cGxvcmF0aW9uUHJvcGVydHlTZXJ2aWNlLmpz) | `42.9% <ø> (ø)` | :arrow_up: |
| [...ges/exploration\_editor/settings\_tab/SettingsTab.js](https://codecov.io/gh/oppia/oppia/pull/4926/diff?src=pr&el=tree#diff-Y29yZS90ZW1wbGF0ZXMvZGV2L2hlYWQvcGFnZXMvZXhwbG9yYXRpb25fZWRpdG9yL3NldHRpbmdzX3RhYi9TZXR0aW5nc1RhYi5qcw==) | `0.62% <ø> (ø)` | :arrow_up: |
| [...ditor/ExplorationSaveAndPublishButtonsDirective.js](https://codecov.io/gh/oppia/oppia/pull/4926/diff?src=pr&el=tree#diff-Y29yZS90ZW1wbGF0ZXMvZGV2L2hlYWQvcGFnZXMvZXhwbG9yYXRpb25fZWRpdG9yL0V4cGxvcmF0aW9uU2F2ZUFuZFB1Ymxpc2hCdXR0b25zRGlyZWN0aXZlLmpz) | `1.88% <0%> (-0.08%)` | :arrow_down: |
| [...v/head/pages/exploration\_player/PlayerConstants.js](https://codecov.io/gh/oppia/oppia/pull/4926/diff?src=pr&el=tree#diff-Y29yZS90ZW1wbGF0ZXMvZGV2L2hlYWQvcGFnZXMvZXhwbG9yYXRpb25fcGxheWVyL1BsYXllckNvbnN0YW50cy5qcw==) | `100% <100%> (ø)` | :arrow_up: |
| [...mponents/forms/AudioTranslationsEditorDirective.js](https://codecov.io/gh/oppia/oppia/pull/4926/diff?src=pr&el=tree#diff-Y29yZS90ZW1wbGF0ZXMvZGV2L2hlYWQvY29tcG9uZW50cy9mb3Jtcy9BdWRpb1RyYW5zbGF0aW9uc0VkaXRvckRpcmVjdGl2ZS5qcw==) | `8.79% <100%> (ø)` | :arrow_up: |
| [...ges/exploration\_editor/ExplorationRightsService.js](https://codecov.io/gh/oppia/oppia/pull/4926/diff?src=pr&el=tree#diff-Y29yZS90ZW1wbGF0ZXMvZGV2L2hlYWQvcGFnZXMvZXhwbG9yYXRpb25fZWRpdG9yL0V4cGxvcmF0aW9uUmlnaHRzU2VydmljZS5qcw==) | `34.37% <100%> (+1.04%)` | :arrow_up: |
| [...head/pages/exploration\_editor/ExplorationEditor.js](https://codecov.io/gh/oppia/oppia/pull/4926/diff?src=pr&el=tree#diff-Y29yZS90ZW1wbGF0ZXMvZGV2L2hlYWQvcGFnZXMvZXhwbG9yYXRpb25fZWRpdG9yL0V4cGxvcmF0aW9uRWRpdG9yLmpz) | `5.51% <33.33%> (+0.58%)` | :arrow_up: |
| [.../templates/dev/head/services/EditabilityService.js](https://codecov.io/gh/oppia/oppia/pull/4926/diff?src=pr&el=tree#diff-Y29yZS90ZW1wbGF0ZXMvZGV2L2hlYWQvc2VydmljZXMvRWRpdGFiaWxpdHlTZXJ2aWNlLmpz) | `80.95% <33.33%> (-19.05%)` | :arrow_down: |
| [...xploration/EditableExplorationBackendApiService.js](https://codecov.io/gh/oppia/oppia/pull/4926/diff?src=pr&el=tree#diff-Y29yZS90ZW1wbGF0ZXMvZGV2L2hlYWQvZG9tYWluL2V4cGxvcmF0aW9uL0VkaXRhYmxlRXhwbG9yYXRpb25CYWNrZW5kQXBpU2VydmljZS5qcw==) | `86% <50%> (-1.5%)` | :arrow_down: |
| [...pages/exploration\_editor/ExplorationDataService.js](https://codecov.io/gh/oppia/oppia/pull/4926/diff?src=pr&el=tree#diff-Y29yZS90ZW1wbGF0ZXMvZGV2L2hlYWQvcGFnZXMvZXhwbG9yYXRpb25fZWRpdG9yL0V4cGxvcmF0aW9uRGF0YVNlcnZpY2UuanM=) | `28% <75%> (+1.61%)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/oppia/oppia/pull/4926?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/oppia/oppia/pull/4926?src=pr&el=footer). Last update [3a7a072...3aa2eb5](https://codecov.io/gh/oppia/oppia/pull/4926?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",True,False,1,0.0
rust-lang_____rfcs_____2426,2018-05-12T08:24:14Z,True,rust-lang_____rfcs_____2426_____388539477,"This is a very well-writren and thoroughly researched RFC. @Centril I like how neutral you remain when discussing the options, and although you argue for `throw` as your favourite choice, you make it clear that it's just your opinion and still point out the advantages of the other choices.

Just wanted to add a couple thoughts:
- I like `fail`, and the reason `fail <expr>` didn't sound weird to me is because I insert the word ""with"" in between, e.g. ""fail with this error"". `break <expr>` works similarly.
- This has been mentioned many times, but it would be nice for consistency of we had an Ok-wrapping version of `throw/raise/fail`. Unfortunately the potential keywords for that are not as good — `pass`? `succeed`? `ok`? `return`? `pure`? — but it would be a shame if that were the only reason keeping us from having it.",True,True,196,33091.05
oracle/oci-cloud-controller-manager/193,2018-05-14T09:51:38Z,False,5afaa68a6480fd33bfa59039,@jhorwit2 Closing for now as I presume you didn't manage to repro. Reopen of course if that's not the case 🙂 .,True,False,3,18769.716666666667
rust-lang_____rfcs_____2426,2018-05-14T14:55:03Z,True,rust-lang_____rfcs_____2426_____388846709,"Since the only urgent question of this RFC is the keyword reservation of `throw` and `fail`,
I have written a separate proposal in RFC #2441, to do just that and nothing more,
so that this RFC does not have the same urgency.
",True,True,196,33091.05
mysqljs_____mysql_____1962,2018-05-14T16:27:25Z,True,mysqljs_____mysql_____1962_____388878819,"This is awesome, thank you. I've been reviewing it, and sorry I didn't reply that I was in progress. I did find at least one regression just in existing behavior so far, and pushed a test to cover this to `master` so we have it covered for the future as well. I noticed the change for the `ChangeUser` sequence no longer passes any of the options down to the `Sequence` constructor, which differs not from every other sequence. Not sure what the purpose of that change was, but it at least prevents the `timeout` option from getting passed down.

I'll look at what the fix is and push it up to your PR branch here 👍 ",True,True,37,413793.7833333333
pallets_____click_____493,2018-05-14T20:20:02Z,True,pallets_____click_____493_____388949241,"Closing this not for any of the things that @amcgregor decided to say, but because I want to unify this with the configs from Flask. I'm still not 100% comfortable with Travis doing deploys, but maybe we'll get there eventually.",True,True,13,1265610.9
rack_____rack_____1272,2018-05-14T21:16:49Z,True,rack_____rack_____1272_____388965736,"@evanphx , how is the Puma adaptation going?

So far, the API iodine implements for the `client` object looks [like this](https://www.rubydoc.info/gems/iodine/0.6.0/Iodine/Connection).

It includes a number of methods not listed in the specification besides the Pub/Sub extensions (the `timeout`, `timeout=` and `protocol` method).

I also added the `env` accessor so I could avoid making objects just to keep the `env` alive. This is something I need for an upcoming plezi.io release and I'm not sure if it should be adopted (as it adds longevity to all the objects in the `env` Hash, which is bound to increase memory fragmentation).

Anyway, I hope to see this move forward. Iodine has been serving clients like this for the last couple of year or so (albeit using `extent` rather than a client object) and so far the feedback is positive and the performance is promising.",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-14T23:19:46Z,True,rack_____rack_____1272_____388993015,If you need extensions to make anything useful they need to be part of the spec IMHO.,True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-15T00:08:43Z,True,rack_____rack_____1272_____389001235,"@ioquatix , this was my thought as well, which is why I wrote it here. Perhaps these added methods (`timeout`, `timeout=` and `protocol`) should be part of the specification.

On the other hand, I don't have to have the `env` variable, I just as easily could have create a callback object (using a class instance) instead of static module... it was more of a design preference that I thought I should mention.

**EDIT** I should note that the `timeout` methods aren't required to make WebSockets / SSE work. It's just that iodine also supports raw TCP/IP connections and these connections require access to timeout management.",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-15T00:40:04Z,True,rack_____rack_____1272_____389005949,"The entire pub-sub pattern can be implemented by keeping an Array of connections. A publish would then call write on each one. The reason pub-sub was not included in the PR was that it added another new use pattern to the spec that would take even more effort for servers to comply with.

Like @boazsegev and Iodine Agoo includes a pub-sub implementation that is compatible to a large degree with Iodine. In then end we wanted something basic that could be used with a minimum of changes in Rack and the way developers use it.

The current PR focuses just on Push without also introducing pub-sub. Maybe a future PR can propose the addition of pub-sub. One step at a time.",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-15T01:43:24Z,True,rack_____rack_____1272_____389015687,"> The entire pub-sub pattern can be implemented by keeping an Array of connections. A publish would then call write on each one. The reason pub-sub was not included in the PR was that it added another new use pattern to the spec that would take even more effort for servers to comply with.

This wouldn't work with falcon in forked mode, since it forks one process per CPU core and they all handle connections independently.

Even in threaded mode, some kind of synchronisation is required. I believe the same problem would affect puma in cluster mode, for example.

My opinion is that this spec needs to be feature complete, as in, it's possible within the confines of the spec to implement actual useful websocket applications. Otherwise, what's the point? If every server supports the core spec but provides their own incompatible models on top of that, this isn't going to work out very well.",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-15T02:10:02Z,True,rack_____rack_____1272_____389020040,"The PR, as it stands, is feature complete for WebSocket and SSE. Sure, extending the PR to include pub-sub would be a problem for servers that don't share state but that has nothing to do with WebSocket and SSE support proposed here.

@ioquatix, Slamming @boazsegev example code that is meant to demonstrate not only the proposed Rack additions but also other features of Iodine and then claiming that example invalidates this PR is ludicrous. The PR offers a clean and simple way for even new developers to take advantage of WebSockets and SSE. Some of the comments such as those from @tenderlove were constructive and genuinely aimed toward enhancing the current Rack spec with the addition of WebSockets and SSE. You have fought tooth and nail against it from the start with an extreme passion to block any variation on the PR. I don't understand why you feel so threatened by this PR. Can you explain why you have such strong feelings about offering Rack users an simple to use approach to WebSocket and SSE?",True,True,128,932194.1166666667
rack_____rack_____1272,2018-05-15T02:27:52Z,True,rack_____rack_____1272_____389022780,"Okay, this conversation clearly needs to go back on ice for a bit.

I don't agree that pub/sub is within scope, but if we can't do each other the courtesy of assuming genuine opinions and positive/constructive intentions, then we're not going to get anywhere useful.",True,True,128,932194.1166666667
styleguidist_____react-styleguidist_____985,2018-05-15T03:47:23Z,True,styleguidist_____react-styleguidist_____985_____188006726,Inspired by https://github.com/SpareBank1/designsystem/blob/master/styleguide.config.js#L93,True,True,9,1663.0333333333333
styleguidist_____react-styleguidist_____985,2018-05-15T06:43:57Z,True,styleguidist_____react-styleguidist_____985_____188179165,This sentence doesn't say anything without an example.,True,True,9,1663.0333333333333
styleguidist_____react-styleguidist_____985,2018-05-15T06:44:49Z,True,styleguidist_____react-styleguidist_____985_____188179335,And the main question: why would you want to use it in a style guide?,True,True,9,1663.0333333333333
styleguidist_____react-styleguidist_____985,2018-05-15T08:35:06Z,True,styleguidist_____react-styleguidist_____985_____389088368,"For example, if I want to load css for font-awesome from node_modules.
Putting it in require section as described does not work as it is not automatically loaded on every page.
https://github.com/styleguidist/react-styleguidist/issues/591
and the other example I referenced have their use cases for this as well, ie:
https://github.com/SpareBank1/designsystem/blob/master/styleguide.config.js#L93",True,True,9,1663.0333333333333
styleguidist_____react-styleguidist_____985,2018-05-15T16:33:36Z,True,styleguidist_____react-styleguidist_____985_____389231288,"ie this is basically adding <link rel=""stylesheet"" href=""path/to/local/style.css"" /> as adding the plugin will include the css as part of the build.  ",True,True,9,1663.0333333333333
Homebrew/brew/3720,2018-05-15T16:39:18Z,False,5afb5a3c6480fd835a05cbd9,"Hi @MikeMcQuaid, apologies for the delayed response. My school term is starting to pick up, so my responses will be much more infrequent. Thank you for your patience and understanding.

> @AndrewMcBurney I think that's an API smell; generally it's not expected that .new blocks will return anything other than the instance. Instead perhaps you should add a class variable that will allow returning the last value in the block rather than relying on break to do so.

I'll make the changes :+1:

> @AndrewMcBurney Any thoughts on this? Can you explain the current way the cache is updated/invalidated?

Currently, the way the cache is updated/invalidated is via a naive approach. The only way to update the cache is to run the `brew linkage` command without the `--cached` option when the `HOMEBREW_LINKAGE_CACHE` environment variable is not set.

You mentioned earlier that the `formula_installer` could update the cache; I'll take a look into the class to see where best to update it.",True,False,110,173514.51666666666
styleguidist_____react-styleguidist_____985,2018-05-15T17:04:20Z,True,styleguidist_____react-styleguidist_____985_____389241080,"# [Codecov](https://codecov.io/gh/styleguidist/react-styleguidist/pull/985?src=pr&el=h1) Report
> Merging [#985](https://codecov.io/gh/styleguidist/react-styleguidist/pull/985?src=pr&el=desc) into [master](https://codecov.io/gh/styleguidist/react-styleguidist/commit/7f5137e2484eb861371ede7e6e8f718e97ff9d06?src=pr&el=desc) will **increase** coverage by `<.01%`.
> The diff coverage is `n/a`.

| [Impacted Files](https://codecov.io/gh/styleguidist/react-styleguidist/pull/985?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [src/rsg-components/Slot/Slot.js](https://codecov.io/gh/styleguidist/react-styleguidist/pull/985/diff?src=pr&el=tree#diff-c3JjL3JzZy1jb21wb25lbnRzL1Nsb3QvU2xvdC5qcw==) | `95.45% <0%> (+0.21%)` | :arrow_up: |
",True,True,9,1663.0333333333333
Homebrew/brew/3720,2018-05-15T17:21:44Z,False,5afb5b896480fd81720ab376,"Hi @MikeMcQuaid,

I made the changes you suggested. I just had one question: do you like the current implementation of `undeclared_runtime_dependencies` using the return value from the `DatabaseCache.new` block, or would you prefer an implementation such as this:

```ruby
  def undeclared_runtime_dependencies
    keg = opt_or_installed_prefix_keg
    return [] unless keg

    undeclared_deps = []

    DatabaseCache.new(:linkage) do |database_cache|
      use_cache = !ENV[""HOMEBREW_LINKAGE_CACHE""].nil?
      linkage_checker = LinkageChecker.new(keg, database_cache, use_cache, self)
      undeclared_deps = linkage_checker.undeclared_deps.map { |n| Dependency.new(n) }
    end

    undeclared_deps
  end
```",True,False,110,173514.51666666666
getgrav/grav-plugin-admin/1405,2018-05-15T17:35:10Z,False,5afb43b36480fd809148afa9,Admin now uses standard login events.,True,False,3,61997.433333333334
rack_____rack_____1272,2018-05-15T19:27:55Z,True,rack_____rack_____1272_____389285061,"TBH I'm kind of worried about committing to an API without a real world app using it.  The reason is because I want to make sure we don't forget anything we need to implement actual apps.  If we could get Action Cable running on top of a server that used this API, then I'd be satisfied to merge.",True,True,128,932194.1166666667
midrange/rogue/28,2018-05-15T22:04:29Z,False,5afb6ac06480fd84ebc751b9,"@lacker ok this is merged and passes tests

nest invader, fixes #13",True,False,23,1922.9
styleguidist_____react-styleguidist_____985,2018-05-16T07:16:45Z,True,styleguidist_____react-styleguidist_____985_____389419484,"CSS extraction an CSS loading are completely independent things, you don't need to extract CSS to a file to do anything, you've described.",True,True,9,1663.0333333333333
styleguidist_____react-styleguidist_____985,2018-05-16T07:28:16Z,True,styleguidist_____react-styleguidist_____985_____389422410,"@sapegin you'll need to include the CSS in the webpack build in order to load them.  Thats what the MiniCssExtractPlugin does, it takes CSS from a local directory and puts it as part of the build.  Just putting it in require config doesn't do anything, nor does adding an entry to template as it is not part of the build.

In fact I've looked through all the issues opened by other people, every one of them you just tell them to look at the template section for the docs.  It works if the CSS is a url, but it doesn't work if it is a local file.  ",True,True,9,1663.0333333333333
styleguidist_____react-styleguidist_____985,2018-05-16T07:30:25Z,True,styleguidist_____react-styleguidist_____985_____389422909,I advice you to read what MiniCssExtractPlugin actually does and how CSS imports work in webpack instead of complaining here.,True,True,9,1663.0333333333333
algorithm-archivists_____algorithm-archive_____114,2018-05-16T14:23:05Z,True,algorithm-archivists_____algorithm-archive_____114_____188450604,"I added `DFT` to FFT, `DFS_recursive_postorder` and `DFS_recursive_inorder_btree` to tree traversal all in C++.",True,True,46,89673.71666666666
algorithm-archivists_____algorithm-archive_____114,2018-05-16T15:11:41Z,True,algorithm-archivists_____algorithm-archive_____114_____389554950,"I don't like this change. It looks very C-y, and there is bit operations on `int`, which doesn't seem right.",True,True,46,89673.71666666666
algorithm-archivists_____algorithm-archive_____114,2018-05-16T15:45:03Z,True,algorithm-archivists_____algorithm-archive_____114_____389567304,"We need to add `dft` in `fft.cpp`, `dfs_recursive_postorder` and `dfs_recursive_inorder_btree` in `tree_example.cpp`.",True,True,46,89673.71666666666
algorithm-archivists_____algorithm-archive_____114,2018-05-16T15:48:47Z,True,algorithm-archivists_____algorithm-archive_____114_____389568687,I'm going to add a PR to your PR. Thanks for building the base!,True,True,46,89673.71666666666
midrange/rogue/28,2018-05-17T00:05:16Z,False,5afcc7a26480fd7eb9a21ef4,@lacker you wanna review this or...?,True,False,23,1922.9
midrange/rogue/28,2018-05-17T03:42:38Z,False,5afcfdc06480fd7d5296220c,ah nice,True,False,23,1922.9
midrange/rogue/28,2018-05-17T03:44:00Z,False,5afcfdc06480fd7de956aa75,"This surprised me at first to consider a token a card, but i suppose it is reasonable",True,False,23,1922.9
midrange/rogue/28,2018-05-17T03:46:05Z,False,5afcfdbf6480fd810a675941,I think this should be passing just `a.Card.Kicker.CastingCost` rather than with the `.Colorless` on the end? If it is the one with `.Colorless` then the format should be a `%d`,True,False,23,1922.9
midrange/rogue/28,2018-05-17T03:46:22Z,False,5afcfdc06480fd7e5ad912d5,"same here, either drop `.Colorless` or switch to `%d`",True,False,23,1922.9
midrange/rogue/28,2018-05-17T03:46:58Z,False,5afcfdbf6480fd87a15cd93b,an odd failure message since it is in `playManaAbilityAction` not in `playInstant`,True,False,23,1922.9
midrange/rogue/28,2018-05-17T03:47:07Z,False,5afcfdc06480fd86f1861f0e,yay a test,True,False,23,1922.9
midrange/rogue/28,2018-05-17T03:53:38Z,False,5afcfdc06480fd83adadad8b,"Can this be something other than an `Action`? Right now, actions are just things done by players of the game. We could do things like check in TakeAction that the action being taken is actually one of the valid actions. This seems like it should be something more like an Effect, or a triggered ability more specifically. This is also another dependency cycle that makes encoding tricky.",True,False,23,1922.9
midrange/rogue/28,2018-05-17T03:56:30Z,False,5afcfdc06480fd7f139b7a2f,i feel uneasy about TakeAction being called from the depths of Permanent logic,True,False,23,1922.9
midrange/rogue/28,2018-05-17T05:32:42Z,False,5afd150f6480fd875e032651,"I think if you nest it like this, you wont be able to call NewCard(EldraziSpawnToken). Can you just have EldraziSpawnToken be its own card at the top level of this switch?",True,False,23,1922.9
midrange/rogue/28,2018-05-17T05:34:00Z,False,5afd15106480fd7f3eb8cd77,effects can have kickers that are other effects? that doesn't seem right,True,False,23,1922.9
midrange/rogue/28,2018-05-17T05:34:49Z,False,5afd150f6480fd7f6937a68f,this sometimes points to a spawn token so that is why you want normal functions of cards like `NewCard` to work for spawn tokens,True,False,23,1922.9
midrange/rogue/28,2018-05-17T05:35:41Z,False,5afd150f6480fd7dbc3988d3,this comment doesnt seem comprehensible,True,False,23,1922.9
midrange/rogue/28,2018-05-17T05:36:21Z,False,5afd150f6480fd8514c3b152,"these fields don't seem to make sense, why does an effect have a `With`, or a `WithKicker`, etc",True,False,23,1922.9
midrange/rogue/28,2018-05-17T05:43:02Z,False,5afd166c6480fd7d3faccfd0,"Yeah, because when you make an Effect from a Card+Action, you do Effect.Kicker = Card.Kicker.

So the Effect might both have some Plus1Plus1Counters in itself, or in its child Kicker Effect.",True,False,23,1922.9
midrange/rogue/28,2018-05-17T05:47:09Z,False,5afd17656480fd86f186269d,"1) You actually don't need the WithKicker or WithPhyrexian, I'll get rid of those.

2) I think you do need the With - you need to know what permanent originated an Effect because some Effects depend on the state of the Permanent on resolution.",True,False,23,1922.9
midrange/rogue/28,2018-05-17T05:48:07Z,False,5afd179a6480fd7de956b1d8,"so the rule is when you resolve an Effect, you should also resolve any effect under Kicker? or do you re-check whether the kicker was paid? it seems like the checking of kicker should happen at casting time, not like every time you observe that a creature has a rancor on it. in magic it doesn't seem like permanents remember whether they were kicked.",True,False,23,1922.9
midrange/rogue/28,2018-05-17T05:49:18Z,False,5afd17e76480fd7eb9a24e21,"""With"" isn't what permanent originated the effect, though. Is it? Why would that be called ""with"". I thought ""with"" was just for attacking and blocking.",True,False,23,1922.9
midrange/rogue/28,2018-05-17T05:52:49Z,False,5afd18b46480fd81c9f17560,"I've now set it up so Kicker only exists on an Effect if it's kicked.

So when you resolve an Effect, if it has a Kicker prop, you do that on top of the normal Effect.",True,False,23,1922.9
midrange/rogue/28,2018-05-17T05:54:23Z,False,5afd19126480fd81720c3077,"Oh, I started using it for mana actions too, like saccing the eldrazi token. I can change that.",True,False,23,1922.9
midrange/rogue/28,2018-05-17T06:01:42Z,False,5afd1ad46480fd835a06fc30,"""With"" is probably not a good name of that field on the action eh. Well, as long as Effect is commented so that I could just read this file and figure out what the fields mean, it is decent.",True,False,23,1922.9
midrange/rogue/28,2018-05-17T06:07:23Z,False,5afd1c206480fd7dbc398b6f,LGTM,True,False,23,1922.9
Homebrew/brew/3720,2018-05-17T09:44:05Z,False,5afd4eef6480fd830147041d,"> My school term is starting to pick up, so my responses will be much more infrequent. Thank you for your patience and understanding.

@AndrewMcBurney No worries! Thanks for your patience too; we're almost there!

> I made the changes you suggested. I just had one question: do you like the current implementation of undeclared_runtime_dependencies using the return value from the DatabaseCache.new block, or would you prefer an implementation such as this:

I think I'd propose another approach where you never use `DatabaseCache.new(:linkage)` if you're expecting a return value. I'd suggest instead something like

```ruby
undeclared_deps  = DatabaseCache.use(:linkage) do |database_cache|
  ...
end
```

Where `.use` could be something like:

```ruby
def self.use(type)
  return_value = nil
    DatabaseCache.new(type) do |database_cache|
      return_value = yield 
    end
  end
  return_value
end
```

@reitermarkus any thoughts on the best approach here?",True,False,110,173514.51666666666
Homebrew/brew/3720,2018-05-17T09:46:20Z,False,5afd4f776480fd7de956d39c,Will this update/populate the cache even if it's empty? Would be ideal if this is a no-op if the cache is empty.,True,False,110,173514.51666666666
Homebrew/brew/3720,2018-05-17T16:40:55Z,False,5afdb0a56480fd7eb9a29d82,"Yeah, currently this updates the cache even if it's empty. I'll update it so it's a no-op if the cache is empty.",True,False,110,173514.51666666666
Homebrew/brew/3720,2018-05-17T18:36:30Z,False,5afdcbba6480fd86f1868291,"@AndrewMcBurney Presumably this doesn't create the file on disk if `database_cache.empty?`, right? This line is a bit on the long side now; may want to use the `unless ... end` form or `break if database_cache.empty?` on the line above.",True,False,110,173514.51666666666
Homebrew/brew/3720,2018-05-17T20:44:28Z,False,5afde9b36480fd86941f9571,"No, it will create an empty database cache if the file does not exist on [this line](https://github.com/AndrewMcBurney/brew/blob/cache-optimization/Library/Homebrew/cache_store.rb#L24) when `DatabaseCache.new(:linkage)` is called.",True,False,110,173514.51666666666
Homebrew/brew/3720,2018-05-18T08:39:02Z,False,5afe91326480fd7e3266117a,@reitermarkus Any thoughts on this approach vs. another?,True,False,110,173514.51666666666
Homebrew/brew/3720,2018-05-18T08:39:50Z,False,5afe91806480fd8437beb5f0,You could consider making this method `private` now?,True,False,110,173514.51666666666
Homebrew/brew/3720,2018-05-18T08:40:35Z,False,5afe918e6480fd8726715b6d,"@AndrewMcBurney Gotcha. I think it would be good if e.g.

```ruby
   DatabaseCache.new(:linkage) do |database_cache|
      use_cache = !ENV[""HOMEBREW_LINKAGE_CACHE""].nil?
      checker = LinkageChecker.new(keg, database_cache, use_cache, formula)
```

could be refactored so the cache isn't created unless `ENV[""HOMEBREW_LINKAGE_CACHE""]` (or the equivalent command-line argument) is specified. It seems strange to create a cache file on disk but not populate or access it otherwise. An option for this may be lazy cache creation where the file is only created the first time you attempt to write to it.",True,False,110,173514.51666666666
nestjs_____typeorm_____27,2018-05-18T16:39:47Z,True,nestjs_____typeorm_____27_____189078366,"Hey!

I saw Pull request #23 and I had exactly the same use case.
I have therefore implement a new decorator, as proposed in the above PR.

## Example usage

```ts
import { Injectable } from '@nestjs/common';
import { InjectedEventSubscriber } from '@nestjs/typeorm';

@Injectable('default')
@InjectedEventSubscriber()
export class CompanySubscriber implements EntitySubscriberInterface<Company> {
  constructor(
    private companyService: CompanyService,
    @Inject('SomethingElse') something: Else,
  ) {
  }
...
  afterUpdate(event: UpdateEvent<Company>) {
    console.log(`BEFORE POST INSERTED: `, this.companyService.doSomethingElse(event.entity));
  }
}
```

And the Subscriber needs to be registered as a provider in NestJS
```
 providers: [
    ...
     CompanySubscriber,
    CompanyService,
 ....
  ],
```


## How it works

The class will fake the constructor with a new one that requires the ""Connection"" (By default the default connection is passed, unless specified as a parameter to the decorator).

To do this, the metadata of the ""fake constructor"" are set with the metadata of the normal constructor + the metadata required to inject the connection.

When the subscriber is created, the subscriber is added to the subscribers from the connection.


Thanks",True,True,25,905236.35
algorithm-archivists_____algorithm-archive_____114,2018-05-19T23:09:34Z,True,algorithm-archivists_____algorithm-archive_____114_____390438550,@Gathros poke?,True,True,46,89673.71666666666
algorithm-archivists_____algorithm-archive_____114,2018-05-20T07:17:08Z,True,algorithm-archivists_____algorithm-archive_____114_____390462783,"I'd argue that the use of iterators and `std::accumulate`  actually reduces the readability of the code. It would be fine if we wanted to make a standard library implementation but it's not very suitable for an educational resource. Also, having to capture mutable variables in an `accumulate` is a pretty good indication you shouldn't be using it in my opinion. I think this version is a lot more readable:

```cpp
std::vector<c64> discrete(const std::vector<c64>& vec) {
    std::vector<c64> result(vec.size());

    auto size = vec.size();
    for (size_t i = 0; i < size; ++i) {
        for (size_t j =0 ; j < size; ++j) {
            result[i] += vec[j] * std::exp(c64(0, -2.0 * pi<double>() * j * i / size));
        }
    }

    return result;
}
```




",True,True,46,89673.71666666666
algorithm-archivists_____algorithm-archive_____114,2018-05-20T07:21:39Z,True,algorithm-archivists_____algorithm-archive_____114_____390462954,"Also, I'll say it again: `std::valarray` is literally made for vector math like this, so if we want to be really gung-ho about using standard library features everywhere then using them would make the code a lot shorter and more readable",True,True,46,89673.71666666666
algorithm-archivists_____algorithm-archive_____114,2018-05-20T07:24:57Z,True,algorithm-archivists_____algorithm-archive_____114_____189453228,This indentation looks incorrect,True,True,46,89673.71666666666
algorithm-archivists_____algorithm-archive_____114,2018-05-20T07:26:51Z,True,algorithm-archivists_____algorithm-archive_____114_____390463185,"@Gathros I'm not sure I agree. I prefer the one with the standard algorithms, although I think some of it could be worked around better.",True,True,46,89673.71666666666
algorithm-archivists_____algorithm-archive_____114,2018-05-20T07:27:32Z,True,algorithm-archivists_____algorithm-archive_____114_____189453273,what is incorrect about it?,True,True,46,89673.71666666666
algorithm-archivists_____algorithm-archive_____114,2018-05-20T07:30:27Z,True,algorithm-archivists_____algorithm-archive_____114_____390463327,"Also, I just realized what that call to exp is doing, and that seems like a really badly worded way of doing a sine or cosine",True,True,46,89673.71666666666
algorithm-archivists_____algorithm-archive_____114,2018-05-20T07:35:01Z,True,algorithm-archivists_____algorithm-archive_____114_____390463541,It's @Gustorn not me @ubsan.,True,True,46,89673.71666666666
algorithm-archivists_____algorithm-archive_____114,2018-05-20T07:37:11Z,True,algorithm-archivists_____algorithm-archive_____114_____189453436,"Oh sorry, I actually misread that line",True,True,46,89673.71666666666
algorithm-archivists_____algorithm-archive_____114,2018-05-20T07:37:19Z,True,algorithm-archivists_____algorithm-archive_____114_____390463630,Sorry,True,True,46,89673.71666666666
algorithm-archivists_____algorithm-archive_____114,2018-05-20T07:38:24Z,True,algorithm-archivists_____algorithm-archive_____114_____189453452,"As I said in another comment, I'd still argue for `valarray` here, it makes the implementation a lot more readable:

```cpp
void fft(std::valarray<c64>& v) {
    auto size = v.size();
    if (size < 2) {
        return;
    }

    auto even = std::valarray<c64>(v[std::slice(0, size / 2, 2)]);
    auto odd  = std::valarray<c64>(v[std::slice(1, size / 2, 2)]);

    fft(even);
    fft(odd);

    for (size_t k = 0; k < size / 2; k++) {
        auto w = std::polar(1.0, -2.0 * pi<double> * k / size) * odd[k];
        v[k] = even[k] + w;
        v[k + size / 2] = even[k] - w;
    }
}
```",True,True,46,89673.71666666666
algorithm-archivists_____algorithm-archive_____114,2018-05-20T07:44:57Z,True,algorithm-archivists_____algorithm-archive_____114_____390463944,"I read modern C++ on a regular basis and I needed to take a second look at that `generate/aggregate` combo to realize what it's doing. `aggregate` is not the algorithm to use when you need external state. Not only does it make it much harder to grasp what the algorithm is actually doing, it also ruins thread safety. With `range-v3` we could write this nicely but with the existing STL algorithms? Not so much.",True,True,46,89673.71666666666
algorithm-archivists_____algorithm-archive_____114,2018-05-20T07:54:13Z,True,algorithm-archivists_____algorithm-archive_____114_____390464296,"@Gustorn I have figured out how to do it nicely, one sec",True,True,46,89673.71666666666
algorithm-archivists_____algorithm-archive_____114,2018-05-20T07:56:20Z,True,algorithm-archivists_____algorithm-archive_____114_____390464395,"@Gustorn How's this?

```cpp
template <typename F>
auto sum(std::size_t const start, std::size_t const end, F f) {
  using return_type = decltype(f(start));
  auto ret = return_type(0);

  for (auto i = start; i < end; ++i) {
    ret += f(i);
  }

  return ret;
}

template <typename It, typename F>
It indexed_generate(
    It first, std::size_t const start, std::size_t const end, F f) {
  auto it = first;
  for (auto i = start; i < end; ++i, ++it) {
    *it = f(i);
  }
  return it;
}

template <typename Iter>
void discrete(Iter first, Iter last) {
  auto size = last - first;
  auto temp = std::vector<c64>();

  indexed_generate(std::back_inserter(temp), 0, size, [&](auto i) {
    return sum(0, size, [&](auto k) {
      // NOTE:
      // this is equivalent to cos(-2 pi i k / size) + i sin(-2 pi i k / size)
      return first[k] * std::exp(c64(0, -2.0 * pi<double>() * i * k / size));
    });
  });

  std::copy(begin(temp), end(temp), first);
}
```",True,True,46,89673.71666666666
algorithm-archivists_____algorithm-archive_____114,2018-05-20T08:19:38Z,True,algorithm-archivists_____algorithm-archive_____114_____390465446,"And a second attempt:

```cpp
template <typename Iter>
void discrete(Iter first, Iter last) {
  using namespace std::literals;

  auto const original = std::vector<c64>(first, last);
  auto const size = original.size();

  auto const i2pi = -2.0i * pi<double>();

  for (std::size_t i = 0; i < size; ++i) {
    first[i] = sum(0, size, [&](auto k) {
      return original[k] * std::exp(i2pi * double(i * k) / double(size));
    });
  }
}
```",True,True,46,89673.71666666666
algorithm-archivists_____algorithm-archive_____114,2018-05-20T08:44:28Z,True,algorithm-archivists_____algorithm-archive_____114_____390466622,"Yeah, I like the last version a lot more. You could also do something like:

```cpp
template <typename Iter, typename F>
auto sum(Iter first, Iter last, const F& fn) {
    using namespace std::literals;
    return std::accumulate(first, last, std::make_pair(0, 0i), [&fn](auto acc, const auto& x) {
        return std::make_pair(acc.first + 1, acc.second + fn(acc.first, x));
    }).second;
}

template <typename Iter>
void discrete(Iter first, Iter last) {
  using namespace std::literals;

  auto const original = std::vector<c64>(first, last);
  auto const size = original.size();

  for (std::size_t i = 0; i < size; ++i) {
    first[i] = sum(original.begin(), original.end(), [i, size](auto k, auto value) {
      return value * std::exp(-2.0i * pi<double>() * double(i * k) / double(size));
    });
  }
}
```",True,True,46,89673.71666666666
algorithm-archivists_____algorithm-archive_____114,2018-05-20T16:33:14Z,True,algorithm-archivists_____algorithm-archive_____114_____390494397,"Alright, then we can change over to

```cpp
template <typename It, typename F>
auto sum(It const first, It const last, F f) {
  using return_type = decltype(f(0, *first));
  auto ret = return_type(0);

  std::size_t i = 0;
  for (auto it = first; it < last; ++it, ++i) {
    ret += f(i, *it);
  }

  return ret;
}

template <typename Iter>
void discrete(Iter const first, Iter const last) {
  using namespace std::literals;

  auto const original = std::vector<c64>(first, last);
  auto const size = original.size();

  auto const i2pi = -2.0i * pi<double>();

  for (std::size_t i = 0; i < size; ++i) {
  for (std::size_t i = 0; i < size; ++i) {
    first[i] =
        sum(begin(original), end(original), [&](auto const k, auto const el) {
          return el * std::exp(i2pi * double(i * k) / double(size));
        });
  }

  }
}
```

@Gathros 

@Gustorn I still believe that we should be teaching iterators - the great thing about them is that we can switch out `std::array<c64, 64>` for `std::valarray<c64>` without changing any other code _shrug_",True,True,46,89673.71666666666
algorithm-archivists_____algorithm-archive_____114,2018-05-20T17:00:28Z,True,algorithm-archivists_____algorithm-archive_____114_____390496110,@ubsan Changed it.,True,True,46,89673.71666666666
algorithm-archivists_____algorithm-archive_____114,2018-05-20T17:03:48Z,True,algorithm-archivists_____algorithm-archive_____114_____390496306,"Sorry, I only checked if it compiles, not if it works (on godbolt, didn't have a C++ compiler handy). The point I was making with `valarray` is that you can write the algorithm in an easier and more understandable manner. Yes, the generic iterator version will work but the `valarray` one is nicer. 

As for iterators: I'm not the biggest fan of them in general. If we want to be generic, I'd rather be generic over the container and not the iterators. That would still allow you to use range-based for loops and standard algorithms (and that's kind of what the standard is moving towards with ranges anyway). ",True,True,46,89673.71666666666
algorithm-archivists_____algorithm-archive_____114,2018-05-20T17:39:21Z,True,algorithm-archivists_____algorithm-archive_____114_____189465502,"It seems like that's more of an issue with the current implementation; we could do

```cpp
template <typename Iter>
void recursive(Iter first, Iter last) {
  std::size_t size = last - first;
  if (size < 2) {
    return;
  } else if (size % 2 != 0) {
    std::cerr << ""The range must be a power of two size\n"";
    std::abort();
  }

  auto odds = std::vector<c64>(size / 2);
  auto evens = std::vector<c64>(size / 2);

  for (std::size_t i = 0; i < size / 2; ++i) {
    odds[i] = first[i * 2 + 1];
    evens[i] = first[i * 2];
  }

  // recurse the splits and butterflies in each half of the range
  recursive(begin(odds), end(odds));
  recursive(begin(evens), end(evens));

  // now combine each of those halves with the butterflies
  for (std::size_t k = 0; k < size / 2; ++k) {
    auto w = std::polar(1.0, -2.0 * pi<double>() * k / size) * odds[k];
    first[k] = evens[k] + w;
    first[k + size / 2] = evens[k] - w;
  }
}
```",True,True,46,89673.71666666666
rust-lang_____rfcs_____2426,2018-05-20T18:58:04Z,True,rust-lang_____rfcs_____2426_____390503383,"@rfcbot fcp postpone

[""The Rust team is laser focused on the 2018 Edition right now""](https://internals.rust-lang.org/t/pre-rfc-flexible-try-fn/7564/88?u=scottmcm), so with https://github.com/rust-lang/rfcs/pull/2441 covering the urgent-for-the-edition part, I propose we set aside any further discussion until after the [current roadmap](https://blog.rust-lang.org/2018/03/12/roadmap.html).",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-20T18:58:05Z,True,rust-lang_____rfcs_____2426_____390503385,"Team member @scottmcm has proposed to postpone this. The next step is review by the rest of the tagged teams:

* [ ] @aturon
* [ ] @cramertj
* [ ] @eddyb
* [ ] @joshtriplett
* [ ] @nikomatsakis
* [ ] @nrc
* [ ] @pnkfelix
* [x] @scottmcm
* [ ] @withoutboats

No concerns currently listed.

Once a majority of reviewers approve (and none object), this will enter its final comment period. If you spot a major issue that hasn't been raised at any point in this process, please speak up!

See [this document](https://github.com/anp/rfcbot-rs/blob/master/README.md) for info about what commands tagged team members can give me.",True,True,196,33091.05
w3c/vc-data-model/179,2018-05-20T20:21:08Z,False,5b01d8bb6480fd7dbc3b2c63,`roles` => `role`,True,False,36,15469.966666666667
w3c/vc-data-model/179,2018-05-20T20:21:22Z,False,5b01d8c86480fd7d5297ce31,`roles` => `role`,True,False,36,15469.966666666667
w3c/vc-data-model/179,2018-05-20T20:34:12Z,False,5b01dbc76480fd7f3eba7023,"None of these role definitions seem to be ... definitive. Rather, they seem to describe one thing that is happening when the role is being played by an entity (i.e. ""a role where such and such is going on"" ... but what else? anything? is ""such and such"" about the role or does it ""such and such"" just always happen to coincide with when the role is being performed?).

I think this could be improved by changing:

""A role where an entity asserts claims...""

To:

""A role an entity may perform by asserting claims...""

This makes it clearer that when an entity is ""asserting claims..."", it is performing the role of ""issuer"".",True,False,36,15469.966666666667
algorithm-archivists_____algorithm-archive_____114,2018-05-20T21:43:57Z,True,algorithm-archivists_____algorithm-archive_____114_____189471443,"I think this is even nicer; moving out the split into it's own function, to make it really clear what's happening:

```cpp
template <typename In, typename Out0, typename Out1>
void split(In initial, In const last, Out0 out0, Out1 out1) {
  if ((last - initial) % 2 != 0) {
    std::cerr << ""The range must be a power of two size\n"";
    std::abort();
  }

  while (initial != last) {
    *out0 = *initial;
    ++out0;
    ++initial;
    *out1 = *initial;
    ++out1;
    ++initial;
  }
}

// `recursive` does the cooley-tukey algorithm, recursively
template <typename Iter>
void recursive(Iter const first, Iter const last) {
  std::size_t size = last - first;
  if (size < 2) {
    return;
  }

  auto evens = std::vector<c64>(size / 2);
  auto odds = std::vector<c64>(size / 2);
  split(first, last, begin(evens), begin(odds));

  // recurse the splits and butterflies in each half of the range
  recursive(begin(odds), end(odds));
  recursive(begin(evens), end(evens));

  // now combine each of those halves with the butterflies
  for (std::size_t k = 0; k < size / 2; ++k) {
    auto w = std::polar(1.0, -2.0 * pi<double>() * k / size) * odds[k];
    first[k] = evens[k] + w;
    first[k + size / 2] = evens[k] - w;
  }
}
```",True,True,46,89673.71666666666
w3c/vc-data-model/179,2018-05-21T12:37:26Z,False,5b02bd926480fd7e8ad647e3,Fixed.,True,False,36,15469.966666666667
w3c/vc-data-model/179,2018-05-21T12:45:59Z,False,5b02bf8c6480fd8437c00453,Changed all the definitions.,True,False,36,15469.966666666667
algorithm-archivists_____algorithm-archive_____114,2018-05-21T13:43:57Z,True,algorithm-archivists_____algorithm-archive_____114_____390657615,"I'll try to make one last argument against the iterator/algorithm solution. First, let's compare the now final version with my proposed one:

```cpp
template <typename It, typename F>
auto sum(It const first, It const last, F f) {
  using return_type = decltype(f(0, *first));
  auto ret = return_type(0);

  std::size_t i = 0;
  for (auto it = first; it < last; ++it, ++i) {
    ret += f(i, *it);
  }

  return ret;
}

template <typename Iter>
void discrete(Iter const first, Iter const last) {
  using namespace std::literals;

  auto const original = std::vector<c64>(first, last);
  auto const size = original.size();

  auto const i2pi = -2.0i * pi<double>();
  for (std::size_t i = 0; i < size; ++i) {
    first[i] =
        sum(begin(original), end(original), [&](auto const k, auto const el) {
          return el * std::exp(i2pi * double(i * k) / double(size));
        });
  }

  }
}
```

vs

```cpp
std::vector<c64> discrete(const std::vector<c64>& vec) {
    std::vector<c64> result(vec.size());

    auto size = vec.size();
    for (size_t i = 0; i < size; ++i) {
        for (size_t j =0 ; j < size; ++j) {
            result[i] += vec[j] * std::exp(c64(0, -2.0 * pi<double>() * j * i / size));
        }
    }

    return result;
}
```

I don't know about you, but I find the latter version immensely more readable. I understand the notion of avoiding raw loops but in this case there's one line of self-contained math code. There are some problems that benefit from abstractions, this isn't one of them. The proposed implementation also doesn't really give that much genericity over my proposed solution (it requires a random access iterator). If we really want to support multiple containers we could just do:

```cpp
template <typename T>
T discrete(const std::vector<c64>& vec) {
    T result(vec.size());

    auto size = vec.size();
    for (size_t i = 0; i < size; ++i) {
        for (size_t j =0 ; j < size; ++j) {
            result[i] += vec[j] * std::exp(c64(0, -2.0 * pi<double>() * j * i / size));
        }
    }

    return result;
}
```

The problem with always going with the ""modern C++"" solution without trying to evaluate to potential benefits is that it introduces a *lot* of noise, most of which is completely unnecessary for the algorithm at hand.

Another important thing is that this book is supposed to teach algorithms, **not** C++. That being said, I still think we should write clean, readable and performant C++ code but we shouldn't necessarily strive for standard library-like implementations. Most people will never need the genericity it provides and it obfuscates the important parts of the algorithms. Also, chances are that people who *do* need that level of genericity can easily adapt the container version to suit their needs. The same cannot be said for beginners who're reading about an algorithm for the first time.",True,True,46,89673.71666666666
Homebrew/brew/3720,2018-05-21T13:50:10Z,False,5b02ce9c6480fd830148e8c1,@AndrewMcBurney I'm seeing `/Users/mike/Library/Caches/Homebrew/linkage.db.db` (note the filename) being created every time regardless of whether I pass `--cached` or not (and the file size is the same whether I pass `--cached` or not) 😭 ,True,False,110,173514.51666666666
rust-lang_____rfcs_____2444,2018-05-21T13:52:11Z,True,rust-lang_____rfcs_____2444_____189385244,[Rendered](https://github.com/phaazon/rfcs/blob/undo-universal-impl-trait/text/0000-undo-universal-impl-trait.md),True,True,59,199.43333333333334
algorithm-archivists_____algorithm-archive_____114,2018-05-21T13:59:36Z,True,algorithm-archivists_____algorithm-archive_____114_____189597315,"I disagree with the separate `split` version being nicer, see my comment in the main thread. We're not really writing a standard library grade implementation and `split` just obfuscates a very significant step in the algorithm. I do like the proposed `odds`/`evens` version however, although I would still go with the iterator-free version with a proper return value:

```cpp
void fft_calculate_recursive(std::vector<c64>& values) {
    std::size_t size = values.size();
    if (size < 2) {
        return;
    } else if (size % 2 != 0) {
        std::cerr << ""The range must be a power of two size\n"";
        std::abort();
    }

    auto odds = std::vector<c64>(size / 2);
    auto evens = std::vector<c64>(size / 2);

    for (std::size_t i = 0; i < size / 2; ++i) {
        odds[i] = values[i * 2 + 1];
        evens[i] = values[i * 2];
    }

    // recurse the splits and butterflies in each half of the range
    fft_calculate_recursive(odds);
    fft_calculate_recursive(evens);

    // now combine each of those halves with the butterflies
    for (std::size_t k = 0; k < size / 2; ++k) {
        auto w = std::polar(1.0, -2.0 * pi<double>() * k / size) * odds[k];
        values[k] = evens[k] + w;
        values[k + size / 2] = evens[k] - w;
    }
}

std::vector<c64> recursive(const std::vector<c64>& values) {
  std::vector<c64> result(values.begin(), values.end());
  fft_calculate_recursive(result);
  return result;
}
```

I think that teaching people to return actual results rather than using out parameters is way more important than any perceived genericity one gets from iterators (I'm not arguing that iterators aren't more general - I'm arguing that it isn't needed here).",True,True,46,89673.71666666666
rust-lang_____rfcs_____2444,2018-05-21T14:06:42Z,True,rust-lang_____rfcs_____2444_____390663811,Aren't universal impl trait stable since 1.26 ? This would be a breaking change.,True,True,59,199.43333333333334
rust-lang_____rfcs_____2444,2018-05-21T14:07:52Z,True,rust-lang_____rfcs_____2444_____390664208,"> Aren't universal impl trait stable since 1.26 ? This would be a breaking change.

I guess you could remove it as part of Rust 2018. That should work",True,True,59,199.43333333333334
rust-lang_____rfcs_____2444,2018-05-21T14:15:15Z,True,rust-lang_____rfcs_____2444_____390666515,I like the idea.,True,True,59,199.43333333333334
rust-lang_____rfcs_____2444,2018-05-21T14:23:43Z,True,rust-lang_____rfcs_____2444_____390669262,"> Aren't universal impl trait stable since 1.26 ? This would be a breaking change.

It would be breaking change.",True,True,59,199.43333333333334
rust-lang_____rfcs_____2444,2018-05-21T14:32:09Z,True,rust-lang_____rfcs_____2444_____390671742,"> Also, consider this function that takes an argument and add it to itself:
>
> ```rust
> fn add_self<T>(x: T) -> T where T: Add<Output = T> + Copy
> ```
>
> Now consider:
>
> ```rust
> fn add_self(x: impl Add<Output = impl Copy> + Copy)
> ```
> 
> You can see the duplication here and the overwhelming confusion that both the `impl Trait` will
resolve to the same type, even though they don’t have the same contract, which is impossible to
guess from the interface while it could. This is legal because we only talk about two contracts here
and the function will pick a type at the union (it must be `Add + Copy` and `Copy`) but you also
have that weird `Output` contract as well.
>
> Even weirder:
>
> ```rust
> fn add_self(x: impl Add<Output = impl Sized> + Copy) -> impl Sized {
>  x + x
> }
> ```

The `impl trait` versions here are better code, since they give a better specification of what the function actually does. The equivalent non impl trait version to the best impl trait version would be

```rust
fn add_self<T: Add<Output = O> + Copy, O: Sized>(x: T) -> impl Sized {
  x + x
}
```

We can make a non-impl trait version that is even better, since we can specify that the `Add::Output` type is equal to the return type of the function

```rust
fn add_self<T: Add<Output = O> + Copy, O>(x: T) -> O {
  x + x
}
```

We can mix this with impl trait for what is my preferred version

```rust
fn add_self<O>(x: impl Add<Output=O> + Copy) -> O {
  x + x
}
```

What I get from this whole line of reasoning though is that universal impl trait encourages better code. It makes you realize what types need to be equal, and what ones don't.",True,True,59,199.43333333333334
rust-lang_____rfcs_____2444,2018-05-21T14:42:56Z,True,rust-lang_____rfcs_____2444_____390674991,"I'm very much in favor of removing `impl Trait` for arg types:

1. `impl Trait` for arg types is non-orthogonal, which makes it harder to decide which way of universal quantification to use, and this question will come up **over and over and over** just because there are now 2 ways.
1. It's not actually easier to learn than generics. It looks very different from generics syntaxes that most programmers are familiar with.
1. It's easier for learning Rust to NOT conflate universal and existential quantification.
People should be aware of the difference, so that's another argument to keep only `<T: Trait>` for arg types and `impl Trait` only for existential quantification (including for other cases of existential quantification later when `impl Trait` will be allowed for const/let and existential types).
1. The argument that ""having `impl Trait` for arg types allows postponing introducing generics until later in the book"" doesn't count, because newbies will have to read the Rust book multiple times anyway. 
1. Most newbies will be familiar with another language that has similar generics syntax, e.g. C++, C#, Java, D, Scala etc.
1. There is **NO** evidence that `impl Trait` makes generics/Rust easier to learn, quite the contrary, it seems to confuse people, and:
1. From personal experience teaching Rust to complete newbies (no previous programming experience), and to some who only knew C or Python: 
Universally quantifying generics are not a difficult part of Rust (but references/lifetimes in generics). For anyone coming from any other language with universally quantifying generics they will quickly grasp the Rust syntax, but `impl Trait` is completely foreign to them.
1. The argument that `impl Trait` for arg types should be introduced to mirror `impl Trait` for return types is invalid: We Rust programmers lived without `impl Trait` for return types for years, it can be postponed until the end of the book, until newbies have understood universally quantifying generics! Newbies can write **a lot** of code before ever even needing `impl Trait` for return types.
1. There is no reason to ever choose to write `impl Trait` for arg types as a non-newbie, so why should newbies learn this way, if they have to unlearn it very quickly anyway?
1. I disagree with the [dialectical ratchet](https://github.com/rust-lang/rfcs/pull/2071#issuecomment-329026602) in this case. 
It may apply to references/lifetimes but **NOT** to `impl Trait` for arg types. 
The concepts of references and lifetimes complement each other, they are used together, not just by newbies. These are orthogonal concepts!
But having ""`impl Trait` for args"" as ""the newbie-way to express universally quantified generics"" means that newbies have to learn something that they have to unlearn later!
Which **WILL** confuse them because there are 2 overlapping ways to do the same thing and the one they learned is stricly less powerful, which demotivates them because they now have to unlearn it and learn the fully powerful way! And then they will ask themselves: ""why did i even have to do the detour through ""`impl Trait` for args"", this `<T: Trait>` syntax is more familiar and more powerful""..
1. We should not compromise orthogonality of the language to introduce a strictly less powerful syntactic sugar, **ESPECIALLY** because it will only confuse people more.
1. The Rust language contains a lot of concepts, everyone will have to read the book a couple times. Making Rust easy to **use** and easy to **remember** is at least as important as making it easy to learn, and the bottleneck for learnability is the docs, not the language design itself. The docs about generics can always be improved without affecting Rust's design, we shouldn't compromise Rust for this! 
1. What makes a language easy to use and remember is the consistency and orthogonality of the concepts, so that there aren't overlapping concepts, and so that in every situation there is one obvious way to do things. Not 2 ways, where one is strictly less powerful. (It's like having traits + OOP inheritance, makes it harder to choose which one to use.)
1. In the future, we should **really** do some A/B testing to determine which change to Rust makes it actually easier to learn, before stabilizing that change. And when features are introduced that are controversial or unorthogonal, the debate thread should be more visible and open for longer. I only noticed that `impl Trait` was also being stabilized for args when it was too late to comment on it, because it was kind of hiding in the shadow of `impl Trait` for return types.

(Sorry if this sounds like a rant, I just feel very strongly about this :)",True,True,59,199.43333333333334
rust-lang_____rfcs_____2444,2018-05-21T14:48:32Z,True,rust-lang_____rfcs_____2444_____390676708,"When you write an RFC ""Add feature X"" they upvote you.
When featurer is added and you write an RFC ""Remove feature X"" they upvote you.

You think ""Maybe I don't understand what's inside people minds""",True,True,59,199.43333333333334
rust-lang_____rfcs_____2444,2018-05-21T15:08:50Z,True,rust-lang_____rfcs_____2444_____189618755,"You've followed

> This argument is twisted along the lines of subjective opinion about learnability

With an equally subjective argument.",True,True,59,199.43333333333334
rust-lang_____rfcs_____2444,2018-05-21T15:09:09Z,True,rust-lang_____rfcs_____2444_____189618864,"People come to Rust from languages other than C++, C#, and Java. Not to mention that the entire point of `impl Trait` in argument position is that it works much closer to Java/C#. In java, you don't write void `<T extends SomeInterface> method(T arg)`, you write `void method(SomeInterface arg)`.",True,True,59,199.43333333333334
rust-lang_____rfcs_____2444,2018-05-21T15:14:25Z,True,rust-lang_____rfcs_____2444_____390684823,I completely agree with this PR. I didn't understand why we had two superfluous syntaxes for the same thing (although impl Trait is less useful as you can't turbofish it).,True,True,59,199.43333333333334
rust-lang_____rfcs_____2444,2018-05-21T15:16:11Z,True,rust-lang_____rfcs_____2444_____189621021,This is no different than lifetime elision. `fn foo(&self)` is strictly less powerful than `fn foo<'a>(&'a self)`. ,True,True,59,199.43333333333334
rust-lang_____rfcs_____2444,2018-05-21T15:16:16Z,True,rust-lang_____rfcs_____2444_____390685385,"Does anybody actually think in terms of 'caller' vs 'callee' chosen types? Are we really confusing people aware of the type theory involved for more than a few moments?

`impl Trait` is an anonymized type known to the compiler to implement `Trait`. With that definition, the distinction between 'universal' vs. 'existential' goes away and, for symmetry, it makes sense to have it available in both argument and return positions.",True,True,59,199.43333333333334
rust-lang_____rfcs_____2444,2018-05-21T15:17:41Z,True,rust-lang_____rfcs_____2444_____390685822,"What we see here is a huge failure of public review process. Simply put, universal-impl-trait escaped wide public review by coat racking onto conservative-impl-trait PR. We all waited and prepared for the latter and thus the former was not noticed before too late.",True,True,59,199.43333333333334
rust-lang_____rfcs_____2444,2018-05-21T15:17:50Z,True,rust-lang_____rfcs_____2444_____189621528,I think you meant two type variables,True,True,59,199.43333333333334
rust-lang_____rfcs_____2444,2018-05-21T15:21:12Z,True,rust-lang_____rfcs_____2444_____390686866,"@logannc Yes, we are confusing people who understand what the difference between universal impl Trait and existential impl Trait. I researched the topic extensively to understand it, and after a few hours I was still sort of uneasy as to why we had it do two perpendicular things. 

> impl Trait is an anonymized type known to the compiler to implement Trait. With that definition, the distinction between 'universal' vs. 'existential' goes away
No, this distinction does *not* go away. As a universal bound there are multiple types you can call the method on (i.e `fn x(a: impl T)`), but as an existential bound there is exactly one (i.e `fn x() -> impl T`). This makes it different for monomorphisation and for normal programming too -- you could expect `fn x() -> impl Iterator<Item=u32>` to return any given type that implements `Iterator<Item=u32>` (similar to how collect returns any type implementing `FromIterator`).",True,True,59,199.43333333333334
rust-lang_____rfcs_____2444,2018-05-21T15:22:09Z,True,rust-lang_____rfcs_____2444_____189622733,This signature is not equivalent. The only output type you could have here is `impl Copy` or `()`,True,True,59,199.43333333333334
rust-lang_____rfcs_____2444,2018-05-21T15:23:38Z,True,rust-lang_____rfcs_____2444_____189623153,"This argument is entirely subjective. I personally don't find this confusing. I'm taking ""some type that can be added and copied. The result of the addition is some type that can be copied"".

""overwhelming confusion"" feels like unnecessary rhetoric to me.",True,True,59,199.43333333333334
rust-lang_____rfcs_____2444,2018-05-21T15:25:36Z,True,rust-lang_____rfcs_____2444_____189623736,Is the number of variables being monomorphised something people frequently care about? Is it a case we need to optimize for over readability?,True,True,59,199.43333333333334
rust-lang_____rfcs_____2444,2018-05-21T15:28:18Z,True,rust-lang_____rfcs_____2444_____189624516,"This document hasn't really shown *anything* from newcomers. It's pretty hard for us to gauge how this affects newcomers at this point, since it does not appear in the book or anywhere in the documentation.

Instead this document seems to be claiming every other argument is subjective, but this one is somehow objective.

Perhaps the source of confusion is the fact that it's a brand new, undocumented feature that people are still just starting to use.",True,True,59,199.43333333333334
rust-lang_____rfcs_____2444,2018-05-21T15:31:28Z,True,rust-lang_____rfcs_____2444_____189625413,"This feels like a straw man to me. The feature is not yet documented. There is always going to be confusion until that gets remedied. There's also a lot of confusion around how reborrowing works (another undocumented feature), and that feature's been around for much longer.",True,True,59,199.43333333333334
rust-lang_____rfcs_____2444,2018-05-21T15:41:34Z,True,rust-lang_____rfcs_____2444_____189628358,How so?,True,True,59,199.43333333333334
rust-lang_____rfcs_____2444,2018-05-21T15:46:28Z,True,rust-lang_____rfcs_____2444_____189629794,"`fn foo(&self, x:  &str) -> &str` vs `fn foo<'a, 'b>(&'a self, x: &'b str) -> &'b str`. You can use the second in more places, e.g. with `'a=lifetime of some object` and `'b = 'static` (or just the lifetime of some longer lived object).",True,True,59,199.43333333333334
rust-lang_____rfcs_____2444,2018-05-21T15:52:34Z,True,rust-lang_____rfcs_____2444_____189631589,"This is fixable.
Technically, nothing prevents supporting turbofish and making arg position `impl Trait` purely a sugar for named type parameters.",True,True,59,199.43333333333334
rust-lang_____rfcs_____2444,2018-05-21T15:53:15Z,True,rust-lang_____rfcs_____2444_____189631793,"Interfaces in Java are not akin to universal quantification, because those are dynamic dispatched variables. The equivalent in Rust would be `&Trait` or `dyn Trait`.",True,True,59,199.43333333333334
rust-lang_____rfcs_____2444,2018-05-21T15:54:43Z,True,rust-lang_____rfcs_____2444_____189632199,"Yep, thanks for noticing. For the number of variables, I actually care about that, because it gives me hints about code generation and which variables I can have control over – via turbofishing, for instances. It’s way harder with `impl Trait` because you’re not allowed to turbofish anymore. :disappointed: ",True,True,59,199.43333333333334
rust-lang_____rfcs_____2444,2018-05-21T15:55:26Z,True,rust-lang_____rfcs_____2444_____390697256,"Excuse the stupid question.

How is impl Trait in argument position any different than say.. C# where a function or method takes an interface instead of a concrete type? Can someone explain that to me. Because in C# I don't feel like its confusing at all.

",True,True,59,199.43333333333334
rust-lang_____rfcs_____2444,2018-05-21T15:55:50Z,True,rust-lang_____rfcs_____2444_____189632556,"You’re right, it’s too much subjective. I’m removing it.",True,True,59,199.43333333333334
rust-lang_____rfcs_____2444,2018-05-21T15:57:53Z,True,rust-lang_____rfcs_____2444_____189633152,"I’ve linked a few links in the top of the document. Also, reactions and the fact it’s been so opinionated is somehow a hint that there’s a massive confusion, right?",True,True,59,199.43333333333334
rust-lang_____rfcs_____2444,2018-05-21T15:58:52Z,True,rust-lang_____rfcs_____2444_____390698297,I added a bunch of comments from here. Thank you all for such massive participation.,True,True,59,199.43333333333334
rust-lang_____rfcs_____2444,2018-05-21T15:59:06Z,True,rust-lang_____rfcs_____2444_____390698367,"> How is impl Trait in argument position any different than say.. C# where a function or method takes an interface instead of a concrete type?

In terms of program behavior it's equivalent to passing an interface in C#. Arguably the closer equivalent would be taking a ""trait object"", but this is something that only matters if you care about very specific performance trade offs that you don't normally need to care about.

> I'm still learning Rust but when I saw impl Trait in argument position I just equated it to doing the same thing I would do in C# with interfaces.

That was the goal behind the feature.",True,True,59,199.43333333333334
rust-lang_____rfcs_____2444,2018-05-21T15:59:20Z,True,rust-lang_____rfcs_____2444_____189633571,"It's slightly more arcane, though. Often when doing something like `fn x<A: TraitA, B: TraitB<A>>(b: B)` I write it with the thing the 'main' generic depends on first (I don't know if you are allowed to put it second, but either way it feels 'wrong' to do it in reverse). This might not be so with impl Trait turbofishing, or at any rate is more difficult to figure out.",True,True,59,199.43333333333334
rust-lang_____rfcs_____2444,2018-05-21T15:59:35Z,True,rust-lang_____rfcs_____2444_____390698492,"@xgalaxy to me, it’s different because of *dynamic dispatch* vs. static dispatch. The Rust equivalent would be:

    fn foo(x: &Debug)
    fn foo(x: dyn Debug) // with the new syntax",True,True,59,199.43333333333334
rust-lang_____rfcs_____2444,2018-05-21T16:00:56Z,True,rust-lang_____rfcs_____2444_____390698928,"Perhaps this is the wrong time and place to ask this, but what is turbofishing and why does it matter that it is impossible with `impl Trait`?",True,True,59,199.43333333333334
rust-lang_____rfcs_____2444,2018-05-21T16:01:32Z,True,rust-lang_____rfcs_____2444_____189634202,"I mean, personally I was confused as to why we had the same syntax for the same thing, but that's just me I guess. ",True,True,59,199.43333333333334
rust-lang_____rfcs_____2444,2018-05-21T16:02:45Z,True,rust-lang_____rfcs_____2444_____390699453,"@bowbahdoe turbofishing is a way to force monomorphization of a function by providing it with the type variables substituted. You already have done it for sure. See:

```
let x = (0..10).collect::<Vec<_>>(); // the syntax ::<_>() is turbofishing
```",True,True,59,199.43333333333334
rust-lang_____rfcs_____2444,2018-05-21T16:04:19Z,True,rust-lang_____rfcs_____2444_____189635079,It’s not just you. All of this is very confusing and opinionated.,True,True,59,199.43333333333334
rust-lang_____rfcs_____2444,2018-05-21T16:05:46Z,True,rust-lang_____rfcs_____2444_____189635556,"Yup, but the entire point is that you generally don't care about the tradeoffs between a monomorphised function and a dynamically dispatched one. Similarly, you generally don't need to care about the differences between returning `Box<Foo>` and `impl Foo`. This is a ""do what I mean"" feature. Similar to lifetime elision, it hides details that you usually don't care about. If you end up in a situation where you do need to care about it (`T: Add<Output = T>` is a good example), or want to care about it (you're in a situation where binary size is very important), then you learn the underlying mechanisms.",True,True,59,199.43333333333334
rust-lang_____rfcs_____2444,2018-05-21T16:06:49Z,True,rust-lang_____rfcs_____2444_____189635859,"> Also, reactions and the fact it’s been so opinionated is somehow a hint that there’s a massive confusion, right?

People having strong opinions does not mean they're confused.",True,True,59,199.43333333333334
algorithm-archivists_____algorithm-archive_____114,2018-05-21T16:11:26Z,True,algorithm-archivists_____algorithm-archive_____114_____390702095,"@Gustorn In fact, I disagree completely. The latter two are not more readable, and this book *is* attempting to teach good C++. If you don't want to read C++, *you have the choice to use any of the other languages*. We are attempting to represent the idea

![capture](https://user-images.githubusercontent.com/3479021/40317452-60005438-5cd6-11e8-84b3-10709888677c.PNG)

in code, and so we want to have the closest to that idea possible, preferably using algorithms.",True,True,46,89673.71666666666
rust-lang_____rfcs_____2444,2018-05-21T16:15:46Z,True,rust-lang_____rfcs_____2444_____390703442,"@sgrif Are you referring to `impl Trait` in general or `universal-impl-trait` in particular. We all discussed `conservative-impl-trait`, but `impl Trait` in argument position? Not so much.

And being available in the nightly means nothing. There are a lot of experimental and incomplete features that can be turned on via feature gate and may go away at any time. Just look at non-existant trait aliases for example.",True,True,59,199.43333333333334
rust-lang_____rfcs_____2444,2018-05-21T16:18:15Z,True,rust-lang_____rfcs_____2444_____390704193,"@phaazon There's an important detail that you're leaving out, which is that turbofishing is almost never required for type variables used in an argument position. The compiler can infer it from the type of the argument you're passing. The *only* time I've ever needed to turbofish an argument parameter is when passing a generic `extern ""C""` function pointer.

In fact, I hope the way this ends up getting resolved is to allow type parameters to be explicitly passed, but no way to explicitly state the type of `impl Trait`, as it's a strength of the feature. Take for example this function in Diesel:

```
fn debug_query<DB, T>(query: &T) -> DebugQuery<T, DB>
where
    DB: Backend,
    T: QueryFragment<DB>,
```

The type of `DB` can never be inferred. The type of `T` is always inferred. 100% of the usage of this function looks like `debug_query::<Pg, _>(&query)`. Instead we could write it as:

```
fn debug_query<DB: Backend>(query: &impl QueryFragment<DB>) -> DebugQuery<impl QueryFragment<DB>, DB>
```

which would remove the pointless `, _` from the caller.",True,True,59,199.43333333333334
rust-lang_____rfcs_____2444,2018-05-21T16:18:25Z,True,rust-lang_____rfcs_____2444_____189639364,"> You generally

Are you sure about that? :)",True,True,59,199.43333333333334
Homebrew/brew/3720,2018-05-21T16:19:40Z,False,5b02f1a56480fd85df0cae7c,"Hi @MikeMcQuaid,

I fixed the issue with `dbm` implicitly appending `.db` to the end of the file path provided.

Could I please get some clarification on the desired behaviour for the command? Currently, if you run `brew linkage some_package`, the cache will be set. Subsequently running `brew linkage --cached some_package` will use the cache that was previously built. I thought this was the desired behaviour, but your last comment implied this was not the case.

Is the desired cache usage this?

1. Running `brew linkage some_package` does not set the cache.
2. Running `brew linkage --cached some_package` when `DatabaseCache.empty?` returns `false` should _build_ the cache.
3. Running `brew linkage --cached some_package` when `DatabaseCache.empty?` returns `true` should _use_ the cache.



",True,False,110,173514.51666666666
rust-lang_____rfcs_____2444,2018-05-21T16:23:15Z,True,rust-lang_____rfcs_____2444_____390705591,"@sgrif correct me if I'm not right, but your code
```rust
fn debug_query<DB: Backend>(query: &impl QueryFragment<DB>) -> DebugQuery<impl QueryFragment<DB>, DB>
    T: QueryFragment<DB>,
```
is equivalent of

```rust
fn debug_query<DB, T, U>(query: &T) -> DebugQuery<U, DB>
where
    DB: Backend,
    T: QueryFragment<DB>,
    U: QueryFragment<DB>
```

Which obviously is not the same thing as

```rust
fn debug_query<DB, T>(query: &T) -> DebugQuery<T, DB>
where
    DB: Backend,
    T: QueryFragment<DB>,
```

So you just probably planted a bug in the oneliner.",True,True,59,199.43333333333334
rust-lang_____rfcs_____2444,2018-05-21T16:26:49Z,True,rust-lang_____rfcs_____2444_____390706628,"@logannc I think you're both right and wrong. You're right, it's simply a stand-in for ""some type that implements this trait, the compiler will figure out the rest."" _However_, it does not exist in a vacuum. It must interact with the existing type system. And in that, it fails. **Badly.** Take for example, this function signature:
```
fn is_sorted(data: impl IntoIterator<Item = u8>) -> bool;
```
Now, the user wants to make the function more robust by adding a Result type. They want to return the original data, because they're passing it in by value somewhere. How? They might try this:
```
fn is_sorted(data: impl IntoIterator<Item = u8>) -> Result<bool, impl IntoIterator<item = u8>>
```
But now this does something different. The compiler forgets the input type. So if the user inputs a Vec<u8> and expects the same thing out, they might try to debug it with {:?}. But they will get an error: `impl std::iter::IntoIterator` cannot be formatted using :?`! This is very surprising and not intuitive at all. The same thing would have worked perfectly with rust's normal generics.

Very basic assumptions about how the user expects types to be propagated are lost BECAUSE we have a type system that is strict- the compiler is not going to ""figure it out at the call site"", it's just going to follow the exact definition in the function signature. There is no way to write this without named generics.

@sgrif and @Pzixel just demonstrated this problem.",True,True,59,199.43333333333334
rust-lang_____rfcs_____2444,2018-05-21T16:27:54Z,True,rust-lang_____rfcs_____2444_____390706945,"Another example from Diesel that would be improved by `impl Trait` in argument position:

```
fn transaction<T, E, F>(&self, f: F) -> Result<T, E>
where
    F: FnOnce() -> Result<T, E>,
    E: From<diesel::Error>,
```

in typical usage, `T` and `F` are inferred, and `F` is a closure (so cannot be named). `E` however, is usually explicitly given, since the body of the closure will likely use `?`. So it's normally invoked as `conn.transaction::<_, diesel::Error, _>(|| stuff()?; Ok(()))`

This case is a little more interesting, since we can remove the `F` parameter, but we can't remove the `T` (unless `FnOnce` were stabilized in a form where the arguments are an associated type). However, we could change the signature to:

```
fn transaction<T, E>(&self, f: impl FnOnce() -> Result<T, E>) -> Result<T, E>
```

which would change the invocation to `conn.transaction::<_, diesel::Error>(|| stuff()?; Ok(()))`",True,True,59,199.43333333333334
rust-lang_____rfcs_____2444,2018-05-21T16:28:47Z,True,rust-lang_____rfcs_____2444_____390707221,@Pzixel that is incorrect.,True,True,59,199.43333333333334
rust-lang_____rfcs_____2444,2018-05-21T16:29:34Z,True,rust-lang_____rfcs_____2444_____390707461,"> @phaazon There's an important detail that you're leaving out, which is that turbofishing is almost never required for type variables used in an argument position.

That’s worth mentioning, @sgrif. I’ll alter the RFC, thanks for noticing!",True,True,59,199.43333333333334
rust-lang_____rfcs_____2444,2018-05-21T16:31:19Z,True,rust-lang_____rfcs_____2444_____390707965,"@sgrif Yes, but how do you teach that to a newbie? The difference here goes back to the caller vs callee distinction. You need to know about that distinction to be able to understand why those two functions are different.",True,True,59,199.43333333333334
rust-lang_____rfcs_____2444,2018-05-21T16:38:11Z,True,rust-lang_____rfcs_____2444_____390709936,"@sgrif 
> that is incorrect.

Well, could you elaborate a while then, please? IIRC each input `impl Trait` becomes a generic parameter. If you say that `output` parameter would be tied to the `input` one then how compiler could figure out if they are tied? How could I express then that they are different? This one shows that I'm right

```rust
fn foo(value: &impl std::fmt::Debug) -> impl std::fmt::Debug {
    42
}

fn main() {
    foo(&""42"");
}
```",True,True,59,199.43333333333334
rust-lang_____rfcs_____2444,2018-05-21T16:42:54Z,True,rust-lang_____rfcs_____2444_____390711296,"@Pzixel It's equivalent to `fn debug_query<DB, T>(query: &T) -> DebugQuery<opaque type you don't know anything about and don't choose, DB>`. Whether or not the return type is the same as the input type is unimportant to this API. If I wanted to explicitly state that they were the same type, I'd give it a name and make that clear (e.g. make it a type parameter)",True,True,59,199.43333333333334
rust-lang_____rfcs_____2444,2018-05-21T16:45:28Z,True,rust-lang_____rfcs_____2444_____390712071,"@Pzixel only the input `impl Trait`s can be replaced by named type parameters. Output ones are not expressible by the named-type-parameter typesystem, because the _function_ decides their type based on the inputs, rather than the _caller of the function_ declaring a type for `U`.

In your example:
```
fn foo(value: &impl std::fmt::Debug) -> impl std::fmt::Debug {
    42
}

fn main() {
    let dbg1 = foo(&""42"");
    let dbg2 = foo(Some(3));
    let debugs = vec![dbg1, dbg2];
    println!(""all debugs: {:#?}"", debugs);
}
```
This works with type parameters (if you declare the returning type to be u8 or something like that, to resolve the ambiguous integer type). It does NOT work with impl Trait - at no point does the function guarantee it returns the _same_ output type for those two _different_ input types.",True,True,59,199.43333333333334
rust-lang_____rfcs_____2444,2018-05-21T16:46:08Z,True,rust-lang_____rfcs_____2444_____390712258,"@Phlosioneer I think you're over-emphasizing the importance of knowing/caring about callee chosen vs caller chosen. A better comparison to make would be the difference between `fn foo(x: &Display) -> &Display` and `fn foo(x: impl Display) -> impl Display`, as they're much closer semantically.
",True,True,59,199.43333333333334
rust-lang_____rfcs_____2444,2018-05-21T16:46:40Z,True,rust-lang_____rfcs_____2444_____390712408,"@sgrif IIRC, in the D language, turbofish allows omitting type params (from the end), they don't have to be substituted by `_`. If we had this in Rust, you wouldn't need `impl Trait` for arg types to satisfy your use case :)",True,True,59,199.43333333333334
rust-lang_____rfcs_____2444,2018-05-21T16:49:23Z,True,rust-lang_____rfcs_____2444_____390713216,"@Boscop Yup, that's a direction we could go as well. As with all things, it's a tradeoff.",True,True,59,199.43333333333334
rust-lang_____rfcs_____2444,2018-05-21T16:52:51Z,True,rust-lang_____rfcs_____2444_____390714181,"@sgrif 
> It's equivalent to fn debug_query<DB, T>(query: &T) -> DebugQuery<opaque type you don't know anything about and don't choose, DB>. Whether or not the return type is the same as the input type is unimportant to this API. If I wanted to explicitly state that they were the same type, I'd give it a name and make that clear (e.g. make it a type parameter)

Yes, you're right, thank you.

However, I still think that it leads to confusion. There should be only exact one way to do some thing.

The main reason against `impl Trait` in input parameter is that it procides hard-to-spot monoporphisation.  As you pointed out, `fn foo(x: &Display) -> &Display` and `fn foo(x: &impl Display) -> impl Display` look similar a lot, while they are different. Some generic salt is a good here, imho. I can easily spot that  `fn foo<T: Display(x: &T) -> impl Display` will have a static dispatch, and I still can write `fn foo<T: Display(x: &T) -> T` if I want to express relationship between input and output types.",True,True,59,199.43333333333334
rust-lang_____rfcs_____2444,2018-05-21T16:57:29Z,True,rust-lang_____rfcs_____2444_____189649855,"@sgrif 
Wouldn't the actual equivalent of 
```java
void foo(SomeInterface arg)
``` 
be 
```rust
fn foo(arg: Rc<RefCell<dyn SomeTrait>>)
```
?

Because the instance is GC'ed and mutable.

So when translating Java code (or thinking) to Rust, one wouldn't just be able to write `fn foo(arg: impl SomeTrait)` instead of the java method anyway, because that would be different semantics (it takes ownership and can't mutate). One would have to re-architect the code in the translation process to use references/lifetimes and to please the borrow checker anyway. 
So `impl Trait` for args isn't really the equivalent (or what one wants) in most cases.",True,True,59,199.43333333333334
rust-lang_____rfcs_____2444,2018-05-21T16:59:37Z,True,rust-lang_____rfcs_____2444_____390716256,"> However, I still think that it leads to confusion. There should be only exact one way to do some thing.

Are you of the opinion that lifetime elision should also be removed? These two features have similar uses and drawbacks. You also can't provide a lifetime explicitly via turbofish when lifetime elision is being used. Sometimes you need to explicitly name them (either to show equivalence or some relationship between multiple lifetimes), but it's pretty rare. Same for `impl Trait`. Often you don't need to give a type parameter a name. It's probably more common to need to name a type (either to show equivalence or some relationship between multiple type parameters), but it's still somewhat rare.

I think it's important that we have a way to drop down to a lower level, either because you need to use a turbofish (extremely rare for argument parameters) or because you need to name a type. But this feature gives us a great parity between `fn foo(x: &Trait) -> &Trait` and `fn foo(x: impl Trait) -> impl Trait`.",True,True,59,199.43333333333334
rust-lang_____rfcs_____2444,2018-05-21T17:04:12Z,True,rust-lang_____rfcs_____2444_____390717474,"> Are you of the opinion that lifetime elision should also be removed? These two features have similar uses and drawbacks. You also can't provide a lifetime explicitly via turbofish when lifetime elision is being used. Sometimes you need to explicitly name them (either to show equivalence or some relationship between multiple lifetimes), but it's pretty rare. Same for impl Trait. Often you don't need to give a type parameter a name. It's probably more common to need to name a type (either to show equivalence or some relationship between multiple type parameters), but it's still somewhat rare.

No, lifetime elision is fine, because it's the only way to specify object lifetimes. There is no ""easier but more fragile syntax"" that allows you to write the very same thing but using a bit less characters.

I love `impl Trait`, but Rust already have a very nice and powerful generics. Having single way to write ""argument of type T"" have much higher value than possibility to sometimes inline type declarations. This is why I love `impl Trait` in return position: it's not possible to express is via existing language features. So it's a strict language expansion, while `universal-impl-trait` is substitution.",True,True,59,199.43333333333334
rust-lang_____rfcs_____2444,2018-05-21T17:11:37Z,True,rust-lang_____rfcs_____2444_____390719558,"We are going to take the unusual step of immediately closing and locking this RFC.

While there are clearly a lot of feelings on all sides of the issue, the fact is that this feature has shipped on the stable channel and is not going to be removed. This is both because of our basic stability guarantees but also because the decision was made in good faith and pursuant to our process, and we stand by that. 

After multiple years of RFC and tracking issue discussions (the first one was [RFC #105](https://github.com/rust-lang/rfcs/pull/105) in 2014!), the Rust Language Design Team ultimately reached a decision to ship this feature. This decision was not reached lightly. We discussed in depth a number of alternatives, including limiting `impl Trait` to return position as well as using an alternate syntax. Each has its pros and cons, and ultimately a judgement call had to be made. This is the nature of the language design process — indeed, any decision process. Few decisions are clear cut, which is why our process includes a number of points where feedback can be given, including a number of final-comment-period advertisements and the like. As a community, we have made a deliberate choice to slow down development to ensure thorough vetting and input into the process.

To be clear: we understand that there are downsides to this feature, and that some people find those downsides concerning. All of us care deeply about Rust, and it can be distressing to see people in power moving things in a direction you dislike. But, at the end of the day, we have to be able to make — and stick with — decisions, striking a balance between long-running feedback and shipping. Rust 2018 will ship with `impl Trait` in argument position.

-- @nikomatsakis and @aturon, on behalf of the Rust Language and Core Teams",True,True,59,199.43333333333334
algorithm-archivists_____algorithm-archive_____114,2018-05-21T19:04:38Z,True,algorithm-archivists_____algorithm-archive_____114_____390751118,"Alright, I was trying to be a little more subtle about it but the new code isn't good C++. It's C++ that might look good in a CppCon talk that showcases language features.

Sure, you might've given a nice name to `sum` but it *doesn't even just sums the elements.*. It's basically a map and a sum and with the use of `auto` in the lambda parameters you don't even know which parameter is supposed to be the index.

On the other hand you have a for loop *with a single state changing operation which is `+=`*. If that doesn't scream `sum` to you I don't know what to tell you. The thing you seem to be forgetting is that `sum` is part of the algorithm so the reader will have to understand that as well. Let's take a look at the first few lines of the function:

```cpp
  using return_type = decltype(f(0, *first));
  auto ret = return_type(0);
```

You very rarely have to use this pattern in everyday code. This is the kind of code that gives modern C++ advocates a bad name (which is a shame because I'm one of them when it makes sense): just add genericity and abstractions to a problem until it becomes completely unrecognizable. Do we want to emphasize that it's a sum? Sure, we can do that with some straightforward code:

```cpp
c64 fft_sum(size_t i, const std::vector<c64>& values) {
    auto sum = c64(0);
    auto size = values.size();
    for (size_t k =0 ; k < size; ++k) {
        sum += values[k] * std::exp(c64(0, -2.0 * pi<double>() * k * i / size));
    }
    return sum;
}

std::vector<c64> discrete(const std::vector<c64>& values) {
    std::vector<c64> result(values.size());

    auto size = values.size();
    for (size_t i = 0; i < size; ++i) {
        result[i] = fft_sum(i, values);
    }

    return result;
}
```

I'm still against this version because it still obfuscates part of the algorithm but at least it doesn't add unneeded complexity.",True,True,46,89673.71666666666
algorithm-archivists_____algorithm-archive_____114,2018-05-21T19:29:02Z,True,algorithm-archivists_____algorithm-archive_____114_____390757274,"@Gustorn I disagree absolutely completely. We should write what we want to happen, in a declarative style, *not* in an imperative, tell the machine what should happen, sort of way. This is the basis of good code design.",True,True,46,89673.71666666666
algorithm-archivists_____algorithm-archive_____114,2018-05-21T19:44:46Z,True,algorithm-archivists_____algorithm-archive_____114_____390761104,"Yup, the pinnacle of declarative code right here:

```cpp
template <typename It, typename F>
auto sum(It const first, It const last, F f) {
  using return_type = decltype(f(0, *first));
  auto ret = return_type(0);

  std::size_t i = 0;
  for (auto it = first; it < last; ++it, ++i) {
    ret += f(i, *it);
  }

  return ret;
}
```

As I mentioned, *sum is part of the algorithm*. This is why abstraction doesn't work well here: you have to understand the *whole code* to understand how it works, you're not just going to look at pieces of it in isolation. Also the whole notion that declarative style is *always* better than imperative style is kind of ridiculous. The key is to recognize which one to use and when. All that being said, I'm not very motivated to keep going with this argument since it feels like I'm arguing against C++ blog posts and talks and not against actual technical arguments. 

",True,True,46,89673.71666666666
algorithm-archivists_____algorithm-archive_____114,2018-05-21T19:46:36Z,True,algorithm-archivists_____algorithm-archive_____114_____390761532,@Gustorn the point is that _`sum` is an implementation function_. That's why it has a name. You don't need to read it.,True,True,46,89673.71666666666
Homebrew/brew/3720,2018-05-21T20:09:38Z,False,5b0327896480fd819f15c592,"> Is the desired cache usage this?

Yes, I think so. I'm open to being convinced otherwise but it seemed strange to me to build/store a cache on disk which would never be used without an option or environment variable being passed.",True,False,110,173514.51666666666
algorithm-archivists_____algorithm-archive_____114,2018-05-21T20:50:25Z,True,algorithm-archivists_____algorithm-archive_____114_____390778370,"Even if we don't end up with iterator functions, we can write:

```cpp
std::valarray<c64> recursive(std::valarray<c64> input) {
  auto const size = input.size();
  if (size < 2) {
    return input;
  }

  auto evens = std::valarray<c64>(input[std::slice(0, size / 2, 2)]);
  auto odds = std::valarray<c64>(input[std::slice(1, size / 2, 2)]);

  evens = recursive(evens);
  odds = recursive(odds);

  // now combine each of those halves with the butterflies
  auto ret = std::valarray<c64>(size);
  for (std::size_t k = 0; k < size / 2; ++k) {
    auto w = odds[k] * std::polar(1.0, -2.0 * pi<double>() * k / size);
    ret[k] = evens[k] + w;
    ret[k + size / 2] = evens[k] - w;
  }
  return ret;
}

// `iterative` does the cooley-tukey algorithm iteratively
std::valarray<c64> iterative(std::valarray<c64> input) {
  sort_by_bit_reverse(begin(input), end(input));

  // perform the butterfly on the range
  auto const size = input.size();
  for (std::size_t stride = 2; stride <= size; stride *= 2) {
    auto w = exp(c64(0, -2.0 * pi<double>() / stride));
    for (std::size_t j = 0; j < size; j += stride) {
      auto v = c64(1.0);
      for (std::size_t k = 0; k < stride / 2; k++) {
        input[k + j + stride / 2] =
            input[k + j] - v * input[k + j + stride / 2];
        input[k + j] -= (input[k + j + stride / 2] - input[k + j]);
        v *= w;
      }
    }
  }

  return input;
}

std::valarray<c64> discrete(std::valarray<c64> input) {
  auto const size = input.size();

  auto ret = std::valarray<c64>(size);

  iota_transform_n(begin(ret), 0, size, [&](std::size_t i) {
    return sum(0, size, [&](auto const k) {
      auto const coefficient = input[k];
      auto const expression =
          c64(std::cos(-2.0 * pi<double>() * i * k / size),
              std::sin(-2.0 * pi<double>() * i * k / size));
      return coefficient * expression;
    });
  });

  return ret;
}
```

which is much more understandable.",True,True,46,89673.71666666666
mysqljs_____mysql_____1962,2018-05-22T04:04:53Z,True,mysqljs_____mysql_____1962_____390856212,"The merge process last so long, and the pr is still not merged. So it there any alternative way to solve the problem of ""ER_NOT_SUPPORTED_AUTH_MODE: Client does not support authentication 
authentication ""? I am nodejs startup and just want to connect to mysql 8.0 for demo.",True,True,37,413793.7833333333
mysqljs_____mysql_____1962,2018-05-22T08:07:30Z,True,mysqljs_____mysql_____1962_____390900841,"@fan123199 everything should still work if you use the `mysql_native_password` plugin.

```sql
ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'YourRootPassword';
-- or
CREATE USER 'foo'@'%' IDENTIFIED WITH mysql_native_password BY 'bar';
```
",True,True,37,413793.7833333333
Homebrew/brew/3720,2018-05-22T13:48:33Z,False,5b041fb76480fd84662f19ac,"@AndrewMcBurney I've pushed some refactoring here; I couldn't really figure out how to explain what I wanted without writing out some of the code myself. Let me know if you object to any of it. The main thing I wanted was to ave the DatabaseCache (now called CacheStoreDatabase) be the only thing that calls DBM objects, the CacheStore and subclasses (i.e. LinkageStore now called LinkageCacheStore) be the only thing that calls DatabaseCache/CacheStoreDatabase objects and the LinkageChecker be the only thing that calls LinkageStore/LinkageCacheStore objects.

> Write benchmark and integration tests for the caching system
> Write unit tests for Library/Homebrew/os/mac/linkage_database.rb and Library/Homebrew/os/mac/linkage_store.rb.

@AndrewMcBurney I think the code is now ✅ enough that you can proceed with these (if you're still up for it). I think you can skip the benchmark tests and focus mainly on unit tests with a few integration tests to check things are working end-to-end. If you're not going to have time to do this: shout and I'll take a look.",True,False,110,173514.51666666666
Homebrew/brew/3720,2018-05-22T19:46:51Z,False,5b0473b96480fd85df0d6165,"Hi @MikeMcQuaid,

I added unit tests for the new classes, but I was hoping to get some advice for the integration tests. I've looked at the other `dev-cmd` test suites, and structured the `linkage_spec` as such:

```ruby
describe ""brew linkage"", :integration_test do
  context ""no cache"" do
    it ""works when one argument is provided"" do
      setup_test_formula ""testball""

      expect(File).to_not receive(:write)
      expect { brew ""linkage"", ""foo"" }
        .to be_a_success
    end
  end
end
```

I thought this would work, but it's currently failing. Does Homebrew have any test helper methods to setup `kegs` that I could pass into the `brew linkage` command?

Thanks! ",True,False,110,173514.51666666666
rust-lang_____rfcs_____2426,2018-05-23T12:24:46Z,True,rust-lang_____rfcs_____2426_____391327320,":bell: **This is now entering its final comment period**, as per the [review above](https://github.com/rust-lang/rfcs/issues/2426#issuecomment-390503385). :bell:",True,True,196,33091.05
Homebrew/brew/3720,2018-05-23T13:25:20Z,False,5b056bc86480fd7da6e74d8e,"> expect(File).to_not receive(:write)

This is the bit that may not work as expected.

What's the failure you're seeing? 

> expect { brew ""linkage"", ""foo"" }

Should be `brew ""linkage"", ""testball""`.

If neither of those help: what's the failure you're seeing? FYI don't go overboard in integration tests; we have too many and I'm going to delete some.",True,False,110,173514.51666666666
Homebrew/brew/3720,2018-05-23T13:43:06Z,False,5b056fef6480fd86f18942df,"> FYI don't go overboard in integration tests; we have too many and I'm going to delete some.

See https://github.com/Homebrew/brew/pull/4202 for this.",True,False,110,173514.51666666666
Homebrew/brew/3720,2018-05-23T14:15:51Z,False,5b05779e6480fd84b981072a,"> What's the failure you're seeing?

It fails, but the error message isn't too descriptive:

```
Failures:

  1) brew linkage no cache works when one argument is provided
     Failure/Error:
       expect { brew ""linkage"", ""testball"" }
         .to be_a_success

       expected #<Proc:0x007f8a4eda77f0@/usr/local/Homebrew/Library/Homebrew/test/dev-cmd/linkage_spec.rb:13> to be a success
     # ./test/dev-cmd/linkage_spec.rb:13:in `block (3 levels) in <top (required)>'
     # ./test/support/helper/spec/shared_context/integration_test.rb:44:in `block (2 levels) in <top (required)>'
     # ./test/spec_helper.rb:103:in `block (2 levels) in <top (required)>'
     # ./vendor/bundle/ruby/2.3.0/gems/rspec-retry-0.5.7/lib/rspec/retry.rb:115:in `block in run'
     # ./vendor/bundle/ruby/2.3.0/gems/rspec-retry-0.5.7/lib/rspec/retry.rb:104:in `loop'
     # ./vendor/bundle/ruby/2.3.0/gems/rspec-retry-0.5.7/lib/rspec/retry.rb:104:in `run'
     # ./vendor/bundle/ruby/2.3.0/gems/rspec-retry-0.5.7/lib/rspec_ext/rspec_ext.rb:12:in `run_with_retry'
     # ./vendor/bundle/ruby/2.3.0/gems/rspec-retry-0.5.7/lib/rspec/retry.rb:33:in `block (2 levels) in setup'
     # ./vendor/bundle/ruby/2.3.0/gems/rspec-wait-0.0.9/lib/rspec/wait.rb:46:in `block (2 levels) in <top (required)>'
```

for the test:

```ruby
describe ""brew linkage"", :integration_test do
  context ""no cache"" do
    it ""works when one argument is provided"" do
      setup_test_formula ""testball""

      expect { brew ""linkage"", ""testball"" }
        .to be_a_success
    end
  end
end
```",True,False,110,173514.51666666666
Homebrew/brew/3720,2018-05-23T14:25:02Z,False,5b0579d66480fd7ffb59a24c,"> It fails, but the error message isn't too descriptive:

Yeh, they aren't ideal 😭 

I'd suggest adding an assertion for the standard/error output (both as good practise and to help debug).",True,False,110,173514.51666666666
Homebrew/brew/3720,2018-05-23T15:17:37Z,False,5b0586346480fd7e3268a479,"Hi @MikeMcQuaid, on `stderr`, it's printing: `Error: No such keg: /tmp/homebrew-tests-20180523-61114-1xow8iw/cellar/testball`. Is there a helper function for creating kegs that I could use in these tests? Thank you!",True,False,110,173514.51666666666
Homebrew/brew/3720,2018-05-23T16:02:00Z,False,5b0590986480fd7f82c480ca,"> Hi @MikeMcQuaid, on stderr, it's printing: Error: No such keg: /tmp/homebrew-tests-20180523-61114-1xow8iw/cellar/testball. Is there a helper function for creating kegs that I could use in these tests? Thank you!

@AndrewMcBurney I'd copy-paste from the `upgrade` and `migrate` integration tests which both rely on a keg existing. There's no helper function beyond `setup_test_formula`",True,False,110,173514.51666666666
rust-lang_____rfcs_____2426,2018-05-23T17:18:11Z,True,rust-lang_____rfcs_____2426_____391429191,"@Centril Then you create [this](https://github.com/anp/rfcbot-rs/pull/210), out of pure spite, because your personal PR wasn't well received? So you think just because you made a PR that wasn't so well received within the community, gives you the right to strip everyone other community member of their right to downvote? That's extremely unprofessional.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-23T21:12:14Z,True,rust-lang_____rfcs_____2426_____391497962,I propose removing @Centril from the Rust project as a whole. He wants to ban thumbs-down reactions -- I want to ban *him*. None of his contributions have been productive and he has only managed to provoke pointless flame wars.,True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-23T21:23:40Z,True,rust-lang_____rfcs_____2426_____391501107,"@m-cat With respect, I have to disagree. @Centril is one of the most [prolific authors of RFCs](https://github.com/rust-lang/rfcs/pulls?page=1&q=is%3Apr+author%3ACentril&utf8=%E2%9C%93), and many of them are accepted.

@Centril may disagree on a lot of issues, but I think the community would worse without them.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-23T21:29:40Z,True,rust-lang_____rfcs_____2426_____391502641,"**Moderation note**

@m-cat such comments are very clearly against our [code of conduct](https://www.rust-lang.org/conduct.html). Further such behavior will result in a ban from the project.

Feel free to contact us at rust-mods@rust-lang.org if you have questions.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-23T21:31:34Z,True,rust-lang_____rfcs_____2426_____391503160,@Manishearth Why are you deleting people's comments?,True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-23T21:33:19Z,True,rust-lang_____rfcs_____2426_____391503635,"[Comments/questions about moderation should go to the moderation team, please.]",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-23T21:33:39Z,True,rust-lang_____rfcs_____2426_____391503737,@Manishearth Can you tell me *exactly* how I violated the code of conduct?,True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-23T21:34:30Z,True,rust-lang_____rfcs_____2426_____391504002,"> Feel free to contact us at rust-mods@rust-lang.org if you have questions.

This is not the place to discuss this.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-23T21:36:48Z,True,rust-lang_____rfcs_____2426_____391504647,"Apparently it's not the place to discuss anything.

What a disappointment for a supposedly community-driven project. This entire debacle (along with `impl Trait` in argument position) has been a sham. Anyway, I won't comment here any more.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-23T21:46:27Z,True,rust-lang_____rfcs_____2426_____391507049,"> This is not the place to discuss this. @Manishearth 

No worries sir, it's already being discussed here:
https://www.reddit.com/r/programmingcirclejerk/comments/8lkaw3/downvotes_are_not_exciting/",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-23T22:17:51Z,True,rust-lang_____rfcs_____2426_____391514606,"Well, let's draw a line.

I do believe that everybody agrees on that this issue produces a lot of arguing. However, I think that problem is much deeper than just this issue, it's about the whole desicion process.

So, we can tilt at windmills and discuss implications instead of problem source, OR we can do the later. 

The main idea that some RFCs get accepted when they actually are not welcomed by the majority. It seems that the whole process is broken as we can't give a feedback if something goes wrong.

E.g. I read this RFC. I disagree with it. How can I make it not happen? I should get 100+ upvotes on some very critical comment? I should write my own RFC ""please, don't do RFC#42""? I should apply some Mozilla job and get into the core team? Or I can do just nothing and it will be accepted whenever I like it or not? (when I say ""like"" I mean something bigger than just my emotional state, but rather the overall feeling based on my professional experience). 

If you can answer this question then we can have some valuable talk. It's completely ok if you say that my opinion doesn't matter until I'm in core team, because there are ten persons who decide what's going to be included in the language, but please, be honest with me. @Centril says that it's a huge disappointment then you spend a lot of time, writing an RFC or a comment like this, when it was useless. Just say ""we don't need your opinion"" and we will save literally thousands of manyears that could have a better application as well as a better atmosphere in comments.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-23T22:23:21Z,True,rust-lang_____rfcs_____2426_____391516077,**Moderation note:** There are multiple [discussions](https://internals.rust-lang.org/t/fortifying-the-process-against-feature-bloat/7608/24) happening in the forum about the RFC process.  Please keep process discussion in the forums and out of individual RFC PRs.,True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-23T22:25:43Z,True,rust-lang_____rfcs_____2426_____391516675,"I'm going to go ahead and close out this RFC (which is in FCP for postponement), as I think it's quite clear we won't be pushing on this in the near future, and the thread is continuing to veer well off topic.",True,True,196,33091.05
rust-lang_____rfcs_____2426,2018-05-23T22:37:09Z,True,rust-lang_____rfcs_____2426_____391520385,"> I'm going to go ahead and close out this RFC 

You're not supposed to just close the thread, you're supposed to close it and limit it to collaborators only.",True,True,196,33091.05
mysqljs_____mysql_____1962,2018-05-24T04:37:07Z,True,mysqljs_____mysql_____1962_____391585418,"In addition to what @ruiquelhas said, I also had to:
```
mysql> FLUSH PRIVILEGES;
Query OK, 0 rows affected (0.00 sec)
```
And then restart the server.
If you are using multiple MySQL users, ensure that you update all of them. In my case I also had to use `'%'` instead of `'localhost'`.",True,True,37,413793.7833333333
Homebrew/brew/3720,2018-05-24T08:14:18Z,False,5b0674626480fd83adb154f7,Great work on this @AndrewMcBurney! Sorry for the delay in merging but so happy to see this in now!,True,False,110,173514.51666666666
MoonchildProductions_____UXP_____395,2018-05-27T14:07:08Z,True,MoonchildProductions_____UXP_____395_____190789425,"This PR enforces the use of SSE2 when building UXP with any version of GCC. In addition, if a user attempts to start either Pale Moon or Basilisk on a system that does not support SSE2, an error message should be displayed instead of the browser just silently failing to start.

I've tested and can confirm that SSE2 is being enforced on GCC builds on Linux, however I do not have any non-SSE2 hardware to test that the error message is displayed.",True,True,42,11329.4
MoonchildProductions_____UXP_____395,2018-05-27T14:53:13Z,True,MoonchildProductions_____UXP_____395_____392336979,I don't think this will override optimization flags in mozconfig... Does it?,True,True,42,11329.4
MoonchildProductions_____UXP_____395,2018-05-27T15:05:14Z,True,MoonchildProductions_____UXP_____395_____392337864,"Yes it should override mozconfig flags because these flags are passed to the compiler after mozconfig flags, thus overriding them.

@wolfbeast what do you think? Enforce for all UXP applications or only for official branding? I’m fine with either approach; just want to prevent a slew of builds showing up that supports ancient hardware.",True,True,42,11329.4
MoonchildProductions_____UXP_____395,2018-05-27T15:14:59Z,True,MoonchildProductions_____UXP_____395_____392338554,"I no I was not asked, but in my opinion, it should at most only effect
officially branded builds.
",True,True,42,11329.4
MoonchildProductions_____UXP_____395,2018-05-27T15:45:42Z,True,MoonchildProductions_____UXP_____395_____392341153,"I think this should apply regardless of build. UXP is a modern platform and should not be used to target very old hardware. There are more areas where this is or will be a problem as things are developed. It should not be left ""up in the air"" to break later on (which it will) by allowing it now.

SSE2 is and should be a hard requirement for all UXP applications.",True,True,42,11329.4
MoonchildProductions_____UXP_____395,2018-05-27T15:47:50Z,True,MoonchildProductions_____UXP_____395_____392341405,@wolfbeast in that case this is ready to merge.,True,True,42,11329.4
w3c/vc-data-model/179,2018-05-27T17:29:33Z,False,5b0aeb056480fd83f5c5d2b5,"This PR is ready to go, please review @stonematt @dlongley @David-Chadwick. I tried to only make editorial changes, although I can see why some might see some of the changes as not editorial (even though I think I can argue that they are).",True,False,36,15469.966666666667
MoonchildProductions_____UXP_____395,2018-05-27T23:14:31Z,True,MoonchildProductions_____UXP_____395_____392385130,Doesn't this mean sse2 will override my specification of avx or avx2 when building and not cover this case at all?,True,True,42,11329.4
calamares_____calamares_____966,2018-05-27T23:47:53Z,True,calamares_____calamares_____966_____190812827,"renamed openrccfg and cleaned up, due to a new runitcfg module to have a naming schema.",True,True,55,44095.11666666667
MoonchildProductions_____UXP_____395,2018-05-27T23:59:18Z,True,MoonchildProductions_____UXP_____395_____392389256,"The sse2 flags should only override mozconfig flags that are contradictory (such as -mno-sse2); avx and other flags should not be overwritten.

I can't speak about ARM as I'm not familiar enough with it. Would have to do some research.

I can prepare a patch that will allow this to be overridden in mozconfig or we can use a Directive 4 solution. I'm fine with either.",True,True,42,11329.4
MoonchildProductions_____UXP_____395,2018-05-28T00:14:43Z,True,MoonchildProductions_____UXP_____395_____392390426,"Your solution would be fine if the only applications were Basilisk and Pale Moon. They are not, however. Also, Directive 4 is only in effect for specific applications and only then for specific branding, namely ours.

It is also complemented by a private build configure flag to override that with transformative results like the text in the about boxes indicating its private build status.

My post above was directed to Moonchild more than you.

The bottom line is just like there must be balance between Developer and User choices with UXP there must be balance between Moonchild Productions and the rest of the world who would use the platform. Be it minor rebuilds, forks, or independent applications.

That is the reason, or so I thought, that UXP is a thing.",True,True,42,11329.4
MoonchildProductions_____UXP_____395,2018-05-28T00:43:49Z,True,MoonchildProductions_____UXP_____395_____392392415,"I agree.
",True,True,42,11329.4
MoonchildProductions_____UXP_____395,2018-05-28T02:53:20Z,True,MoonchildProductions_____UXP_____395_____392405785,"I'm not sure why there is this much discussion. directive 4, Moonchild Productions applications vs. others etc. should not matter.
The solution must be one that applies regardless of application (so in `confvars.sh` is actually not a good place) that enforces SSE2 for the platform as a whole. A combination of filtering out unwanted disable flags and adding desired enable flags, applied for all platforms, would be best. This should be in the platform's root configuration somewhere, probably.",True,True,42,11329.4
MoonchildProductions_____UXP_____395,2018-05-28T03:17:37Z,True,MoonchildProductions_____UXP_____395_____392408553,I don't want to be limited to Pale Moon or Basilisk configuration. This means be it Borealis or XUL Runner or anything else I am forced to be SSE2. I shouldn't have to fork the platform because you are making product and marketing decisions for everyone.,True,True,42,11329.4
MoonchildProductions_____UXP_____395,2018-05-28T03:18:35Z,True,MoonchildProductions_____UXP_____395_____392408653,"What about if we add a configure option (--enable-modern-simd or something similar) that could be enabled by default and would enforce the SSE2 flags be passed to the compiler. We could also tie in the warning message flag to this option, and use directive 4 to ensure that this option is always used when building with official branding.

It would allow people to override it in mozconfig, but maybe it would be an acceptable compromise?",True,True,42,11329.4
MoonchildProductions_____UXP_____395,2018-05-28T03:29:43Z,True,MoonchildProductions_____UXP_____395_____392409840,"How it should work is if you want to assume SSE2 on an application basis then do so. If you want to be kind then ifdef it based on that..

Let Directive 4 enforce the optimization for it on official branding.

Minor rebuilds, forks of the code, and private builds should be able to do what they want with a minimum of imposed conditions. UXP is NOT mozilla-central or palemoon-central or basilisk-central.",True,True,42,11329.4
MoonchildProductions_____UXP_____395,2018-05-28T03:45:14Z,True,MoonchildProductions_____UXP_____395_____392411423,"So, you're insisting on wanting UXP to be somehow catering to pre pentium-IV hardware.
You do realize that this goes beyond just compiler optimizations, right, and that the SSE2 assumption **will** be made for hot paths in our development? I want to enforce SSE2 on the platform as a whole because it makes NO SENSE to keep catering to and targeting IA32 in 2018, and it will actually prevent some planned code improvements.
",True,True,42,11329.4
MoonchildProductions_____UXP_____395,2018-05-28T04:02:16Z,True,MoonchildProductions_____UXP_____395_____392413120,"Not really I prefer to use superior intruction set to SSE2 but if you enforce SSE2 then that overrides my ability to use AVX or newer.

Also, just how much is actually dependent on any arbitrary instruction set? That hasn't even been stated or made clear. To me it looks like 3rd party libs using assembly.

Now at some point in the future some of those libs may not have mmx or sse instructions and at that time it can be considered and justified then.

THIS is about impossing a restriction and indeed locking in of a specific instruction set without cause or justification beyond it is not how branded Basilisk or Pale Moon builds should be configured.

Assuming a position of SSE2 only for the entire platform for the same reasons as Windows XP needs to be justified.",True,True,42,11329.4
MoonchildProductions_____UXP_____395,2018-05-28T04:14:34Z,True,MoonchildProductions_____UXP_____395_____392414366,"You clearly misunderstood
it's a MINIMUM.
Since this is getting out of hand here, let's discuss on the forum.
https://forum.palemoon.org/viewtopic.php?f=62&t=19269",True,True,42,11329.4
MoonchildProductions_____UXP_____395,2018-05-28T04:15:18Z,True,MoonchildProductions_____UXP_____395_____392414427,fwiw I had the same misunderstanding. ,True,True,42,11329.4
MoonchildProductions_____UXP_____395,2018-05-28T04:20:52Z,True,MoonchildProductions_____UXP_____395_____392414993,"I really don't see how this could have been misunderstood. Enforcing a specific SIMD level is *always* listed as a minimum. But hey, what do I know.
Great start of the week, at any rate. :frowning_face: ",True,True,42,11329.4
MoonchildProductions_____UXP_____395,2018-05-28T04:24:23Z,True,MoonchildProductions_____UXP_____395_____392415470,"I can't discuss this at the forum. Also, as implimented this tacts on and enforces sse2 at the end of the MOZ_OPTIMIZE string despite what is specified before it in mozconfig.",True,True,42,11329.4
MoonchildProductions_____UXP_____395,2018-05-28T04:36:19Z,True,MoonchildProductions_____UXP_____395_____392416769,Let me be absolutely crystal clear here if I specify to build as AVX or AVX2 will this as implimented still comple as SSE2?,True,True,42,11329.4
MoonchildProductions_____UXP_____395,2018-05-28T04:42:54Z,True,MoonchildProductions_____UXP_____395_____392417573,I agree -- I am in favor of a build failing due to being miss-configured and not in favor of it being silently overridden.  ,True,True,42,11329.4
MoonchildProductions_____UXP_____395,2018-05-28T04:46:44Z,True,MoonchildProductions_____UXP_____395_____392418007,"Right, well that needs to be fixed then. it's not supposed to override -arch:AVX etc. This is why I made a point of saying to FILTER OUT as-needed.
The default for msvc is sse2. so it needs to filter out -arch:SSE and -arch:IA32.
And no, I do not agree with build failure, because then you'd have to put in extra checks EVERYWHERE
",True,True,42,11329.4
MoonchildProductions_____UXP_____395,2018-05-28T05:02:17Z,True,MoonchildProductions_____UXP_____395_____392419703,"I guess I'll have to do this myself, then.",True,True,42,11329.4
MoonchildProductions_____UXP_____395,2018-05-28T05:04:18Z,True,MoonchildProductions_____UXP_____395_____392419926,Doesn't look like this PR is even touching windows compilation. so what's all the screaming about?,True,True,42,11329.4
MoonchildProductions_____UXP_____395,2018-05-28T05:07:46Z,True,MoonchildProductions_____UXP_____395_____392420291,"No you don't.. It is very simple to do it in a similar manor as I did for Directive 4 but NOT directive 4. It can be done from configure very early on in the process.

It isn't a problem and it can be a simple list of forbidden optimization flags.

Would this be acceptable?",True,True,42,11329.4
MoonchildProductions_____UXP_____395,2018-05-28T05:11:38Z,True,MoonchildProductions_____UXP_____395_____392420769,It would be very much appreciated if it was handled in the manner suggested above (by Tobin).,True,True,42,11329.4
MoonchildProductions_____UXP_____395,2018-05-28T05:17:27Z,True,MoonchildProductions_____UXP_____395_____392421494,Go ahead Tobin.,True,True,42,11329.4
MoonchildProductions_____UXP_____395,2018-05-28T05:19:43Z,True,MoonchildProductions_____UXP_____395_____392421795,Incompatible optimizations is a configure error.,True,True,42,11329.4
MoonchildProductions_____UXP_____395,2018-05-28T05:21:53Z,True,MoonchildProductions_____UXP_____395_____392422065,"Thanks for that info.. I'll be sure to knock down the case for processing.

I will get to work on this later today. Could you please revert this and the follow up?",True,True,42,11329.4
MoonchildProductions_____UXP_____395,2018-05-28T05:44:06Z,True,MoonchildProductions_____UXP_____395_____392425041,Both have been reverted.,True,True,42,11329.4
calamares_____calamares_____966,2018-05-28T08:40:34Z,True,calamares_____calamares_____966_____191146718,"Most modules have some documentation explaining what the module does, above this --- comment line.",True,True,55,44095.11666666667
calamares_____calamares_____966,2018-05-28T08:41:14Z,True,calamares_____calamares_____966_____191146856,"Most modules have a short bit of documentation about the configuration in general, above this --- comment line.",True,True,55,44095.11666666667
calamares_____calamares_____966,2018-05-28T08:52:31Z,True,calamares_____calamares_____966_____191149804,"Most modules have documentation on the keys and possible values. Here, something like 

> *services* is a map with one of more object keys (e.g. *add*) that correspond to
> the first argument of rc-update. The following keys are in use: *add*, *del*.
> The value of each of those keys is a list of service maps; each of those service
> maps has a key *name* and a key *runlevel*. The named service is added, or
> deleted, from the given runlevel. To add or remove a service from multiple
> runlevels, list it multiple times with different runlevels.

",True,True,55,44095.11666666667
w3c/vc-data-model/179,2018-05-28T19:10:57Z,False,5b0c5ca16480fd835a0c9d2a,"Simplify last sentence (""Exchanging verifiable..."") to:

""Verifiable credentials can also be rapidly exchanged through the Internet, making them more convenient than their physical counterparts when needing to establish trust at a distance.""",True,False,36,15469.966666666667
w3c/vc-data-model/179,2018-05-28T19:15:40Z,False,5b0c5ca06480fd7fbfdc7d7c,"I recommend changing ""If more than one URI ..."" to

""If more than one URI is provided, the URIs must be understood be an unordered set. If a syntax, such as JSON-LD, uses an array to represent the set of URIs, the order of the values is not significant. Note that syntax...""",True,False,36,15469.966666666667
w3c/vc-data-model/179,2018-05-28T19:37:13Z,False,5b0c5ca06480fd83adb364de,"I'm not a fan of this name but I don't have an alternative. This name really only exists because we had to adopt ""VerifiableCredential"" rather than ""Credential"". Otherwise a ""Verifiable Credential"" would just be a ""Credential"" with a ""proof"" on it -- with no need to distinguish its type in this way. You can make a ""Credential"" verifiable by simply attaching a proof to it. As it stands now, to make an ""UnverifiableCredential"" verifiable, you'd have to *remove* its type, add a type of ""VerifiableCredential"" and add a proof.

This seems odd to me but I have nothing actionable to say that I think would be accepted. Likely unacceptable options are:

1. Rename ""VerifiableCredential"" to ""Credential"" and just use that type as I mentioned above.
2. Rename ""UnverifiableCredential"" to ""Credential"".
3. Remove type of ""UnverifiableCredential"" and leave it untyped.
4. Change ""UnverifiableCredential"" to ""Assertion"" and introduce further vernacular/confusion.

Option 4 would be to say that a simple ""Assertion"" stops being a mere assertion and becomes a ""VerifiableCredential"" once you attach proof to it. However, that, I believe this may further confuse the meaning of ""proof"". ""Proof"" does not prove that some statements are true, but rather the authenticity of the issuer.

That means that what we're really talking about here is more like ""Gossip"" or ""Hearsay"" or ""Allegation"". I *heard* that so and so said X about Y. I don't have any proof that they did.",True,False,36,15469.966666666667
w3c/vc-data-model/179,2018-05-28T19:38:07Z,False,5b0c5ca06480fd7d6758b9cc,"Again, I'm not a fan of this type. How can we make such a claim that it is unverifiable? All we're saying here is that there's no proof attached. Perhaps ""Presentation"" is better? That doesn't seem to have the same problems that ""Credential"" has above.",True,False,36,15469.966666666667
w3c/vc-data-model/179,2018-05-28T19:39:02Z,False,5b0c5ca06480fd875e08c7ab,"""describe"" => ""represent""?",True,False,36,15469.966666666667
w3c/vc-data-model/179,2018-05-28T19:39:24Z,False,5b0c5ca06480fd802f7863d1,"""when determining"" or ""to determine""?",True,False,36,15469.966666666667
w3c/vc-data-model/179,2018-05-28T19:40:44Z,False,5b0c5ca06480fd819f194967,Not just the integrity of the credential but it is also used to prove the authenticity of the credential's issuer.,True,False,36,15469.966666666667
calamares_____calamares_____966,2018-05-29T06:50:59Z,True,calamares_____calamares_____966_____191318464,"Should something be logged if it doesn't exist? That means there's a mismatch between the configuration, and the installed system.",True,True,55,44095.11666666667
calamares_____calamares_____966,2018-05-29T06:52:04Z,True,calamares_____calamares_____966_____191318678,"Maybe `check_target_env_call`, and catch the possible exception in order to log it (or let it go, then the user gets a real cancel message).",True,True,55,44095.11666666667
calamares_____calamares_____966,2018-05-29T07:00:05Z,True,calamares_____calamares_____966_____392672707,"@udeved Looks a lot better and cleaner, too. It does have a lot of review comments, but those are ""icing on the cake"" things.",True,True,55,44095.11666666667
w3c/vc-data-model/179,2018-05-29T10:21:49Z,False,5b0d29c86480fd7e8ada3ca6,"I do not support introducing 'unverifiable credential'. As pointed out in #178, credentials MUST always be verifiable since users are not trusted (regardless of whether they have been authenticated or not.)",True,False,36,15469.966666666667
w3c/vc-data-model/179,2018-05-29T10:22:04Z,False,5b0d29d06480fd84ebcebaba,Ditto above for this. ,True,False,36,15469.966666666667
w3c/vc-data-model/179,2018-05-29T10:23:20Z,False,5b0d2a1f6480fd7d3fb2bde4,@dlongley Agreed. It is the authenticity that is important.,True,False,36,15469.966666666667
w3c/vc-data-model/179,2018-05-29T20:30:45Z,False,5b0db8826480fd858381ef6c,Fixed in bc39f5560c280d971c8deb91d291d8822d92fab5.,True,False,36,15469.966666666667
w3c/vc-data-model/179,2018-05-29T20:31:50Z,False,5b0db8bd6480fd875e0957d8,Fixed in PR #177.,True,False,36,15469.966666666667
w3c/vc-data-model/179,2018-05-29T20:33:44Z,False,5b0db92c6480fd82ab06f274,Fixed in 782accd34b749f362518646d8d392fdd5eee1b23.,True,False,36,15469.966666666667
w3c/vc-data-model/179,2018-05-29T20:37:13Z,False,5b0dba0e6480fd8172126eda,Fixed in dc3b3b19cc8ad888d81bedcb932130ffe38825d6.,True,False,36,15469.966666666667
w3c/vc-data-model/179,2018-05-29T20:37:17Z,False,5b0dba036480fd7da6ea70bd,Fixed in dc3b3b19cc8ad888d81bedcb932130ffe38825d6.,True,False,36,15469.966666666667
w3c/vc-data-model/179,2018-05-29T20:37:22Z,False,5b0dba0b6480fd80c98ecfa4,Fixed in dc3b3b19cc8ad888d81bedcb932130ffe38825d6.,True,False,36,15469.966666666667
w3c/vc-data-model/179,2018-05-29T20:39:27Z,False,5b0dba8b6480fd802f78f7f3,Made all of the changes requested by @dlongley and @David-Chadwick... please re-review so I can pull the PR in.,True,False,36,15469.966666666667
w3c/vc-data-model/179,2018-05-29T21:35:49Z,False,5b0dc7bf6480fd8437c45bc9,"It is rather difficult to comment on individual edits in this large PR,
but the one that I am currently not happy with is the one entitled ""Fix
language around type property."" The text is still too vague in my
opinion, and does not answer my question in #182, viz, what is the
actual purpose of the type property.

On 29/05/2018 21:39, Manu Sporny wrote:
> Made all of the changes requested by @dlongley
> <https://github.com/dlongley> and @David-Chadwick
> <https://github.com/David-Chadwick>... please re-review so I can pull
> the PR in.
> 
> —
> You are receiving this because you were mentioned.
> Reply to this email directly, view it on GitHub
> <https://github.com/w3c/vc-data-model/pull/179#issuecomment-392935648>,
> or mute the thread
> <https://github.com/notifications/unsubscribe-auth/ADe4_z7heuwILDRhXAEUf62v4ptFld17ks5t3bIEgaJpZM4UGH5o>.
> 
",True,False,36,15469.966666666667
w3c/vc-data-model/179,2018-05-29T22:04:22Z,False,5b0dce6d6480fd7d529c6720,"typo ""isuer"" => ""issuer""",True,False,36,15469.966666666667
w3c/vc-data-model/179,2018-05-29T22:05:19Z,False,5b0dcea86480fd7d67595424,"""signatures"" => ""proofs""",True,False,36,15469.966666666667
w3c/vc-data-model/179,2018-05-29T22:07:28Z,False,5b0dcf556480fd872676f359,"I can't remember if we decided to reword these ""SHOULD"" and ""MUST"" statements because they weren't testable or not. Just making a note here in case this was unintentional and needs to be addressed.",True,False,36,15469.966666666667
w3c/vc-data-model/179,2018-05-29T22:20:44Z,False,5b0dd23e6480fd83014d37df,"They should be MUSTs, since they must be enforced by all standard's conforming verifiers. The issuer or holder place policy information in the VC or VP precisely to tell the verifier what it must do.
Note that this does not stop a verifier's implementation ignoring all policy fields and doing what it wants. But in this case it is non-conformant to the standard, and therefore can do what it likes. But the standard does not condone this nor support it.",True,False,36,15469.966666666667
ciena-frost/ember-frost-chart/57,2018-05-30T12:26:09Z,False,5b0e98666480fd7da6eaca52,"
[![Coverage Status](https://coveralls.io/builds/17230304/badge)](https://coveralls.io/builds/17230304)

Coverage remained the same at ?% when pulling **2ab27e4799a3245f72304d9146a1f4655294ec57 on juwara0:setNode** into **747ae3653de27dd9b1924010938757bf9d5b5b67 on ciena-frost:master**.
",True,False,1,0.0
w3c/vc-data-model/179,2018-05-30T15:31:53Z,False,5b0ec4716480fd8148e79dfd,"@David-Chadwick wrote:
> The text is still too vague in my opinion, and does not answer my question in #182, viz, what is the actual purpose of the type property.

Can you recommend some specification text in issue #182 that would result in a PR that you'd approve?

Note that #182 is a separate issue and is not meant to be addressed by this PR. We are tracking it, and thus anything related to #182 shouldn't be a reason to not pull in this PR.",True,False,36,15469.966666666667
w3c/vc-data-model/179,2018-05-30T15:41:01Z,False,5b0ec61d6480fd82ab07634e,Fixed in 94904807a4f23cc7922d44de9f9c6719eddb2b75.,True,False,36,15469.966666666667
w3c/vc-data-model/179,2018-05-30T15:41:06Z,False,5b0ec6206480fd7e8adaf4a4,Fixed in 94904807a4f23cc7922d44de9f9c6719eddb2b75.,True,False,36,15469.966666666667
w3c/vc-data-model/179,2018-05-30T16:02:20Z,False,5b0ecb136480fd83014da5f3,Fixed in 2110618f0e7454bc6357f46942872dc316425c3a.,True,False,36,15469.966666666667
w3c/vc-data-model/179,2018-05-30T16:04:32Z,False,5b0ecb996480fd83adb46c01,"@David-Chadwick, I have made all of the changes that I think have agreement in this PR, please let us know if you have any reasons not to pull this PR in. I think I'm done.",True,False,36,15469.966666666667
w3c/vc-data-model/179,2018-05-30T19:56:23Z,False,5b0f01eb6480fd7f3ebf9459,"@msporny . Ok pull in this PR. The concept I am still unhappy with is the squishy nature of the type property. Specifically the current text says "" All credentials SHOULD specify additional, more narrow types (e.g. ProofOfAgeCredential) such that software systems can use the additional information to more easily process the credential. "" This leaves far too much wiggle room.
In my opinion the above SHOULD should be a MUST, so that the verifier definitively knows what contents to expect in the VC. Otherwise we are back to the long debated issue of what does a verifier do with properties it does not understand or know how to process. Is the VC acceptable or not?
This same comment applies to all the objects with types that are embedded in VCs. The types should be there to tell the verifier exactly what it is receiving.",True,False,36,15469.966666666667
w3c/vc-data-model/179,2018-05-31T14:08:53Z,False,5b1002036480fd802f79f01b,"@David-Chadwick wrote:
> In my opinion the above SHOULD should be a MUST, so that the verifier definitively knows what contents to expect in the VC. Otherwise we are back to the long debated issue of what does a verifier do with properties it does not understand or know how to process. Is the VC acceptable or not?
> This same comment applies to all the objects with types that are embedded in VCs. The types should be there to tell the verifier exactly what it is receiving.

Fixed in https://github.com/w3c/vc-data-model/commit/1843947670b930b8f0f71f8c7fb54688b5d1e16e#diff-eacf331f0ffc35d4b482f1d15a887d3bR677.",True,False,36,15469.966666666667
w3c/vc-data-model/179,2018-05-31T14:11:06Z,False,5b1002836480fd8514cac7e8,Merging as I've responded to all comments and remaining issues are tracked elsewhere.,True,False,36,15469.966666666667
mozilla/DeepSpeech/1398,2018-06-01T15:24:03Z,False,5b1165206480fd83014ec35b,Just realized I forget to switch the `data/smoke_test/` trie language models :-(,True,False,2,310289.36666666664
calamares_____calamares_____966,2018-06-01T17:16:28Z,True,calamares_____calamares_____966_____192460448,"To be honest, I don't think this even needs to be in here. I assume distro maintainers will know exactly what services are present on the ISO image, so this check is kinda redundant.",True,True,55,44095.11666666667
calamares_____calamares_____966,2018-06-01T17:23:02Z,True,calamares_____calamares_____966_____192462006,"rc-update add/del service only creates/removes a symlink from /etc/init.d/service to /etc/runlevels/runlevel/service ... so unless the service file is missing it will always succeed ... 

at this point, my previous comment may look redundant (if exists is needed after all), but I stand by it : distro maintainers should know exactly what services are present on the ISO...",True,True,55,44095.11666666667
calamares_____calamares_____966,2018-06-01T17:35:01Z,True,calamares_____calamares_____966_____192465002,"altough OpenRC allows adding same service into multiple runlevels, this is a bad behaviour...OpenRC is a dependency based init system, everything must be started at a specific point...I don't want to encourage people to add say NetworkManager to sysinit runlevel, which is only intended to start critical services (udev, devfs, sysfs)...

that's why I really think this module should only limit itself to the default runlevel...other runlevels (sysinit, boot) are critical to bring the box up, so the installer must not touch them...",True,True,55,44095.11666666667
calamares_____calamares_____966,2018-06-01T17:42:37Z,True,calamares_____calamares_____966_____192467019,"Don't be pedantic here please @V3n3RiX 
This is an installer module, not a thing to play around with for users.
Reason for a variable holding a runlevel is elogind, which needs to be in boot runlevel. Some distros may not have set it, and I want to keep it open for such cases.",True,True,55,44095.11666666667
calamares_____calamares_____966,2018-06-01T17:44:16Z,True,calamares_____calamares_____966_____192467457,The check for the service to exist is error tolerance. I find it better than catching exit code.,True,True,55,44095.11666666667
calamares_____calamares_____966,2018-06-01T18:08:01Z,True,calamares_____calamares_____966_____192473974,"@udeved  
And that is a $Distribution problem not the installer one.
If you write configuration files on ISO creation then be sure they do
the right thing.

It is insane to allow touching boot runleves.

Well again this is a problem of that Distro to NOT taking care of sane
defaults.

I agree with @V3n3RiX  here .. allow default and nothing else.

",True,True,55,44095.11666666667
calamares_____calamares_____966,2018-06-01T18:13:37Z,True,calamares_____calamares_____966_____192475492,"Well, I can also withdraw the PR. It is really quite simple, either live with a variable holding a runlevel, or don't and I withdraw.",True,True,55,44095.11666666667
calamares_____calamares_____966,2018-06-01T18:24:32Z,True,calamares_____calamares_____966_____192478390,"there's no hard requirement for elogind to be in boot runlevel, that's only a recommandation (which frankly I find weird, since elogind needs dbus, and dbus is usually started in default runlevel **after** elogind) ... truth is elogind may not be present at all in any runlevel as dbus will start it when something calls elogind (dbus activation) ... you can do some tests to confirm this ...

I really think we should focus on user facing services (nm, cups, whatever) aka default runlevel only ... and if you really really really want elogind in boot runlevel, you can do that at iso build time ... ",True,True,55,44095.11666666667
calamares_____calamares_____966,2018-06-01T18:29:00Z,True,calamares_____calamares_____966_____192479579,"@udeved 

don't get me wrong but everyone seems to (ab)use
calamares to push any kind weird workarounds
for broken ISOs , packaging issues etc , upstream.

Yes you offer something and we all discuss a good way to
get it in.

Eat that or die is not going to work , is really simple.",True,True,55,44095.11666666667
calamares_____calamares_____974,2018-06-01T18:44:15Z,True,calamares_____calamares_____974_____192113045,"* openrc-services module
* why reivent stuff? take existing code from systemd one and reuse it
* runlevel is static and 'default' only, any other runlevel setup is insane

This is my implementation of openrc-services module, thanks to @abucodonosor for forcing me to write this.

As my comments in the other PR with similar functionality, any other runlevel setup is redundant, so this is limited to 'default' only. I reused as much code as possible from systemd one...",True,True,22,37198.4
calamares_____calamares_____966,2018-06-01T18:45:02Z,True,calamares_____calamares_____966_____192483573,"I am not the nanny to enforce whatever on distros.
Variable runlevel will stay as it is.",True,True,55,44095.11666666667
calamares_____calamares_____966,2018-06-01T18:59:58Z,True,calamares_____calamares_____966_____192487298,"I don't disrespect you, and if I said something that makes you feel that way, I apologize ... I happen to maintain an OpenRC based distro, and I know for a fact that some things can be done outside of the installer, that's why my strong disagreement with the design of this module ... Everything I said was from a technical view, nothing personal, and I'm sorry you feel that way ...",True,True,55,44095.11666666667
calamares_____calamares_____966,2018-06-01T19:06:16Z,True,calamares_____calamares_____966_____192488829,"I was basically complaining about @abucodonosor tone @V3n3RiX 

I know you maintain an openrc distro, and I am generally willing to contribute a module for non systemd. Hence the PR, but the variable holding the runlevel won't be changed, no way, its a featrze distros may or may not use. No harm is done with a variable, and if distros responsibly use the module, its fine. If they use only default runlevel, its fine, if some distro wishes to add a different runlevel, the code supports it. Its not only elgogind eventually, it could be lvmetad whatever some distro may require on iso.",True,True,55,44095.11666666667
calamares_____calamares_____974,2018-06-01T19:36:47Z,True,calamares_____calamares_____974_____393987757,"Ok, go with your module, its now pointless to have two modules, I'll close my PR. 
I keep patching.",True,True,22,37198.4
calamares_____calamares_____974,2018-06-01T19:56:42Z,True,calamares_____calamares_____974_____393992557,"It's pointless to have 2 modules, true, but it's not pointless to have 2 PR's and let @adriaandegroot decide ...  I made some comments on your PR, this is just to show how the module would look according to those comments and to show I'm not just a blabbermouth ... ",True,True,22,37198.4
calamares_____calamares_____974,2018-06-01T20:09:18Z,True,calamares_____calamares_____974_____393995620,"@V3n3RiX 

This isn't a **** waving contest, really. I know you are an able distro guy, I was just absolutely discontent with the other guy's tone. 
But really, it is more insane to statically do runlevels, only topped by people who set crazy stuff. Then again, this is a installer module, and I trust distro devs they know what they are doing. I just do not get along with enforcing stuff on others, and I like to keep code more flexible.
Calamares is rather a minor focus on artix, time for installer is sparse, if you maintain and develop other stuff.",True,True,22,37198.4
calamares_____calamares_____974,2018-06-01T21:44:49Z,True,calamares_____calamares_____974_____394017412,"We're probably the only 2 OpenRC distros using Calamares as installer and we have a different point of view of what the installer should do regarding services.  The code in this PR is what **I** think is a sane approach, since 99% of services belong to 'default' runlevel (multi-user.target.wants in systemd world) ... 

Your own ISO scripts only touch 'default' runlevel (I took a quick look) same as ours ... It's a bit weird to me you want to expand that to do more stuff in calamares instead ... I guess we will have to agree we disagree ...",True,True,22,37198.4
calamares_____calamares_____966,2018-06-01T21:58:05Z,True,calamares_____calamares_____966_____192525200,"@V3n3RiX:
> I assume distro maintainers will know exactly what services are present on the ISO image

This is not really true. There can be custom remixes of the ISO based on the packages (including the Calamares configuration) from the upstream distribution. The upstream distribution (which writes the configuration) has no way to know what ends up on such a custom ISO.",True,True,55,44095.11666666667
calamares_____calamares_____966,2018-06-01T21:59:15Z,True,calamares_____calamares_____966_____192525355,"I am in no way an OpenRC expert (I use systemd exclusively), but I also don't see why the runlevel to use needs to be hardcoded.",True,True,55,44095.11666666667
calamares_____calamares_____974,2018-06-01T22:03:00Z,True,calamares_____calamares_____974_____394021485,"I think having 2 competing modules doing the same thing floating around is not going to help anybody in the long run. This is going to be `bootloader` vs. `bootldr` all over again. Can you please agree on one implementation covering all use cases? If some people think that adding services to non-default runlevels is useful, then surely that should be an option. All these are packager options and not settable by the average end user anyway.",True,True,22,37198.4
calamares_____calamares_____966,2018-06-01T22:03:12Z,True,calamares_____calamares_____966_____192525932,"@kkofler 

Precisely, tomorrow, a distro dev of an perhaps unknown openrc distro comes and asks for a feature to set a different runlevel, It may even be a custom runlevel, eg nonetwork whatever. We would add back stuff we just ripped out. I find the insistence to hardcode the runlevel not wise.",True,True,55,44095.11666666667
calamares_____calamares_____966,2018-06-01T23:42:40Z,True,calamares_____calamares_____966_____192538019,"I don't think is upstream distributions job to even care about what ends up in such remixes. You have your own Fedora remix, do you take everything as is, or do you make adjustments to suit your needs? ",True,True,55,44095.11666666667
calamares_____calamares_____966,2018-06-02T00:04:41Z,True,calamares_____calamares_____966_____192539768,"Well, the situation is a bit particular because I maintain both the remix (Kannolo) and the Fedora package for Calamares. I tried hard to make the configuration shipped by the Fedora package work for remixes too. (I even pick up the branding from where a Fedora Remix normally puts it to autogenerate a Calamares branding.) I still do a couple of tweaks to the Kannolo Calamares configs, but the idea is that Calamares ought to work even without those tweaks.",True,True,55,44095.11666666667
calamares_____calamares_____966,2018-06-02T00:10:07Z,True,calamares_____calamares_____966_____192540156,"Interesting @kkofler 

We take a slight different approach to the conf files.
upstream installs the standard conf files in /sur/share/calamares/modules, we override them in /etc/calamares/modules.
But, the build script for iso writes some of the distro overrides conf, eg services based on the build script's conf. Ie, we hand over the the conf values of the buildscript to calamares module conf files where required to get around the issue of packaging hell with basically variable conf.",True,True,55,44095.11666666667
calamares_____calamares_____974,2018-06-02T01:32:43Z,True,calamares_____calamares_____974_____394046798,"i plan on using calamares to install openrc also - if youre looking for a tie breaker i dont think it is necessary to refer to the specifics - probably logic should be enough here

if the argument is that 99% of cases are ""foo"" and so therefore ""foo"" should be hard-coded in; that is the same as saying that anyone who wants to do something in the remaining 1% will need to patch - so the question would be: is this too much work to support that 1% use-case? or would it be so difficult to implement that it should be left to the special case that requires it (and maybe they will send in a patch here)? or would accommodating that 1% use-case? be problematic for the 99% general cases?

what exactly would be the value of hard-coding anything unless there is a critical reason to specifically prevent any alternative? what could possibly be the downside of leaving the option open? after all, an option that is not changed from its default is equivalent to the hard-coded mandate - yes?
",True,True,22,37198.4
calamares_____calamares_____966,2018-06-02T08:04:07Z,True,calamares_____calamares_____966_____192553353,"The exact way the conf files are handled in the Fedora Calamares package is that I install my configuration to `/usr/share/calamares/modules` (I patch the upstream conf files to the settings I need), and remixes such as Kannolo can then write further customizations to `/etc/calamares/modules` (which ships empty in the package).",True,True,55,44095.11666666667
calamares_____calamares_____974,2018-06-02T09:51:09Z,True,calamares_____calamares_____974_____394074571,"my argument is distro maintainers should do their part, and try not to force distro specific workarounds into the installer...calamares is an installer and shouldn't be used by distros as a fix-up tool for some internal quirks...

the only argument for supporting boot runlevel is elogind, which is not a requirement, and I already explained myself in the other PR...

but why stop there? ... let's support sysinit runlevel as well which is much more insane ... ",True,True,22,37198.4
calamares_____calamares_____974,2018-06-02T10:53:03Z,True,calamares_____calamares_____974_____394078134,"let's give some examples : 

Runlevel: sysinit
 sysfs                [  started  ]
 devfs                [  started  ]
 udev                 [  started  ]
 dmesg                [  started  ]
 kmod-static-nodes    [  started  ]
 opentmpfiles-dev     [  started  ]
 udev-trigger         [  started  ]
 udev-settle          [  started  ] 

Runlevel: boot
 hwclock           [  started  ]
 modules           [  started  ]
 lvmetad           [  started  ]
 lvm               [  started  ]
 device-mapper     [  started  ]
 dmcrypt           [  started  ]
 fsck              [  started  ]
 root              [  started  ]
 mtab              [  started  ]
 swap              [  started  ]
 localmount        [  started  ]
 procfs            [  started  ]
 sysctl            [  started  ]
 bootmisc          [  started  ]
 termencoding      [  started  ]
 consolefont       [  started  ]
 urandom           [  started  ]
 loopback          [  started  ]
 binfmt            [  started  ]
 keymaps           [  started  ]
 hostname          [  started  ]

These are pretty much **all** services that **need** to be started from these 2 runlevels. Do we really want calamares to even thouch them ? These runlevels are usually touched by packages or packages-scripts, and you'll find these enabled in both live and installed environment alike ... 

In a way, these are systemd's basic.target or whatever it's called. Systemd services module won't allow messing with these (systemd cant do it anyway) , why should openrc services allow it? Systemd services module plays around with multi-user.target only, so this module does the same : plays with 'default' runlevel only.",True,True,22,37198.4
calamares_____calamares_____966,2018-06-03T05:40:26Z,True,calamares_____calamares_____966_____192577731,"I think this discussion deviated a lot :) .. but may be just me.

IMHO, an installer should do only his intended job: do some preparation on the HDD, deploy the system, do some configs. But those configs should be kept to a minimum, to the level of 'what an inexperienced user can choose and handle'.

Major system tweaks, at the level where the system can easily render un-bootable/unusable should be handled by the distro devel/maintainer, otherwise the installer is no longer an installer but tend to became a patching/hacking tool.

I am watching calamares since it was a small octopus and I loved exactly the idea of modularity: you can have as much as many modules you want for any particular case.
And if one does not exist for an edge case, the distro dev can easily add his own, or tweak an existing one, the actual modules are written with self explanatory code for my eyes.

But having mega-super modules, tweaked for all possible scenarios, I think is a terrible idea. The code should be kept to a level of 'do what is generic and really useful'.
I really don't understand why other runlevels are needed ... even the author says is not using them in fact, the rest of the cases where 'may be needed later' are just speculations.
I agree, hard-coding it is not a good idea and i hate such too ... but in the end, the discussion is:
There is **a real** need for **other** runlevels to be handled by the installer?",True,True,55,44095.11666666667
calamares_____calamares_____966,2018-06-03T06:06:41Z,True,calamares_____calamares_____966_____394139575,"not particularly related to the actual discussion:
- the name of the module may me a bit confusing. A name containing 'cfg' leads me to the idea it is configuring that service/package .. which may not be 100% true, in fact the this module is just enabling/disabling others.
May be more suggestive if the module is named 'openrc-services' ?
(and the actual existing 'services' module renamed to 'systemd-services?')

I know, some distro maintainers will scream if suddenly an existing module is renamed, but in my opinion will be more suggestive ....
",True,True,55,44095.11666666667
calamares_____calamares_____966,2018-06-03T06:24:53Z,True,calamares_____calamares_____966_____192578509,">> There can be custom remixes of the ISO based on the packages (including the Calamares configuration) from the upstream distribution. The upstream distribution (which writes the configuration) has no way to know what ends up on such a custom ISO.

That's true, but I think any decent dev team has a minimum of skills to figure out what such source iso contains ... it is not rocket science to unpack and look into it.
Otherwise, if the development process of the distribution is sort of 'I blindly grab something and patch it' .. i don't think such distribution is trustworthy ...",True,True,55,44095.11666666667
calamares_____calamares_____966,2018-06-03T06:52:24Z,True,calamares_____calamares_____966_____192579117,"> Precisely, tomorrow, a distro dev of an perhaps unknown openrc distro comes and asks for a feature to set a different runlevel, It may even be a custom runlevel, eg nonetwork whatever.

Good point!
So, what is the limit to extend calamares? Put into it 'whatever somebody may dream tomorrow' .. or keep it at a decent level of flexibility and stability (which still has to be defined, but that is a different story .. )?",True,True,55,44095.11666666667
calamares_____calamares_____966,2018-06-03T07:10:01Z,True,calamares_____calamares_____966_____192579528,"as for the 'hard-coding' issue, the solution may very simple:
```
SYNOPSIS
     rc-update [-s, --stack] add service [runlevel ...]
 # rc-update add cupsd
 * rc-update: cupsd already installed in runlevel `default'; skipping
# rc-update del cupsd
 * service cupsd removed from runlevel default
 # rc-update add cupsd
 * service cupsd added to runlevel default
```
There is no need to use 'runlevel' at all. Without it, rc-update will default .. to *default*.
And I think there is a serious reason to be designed like that ... but we have to ask the openrc dev guys for it ...",True,True,55,44095.11666666667
calamares_____calamares_____966,2018-06-03T07:15:42Z,True,calamares_____calamares_____966_____192579663,"as for the 'hard-coding' issue, the solution may be very simple:
```
SYNOPSIS
     rc-update [-s, --stack] add service [runlevel ...]
# rc-update add cupsd
 * rc-update: cupsd already installed in runlevel `default'; skipping
# rc-update del cupsd
 * service cupsd removed from runlevel default
# rc-update add cupsd
 * service cupsd added to runlevel default
```
There is no need to use 'runlevel' at all. Without it, rc-update will default .. to *default*.
And I think there is a serious reason to be designed like that ... but we have to ask the openrc dev guys for it ...",True,True,55,44095.11666666667
calamares_____calamares_____966,2018-06-03T07:18:16Z,True,calamares_____calamares_____966_____192579712,"@bionel 
There is a real need for other than default runlevels to be handled by the installer?


Are you guys seriously asking to hardcode ""default"" runlevel? Seriously?
The distro provides the conf, and if the conf has only default in it, all fine.
I will not hardcode a specific runlevel, if it can be configured via conf already.",True,True,55,44095.11666666667
calamares_____calamares_____966,2018-06-03T07:27:31Z,True,calamares_____calamares_____966_____192580023,"@udeved 
See my latest comment. In fact, we suggest to remove the runlevel completely, as default is a sane default also by openrc design",True,True,55,44095.11666666667
calamares_____calamares_____974,2018-06-03T07:29:18Z,True,calamares_____calamares_____974_____394143171,"> my argument is distro maintainers should do their part, and try not to force distro specific workarounds into the installer

Uhm, because you think distros do something you dislike, you also think its your duty to force these distros to not do what they do? 
Who is forcing you to use a workaround with the module? And why do you want to force distros to stick to a specific runlevel?
",True,True,22,37198.4
calamares_____calamares_____966,2018-06-03T07:31:32Z,True,calamares_____calamares_____966_____192580140,"@bionel 

I reject such thing.
I regard your insistence to take away a feature already present has absolutely no valid reason.",True,True,55,44095.11666666667
calamares_____calamares_____966,2018-06-03T07:39:38Z,True,calamares_____calamares_____966_____192580357,"That said, I take for example arch philosophy into account, who would discourage from setting runlevel or so with a package. I may not like it, but it exists, and it is taken into account.",True,True,55,44095.11666666667
calamares_____calamares_____966,2018-06-03T07:43:58Z,True,calamares_____calamares_____966_____192580433,"@udeved 
well .. i think you misunderstand something.
i am not suggesting anything, in the end it is not my business what will be merged or not, as i am not a very active developer (my time for hobby project is limited)
My comments are from a technical perspective and from my experience with other stupid mistakes I made in the past
If you take this personally, than I am sorry, this was not my intention.

I am trying to be neutral, even if I am involved at a certain level in redcore development.
I always try to keep my mind away for what I am currently involved in and trying to see both positive and negative aspects.

Indeed, having access to runlevels may be regarded as a 'feature'.
But the question remains: It is sane to have it at the installer level? And is it really needed?
With great features come greater responsibilities ...

Such feature may open a door for further potential issues caused by wrong usage.
Will you deal further with all potential issues raised by miss-usage of this?
Or once the code is merged into upstream ... no longer my problem, calamares team should handle it?",True,True,55,44095.11666666667
calamares_____calamares_____966,2018-06-03T07:56:34Z,True,calamares_____calamares_____966_____192580767,"@bionel 

I return the question.

 It is sane to have it at the installer level? And is it really needed?

Yes, ansolutely sane, since the distro devs chose the runlevel for the service, and distro devs may have a reason to quickly test or configure non default.

If the need arises to have a different than default runlevel configured, what are distro devs gonna do? Patching, readding a lost feature because people insisted to have a hardcoded runlevel? What is you suggestion there?",True,True,55,44095.11666666667
calamares_____calamares_____966,2018-06-03T08:03:49Z,True,calamares_____calamares_____966_____192580957,"> Patching, readding a lost feature because people insisted to have a hardcoded runlevel?

As i said, there is no need to hardcode anything. Just stick with the default.
Different runlevels has to be handled at a different development stage (e.g before/after squash building.
And that will be quicker too, because sanity testing should be done before actually packing/shipping the ISO image.
On the ISO himself, only smoke/regression testing is done in a sane development cycle.",True,True,55,44095.11666666667
calamares_____calamares_____966,2018-06-03T08:10:08Z,True,calamares_____calamares_____966_____192581138,"@bionel 

Do you understand the issue we discuss?
The code has no reference to a specific runlevel, it loads it from conf. 
Some insist to remove this in favor of setting a default runlevel in code, which is crazy in my view.
",True,True,55,44095.11666666667
calamares_____calamares_____966,2018-06-03T08:15:39Z,True,calamares_____calamares_____966_____192581257,"@udeved 
Did you read the rc-update manpage?
```
SYNOPSIS
     rc-update [-s, --stack] add service [runlevel ...]
```
So, adapt the code, remove the level hardcoding from the module and from the conf. Problem solved.",True,True,55,44095.11666666667
calamares_____calamares_____966,2018-06-03T08:18:11Z,True,calamares_____calamares_____966_____192581322,"As long as gentoo documentation on their wiki, in the ebuilds, on their forums use explicitly the openrc concept of named runlevels, I will not change it. Your point is moot.",True,True,55,44095.11666666667
calamares_____calamares_____966,2018-06-03T08:24:10Z,True,calamares_____calamares_____966_____192581471,"> As long as gentoo documentation on their wiki, in the ebuilds, on their forums use explicitly the openrc concept of named runlevels, I will not change it. Your point is moot

i think this is not a valid argument, for few reasons:
 - i think you was mentioning you are a dev on an arch based distro, not gentoo
 - gentoo docs is about emerge-ing, aka compiling/packaging. has nothing to do with actually installing a gentoo based distro
 - there is no way to support a pure stage3 gentoo install from calamares. to build a gentoo based distro with cala, a lot of additional work is needed. to support a pure gentoo install, calamares has to be completely re-written",True,True,55,44095.11666666667
calamares_____calamares_____966,2018-06-03T08:33:00Z,True,calamares_____calamares_____966_____192581673,"@bionel 

""change the code"" you demand, to what?

Gentoo have calamares in portage
A module is supposed to cover as many distros as possible
I neither cater to redcore specifically, nor to artix, the module is meant to be as flexible as possible.
Gentoo, the mother of openrc, specifically use 

rc-update <add/del> <svc> <runlevel>

all over the place. 
The code of the module does the same, just as rc-update is intended to be used, and that will not change.",True,True,55,44095.11666666667
calamares_____calamares_____966,2018-06-03T08:39:00Z,True,calamares_____calamares_____966_____192581834,"I give up, i am out of ideea's
If the arguments are 'gentoo have that' without actually knowing how/when it is used, or 'i wrote that and i don't want to remove it' ... there is no logical reason for me to continue the thread.
I let the decision to calamares staff, in the end it is their team which will have to deal further with the code, once merged.",True,True,55,44095.11666666667
calamares_____calamares_____966,2018-06-03T08:43:07Z,True,calamares_____calamares_____966_____192581965,"Technically, I am part of calamares staff.
I can reduce the issue to its core, that is, some insist to hardcore the runlevel and force consuming distros to be dictated by upstream module what runlevel they can use. If they have different needs, they are supposed to patch the module.
No way.",True,True,55,44095.11666666667
calamares_____calamares_____966,2018-06-03T11:13:16Z,True,calamares_____calamares_____966_____192585814,"@udeved 

While hardcoding is not nice , allowing touching critical runleles that way
is broken too.

OpenRC by itself is not as smart to dissallow you breaking your system
my enabling/disabling services in critical runlevels.

We do not allow that to systemd , while 'possible' and very easy 
to add that code and it should not be allowed to any other implementation.

From 'Calamres' point of view , whatever you agree or not , there are 
*two* cases ( from which one is not yet fully implementet ) to touch boot
runlevel in OpenRC.

* 1 LUKS
* 2 LVM

For case 1 that could be done in the openrcdmcryptcfg if needed.
For case 2 we need wait and see how the end implementation looks like.

However I see only 2 ways of allowing touching boot and sysinit

* 1 Allow ony 'add' to everything ( even when bad services can be added
     that is really Distribution problem ) and filter boot && sysvinit for 'del'
* 2 Filter boot and sysinit for both cases and allow whatever else

Also this is not about 'dicating' anything but about having something
sane ( or almost sane ) upstream , since we the ustream have to
maintain and deal with user bug reports , not you.

'No way' .. 'damn eat my code' is not going to work when you want
to get your code upstream.

I'm not against you or your Distribution , it doesn't matter to me who uses that.

I would tell @V3n3RiX or @bionel or even any gentoo peoples the same thing.

ISO creation things , how we do remixes and these things doesn't matter at all here.

It also does not matter what could be done but what should be done , 
do you agree ? 



",True,True,55,44095.11666666667
calamares_____calamares_____974,2018-06-03T13:32:46Z,True,calamares_____calamares_____974_____394162722,"No, I'm not trying to force you to do anything. You can put whatever crap you want in your distro. What I'm trying to prevent is that crap spreading into calamares. You may not care about sane design choices and use duct tape all over the place, but I do care. It's true that I'm not forced yo use the workarounds, I don't need them in the begin with. But you really shouldn't force **your** workarounds into upstream code.",True,True,22,37198.4
MoonchildProductions_____UXP_____395,2018-06-03T13:39:30Z,True,MoonchildProductions_____UXP_____395_____394163148,Was this partially re-landed? I noticed it in the commit history this morning.,True,True,42,11329.4
calamares_____calamares_____975,2018-06-03T13:47:54Z,True,calamares_____calamares_____975_____192248603," !!!NOT for merging , please please don't!!!
 Demo patch to show that 'could be done' should 'just not be done'
 Even it looks flexible _that should never end in any serious upstream_
 Having that in a Distribution , as own patch fine , devels *may* know what
 they are doing. Opening the pandora box exposed as option for users ohh ,
 have fun to handle the storm of bug reports.

 But wait is not a user option ?
 Well is not but be sure they'll use it..
 And be sure even devels will trap into badness with these.
 ( You think I'm wrong ? Use search button on issue tracker and figure )",True,True,6,34615.01666666667
MoonchildProductions_____UXP_____395,2018-06-03T13:50:50Z,True,MoonchildProductions_____UXP_____395_____394163791,"I was also surprised when I saw that `mach` suddenly started a complete rebuild, but I thought that it was already discussed somewhere and I just missed it.",True,True,42,11329.4
calamares_____calamares_____975,2018-06-03T14:06:16Z,True,calamares_____calamares_____975_____394164691,Jus demo code .. really do not merge that..,True,True,6,34615.01666666667
calamares_____calamares_____974,2018-06-03T14:06:58Z,True,calamares_____calamares_____974_____394164736,">But you really shouldn't force your workarounds into upstream code.

Where do I do that? Amazing, because I don't.
I simply don't get this whining about nothing.
You provide the service conf, you decide what runlevel. The code does not care for the runlevel name, it is configured in the conf.
If some distro wants to have a office runlevel because the distro is geared towards office, they can do that.
",True,True,22,37198.4
calamares_____calamares_____974,2018-06-03T14:40:37Z,True,calamares_____calamares_____974_____394166914,"> If some distro wants to have a office runlevel because the distro is geared towards office, they can do that.

I was never against custom runlevels which OpenRC supports, I was only against sysinit and boot runlevels. And even if a distro wants custom runlevels, that piece of code of yours won't be enough for it to boot into that custom runlevel. You need to touch other parts of calamares as well. I'll let you guess which ones.",True,True,22,37198.4
calamares_____calamares_____966,2018-06-03T16:30:11Z,True,calamares_____calamares_____966_____192595362,"""Gentoo, the mother of openrc, specifically use
rc-update <add/del> <svc> <runlevel>""

You do understand that is only a syntax right? Runlevel is only needed when for some reason you want/need to add a service to a specific runlevel. Otherwise the service it will be added to 'default' runlevel.

shakuras /etc/conf.d # rc-update add fancontrol
 * service fancontrol added to runlevel default
shakuras /etc/conf.d # rc-update del fancontrol
 * service fancontrol removed from runlevel default

So, I adjusted my PR to go with OpenRC's defaults, removing the hardcode for the runlevel. I will also adjust **openrcdmcryptcfg** for when LUKS is used and when LVM support comes into calamares I'll also take care of that one. 

Calamares is a high priority in Redcore, and I intend to fully support the code I wrote for it, and expand it when good arguments are being made, when required. I'll not just add code for the sake of ""one days pigs may fly, and some other unknown openrc distro **may** want to do this"".

Just as a side note : calamares is indeed in Gentoo's tree, and I'm happy to report, I'm the one who wrote the first ebuild for it, back in calamares 1.1 days, about 2 years ago.",True,True,55,44095.11666666667
calamares_____calamares_____966,2018-06-03T17:10:52Z,True,calamares_____calamares_____966_____192596501,"So,what is all the fuzz about?
You want to enforce a default only, I am against that.
If you modules goes upstream, I won't use it and will stick with a flexible module that allows any runlevel, even though I may not use it right now.
I still fail to see the in my view ridiculpous resistance to a runlevel variable, and why we have two competing PRs.",True,True,55,44095.11666666667
MoonchildProductions_____UXP_____395,2018-06-03T17:28:49Z,True,MoonchildProductions_____UXP_____395_____394177652,"Yes I partially re-landed this for GCC (adding the flags for sse2 in the default compiler config). The other solution would not enforce anything, just prevent unwanted flags.",True,True,42,11329.4
calamares_____calamares_____974,2018-06-03T17:32:44Z,True,calamares_____calamares_____974_____394177913,"I am basically done going around in circles. You give no valid reason why to remove a variable in favor of a fixed runlevel. Again, this is no competition to prove an ego. 
dmcrypt is something I would not want in the service module, because its done differently on arch with initcpio.
If you configure calamares to remove essential services from a sysinit runlevel, then that is frankly your problem, and you obviously did something wrong with package deployment.
I am against trying to dictate distros how they do things, which is what your module does.",True,True,22,37198.4
calamares_____calamares_____974,2018-06-03T18:06:00Z,True,calamares_____calamares_____974_____394180055,"I can say the same thing : if you need calamares to configure **boot** runlevel just for **elogind** (your comment, not mine), then you obviously did something wrong with package deployment. And if I take in consideration your latest **manual intervention required** news, then I'm sure you did just that. Fix your own broken thing, and do not try to force your workarounds in here. Even if this module is slightly more limited, it is useful for Artix (you do have a default runlevel don't you?), whereas yours is of no use for Redcore. Being Gentoo based we do things as upstream intended, we don't have our own speciffic workarounds.

And dmcrypt being done different in arch is once again, **your** problem. In OpenRC that service goes into **boot** runlevel. This is how it's done upstream in Gentoo, and over here in Redcore. 

So please, once again, keep your distro speciffic workarounds to yourself. ",True,True,22,37198.4
calamares_____calamares_____966,2018-06-03T18:10:09Z,True,calamares_____calamares_____966_____192597976,"don't use it then...I won't use yours if it goes upstream...I'll even ban it from my calamares package, so it never gets installed in the first place...since what this module can do is beyond insane...",True,True,55,44095.11666666667
calamares_____calamares_____966,2018-06-03T18:15:05Z,True,calamares_____calamares_____966_____192598070,"maybe because you refuse, without any logical reason, to improve the code you wrote?
if you don't want to remove the runlevel's usage, than treat the dangerous cases (prevent it to remove services from from boot and sysvinit level at a minimum)
Is that hard to add few lines of code to make it proper?

Also, the 'error handling' can be improved, but seems like you know the only one way of doing things ... and i am sorry to say, that doesn't looks like a sane/safe way ...",True,True,55,44095.11666666667
calamares_____calamares_____974,2018-06-03T18:16:16Z,True,calamares_____calamares_____974_____394180710,"> So please, once again, keep your distro speciffic workarounds to yourself.

Oh the irony, now you say, its done so on redcore and gentoo, and this must be valid on all distros using openrc.
Btw, nope, we don't need to configure any boot runlevel on artix. You are wrong.
I think you are getting way too defamatory. and I gonna leave this useless discussion now.

",True,True,22,37198.4
calamares_____calamares_____966,2018-06-03T18:18:13Z,True,calamares_____calamares_____966_____192598159,I won't do any further work with two competing PR. This needs to be resolved first.,True,True,55,44095.11666666667
calamares_____calamares_____974,2018-06-03T18:27:07Z,True,calamares_____calamares_____974_____394181386,"If you don't need it, why try force it in here then? And if you don't need it, then this module will do just fine on Artix. I'm damn sure you do need to configure **default** runlevel. 

Default runlevel is valid for all OpenRC distros ... What you're trying to push is not. That's what I'm trying to explain to you even since the beginning ... I think I rest my case!",True,True,22,37198.4
calamares_____calamares_____966,2018-06-03T18:27:25Z,True,calamares_____calamares_____966_____192598350,"as i thought from the beginning .. it is not about the right way to do it .. but it is about who is doing it :)

well .. mixing ego into the code is not the best way to properly contribute to an open project ....",True,True,55,44095.11666666667
calamares_____calamares_____974,2018-06-03T18:40:15Z,True,calamares_____calamares_____974_____394182214,"Btw, if dmcrypt service is really handled different on Arch based distros, I won't try to merge the piece of code I wrote...I don't wanna **force** things ... Just wanna have **sane** defaults ... that's all",True,True,22,37198.4
calamares_____calamares_____974,2018-06-03T18:45:56Z,True,calamares_____calamares_____974_____394182614,"It can be handled in any OpenRC Distro equal .. no matter the initramfs impelmentation.

But is this different issue.

",True,True,22,37198.4
calamares_____calamares_____974,2018-06-03T19:15:20Z,True,calamares_____calamares_____974_____394184478,"> I am against trying to dictate distros how they do things....

That does not matter .. Is your personal opinion and not an technically reason.

Calamares restricts all kind things already , and 'dictates' already in some places
what is allowed what is enforced and what won't be upstream , for the one or the other
reason.

> If you configure calamares to remove essential services from a sysinit runlevel, then that is frankly your problem

Again .. is not about you.. Once is upstream it will not be you who takes the bugs.
Is not you who need write some sane docs , etc ..

It just shows your bad attitude.

Technically systemd services could have support for disabling targets 
or masking any kind things.. Now guess why that is not upstream and won't be..

All about this is to find sane defaults not about what could be done.

I've told in the other PR already runlevels support can be added with
some filtering but yet you seems to ignore everything.


",True,True,22,37198.4
calamares_____calamares_____975,2018-06-03T19:23:41Z,True,calamares_____calamares_____975_____394184991,This is an incredibly bad reason to file a PR.,True,True,6,34615.01666666667
MoonchildProductions_____UXP_____395,2018-06-04T01:37:57Z,True,MoonchildProductions_____UXP_____395_____394212191,So does that override flags in MOZ_OPTIMIZE?,True,True,42,11329.4
MoonchildProductions_____UXP_____395,2018-06-04T02:47:53Z,True,MoonchildProductions_____UXP_____395_____394220466,"Now, before getting in your ivory tower again you could have taken a NORMAL approach and simply ask. Or better yet, look at how GCC handles these command-line flags when specified, before accusing me of all sorts of things. MSVC might override, indeed, but GCC does not. `-msse2` and other `-m` flags like it only **enable** the use of the instruction sets (with `no` variants disabling them). You think I didn't look this up? 

I'm tired of this, Tobin. Every single time you think you have a solution it has to be exactly your solution and nothing else without a ton of infighting or needing exact control over anyone doing anything that is even within a mile of ""your"" code. We discussed this before, and you even said you were fine with these flags as a minimum so what the fuck are you doing getting in my hair when I make sure sse2 is used? And no, that is NOT branding dependent.

Your solution prevents people overriding the minimum with `no` optimization flags, which is perfect, but it doesn't actually set the use of the instruction set. Requiring that people manually add it to their optimize flags (what you apparently ""intended"" but never saw fit to let anyone know -- I'm still not clairvoyant) is backwards.",True,True,42,11329.4
MoonchildProductions_____UXP_____395,2018-06-04T02:49:52Z,True,MoonchildProductions_____UXP_____395_____394220692,"Also
> No, because no one right now knows the behavior when both are specified..

Read the gcc manual. It's all in there. https://gcc.gnu.org/onlinedocs/gcc/x86-Options.html#x86-Options",True,True,42,11329.4
MoonchildProductions_____UXP_____395,2018-06-04T03:05:01Z,True,MoonchildProductions_____UXP_____395_____394222457,"So what does ""depresses"" mean that the SSE2 instructions are still there but it will add and use AVX for AVX2 instead? Or does it mean it makes -msse2 like it isn't present? ""When needed"" when is that?

When I specify a valid -m flag I expect it to be the only one in play.. So is this the case?",True,True,42,11329.4
MoonchildProductions_____UXP_____395,2018-06-04T03:10:04Z,True,MoonchildProductions_____UXP_____395_____394223046,"> Yes I partially re-landed this for GCC (adding the flags for sse2 in the default compiler config). The other solution would not enforce anything, just prevent unwanted flags.

That would be a better solution. Anyway I'm going to stay out of this now. ",True,True,42,11329.4
MoonchildProductions_____UXP_____395,2018-06-04T03:20:37Z,True,MoonchildProductions_____UXP_____395_____394224169,"Know what.. That's fine.. I'm done.. Do what you are gonna do then.. UXP belongs to you as your huge declairation on the readme says... I don't care anymore.

The platform aka moonchild-central isn't my consern anymore. I have more pressing things to do than micromanage this codebase I slaved over for four months.

I am now hands off in every respect outside of Phoebus and when that is done so am I.",True,True,42,11329.4
wix/yoshi/325,2018-06-04T10:01:03Z,False,5b150de56480fd7f3ec1ad1a,let's use `require.resolve()` instead?,True,False,1,0.0
calamares_____calamares_____975,2018-06-04T10:31:36Z,True,calamares_____calamares_____975_____394309131,"IMHO, this is a valid feature and should be added (but as a new pull request without all your negative comments). I do not see a valid reason to not support `mask`, given how trivial it is to support it.",True,True,6,34615.01666666667
MoonchildProductions_____UXP_____395,2018-06-04T10:35:29Z,True,MoonchildProductions_____UXP_____395_____394310125,"> I am now hands off in every respect outside of Phoebus and when that is done so am I.

Okay. Your choice and your freedom. I appreciate you're willing to stick around to bring Phoebus to completion instead of ragequitting. Thank you.",True,True,42,11329.4
MoonchildProductions_____UXP_____395,2018-06-04T10:56:32Z,True,MoonchildProductions_____UXP_____395_____394315023,"> So what does ""depresses"" mean? That the SSE2 instructions are still there but it will add and use AVX for AVX2 instead? Or does it mean it makes -msse2 like it isn't present? ""When needed"" when is that?
> 
> When I specify a valid -m flag for instriction set most expect it to be the only one in play.. So is this the case?

To answer these questions: AVX is a special case because AVX is mutually exclusive with SSE*. All these flags in GCC only flag to the compiler ""You are allowed to use these instructions"", and in practice this means the ""highest"" of the class is generally used when applicable to specific code. _When_ they are used is determined _by the compiler_ based on the code being compiled (ask GCC devs for details). In the case of AVX, the ""depresses"" statement, if I read correctly, acts like `-msse*` isn't specified, in effect overriding them and always using AVX instructions when both classes of instructions are possible. All the other flags are simply ""You can use this if you want to"" for specific pieces of compiled code.",True,True,42,11329.4
rust-lang-nursery/rust-clippy/2558,2018-06-07T10:35:19Z,False,5b190a716480fd86f190e352,"Ping @mikerite, `![feature(duration_extras)]` is [stable in 1.27.0](https://github.com/rust-lang/rust/pull/50017).",True,False,4,116011.7
rust-lang-nursery/rust-clippy/2558,2018-06-09T08:26:33Z,False,5b1b8f3c6480fd7de96271ea,I'll open a new pull request after rebasing.,True,False,4,116011.7
rust-lang-nursery/rust-clippy/2558,2018-06-09T08:28:52Z,False,5b1b8fcb6480fd7f3ec4853d,This request was superseded by  #2839.,True,False,4,116011.7
opnsense_____core_____2466,2018-06-15T14:54:37Z,True,opnsense_____core_____2466_____195200253,"This conforms to current recommendations and best practices for a
128-bit security margin.

2048 is still the minimum recommended, but 2048-bit RSA only aligns to a
112-bit security margin, roughly analogous to 3DES. AES-128, the
minimum recommended cipher, requires a 3072-bit RSA key and a 256-bit digest
(SHA256) to provide an equivalent security level in all cryptographic
components.",True,True,24,5676.266666666666
opnsense_____core_____2466,2018-06-15T15:32:03Z,True,opnsense_____core_____2466_____397658588,Need to further test this.,True,True,24,5676.266666666666
opnsense_____core_____2466,2018-06-15T15:59:04Z,True,opnsense_____core_____2466_____397666174,Additional question: Where are we sourcing the sample DH parameter files from?,True,True,24,5676.266666666666
opnsense_____core_____2466,2018-06-17T19:15:24Z,True,opnsense_____core_____2466_____397899998,"This should be split in two: 3072 bits for certificates and 3072 bits for DH. For the latter it may be more favourable to avoid adding a lot of ""odd"" DH default params to the system, because...

... to answer your question we sporadically provide new parameters and it takes a long time to update them if they grow in number (and bit size).",True,True,24,5676.266666666666
opnsense_____core_____2466,2018-06-17T19:24:02Z,True,opnsense_____core_____2466_____397900467,"With https://github.com/opnsense/core/commit/a20aacb4a you can now create custom DH files via cron... As soon as they are created, you can use them. But it requires to set ""custom"" dh parameter usage under system: settings: misc. These are all changes for the upcoming 18.7.",True,True,24,5676.266666666666
opnsense_____core_____2466,2018-06-17T19:26:51Z,True,opnsense_____core_____2466_____397900653,"@fichtner In the case of DH, 3072 is a standard DH parameter size. See also RC 7919. The sample DH file provided in my merge request is the IETF standard DH group for that size. https://tools.ietf.org/html/rfc7919",True,True,24,5676.266666666666
opnsense_____core_____2466,2018-06-17T19:37:48Z,True,opnsense_____core_____2466_____397901317,"I know it's a standard, but if I regenerate fr a release it already takes a while, adding more standard sizes will make it even longer, making it less likely to provide new files for the existing ones.",True,True,24,5676.266666666666
opnsense_____core_____2466,2018-06-17T20:11:06Z,True,opnsense_____core_____2466_____397903218,"So, more to the point, you should not be generating DH parameters for releases. You should be using the default ones from RFC 7919. If the end-user wants to use custom parameter sets, they should generate them themselves.",True,True,24,5676.266666666666
opnsense_____core_____2466,2018-06-18T05:08:08Z,True,opnsense_____core_____2466_____397943198,"> So, more to the point, you should not be generating DH parameters for releases. You should be using the default ones from RFC 7919. If the end-user wants to use custom parameter sets, they should generate them themselves.

Fine, so who will do the work necessary to avoid lower security in these circumstances? When will we be switching to a default regeneration of DH parameters and how will it be done? How do we minimise the gap between using default parameters and custom parameters in new installs? Do we have all the code in place or do we need to do more? How much *measurable* security will we gain from doing what is suggested here?

Besides this my review points still stand... if you want a change merged please split it into Cert and DH parts...",True,True,24,5676.266666666666
opnsense_____core_____2466,2018-06-18T12:02:34Z,True,opnsense_____core_____2466_____398031320,"> Fine, so who will do the work necessary to avoid lower security in these circumstances?

You're already lowering security by generating your own DH parameter sets with each release. This is woefully at odds with cryptographic best practices. There are reasons that standard DH parameter sets exist: These standard sets have been audited to ensure that weak values haven't been selected as a result of bug/accident/malice. By generating your own and including them as the default sets in the release, you're asking every OPNsense end user to trust you. The simpler response, both technically and administratively, is to ship the standard DH parameters from RFC 7919. The end user is using audited parameters that are widely regarded to be safe (they've been used with IPsec for years), and you don't have to deal with generating parameter sets (a long and tedious process.)

> When will we be switching to a default regeneration of DH parameters and how will it be done?

DH parameters aren't keys. They're not private. They don't need to be regenerated unless some issue is found with the parameter set itself. That's another virtue in using standardized parameter sets: if an issue is discovered with a DH group from RFC 7919, it will be widely known and publicized. Having some cron-based regeneration of DH parameters is, at best, unnecessary, and at worst dangerous if the end user's system generates unsafe values for some reason. I'm all for giving the user the choice, though it's not a good idea, but the question here is what values should be included with the release. The answer to that has been given.

> How do we minimise the gap between using default parameters and custom parameters in new installs?

The most extreme answer would be ""Don't use custom parameters."" The default (RFC 7919) parameters are the safest option.

> Do we have all the code in place or do we need to do more?

Given the recent commits surrounding this issue, I'd have to go back and look at what was added or removed. At least a portion of my merge request is needed to utilize 3072-bit DH parameter sets.

> How much measurable security will we gain from doing what is suggested here?

That depends on your risk profile and tolerance. For most users, this would be a transparent change whose benefits may never be observed. In raw terms, shipping audited and standard values provides an assurance that the values included with the release were not tampered with or poorly-generated. A ""nothing up my sleeve"" number, if you will.

The Mozilla Foundation states this advice explicitly. [Server-Side TLS](https://wiki.mozilla.org/Security/Server_Side_TLS#Pre-defined_DHE_groups) While the page itself may offer guidance on configuring web servers, the rest of it is fully-applicable to anything participating in TLS connections.",True,True,24,5676.266666666666
opnsense_____core_____2466,2018-06-18T12:16:29Z,True,opnsense_____core_____2466_____398034526,"We've been following up on https://weakdh.org/sysadmin.html ever since 2015 and this is the first complaint that it's *all wrong*. What you state here is therefore news to me. On first glance I cannot find enough info to back up your claims, so I'll park this PR and ask around to give it the benefit of the doubt it deserves and I wish you will do the same for what we have currently in place.",True,True,24,5676.266666666666
opnsense_____core_____2466,2018-06-18T12:26:31Z,True,opnsense_____core_____2466_____398037003,"That makes sense. I believe that https://weakdh.org/sysadmin.html was written in 2015, and according to a look over that URL in the Wayback Machine, it was never updated. RFC 7919 was submitted in August 2016, so the WeakDH guide predates that RFC.",True,True,24,5676.266666666666
opnsense_____core_____2466,2018-06-18T12:30:21Z,True,opnsense_____core_____2466_____398037992,"Ah, thanks for the clarification.",True,True,24,5676.266666666666
opnsense_____core_____2466,2018-06-18T21:06:07Z,True,opnsense_____core_____2466_____398195705,"I'm going to undo the commits to the DH portions so that the cert parts can go in under this PR, and I'll submit a DH-specific PR later if its agreed upon.",True,True,24,5676.266666666666
opnsense_____core_____2466,2018-06-18T21:15:56Z,True,opnsense_____core_____2466_____398198347,Done.,True,True,24,5676.266666666666
opnsense_____core_____2466,2018-06-19T05:07:01Z,True,opnsense_____core_____2466_____398275498,"Merged, thank you.

As for RFC 7919, how about we make them optionally usable? We already have a mode selector in the development version. This also means one day we could switch to them by default in new installation and not take anything away from existing users.",True,True,24,5676.266666666666
opnsense_____core_____2466,2018-06-19T12:23:02Z,True,opnsense_____core_____2466_____398379738,"So, here's my thoughts on this: You're already going to be shipping `dh-parameters.*.sample` files, right? Why not make the sample files the RFC DH groups (and you don't have to generate new ones with each release), and the user can either use them, or cron will generate new ones anyway.",True,True,24,5676.266666666666
opnsense_____core_____2466,2018-06-19T12:32:42Z,True,opnsense_____core_____2466_____398382444,"Because we're not making RFC 71919 a default unless the community is willing to support this move. So the community needs to be engaged, best by shipping options to them to try out and discuss further in the forum. :)

Other issue is that 1024 is not provided by RFC, but still of deprecated use in existing installs so you end up with a mixed or broken environment on upgrade if we were to do the switch. As a stopgap we'll be bumping the defaults in OpenVPN to 2048 with 18.1.10 and then give RFC a fair chance on 18.7 so that we could switch to it by default when 19.1 is out.",True,True,24,5676.266666666666
opnsense_____core_____2466,2018-06-19T12:43:18Z,True,opnsense_____core_____2466_____398385231,"The ""wisdom of crowds"" approach is not the correct approach where crypto is concerned. The fact that you accepted a pull request predicated on the idea that periodic regeneration of DH groups is good or necessary is proof of that fact. Do what you will, but this is the wrong approach.",True,True,24,5676.266666666666
opnsense_____core_____2466,2018-06-19T12:57:04Z,True,opnsense_____core_____2466_____398389119,Your mind is set; I have no reason to change it. :),True,True,24,5676.266666666666
opnsense_____core_____2466,2018-06-19T13:11:06Z,True,opnsense_____core_____2466_____398393365,"My mind isn't the issue. I have standards and best practices on my side, reinforced with documentation. You're choosing to ignore that, which is strange to me.

You accepted a pull request regarding DH params with ""a couple dudes talked about it on IRC"" as support, but you resist this proposal when an actual RFC exists in support of the proposal with the statement of ""we're not doing this unless the community supports it."" Talk about double standards. I won't be contributing further to this project.",True,True,24,5676.266666666666
opnsense_____core_____2466,2018-06-19T13:19:44Z,True,opnsense_____core_____2466_____398396089,"You have:

1. Asserted that you set your opinion above a community voice in an open source project scope.
2. You continue to be pushy with no regard for other people's schedules, ideas and explicit questions to give ""the benefit of the doubt"".
3. Have failed to realise that 90% of what you asked is already in the development version.

Feel free to not back off, but in any case this is the last you see of me responding.


Thanks,
Franco",True,True,24,5676.266666666666
opnsense_____core_____2466,2018-06-19T13:27:36Z,True,opnsense_____core_____2466_____398398501,"> Asserted that you set your opinion above a community voice in an open source project scope.

No, I have asserted that I set standards above the community voice, especially when the community has already shown that they don't know how to properly handle crypto.

> You continue to be pushy with no regard for other people's schedules, ideas and explicit questions to give ""the benefit of the doubt"".

Schedules were never discussed. The ideas were ill-formed, either unsupported or predicated on old information. And why should anyone give ""benefit of the doubt"" when there should be no doubt? You're mishandling crypto, end of story.

> Have failed to realise that 90% of what you asked is already in the development version.

Does the development version adhere to standards? No? Then how is this even relevant?

> Feel free to not back off, but in any case this is the last you see of me responding.

Again, that's on you. I have the knowledge and expertise to render a judgment on this. It's a shame you choose not to benefit from it.
",True,True,24,5676.266666666666
opnsense_____core_____2466,2018-06-19T13:30:53Z,True,opnsense_____core_____2466_____398399491,"> that they don't know how to properly handle crypto.

Your assertion is wrong and it makes you act like a less than favourable human being. People live and learn, either with you or without you. I'm closing this thread, because you continue to deviate from the topic for attacks because you don't get what you want.",True,True,24,5676.266666666666
calamares_____calamares_____975,2018-06-20T10:12:15Z,True,calamares_____calamares_____975_____398698195,"Please leave a comment in #992 , as this PR reflects on the more general issue of service-management outside of the package manager. And, as @kkofler says, it needs work to be mergeable.",True,True,6,34615.01666666667
calamares_____calamares_____974,2018-06-20T10:14:53Z,True,calamares_____calamares_____974_____398698970,Please leave a comment in #992 ; that asks for (a) civil discussion and (b) long detailed answers with examples.,True,True,22,37198.4
calamares_____calamares_____966,2018-06-20T10:16:22Z,True,calamares_____calamares_____966_____398699324,Please leave a comment in #992 ; that asks for (a) civil discussion and (b) long detailed answers with examples.,True,True,55,44095.11666666667
nestjs_____typeorm_____27,2018-06-20T10:35:49Z,True,nestjs_____typeorm_____27_____398704151,Is there a reason we don't merge this?,True,True,25,905236.35
nestjs_____typeorm_____27,2018-06-22T09:16:56Z,True,nestjs_____typeorm_____27_____399378700,"This solution is great, though, I'm afraid that it might be broken in future typeorm releases. It looks like a workaround that uses internal API which is quite dangerous.",True,True,25,905236.35
sbpp_____sourcebans-pp_____488,2018-06-27T06:28:28Z,True,sbpp_____sourcebans-pp_____488_____197628178,"<!--- Provide a general summary of your changes in the Title above -->

## Description
<!--- Describe your changes in detail -->
Modified sm_ban to now display the ban window when 0 arguments are presented.

## Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
Simple feature that makes it easier to access the ban window without having to step through the admin menu.

## How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
Compiled and ran on both public and test server. Simple fix, doesn't affect anything outside of the console command.

## Screenshots (if appropriate):

## Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (non-breaking change which fixes an issue)
- [x] New feature (non-breaking change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

## Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My code follows the code style of this project.
- [ ] My change requires a change to the documentation.
- [ ] I have updated the documentation accordingly.
- [x] I have read the **CONTRIBUTING** document.
",True,True,20,60445.583333333336
sbpp_____sourcebans-pp_____488,2018-06-27T06:34:49Z,True,sbpp_____sourcebans-pp_____488_____400558912,"This sounds more suited as a separate command like `sm_banmenu`.

Sometimes I call `sm_ban` just to check for the order of the required parameters, and would rather not have to close an extra menu when I do that.",True,True,20,60445.583333333336
mysqljs_____mysql_____1962,2018-06-27T09:09:45Z,True,mysqljs_____mysql_____1962_____400600651,Any updates on this? Unable to authenticate with MySQL 8,True,True,37,413793.7833333333
sbpp_____sourcebans-pp_____488,2018-06-27T11:06:48Z,True,sbpp_____sourcebans-pp_____488_____400634574,"[sm_ban playerName timeInMinutes ""Reason""]? Didn't think it was that hard to remember.

If it's that annoying of a change, then we can close this PR.",True,True,20,60445.583333333336
calamares_____calamares_____974,2018-06-27T14:42:39Z,True,calamares_____calamares_____974_____400698100,See closing comments in #992,True,True,22,37198.4
calamares_____calamares_____975,2018-06-27T14:42:55Z,True,calamares_____calamares_____975_____400698196,See closing comments in #992,True,True,6,34615.01666666667
calamares_____calamares_____966,2018-06-27T14:43:00Z,True,calamares_____calamares_____966_____400698225,See closing comments in #992,True,True,55,44095.11666666667
sbpp_____sourcebans-pp_____488,2018-06-28T21:40:36Z,True,sbpp_____sourcebans-pp_____488_____401181996,"This PR still displays the usage message, though it also shows the menu. I figured it wouldn't really be that annoying since how often really is it needed to use /ban with no args just to see usage parameters? There is also an ongoing discussion in the sourcemod GH regarding this suggestion - an idea is to offer a cvar to toggle this behavior change.",True,True,20,60445.583333333336
algorithm-archivists_____algorithm-archive_____114,2018-06-28T22:03:18Z,True,algorithm-archivists_____algorithm-archive_____114_____401187120,"Hey @ubsan, I am sorry it has taken me so long to get to this PR. This is something we have discussed in detail internally on discord and through a few other platforms, but we feel that the code submitted to the algorithm archive in C++ is incredibly difficult to read and follow. This is mostly due to the syntactical complexity of the code, which does not seem standard, even for well-seasonsed C++ programmers. 

As I've said before, you know your stuff, that is clear; however, if individuals who have been reading and writing C++ code for years have trouble understanding the code here, then there is a problem. At first, I thought it was just my own misunderstandings because my C++ code is basically C; however, it has come to my attention that other members of the community agree that the code is too difficult to read, and this is a problem.

I want to make clear that we definitely appreciate the help and support and would love to see you stay a member of the community and continue to review and write code for the AAA (we are not kicking you out); however, tone down the syntactical complexity to match what we have said before in the style guideline issue (#18) and *How To Contribute* section, which basically say that the code written should be ""should be readable and understandable to anyone -- especially those who are new to the language."" Your code definitely does not fit this criteria. 

The code provided in #18 was definitely clearer than code provided here, and that should be roughly the syntactical complexity of future code in the archive.",True,True,46,89673.71666666666
algorithm-archivists_____algorithm-archive_____114,2018-06-29T00:38:56Z,True,algorithm-archivists_____algorithm-archive_____114_____401213749,"@leios I disagree completely. If you want imperative code, you can write it yourself. The code as you've written it in Julia utterly obsfucates the underlying mathematical concepts; if I'm going to write code for something like this, I want to be able to see the math underlying it - I don't want to see the mutations. I'm unwilling to write the code in an imperative manner.",True,True,46,89673.71666666666
algorithm-archivists_____algorithm-archive_____114,2018-06-29T03:12:38Z,True,algorithm-archivists_____algorithm-archive_____114_____401234766,"You are right, I have a bias towards imperative code; however, @ubsan 3 things:

1. I should have been more clear: this isn't about the FFT, specifically. It was a general note that the code you have written for the AAA is incredibly over-engineered every time. There have been a few cases where I genuinely needed an implementation in C++ for certain algorithms and I could not use the implementation in the Algorithm Archive for C++ because it was unreadable and unusable in my codebase. I instead just used the C code with small modifications. That should not have happened.

I know what you are going to say, ""Well, any good C++ programmer should be able to understand this code,"" and you are not necessarily wrong. The problem is that the people who need the Algorithm Archive are people like me --  those who use C++ frequently enough that they need an algorithm implemented in the language, but are not ""good"" enough to take the mathematical definition and immediately write it in code. They need code they can quickly look at and say, ""Ah. That's how you do it. I bet I can get this working this afternoon!""

2. I am not sure how the code I wrote ""utterly obfuscates the underlying mathematical concepts,"" simply because it is written in an imperative style. As mentioned before (by Gustorn ~May 21st), there will always be slight variations of the mathematical definition and algorithmic implementation. If you want math, you read the chapter. If you want a language implementation, you read the code. Some people (like me) understand better when I see a few for loops, because it helps them grasp the dimensionality of the problem better than mathematical notation. If you want to write in a different coding style, pick a language that better supports that, or *find ways to make it syntactically clearer what you are actually doing.*

This is (decently) clear:

```c++
template <typename T>
T discrete(const std::vector<c64>& vec) {
    T result(vec.size());

    auto size = vec.size();
    for (size_t i = 0; i < size; ++i) {
        for (size_t j =0 ; j < size; ++j) {
            result[i] += vec[j] * std::exp(c64(0, -2.0 * pi<double>() * j * i / size));
        }
    }

    return result;
}
```

Sure, people who don't know C++ probably don't like the `template`, but that's fine. The `std::exp(c64(0, -2.0 * pi<double>() * j * i / size))` is also a bit weird, but that's good ol' C++ for you.

This is a short sample of some of the code you wrote:

```c++
template <typename It>
std::vector<c64> dft(It const original, It const last) {
  std::size_t const size = last - original;
  auto ret = std::vector<c64>(size);

  std::iota_transform(begin(ret), end(ret), [original] (std::size_t n) {
    return sum(0, size, [original] (std::size_t k) {
      return original[k] * c64(
          std::cos(-2.0 * pi * n * k / size),
          std::sin(-2.0 * pi * n * k / size));
    }
  });

  return ret;
}
```

I can get a few lines in... Again, templates are weird, but it is what it is. Your constant use of `auto` makes `auto ret = std::vector<c64>(size);` a bit odd to read (why not just `std::vector<c64> ret(size)`?), but no big deal there. My main questions come after this. What the heck is `std::iota_transform(...)`? [Google doesn't even help](https://www.google.com/search?safe=active&client=ubuntu&hs=41k&channel=fs&ei=rIo1W9PhL4v38QWr5qXQCg&q=strd%3A%3Aiota_transform+c%2B%2B&oq=strd%3A%3Aiota_transform+c%2B%2B&gs_l=psy-ab.3...713179.713945.0.714618.6.6.0.0.0.0.183.372.1j2.3.0....0...1c.1.64.psy-ab..3.0.0....0.vNEjOxprt88). Is that a lambda somewhere hidden in the middle? Where is `sum` defined? Wait, is that a lambda in a lambda?

As far as using Euler's formula, which you seemed to dislike... Well, it's how the FT and FFT are defined. It's actually a bit misleading in my opinion to use sines and cosines unless your language demands it. Again, though, this is kinda personal preference. Everyone knows the formula, so either will do.

I don't mind you writing code in a different style. C++ supports a number of different styles. It's just that your code is so syntactically complex that style doesn't matter. It is simply hard to read and understand. 

Disclaimer: I am aware that these are just snippets from the above conversation. They were not chosen delicately to prove my point or anything... they were just the smallest chunks of code I could grab that both seemed to be doing the same thing.

3. You are right, I should re-write the julia code. It's a bit messy in certain places. I'll see about fixing that soon. Thanks for bringing that to my attention!",True,True,46,89673.71666666666
algorithm-archivists_____algorithm-archive_____114,2018-06-29T03:40:36Z,True,algorithm-archivists_____algorithm-archive_____114_____401238312,"@leios It's really not complex. It's not what you're used to, maybe, but it's fairly close to what I'd write in, say, OCaml.

```ocaml
val dft : Complex.t array -> Complex.t array

let dft original =
  let size = Array.length original in
  Array.init size (fun n ->
    sum 0 size (fun k ->
      let c = (float_of_int -2) *. pi *. n *. k /. (float_of_int size) in
      Complex.(original.(k) * { re= cos c; im= sin c }) ))
```

It's how one writes it in a non-imperative style, at least imo.",True,True,46,89673.71666666666
algorithm-archivists_____algorithm-archive_____114,2018-06-29T03:45:43Z,True,algorithm-archivists_____algorithm-archive_____114_____401238960,"If I may butt in, I do like that piece of OCaml, it's quite readable, but the C++ version is not readable at all. C++ is not very suited to declarative style, you have to jump through hoops to write the code you like. Maybe submit some OCaml code instead? ^^",True,True,46,89673.71666666666
algorithm-archivists_____algorithm-archive_____114,2018-06-29T03:47:57Z,True,algorithm-archivists_____algorithm-archive_____114_____401239239,"Yeah, I was just about to write a similar comment. That code seems fine to me. ",True,True,46,89673.71666666666
algorithm-archivists_____algorithm-archive_____114,2018-06-29T04:43:19Z,True,algorithm-archivists_____algorithm-archive_____114_____401245952,They're... exactly the same code. What?,True,True,46,89673.71666666666
algorithm-archivists_____algorithm-archive_____114,2018-06-29T04:59:33Z,True,algorithm-archivists_____algorithm-archive_____114_____401247848,"They do exactly the same thing, but the OCaml is more readable, because the syntax is natural. For example, lambda functions. I don't know OCaml at all, and my C++ is worthless, but reading your OCaml, I see straight away that the syntax is  `fun x  -> x`. I've read your C++ 12 times and I can't figure out the syntax. It's just hard to read and not a natural feature of the language. ",True,True,46,89673.71666666666
algorithm-archivists_____algorithm-archive_____114,2018-06-29T05:10:47Z,True,algorithm-archivists_____algorithm-archive_____114_____401249167,I don't know how to argue with that. I think I'm done with this thread. It seems to me we'll get yet another C-with-classes resource online. yay,True,True,46,89673.71666666666
algorithm-archivists_____algorithm-archive_____114,2018-06-29T05:38:20Z,True,algorithm-archivists_____algorithm-archive_____114_____401252867,"@ubsan Thanks for answering. I think I have a better understanding of where you are coming from and the general differences in style between you and other coders here.

Again, to be clear: I don't think you are wrong. I think that C++ allows for the style you want, and that's fine. To be honest, I have genuinely learned a lot from reading through your code.

My understanding is that you would like to stay away from imperative code so you can be closer to the mathematical foundations of the algorithms you are using. That makes a lot of sense; however, we are arguing that in doing so, the C++ code becomes hard to read. This is probably because most people still use C++ imperatively, even if it is ""multi-paradigmatic.""

I feel there must be common ground. We are not doing completely OO code here, either. We use what makes sense, and the community dictates what makes sense in each case.

We have had a bit more discussion on this thread, so let's see if anyone else in the community chimes in. Maybe we should create a separate issue?",True,True,46,89673.71666666666
molgenis/molgenis/7495,2018-06-29T07:30:19Z,False,5b35e0246480fd1f800dfece,"# [Codecov](https://codecov.io/gh/molgenis/molgenis/pull/7495?src=pr&el=h1) Report
> Merging [#7495](https://codecov.io/gh/molgenis/molgenis/pull/7495?src=pr&el=desc) into [master](https://codecov.io/gh/molgenis/molgenis/commit/ed7533643770469aba6f6a89a10dd828baf6566f?src=pr&el=desc) will **decrease** coverage by `42.4%`.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/molgenis/molgenis/pull/7495/graphs/tree.svg?token=na7jt3O1eZ&src=pr&height=150&width=650)](https://codecov.io/gh/molgenis/molgenis/pull/7495?src=pr&el=tree)

```diff
@@             Coverage Diff             @@
##             master   #7495      +/-   ##
===========================================
- Coverage      51.2%    8.8%   -42.5%     
+ Complexity     5775       3    -5772     
===========================================
  Files          1075       1    -1074     
  Lines         31441      34   -31407     
  Branches       3583       0    -3583     
===========================================
- Hits          16129       3   -16126     
+ Misses        13952      31   -13921     
+ Partials       1360       0    -1360
```

| Flag | Coverage Δ | Complexity Δ | |
|---|---|---|---|
| #integration | `8.8% <ø> (ø)` | `3 <ø> (ø)` | :arrow_down: |
| #unit | `?` | `?` | |

| [Impacted Files](https://codecov.io/gh/molgenis/molgenis/pull/7495?src=pr&el=tree) | Coverage Δ | Complexity Δ | |
|---|---|---|---|
| [...re/importer/repository/OntologyFileExtensions.java](https://codecov.io/gh/molgenis/molgenis/pull/7495/diff?src=pr&el=tree#diff-bW9sZ2VuaXMtb250b2xvZ3ktY29yZS9zcmMvbWFpbi9qYXZhL29yZy9tb2xnZW5pcy9vbnRvbG9neS9jb3JlL2ltcG9ydGVyL3JlcG9zaXRvcnkvT250b2xvZ3lGaWxlRXh0ZW5zaW9ucy5qYXZh) | | | |
| [...java/org/molgenis/data/UnknownEntityException.java](https://codecov.io/gh/molgenis/molgenis/pull/7495/diff?src=pr&el=tree#diff-bW9sZ2VuaXMtZGF0YS9zcmMvbWFpbi9qYXZhL29yZy9tb2xnZW5pcy9kYXRhL1Vua25vd25FbnRpdHlFeGNlcHRpb24uamF2YQ==) | | | |
| [...in/java/org/molgenis/jobs/JobFactoryRegistrar.java](https://codecov.io/gh/molgenis/molgenis/pull/7495/diff?src=pr&el=tree#diff-bW9sZ2VuaXMtam9icy9zcmMvbWFpbi9qYXZhL29yZy9tb2xnZW5pcy9qb2JzL0pvYkZhY3RvcnlSZWdpc3RyYXIuamF2YQ==) | | | |
| [.../java/org/molgenis/data/support/DynamicEntity.java](https://codecov.io/gh/molgenis/molgenis/pull/7495/diff?src=pr&el=tree#diff-bW9sZ2VuaXMtZGF0YS9zcmMvbWFpbi9qYXZhL29yZy9tb2xnZW5pcy9kYXRhL3N1cHBvcnQvRHluYW1pY0VudGl0eS5qYXZh) | | | |
| [.../beacon/controller/model/BeaconAlleleResponse.java](https://codecov.io/gh/molgenis/molgenis/pull/7495/diff?src=pr&el=tree#diff-bW9sZ2VuaXMtYmVhY29uL3NyYy9tYWluL2phdmEvb3JnL21vbGdlbmlzL2JlYWNvbi9jb250cm9sbGVyL21vZGVsL0JlYWNvbkFsbGVsZVJlc3BvbnNlLmphdmE=) | | | |
| [...jobs/scheduler/AutowiringSpringBeanJobFactory.java](https://codecov.io/gh/molgenis/molgenis/pull/7495/diff?src=pr&el=tree#diff-bW9sZ2VuaXMtam9icy9zcmMvbWFpbi9qYXZhL29yZy9tb2xnZW5pcy9qb2JzL3NjaGVkdWxlci9BdXRvd2lyaW5nU3ByaW5nQmVhbkpvYkZhY3RvcnkuamF2YQ==) | | | |
| [.../twofactor/auth/TwoFactorAuthenticationFilter.java](https://codecov.io/gh/molgenis/molgenis/pull/7495/diff?src=pr&el=tree#diff-bW9sZ2VuaXMtc2VjdXJpdHkvc3JjL21haW4vamF2YS9vcmcvbW9sZ2VuaXMvc2VjdXJpdHkvdHdvZmFjdG9yL2F1dGgvVHdvRmFjdG9yQXV0aGVudGljYXRpb25GaWx0ZXIuamF2YQ==) | | | |
| [...n/java/org/molgenis/jobs/JobExecutionTemplate.java](https://codecov.io/gh/molgenis/molgenis/pull/7495/diff?src=pr&el=tree#diff-bW9sZ2VuaXMtam9icy9zcmMvbWFpbi9qYXZhL29yZy9tb2xnZW5pcy9qb2JzL0pvYkV4ZWN1dGlvblRlbXBsYXRlLmphdmE=) | | | |
| [...d/src/components/MetadataManagerEntityEditForm.vue](https://codecov.io/gh/molgenis/molgenis/pull/7495/diff?src=pr&el=tree#diff-bW9sZ2VuaXMtbWV0YWRhdGEtbWFuYWdlci9zcmMvbWFpbi9mcm9udGVuZC9zcmMvY29tcG9uZW50cy9NZXRhZGF0YU1hbmFnZXJFbnRpdHlFZGl0Rm9ybS52dWU=) | | | |
| [.../org/molgenis/data/security/auth/RoleMetadata.java](https://codecov.io/gh/molgenis/molgenis/pull/7495/diff?src=pr&el=tree#diff-bW9sZ2VuaXMtZGF0YS1zZWN1cml0eS9zcmMvbWFpbi9qYXZhL29yZy9tb2xnZW5pcy9kYXRhL3NlY3VyaXR5L2F1dGgvUm9sZU1ldGFkYXRhLmphdmE=) | | | |
| ... and [1053 more](https://codecov.io/gh/molgenis/molgenis/pull/7495/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/molgenis/molgenis/pull/7495?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/molgenis/molgenis/pull/7495?src=pr&el=footer). Last update [ed75336...a22c15f](https://codecov.io/gh/molgenis/molgenis/pull/7495?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",True,False,14,10332.2
magento-research/pwa-studio/104,2018-06-29T21:25:29Z,False,5b36a3d76480fd1a01aa6ac9,"## Pull Request Test Coverage Report for [Build 172](https://coveralls.io/builds/17766728)

* **0** of **53**   **(0.0%)**  changed or added relevant lines in **6** files are covered.
* **1** unchanged line in **1** file lost coverage.
* Overall coverage decreased (**-1.7%**) to **62.936%**

---

|  Changes Missing Coverage | Covered Lines | Changed/Added Lines | % |
| :-----|--------------|--------|---: |
| [packages/venia-concept/src/components/Checkout/section.js](https://coveralls.io/builds/17766728/source?filename=packages%2Fvenia-concept%2Fsrc%2Fcomponents%2FCheckout%2Fsection.js#L1) | 0 | 6 | 0.0%
| [packages/venia-concept/src/components/Checkout/submitButton.js](https://coveralls.io/builds/17766728/source?filename=packages%2Fvenia-concept%2Fsrc%2Fcomponents%2FCheckout%2FsubmitButton.js#L1) | 0 | 8 | 0.0%
| [packages/venia-concept/src/components/Checkout/form.js](https://coveralls.io/builds/17766728/source?filename=packages%2Fvenia-concept%2Fsrc%2Fcomponents%2FCheckout%2Fform.js#L1) | 0 | 9 | 0.0%
| [packages/venia-concept/src/components/MiniCart/miniCart.js](https://coveralls.io/builds/17766728/source?filename=packages%2Fvenia-concept%2Fsrc%2Fcomponents%2FMiniCart%2FminiCart.js#L5) | 0 | 9 | 0.0%
| [packages/venia-concept/src/components/MiniCart/checkoutButton.js](https://coveralls.io/builds/17766728/source?filename=packages%2Fvenia-concept%2Fsrc%2Fcomponents%2FMiniCart%2FcheckoutButton.js#L1) | 0 | 10 | 0.0%
| [packages/venia-concept/src/store/reducers/checkout.js](https://coveralls.io/builds/17766728/source?filename=packages%2Fvenia-concept%2Fsrc%2Fstore%2Freducers%2Fcheckout.js#L1) | 0 | 11 | 0.0%
<!-- | **Total:** | **0** | **53** | **0.0%** | -->

|  Files with Coverage Reduction | New Missed Lines | % |
| :-----|--------------|--: |
| [packages/venia-concept/src/components/MiniCart/miniCart.js](https://coveralls.io/builds/17766728/source?filename=packages%2Fvenia-concept%2Fsrc%2Fcomponents%2FMiniCart%2FminiCart.js#L58) | 1 | 0.0% |
<!-- | **Total:** | **1** |  | -->

|  Totals | [![Coverage Status](https://coveralls.io/builds/17766728/badge)](https://coveralls.io/builds/17766728) |
| :-- | --: |
| Change from base [Build 170](https://coveralls.io/builds/17762839): |  -1.7% |
| Covered Lines: | 765 |
| Relevant Lines: | 1282 |

---
##### 💛  - [Coveralls](https://coveralls.io)
",True,False,14,8670.233333333334
openstyles/stylus/410,2018-07-02T16:25:31Z,False,5b3a51ff6480fd1f3d1f6670,Shit. Forgot to delete some leftover devtools code from `popup.css`.,True,False,69,18418.166666666668
openstyles/stylus/410,2018-07-02T22:04:04Z,False,5b3aa1596480fd17d6c28a6e,"I haven't see the code and just took some screenshots:

<details><summary>Usercss installation page</summary>

![2018-07-03 05 23 14](https://user-images.githubusercontent.com/1324510/42187275-07c21f7c-7e82-11e8-89b3-6b1d8dc9d0c6.png)
</details>

<details><summary>Usercss editor</summary>

![default](https://user-images.githubusercontent.com/1324510/42187123-8471ca28-7e81-11e8-9f92-79c84cec7877.png)
* There are three scrollbars on the page.
* The header is cropped which is inconsistent with the multi-section editor.
* Applies-to toolbar is broken that it doesn't show up.
</details>

<details><summary>Multi-section editor</summary>

![2018-07-03 05 28 11](https://user-images.githubusercontent.com/1324510/42187323-37c4401a-7e82-11e8-8542-0396c7a81cc7.png)
![2018-07-03 05 28 17](https://user-images.githubusercontent.com/1324510/42187324-37ee7a06-7e82-11e8-9898-fa06f78bd852.png)
![2018-07-03 05 28 26](https://user-images.githubusercontent.com/1324510/42187326-38179864-7e82-11e8-92a0-22ceed31d516.png)

* Looks good. I think using a ""x"" button instead of a ""-"" button would be more accurate. Sometimes +/- are also used in tree list/expander widgets. At the first glance I was thinking why do we have to make them collapsible individually.
</details>

<details><summary>Dashboard</summary>

![default](https://user-images.githubusercontent.com/1324510/42188087-0e534066-7e85-11e8-8bd5-ccd799fb5578.png)
* Horizontal scrollbar.

![2018-07-03 05 51 41](https://user-images.githubusercontent.com/1324510/42188124-3c2e3c98-7e85-11e8-8f1f-7ae48efcbc86.png)
![2018-07-03 05 52 49](https://user-images.githubusercontent.com/1324510/42188164-611e8d32-7e85-11e8-8e2a-bcfe7ac6b970.png)
![2018-07-03 05 54 19](https://user-images.githubusercontent.com/1324510/42188225-974ad654-7e85-11e8-8893-831bd9723d85.png)

* The header took the entire space (height 100%?)
* The layout after collapsing some sections doesn't look very well.

</details>

<details><summary>Multi-section editor (desktop)</summary>

![2018-07-03 05 56 13](https://user-images.githubusercontent.com/1324510/42188314-f98f2766-7e85-11e8-91e7-88db9250e4cf.png)

* The import/export button.

</details>",True,False,69,18418.166666666668
openstyles/stylus/410,2018-07-02T22:14:57Z,False,5b3aa3e56480fd1f800f8293,"Damn. So you just get overflow everywhere? Admittedly, usercss editor pages didn't even occur to me, but that looks like all kinds of issues everywhere. Is it the same in English?",True,False,69,18418.166666666668
openstyles/stylus/410,2018-07-02T22:27:55Z,False,5b3aa6f06480fd1a01aba7ac,"Maybe we should have some discussion about the design and create some utility classes that can be used across pages. `manage.html`, `edit.html`, and `install-usercss.html` share a similar layout but they use different id/classes that are styled individually. I think it would help the consistency.
",True,False,69,18418.166666666668
openstyles/stylus/410,2018-07-02T22:30:29Z,False,5b3aa7886480fd1f3d1f8dda,"Yeah, single editor pages were overlooked, and need help. 

Multi-editor pages are OK? 

I can't repro overflow on usercss install pages or manager pages though. Text all looks like its wrapping, so what's causing overflow?



",True,False,69,18418.166666666668
openstyles/stylus/410,2018-07-02T22:46:29Z,False,5b3aab4a6480fd16984f435e,"Probably related:
https://github.com/philipwalton/flexbugs/issues/39",True,False,69,18418.166666666668
openstyles/stylus/410,2018-07-02T22:50:59Z,False,5b3aac5a6480fd16c3243cec,"Makes sense. I'll try to fix usercss editors and the FF overflow workaround sometime soon. Might be tomorrow though. Thanks for testing, and feel free to offer bug-fixes if you experiment in the meantime.",True,False,69,18418.166666666668
openstyles/stylus/410,2018-07-03T00:59:02Z,False,5b3aca5a6480fd16d516dddd,"You'd think that two of the main browsers would be capable of at least displaying the same `display`, but FF requires a few extra properties here and there. I think it's all good now, can you confirm?.

FF also displays the fixed manager table a little differently. Looks like it's not quite as dynamic and causes overflow sooner, at slightly less narrow widths. We should probably just switch the installed style list to a slightly more compact `flex` to utilize the space better and more consistently cross-browser. That way we could get rid of the `table` display on the outer container too, and just make the whole manager page flex when the compact layout kicks in.",True,False,69,18418.166666666668
openstyles/stylus/410,2018-07-03T01:59:45Z,False,5b3ad8956480fd1b4e4f6b9c,"Every time I think everything is good, I have to recheck the other browser. I think they're both good now. Probably a couple redundant properties which could be deleted. I'll check again to tomorrow. 

As much feedback as anyone can provide from testing would be helpful.",True,False,69,18418.166666666668
openstyles/stylus/410,2018-07-03T05:52:59Z,False,5b3b0f426480fd17418d901f,">The import/export button.

I don't see an issue.

>The layout after collapsing some sections doesn't look very well.

This is how they were. Maybe they can be improved, but I've been trying to recreate the same layout with more responsive wrapping.

>Applies-to toolbar is broken that it doesn't show up.

That's a mystery to me. Not sure how I managed to break it, but it's not like it's positioned wrong, it's not even there. All I've done is rearranged the `display`. I haven't added any parents to change the order, so I'm not sure how I could've broken the `applies-to-line-widget.js`. 

We should also wrap these elements in a parent so they wrap together:
 
![applies-to](https://user-images.githubusercontent.com/14100003/42200869-3ac82214-7e63-11e8-8eb9-18021bf32002.png)

and fix the function in `applies-to-line-widget.js` for it as well, but the majority of that js is over my head.
",True,False,69,18418.166666666668
openstyles/stylus/410,2018-07-03T05:58:43Z,False,5b3b10986480fd16ad43d7b8,"The code was using `button` tag selectors which is generally considered a bad idea. I'm looking at the code right now, gonna upload a fix here soon.",True,False,69,18418.166666666668
openstyles/stylus/410,2018-07-03T06:15:44Z,False,5b3b14966480fd183dd60a5e,"As for the trouble with wrapping the applies-to items in a parent div, I don't see any need to alter js so here goes nothing.",True,False,69,18418.166666666668
openstyles/stylus/410,2018-07-03T06:23:54Z,False,5b3b16936480fd1ae760fc7f,"Nice. There they are again.

The wrapping input and buttons does break functionality though. In usercss editors it adds and subtracts correctly, but each line has an add and subtract button, whereas regular editors only have an add on the last one.

Regular editors is where the ""remove"" is bugged, since selects aren't removed with inputs and buttons.",True,False,69,18418.166666666668
openstyles/stylus/410,2018-07-03T06:33:28Z,False,5b3b18ea6480fd1e705bc5d0,Is it fixed now?,True,False,69,18418.166666666668
openstyles/stylus/410,2018-07-03T06:42:48Z,False,5b3b1af26480fd168836d999,Mostly all good. Add/remove all seems fixed. Only discrepancy is add buttons not being removed from usercss blocks. In the regular editor they're only on the last rule. Not sure if that matters.,True,False,69,18418.166666666668
openstyles/stylus/410,2018-07-03T06:44:40Z,False,5b3b1b686480fd1fd14d6882,"Uhm, weren't they always there? It's much more convenient to be able to add items anywhere. I think we need to add this feature to the standard editor.",True,False,69,18418.166666666668
openstyles/stylus/410,2018-07-03T06:46:55Z,False,5b3b1be66480fd1fd14d68a6,Maybe in usercss? I certainly agree it's better. The regular editor should do the same.,True,False,69,18418.166666666668
openstyles/stylus/410,2018-07-03T06:49:19Z,False,5b3b1c746480fd1a01abcc10,"Heh, they're hidden with our own CSS.",True,False,69,18418.166666666668
openstyles/stylus/410,2018-07-03T06:50:10Z,False,5b3b1caa6480fd2059fa0b06,I know. I'm fixing js that adds new items right now.,True,False,69,18418.166666666668
openstyles/stylus/410,2018-07-03T07:14:24Z,False,5b3b225b6480fd1cd33fb771,"Okay, now we need to make + and - buttons accessible via keyboard navigation like our other fancy buttons. IIRC we use `<a href=""#"">` wrapper and event.preventDefault() in the click listener or something.",True,False,69,18418.166666666668
openstyles/stylus/410,2018-07-03T07:31:08Z,False,5b3b26416480fd17eb5619fb,Major upgrade. Thanks tophf.,True,False,69,18418.166666666668
openstyles/stylus/410,2018-07-03T07:54:18Z,False,5b3b2baf6480fd171759ff1e,I see you've used tab characters instead of two spaces again.,True,False,69,18418.166666666668
openstyles/stylus/410,2018-07-03T07:58:11Z,False,5b3b2c996480fd1f3d1fbd30,Where at? Could've sworn I've avoided going full retard.,True,False,69,18418.166666666668
openstyles/stylus/410,2018-07-03T08:15:05Z,False,5b3b30966480fd1eb9ed04f4,"Were those it? Sublime is set to spaces, but it fucks off on the first line after opening curly brackets, which is pretty annoying. I wonder if there's some config for it.",True,False,69,18418.166666666668
openstyles/stylus/410,2018-07-03T08:17:10Z,False,5b3b31106480fd181daa013e,Use the find dialog and look for `\t` regexp.,True,False,69,18418.166666666668
openstyles/stylus/410,2018-07-03T08:45:28Z,False,5b3b37ac6480fd16d5170475,"Filter stats wrapping was an issue when I briefly checked Chinese. What a nightmare. Finding the setting to switch it back to English isn't so easy when all the settings are written in gibberish. I had to add a command line switch to change it back. It'd be a lot easier to check other translations if we could switch it in the extension.

Did I get all the tabs?",True,False,69,18418.166666666668
openstyles/stylus/410,2018-07-03T08:55:01Z,False,5b3b39e86480fd17418da5b1,"Yep you got them.
",True,False,69,18418.166666666668
openstyles/stylus/410,2018-07-03T12:57:42Z,False,5b3b72cc6480fd181daa1b88,"When editing a non-usercss userstyle:
* I think the code block shouldn't have any right & left margins.
* I can't resize the editor height, so maybe we should make it full height? Then move the applies-to section to the top?

For usercss:
* The header appears fixed in place, and the editor scrolls underneath.
* If the editor is set to full height, this shouldn't happen. Also, the scroll bar is a dot.

General:
* The shortcuts popup should be full width, or at least wider. The right column is really compacted.
* The stylelint/csslint config popup should be wider.
* The old UI layout is still too wide. Should we detect for mobile platforms and auto-switch to the new UI?",True,False,69,18418.166666666668
openstyles/stylus/410,2018-07-03T13:17:21Z,False,5b3b776d6480fd1d69d86b8d,">the code block shouldn't have any right & left margins

Yes, in the narrow mode.

>I can't resize the editor height, so maybe we should make it full height? 

It's resizable here.

>Then move the applies-to section to the top?

Not sure we should suddenly change the order even if it'll match our usercss editor.

>The header appears fixed in place, and the editor scrolls underneath.
>If the editor is set to full height, this shouldn't happen. 

Yes, in the narrow mode.

>Also, the scroll bar is a dot.

Uhm, what?

>The shortcuts popup should be full width, or at least wider

The keymap shortcuts popup. Yes.

>The stylelint/csslint config popup should be wider.

I think we can just remove the line numbers column.

>The old UI layout is still too wide. Should we detect for mobile platforms and auto-switch to the new UI?

Which old UI? Screenshot please.
If you mean the style manager, I actually like the old UI on a phone.",True,False,69,18418.166666666668
openstyles/stylus/410,2018-07-03T14:45:36Z,False,5b3b8c1d6480fd16ad4411e9,"I was using Chrome's ""Toggle device toolbar"" set to Pixel 2

![](https://user-images.githubusercontent.com/136959/42226865-b6180410-7ea5-11e8-8adc-241bb081804f.gif)

And what happens when I switch between new and old UI

![](https://user-images.githubusercontent.com/136959/42226881-c50eb874-7ea5-11e8-89bf-717b98e36fb0.gif)
",True,False,69,18418.166666666668
openstyles/stylus/410,2018-07-03T17:52:45Z,False,5b3bb7f36480fd17418de4a2,"I think buttons under ""Mozilla Format"" section are too large.
*master*
![default](https://user-images.githubusercontent.com/1324510/42236080-5e5bec3c-7f2c-11e8-9be0-37eb3827fca8.png)
*this PR*
![default](https://user-images.githubusercontent.com/1324510/42236095-691653e2-7f2c-11e8-8d32-d35c7cebd637.png)
",True,False,69,18418.166666666668
openstyles/stylus/410,2018-07-03T22:14:17Z,False,5b3bf5416480fd1729631342,"<details><summary>edit.html in (small) desktop view</summary>
<img src=""https://user-images.githubusercontent.com/1388389/42243586-25d6c86a-7f12-11e8-84f2-69e62aba74cc.png""/>

- I'd halve the right margin in desktop view as there is no shadow and therefore looks a bit too wide.

### Not responsive-specific:
- A different label for the beautify button under each section (""beautify section"") would be good to distinguish it from the beautify button on the left which treats *all* sections.

- In the beautify popup an OK button (on the bottom left) would feel more natural than having to click the small x on top right. I already caught myself clicking the undo button by accident.

- The margin under the main heading (""Bereiche"") is still pretty large.

- The plus sign for adding ""applies to"" is a bit sparse, but elegant. I think it would be better to have an empty ""applies to domain"" as default instead of global default. This forces the well known view with two forms and an additional minus sign next to the plus sign at the accustomed *right end*.
</details>
<br />
<details><summary>manage.html in mobile view</summary>
<img src=""https://user-images.githubusercontent.com/1388389/42244816-b8ab2f92-7f16-11e8-83ab-d85ad5e4aa09.png""/>

- Why is there so much space till the stylelist starts?

- The column for the stylenames should have a percentual width which is smaller than current.

### Not responsive-specific:
- Shortcuts button is also misplaced here, should be deleted.

- The extra dropdown for favicons is quite ugly. The info about <code>https://www.google.com/s2/favicons</code> should be in a popup when clicking on info icon. The option to grey out favicons can be deleted at all if you ask me. That's something for styles. Or make it a separate option which only displays when favicons are activated.

</details>
<br />
<details><summary>Linter options</summary>
<img src=""https://user-images.githubusercontent.com/1388389/42246081-908c9cd0-7f1b-11e8-963c-4d3110af085f.png""/>

### Not responsive-specific:
The text which says ""show full list of rules for"" at the bottom is the link and the following name of the linter which should be the link is missing completely.
</details>",True,False,69,18418.166666666668
magento-research/pwa-studio/104,2018-07-03T22:24:37Z,False,5b3bfb2a6480fd1c39b89b1e,"This is a really good, really clear flow component!",True,False,14,8670.233333333334
magento-research/pwa-studio/104,2018-07-03T22:25:33Z,False,5b3bfb2a6480fd17175a640f,We should have a default case that displays or throws an error here.,True,False,14,8670.233333333334
magento-research/pwa-studio/104,2018-07-03T22:26:13Z,False,5b3bfb2a6480fd1eb9ed6a51,Should this prop be required?,True,False,14,8670.233333333334
magento-research/pwa-studio/104,2018-07-03T22:28:23Z,False,5b3bfb2a6480fd1f0bfc3a1e,We always want to add TODO comments for unimplemented sections like this and below.,True,False,14,8670.233333333334
magento-research/pwa-studio/104,2018-07-03T22:29:28Z,False,5b3bfb2b6480fd1def810403,"This one definitely should be required, since it has no purpose without an onClick callback.",True,False,14,8670.233333333334
magento-research/pwa-studio/104,2018-07-03T22:35:23Z,False,5b3bfb2a6480fd17ffef95e5,"Is there an advantage to the dispatch callback, rather than the object form:

```js
const mapDispatchToProps = {
    resetCheckout: resetCheckoutAction,
    requestOrder: requestOrderAction,
    submitOrder: submitOrderAction
};
```
I ask not to be nitpicky, but because I've used the object literal pattern in other PRs and I want to know if you're aware of some drawback to it.",True,False,14,8670.233333333334
magento-research/pwa-studio/104,2018-07-03T22:37:25Z,False,5b3bfb2a6480fd1caba68cc4,"This async load pattern is intriguing; do you intend for this to become a pattern that we'd repeat in other components, or even abstract away?",True,False,14,8670.233333333334
magento-research/pwa-studio/104,2018-07-03T22:52:29Z,False,5b3c01086480fd1e705c315f,"Yes, probably. I'll do a sweep and see if I can make some props required. 👍 ",True,False,14,8670.233333333334
magento-research/pwa-studio/104,2018-07-03T22:53:40Z,False,5b3c01086480fd16ed08ba74,Good point. 👍 ,True,False,14,8670.233333333334
magento-research/pwa-studio/104,2018-07-03T22:54:06Z,False,5b3c01086480fd1688374690,True. I'll add some. 👍 ,True,False,14,8670.233333333334
magento-research/pwa-studio/104,2018-07-03T22:55:24Z,False,5b3c01086480fd2027cc78d6,"No, there's not. I can probably simplify it to match your suggestion. 👍 ",True,False,14,8670.233333333334
openstyles/stylus/410,2018-07-03T23:02:40Z,False,5b3c00946480fd1cd340179d,"@stonecrusher, many of your observations/suggestions are outside of the scope of this PR. We'll handle them later, I guess. As for the last one, the English text doesn't have ""for"".",True,False,69,18418.166666666668
magento-research/pwa-studio/104,2018-07-03T23:04:10Z,False,5b3c01086480fd19b3ab10a0,"Actually, it's just sort of a convenient break point. I know that `MiniCart` will be mounted in an inactive/hidden state, so I can request some of its children asynchronously and have them rendered before the user activates and sees the component.

We're going to need a more sophisticated solution, probably involving redux actions, to really do this right, I think.",True,False,14,8670.233333333334
Microsoft/fast-dna/633,2018-07-04T00:14:10Z,False,5b3c147a6480fd17175a6b19,"Has this been tested to make sure we not need to do at least one level deeper like ""config.brandColor""?",True,False,14,2776.0833333333335
Microsoft/fast-dna/633,2018-07-04T00:21:45Z,False,5b3c147a6480fd1eb9ed70f2,"This is a little confusing, looks like if the config has an existing direction, no matter what it is, it will return ""left"".

I think you want to do something more like:
```
const configDirection: Direction = get(config, ""direction"") || designSystemDefaults.direction;

return configDirection === Direction.ltr ? ""left"" : ""right""
```

Same with clear on the line below.",True,False,14,2776.0833333333335
Microsoft/fast-dna/633,2018-07-04T01:14:45Z,False,5b3c1f896480fd1b4e4ff531,"Correct. I just logged out these two while within the context of the development site (design system exists):

1. `get(config, ""backgroundColor"");` - resolves with design system property
2. `get(config, ""config.backgroundColor"")` - always returns undefined

If number 2 were the case, our usage of get with managed classes would likely be incorrect.",True,False,14,2776.0833333333335
Microsoft/fast-dna/633,2018-07-04T01:22:35Z,False,5b3c21616480fd18976f4078,Updated.,True,False,14,2776.0833333333335
Microsoft/fast-dna/633,2018-07-04T01:23:36Z,False,5b3c21a16480fd1ab7cd0f02,Feel free to pull down and confirm. You can comment out the dev site and just render the components without a design system as a way to test.,True,False,14,2776.0833333333335
Microsoft/fast-dna/633,2018-07-04T01:27:15Z,False,5b3c22796480fd1ae7617297,Also confirmed with a design system with only one input passed (foreground or brand only).,True,False,14,2776.0833333333335
openstyles/stylus/410,2018-07-04T03:21:04Z,False,5b3c3d286480fd1e3689592b,"Yep, just thought it's a good opportunity if UI is changed anyway :-)
Link for list of rules has been changed 8 months ago and I missed it --> corrected in transifex german translation",True,False,69,18418.166666666668
openstyles/stylus/410,2018-07-04T10:09:58Z,False,5b3c9cfd6480fd1729634f43,">I think buttons under ""Mozilla Format"" section are too large.

Doesn't occur in English, so I had to force it to see the issue. Should be all set.


> I think the code block shouldn't have any right & left margins. (non-usercss editor)

Looks weird with none at all, but I reduced them a bunch.


>I can't resize the editor height, so maybe we should make it full height? Then move the applies-to section to the top? (non-usercss editor)

I have no issues resizing, although in the compact layout double-clicking `.resize-grip` seems not to expand enough.

Not a fan of moving applies-to either.


>I was using Chrome's ""Toggle device toolbar"" set to Pixel 2

So the scrollbar is not a dot?


>The header appears fixed in place, and the editor scrolls underneath. If the editor is set to full height, this shouldn't happen.

Well, unlike regular editor pages, the overflow in single-editor is handled by CM. No idea what you mean by ""set to full height"". AFAICT, the only sane layout there is what it is currently.


>`#help-popup` sizing

Should be good now.


>I think we can just remove the line numbers column.

I left the numbers and removed the CM gutter padding/functionality which makes them a more reasonable width. We could remove them altogether, but I think they're fine now.


>And what happens when I switch between new and old UI

`.applies-to` rules don't wrap, so I added `word-break: break-all` which fixes it. We could use ellipsis or maybe some of tophf's fancy hyphen js if you guys prefer.


The biggest remaining issue I see is the linter in compact mode. As you're editing, it pops up and moves the editor, then continues disappearing/reappearing and adding/removing errors, all of which make the editor bounce around while you try to use it. My only bright idea would be to always show the header/counter and make it click to open with no pref for open by default.

In fact, it'd probably be nice if all options collapsed by default in compact mode, although others should probably remember prefs. Not sure how complicated it'd be to have separate states/prefs for compact layouts. 
",True,False,69,18418.166666666668
molgenis/molgenis/7495,2018-07-04T13:28:43Z,False,5b3ccb906480fd1bd1073e26,"@dennishendriksen Could you fix the merge conflicts?
",True,False,14,10332.2
openstyles/stylus/410,2018-07-04T14:03:54Z,False,5b3cd3ce6480fd17175ab47f,"Much better thanks!

> So the scrollbar is not a dot?

Yes, when looking at GitHub-dark - see the screen record I shared previously, I hover over the dot while scrolling. I found this [SO answer](https://stackoverflow.com/questions/26855012/make-a-codemirror-editor-and-its-gutter-100-height-of-container) which appears to work after refreshing the editor, but it leaves a big gap at the bottom.

> linter in compact mode

Maybe a fixed height on the `div` would work?

```css
#lint > div {
  height: 100px;
  overflow-y: auto;
}
```
",True,False,69,18418.166666666668
openstyles/stylus/410,2018-07-04T17:50:59Z,False,5b3d09076480fd1756405ec5,"> Sublime is set to spaces, but it fucks off on the first line after opening curly brackets, which is pretty annoying. I wonder if there's some config for it.

You should install [editorconfig-sublime](https://github.com/sindresorhus/editorconfig-sublime) to automatically set the editor to the correct indendation setting based on the current repo's `.editorconfig` file.",True,False,69,18418.166666666668
Microsoft/fast-dna/633,2018-07-04T19:01:34Z,False,5b3d1a0c6480fd16ad44b7a2,"I think you should separate float and clear. It isn't super intuitive from a readers perspective as to what this does when any particular param is passed.

If you make two functions (each one does one thing) and uses them when needed you will increase readability and reduce code complexity.

Also, since these are localizing floats and clears, we should probably make that clear with the function name.",True,False,14,2776.0833333333335
Microsoft/fast-dna/633,2018-07-04T19:02:59Z,False,5b3d1a0c6480fd1ab7cd72f3,none of these need to be functions anymore because the config is already available - you can just assign the value to the key.,True,False,14,2776.0833333333335
openstyles/stylus/410,2018-07-05T03:16:09Z,False,5b3d8d816480fd179792a54f,">You should install editorconfig-sublime 

Appreciate the tip, but I couldn't get it to fix this issue. I'm not all that experienced with configs for editors, but none I've found while googling work. Same shit in VS. Both say they're set to 2 spaces, but if you click enter after an opening curly bracket, they indent with a two space tab. It's fucking infuriating.",True,False,69,18418.166666666668
Microsoft/fast-dna/633,2018-07-05T04:01:35Z,False,5b3d98276480fd1a3d13948f,Updated based on this feedback.,True,False,14,2776.0833333333335
Microsoft/fast-dna/633,2018-07-05T04:02:23Z,False,5b3d985b6480fd1eb9edf893,"updated this across all other stylesheet instances (toggle, checkbox, button)",True,False,14,2776.0833333333335
openstyles/stylus/410,2018-07-05T09:22:20Z,False,5b3de3566480fd1bd1079ff5,">  if you click enter after an opening curly bracket

Weird, I never experiences this. Are you using any autocomplete plugins which could be the culprit? ",True,False,69,18418.166666666668
openstyles/stylus/410,2018-07-05T11:03:48Z,False,5b3dfb1e6480fd17eb573d89,">Weird, I never experiences this.

It respects spaces unless you hit enter after an opening bracket. I don't get it, and I've wasted a ridiculous amount of time now on something so stupid. What're your configs if you don't mind? For Sublime in general and Edit Config?",True,False,69,18418.166666666668
openstyles/stylus/410,2018-07-05T11:27:10Z,False,5b3e00966480fd1f8010d402,"> What're your configs
````
""auto_indent"": true,
""detect_indentation"": true,
""draw_indent_guides"": true,
""indent_subsequent_lines"": true,
""indent_to_bracket"": true,
""shift_tab_unindent"": true,
""smart_indent"": true,
""translate_tabs_to_spaces"": true,
""tab_size"": 2,
""trim_automatic_white_space"": true,
""trim_trailing_white_space_on_save"": true,
````
I have ""EditorConfig"" and ""Alignment"" plugins installed via Package control. Editorconfig is of course per-repo and the one in stylus looks alright to me for space indendation.
",True,False,69,18418.166666666668
molgenis/molgenis/7495,2018-07-05T13:25:18Z,False,5b3e28486480fd1e705d031c,with given ids,True,False,14,10332.2
molgenis/molgenis/7495,2018-07-05T13:44:11Z,False,5b3e28416480fd1b865b2bfb,See if you can reuse the generic Hits object instead.,True,False,14,10332.2
molgenis/molgenis/7495,2018-07-05T13:54:17Z,False,5b3e28496480fd1a01acff5c,"Add `create(Hit<T> ...hits)` method to clean up a couple of calls of the form 

`Hits.create(Arrays.asList(a, b))`, `Hits.create(singletonList(ontologyTermHit))` and `Hits.create(emptyList())`

to 

`Hits.create(a, b)`, `Hits.create(ontologyTermHit)` and `Hits.create()`",True,False,14,10332.2
molgenis/molgenis/7495,2018-07-05T13:55:05Z,False,5b3e28486480fd1d69d97d24,add `Optional<Hit> getFirstHit()` method,True,False,14,10332.2
molgenis/molgenis/7495,2018-07-05T14:13:57Z,False,5b3e28416480fd189770033b,create immutable copy of the search results,True,False,14,10332.2
molgenis/molgenis/7495,2018-07-05T14:14:42Z,False,5b3e28456480fd17eb575337,Create immutable copy of the hits,True,False,14,10332.2
zephyrproject-rtos/zephyr/8761,2018-07-05T15:35:47Z,False,5b3e3ae26480fd1ab7cddc85,cc @barsok ,True,False,11,6134.633333333333
zephyrproject-rtos/zephyr/8761,2018-07-05T15:42:34Z,False,5b3e3c766480fd1def81de9a,"Shouldn't it be defined a default compatible?
Does this compile?",True,False,11,6134.633333333333
zephyrproject-rtos/zephyr/8761,2018-07-05T15:54:42Z,False,5b3e3f4e6480fd16ed099137,"# [Codecov](https://codecov.io/gh/zephyrproject-rtos/zephyr/pull/8761?src=pr&el=h1) Report
> Merging [#8761](https://codecov.io/gh/zephyrproject-rtos/zephyr/pull/8761?src=pr&el=desc) into [master](https://codecov.io/gh/zephyrproject-rtos/zephyr/commit/6c0d089594c63afef36f27356ad35992c68ac1ce?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/zephyrproject-rtos/zephyr/pull/8761/graphs/tree.svg?width=650&height=150&src=pr&token=ftaqgO8OOj)](https://codecov.io/gh/zephyrproject-rtos/zephyr/pull/8761?src=pr&el=tree)

```diff
@@           Coverage Diff           @@
##           master    #8761   +/-   ##
=======================================
  Coverage   52.36%   52.36%           
=======================================
  Files         195      195           
  Lines       24713    24713           
  Branches     5136     5136           
=======================================
  Hits        12940    12940           
  Misses       9699     9699           
  Partials     2074     2074
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/zephyrproject-rtos/zephyr/pull/8761?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/zephyrproject-rtos/zephyr/pull/8761?src=pr&el=footer). Last update [6c0d089...bf5b7bd](https://codecov.io/gh/zephyrproject-rtos/zephyr/pull/8761?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",True,False,11,6134.633333333333
zephyrproject-rtos/zephyr/8761,2018-07-05T16:17:46Z,False,5b3e44af6480fd1eb9ee42c6,"@erwango it forces the .dts file that includes this .dtsi to set it explicitly.  I'm guessing that it will compile, but might get a warning.",True,False,11,6134.633333333333
Microsoft/fast-dna/633,2018-07-05T19:02:29Z,False,5b3e6b586480fd17eb577337,"what if I want to float something right in LTR? Maybe just a generic ""applyLocalizedValue"" would work for both of these - does that exist yet?:

```
float: applyLocalizedValue(""left"", ""right""),
clear: applyLocalizedValue(""left"", ""right"")
``` ",True,False,14,2776.0833333333335
Microsoft/fast-dna/633,2018-07-05T19:17:43Z,False,5b3e6edd6480fd1def81f5e4,"yeah - this makes way more sense. At this point, the function really doesn't provide a lot of value.
",True,False,14,2776.0833333333335
Microsoft/fast-dna/633,2018-07-05T19:43:29Z,False,5b3e74eb6480fd1a7abb0c4a,@nicholasrice updated with applyLocalizedProperty from jss-utils package.,True,False,14,2776.0833333333335
openstyles/stylus/410,2018-07-05T21:22:48Z,False,5b3e8c316480fd17175b607e,"Thanks @silverwind. Do Edit Config entries also go in the main Sublime config file? It has its own config, but no syntax seems to work in it. Anyway, I finally gave up and reinstalled from scratch, and it seems to have fixed it. Maybe I borked the install somehow.

@tophf How unrealistic would it be for options to collapse by default in compact mode? WDYT about the linter positioning issue in compact mode? ",True,False,69,18418.166666666668
openstyles/stylus/410,2018-07-05T21:24:02Z,False,5b3e8c786480fd1f0bfd3626,I think that's a separate issue which we can handle later.,True,False,69,18418.166666666668
openstyles/stylus/410,2018-07-05T21:26:28Z,False,5b3e8d0a6480fd1700b71303,"Collapsing options would be more of a feature than a bug-fix, but the linter bouncing around while you try to edit is a pretty bad bug that needs fixing IMO.",True,False,69,18418.166666666668
openstyles/stylus/410,2018-07-05T21:36:14Z,False,5b3e8f556480fd1a01ad2f33,My point is if it was that way before the PR then it's a separate issue.,True,False,69,18418.166666666668
openstyles/stylus/410,2018-07-05T21:54:27Z,False,5b3e939c6480fd1ae7626a9b,"Alright. Doesn't necessarily need to be fixed in this PR, but it shouldn't be left as it is. I imagine collapsing options might be related to fixing linter positioning if it's feasible. Otherwise, this PR is pretty solid, I think. ",True,False,69,18418.166666666668
magento-research/pwa-studio/104,2018-07-05T21:55:43Z,False,5b3e93e66480fd1897703506,"So there is a reason after all.

When a child component calls the function `submitOrder`, `submitOrder` needs to fire an async action (i.e., dispatch an async function). If we don't use `mapDispatchToProps` in this way, then calling `submitOrder` will not be able to fire an action, because `dispatch` will be undefined.

I think this process is correct.",True,False,14,8670.233333333334
Microsoft/fast-dna/633,2018-07-05T22:30:15Z,False,5b3e9c006480fd192d70bce9,"Sure, that's why my earlier suggestion was `get({config}, ""config.backgroundColor"")`.",True,False,14,2776.0833333333335
zephyrproject-rtos/zephyr/8761,2018-07-06T08:33:48Z,False,5b3f29756480fd1ae7629cd2,"@erwango Checked. If the user forgets to set compatible string, everything compiles without warning, then no labels in generated...h are produced for the UART. Shound't this change involve modifying dts to h generator?",True,False,11,6134.633333333333
zephyrproject-rtos/zephyr/8761,2018-07-06T08:40:45Z,False,5b3f2b196480fd17c1df6ecf,@galak where would you put default RAM size for uarte buffer? In this common data or anywhere else?,True,False,11,6134.633333333333
molgenis/molgenis/7495,2018-07-06T10:15:11Z,False,5b3f41396480fd16c3260a7d,"![MINOR](https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR') Use isEmpty() to check whether the collection is empty or not. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonarcloud.io/coding_rules#rule_key=squid%3AS1155)
",True,False,14,10332.2
molgenis/molgenis/7495,2018-07-06T10:15:12Z,False,5b3f41416480fd1def824133,"![CRITICAL](https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL') Refactor this method to reduce its Cognitive Complexity from 17 to the 15 allowed. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonarcloud.io/coding_rules#rule_key=squid%3AS3776)
",True,False,14,10332.2
molgenis/molgenis/7495,2018-07-06T10:15:13Z,False,5b3f41396480fd1b271d701f,"![MINOR](https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR') Rename this generic name to match the regular expression '^[A-Z][0-9]?$'. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonarcloud.io/coding_rules#rule_key=squid%3AS00119)
",True,False,14,10332.2
molgenis/molgenis/7495,2018-07-06T10:15:13Z,False,5b3f41386480fd17418f3485,"![MINOR](https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR') Rename this generic name to match the regular expression '^[A-Z][0-9]?$'. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonarcloud.io/coding_rules#rule_key=squid%3AS00119)
",True,False,14,10332.2
molgenis/molgenis/7495,2018-07-06T10:15:14Z,False,5b3f41386480fd1b4e5123ec,"SonarQube analysis reported 20 issues
* ![CRITICAL][CRITICAL] 13 critical
* ![MAJOR][MAJOR] 1 major
* ![MINOR][MINOR] 6 minor

Watch the comments in this conversation to review them.

#### Top 10 extra issues

Note: The following issues were found on lines that were not modified in the pull request. Because these issues can't be reported as line comments, they are summarized here:

1. ![CRITICAL][CRITICAL] [MappingConfig.java#L43](https://github.com/molgenis/molgenis/blob/3ce751989991ccdf1b167ee2f8f09ac8e4457707/molgenis-semantic-mapper/src/main/java/org/molgenis/semanticmapper/config/MappingConfig.java#L43): Inject this field value directly into ""algorithmServiceImpl"", the only method that uses it. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonarcloud.io/coding_rules#rule_key=squid%3AS3305)
1. ![CRITICAL][CRITICAL] [MappingConfig.java#L46](https://github.com/molgenis/molgenis/blob/3ce751989991ccdf1b167ee2f8f09ac8e4457707/molgenis-semantic-mapper/src/main/java/org/molgenis/semanticmapper/config/MappingConfig.java#L46): Inject this field value directly into ""unitResolver"", the only method that uses it. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonarcloud.io/coding_rules#rule_key=squid%3AS3305)
1. ![CRITICAL][CRITICAL] [MappingConfig.java#L49](https://github.com/molgenis/molgenis/blob/3ce751989991ccdf1b167ee2f8f09ac8e4457707/molgenis-semantic-mapper/src/main/java/org/molgenis/semanticmapper/config/MappingConfig.java#L49): Inject this field value directly into ""mappingProjectRepository"", the only method that uses it. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonarcloud.io/coding_rules#rule_key=squid%3AS3305)
1. ![CRITICAL][CRITICAL] [MappingConfig.java#L52](https://github.com/molgenis/molgenis/blob/3ce751989991ccdf1b167ee2f8f09ac8e4457707/molgenis-semantic-mapper/src/main/java/org/molgenis/semanticmapper/config/MappingConfig.java#L52): Inject this field value directly into ""mappingService"", the only method that uses it. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonarcloud.io/coding_rules#rule_key=squid%3AS3305)
1. ![CRITICAL][CRITICAL] [MappingConfig.java#L58](https://github.com/molgenis/molgenis/blob/3ce751989991ccdf1b167ee2f8f09ac8e4457707/molgenis-semantic-mapper/src/main/java/org/molgenis/semanticmapper/config/MappingConfig.java#L58): Inject this field value directly into ""attributeMappingRepository"", the only method that uses it. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonarcloud.io/coding_rules#rule_key=squid%3AS3305)
1. ![CRITICAL][CRITICAL] [MappingConfig.java#L61](https://github.com/molgenis/molgenis/blob/3ce751989991ccdf1b167ee2f8f09ac8e4457707/molgenis-semantic-mapper/src/main/java/org/molgenis/semanticmapper/config/MappingConfig.java#L61): Inject this field value directly into ""mappingService"", the only method that uses it. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonarcloud.io/coding_rules#rule_key=squid%3AS3305)
1. ![CRITICAL][CRITICAL] [MappingConfig.java#L64](https://github.com/molgenis/molgenis/blob/3ce751989991ccdf1b167ee2f8f09ac8e4457707/molgenis-semantic-mapper/src/main/java/org/molgenis/semanticmapper/config/MappingConfig.java#L64): Inject this field value directly into ""mappingProjectRepository"", the only method that uses it. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonarcloud.io/coding_rules#rule_key=squid%3AS3305)
1. ![CRITICAL][CRITICAL] [MappingConfig.java#L70](https://github.com/molgenis/molgenis/blob/3ce751989991ccdf1b167ee2f8f09ac8e4457707/molgenis-semantic-mapper/src/main/java/org/molgenis/semanticmapper/config/MappingConfig.java#L70): Inject this field value directly into ""algorithmServiceImpl"", the only method that uses it. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonarcloud.io/coding_rules#rule_key=squid%3AS3305)
1. ![CRITICAL][CRITICAL] [SemanticSearchConfig.java#L43](https://github.com/molgenis/molgenis/blob/3ce751989991ccdf1b167ee2f8f09ac8e4457707/molgenis-semantic-search/src/main/java/org/molgenis/semanticsearch/config/SemanticSearchConfig.java#L43): Inject this field value directly into ""semanticSearchServiceHelper"", the only method that uses it. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonarcloud.io/coding_rules#rule_key=squid%3AS3305)
1. ![CRITICAL][CRITICAL] [SemanticSearchConfig.java#L46](https://github.com/molgenis/molgenis/blob/3ce751989991ccdf1b167ee2f8f09ac8e4457707/molgenis-semantic-search/src/main/java/org/molgenis/semanticsearch/config/SemanticSearchConfig.java#L46): Inject this field value directly into ""ontologyTagService"", the only method that uses it. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonarcloud.io/coding_rules#rule_key=squid%3AS3305)

[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'
[MAJOR]: https://sonarsource.github.io/sonar-github/severity-major.png 'Severity: MAJOR'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",True,False,14,10332.2
molgenis/molgenis/7495,2018-07-06T11:42:31Z,False,5b3f55ae6480fd1e705d7797,"SonarQube analysis reported 18 issues
* ![CRITICAL][CRITICAL] 13 critical
* ![MAJOR][MAJOR] 1 major
* ![MINOR][MINOR] 4 minor

Watch the comments in this conversation to review them.

#### Top 10 extra issues

Note: The following issues were found on lines that were not modified in the pull request. Because these issues can't be reported as line comments, they are summarized here:

1. ![CRITICAL][CRITICAL] [MappingConfig.java#L43](https://github.com/molgenis/molgenis/blob/dcbda50fb083bc106222158dc11137dd09f41925/molgenis-semantic-mapper/src/main/java/org/molgenis/semanticmapper/config/MappingConfig.java#L43): Inject this field value directly into ""algorithmServiceImpl"", the only method that uses it. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonarcloud.io/coding_rules#rule_key=squid%3AS3305)
1. ![CRITICAL][CRITICAL] [MappingConfig.java#L46](https://github.com/molgenis/molgenis/blob/dcbda50fb083bc106222158dc11137dd09f41925/molgenis-semantic-mapper/src/main/java/org/molgenis/semanticmapper/config/MappingConfig.java#L46): Inject this field value directly into ""unitResolver"", the only method that uses it. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonarcloud.io/coding_rules#rule_key=squid%3AS3305)
1. ![CRITICAL][CRITICAL] [MappingConfig.java#L49](https://github.com/molgenis/molgenis/blob/dcbda50fb083bc106222158dc11137dd09f41925/molgenis-semantic-mapper/src/main/java/org/molgenis/semanticmapper/config/MappingConfig.java#L49): Inject this field value directly into ""mappingProjectRepository"", the only method that uses it. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonarcloud.io/coding_rules#rule_key=squid%3AS3305)
1. ![CRITICAL][CRITICAL] [MappingConfig.java#L52](https://github.com/molgenis/molgenis/blob/dcbda50fb083bc106222158dc11137dd09f41925/molgenis-semantic-mapper/src/main/java/org/molgenis/semanticmapper/config/MappingConfig.java#L52): Inject this field value directly into ""mappingService"", the only method that uses it. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonarcloud.io/coding_rules#rule_key=squid%3AS3305)
1. ![CRITICAL][CRITICAL] [MappingConfig.java#L58](https://github.com/molgenis/molgenis/blob/dcbda50fb083bc106222158dc11137dd09f41925/molgenis-semantic-mapper/src/main/java/org/molgenis/semanticmapper/config/MappingConfig.java#L58): Inject this field value directly into ""attributeMappingRepository"", the only method that uses it. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonarcloud.io/coding_rules#rule_key=squid%3AS3305)
1. ![CRITICAL][CRITICAL] [MappingConfig.java#L61](https://github.com/molgenis/molgenis/blob/dcbda50fb083bc106222158dc11137dd09f41925/molgenis-semantic-mapper/src/main/java/org/molgenis/semanticmapper/config/MappingConfig.java#L61): Inject this field value directly into ""mappingService"", the only method that uses it. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonarcloud.io/coding_rules#rule_key=squid%3AS3305)
1. ![CRITICAL][CRITICAL] [MappingConfig.java#L64](https://github.com/molgenis/molgenis/blob/dcbda50fb083bc106222158dc11137dd09f41925/molgenis-semantic-mapper/src/main/java/org/molgenis/semanticmapper/config/MappingConfig.java#L64): Inject this field value directly into ""mappingProjectRepository"", the only method that uses it. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonarcloud.io/coding_rules#rule_key=squid%3AS3305)
1. ![CRITICAL][CRITICAL] [MappingConfig.java#L70](https://github.com/molgenis/molgenis/blob/dcbda50fb083bc106222158dc11137dd09f41925/molgenis-semantic-mapper/src/main/java/org/molgenis/semanticmapper/config/MappingConfig.java#L70): Inject this field value directly into ""algorithmServiceImpl"", the only method that uses it. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonarcloud.io/coding_rules#rule_key=squid%3AS3305)
1. ![CRITICAL][CRITICAL] [SemanticSearchConfig.java#L43](https://github.com/molgenis/molgenis/blob/dcbda50fb083bc106222158dc11137dd09f41925/molgenis-semantic-search/src/main/java/org/molgenis/semanticsearch/config/SemanticSearchConfig.java#L43): Inject this field value directly into ""semanticSearchServiceHelper"", the only method that uses it. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonarcloud.io/coding_rules#rule_key=squid%3AS3305)
1. ![CRITICAL][CRITICAL] [SemanticSearchConfig.java#L46](https://github.com/molgenis/molgenis/blob/dcbda50fb083bc106222158dc11137dd09f41925/molgenis-semantic-search/src/main/java/org/molgenis/semanticsearch/config/SemanticSearchConfig.java#L46): Inject this field value directly into ""ontologyTagService"", the only method that uses it. [![rule](https://sonarsource.github.io/sonar-github/rule.png)](https://sonarcloud.io/coding_rules#rule_key=squid%3AS3305)

[CRITICAL]: https://sonarsource.github.io/sonar-github/severity-critical.png 'Severity: CRITICAL'
[MAJOR]: https://sonarsource.github.io/sonar-github/severity-major.png 'Severity: MAJOR'
[MINOR]: https://sonarsource.github.io/sonar-github/severity-minor.png 'Severity: MINOR'",True,False,14,10332.2
zephyrproject-rtos/zephyr/8761,2018-07-06T14:54:55Z,False,5b3f82c46480fd1b865bb38b,I think it would be a property in uarte node.  So we'd add it to the yaml & .dtsi.  However I do see how that would create a difference between uart and uarte.,True,False,11,6134.633333333333
openstyles/stylus/410,2018-07-07T09:27:21Z,False,5b40877f6480fd1fd14f74e4,"> Do Edit Config entries also go in the main Sublime config file

No, it can be configured in Preferences > Package Settings > EditorConfig, but you won't need to change that config, my config there is literally `{}` and configuration comes from the nearest `.editorconfig` file from the file you're currently editing (stopping at `root: true`).",True,False,69,18418.166666666668
jaredhanson/passport/533,2018-07-07T14:24:38Z,False,5b40cd296480fd17acfc5867,@lukaszmakuch if you create a PR against https://github.com/passport-next/passport this will get looked into.,True,False,8,794204.4666666667
openstyles/stylus/410,2018-07-07T22:38:05Z,False,5b4140d06480fd16c3269b8a,">`Preferences > Package Settings > EditorConfig`

I figured, but like I mentioned, the syntax is a mystery to me. I must've borked my Sublime install with plugins or configs. Reinstalling and adding some of your configs seems to have done the trick, so I don't need any global overrides for Edit Config either. Still would be nice to know the correct syntax for them. 

I tried the sample they provide on Github, and also attempted converting it to traditional JSON syntax, but couldn't get any of it to work. Don't need to experiment with it anymore, so it's not a priority. Thanks again.",True,False,69,18418.166666666668
openstyles/stylus/410,2018-07-08T19:02:28Z,False,5b425fc96480fd1d69dac537,Are we good with merging this PR?,True,False,69,18418.166666666668
openstyles/stylus/410,2018-07-08T19:08:18Z,False,5b4261a26480fd16ad465d15,We're using 15px in other files.,True,False,69,18418.166666666668
openstyles/stylus/410,2018-07-08T19:12:27Z,False,5b42621c6480fd1dc20963e6,why was it changed?,True,False,69,18418.166666666668
openstyles/stylus/410,2018-07-08T19:18:34Z,False,5b4263926480fd1b865c6fee,"Combined 2 or 3 screens into 1 in some cases. Best estimate of when compact becomes necessary, but we can switch back to 850px.",True,False,69,18418.166666666668
openstyles/stylus/410,2018-07-08T19:19:40Z,False,5b4263d16480fd1797942aaa,"My point is, if there was no problem with the existing number then there's no need to change it. Same for the other screens.",True,False,69,18418.166666666668
openstyles/stylus/410,2018-07-08T19:22:21Z,False,5b4264746480fd1b865c702b,"Sure, NBD. ",True,False,69,18418.166666666668
openstyles/stylus/410,2018-07-08T19:24:38Z,False,5b4264fe6480fd169851e241,I don't even recall what this element is. I imagine I switched it to match a sibling.,True,False,69,18418.166666666668
openstyles/stylus/410,2018-07-08T20:13:17Z,False,5b4270646480fd1def832001,I assume from the CSS that it's a header replacement for warnings on invalid usercss code. Can anyone check if it's accounted for in the compact layout? Guess you'd need to force an error?,True,False,69,18418.166666666668
openstyles/stylus/410,2018-07-08T20:59:33Z,False,5b427b396480fd176b7375da,Checked out warnings. Should be good now.,True,False,69,18418.166666666668
openstyles/stylus/410,2018-07-09T09:40:51Z,False,5b432dac6480fd16d519b9ec,"The right and left margins of the site column in the manager are too big now.

Old:

![1](https://user-images.githubusercontent.com/1310400/42443038-0c5812a6-8375-11e8-8a16-a0864712c794.png)

New: 

![2](https://user-images.githubusercontent.com/1310400/42443081-2decf0bc-8375-11e8-8a98-a7c5965ef2fb.png)
",True,False,69,18418.166666666668
zephyrproject-rtos/zephyr/8761,2018-07-09T11:03:06Z,False,5b4340fa6480fd1d143eac79,@jarz-nordic @barsok can you please re-review and approve or request changes?,True,False,11,6134.633333333333
zephyrproject-rtos/zephyr/8761,2018-07-09T11:07:48Z,False,5b43420e6480fd1698522caf,@galak ^^,True,False,11,6134.633333333333
zephyrproject-rtos/zephyr/8761,2018-07-09T21:46:17Z,False,5b43d7af6480fd17c1e0ee53,"hmm, let me look, wonder how that even works w/o a compatible.",True,False,11,6134.633333333333
zephyrproject-rtos/zephyr/8761,2018-07-09T21:50:25Z,False,5b43d8b26480fd181dad1e2b,"@barsok what do you mean forget to set the compatible string.  For example if I do the following for 96b_nitrogen:

```
diff --git a/boards/arm/96b_nitrogen/96b_nitrogen.dts b/boards/arm/96b_nitrogen/96b_nitrogen.dts
index 752b40a41f..2c06f489ea 100644
--- a/boards/arm/96b_nitrogen/96b_nitrogen.dts
+++ b/boards/arm/96b_nitrogen/96b_nitrogen.dts
@@ -28,7 +28,6 @@
 };
 
 &uart0 {
-       compatible = ""nordic,nrf-uart"";
        current-speed = <115200>;
        status = ""ok"";
 };
```

I get the following when trying to build hello_world:

```
/home/galak/git/zephyr/drivers/serial/uart_nrfx_uart.c: In function ‘uart_nrfx_init’:
/home/galak/git/zephyr/samples/hello_world/build/zephyr/include/generated/generated_dts_board.h:101:34: error: ‘NORDIC_NRF_UART_40002000_CURRENT_SPEED’ undeclared (first use in this function)
 #define CONFIG_UART_0_BAUD_RATE  NORDIC_NRF_UART_40002000_CURRENT_SPEED
                                  ^
/home/galak/git/zephyr/samples/hello_world/build/zephyr/include/generated/generated_dts_board.h:101:34: note: in definition of macro ‘CONFIG_UART_0_BAUD_RATE’
 #define CONFIG_UART_0_BAUD_RATE  NORDIC_NRF_UART_40002000_CURRENT_SPEED
                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/galak/git/zephyr/samples/hello_world/build/zephyr/include/generated/generated_dts_board.h:101:34: note: each undeclared identifier is reported only once for each function it appears in
 #define CONFIG_UART_0_BAUD_RATE  NORDIC_NRF_UART_40002000_CURRENT_SPEED
                                  ^
/home/galak/git/zephyr/samples/hello_world/build/zephyr/include/generated/generated_dts_board.h:101:34: note: in definition of macro ‘CONFIG_UART_0_BAUD_RATE’
 #define CONFIG_UART_0_BAUD_RATE  NORDIC_NRF_UART_40002000_CURRENT_SPEED
                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/galak/git/zephyr/include/uart.h:29:0,
                 from /home/galak/git/zephyr/drivers/serial/uart_nrfx_uart.c:11:
/home/galak/git/zephyr/drivers/serial/uart_nrfx_uart.c: At top level:
/home/galak/git/zephyr/samples/hello_world/build/zephyr/include/generated/generated_dts_board.h:102:29: error: ‘NORDIC_NRF_UART_40002000_LABEL’ undeclared here (not in a function)
 #define CONFIG_UART_0_NAME  NORDIC_NRF_UART_40002000_LABEL
                             ^
/home/galak/git/zephyr/include/device.h:106:11: note: in definition of macro ‘DEVICE_AND_API_INIT’
   .name = drv_name, .init = (init_fn),     \
           ^~~~~~~~
/home/galak/git/zephyr/drivers/serial/uart_nrfx_uart.c:475:7: note: in expansion of macro ‘CONFIG_UART_0_NAME’
       CONFIG_UART_0_NAME,
       ^~~~~~~~~~~~~~~~~~
make[2]: *** [zephyr/drivers/serial/CMakeFiles/drivers__serial.dir/build.make:63: zephyr/drivers/serial/CMakeFiles/drivers__serial.dir/uart_nrfx_uart.c.obj] Error 1
make[1]: *** [CMakeFiles/Makefile2:2168: zephyr/drivers/serial/CMakeFiles/drivers__serial.dir/all] Error 2
make: *** [Makefile:84: all] Error 2
```",True,False,11,6134.633333333333
zulip/zulip/9923,2018-07-10T17:14:56Z,False,5b44e99b6480fd1e368c6e8f,"just a passing review...

This is all css/template changes.  Looks pretty reasonable to me code-wise.",True,False,9,4053.483333333333
openstyles/stylus/410,2018-07-10T19:05:26Z,False,5b4503826480fd1ae764a7ed,"For this kinda update, we want as much confirmation that it's bug free in as many different languages as possible. Test it now, or forever hold your peace. The objective is better element wrapping in general, and far more responsive compact layouts at narrow widths, so either undock your browser and resize, or dock devtools to the side and resize by dragging their edge. Not really looking for subjective opinions on details, just bugs. A simple thumbs-up will do if everything is copacetic. 

@Mottie @eight04 @silverwind @DanaMW @stonecrusher @Hippyjake @DecentM @derv82 @JourneyOver ",True,False,69,18418.166666666668
zulip/zulip/9923,2018-07-10T19:11:52Z,False,5b4504fd6480fd1897727112,Have you checked [Font awesome](https://fontawesome.com/v4.7.0) to check if there was already an icon that could be suited for grip usage? [Vertical ellipsis](https://fontawesome.com/v4.7.0/icon/ellipsis-v) and [bars](https://fontawesome.com/v4.7.0/icon/bars) seem appropriate for me (probably worth starting a discussion on chat.zulip.org though),True,False,9,4053.483333333333
zulip/zulip/9923,2018-07-10T20:22:41Z,False,5b45159a6480fd17acfde523,"Yeah, we're using an older version of font awesome that doesn't support those icons. Figured it was easier to create something than to upgrade font awesome for now.",True,False,9,4053.483333333333
zulip/zulip/9923,2018-07-10T20:31:49Z,False,5b4517bd6480fd1e368c83d1,We're using font awesome v4.7.0. Those icons are from v4.7.0.,True,False,9,4053.483333333333
zulip/zulip/9923,2018-07-10T20:34:30Z,False,5b45185f6480fd1a7abd6730,"Whoops—I couldn't get them to work and assumed we were on an older version, clearly I was wrong. I'll update this to use font awesome. Thanks for catching!",True,False,9,4053.483333333333
openstyles/stylus/410,2018-07-11T03:39:56Z,False,5b457c126480fd17fff30558,"<details><summary>Dashboard</summary>

![default](https://user-images.githubusercontent.com/1324510/42548840-be5b4536-84fb-11e8-8207-203bf26f0977.png)
* `padding-bottom` becomes zero
</details>

<details><summary>Usercss editor</summary>

![default](https://user-images.githubusercontent.com/1324510/42548971-662445b0-84fc-11e8-9bfa-fb46d7f3b0d1.png)
* The inner padding of applies-to toolbar is not consistent.
* `+`/`-` buttons doesn't work. `event` is not defined.
  https://github.com/openstyles/stylus/blob/01606d35b047fdb7b01cfe6d3714aea46df81e36/edit/applies-to-line-widget.js#L44
  https://github.com/openstyles/stylus/blob/01606d35b047fdb7b01cfe6d3714aea46df81e36/edit/applies-to-line-widget.js#L77
</details>

<details><summary>Usercss installation page</summary>

![default](https://user-images.githubusercontent.com/1324510/42549391-778dcd6a-84fe-11e8-91d2-036f1fcf9bf4.png)
The editor is unusable when the header is large.
</details>",True,False,69,18418.166666666668
openstyles/stylus/410,2018-07-11T04:16:01Z,False,5b4584856480fd1f80139d8a,"> Dashboard

Nothing to do with this PR. AFAICT, it's that way in the master, and only occurs in FF. Not to say we shouldn't fix it.

> The inner padding of applies-to toolbar is not consistent.

Simple fix.

>`+/-`  buttons doesn't work. event is not defined.

Yeah, works in the regular editor, not usercss apparently.

>Usercss installation page header

Those are pretty long strings at pretty narrow widths (and short height?). We could nowrap/ellipsis those long strings, or `max-height` the header with a scrollbar, or both. WDYT? Not like you really ""use"" the editor on install pages, but it shouldn't be hidden. 
",True,False,69,18418.166666666668
openstyles/stylus/410,2018-07-11T04:33:18Z,False,5b4588906480fd1700b976d5,"> Those are pretty long strings at pretty narrow widths (and short height?). We could nowrap/ellipsis those long strings, or max-height the header with a scrollbar, or both. WDYT? Not like you really ""use"" the editor on install pages, but it shouldn't be hidden.

How about giving the editor a min-height? So that users can scroll down to see the entire editor.",True,False,69,18418.166666666668
openstyles/stylus/410,2018-07-11T04:39:37Z,False,5b458a106480fd1a01af9279,">So that users can scroll down to see the entire editor.

Unlike normal editor pages, usercss overflow is handled by CM. You wanna force double scrollbars at narrow widths? I don't use usercss, so maybe show me what you'd prefer.",True,False,69,18418.166666666668
openstyles/stylus/410,2018-07-11T05:00:24Z,False,5b458eed6480fd1eb9f0d8f4,"I don't use mobile so I can't tell how double scrollbars act. If the installation page was designed for mobile, I would probably put the information and the source code in different tabs.",True,False,69,18418.166666666668
pmmp_____PocketMine-MP_____2296,2018-07-11T08:50:31Z,True,pmmp_____PocketMine-MP_____2296_____200628139,"## Introduction
Since 1.5.0 is such a piece of garbage, this pull request will remain open until patches have been issued to solve the problems with it.",True,True,29,5991.683333333333
zulip/zulip/9923,2018-07-11T13:48:59Z,False,5b460ad16480fd17564396b6,"@maxnuss the second commit actually broke the ""X"" feature (because of some fragile JS; I just fixed that in ); next time, if you're editing HTML for a feature, remember to do some manually testing.  @YJDave FYI (since you wrote the original fragile JavaScript; the `.closest` and `.find` methods are much better for this purpose than using `.parent()` and, `.prev()`, because they're more stable if we do minor edits to the templates.

I merged all the commits except for the one needing font-awesome work; thanks @maxnuss!  I pushed just the remaining commit back to this PR; so if you do a `git fetch` you should be able to reset your local repo to point to the correct version of this branch with just that one commit, but `git rebase` followed by `git rebase --skip` should work well too.
",True,False,9,4053.483333333333
zulip/zulip/9923,2018-07-11T14:56:24Z,False,5b461aa46480fd179795ff50,"Thanks @timabbott !

Just pushed an update that changes this to use Font Awesome. Takes a bit of custom CSS to get the Font Awesome to look right anyway, so I'm not sure this is better than the previous pure CSS draggable component. Lmk what you guys think.",True,False,9,4053.483333333333
pmmp_____PocketMine-MP_____2296,2018-07-11T15:01:51Z,True,pmmp_____PocketMine-MP_____2296_____404202044,Lol is the protocol garbage or the game content itself?,True,True,29,5991.683333333333
pmmp_____PocketMine-MP_____2296,2018-07-11T15:01:52Z,True,pmmp_____PocketMine-MP_____2296_____404202053,Lol is the protocol garbage or the game content itself?,True,True,29,5991.683333333333
pmmp_____PocketMine-MP_____2296,2018-07-11T15:04:09Z,True,pmmp_____PocketMine-MP_____2296_____404202866,"try opening the game, or playing it... also try using floating text or NPCs. Have fun.

1.5.0 is legitimately the worst update I've seen yet.",True,True,29,5991.683333333333
pmmp_____PocketMine-MP_____2296,2018-07-11T15:05:33Z,True,pmmp_____PocketMine-MP_____2296_____404203368,I wish they would stop adding new features and just fix everything,True,True,29,5991.683333333333
pmmp_____PocketMine-MP_____2296,2018-07-11T15:06:55Z,True,pmmp_____PocketMine-MP_____2296_____404203860,it's not features... just really terrible quality... you're better off using 1.5.0.10 beta if you want to use this. It's faster and doesn't crash and freeze at every opportunity.,True,True,29,5991.683333333333
pmmp_____PocketMine-MP_____2296,2018-07-11T16:10:24Z,True,pmmp_____PocketMine-MP_____2296_____404226037,".PHAR ?
",True,True,29,5991.683333333333
pmmp_____PocketMine-MP_____2296,2018-07-11T22:46:28Z,True,pmmp_____PocketMine-MP_____2296_____404334014,setNameTag not working. Is this problem caused by me? ,True,True,29,5991.683333333333
pmmp_____PocketMine-MP_____2296,2018-07-11T23:03:04Z,True,pmmp_____PocketMine-MP_____2296_____404337247,"no, it's not just you... add it to the list of things mojang broke in this update",True,True,29,5991.683333333333
algorithm-archivists_____algorithm-archive_____114,2018-07-12T05:53:44Z,True,algorithm-archivists_____algorithm-archive_____114_____201916478,Commented out code.,True,True,46,89673.71666666666
algorithm-archivists_____algorithm-archive_____114,2018-07-12T05:56:18Z,True,algorithm-archivists_____algorithm-archive_____114_____201916833,Do we need to cast to double here?,True,True,46,89673.71666666666
pmmp_____PocketMine-MP_____2296,2018-07-12T09:37:02Z,True,pmmp_____PocketMine-MP_____2296_____404452832,Pls so 1.5.0,True,True,29,5991.683333333333
pmmp_____PocketMine-MP_____2296,2018-07-12T09:38:01Z,True,pmmp_____PocketMine-MP_____2296_____404453124,@Prisane Here is a quick fix. https://pastebin.com/Je86E0kx,True,True,29,5991.683333333333
pmmp_____PocketMine-MP_____2296,2018-07-12T09:53:25Z,True,pmmp_____PocketMine-MP_____2296_____404457505,Wtf! Why Spam lol,True,True,29,5991.683333333333
pmmp_____PocketMine-MP_____2296,2018-07-12T09:56:04Z,True,pmmp_____PocketMine-MP_____2296_____404458327,"EY,du scheiß Nazi hör auf sonst ddos ich dich du huso,und hau dir in die fresse du kleiner wixer,komm 1vs1",True,True,29,5991.683333333333
Microsoft/msbuild/3509,2018-07-12T18:20:24Z,False,5b47a1816480fd192d741703,Is this needed for a mostly-not-called function?,True,False,24,1446.95
Microsoft/msbuild/3509,2018-07-12T18:24:47Z,False,5b479cfd6480fd1741924b92,"Reflection calls. The ones in bold have been short-circuited.

OrchardCore
![image](https://user-images.githubusercontent.com/2255729/42652057-1e11142c-85c6-11e8-8fb3-94e046c80163.png)

100 vcxproj projects
![image](https://user-images.githubusercontent.com/2255729/42652075-2c6099a8-85c6-11e8-85b1-e39560251aef.png)
",True,False,24,1446.95
Microsoft/msbuild/3509,2018-07-12T18:27:48Z,False,5b47a1826480fd1698541d8a,"Could this be done with

```c#
string.Join("", "", args?.Select(a => a?.GetType().Name ?? ""null"") ?? Array.Empty<string>);
```

? It tripped my have-to-think-hard-about this meter (even though I love a good map-reduce!). But I'm not sure this is that much better.",True,False,24,1446.95
Microsoft/msbuild/3509,2018-07-12T18:31:26Z,False,5b47a1806480fd16ad488ac7,Nice! Can you included in the commit notes a ballpark of how often this ran? And did you test against a static but not compiled version? Compilation takes enough time that the better runtime perf isn't always a clean win :(,True,False,24,1446.95
Microsoft/msbuild/3509,2018-07-12T18:32:16Z,False,5b47a1806480fd1fd1522d7a,"opportunity for 

```c#
if (objectInstance is string text)
```",True,False,24,1446.95
Microsoft/msbuild/3509,2018-07-12T18:37:10Z,False,5b47a17f6480fd1c7c5da627,Do you recall where this and `IsNullOrWhiteSpace` got called? I wonder if we could use `[MSBuild]::ValueOrDefault` to simplify the invocations.,True,False,24,1446.95
Microsoft/msbuild/3509,2018-07-12T18:38:54Z,False,5b47a17f6480fd1700ba5fce,[citation needed] :),True,False,24,1446.95
Microsoft/msbuild/3509,2018-07-12T18:43:57Z,False,5b47a1806480fd1897738bf4,What's the advantage of `ArraySegment`? I don't think I've used it before.,True,False,24,1446.95
Microsoft/msbuild/3509,2018-07-12T20:08:58Z,False,5b47b5656480fd16c3292444,"### DesignTimeBuild Time (ms) (src\msbuild.master vs src\msbuild.mihai)
Test | Overall | Significant δ  | Value
:--- | :--- | :--- | :---
DotnetConsoleProject | ::ok_hand: | no | 37.1118 -> 37.0284 (-0.225%)
DotnetWebProject | :white_check_mark: | yes | 235.2594 -> 232.5028 (-1.172%)
DotnetMvcProject | :ok_hand: | no | 235.0471 -> 235.1835 (0.058%)
Picasso | :white_check_mark: | yes | 1572.8186 -> 1555.9574 (-1.072%)
SmallP2POldCsproj | :white_check_mark: | yes | 69.4893 -> 67.8582 (-2.347%)
SmallP2PNewCsproj | :white_check_mark: | yes | 664.6385 -> 658.5419 (-0.917%)
LargeP2POldCsproj | :white_check_mark: | yes | 11501.4756 -> 11376.1087 (-1.09%)
OrchardCore | :white_check_mark: | yes | 48930.9478 -> 47817.0077 (-2.277%)

### DesignTimeBuild Memory (bytes) (src\msbuild.master vs src\msbuild.mihai)
Test | Overall | Significant δ  | Value
:--- | :--- | :--- | :---
DotnetConsoleProject | ::ok_hand: | no | 6279217 -> 6278979 (-0.004%)
DotnetWebProject | :red_circle: | yes | 20230813 -> 22398128 (10.713%)
DotnetMvcProject | :ok_hand: | no | 20886443 -> 21925050 (4.973%)
Picasso | ::ok_hand: | no | 186588876 -> 185431429 (-0.62%)
SmallP2POldCsproj | :white_check_mark: | yes | 8606975 -> 8562468 (-0.517%)
SmallP2PNewCsproj | ::ok_hand: | no | 91247792 -> 89802752 (-1.584%)
LargeP2POldCsproj | :red_circle: | yes | 1034724720 -> 1147210958 (10.871%)
OrchardCore | :red_circle: | yes | 2581842386 -> 2741507150 (6.184%)

### SerialEvaluationIsolatedContext Time (ms) (src\msbuild.master vs src\msbuild.mihai)
Test | Overall | Significant δ  | Value
:--- | :--- | :--- | :---
DotnetConsoleProject | :white_check_mark: | yes | 35.2617 -> 34.7913 (-1.334%)
DotnetWebProject | :white_check_mark: | yes | 48.9882 -> 48.5883 (-0.816%)
DotnetMvcProject | :white_check_mark: | yes | 55.0544 -> 54.5799 (-0.862%)
Picasso | :white_check_mark: | yes | 308.0885 -> 301.5054 (-2.137%)
SmallP2POldCsproj | :white_check_mark: | yes | 52.2886 -> 51.0734 (-2.324%)
SmallP2PNewCsproj | :white_check_mark: | yes | 209.8334 -> 206.4325 (-1.621%)
LargeP2POldCsproj | ::ok_hand: | no | 900.8613 -> 900.4663 (-0.044%)
OrchardCore | :white_check_mark: | yes | 3218.4146 -> 3123.2646 (-2.956%)

### SerialEvaluationIsolatedContext Memory (bytes) (src\msbuild.master vs src\msbuild.mihai)
Test | Overall | Significant δ  | Value
:--- | :--- | :--- | :---
DotnetConsoleProject | :white_check_mark: | yes | 5702663 -> 5684519 (-0.318%)
DotnetWebProject | :white_check_mark: | yes | 7710009 -> 7680896 (-0.378%)
DotnetMvcProject | :white_check_mark: | yes | 8363203 -> 8301209 (-0.741%)
Picasso | ::ok_hand: | no | 13359602 -> 13215379 (-1.08%)
SmallP2POldCsproj | :white_check_mark: | yes | 7036487 -> 7001199 (-0.502%)
SmallP2PNewCsproj | ::ok_hand: | no | 15922822 -> 15603138 (-2.008%)
LargeP2POldCsproj | :white_check_mark: | yes | 40520262 -> 39211006 (-3.231%)
OrchardCore | :white_check_mark: | yes | 70136930 -> 64014473 (-8.729%)

### SerialEvaluationSharedContextSecondRun Time (ms) (src\msbuild.master vs src\msbuild.mihai)
Test | Overall | Significant δ  | Value
:--- | :--- | :--- | :---
DotnetConsoleProject | :white_check_mark: | yes | 29.8847 -> 29.7108 (-0.582%)
DotnetWebProject | :white_check_mark: | yes | 37.9755 -> 37.2946 (-1.793%)
DotnetMvcProject | :white_check_mark: | yes | 40.2139 -> 39.8075 (-1.011%)
Picasso | :red_circle: | yes | 226.675 -> 234.3648 (3.392%)
SmallP2POldCsproj | :white_check_mark: | yes | 42.4423 -> 41.8703 (-1.348%)
SmallP2PNewCsproj | :white_check_mark: | yes | 134.8495 -> 131.8089 (-2.255%)
LargeP2POldCsproj | :white_check_mark: | yes | 694.3975 -> 669.0949 (-3.644%)
Generated_100_100_v150 | :white_check_mark: | yes | 1161.3624 -> 1156.8389 (-0.389%)
OrchardCore | :white_check_mark: | yes | 1626.9961 -> 1586.9323 (-2.462%)
Roslyn | :white_check_mark: | yes | 2845.2065 -> 2688.0992 (-5.522%)
WebLargeCore | :white_check_mark: | yes | 1893.4628 -> 1803.1883 (-4.768%)

### SerialEvaluationSharedContextSecondRun Memory (bytes) (src\msbuild.master vs src\msbuild.mihai)
Test | Overall | Significant δ  | Value
:--- | :--- | :--- | :---
DotnetConsoleProject | :white_check_mark: | yes | 5567398 -> 5543189 (-0.435%)
DotnetWebProject | :white_check_mark: | yes | 6907511 -> 6890424 (-0.247%)
DotnetMvcProject | :white_check_mark: | yes | 7374540 -> 7317392 (-0.775%)
Picasso | :white_check_mark: | yes | 36645679 -> 11920314 (-67.471%)
SmallP2POldCsproj | :white_check_mark: | yes | 6984487 -> 6944347 (-0.575%)
SmallP2PNewCsproj | :white_check_mark: | yes | 23265794 -> 23074707 (-0.821%)
LargeP2POldCsproj | ::ok_hand: | no | 37038440 -> 36405095 (-1.71%)
Generated_100_100_v150 | ::ok_hand: | no | 46123401 -> 45834880 (-0.626%)
OrchardCore | :white_check_mark: | yes | 62708212 -> 59094350 (-5.763%)
Roslyn | :red_circle: | yes | 89093238 -> 92241843 (3.534%)
WebLargeCore | :white_check_mark: | yes | 80517801 -> 70285429 (-12.708%)

### SerialEvaluationSharedContext Time (ms) (src\msbuild.master vs src\msbuild.mihai)
Test | Overall | Significant δ  | Value
:--- | :--- | :--- | :---
DotnetConsoleProject | :white_check_mark: | yes | 34.221 -> 34.0523 (-0.493%)
DotnetWebProject | :white_check_mark: | yes | 48.4864 -> 47.796 (-1.424%)
DotnetMvcProject | :white_check_mark: | yes | 54.3964 -> 53.9937 (-0.74%)
Picasso | :white_check_mark: | yes | 255.861 -> 231.784 (-9.41%)
SmallP2POldCsproj | :white_check_mark: | yes | 46.0774 -> 45.5629 (-1.117%)
SmallP2PNewCsproj | :white_check_mark: | yes | 172.136 -> 168.4795 (-2.124%)
LargeP2POldCsproj | :white_check_mark: | yes | 742.3241 -> 715.3558 (-3.633%)
Generated_100_100_v150 | :white_check_mark: | yes | 1169.6608 -> 1161.3306 (-0.712%)
OrchardCore | :white_check_mark: | yes | 2189.3402 -> 2129.8961 (-2.715%)
Roslyn | :white_check_mark: | yes | 3365.0734 -> 3202.2046 (-4.84%)
WebLargeCore | :white_check_mark: | yes | 2360.2946 -> 2254.3412 (-4.489%)

### SerialEvaluationSharedContext Memory (bytes) (src\msbuild.master vs src\msbuild.mihai)
Test | Overall | Significant δ  | Value
:--- | :--- | :--- | :---
DotnetConsoleProject | :white_check_mark: | yes | 5771910 -> 5748136 (-0.412%)
DotnetWebProject | :white_check_mark: | yes | 7760177 -> 7732938 (-0.351%)
DotnetMvcProject | :white_check_mark: | yes | 8403050 -> 8350323 (-0.627%)
Picasso | :red_circle: | yes | 13871030 -> 36699319 (164.575%)
SmallP2POldCsproj | :white_check_mark: | yes | 7042074 -> 7007661 (-0.489%)
SmallP2PNewCsproj | :red_circle: | yes | 13181440 -> 14484758 (9.888%)
LargeP2POldCsproj | :white_check_mark: | yes | 38477350 -> 38010180 (-1.214%)
Generated_100_100_v150 | :white_check_mark: | yes | 46859250 -> 46535416 (-0.691%)
OrchardCore | :red_circle: | yes | 67108262 -> 74457303 (10.951%)
Roslyn | ::ok_hand: | no | 90318906 -> 88930282 (-1.537%)
WebLargeCore | :ok_hand: | no | 65108334 -> 68359961 (4.994%)",True,False,24,1446.95
Microsoft/msbuild/3509,2018-07-12T20:14:34Z,False,5b47b6b26480fd16985426f7,"Yeah, yours looks better. :)",True,False,24,1446.95
Microsoft/msbuild/3509,2018-07-12T20:17:07Z,False,5b47b74b6480fd1d1440ad98,"It was called hundreds of time, so I just assumed compilation would be better at that point. I'll undo that commit and run the perf tests again, to see how it moves the needle.",True,False,24,1446.95
Microsoft/msbuild/3509,2018-07-12T20:19:00Z,False,5b47b7bc6480fd1e70608b6f,"My plan is to take this PR first, and rebase and re-adjust #3502, which does exactly this.
",True,False,24,1446.95
Microsoft/msbuild/3509,2018-07-12T20:22:21Z,False,5b47b8886480fd1d69dd0349,Sadly the Expander.Function object does not know the IElementLocation. But for experimentation's sake I'll pipe the location down and log it.,True,False,24,1446.95
Microsoft/msbuild/3509,2018-07-12T20:23:54Z,False,5b47b8e46480fd16d51bbc89,"It's like Span and Memory, but from the distant net46 past.",True,False,24,1446.95
Microsoft/msbuild/3509,2018-07-12T21:30:35Z,False,5b47c87f6480fd17d6c785ea,Could also just grep through a preprocessed project or two; I don't feel super strongly about this.,True,False,24,1446.95
Microsoft/msbuild/3509,2018-07-12T21:30:55Z,False,5b47c8986480fd1a3d1763ee,"""hundreds of times"" is enough for me :)",True,False,24,1446.95
Microsoft/msbuild/3509,2018-07-12T22:45:56Z,False,5b47da296480fd1f3d248873,"Turns out the regex is never called at all on old and new style csprojes! So I left the static Regex, but removed the compiled flag just in case.",True,False,24,1446.95
Microsoft/msbuild/3509,2018-07-13T00:00:21Z,False,5b47eba56480fd181daee9e5,"Apparently it wasn't very hard to tweak the code to print the location. Sadly the callsites cannot be converted to `[MSBuild]::ValueOrDefault`:

https://github.com/Microsoft/msbuild/blob/master/src/Tasks/Microsoft.Common.CurrentVersion.targets#L75

https://github.com/Microsoft/msbuild/blob/master/src/Tasks/Microsoft.Common.CurrentVersion.targets#L5998

",True,False,24,1446.95
Microsoft/msbuild/3509,2018-07-13T05:26:13Z,False,5b4837fb6480fd1c7c5dda81,"In case anyone else was wondering the same thing I did (just in case):

Method | Mean | Error | StdDev | Allocated
-- | -- | -- | -- | --
CheckEqualUsingString | 1.676 ns | 0.0042 ns | 0.0039 ns | 0 B
CheckEqualUsingNameOf | 1.723 ns | 0.0054 ns | 0.0051 ns | 0 B
",True,False,24,1446.95
zulip/zulip/9923,2018-07-13T12:34:03Z,False,5b489c436480fd17fff45489,"Heads up @maxnuss, we just merged some commits that conflict with the changes your made in this pull request! You can review this repository's [recent commits](https://github.com/zulip/zulip/commits/master) to see where the conflicts occur. Please rebase your feature branch against the `upstream/master` branch and [resolve](https://zulip.readthedocs.io/en/latest/git/troubleshooting.html#recover-from-a-git-rebase-failure) your pull request's merge conflicts accordingly.

<!-- mergeConflictWarning -->",True,False,9,4053.483333333333
zulip/zulip/9923,2018-07-13T12:48:25Z,False,5b489f9f6480fd16ed0d60e7,"I rebased and merged the last commit, thanks @maxnuss!  ",True,False,9,4053.483333333333
Microsoft/msbuild/3509,2018-07-13T14:16:27Z,False,5b48b4416480fd17eb5b3bcd,"@AndyGerlicher My understanding is that `nameof()` is a compile-time operation that results in an embedded string. For example, https://dotnetfiddle.net/GUmkPz -- go to ""view IL""

```c#
Console.WriteLine(nameof(Main));
```

compiles to

```msil
    IL_0001:  ldstr      ""Main""
    IL_0006:  call       void [mscorlib]System.Console::WriteLine(string)
```",True,False,24,1446.95
Microsoft/msbuild/3509,2018-07-13T16:07:56Z,False,5b48ce636480fd16c329900d,I shamefully bypassed the benchmark and just trusted this educational article: http://www.erikschierboom.com/2015/12/31/csharp6-under-the-hood-nameof/,True,False,24,1446.95
Microsoft/msbuild/3509,2018-07-13T16:16:10Z,False,5b48d04f6480fd1e368e1060,@dotnet-bot test this please,True,False,24,1446.95
Microsoft/msbuild/3509,2018-07-13T16:23:23Z,False,5b48d2076480fd1cd344e3ef,@dotnet-bot test this please,True,False,24,1446.95
pmmp_____PocketMine-MP_____2296,2018-07-13T17:42:26Z,True,pmmp_____PocketMine-MP_____2296_____404903800,"Player nametags with setNameTag() are broken, but setNameTag() works on other entities just not players. It just shows up like default nametags (the player's name in white) and doesn't update it to the newly set nametag.",True,True,29,5991.683333333333
pmmp_____PocketMine-MP_____2296,2018-07-13T17:54:59Z,True,pmmp_____PocketMine-MP_____2296_____404907109,"setDisplayName(), would that work? And by the way, 0.16 is worse than 1.5.0.10",True,True,29,5991.683333333333
pmmp_____PocketMine-MP_____2296,2018-07-13T17:57:16Z,True,pmmp_____PocketMine-MP_____2296_____404907711,"@iiFlamiinBlaze in a nutshell, they sabotaged nametags on players. They'll update if you're on a featured server, but otherwise not. A partner server dev I know figured it out.

It's unclear what the motivation for this was, but don't expect it to be fixed.",True,True,29,5991.683333333333
pmmp_____PocketMine-MP_____2296,2018-07-13T18:22:06Z,True,pmmp_____PocketMine-MP_____2296_____404914105,Wow mojang at its finest... thanks for letting me know.,True,True,29,5991.683333333333
Microsoft/msbuild/3509,2018-07-13T18:27:21Z,False,5b48ef166480fd1c7c5e2cb7,"@dotnet-bot test OSX10.13 Build for CoreCLR
",True,False,24,1446.95
pmmp_____PocketMine-MP_____2296,2018-07-13T18:29:57Z,True,pmmp_____PocketMine-MP_____2296_____404916131,"Players don't seem to be able to pick up items, arrows don't work and I'm being spammed with this Error: `""Call to undefined method pocketmine\math\AxisAlignedBB::offsetCopy()"" (EXCEPTION) in ""src/pocketmine/level/Level"" at line 1822`",True,True,29,5991.683333333333
pmmp_____PocketMine-MP_____2296,2018-07-13T18:30:24Z,True,pmmp_____PocketMine-MP_____2296_____404916259,your composer dependencies are outdated.,True,True,29,5991.683333333333
pmmp_____PocketMine-MP_____2296,2018-07-13T18:42:41Z,True,pmmp_____PocketMine-MP_____2296_____404919312,Updated my composer still don't seem to be able to pick up items.,True,True,29,5991.683333333333
pmmp_____PocketMine-MP_____2296,2018-07-14T02:50:59Z,True,pmmp_____PocketMine-MP_____2296_____404993514,Does this nametag-break exist in 1.6.0.x ?,True,True,29,5991.683333333333
pmmp_____PocketMine-MP_____2296,2018-07-14T06:34:22Z,True,pmmp_____PocketMine-MP_____2296_____405003065,"yes, they backported a bunch of things from the beta into 1.5 release, including that bug.",True,True,29,5991.683333333333
pmmp_____PocketMine-MP_____2296,2018-07-14T07:30:40Z,True,pmmp_____PocketMine-MP_____2296_____405005675,so pm 1.5 not coming put any sooner ?,True,True,29,5991.683333333333
pmmp_____PocketMine-MP_____2296,2018-07-14T11:20:09Z,True,pmmp_____PocketMine-MP_____2296_____405016681,How can I download this server to test?  I updated my clients to 1.5 but last build is ce9f18c 4 days ago which is a 1.4 and I can't find the 1.5.0.10 beta nor 1.5.0?  Am I missing something or do I need to sign up for beta testing somewhere?,True,True,29,5991.683333333333
pmmp_____PocketMine-MP_____2296,2018-07-14T11:38:37Z,True,pmmp_____PocketMine-MP_____2296_____405017576,"@edgararroyo You can download the source code and build the PM-MP yourself

https://github.com/pmmp/PocketMine-MP/tree/mc-broken-ed-1.5",True,True,29,5991.683333333333
pmmp_____PocketMine-MP_____2296,2018-07-14T11:46:26Z,True,pmmp_____PocketMine-MP_____2296_____405017945,Ok thanks!,True,True,29,5991.683333333333
pmmp_____PocketMine-MP_____2296,2018-07-14T15:22:07Z,True,pmmp_____PocketMine-MP_____2296_____405030119,Is there a functioning phar for 1.5?,True,True,29,5991.683333333333
openstyles/stylus/410,2018-07-14T18:22:44Z,False,5b4a3f7a6480fd1c7c5e8851,"@narcolepticinsomniac, see if my fixes broke anything.",True,False,69,18418.166666666668
openstyles/stylus/410,2018-07-14T20:09:53Z,False,5b4a58936480fd16985501ff,">see if my fixes broke anything.

Like I never broke it, thanks.

I guess the author is manipulating the meta to show a license badge on `openusercss.org`? If you install it from [Github](https://raw.githubusercontent.com/CephHunter/RS-wiki-DarkMode/master/Darkmode.user.css), the meta is correct. Syntax like that, where it doesn't belong, should either throw an error or be ignored.

![rs](https://user-images.githubusercontent.com/14100003/42728081-559ca7a6-8780-11e8-90cc-4a71e0c974aa.png)


>If the installation page was designed for mobile...

I'm not even testing mobile, so no, I'm not designing specifically _for_ it, but the layout being more responsive should make it much more usable. It'll work well on tablets, and at least be an improvement on smaller screens. The main benefit for the majority will probably be better wrapping in normal scenarios.


>I would probably put the information and the source code in different tabs.

I've suggested tabs for sectioned editors in the past, but I'm not sure they'd be good for usercss install pages. The editor is mostly there to take a quick glance at the code to check if it's as advertised. Not sure you'd wanna be clicking a tab before installing there.

That said, we should use nowrap/ellipsis and wrap the header content more compactly, so that's what I did. It might be nice to add something similar to the `.resize-grip` resizing to expand install editors to 100vh minus the title/install button. It'd also be good to auto-collapse all options everywhere in compact mode. Not necessarily in this PR, but both are pretty important IMO.",True,False,69,18418.166666666668
openstyles/stylus/410,2018-07-14T21:49:09Z,False,5b4a6fd86480fd176b76986b,"> I guess the author is manipulating the meta to show a license badge on openusercss.org?

OUCSS currently uses the markdown shown on the style homepage to generate `@description` so the original `@description` is overwritten.
https://github.com/OpenUserCSS/openusercss.org/issues/136
",True,False,69,18418.166666666668
everypolitician/everypolitician-data/104456,2018-07-15T07:57:09Z,False,5b4afe596480fd1c7c5eaf41,"

Summary of changes in `data/Israel/Knesset/ep-popolo-v1.0.json`:

## People

### Added


No people added


### Removed


No people removed


### Name Changes


No name changes


### Additional Name Changes



- `08842e16-095e-46fc-a2dc-54493fa8fde1` (Tamar Zandberg): Added: Зандберг, Тамар.

- `1d1fa328-c1be-48e4-b4b4-ea87132045f2` (Gonen Segev): Added: غونين سيغيف.

- `22e303e6-57ba-4d42-8557-f074fcd113d7` (Avigdor Liberman): Added: Категорија:Авигдор Либерман.

- `399fa6b6-9559-477d-9858-88809b8c5801` (David Libai): Added: Давид Лібаі.

- `3e1d57fc-ade9-4462-be46-946e7764c8ff` (Reuven Rivlin): Added: ریوین ریولین.

- `54d15c6a-168a-4c51-8a59-1ec9fce371ac` (Yigal Allon): Added: Yig'al Allon.

- `65511d0b-03f5-498b-984d-c21cb6b2d487` (Naftali Bennett): Added: نفتالی بنت.

- `688a345c-bcb3-4e99-bb4e-0608252d84a1` (Avraham Katz-Oz): Added: Avraham Katz Oz.

- `c83c9f37-d3ef-4e52-b18e-434cbcd6a79c` (Haika Grossman-Orkin): Added: Гроссман, Хайка.

- `df92227c-98d2-47dd-af68-6641d03e060d` (Azmi Bishara): Added: Azmi Bişare.



### Wikidata Changes


No changes


## Organizations

### Added


No organizations added


### Removed


No organizations removed


## Memberships

### Added

No memberships added


### Removed

No memberships removed
















",True,False,1,0.0
openstyles/stylus/410,2018-07-15T11:10:59Z,False,5b4b2bc76480fd2059ffdc34,"- Polish language
- Edit style page

In left column options doesn't fit 
![](https://i.imgur.com/vPddxY6.png)
https://www.youtube.com/watch?v=ZeldQi0FFLc&feature=youtu.be
",True,False,69,18418.166666666668
openstyles/stylus/410,2018-07-15T11:23:41Z,False,5b4b2ebf6480fd1ae766dafe,"@pabli24, thanks.",True,False,69,18418.166666666668
pmmp_____PocketMine-MP_____2296,2018-07-15T12:39:54Z,True,pmmp_____PocketMine-MP_____2296_____405089408,I understand that not everybody in this thread can read or understand the simplest of things so I’ll dumb it down. **There will not be a 1.5 build for a while.**,True,True,29,5991.683333333333
pmmp_____PocketMine-MP_____2296,2018-07-15T12:42:12Z,True,pmmp_____PocketMine-MP_____2296_____405089541,shut your face,True,True,29,5991.683333333333
algorithm-archivists_____algorithm-archive_____114,2018-07-17T20:56:48Z,True,algorithm-archivists_____algorithm-archive_____114_____405725150,I'm just going to close this pull request and lock it too.,True,True,46,89673.71666666666
mysqljs_____mysql_____1962,2018-07-18T08:51:24Z,True,mysqljs_____mysql_____1962_____405859181,"@ruiquelhas Sorry junior dev here but have some questions.

Im getting the:
`Error: ER_NOT_SUPPORTED_AUTH_MODE: Client does not support authentication protocol requested by server; consider upgrading MySQL client
    at Handshake.Sequence._packetToError`

i tried the following solution you gave to somene else:

`ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'YourRootPassword';`
-- or
`CREATE USER 'foo'@'%' IDENTIFIED WITH mysql_native_password BY 'bar';`

And that fixes the issue for me but I have some questions.

Questions:
Is this a good fix that can be deploy to production or is this just a workaround for getting things working locally?

I am also assuming that what is happened is that **8.0.11 MySQL Community Server** is just not compatible with the npm mysql library right out the box at the moment. To make it compatible right out the box You have submitted this bug fix but it hasn't been merged to master yet, and that is the reason it still doesn't work for me right out the box even tho i have the latest version of the mysql dependency.

Is my assumption correct?

If I am correct about my assumption, is there a practical way to implement the bug fix to my codebase before it is merged into master? and if there is, is that something that would be advised, or good practice?

thank you so much.

",True,True,37,413793.7833333333
mysqljs_____mysql_____1962,2018-07-18T09:19:10Z,True,mysqljs_____mysql_____1962_____405867267,"@Osuriel

> Is this a good fix that can be deploy to production or is this just a workaround for getting things working locally?

The new default authentication plugin is more secure because it's using SHA256 instead of SHA1 to hash the password, but it's not available for MySQL versions below 8.0, which means most existing MySQL production instances are not using it as well. So, it all boils down to how much you can trust SHA1 (for which collision attacks have already been performed in 2017). I guess having a good password should help to mitigate or even prevent that.

> I am also assuming that what is happened is that 8.0.11 MySQL Community Server is just not compatible with the npm mysql library right out the box at the moment. To make it compatible right out the box You have submitted this bug fix but it hasn't been merged to master yet, and that is the reason it still doesn't work for me right out the box even tho i have the latest version of the mysql dependency.
>
> Is my assumption correct?

Correct.

> If I am correct about my assumption, is there a practical way to implement the bug fix to my codebase before it is merged into master? and if there is, is that something that would be advised, or good practice?

I don't know if it is a good practice or not, it mostly depends on your internal policies and processes (and how much you would be ""trusting"" the fork in this case), but you can install and link npm packages from a git repo even using a specific branch or commit.

```bash
$ npm install ruiquelhas/mysql#feature/caching-sha2-password
```",True,True,37,413793.7833333333
mysqljs_____mysql_____1962,2018-07-18T09:20:36Z,True,mysqljs_____mysql_____1962_____405867698,Any update? Still unable to connecto to MySQL 8,True,True,37,413793.7833333333
mysqljs_____mysql_____1962,2018-07-18T13:02:08Z,True,mysqljs_____mysql_____1962_____405922316,@ruiquelhas thank you so much! You just helped me become a better developer hannibwas yesterday! 💪🏽🔥,True,True,37,413793.7833333333
pmmp_____PocketMine-MP_____2322,2018-07-23T17:07:14Z,True,pmmp_____PocketMine-MP_____2322_____203284420,"## Introduction
This pull request implements basic changes needed for Player interaction with entities.

### Relevant issues
/

## Changes
### API changes
Adds a new event: PlayerGentlyTouchEntityEvent
Adds a new method Entity::interact()

### Behavioural changes
/

## Backwards compatibility
The changes are backwards compatible.

## Follow-up
Rename the event to something sensible. 


## Tests
/
",True,True,16,12218.966666666667
prashnts/hues/94,2018-07-23T17:10:25Z,False,5b560c0c6480fd19b3b454df,Closing this in favor of #95,True,False,1,0.0
pmmp_____PocketMine-MP_____2322,2018-07-24T14:07:26Z,True,pmmp_____PocketMine-MP_____2322_____204769803,I hope you don't expect me to merge this...,True,True,16,12218.966666666667
pmmp_____PocketMine-MP_____2322,2018-07-24T14:07:29Z,True,pmmp_____PocketMine-MP_____2322_____204769829,what exactly is the point of passing the event here? Seems like extra work for no good reason.,True,True,16,12218.966666666667
pmmp_____PocketMine-MP_____2322,2018-07-24T14:08:04Z,True,pmmp_____PocketMine-MP_____2322_____204770033,formatting needs fixing throughout this file,True,True,16,12218.966666666667
pmmp_____PocketMine-MP_____2322,2018-07-24T14:09:28Z,True,pmmp_____PocketMine-MP_____2322_____204770635,"Please let's not have another godawful mess like `Entity->attack()`. The intent of this function is not clear from its name. Is the entity interacting with some other entity, or is it the one getting interacted with?",True,True,16,12218.966666666667
pmmp_____PocketMine-MP_____2322,2018-07-24T14:10:34Z,True,pmmp_____PocketMine-MP_____2322_____204771063,I'm surprised this isn't automatic... that's perhaps a bug.,True,True,16,12218.966666666667
pmmp_____PocketMine-MP_____2322,2018-07-24T14:11:51Z,True,pmmp_____PocketMine-MP_____2322_____204771628,"Seems to be an inconsistency here. The item is only receiving the click event if the event is not cancelled, but the entity will always receive it, cancelled or not.

Additionally, parameter inconsistency exists here.",True,True,16,12218.966666666667
pmmp_____PocketMine-MP_____2322,2018-07-24T14:14:12Z,True,pmmp_____PocketMine-MP_____2322_____407421631,Note also that a similar change set is also present in #2124 .,True,True,16,12218.966666666667
lmammino/capnp-stream/1,2018-07-24T16:50:00Z,False,5b5758c06480fd1fd157b457,"# [Codecov](https://codecov.io/gh/lmammino/capnp-stream/pull/1?src=pr&el=h1) Report
> Merging [#1](https://codecov.io/gh/lmammino/capnp-stream/pull/1?src=pr&el=desc) into [master](https://codecov.io/gh/lmammino/capnp-stream/commit/5dc14881bab8ad7370e5e1d7a051ab3389faf535?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `100%`.

[![Impacted file tree graph](https://codecov.io/gh/lmammino/capnp-stream/pull/1/graphs/tree.svg?height=150&width=650&token=sA1rtyqanD&src=pr)](https://codecov.io/gh/lmammino/capnp-stream/pull/1?src=pr&el=tree)

```diff
@@          Coverage Diff          @@
##           master     #1   +/-   ##
=====================================
  Coverage     100%   100%           
=====================================
  Files           1      1           
  Lines          26     28    +2     
  Branches        2      2           
=====================================
+ Hits           26     28    +2
```


| [Impacted Files](https://codecov.io/gh/lmammino/capnp-stream/pull/1?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [index.js](https://codecov.io/gh/lmammino/capnp-stream/pull/1/diff?src=pr&el=tree#diff-aW5kZXguanM=) | `100% <100%> (ø)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/lmammino/capnp-stream/pull/1?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/lmammino/capnp-stream/pull/1?src=pr&el=footer). Last update [5dc1488...93a3c8c](https://codecov.io/gh/lmammino/capnp-stream/pull/1?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",True,False,2,4.716666666666667
lmammino/capnp-stream/1,2018-07-24T16:54:43Z,False,5b5759d96480fd1a7ac405d0,"@jwheels merged and published on NPM as ` 2.1.0`, also with a new author 😛 ",True,False,2,4.716666666666667
pmmp_____PocketMine-MP_____2322,2018-07-24T23:24:58Z,True,pmmp_____PocketMine-MP_____2322_____204942111,You mean the event name?,True,True,16,12218.966666666667
pmmp_____PocketMine-MP_____2322,2018-07-24T23:25:48Z,True,pmmp_____PocketMine-MP_____2322_____204942240,I followed the style of Entity::attack(),True,True,16,12218.966666666667
pmmp_____PocketMine-MP_____2322,2018-07-24T23:26:38Z,True,pmmp_____PocketMine-MP_____2322_____204942363,Oh... I actually tried to match Entity::attack() in style,True,True,16,12218.966666666667
pmmp_____PocketMine-MP_____2322,2018-07-24T23:33:26Z,True,pmmp_____PocketMine-MP_____2322_____204943436,"For Entity::interact() I tried to be consistent with other methods in Entity ( Entity::attack ). 
For Item::onClickEntity, I tried to be consistent with other methods in Item ( Item::onClickAir, Item::onActivate ). ",True,True,16,12218.966666666667
pmmp_____PocketMine-MP_____2322,2018-07-25T02:53:36Z,True,pmmp_____PocketMine-MP_____2322_____204968561,Whats wrong exactly ?,True,True,16,12218.966666666667
pmmp_____PocketMine-MP_____2322,2018-07-25T03:58:07Z,True,pmmp_____PocketMine-MP_____2322_____204974960,leave space after the colon,True,True,16,12218.966666666667
pmmp_____PocketMine-MP_____2322,2018-07-25T07:10:57Z,True,pmmp_____PocketMine-MP_____2322_____205002904,"Entity::attack() calls the event passed to it. Here you're calling it externally and then passing it to the hook, which seems pointless.",True,True,16,12218.966666666667
MicrosoftDocs/appcenter-docs/213,2018-07-25T12:52:01Z,False,5b58727a6480fd1def8b5db5,@dimazaid please review,True,False,1,0.0
sindresorhus_____got_____538,2018-07-25T22:57:38Z,True,sindresorhus_____got_____538_____203985914,"Option merging is now consistent, so null header removal is done during
options normalization. null could not be used to indicate property
removal because null is a significant value for some settings.",True,True,51,6330.883333333333
sindresorhus_____got_____538,2018-07-25T23:01:37Z,True,sindresorhus_____got_____538_____205287547,"This might not be necessary. Maybe we can just pick the right target based on whether is.array(objValue). I was running short on time, so I did this to get it working.

I think we could ditch `cloneDeep` as a dep if that works.",True,True,51,6330.883333333333
sindresorhus_____got_____538,2018-07-26T13:33:30Z,True,sindresorhus_____got_____538_____205456908,`target = {}` is useless here,True,True,51,6330.883333333333
sindresorhus_____got_____538,2018-07-26T13:33:55Z,True,sindresorhus_____got_____538_____205457067,:+1:,True,True,51,6330.883333333333
sindresorhus_____got_____538,2018-07-26T13:34:07Z,True,sindresorhus_____got_____538_____205457137,:+1:,True,True,51,6330.883333333333
sindresorhus_____got_____538,2018-07-26T13:39:30Z,True,sindresorhus_____got_____538_____205459879,use `const {URL} = require('url');`,True,True,51,6330.883333333333
sindresorhus_____got_____538,2018-07-26T13:51:30Z,True,sindresorhus_____got_____538_____205464377,"Consider this example:

```js
test('extend overwrites arrays', t => {
	let statusCodes = [408];
	const a = got.extend({retry: {statusCodes}});
	statusCodes[0] = 500;
	t.deepEqual(a.defaults.options.retry.statusCodes, [408]);
	t.not(a.defaults.options.retry.statusCodes, statusCodes);
});
```

It shouldn't fail. It should deep copy arrays IMO.",True,True,51,6330.883333333333
sindresorhus_____got_____538,2018-07-26T13:58:51Z,True,sindresorhus_____got_____538_____205467254,"Oh. Defaults are deep frozen here: https://github.com/sindresorhus/got/blob/da7f055749780438999d459dca5455a61abab8ba/source/create.js#L45

and ain't cloned before.",True,True,51,6330.883333333333
sindresorhus_____got_____538,2018-07-26T14:07:30Z,True,sindresorhus_____got_____538_____205470748,":-1: The feature is meant **only** for `headers`. Otherwise, if the new value is `undefined`, it shouldn't be replaced.",True,True,51,6330.883333333333
sindresorhus_____got_____538,2018-07-26T14:13:58Z,True,sindresorhus_____got_____538_____205473556,"Yeah, I made it only deep copy plain object, since all other types are merged by replacement.",True,True,51,6330.883333333333
sindresorhus_____got_____538,2018-07-26T14:18:50Z,True,sindresorhus_____got_____538_____205475319,"I'm fine either way on this one.

I interpreted the previous behavior as `undefined` being a sentinel value that can be used to remove a setting, i.e. a discrete feature of got's extension behavior.

There is a test that verifies that null headers are omitted from the normalized arguments, but I've addressed that case in normalize-arguments.

@sindresorhus do you have a preference?",True,True,51,6330.883333333333
sindresorhus_____got_____538,2018-07-26T14:24:14Z,True,sindresorhus_____got_____538_____205477242,"Ack. This is the same behavior as we're discussing above, so we'll resolve this when we resolve that.",True,True,51,6330.883333333333
sindresorhus_____got_____538,2018-07-26T14:29:09Z,True,sindresorhus_____got_____538_____205479129,"Just to clarify, based on your complete suggestion below, you think `undefined` values in the source should be noop and the target value should be preserved, right?

That is what lodash.merge does, but I don't understand the rationale in that approach. If the key exists in the source, I think it expresses some intent of the caller vs the value being undefined b/c the key does not exist.

I would suggest that when the key exists in the source and the value is undefined, the result should either be:
- omit the key from the result
- set the key to undefined in the result

I could be persuaded that the source value should be ignored, but I the rationale isn't obvious to me.",True,True,51,6330.883333333333
sindresorhus_____got_____538,2018-07-26T14:29:09Z,True,sindresorhus_____got_____538_____205479127,Look at the other `merge` / `extend` libs :) They omit `undefined` values.  I mean users would think that if you leave another property `undefined` it will remain unchanged. It's `header`-specific.,True,True,51,6330.883333333333
sindresorhus_____got_____538,2018-07-26T14:33:08Z,True,sindresorhus_____got_____538_____205480628,"> Just to clarify, based on your complete suggestion below, you think undefined values in the source should be noop and the target value should be preserved, right?

yes.",True,True,51,6330.883333333333
sindresorhus_____got_____538,2018-07-26T14:35:28Z,True,sindresorhus_____got_____538_____205481499,I'd leave this note about avoiding `object spread` because mostly that's not what users want.,True,True,51,6330.883333333333
sindresorhus_____got_____538,2018-07-26T15:20:43Z,True,sindresorhus_____got_____538_____205498538,"I pruned it because I didn't think it was necessary for us to document the language feature, and the reader's attention to detail is inversely related to the length of the docs.

I can put it back if you feel strongly that it will meaningfully assist users in making the right choice.",True,True,51,6330.883333333333
sindresorhus_____got_____538,2018-07-26T15:47:59Z,True,sindresorhus_____got_____538_____205508381,@sindresorhus What are your thoughts on that?,True,True,51,6330.883333333333
sindresorhus_____got_____538,2018-07-27T08:46:23Z,True,sindresorhus_____got_____538_____205706376,I think it's worth keeping. I see the mistake of using Object.assign/object-spread for deep objects all the time.,True,True,51,6330.883333333333
sindresorhus_____got_____538,2018-07-27T09:14:12Z,True,sindresorhus_____got_____538_____205713854,"Both arguments are valid and both are common. `Object.assign`/object-spread will overwrite with `undefined`, while many extends libs will not. I definitely find it more convenient when `{foo: true}, {foo: undefined}` end up as `{foo: true}`, but that also means there's no way to explicitly unset a value, like with headers. Maybe we do a middle ground and say that `null` overrides, while `undefined` does not. This is how default function arguments work. They only work with `undefined` not `null`. So to unset a header you set `null`.

```
{foo: true}, {foo: false}
// {foo: false}

{foo: true}, {foo: undefined}
// {foo: true}

{foo: true}, {foo: null}
// {foo: null}
```

Thoughts?",True,True,51,6330.883333333333
sindresorhus_____got_____538,2018-07-27T09:29:35Z,True,sindresorhus_____got_____538_____205718114,I strongly agree :) This behaviour is more clear IMO.,True,True,51,6330.883333333333
sindresorhus_____got_____538,2018-07-27T10:19:04Z,True,sindresorhus_____got_____538_____205730042,"@jstewmon Could you allow edits from maintainers? I did what @sindresorhus said, I just wanted to push one commit. You'll change that (or revert) if you'd like to.",True,True,51,6330.883333333333
sindresorhus_____got_____538,2018-07-27T11:20:33Z,True,sindresorhus_____got_____538_____205742966,"I wouldn't support this, as it might be confusing with `got.extend({ ... })`, where setting to `undefined` keeps the old value.",True,True,51,6330.883333333333
sindresorhus_____got_____538,2018-07-27T12:19:13Z,True,sindresorhus_____got_____538_____205754891,"I lightly object b/c ignoring undefined precludes the possibility of removing a setting (hypothetically, null may be a significant of invalid value). I can't think of a reason why that would be a problem today. But, I also can't think of a reason why an object would contain a key with the value set to undefined in this context b/c the key could simply be omitted to get the same behavior.

In other words, the key's absence or presence is not significant if the value is undefined, which is not something I'd expect as a user. If I set the key in the passed options, I did so with a purpose.

@szmarczak , I backed off your change b/c it overreached what we had discussed. I don't mind maintainer commits for nits or agreed upon changes, but please don't make behavioral changes when consensus has not been reached.

I think the only significant change I reverted was the deep merging of arrays. I did that because got does not make changes to those arrays, so there is no need to make a copy of them, so copying adds unnecessarily to the runtime of the method.",True,True,51,6330.883333333333
sindresorhus_____got_____538,2018-07-27T12:21:04Z,True,sindresorhus_____got_____538_____205755308,This test had to be rewritten to use a header key that doesn't have a default value. The behavior is consistent as you wished. :-),True,True,51,6330.883333333333
sindresorhus_____got_____538,2018-07-27T12:26:48Z,True,sindresorhus_____got_____538_____205756580,"OK, I've made another PR :)",True,True,51,6330.883333333333
sindresorhus_____got_____538,2018-07-27T12:44:47Z,True,sindresorhus_____got_____538_____205760500,"We're trying to build consensus around these changes. Making a fork at this point is counterproductive.

If there's a change you want to see, we should talk about it.",True,True,51,6330.883333333333
sindresorhus_____got_____538,2018-07-27T12:46:03Z,True,sindresorhus_____got_____538_____205760843,Already did.,True,True,51,6330.883333333333
sindresorhus_____got_____538,2018-07-27T13:14:20Z,True,sindresorhus_____got_____538_____205768259,"You 👍 my explanation for why arrays are directly assigned, then changed the behavior in a push to my branch.

You rewrote the docs I wrote without having provided any remarks.

You implemented @sindresorhus proposition on my branch without giving me a chance to respond.

I can appreciate that you are eager to land this, but we've had a productive conversation and are very close to achieving consensus on the implementation. By forging ahead, you undercut that process and then we have to have these unproductive meta conversations.

What's the rationale for, or problem solved, by deep merging arrays?",True,True,51,6330.883333333333
sindresorhus_____got_____538,2018-07-27T13:22:38Z,True,sindresorhus_____got_____538_____205770528,"> What's the rationale for, or problem solved, by deep merging arrays?

You don't even simply clone them, so let's start with that. With arrays there should be no exception. I'm not gonna explain simple things.

I really appreciate you want to do it on your own :)",True,True,51,6330.883333333333
sindresorhus_____got_____538,2018-07-27T17:42:58Z,True,sindresorhus_____got_____538_____205849348,"> I'm not gonna explain simple things.

Arguments are worthless if the other part doesn't understand you. Not everyone is in your exact mindset. We all need to be on the same page. I was also confused by your comment.",True,True,51,6330.883333333333
sindresorhus_____got_____538,2018-07-27T17:43:15Z,True,sindresorhus_____got_____538_____205849431,"I just realized that my proposal is how `lodash.merge` works.

> But, I also can't think of a reason why an object would contain a key with the value set to undefined in this context b/c the key could simply be omitted to get the same behavior.

It allows you to do inline conditionals:

```js
foo({
	unicorn: checkForUnicorns() && '🦄'
});
```

Without, I would have to do:

```js
const options = {};

if (shouldUseUnicorns()) {
	options.unicorn = '🦄';
}

foo(options);
```

> I backed off your change b/c it overreached what we had discussed. I don't mind maintainer commits for nits or agreed upon changes, but please don't make behavioral changes when consensus has not been reached.

@szmarczak Don't modify other people's PRs before we have agreed on a solution.",True,True,51,6330.883333333333
sindresorhus_____got_____538,2018-07-27T18:30:32Z,True,sindresorhus_____got_____538_____205862572,"@sindresorhus thanks for providing that example. I can appreciate the convenience that provides.

It occurred to me that, in the future, we could expose a symbol support deleting a key if the need for it arises. Similarly, we could expose a symbol to indicate that the result should be `undefined` if there's a need to explicitly set a key to `undefined`.

Using symbols for those cases would have the disadvantage of being a unique approach, but it would have the advantage of our interface being optimized for the most common scenarios.

If we're settled on ignoring `undefined`, we could rename `assignOptions` to `mergeOptions` to help clarify that its behavior is not congruent with Object.assign.",True,True,51,6330.883333333333
sindresorhus_____got_____538,2018-07-27T19:19:07Z,True,sindresorhus_____got_____538_____205874964,"On closer inspection, I didn't actually remove this - I just inserted the function description before the warning. :-)",True,True,51,6330.883333333333
sindresorhus_____got_____538,2018-07-27T20:53:21Z,True,sindresorhus_____got_____538_____205896674,"> Arguments are worthless if the other part doesn't understand you. Not everyone is in your exact mindset. We all need to be on the same page. I was also confused by your comment.

I'll sum up: going through shortcuts won't end well, just a hint. Another hint: references, arrays, deep freeze. This says a lot.

> Don't modify other people's PRs before we have agreed on a solution.

I've just proposed a solution based on yours. Do what you want, I'm off. I'll be happy with any (current one is cool too).",True,True,51,6330.883333333333
sindresorhus_____got_____538,2018-07-27T21:06:28Z,True,sindresorhus_____got_____538_____205899740,"> Yeah, I made it only deep copy plain object, since all other types are merged by replacement.

I don't think obvious things need an explanation, do they? You've just repeated yourself: that's what your code does, doesn't it? Please come up with a real argument. I'll illustrate if you have problems with understanding mine:

1. Someone creates an array.
2. The array is passed to assignOptions through `got.extend()`.
3. It is passed by reference (please keep that word in mind my friend).
4. It's deep frozen (got.extend() -> got.create() -> deepFreeze())
5. Someone wants to reuse the array.
6. :boom:",True,True,51,6330.883333333333
sindresorhus_____got_____538,2018-07-27T21:42:51Z,True,sindresorhus_____got_____538_____205906821,"I understand that concern, but I intentionally kept the implementation simple, so that the results are predictable.

I was also concerned with performance, since this method is called not only by `got.extend` and `got.create`, but also by every call to `got()`.

There are an infinite number of possible reference types that inherit from object, which may also have unexpected behavior when cloned, especially when only an object's own properties are cloned.

I reluctantly chose to recursively merge source values that are plain objects when the target value is not a plain object for this reason because normalize-arguments currently requires that the options it receives are mutable. I would rather have refactored normalize-arguments, so that it selectively builds a new object from the input, but I thought that was too large a change to introduce here.

Do you think it would be helpful to explicitly mention in the `got.extend` and `got.create` that the resulting object is frozen, so that any reference types will be frozen? We could also mention that a workaround is to use something like `_.deepClone` if users need to preserve a mutable instance of a config setting.

We could also reconsider whether freezing the options tips the balance of predicable behavior nearer or farther from the user's expectations.",True,True,51,6330.883333333333
sindresorhus_____got_____538,2018-07-27T22:00:15Z,True,sindresorhus_____got_____538_____205909813,"Just clarify my position - I'm not strictly inflexible on the implementation, but I want to make sure my rationale is clearly expressed before we decide to change it.

@sindresorhus do you have an opinion on this topic?",True,True,51,6330.883333333333
sindresorhus_____got_____538,2018-07-28T10:12:04Z,True,sindresorhus_____got_____538_____205939574,"> I was also concerned with performance, since this method is called not only by got.extend and got.create, but also by every call to got().

Then why? There are many nitpicks that could improve performance **a bit** (it's unnoticeable) like this one and you're nothing about that. Please, be serious.

> Do you think it would be helpful to explicitly mention in the got.extend and got.create that the resulting object is frozen, so that any reference types will be frozen?

No. That's dumb. All plain objects are frozen and other objects like arrays are not? That doesn't have any sense. BTW, It's OK to pass references to other types than objects and arrays since `got` doesn't use them.",True,True,51,6330.883333333333
sindresorhus_____got_____538,2018-07-28T10:32:02Z,True,sindresorhus_____got_____538_____205939969,@jstewmon Nice copycat work. GL ITF.,True,True,51,6330.883333333333
sindresorhus_____got_____538,2018-07-28T10:36:47Z,True,sindresorhus_____got_____538_____205940044,Wait. What's with `user-agent`? You need to change the test name if you change the behaviour too.,True,True,51,6330.883333333333
sindresorhus_____got_____538,2018-07-28T10:38:24Z,True,sindresorhus_____got_____538_____205940077,Use `Reflect.has()` for consistency.,True,True,51,6330.883333333333
sindresorhus_____got_____538,2018-07-28T10:39:00Z,True,sindresorhus_____got_____538_____205940092,Also I suggest figuring out a better test name.,True,True,51,6330.883333333333
sindresorhus_____got_____538,2018-07-28T10:40:12Z,True,sindresorhus_____got_____538_____205940112,After I read the test name I still don't know what's this about.,True,True,51,6330.883333333333
sindresorhus_____got_____538,2018-07-28T10:42:56Z,True,sindresorhus_____got_____538_____205940269,Stop guessing. You need to change the URL to `#gotassignoptionsparentoptions-newoptions`.,True,True,51,6330.883333333333
sindresorhus_____got_____538,2018-07-29T07:56:40Z,True,sindresorhus_____got_____538_____205964426,"> Do you think it would be helpful to explicitly mention in the got.extend and got.create that the resulting object is frozen, so that any reference types will be frozen? We could also mention that a workaround is to use something like _.deepClone if users need to preserve a mutable instance of a config setting.

Yes, that would be useful.
",True,True,51,6330.883333333333
sindresorhus_____got_____538,2018-07-29T07:59:41Z,True,sindresorhus_____got_____538_____408659319,"I've decided. Let's go with ignoring `undefined` and rename the method to `mergeOptions`.

I think we should also deep clone the array, not because it solves all the problems, but it makes it less likely that the user will encounter a problem with references, and I think that is worth the neglible performance we save by not doing it. This is also how `lodash.merge` works and what users would expect:

> Array and plain object properties are merged recursively. Other objects and value types are overridden by assignment. Source objects are applied from left to right. - `lodahs.merge` docs

We can pretty much reuse the above description for our `mergeOptions` docs.",True,True,51,6330.883333333333
KSP-KOS_____KOS_____2260,2018-07-29T17:32:39Z,True,KSP-KOS_____KOS_____2260_____408692952,@Dunbaratu Can you please check that I have resolved the conflicts in CPU.cs correctly? Thx,True,True,36,458822.06666666665
sindresorhus_____got_____538,2018-07-29T19:33:26Z,True,sindresorhus_____got_____538_____408700252,"@sindresorhus I wasn't sure whether you meant to just make a copy of the source array or merge the array into the target's property value (like lodash). I assumed (and implemented) the former, since that's closest to what we've been discussing, but your comment about lodash gave me some doubt.",True,True,51,6330.883333333333
sindresorhus_____got_____538,2018-07-29T20:11:23Z,True,sindresorhus_____got_____538_____408702622,@jstewmom You forgot `git add` ;) There's no `merge-options` file.,True,True,51,6330.883333333333
sindresorhus_____got_____538,2018-07-29T20:15:10Z,True,sindresorhus_____got_____538_____205985803,Glad you've taken my tip ^_^,True,True,51,6330.883333333333
sindresorhus_____got_____538,2018-07-30T08:28:31Z,True,sindresorhus_____got_____538_____408787083,Avoid `new Array`. [See this for more explanation](https://stackoverflow.com/a/932392/5189849).,True,True,51,6330.883333333333
PanDAWMS/dkb/154,2018-07-30T12:07:46Z,False,5b5eff986480fdc4f610108c,"Wouldn\`t `""0"" * (maxlen - len(i1)) + i1` be more readable?
```
>>> """".join(""0"" for i in range(0,3))
'000'
>>> ""0"" * 3
'000'
```",True,False,6,51846.88333333333
KSP-KOS_____KOS_____2260,2018-08-01T04:12:40Z,True,KSP-KOS_____KOS_____2260_____409443433,"@firda-cze I'm having a hard time trying to make ``git`` to actually show me what conflicts you encountered.  When I fetch your branch and checkout your commit just prior to 48f8ba5, then try to do a git merge develop myself to see what conflicts would have appeared, it shows zero conflicts.  I'm having a hard time forcing git to actually show me what the conflict choices you had to make actually were.",True,True,36,458822.06666666665
pmmp_____PocketMine-MP_____2322,2018-08-01T04:46:12Z,True,pmmp_____PocketMine-MP_____2322_____409447966,"Again, you haven't explained how the other PR is better? I looked at the code and it seems to be the exact thing I did, with the exception of my implementation also having a method inside the Item class.",True,True,16,12218.966666666667
KSP-KOS_____KOS_____2260,2018-08-01T13:10:52Z,True,KSP-KOS_____KOS_____2260_____409569177,"@Dunbaratu I have used KDiff3 and used your version whenever it could not resolve it automatically. So, I hope it is fine (most or all conflicts were on the top of the file - removal of the enum, introduction of interrupt priorities, joined list of yielding tasks, some reordering and removal of variables).",True,True,36,458822.06666666665
PanDAWMS/dkb/154,2018-08-01T13:28:04Z,False,5b61b6946480fdc3c777f7c8,"9abebea
---
Quite a large commit... was not easy to get through it, so I think it would be a good idea to split it at least in two: 'header' -> 'caption' change (there\`re a lot of lines in diff related to this changhe, and they distruct reader`s attention from the changes in logic) and logic changes themselves.

* Talking about changes in the logic, there\`s a piece of changes related to the font information taking, but it seems like it is not used anywhere.     I\`d move it to a separate commit with a couple of words of the intention of this change.
```
030_PDFAnalyzer$ git grep '\.font'
xmltable.py:                        self.font = f
```

* In `xmltable.py` two functions: `get_tables_from_text()` and `analyze_page()` have swapped places. Due to this it looks like `get_tables_from_text()` was fully rewritten... but to make sure one has to compare old and new versions side-by-side. Would be better to leave functions at the same order as before, so that there were no doubt in what has happened. If there\`s a reason fow this swap, it is better to do in a separate commit; if not, I think it should be fixed by rebase.

* `analyze_page()` now throws away first row, if there\`s a textline containing `""DRAFT""`. Is it really related to the tables handling?
I mean, it might be required because since now this line can erroneously become a table name, or something -- but it is not obvious from the commit description or the diff, so maybe do it in a separate commit -- after this one (as ""fix issue with first DRAFT row""), or before (as ""remove non-informative row""), or something like this?

* In `get_tables_from_text()`: what is the magical number ""76.0""? It appears again in `show_paper_visual()` method of `Manager` class, but still looks mystical for the one who didn\`t dive deep into the PDF structure and its XML representation (just like the rest of this part of code):
https://github.com/PanDAWMS/dkb/blob/9abebea78149155215e9dc43c8ecc41566398ac5/Utils/Dataflow/030_PDFAnalyzer/xmltable.py#L432-L437

* And again about `get_tables_from_text()`: maybe not now, but I would recommend to split it into smaller pieces of code. For example:
  * mark rows (with 'caption', 'text', 'table')
  * get caption position
  * extract (single) table (or maybe plain and reversed extract in two different functions, if it is not possible to unify the algorithm for both cases)
  * construct caption (from caption rows)

  Maybe even smaller, if needed.
It will make things easier to read and understand -- and easer to test and debug.
These smaller pieces could also be reused by `Manager.show_paper_visual()`: now there\`re two very similar pieces of code, and comparing them between two files to make sure they follow same logic, is not as easy as could be.

* What\`s the point in introducing `caption_rows` in `Manager.show_paper_visual()`? What was wrong, when they were marked with 'red' on the fly?

* Again about `Manager.show_paper_visual()`: red/blue/black marking was changed to red/green/black, but I can hardly guess what it was and what it became. The `blue` variant originally came from the Subversion repo, and -- in theory -- the answer can be found there, but a couple of words in the commit log (or in comments) would make life much easier ;)",True,False,6,51846.88333333333
SuperDARN_____rst_____153,2018-08-01T13:37:50Z,True,SuperDARN_____rst_____153_____409577410,"I believe this is mostly working except for the `/trace` keyword which is not giving the expected results.  Using the DLMs from within IDL:

```
IDL> print,aacgm_v2_setdatetime(2018,08,01,00,00,00)     
% Loaded DLM: AACGMDLM.
           0
IDL> pos=cnvcoord_v2(60.,120.,300.)                      
IDL> print,pos
       55.955571      -166.05710       1.0456635
IDL> pos=cnvcoord_v2(60.,120.,300.,/trace)
IDL> print,pos
       22.449229       179.36041       1.0456635
```
And this is using the native IDL code:

```
IDL> print,aacgm_v2_setdatetime(2018,08,01,00,00,00)     
       0
IDL> pos=cnvcoord_v2(60.,120.,300.)                 
% Compiled module: FACTORIAL.
IDL> print,pos
       55.955571      -166.05710       1.0456635
IDL> pos=cnvcoord_v2(60.,120.,300.,/trace)          
IDL> print,pos
       12.062125      -170.09346       1.0456635
```

From the online calculator (http://sdnet.thayer.dartmouth.edu/aacgm/aacgm_calc.php#AACGM):

```
FIELD-LINE TRACING

DATE    : 20180801
 0000 UT
Altitude:  290.931 km**

       Geographic                  AACGM-v2 
 Latitude     Longitude     Latitude     Longitude     MLT
(degrees N)  (degrees E)   (degrees N)  (degrees E)  (hours)
-----------  -----------   -----------  -----------  -------
  60.0000     120.0000       55.7656    -166.5262     8.0929
```

I've also modified the behavior of the `AACGM_v2_GetDateTime` function in the DLMs to suppress the warning output when the `/silent` keyword is passed to match the behavior of the native IDL function.",True,True,28,142543.38333333333
SuperDARN_____rst_____153,2018-08-01T13:49:17Z,True,SuperDARN_____rst_____153_____409581000,"Is this a new change? I want to be sure that the standalone version is the
master and the RST is kept synchronized, otherwise changes in the RST will
be overwritten.

Simon

On Wed, Aug 1, 2018 at 9:37 AM Evan Thomas <notifications@github.com> wrote:

> I believe this is mostly working except for the /trace keyword which is
> not giving the expected results. Using the DLMs from within IDL:
>
> IDL> print,aacgm_v2_setdatetime(2018,08,01,00,00,00)
> % Loaded DLM: AACGMDLM.
>            0
> IDL> pos=cnvcoord_v2(60.,120.,300.)
> IDL> print,pos
>        55.955571      -166.05710       1.0456635
> IDL> pos=cnvcoord_v2(60.,120.,300.,/trace)
> IDL> print,pos
>        22.449229       179.36041       1.0456635
>
> And this is using the native IDL code:
>
> IDL> print,aacgm_v2_setdatetime(2018,08,01,00,00,00)
>        0
> IDL> pos=cnvcoord_v2(60.,120.,300.)
> % Compiled module: FACTORIAL.
> IDL> print,pos
>        55.955571      -166.05710       1.0456635
> IDL> pos=cnvcoord_v2(60.,120.,300.,/trace)
> IDL> print,pos
>        12.062125      -170.09346       1.0456635
>
> From the online calculator (
> http://sdnet.thayer.dartmouth.edu/aacgm/aacgm_calc.php#AACGM):
>
> FIELD-LINE TRACING
>
> DATE    : 20180801
>  0000 UT
> Altitude:  290.931 km**
>
>        Geographic                  AACGM-v2
>  Latitude     Longitude     Latitude     Longitude     MLT
> (degrees N)  (degrees E)   (degrees N)  (degrees E)  (hours)
> -----------  -----------   -----------  -----------  -------
>   60.0000     120.0000       55.7656    -166.5262     8.0929
>
> I've also modified the behavior of the AACGM_v2_GetDateTime function in
> the DLMs to suppress the warning output when the /silent keyword is
> passed to match the behavior of the native IDL function.
>
> —
> You are receiving this because you are subscribed to this thread.
>
> Reply to this email directly, view it on GitHub
> <https://github.com/SuperDARN/rst/pull/153#issuecomment-409577410>, or mute
> the thread
> <https://github.com/notifications/unsubscribe-auth/AC2DP06IOpEDA6hy6FKRLfDzgIKdpJTdks5uMa8wgaJpZM4TzQZR>
> .
>
",True,True,28,142543.38333333333
KSP-KOS_____KOS_____2260,2018-08-01T13:51:22Z,True,KSP-KOS_____KOS_____2260_____409581731,"The problem I had was just that I can't get git to actually generate the conflicts in the first place.  When I fetch your branch, checkout the commit just before your merge of public/develop, then try to merge develop into that myself, git claims there's no conflicts.  So I can't see what you saw.  I'm not sure why.  Hypothetically, that should have worked.",True,True,36,458822.06666666665
SuperDARN_____rst_____153,2018-08-01T13:55:44Z,True,SuperDARN_____rst_____153_____409583171,"@sshepherd yes I made a new change to `aacgmdlm.c`.  I can send you a copy of the modified file to drop into your local/master AACGM_v2 directory so it's not overwritten.

Am I interpreting the `/trace` keyword correctly that it is the same as choosing the field-line tracing option with the online calculator?",True,True,28,142543.38333333333
PanDAWMS/dkb/154,2018-08-01T14:02:25Z,False,5b61bea56480fdc22922a59b,"Isn\`t it too much for a single line of code?..

Maybe leave temporary variable `d`...
```
            for category in datasets:
                d = [name for [name, special] in datasets[category]]
                outp[""content""][category_export_dict[category]
                                + ""_datasets""] = d
```
...or create another for `""XXX_datasets""`...
```
            for category in datasets:
                content_type = category_export_dict[category] + ""_datasets""
                outp[""content""][content_type] = \
                    [name for [name, special] in datasets[category]]
```
...or, if temp variables are unacceptable, this formatting seem to work for `pycodestyle` as well...
```
            for category in datasets:
                outp[""content""][category_export_dict[category]
                                + ""_datasets""] = \
                    [name for [name, special] in datasets[category]]
```

...or, more globally: define ""content"" as a separate variable `content = {}` and use this variable instead of `outp[""content""]` everywhere:
```
        content = {}
        outp[""content""] = content
        ...
            for category in datasets:
                content[category_export_dict[category] + ""_datasets""] = \
                    [name for [name, special] in datasets[category]]
```
As both `content` and `outp[""content""]` are, actually, just links to same `dict` object, and as `dict` in Python is ""mutable"" object -- when `content` is changed, `outp` is changed as well:
```
>>> c = {}
>>> outp = {}
>>> outp['c'] = c
>>> c['a'] = 123
>>> print outp
{'c': {'a': 123}}
```",True,False,6,51846.88333333333
SuperDARN_____rst_____153,2018-08-01T14:11:14Z,True,SuperDARN_____rst_____153_____409588650,"I believe so but will have to confirm next week when I get back to the
office. The good news is that there doesn’t look like a new release will
happen anytime soon.

On Wed, Aug 1, 2018 at 9:55 AM Evan Thomas <notifications@github.com> wrote:

> @sshepherd <https://github.com/sshepherd> yes I made a new change to
> aacgmdlm.c. I can send you a copy of the modified file to drop into your
> local/master AACGM_v2 directory so it's not overwritten.
>
> Am I interpreting the /trace keyword correctly that it is the same as
> choosing the field-line tracing option with the online calculator?
>
> —
> You are receiving this because you were mentioned.
>
>
> Reply to this email directly, view it on GitHub
> <https://github.com/SuperDARN/rst/pull/153#issuecomment-409583171>, or mute
> the thread
> <https://github.com/notifications/unsubscribe-auth/AC2DPwdRegv0wqxhiyMSIMnx0G-lXSnzks5uMbNhgaJpZM4TzQZR>
> .
>
",True,True,28,142543.38333333333
avajs/ava/1885,2018-08-02T17:15:31Z,False,5b633d6c6480fdc7370f2a11,"```js
process.stdout.getColorDepth = () => options.tty.colorDepth;
```",True,False,8,4308.416666666667
avajs/ava/1885,2018-08-02T18:12:57Z,False,5b634ae36480fdc6e9bea975,@sindresorhus I made the change you requested. The build failures seem unrelated to my changes and rather seem to have been introduced in 8663028de2d7a7be88c4a101dafb873c5af87937. Please correct me if I'm wrong and I will happily fix.,True,False,8,4308.416666666667
avajs/ava/1885,2018-08-02T19:54:05Z,False,5b6362906480fdc1c0b908c1,"> The build failures seem unrelated to my changes and rather seem to have been introduced in 8663028. Please correct me if I'm wrong and I will happily fix.

Yup. Already fixed.",True,False,8,4308.416666666667
avajs/ava/1885,2018-08-03T08:26:11Z,False,5b6413936480fdca5401c2ac,We should only shim this in Node.js versions where it's expected to be available.,True,False,8,4308.416666666667
avajs/ava/1885,2018-08-03T08:26:42Z,False,5b6413966480fdc610acd7b3,"Perhaps leave as `undefined` if there is no `getColorDepth()`, and use that as a signal of whether to shim or not?

Or `null` if you prefer.",True,False,8,4308.416666666667
avajs/ava/1885,2018-08-03T08:28:05Z,False,5b6413936480fdc142ebfd50,"Could you rename the fixtures (and this integration test) to `node-assertions`? ""Custom"" implies support for a wider range of assertions, like Chai.",True,False,8,4308.416666666667
PanDAWMS/dkb/154,2018-08-03T13:35:27Z,False,5b645b4e6480fdc9a69a50b2,">## 987803e
>Is it OK that the new function thinks that 'a-2-1' is greater than 'a-10'?
The example is baseless, of course -- paper names are slightly different -- yet if one paper has extra field, it is still string comparisson.

Overall - no, it's not OK and this function still has room for improvements. But for now it serves its purpose, since the paper names that I work with are not that diverse, so I think I'll leave it be for now.

>## 9abebea

>Quite a large commit... was not easy to get through it, so I think it would be a good idea to split it at least in two: 'header' -> 'caption' change (there`re a lot of lines in diff related to this changhe, and they distruct reader`s attention from the changes in logic) and logic changes themselves.

Makes sense, will do.

> In xmltable.py two functions: get_tables_from_text() and analyze_page() have swapped places. Due to this it looks like get_tables_from_text() was fully rewritten... but to make sure one has to compare old and new versions side-by-side. Would be better to leave functions at the same order as before, so that there were no doubt in what has happened. If there`s a reason fow this swap, it is better to do in a separate commit; if not, I think it should be fixed by rebase.

They were swapped because get_tables_from_text() now uses analyze_page() - IIRC, in Python you can ignore the rule ""define f1() before f2() if f2() uses f1()"", but I'm still adhering to it. OK, I'll move the swap to a separate commit then.

>analyze_page() now throws away first row, if there`s a textline containing ""DRAFT"". Is it really related to the tables handling?
I mean, it might be required because since now this line can erroneously become a table name, or something -- but it is not obvious from the commit description or the diff, so maybe do it in a separate commit -- after this one (as ""fix issue with first DRAFT row""), or before (as ""remove non-informative row""), or something like this?

Yes, it is related: 

- In old logic, we were simply picking a caption and working with it - if ""DRAFT"" was encountered here, it was discarded by the mechanism that separates table from the text above it.
- In new logic, we are trying to understand something before picking a caption. And during this research, ""DRAFT"" can interfere, so it is dealt with explicitly.

I'll add something like this explanation to the commit log.

> In get_tables_from_text(): what is the magical number ""76.0""?

Will add a comment to the code.

>And again about get_tables_from_text(): maybe not now, but I would recommend to split it into smaller pieces of code.

Will look into it.

> Everything related to Manager.show_paper_visual()
> including font unused anywhere

As I've said somewhere, including at least one paper, interactive mode of the analyzer is intended for further development and debugging. Now, this function (together with Manager.show_paper_page_tables(), for example) is the quintessence of this point. It's a temporary tool used while blundering about in the mess which are PDF documents in (usually vain) hope of finding some connections and correlations to base extraction logic upon. Hence, such tools are unreliable, prone to constant changes and aren't intended for reasonable usage by others - my apologies that I've not made this clear before and you had to endure the process of trying to judge one of them. What can we do to improve the situation here?

1. Fix the code (I mean code of this function and similar ones), eliminate inconsistencies, etc, and keep doing it in the future. Usually this is the way to go, but in the light of explanation above, I'm not so sure in this case.
2. Remove the code from master and keep it in separate branch(es).
3. Remove the code from github and only upload results.
4. Something else?

All other suggestions and comments not related to 9abebea look justified and I will look further into them.

Once again, thanks for dedicating time and effort to find these problems. Tell me if I've forgotten to reply to something.",True,False,6,51846.88333333333
avajs/ava/1885,2018-08-03T16:15:53Z,False,5b6480f16480fdc2416257f3,@novemberborn thanks for the feedback! I believe that I have addressed all of your concerns. I also added some extra testing around the different possible TTY states. Please let me know if you have any further concerns.,True,False,8,4308.416666666667
avajs/ava/1885,2018-08-05T17:03:56Z,False,5b672f266480fdc7b1c75956,"Fantastic work, thanks @jagoda!",True,False,8,4308.416666666667
nestjs_____typeorm_____27,2018-08-05T22:08:08Z,True,nestjs_____typeorm_____27_____410552074,@kamilmysliwiec any idea on how it will be implemented ? We cannot really use TypeORM withou EventSubscribers imo.,True,True,25,905236.35
nestjs_____typeorm_____27,2018-08-06T09:36:02Z,True,nestjs_____typeorm_____27_____410648693,"@LeoMartinDev maybe create an issue over at TypeORM, so they provide an (non internal-)API for EventSubscribers.",True,True,25,905236.35
nestjs_____typeorm_____27,2018-08-06T11:36:27Z,True,nestjs_____typeorm_____27_____410679178,"@BrunnerLivio I guess we just need a public `registerSubscriber()` method or something like that, right ?",True,True,25,905236.35
sbpp_____sourcebans-pp_____488,2018-08-06T19:57:49Z,True,sbpp_____sourcebans-pp_____488_____410833948,"Just looking at it now again, feel like this would break any RCON scripts/plugins that call to this command, as it does not check for player validity correctly.",True,True,20,60445.583333333336
sbpp_____sourcebans-pp_____488,2018-08-06T21:58:22Z,True,sbpp_____sourcebans-pp_____488_____410865941,"How would it break rcon scripts? When rcon or sm_rcon is ran, clientId returned is 0. Ive had zero issues since implementing this on my own servers.",True,True,20,60445.583333333336
docker/docker.github.io/7184,2018-08-07T07:27:53Z,False,5b694b2b6480fdc270ac29ad,"Deploy preview for *modest-edison-79d82e* ready!

Built with commit e7b41162e1abadcef26f0139d660cce93edc1760

https://deploy-preview-7184--modest-edison-79d82e.netlify.com",True,False,1,0.0
sbpp_____sourcebans-pp_____488,2018-08-07T11:36:39Z,True,sbpp_____sourcebans-pp_____488_____411026529,"I double checked through the flow of the ban menu and it does the same exact thing that /ban playerName time ""Reason"" would do (see CreateBan). If there is an issue with an invalid client, then the problem is not with the menu, but elsewhere in the plugin.",True,True,20,60445.583333333336
SuperDARN_____rst_____153,2018-08-07T15:26:55Z,True,SuperDARN_____rst_____153_____411097212,"These changes and bug fixes should get out quickly. The stand-alone AACGM-v2 code was updated and has been in use for several months by non-RST users. RST users are using old and buggy code but asking for the ""patches"" to the AACGM-v2 code. A better solution is to release a new version of RST quickly, with these and other changes.",True,True,28,142543.38333333333
SuperDARN_____rst_____153,2018-08-07T15:29:26Z,True,SuperDARN_____rst_____153_____411098133,"Ok, so the problem was related to an outdated `IGRF_COEFFS` environment variable in `superdarn.bash` and `superdarn.tcsh`.  Repeating my test from before,

With the DLM:
```
IDL> print,aacgm_v2_setdatetime(2018,08,1,00,00,00)
% Loaded DLM: AACGMDLM.
           0
IDL> pos=cnvcoord_v2(60.,120.,300.)
IDL> print,pos
       55.955571      -166.05710       1.0456635
IDL> pos=cnvcoord_v2(60.,120.,300.,/trace)
IDL> print,pos                            
       55.957024      -166.05854       1.0456635
```

However, without the DLM:
```
IDL> print,aacgm_v2_setdatetime(2018,08,1,00,00,00)
       0
IDL> pos=cnvcoord_v2(60.,120.,300.)                
% Compiled module: FACTORIAL.
IDL> print,pos
       55.955571      -166.05710       1.0456635
IDL> pos=cnvcoord_v2(60.,120.,300.,/trace)         
IDL> print,pos
       12.062125      -170.09346       1.0456635
IDL> print,getenv('IGRF_COEFFS')                   
/jumbo/superdarn/evan/test_rst6/rst/tables/analysis/mag/magmodel_1590-2015.txt
```

@sshepherd, are you sure the native IDL code is getting the paths correct?",True,True,28,142543.38333333333
SuperDARN_____rst_____153,2018-08-07T16:33:32Z,True,SuperDARN_____rst_____153_____411120280,"This is a touch off-topic, but I wanted to suggest a friendly solution to help with things like this in the future:

@sshepherd if this is such a critical fix, or you think it requires a higher priority due to severity of bugs, it's useful to communicate this from the beginning so people can prioritize. It's not really fair to complain otherwise. If you have, I missed it, and my comment is moot.

There are ways to deal with this though. For example, a ""hotfix branch"" or something similar could have been made with an RST4.1.1 release or whatever the version number should be. Easy for me to say, I know. I'll slink back in to the shadows now.",True,True,28,142543.38333333333
SuperDARN_____rst_____153,2018-08-07T16:57:52Z,True,SuperDARN_____rst_____153_____411127827,"I will defer any decision regarding ""hot fix branches"", or whatever, to
those who are developing guidelines. This was (I think) identified in the
original request as a bug fix. My ""complaints"" are merely an attempt to get
changes into users hands more quickly than would otherwise happen. This is
not commercial software and should, in my opinion, be updated more
frequently with the caveat that we know there will still be bugs in the
code. Our more experienced users will likely identify these bugs. The
alternative is that we sit on code fixes, features, etc. for over a year
waiting for someone to decide that a new release is appropriate. As an
observer, I am suggesting that a new release is overdue.

On Tue, Aug 7, 2018 at 12:33 PM, Ashton Reimer <notifications@github.com>
wrote:

> This is a touch off-topic, but I wanted to suggest a friendly solution to
> help with things like this in the future:
>
> @sshepherd <https://github.com/sshepherd> if this is such a critical fix,
> or you think it requires a higher priority due to severity of bugs, it's
> useful to communicate this from the beginning so people can prioritize.
> It's not really fair to complain otherwise. If you have, I missed it, and
> my comment is moot.
>
> There are ways to deal with this though. For example, a ""hotfix branch"" or
> something similar could have been made with an RST4.1.1 release or whatever
> the version number should be. Easy for me to say, I know. I'll slink back
> in to the shadows now.
>
> —
> You are receiving this because you were mentioned.
> Reply to this email directly, view it on GitHub
> <https://github.com/SuperDARN/rst/pull/153#issuecomment-411120280>, or mute
> the thread
> <https://github.com/notifications/unsubscribe-auth/AC2DP1W5PfGMSYbXmQmQVAAzOb_k0di_ks5uOcFdgaJpZM4TzQZR>
> .
>
",True,True,28,142543.38333333333
sbpp_____sourcebans-pp_____488,2018-08-08T00:56:07Z,True,sbpp_____sourcebans-pp_____488_____411249215,"The problem is triggering the menu accidentally due to a player bootstrap plugin. This is not a typical situation, but I've seen it in the past while resolving people's problems. Nevertheless, I believe this should be reserved for admin menu only, requiring the generic flag rather than just bundling it just for the sake of convenience.",True,True,20,60445.583333333336
sbpp_____sourcebans-pp_____488,2018-08-08T01:51:51Z,True,sbpp_____sourcebans-pp_____488_____411257686,"In order to make sure this conversation has at least been productive in any sense, could you find or demonstate an example of where my new feature may cause some sort of problem? Doing so could perhaps allow me to learn and improve this code, otherwise I have failed understand the issue since you have been vague on 'bootstrapping' issues.",True,True,20,60445.583333333336
sbpp_____sourcebans-pp_____488,2018-08-08T02:17:13Z,True,sbpp_____sourcebans-pp_____488_____411261454,"Lets say a plugin runs ServerCommand sm_ban. That would result in client == 0, which would not display the menu. If a plugin runs FakeClientCommand on sm_ban and that client does not have access, that would result in an error message displayed that the user does not have access, which again would not display the menu.",True,True,20,60445.583333333336
sbpp_____sourcebans-pp_____488,2018-08-08T02:35:47Z,True,sbpp_____sourcebans-pp_____488_____411264472,"Also  ""_just for the sake of convenience._""

Isnt that the entire point of improving plugins? Convenience? Making it easier to do things?",True,True,20,60445.583333333336
sbpp_____sourcebans-pp_____488,2018-08-08T04:44:04Z,True,sbpp_____sourcebans-pp_____488_____411283401,"Plugins bootstrap `FakeClientCommand` to detect compatibility rather than the includes.

> Isnt that the entire point of improving plugins? Convenience? Making it easier to do things?

No. It was just yesterday someone asked help on admin menu flags; there's no need to give admins the ban menu if it was designed to work with the generic flag's admin menu and we ought to respect the existing flag system.",True,True,20,60445.583333333336
sbpp_____sourcebans-pp_____488,2018-08-08T04:57:15Z,True,sbpp_____sourcebans-pp_____488_____411285220,"I dont understand what you mean by ""Plugins bootstrap FakeClientCommand to detect compatibility rather than the includes."" You keep saying bootstrap.

Also afaik, fakeclientcommand can't override the admin flags for a registered admin command.

The admin menu also checks to see if a player has access to sm_ban before adding it to the clients list, which necessarily isn't ADMNFLAG_GENERIC.",True,True,20,60445.583333333336
sbpp_____sourcebans-pp_____488,2018-08-08T05:04:34Z,True,sbpp_____sourcebans-pp_____488_____411286330,"Like I've said, if somehow a plugin is able to open the menu via sm_ban, then something else is wrong with either SM or something internal to sb++.

So Im beginning to suspect that you dont understand how plugins work. At this point I don't even care. My two goals were to contribute and to learn. Neither of those have happened to far.",True,True,20,60445.583333333336
sbpp_____sourcebans-pp_____488,2018-08-08T05:36:03Z,True,sbpp_____sourcebans-pp_____488_____411290760,"Admin menu requires the generic flag, and like I said this isn't a common case, so you don't need to get all trigger happy about it.

> So Im beginning to suspect that you dont understand how plugins work. At this point I don't even care.

That's your opinion, and if you want to believe that, then do it, if you don't want people's take on this, then don't bother.",True,True,20,60445.583333333336
sbpp_____sourcebans-pp_____488,2018-08-08T05:39:18Z,True,sbpp_____sourcebans-pp_____488_____411291325,"By default, admin menu uses adminflag generic, yes, but because that is what sm_ban is set to by default. If it is overriden, then it is a set to whatever flag it is overridden to. This further points to your lack of understanding on how plugins work. You have provided zero working evidence as to why my feature would break anything, and instead are going off your ""feelings"" and ""beliefs"".",True,True,20,60445.583333333336
sbpp_____sourcebans-pp_____488,2018-08-08T05:42:12Z,True,sbpp_____sourcebans-pp_____488_____411291799,"> You have provided zero working evidence as to why my feature would break anything, and instead are going off your ""feelings"" and ""beliefs"".

I do not have any working evidence because I'm NOT the minority subjective group in question. If you want I can spin up an example tomorrow. 

Taking the minority factor away, the only thing I have against this is the idea to keep the menu as a submenu in admin menu only; as geo mentioned it's not clear to its command name",True,True,20,60445.583333333336
sbpp_____sourcebans-pp_____488,2018-08-08T05:43:13Z,True,sbpp_____sourcebans-pp_____488_____411291956,"Edit: By default, Admin Menu itself only requires ADMNFLAG_GENERIC, but in order to populate the menu with sm_ban, it checks client flag for ADMFLAG_BAN, which is what is set when sm_ban is created.

`RegAdminCmd(""sm_ban"", CommandBan, ADMFLAG_BAN, ""sm_ban <#userid|name> <minutes|0> [reason]"", ""sourcebans"");`

Because of this, it means that a client is REQUIRED to have either ADMNFLAG_BAN or whatever flag(s) the command is overridden by.",True,True,20,60445.583333333336
sbpp_____sourcebans-pp_____488,2018-08-08T05:48:52Z,True,sbpp_____sourcebans-pp_____488_____411292976,"_""Taking the minority factor away, the only thing I have against this is the idea to keep the menu as a submenu in admin menu only; as geo mentioned it's not clear to its command name""_

For this reason, I have left in the ReplyToCommand line when args == 0. It will still display the usage parameters, whether or not client == 0.",True,True,20,60445.583333333336
sbpp_____sourcebans-pp_____488,2018-08-08T05:54:03Z,True,sbpp_____sourcebans-pp_____488_____411293861,"Locked as too heated, will continue in DM with JoinedSenses.",True,True,20,60445.583333333336
syncthing_____syncthing-android_____1212,2018-08-08T08:39:12Z,True,syncthing_____syncthing-android_____1212_____206932326,"Purpose
Remove the secure key generation extra from MainActivity as it's only used one time at first app launch and move it to a separate welcome wizard slide instead. With that move, overhead code in MainActivity will be avoided.

Screenshots
a) Early dev screenshot

Status
Still working on it. Being incrementally tested.
",True,True,42,17906.233333333334
syncthing_____syncthing-android_____1212,2018-08-08T12:07:52Z,True,syncthing_____syncthing-android_____1212_____411382735,There is no way this is going into .14. .14 will be whatever is in the beta plus bug fixes if any.,True,True,42,17906.233333333334
syncthing_____syncthing-android_____1212,2018-08-08T12:52:00Z,True,syncthing_____syncthing-android_____1212_____411394135,Ok I'll correct the milestone.,True,True,42,17906.233333333334
PanDAWMS/dkb/154,2018-08-08T15:33:55Z,False,5b6b0e9d6480fdc16c82408f,"Mandatory to do:
- [ ] Remove debug and research related things from this pull request
- [ ] Swap get_tables_from_text() and analyze_page() in separate commit
- [ ] Move 'header' -> 'caption' change into separate commit
- [ ] Replace complicated constructions with str.join()
- [ ] Split  ff171bb
- [ ] Make sure that extra check in 8ff3cb6 is unnecessary and remove it
- [ ] Change 'possible' attributes in 87bbe98
- [ ] Add an explanation for magical number in text row detection
- [ ] Check long code line in Paper.export()

Optional:
- [ ] Split 9abebea further to improve readability if this remains a problem after changes above
- [ ] Move similar error message related code in Manager.add_paper() and Manager.export_all() into separate function
- [ ] Explore dict[key] = dict.get(key, 0) +1",True,False,6,51846.88333333333
callstack_____react-native-paper_____485,2018-08-08T15:57:42Z,True,callstack_____react-native-paper_____485_____207057055,"<!-- Please provide enough information so that others can review your pull request. -->
<!-- Keep pull requests small and focused on a single change. -->

### Motivation
Menu component with auto positioning and RTL support:
https://material.io/design/components/menus.html
fixes: #9 

<!-- What existing problem does the pull request solve? Can you solve the issue with a different approach? -->

### Test plan
![menu-2](https://user-images.githubusercontent.com/11161020/43848868-9c92f5e6-9b3c-11e8-88c4-123b1f02bab1.png)
<!-- List the steps with which we can test this change. Provide screenshots if this changes anything visual. -->
",True,True,55,342611.05
callstack_____react-native-paper_____485,2018-08-08T16:03:16Z,True,callstack_____react-native-paper_____485_____411459963,"Hey @iyadthayyil, thank you for your pull request 🤗. The documentation from this branch can be viewed [here](https://4120-71323749-gh.circle-artifacts.com/0/docs/index.html).",True,True,55,342611.05
SuperDARN_____rst_____153,2018-08-08T19:06:32Z,True,SuperDARN_____rst_____153_____411517870,"Hmmm, something is probably not set correctly. I get the following
(correct) output when I disable the DLMs and run the attached test program:

Output:

COEFF:        55.955571      -166.05710       1.0456635
TRACE:        55.765593      -166.52621       1.0456635

oregon:~/Projects/AACGM/distro/idl/latest> setenv | grep DLM

IDL_DLM_PATH=
DLMPATH=

Simon



On Tue, Aug 7, 2018 at 11:29 AM, Evan Thomas <notifications@github.com>
wrote:

> Ok, so the problem was related to an outdated IGRF_COEFFS environment
> variable in superdarn.bash and superdarn.tcsh. Repeating my test from
> before,
>
> With the DLM:
>
> IDL> print,aacgm_v2_setdatetime(2018,08,1,00,00,00)
> % Loaded DLM: AACGMDLM.
>            0
> IDL> pos=cnvcoord_v2(60.,120.,300.)
> IDL> print,pos
>        55.955571      -166.05710       1.0456635
> IDL> pos=cnvcoord_v2(60.,120.,300.,/trace)
> IDL> print,pos
>        55.957024      -166.05854       1.0456635
>
> However, without the DLM:
>
> IDL> print,aacgm_v2_setdatetime(2018,08,1,00,00,00)
>        0
> IDL> pos=cnvcoord_v2(60.,120.,300.)
> % Compiled module: FACTORIAL.
> IDL> print,pos
>        55.955571      -166.05710       1.0456635
> IDL> pos=cnvcoord_v2(60.,120.,300.,/trace)
> IDL> print,pos
>        12.062125      -170.09346       1.0456635
> IDL> print,getenv('IGRF_COEFFS')
> /jumbo/superdarn/evan/test_rst6/rst/tables/analysis/mag/magmodel_1590-2015.txt
>
> @sshepherd <https://github.com/sshepherd>, are you sure the native IDL
> code is getting the paths correct?
>
> —
> You are receiving this because you were mentioned.
> Reply to this email directly, view it on GitHub
> <https://github.com/SuperDARN/rst/pull/153#issuecomment-411098133>, or mute
> the thread
> <https://github.com/notifications/unsubscribe-auth/AC2DPwoHolim9e0JFCaP8nQDVL2W5rQcks5uObJmgaJpZM4TzQZR>
> .
>
",True,True,28,142543.38333333333
SuperDARN_____rst_____153,2018-08-08T19:17:05Z,True,SuperDARN_____rst_____153_____411520849,@sshepherd attachments don't seem to survive when replying to github messages via email.  Can you re-attach the file to the pull request discussion using the github website?,True,True,28,142543.38333333333
SuperDARN_____rst_____153,2018-08-08T19:32:37Z,True,SuperDARN_____rst_____153_____411525161,"Here is the contents of the file I call ""newtest.idl"" which I then run from the command line: ""idl newtest.idl""





    .compile genmag
    .compile igrflib_v2
    .compile aacgmlib_v2
    .compile aacgm_v2
    .compile time
    .compile astalg
    .compile mlt_v2

    ch = ''
    fmt = '(a,$)'

    year  = 2018
    month = 8
    day   = 1
    ; hour, minute, second have little effect...

    ret = AACGM_v2_SetDateTime(year,month,day)

    ;-----------------------------------------------------------------------------
    ; test single input
    ;

    lat0 = 60.
    lon0 = 120.
    alt  = 300.

    p = cnvcoord_v2(lat0,lon0, alt)
    print, 'COEFF: ', p

    p = cnvcoord_v2(lat0,lon0,alt,/trace)
    print, 'TRACE: ', p
    print, ''

    exit",True,True,28,142543.38333333333
SuperDARN_____rst_____153,2018-08-08T20:14:59Z,True,SuperDARN_____rst_____153_____411537327,"And here is my output (when copying the IDL .pro files from this branch of the RST to a new directory):

```
babylon1:~/aacgm_test$ idl newtest.idl 
IDL Version 8.5.1 (linux x86_64 m64). (c) 2015, Exelis Visual Information Solutions, Inc., a subsidiary of Harris Corporation.
Installation number: 212858-3.
Licensed for use by: Dartmouth College

% Compiled module: AACGM_V2_DAYNO.
% Compiled module: AACGM_V2_DATE.
...
% Compiled module: MLTCONVERTEPOCH_V2.
% Compiled module: MLT_V2.
% Compiled module: FACTORIAL.
COEFF:        55.955571      -166.05710       1.0456635
TRACE:        12.062125      -170.09346       1.0456635

```

If I roll back to the master branch, the native trace option works correctly:

```
IDL> print,aacgm_v2_setdatetime(2018,8,1,0,0,0)
       0
IDL> print,cnvcoord_v2(60.,120.,300.)          
% Compiled module: FACTORIAL.
       55.955571      -166.05710       1.0456635
IDL> print,cnvcoord_v2(60.,120.,300.,/trace)
       55.957022      -166.05854       1.0456635
```

Are you sure the IDL code to parse and load the pre-1900+IGRF coefficients within the RST is working correctly?",True,True,28,142543.38333333333
SuperDARN_____rst_____153,2018-08-08T20:21:47Z,True,SuperDARN_____rst_____153_____411539323,"Ah. This is within the RST... I am testing the stand-alone version so I
will have to look at how it maps to the RST. The answer is probably ""no"".

Simon

On Wed, Aug 8, 2018 at 4:15 PM, Evan Thomas <notifications@github.com>
wrote:

> And here is my output (when copying the IDL .pro files from this branch of
> the RST to a new directory):
>
> babylon1:~/aacgm_test$ idl newtest.idl
> IDL Version 8.5.1 (linux x86_64 m64). (c) 2015, Exelis Visual Information Solutions, Inc., a subsidiary of Harris Corporation.
> Installation number: 212858-3.
> Licensed for use by: Dartmouth College
>
> % Compiled module: AACGM_V2_DAYNO.
> % Compiled module: AACGM_V2_DATE.
> ...
> % Compiled module: MLTCONVERTEPOCH_V2.
> % Compiled module: MLT_V2.
> % Compiled module: FACTORIAL.
> COEFF:        55.955571      -166.05710       1.0456635
> TRACE:        12.062125      -170.09346       1.0456635
>
>
> If I roll back to the master branch, the native trace option works
> correctly:
>
> IDL> print,aacgm_v2_setdatetime(2018,8,1,0,0,0)
>        0
> IDL> print,cnvcoord_v2(60.,120.,300.)
> % Compiled module: FACTORIAL.
>        55.955571      -166.05710       1.0456635
> IDL> print,cnvcoord_v2(60.,120.,300.,/trace)
>        55.957022      -166.05854       1.0456635
>
> Are you sure the IDL code to parse and load the pre-1900+IGRF coefficients
> within the RST is working correctly?
>
> —
> You are receiving this because you were mentioned.
> Reply to this email directly, view it on GitHub
> <https://github.com/SuperDARN/rst/pull/153#issuecomment-411537327>, or mute
> the thread
> <https://github.com/notifications/unsubscribe-auth/AC2DPz-IA_-F8mZCj0MfxQv0Ks8JTBpIks5uO0bEgaJpZM4TzQZR>
> .
>
",True,True,28,142543.38333333333
syncthing_____syncthing-android_____1212,2018-08-09T09:02:18Z,True,syncthing_____syncthing-android_____1212_____411689123,"@AudriusButkevicius Do you have time to review it? I expect nothing dramatically changed with this PR. If we can speed this a little bit up, I can do more features until this week is over :).",True,True,42,17906.233333333334
syncthing_____syncthing-android_____1212,2018-08-09T09:24:24Z,True,syncthing_____syncthing-android_____1212_____208862050,"Is this the condition whether this slide is shown or not?  
I am asking because naively I would have expected a condition when setting the layout, as I would expect that's relevant there (e.g. for the dots at the bottom indicating the current and amount of slides). Remember, I know nothing about this stuff, so this isn't criticism. ",True,True,42,17906.233333333334
syncthing_____syncthing-android_____1212,2018-08-09T09:31:18Z,True,syncthing_____syncthing-android_____1212_____208864177,"No, this is the condition when the AsyncTask (""a separate thread"") should end immediately. If this occurs (rarely) something has gone particularly wrong because the activity is destroyed before the asyncTask completed its work. As I implemented it like ""don't allow the user to advance out of this activity"" this should not happen. But in case another one changes code around, this is a very precautionary approach to be better safe than sorry. Best practice in Android coding say, you should check if your activity (the caller) is still there before referencing it from an AsyncTask.",True,True,42,17906.233333333334
syncthing_____syncthing-android_____1212,2018-08-09T09:38:03Z,True,syncthing_____syncthing-android_____1212_____208866250,"( or what's preventing you from doing that? )
I'm not sure if will work okay as I need this exact class FirstStartActivity again for my next improvement. I often experienced that a lot of minor changes are necessary and then I don't know how to keep the branch-branch in sync properly. (I did then create a new branch from the master and manually reapplied the changed code parts). Can I also pull from merged-branch to sub-branch when the point where the sub-branch was created isn't the commit that got merged? (and having less conflicts to resolve)
I just meant it would be a nice bonus if things go faster, but it's also okay if we stick to a good review that takes a little bit longer.

To your question above:
The app currently does only check if a crucial permission is missing (like storage permission) and if so repeat the welcome assistant. I think there are pros and cons to this.
Pro: Code is shorter and less error-prone as we don't have to reorder slides an have ""hardcoded int's"" versus the ""we can't get a hardcoded one, so a constant is required in code""
Cons: More code, more checks and reorder of the slides. The simple approach checking for ""ready for the next slide"" wouldn't apply anymore. We also would required saving bundles for the slide states for the case the phone is rotated > much more work. If necessary, I can do it.

... So long no one complained having to go through all slides again and that goes real quick. If something is already done you can press Continue>Continue>Continue and land. Repeating the slides also improves migration tasks if we later need to change something about the storage permission (I made this up, but can happen). We would then have overhead for checking if we need it and if we need a migration step to show the slide again. Opinions welcome:)",True,True,42,17906.233333333334
syncthing_____syncthing-android_____1212,2018-08-09T12:36:16Z,True,syncthing_____syncthing-android_____1212_____411742080,"What's displayed if keys are already there? `Secure keys for private data exchange have been successfully generated. ` suggest it just happened, which isn't really true in that case.

From a user point of view, it would definitely be nicer if only the pages that actually need an action are shown. I can't just rapidly press continue, because I don't know a priori whether the next slide requires action or not. If this is too difficult to do then I am fine with displaying them anyway. From my limited experience QT wizards where slides are just added to a parent UI object, you could just skip adding those that aren't relevant - I guess it's more involved with java/android (at least that was my experience whenever I tried to do anything in the android sphere :P ).

Regarding changes on top of changes: I usually branch on top of the open PR branch and then  rebase whenever the PR gets changed. Once the first PR is merged, I rebase the second branch on top of master (which works without conflicts, as master looks like the old branch). You can even open a PR off that secondary branch: Initially it will contain the diff of the first PR, but once that got merged, those parts of the diff disappear. In most cases that's not helpful though, as there is a reason the old branch isn't merged yet. I'd only do that if you want early feedback on a design choice or something like that.",True,True,42,17906.233333333334
syncthing_____syncthing-android_____1212,2018-08-09T20:40:09Z,True,syncthing_____syncthing-android_____1212_____411889616,"Ok, I'll skip slides automatically if they are no longer relevant for user convenience.",True,True,42,17906.233333333334
SuperDARN_____rst_____153,2018-08-10T12:15:01Z,True,SuperDARN_____rst_____153_____412064702,"The above fixes to the native IDL code were forwarded to me from @sshepherd since he is traveling to a radar site today.  I've tested them and the `/trace` keyword option is now fixed.  With that taken care of and the C code already having been tested (by myself and @aburrell), I'm merging this pull request.",True,True,28,142543.38333333333
SuperDARN_____rst_____153,2018-08-10T14:41:32Z,True,SuperDARN_____rst_____153_____412103209,"self merging, *high brow*.  Though it does seem like this has been fairly well tested and if anything the pull request could have been said to originate from @sshepherd as he's been making the fixes that are then translated to rst.  I don't have a problem here, though lets try not to do that too much.",True,True,28,142543.38333333333
SuperDARN_____rst_____153,2018-08-11T13:31:37Z,True,SuperDARN_____rst_____153_____412275268,"I suggest we try and avoid these type of unhelpful comments in the future.
The release of an updated RST is long overdue and attempts to move the
process along are only met with resistance and further delays. The RST is
not commercial software and should not be treated as such. Updates should
get to users quickly.

On Fri, Aug 10, 2018 at 10:41 AM Kevin Sterne <notifications@github.com>
wrote:

> self merging, *high brow*. Though it does seem like this has been fairly
> well tested and if anything the pull request could have been said to
> originate from @sshepherd <https://github.com/sshepherd> as he's been
> making the fixes that are then translated to rst. I don't have a problem
> here, though lets try not to do that too much.
>
> —
> You are receiving this because you were mentioned.
> Reply to this email directly, view it on GitHub
> <https://github.com/SuperDARN/rst/pull/153#issuecomment-412103209>, or mute
> the thread
> <https://github.com/notifications/unsubscribe-auth/AC2DP3ZPDXeqDNdVME4wcGpkQ69MdjY1ks5uPZudgaJpZM4TzQZR>
> .
>
",True,True,28,142543.38333333333
SuperDARN_____rst_____153,2018-08-11T17:18:24Z,True,SuperDARN_____rst_____153_____412289360,"I completely agree with @ksterne.

I completely disagree with @sshepherd about the comment being unhelpful.

There is a process and it must be followed, otherwise what is the point of having it. As an observer, I would say is it appropriate for @sshepherd to encourage people not to follow the process that the working group has established.

And nothing @ksterne did slowed the process. He didn't revert the merge. @sshepherd made a comment in several places that a new release of RST is long overdue. The response to this has been the largest flurry of activity on this repo in months. My inbox has been absolutely slammed with RST updates the past 2 weeks (which is awesome!).  People, especially @egthomas, @ksterne, @mts299, and @kkotyk  have made a significant effort to get a ton of pull requests merged. Literally spending entire days on mostly RST development (judging from the email alerts I received).",True,True,28,142543.38333333333
SuperDARN_____rst_____153,2018-08-11T17:37:28Z,True,SuperDARN_____rst_____153_____412290484,"Except @ksterne went on to admit the pull request originated from @sshepherd and that it really wasn't a self merge, so the sarcastic ""high brow"" comment was entirely unnecessary.",True,True,28,142543.38333333333
SuperDARN_____rst_____153,2018-08-11T17:42:50Z,True,SuperDARN_____rst_____153_____412290765,"Did it though? @egthomas made the pull request.

![image](https://user-images.githubusercontent.com/4604819/43994499-be2e45da-9d52-11e8-91fb-68064a24e21a.png)

Sure, ""high brow"" was not needed, but that was hardly the point of @ksterne's entire comment. cherry picking aside.",True,True,28,142543.38333333333
SuperDARN_____rst_____153,2018-08-11T17:49:57Z,True,SuperDARN_____rst_____153_____412291146,"Is it really my pull request if 100% of the original code changes on the branch were made by someone else and I simply opened it for them on github and then tested it?  The rest of @ksterne's comment acknowledged that fact, which is why the initial sarcasm was unnecessary and unhelpful.",True,True,28,142543.38333333333
SuperDARN_____rst_____153,2018-08-11T17:54:14Z,True,SuperDARN_____rst_____153_____412291372,"Communication is important.

I have absolutely no way of knowing (and neither does anyone else) that this is actually @sshepherd's pull request if you make it and don't say that you made it for him. Not that it matters if you respect the process.

And again, his comment didn't slow any process at all. It was a caution against people merging their own pull requests, which is 100% not in line with the agreed to process.

The most inappropriate thing here is someone encouraging others to ignore the process.

But sure, let's continue down this trail of productive pedantry.",True,True,28,142543.38333333333
SuperDARN_____rst_____153,2018-08-11T17:59:42Z,True,SuperDARN_____rst_____153_____412291684,"You're right, this is going nowhere and the previous comments speak for themselves.

well apparently locking doesn't do what I think it does, oh well",True,True,28,142543.38333333333
SuperDARN_____rst_____153,2018-08-11T18:09:28Z,True,SuperDARN_____rst_____153_____412292231,"Hey all, sorry for my colorful comment here, I didn't mean it in any seriousness and was only meant to be a slight joke.  My main intention wasn't to scold things here, I truly am happy with this pull request through and through.  I more meant to make a gentle reminder to other devs we shouldn't do this too much.  And somewhat for posterity as it looks like self merging though it only is on the face and not in content/context.

I am truly sorry that my joke had the opposite effect of what I meant here.  I'll try to keep this in mind for the future.",True,True,28,142543.38333333333
SuperDARN_____rst_____153,2018-08-11T18:28:17Z,True,SuperDARN_____rst_____153_____412293323,"Ashton, are you contributing in a meaningful way to the RST effort or just
quick with your opinions on various procedural matters?

On Sat, Aug 11, 2018 at 1:18 PM Ashton Reimer <notifications@github.com>
wrote:

> I completely agree with @ksterne <https://github.com/ksterne>.
>
> I completely disagree with @sshepherd <https://github.com/sshepherd>
> about the comment being unhelpful.
>
> There is a process and it must be followed, otherwise what is the point of
> having it. As an observer, I would say is it appropriate for @sshepherd
> <https://github.com/sshepherd> to encourage people not to follow the
> process that the working group has established.
>
> And nothing @ksterne <https://github.com/ksterne> did slowed the process.
> He didn't revert the merge. @sshepherd <https://github.com/sshepherd>
> made a comment in several places that a new release of RST is long overdue.
> The response to this has been the largest flurry of activity on this repo
> in months. My inbox has been absolutely slammed with RST updates the past 2
> weeks (which is awesome!). People, especially @egthomas
> <https://github.com/egthomas>, @ksterne <https://github.com/ksterne>,
> @mts299 <https://github.com/mts299>, and @kkotyk
> <https://github.com/kkotyk> have made a significant effort to get a ton
> of pull requests merged. Literally spending entire days on mostly RST
> development (judging from the email alerts I received).
>
> —
> You are receiving this because you were mentioned.
> Reply to this email directly, view it on GitHub
> <https://github.com/SuperDARN/rst/pull/153#issuecomment-412289360>, or mute
> the thread
> <https://github.com/notifications/unsubscribe-auth/AC2DPwrG5wE-JQO8pDrb5mOMXzeCqSXfks5uPxHhgaJpZM4TzQZR>
> .
>
",True,True,28,142543.38333333333
SuperDARN_____rst_____153,2018-08-11T18:40:53Z,True,SuperDARN_____rst_____153_____412294069,"I did not check my mailbox this morning, and here we are... 
Guys, cool down! 
Getting personal is not helpful at all, and sense of humour is an invaluable asset.",True,True,28,142543.38333333333
SuperDARN_____rst_____153,2018-08-11T20:29:53Z,True,SuperDARN_____rst_____153_____412299716,"Appreciate the reply, Kevin, particularly while waiting for you in the Tim
Horton’s parking lot in Timmins. See you soon, I hope.

On Sat, Aug 11, 2018 at 2:09 PM Kevin Sterne <notifications@github.com>
wrote:

> Hey all, sorry for my colorful comment here, I didn't mean it in any
> seriousness and was only meant to be a slight joke. My main intention
> wasn't to scold things here, I truly am happy with this pull request
> through and through. I more meant to make a gentle reminder to other devs
> we shouldn't do this too much. And somewhat for posterity as it looks like
> self merging though it only is on the face and not in content/context.
>
> I am truly sorry that my joke had the opposite effect of what I meant
> here. I'll try to keep this in mind for the future.
>
> —
> You are receiving this because you were mentioned.
> Reply to this email directly, view it on GitHub
> <https://github.com/SuperDARN/rst/pull/153#issuecomment-412292231>, or mute
> the thread
> <https://github.com/notifications/unsubscribe-auth/AC2DPz6UK0jYHxM-xx4EjRdMEwWV5yXzks5uPx3YgaJpZM4TzQZR>
> .
>
",True,True,28,142543.38333333333
SuperDARN_____rst_____153,2018-08-11T20:36:16Z,True,SuperDARN_____rst_____153_____412300025,"Yes, thank you for clearing that up @ksterne - I'm sorry for misinterpreting your comment and apologize.",True,True,28,142543.38333333333
darincomeau/MPAS-Model/5,2018-08-13T15:31:43Z,False,5b71a5936480fdc166f4b2d3,Approved!,True,False,1,0.0
mono/mono/10086,2018-08-13T23:01:35Z,False,5b720e976480fdc412ca50e2,"Should this be `strncmp` (or check length and `memcmp`)? `strstr` is much slower, and the term `prefix` here suggests `strstr` is overkill.",True,False,4,1034.1
mono/mono/10086,2018-08-14T00:59:33Z,False,5b722aa76480fdc166f4e677,"Regarding strncmp, will presence of underscore at start be the same on each?",True,False,4,1034.1
mono/mono/10086,2018-08-14T02:41:33Z,False,5b72428d6480fdc1c0bf1578,"@monojenkins build failed
",True,False,4,1034.1
mono/mono/10086,2018-08-14T16:15:41Z,False,5b7301606480fdc1ac01249a,"Linux AArch64 fails finalizer-thread.exe with: ```
* Assertion at unwind.c:640, condition `cfa_reg != -1' not met

* Assertion at mini-exceptions.c:1202, condition `unwind_options == MONO_UNWIND_NONE' not met
```

i386 OSX fails System.Runtime.Caching with this:
```
Results saved as /Users/builder/jenkins/workspace/test-mono-pull-request-i386-osx/mcs/class/System.Runtime.Caching/TestResult-net_4_x.xml.
mono(53061,0xb0956000) malloc: *** error for object 0x4e2f00: pointer being freed was not allocated
*** set a breakpoint in malloc_error_break to debug
Memory around native instruction pointer (0xa1750b12):
0xa1750b02  ff ff 83 ec 04 56 57 53 e8 3d df 02 00 83 c4 10  .....VWS.=......
0xa1750b12  0f 0b 55 89 e5 53 57 56 83 ec 0c e8 00 00 00 00  ..U..SWV........
0xa1750b22  5b 8b 75 08 e8 a7 da 02 00 89 c7 85 ff 74 22 8d  [.u..........t"".
0xa1750b32  45 0c 89 45 f0 83 ec 04 50 56 57 e8 ae da 02 00  E..E....PVW.....

Native stacktrace:

	0   mono                                0x00130baf mono_dump_native_crash_info + 767
	1   mono                                0x000dd4b3 mono_handle_native_crash + 179
	2   mono                                0x000304df mono_sigill_signal_handler + 47
	3   libsystem_platform.dylib            0xa18cae5b _sigtramp + 43
	4   ???                                 0xffffffff 0x0 + 4294967295
	5   libsystem_c.dylib                   0xa1750a4c __abort + 0
	6   libsystem_malloc.dylib              0xa18478e7 free + 529
	7   CoreFoundation                      0x942c84da __exceptionFinalize + 74
	8   CoreFoundation                      0x942a5d72 __CFTSDFinalize + 114
	9   libsystem_pthread.dylib             0xa18d5ac5 _pthread_tsd_cleanup + 596
	10  libsystem_pthread.dylib             0xa18d57e2 _pthread_exit + 137
	11  libsystem_pthread.dylib             0xa18d6081 pthread_exit + 33
	12  mono                                0x00305151 mono_threads_platform_exit + 17
	13  mono                                0x0030371c mono_thread_info_exit + 60
	14  mono                                0x002451f0 start_wrapper + 816
	15  libsystem_pthread.dylib             0xa18d4047 _pthread_body + 184
	16  libsystem_pthread.dylib             0xa18d3f8f _pthread_body + 0
	17  libsystem_pthread.dylib             0xa18d384a thread_start + 34
```
Windows x64 fails System with: ```
***** MonoTests.Microsoft.CSharp.CSharpCodeProviderTest.CompileFromDomBatch_NotInMemory
* Assertion: should not be reached at d:\j\workspace\x\mono\sgen\sgen-scan-object.h:91

make[2]: *** [../../build/tests.make:219: run-test-lib] Error 1
```

None of those are related to a change to full-aot",True,False,4,1034.1
syncthing_____syncthing-android_____1212,2018-08-14T22:00:46Z,True,syncthing_____syncthing-android_____1212_____210118450,"So showing pointless slides is very confusing to the user. I imagine users screaming on the forum now wanting to loose their device ID after revoking storage permissions or something like that (as slides imply the keys will be generated).

 You could simply build a list of strings indicating what needs to be shown, and just serialize that list between rotations.",True,True,42,17906.233333333334
syncthing_____syncthing-android_____1212,2018-08-14T22:01:02Z,True,syncthing_____syncthing-android_____1212_____210118510,Why does this needs to be a week ref? Why can't it just be a normal reference?,True,True,42,17906.233333333334
syncthing_____syncthing-android_____1212,2018-08-14T22:01:40Z,True,syncthing_____syncthing-android_____1212_____210118654,"The ""Enjoy"" is very cheesy, let's not say that.",True,True,42,17906.233333333334
syncthing_____syncthing-android_____1212,2018-08-14T22:03:31Z,True,syncthing_____syncthing-android_____1212_____210119104,"""the config"" ->  ""configuration""

This doesn't really explain what happened, and the instructions are not clear. Why should I back up my pictures if the config creation failed? Or is this talking about keys/config? If it is, how can I even get to a screen where I can do that?

",True,True,42,17906.233333333334
syncthing_____syncthing-android_____1212,2018-08-14T22:04:39Z,True,syncthing_____syncthing-android_____1212_____413031293,"Oh, and sorry I was away for so long. Had no desktop for a few days.",True,True,42,17906.233333333334
syncthing_____syncthing-android_____1212,2018-08-14T22:07:06Z,True,syncthing_____syncthing-android_____1212_____413031850,Thanks for the review. I'll get back on the weekend and then make adjustments as advised.,True,True,42,17906.233333333334
kubernetes/kubernetes/67426,2018-08-15T09:04:38Z,False,5b73edce6480fdc270b0b63e,"[APPROVALNOTIFIER] This PR is **NOT APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/67426#"" title=""Author self-approved"">yanxuean</a>*
To fully approve this pull request, please assign additional approvers.
We suggest the following additional approver: **random-liu**

If they are not already assigned, you can assign the PR to them by writing `/assign @random-liu` in a comment when ready.

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details open>
Needs approval from an approver in each of these files:

- **[test/e2e_node/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/e2e_node/OWNERS)**

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[""random-liu""]} -->",True,False,8,2032.85
kubernetes/kubernetes/67426,2018-08-15T09:05:01Z,False,5b73edce6480fdc270b0b63f,/sig node,True,False,8,2032.85
kubernetes/kubernetes/67426,2018-08-16T05:42:32Z,False,5b750ffa6480fdc54111f766,/assign @random-liu,True,False,8,2032.85
kubernetes/kubernetes/67426,2018-08-16T15:34:12Z,False,5b759aa66480fdc610b422c4,"/lgtm
/cc @kubernetes/sig-node-pr-reviews ",True,False,8,2032.85
kubernetes/kubernetes/67426,2018-08-16T15:34:19Z,False,5b759aad6480fdc83b48ba13,"[APPROVALNOTIFIER] This PR is **NOT APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/67426#issuecomment-413587836"" title=""LGTM"">rphillips</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/67426#"" title=""Author self-approved"">yanxuean</a>*
To fully approve this pull request, please assign additional approvers.
We suggest the following additional approver: **random-liu**

If they are not already assigned, you can assign the PR to them by writing `/assign @random-liu` in a comment when ready.

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details open>
Needs approval from an approver in each of these files:

- **[test/e2e_node/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/e2e_node/OWNERS)**

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[""random-liu""]} -->",True,False,8,2032.85
kubernetes/kubernetes/67426,2018-08-16T16:58:38Z,False,5b75ae6d6480fdc610b42e75,/lgtm,True,False,8,2032.85
kubernetes/kubernetes/67426,2018-08-16T16:59:06Z,False,5b75ae8e6480fdc9e110016b,"[APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/67426#issuecomment-413587836"" title=""LGTM"">rphillips</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/67426#"" title=""Author self-approved"">yanxuean</a>*, *<a href=""https://github.com/kubernetes/kubernetes/pull/67426#issuecomment-413614422"" title=""LGTM"">yujuhong</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[test/e2e_node/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/test/e2e_node/OWNERS)~~ [yujuhong]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->",True,False,8,2032.85
kubernetes/kubernetes/67426,2018-08-16T18:57:29Z,False,5b75ca4b6480fdc412cc17ef,"Automatic merge from submit-queue (batch tested with PRs 67100, 67426). If you want to cherry-pick this change to another branch, please follow the instructions <a href=""https://github.com/kubernetes/community/blob/master/contributors/devel/cherry-picks.md"">here</a>.",True,False,8,2032.85
nestjs_____typeorm_____27,2018-08-16T20:30:20Z,True,nestjs_____typeorm_____27_____413674925,"Hopefully, typeorm will provide this feature soon. Thanks for reporting @LeoMartinDev ",True,True,25,905236.35
nestjs_____typeorm_____27,2018-08-16T21:29:04Z,True,nestjs_____typeorm_____27_____413690467,"@LeoMartinDev probably something like that, but I think the typeorm team knows best whats appropriate and consistent with their API",True,True,25,905236.35
LLK_____scratch-vm_____1497,2018-08-18T00:37:13Z,True,LLK_____scratch-vm_____1497_____209284552,"Reverts LLK/scratch-vm#1453
Fixes https://github.com/LLK/scratch-gui/issues/2911 

The rounding is stopping position setting of floats. The rounding needs to be done in the display instead.",True,True,8,3719.266666666667
LLK_____scratch-vm_____1497,2018-08-18T00:39:59Z,True,LLK_____scratch-vm_____1497_____414019296,@thisandagain @paulkaplan ,True,True,8,3719.266666666667
syncthing_____syncthing-android_____1212,2018-08-18T08:57:53Z,True,syncthing_____syncthing-android_____1212_____414043504,"( Why are you fiddling with syncthing version? )
I am not. It's from the master.",True,True,42,17906.233333333334
syncthing_____syncthing-android_____1212,2018-08-18T08:58:58Z,True,syncthing_____syncthing-android_____1212_____211069489,"I've explained this in an earlier PR, I think it was one of those ""static field leaks PRs"". It's Android best coding practice, nothing more. This prevents lint warnings.",True,True,42,17906.233333333334
syncthing_____syncthing-android_____1212,2018-08-18T08:59:16Z,True,syncthing_____syncthing-android_____1212_____211069494,ok.,True,True,42,17906.233333333334
syncthing_____syncthing-android_____1212,2018-08-18T09:04:34Z,True,syncthing_____syncthing-android_____1212_____211069619,"=> Failed to create configuration. Consider backing up your sync data, then clear this app\'s data from Android settings.
It's also been there before and used by showCrashNotification if a corrupted config is about to be parsed in SyncthingService. We don't know what happened. But if that happens, the user needs to fully start over by wiping the SharedPrefs and app data. If the user has data in the ""only available readwrite area com.nutomic.syncthingandroid/files"", this data will be lost.
We should say something, that's better than letting the user run into an android pitfall if he tries to reinstall/clear app data alone. https://github.com/syncthing/syncthing-android/pull/1212/commits/75154fa069f1abd4792f2164e74c8ad084f5204c",True,True,42,17906.233333333334
LLK_____scratch-vm_____1497,2018-08-18T10:43:42Z,True,LLK_____scratch-vm_____1497_____414049071,"@amazinigmech2418 The issue is not marked as ""help wanted"". Please don't submit pull request for issues without the ""help wanted"" label.",True,True,8,3719.266666666667
syncthing_____syncthing-android_____1212,2018-08-18T11:08:13Z,True,syncthing_____syncthing-android_____1212_____414050351,"Are we ready now?
Latest commit according to review
( Show welcome slides only if mandatory prerequisites are  …
missing. Show only slides that are necessary because of
missing prerequisites. Mandatory prerequisites are
a) storage permission b) existance of keys and config
Remove key generation UI from StateDialogActivity as this
is no longer required in the main UI as we ensure generating
keys and config before launching to MainActivity. ) ",True,True,42,17906.233333333334
LLK_____scratch-vm_____1497,2018-08-18T13:38:56Z,True,LLK_____scratch-vm_____1497_____414058600,@kyleplo That's not something the [CONTRIBUTING](https://github.com/LLK/scratch-vm/blob/develop/.github/CONTRIBUTING.md) file actually says.,True,True,8,3719.266666666667
syncthing_____syncthing-android_____1212,2018-08-18T14:27:14Z,True,syncthing_____syncthing-android_____1212_____414061728,Sorry I am away for a day or so. Hopefully get to this tomorrow or monday ,True,True,42,17906.233333333334
LLK_____scratch-vm_____1497,2018-08-18T16:34:35Z,True,LLK_____scratch-vm_____1497_____414070299,"@Kenny2github @kyleplo @joker314 This is a MAJOR glitch. Even if it isn't ""help wanted"", it needs to be done. See the issue it fixes. ST members are saying it is needed.",True,True,8,3719.266666666667
LLK_____scratch-vm_____1497,2018-08-19T07:27:34Z,True,LLK_____scratch-vm_____1497_____414109274,"@amazinigmech2418 why did you ping me? I'm not involved with this at all (though now I am).

It is a major problem, but nevertheless you shouldn't open pull requests until they're marked ""help wanted"". If it's not marked help wanted, that means an ST member will open a pull for it eventually, and outside contributions are not needed.",True,True,8,3719.266666666667
LLK_____scratch-vm_____1497,2018-08-19T11:11:59Z,True,LLK_____scratch-vm_____1497_____414120287,"@joker314 But they will get mad at you: 
- https://github.com/LLK/scratch-gui/pull/1356#issuecomment-360994198
- https://github.com/LLK/scratch-gui/pull/1443#issuecomment-367791786
- https://github.com/LLK/scratch-gui/pull/1765#issuecomment-381112787",True,True,8,3719.266666666667
syncthing_____syncthing-android_____1212,2018-08-19T18:09:51Z,True,syncthing_____syncthing-android_____1212_____211110669,"this should be static I think,",True,True,42,17906.233333333334
syncthing_____syncthing-android_____1212,2018-08-19T18:10:26Z,True,syncthing_____syncthing-android_____1212_____211110682,what's up with this iStuff? why can't you just do this.layout = layout.,True,True,42,17906.233333333334
syncthing_____syncthing-android_____1212,2018-08-19T18:12:08Z,True,syncthing_____syncthing-android_____1212_____211110749,"Just instantiate this to 4 or 10 or whatever the amount you need is, and just check for nulls.",True,True,42,17906.233333333334
syncthing_____syncthing-android_____1212,2018-08-19T18:13:07Z,True,syncthing_____syncthing-android_____1212_____211110780,"You could add SlideType enum and then set the type for each slide, and find the index by iterating over slides later rather than storing some integer on the class body.",True,True,42,17906.233333333334
syncthing_____syncthing-android_____1212,2018-08-19T18:44:02Z,True,syncthing_____syncthing-android_____1212_____211111631,Why does failing to create configuration needs backup your data? Also what is sync data? what does that even mean?,True,True,42,17906.233333333334
syncthing_____syncthing-android_____1212,2018-08-19T18:45:59Z,True,syncthing_____syncthing-android_____1212_____211111683,Or use an linked list or something.,True,True,42,17906.233333333334
syncthing_____syncthing-android_____1212,2018-08-19T20:18:11Z,True,syncthing_____syncthing-android_____1212_____211113885,Failing to read a corrupted config needs backup.,True,True,42,17906.233333333334
syncthing_____syncthing-android_____1212,2018-08-19T20:18:42Z,True,syncthing_____syncthing-android_____1212_____211113904,Do I hear much extra work?,True,True,42,17906.233333333334
syncthing_____syncthing-android_____1212,2018-08-19T20:19:13Z,True,syncthing_____syncthing-android_____1212_____211113915,mSlides length does the job pretty well.,True,True,42,17906.233333333334
syncthing_____syncthing-android_____1212,2018-08-19T20:29:54Z,True,syncthing_____syncthing-android_____1212_____211114204,"It's already corrupt, backup of what?",True,True,42,17906.233333333334
syncthing_____syncthing-android_____1212,2018-08-19T20:32:14Z,True,syncthing_____syncthing-android_____1212_____211114263,"You hear an improved implementation where slide type does not depend on the index of it, which makes the code easier to understand and reason wether it works correctly.

If adding an enum is much extra work, then I am not even sure what's not much extra work.",True,True,42,17906.233333333334
syncthing_____syncthing-android_____1212,2018-08-19T20:38:24Z,True,syncthing_____syncthing-android_____1212_____211114423,ok,True,True,42,17906.233333333334
syncthing_____syncthing-android_____1212,2018-08-19T20:38:28Z,True,syncthing_____syncthing-android_____1212_____211114425,ok,True,True,42,17906.233333333334
syncthing_____syncthing-android_____1212,2018-08-19T20:39:34Z,True,syncthing_____syncthing-android_____1212_____211114457,"Assigned for the next PR of @AudriusButkevicius . Merge and then do it, please. You've got my approval for this implementation.",True,True,42,17906.233333333334
syncthing_____syncthing-android_____1212,2018-08-19T20:40:05Z,True,syncthing_____syncthing-android_____1212_____211114470,I've had existing data in a past fail case when it got corrupt. ,True,True,42,17906.233333333334
syncthing_____syncthing-android_____1212,2018-08-19T20:47:47Z,True,syncthing_____syncthing-android_____1212_____211114721,"Sorry, but I am not going to blindly merge something regardless of how salty you behave.
I am trying to behave like a reasonable adult, but at some point I too will run out of patience.",True,True,42,17906.233333333334
syncthing_____syncthing-android_____1212,2018-08-19T20:56:58Z,True,syncthing_____syncthing-android_____1212_____211114951,"If you don't wish to drive this home, let's close this and part ways.

I'd prefer to have no contributions, over contributions where every improvement gets a toxic response for no apparent reason.",True,True,42,17906.233333333334
syncthing_____syncthing-android_____1212,2018-08-19T20:57:53Z,True,syncthing_____syncthing-android_____1212_____211114971,"What existing data? Are you saying a corrupt config deletes data? If the config is corrupt, how does syncthing even know where the data is?",True,True,42,17906.233333333334
syncthing_____syncthing-android_____1212,2018-08-19T21:04:24Z,True,syncthing_____syncthing-android_____1212_____211115175,"The PR was tested on my phone, worked perfectly from the early beginning. Code shaping is yours, developing is mine.",True,True,42,17906.233333333334
LLK_____scratch-vm_____1497,2018-08-20T14:36:29Z,True,LLK_____scratch-vm_____1497_____414338443,"@amazinigmech2418 Thanks for bringing this up and for this PR.

In general, @kyleplo and @Kenny2github are correct that we would prefer all community PRs to have an associated ""help wanted"" issue, since we would like to come to consensus internally on how to resolve an issue before reviewing PRs.  Major and obvious regressions like this are a gray area however.

@mzgoddard @cwillisf I think we need to resolve this in scratch-render if we choose this method, since as-is this solution is like making all move operations followed by `[go to x: (round (x position)) y: (round (y position))]`, destroying any sub-pixel sprite position.",True,True,8,3719.266666666667
syncthing_____syncthing-android_____1212,2018-08-20T19:04:49Z,True,syncthing_____syncthing-android_____1212_____211374092,Android associates data with apps! Read a book about android.,True,True,42,17906.233333333334
syncthing_____syncthing-android_____1212,2018-08-20T19:05:26Z,True,syncthing_____syncthing-android_____1212_____211374268,"( It's already corrupt, backup of what? ) The Config is corrupt my data lives... yippie, I'll back it up!",True,True,42,17906.233333333334
MagicStack_____asyncpg_____348,2018-08-21T19:42:36Z,True,MagicStack_____asyncpg_____348_____209934542,"Add `session` parameter to `connection()` with default value `True`.
When set to `False` the client will limit usage of prepared statements
to unnamed in a transaction only.

As a side effect handling of unnamed prepared statements improved
irrespective of `session` value - they are automatically reprepared
if something invalidating them occurs.",True,True,28,9794.966666666667
MagicStack_____asyncpg_____348,2018-08-21T19:44:23Z,True,MagicStack_____asyncpg_____348_____414797868,Implements #339,True,True,28,9794.966666666667
typelevel_____cats_____2437,2018-08-22T23:51:17Z,True,typelevel_____cats_____2437_____210295006,"Hi Everyone, 

As you know, Sam has finally finished his book, and a fair bit of it deals with Cats, as well as Scalaz. As the most modern resource on the subject of FP in Scala (chronologically), I feel it has a place here, considering it _is_ free and very well-written. Thanks.
",True,True,6,33.55
typelevel_____cats_____2437,2018-08-22T23:54:51Z,True,typelevel_____cats_____2437_____415225532,@LukaJCB can i get a hallelujah?,True,True,6,33.55
typelevel_____cats_____2437,2018-08-22T23:59:47Z,True,typelevel_____cats_____2437_____415226471,"Sam has been openly hostile the typelevel project, to the point of inventing and spreading lies about it and its members. 

I also don't think that  the book has an accurate description of cats.",True,True,6,33.55
typelevel_____cats_____2437,2018-08-23T00:00:46Z,True,typelevel_____cats_____2437_____415226679,"I actually didn't feel cats, or typelevel, were relevant enough to mention.",True,True,6,33.55
typelevel_____cats_____2437,2018-08-23T00:03:09Z,True,typelevel_____cats_____2437_____415227180,"@stew which part wasn't accurate? The parent part? I can change that. 

You don't like the guy and I get it, but there's no sense in denying a resource like this to everyone just because y'all had a personal spat. FP is agnostic of the politics.",True,True,6,33.55
typelevel_____cats_____2437,2018-08-23T00:24:50Z,True,typelevel_____cats_____2437_____415231025,@emilypi see @fommil's comment above. We respect the intention of the original content author. ,True,True,6,33.55
lballabio/QuantLib/524,2018-08-23T03:04:14Z,False,5b7e25576480fdc883e90b48,[![CLA assistant check](https://cla-assistant.io/pull/badge/signed)](https://cla-assistant.io/lballabio/QuantLib?pullRequest=524) <br/>All committers have signed the CLA.,True,False,14,26282.15
lballabio/QuantLib/524,2018-08-23T09:10:11Z,False,5b7e7b2c6480fdc1c0c43467,"This might be useful (if the formulas still work in the case of two curves) but doesn't fix #522.

The point of that issue was that if one calculates the residual time according to the day-counter from one curve and passes it to a curve with a different day counter, the result is inconsistent.  Or, put another way: the residual time can be different for each curve, since they might have different day counters.  We should use dates instead of times.",True,False,14,26282.15
lballabio/QuantLib/524,2018-08-23T11:21:30Z,False,5b7e99ee6480fdc1d52a29a7,"Are you talking about the vol using one time and the discount factor using another daycount? I agree this may be inconsistent.

I believe the original mailing list asks us to do just that. This is implemented the same way as the European engine.

I do not have access to any market data. If you have some for a test, it would be appreciated.",True,False,14,26282.15
lballabio/QuantLib/524,2018-08-23T15:13:53Z,False,5b7ed0646480fdc142f6f7e3,"The original post asked for the possibility of measuring the time with different conventions on different curves.

About this change: the formula for the European option is much simpler, and the discount factor is factored out more cleanly.  In this case, I'm not confident that the formulas for A, B, C etc. weren't deduced under the assumption that the risk-free rate was also used for discounting.  If that were the case, we might have terms that don't appear in the final formula because they cancelled out, but should be reinserted if the assumption broke.",True,False,14,26282.15
HealthCatalyst_____Fabric.Cashmere_____470,2018-08-23T16:16:17Z,True,HealthCatalyst_____Fabric.Cashmere_____470_____210502522,"Adds page size selector to paginator and tightens up some styles. This does have breaking changes, but should allow for us to have this component better interface with the table component.

#451, fixes #445, fixes #316",True,True,11,176.05
HealthCatalyst_____Fabric.Cashmere_____470,2018-08-23T16:35:10Z,True,HealthCatalyst_____Fabric.Cashmere_____470_____415482585,"Could you explain why this is a breaking change. I was expecting for this to just be an addition to the component. We need to hold off on breaking changes; otherwise, it'll annoy developers who are currently using this",True,True,11,176.05
HealthCatalyst_____Fabric.Cashmere_____470,2018-08-23T16:35:14Z,True,HealthCatalyst_____Fabric.Cashmere_____470_____212376915,Thanks for updating this style as we discussed to match the stroke on the select box.  One thing to change though is to make `height: 36px` instead of 37px now.  You can check the example on the subnav component to see a primary and secondary button side by side.,True,True,11,176.05
HealthCatalyst_____Fabric.Cashmere_____470,2018-08-23T16:38:03Z,True,HealthCatalyst_____Fabric.Cashmere_____470_____212377748,Lets keep our PRs focused on a single component in the future. It made sense to include those other pagination fixes in this but hiding a button change doesn't make sense.,True,True,11,176.05
HealthCatalyst_____Fabric.Cashmere_____470,2018-08-23T16:38:38Z,True,HealthCatalyst_____Fabric.Cashmere_____470_____415483779,"@jtrujill the component used to require the user to input the numberOfPages, but with the page size being adjustable, it makes more sense for that to be calculated based on the number of items being paged through",True,True,11,176.05
HealthCatalyst_____Fabric.Cashmere_____470,2018-08-23T16:41:34Z,True,HealthCatalyst_____Fabric.Cashmere_____470_____212378819,I didn't realize that the last paginator was relying on other cashmere components. I suggest that we keep other cashmere components out of our templates since a subtle change in one could drastically effect the style of another. This can be fixed in a future update,True,True,11,176.05
HealthCatalyst_____Fabric.Cashmere_____470,2018-08-23T16:43:33Z,True,HealthCatalyst_____Fabric.Cashmere_____470_____212379347,Here's another instance were it should not have been included in this PR. No where is it mentioned that button or select were modified.,True,True,11,176.05
HealthCatalyst_____Fabric.Cashmere_____470,2018-08-23T16:46:49Z,True,HealthCatalyst_____Fabric.Cashmere_____470_____212380285,"But then we are creating similar things that look and act the same way as each other but pull from different code.  So for example, if we change the styling of the button - it comes across here.  If this was something that just looked like the button, we'd have to remember to change its style as well when we updated the button.  And we wouldn't want to rewrite the select box for this component, no?",True,True,11,176.05
HealthCatalyst_____Fabric.Cashmere_____470,2018-08-23T17:48:40Z,True,HealthCatalyst_____Fabric.Cashmere_____470_____415508892,@corykon is the numberOfPages change the only breaking change? Could you just map that to the new field and change the description of what it does and mark that as deprecated. I think most people were just passing the number of elements to that field anyways. I don't want to keep updating the major version for small changes like this ,True,True,11,176.05
HealthCatalyst_____Fabric.Cashmere_____470,2018-08-23T18:08:24Z,True,HealthCatalyst_____Fabric.Cashmere_____470_____212405741,"Pagination buttons look nothing like an hc-button. I've been in projects that try to heavily reuse components and extend them where they are used by either changing the default functionality or style. If all of our components start using other components within well eventually run into major issues. By major issues I mean that you can run into cyclic issues. On top of that you have hidden dependencies that the user doesn't know about which could cause issues. Say that you have a drop-down that uses an hc-button and the user the client doesn't import hc-button, then you'll have issues.

Basically there are many reasons not to and few reasons to use cashmere components in other cashmere components templates",True,True,11,176.05
HealthCatalyst_____Fabric.Cashmere_____470,2018-08-23T19:12:20Z,True,HealthCatalyst_____Fabric.Cashmere_____470_____212425359,It doesn't have to be changed in this PR but we should have the understanding that in the future this will need to be changed and that future components should avoid using other cashmere components in their templates,True,True,11,176.05
lballabio/QuantLib/524,2018-08-23T19:53:11Z,False,5b7f11d76480fdc17f08c00f,"Ok. If this is what you need, please remove the ""good first project"" tag. You are right that they do not cancel and we will need a measure change. This is a lot of work and likely not worth doing.",True,False,14,26282.15
lballabio/QuantLib/524,2018-08-23T20:11:01Z,False,5b7f16086480fdc645df8fd4,"Ok, let's take a step back. I think we've been talking at cross purposes.

Adding a different discount curve is hard and not worth doing.

On the other hand, letting each curve managing time differently should be a matter of replacing calls like

    riskFree->discount(residualTime)

with the corresponding calls using dates

    riskFree->discount (exerciseDate)

which perform the conversion internally with the correct day count convention. It might be zero rate or volatility instead of discount, but the idea is the same. The only tricky bit is `stdDeviation`, that should be changed to return the sqrt of the variance (there's a method for the latter in the vol curve).

Let me know if this makes sense to you.",True,False,14,26282.15
lballabio/QuantLib/524,2018-08-23T20:55:48Z,False,5b7f20836480fdc270b58489,"I don't understand how this change does not solve the problem you are outlining.

In this implementation, if I wanted the daycount convention corresponding to some curve, I can pass the curve object through the new constructor. I've changed all the calls (I may have missed a few because I was working on this late at night) to get the discount curve to go through getDiscountPtr(), which loads the curve with the conventions the user wanted.

I do need to look at the dividend/rebate amounts again.",True,False,14,26282.15
lballabio/QuantLib/524,2018-08-23T21:09:53Z,False,5b7f23d66480fdc1c0c48931,"The day-count convention one wants to use for the volatility might be different from the one used for, say, the risk-free rate. (It's usually the case that volatility uses business/252 and the interest rates some other convention.)

This means that there is no single residual time T in the calculations.  If we want to keep using times, we should calculate a residual time T1 when we ask the risk-free curve for the zero rate (or the discount), another residual time T2 when we ask the dividend-yield curve, and a third residual time T3 when we ask the volatility curve.  Each of these should be calculated according to the corresponding day-count convention.

Instead of doing the calculations ourselves, though, we can ask each curve for the rate (or volatility) at the exercise *date*.  Each curve will convert the date into the corresponding time internally, using its own day-count convention, and do the work for us.  (For reference, you can look at lines 57 to 66 of analyticeuropeanengine.cpp, which retrieve all needed quantities using dates. I'm guessing this is why the original poster reports the KI+KO=Vanilla relation to fail: the European engine accounts for different day-count conventions, and the barrier engine doesn't.)",True,False,14,26282.15
lballabio/QuantLib/524,2018-08-23T21:20:25Z,False,5b7f264d6480fdc303bbf246,"Ok. I understand you now.
Like I said in my first reply, I agree they may be inconsistent, but I wasn't sure what the user was looking for. Thanks for clarifying.",True,False,14,26282.15
YilianSource_____brackeys-bot_____51,2018-08-24T17:03:24Z,True,YilianSource_____brackeys-bot_____51_____210796681,"Closes #50 . Looks like it was an issue with Discord.NET that got fixed in a nightly build.

There have been a few little changes you might have noticed;
- You can't pass an EmbedBuilder to ReplyAsync anymore, use EmbedBuilder.Build()
- AddModulesAsync now needs a service provider as an argument
- A few changes to IMessage.GetReactionUsersAsync",True,True,11,8313.183333333332
YilianSource_____brackeys-bot_____51,2018-08-24T18:15:19Z,True,YilianSource_____brackeys-bot_____51_____415840126,"When this gets merged, please, before deploying for the first time run ""dotnet add package Discord.Net -v 2.0.0-beta2-00982 -s https://www.myget.org/F/rogueexception/api/v3/index.json"" once to register MyGet as a NuGet package source or else dotnet run/build/publish won't know from where to get Discord.NET and will error out.",True,True,11,8313.183333333332
MagicStack_____asyncpg_____348,2018-08-25T15:52:36Z,True,MagicStack_____asyncpg_____348_____415978489,"Hi Aleksey. Thanks for working on this. The PR looks interesting, however I have concerns with the introduced redundancy.  With this change, uncached anonymous statements would incur the penalty of preparing the query twice instead of once.  This might be fine for simple queries, but if a query is sufficiently large and complicated, the `Parse` step easily dominates everything else.

I feel like the best solution would be to make some changes on the pgbouncer side as well.  IIRC, the crux of the issue is that pgbouncer is hardcoded to only support the libpq behaviour by pinning the Parse/Bind/Execute/Sync sequence to a connection.  I think teaching it to support Parse/Describe/Sync/Bind/Execute/Sync the same way should remove the need to send `Parse` twice.  It would also be awesome to add a way to deterministically detect pgbouncer (e.g. by having it append a `ParameterStatus` message on connection), to remove the need for the `session` argument.",True,True,28,9794.966666666667
MagicStack_____asyncpg_____348,2018-08-25T22:10:06Z,True,MagicStack_____asyncpg_____348_____415999718,"> With this change, uncached anonymous statements would incur the penalty of preparing the query twice instead of once.

Uncached statements prepare twice iff `session == False`. For `session == True` amount of commands sent to a server is the same compared to the previous version. If `session == False` and prepared statements cache enabled then unnamed prepared statements cached (because of `Describe`) and only re`Parse`d on each `Bind/Execute`.

```
Session == True: 
    prepare(): Parse/Describe/Sync (once, cached)
    execute(): Bind/Execute/Sync

Session == False && !is_in_transaction():
    prepare(): Parse/Describe/Sync (once, cached)
    execute(): Parse/Bind/Execute/Sync

Session == False && is_in_transaction():
    prepare(): Parse/Describe/Sync (once, cached)
    execute(): Bind/Execute/Sync
```

> I think teaching it to support Parse/Describe/Sync/Bind/Execute/Sync the same way should remove the need to send Parse twice.

This is against the nature of pgbouncer and against the reason ""why we use pgbouncer with exactly this settings"". We don't want connection to postgresql to be held by someone outside of a transaction. Holding connection between Prepare and Execute leads to unpredictable behaviour under high load.

> It would also be awesome to add a way to deterministically detect pgbouncer (e.g. by having it append a ParameterStatus message on connection), to remove the need for the session argument.

The choice to use pgbouncer or not should be done explicitly by a human. It has impact on performance characteristics, architecture and code of a service.",True,True,28,9794.966666666667
MagicStack_____asyncpg_____348,2018-08-25T22:22:18Z,True,MagicStack_____asyncpg_____348_____416000287,"> the crux of the issue is that pgbouncer is hardcoded to only support the libpq behaviour by pinning the Parse/Bind/Execute/Sync sequence to a connection

This is not true. pgbouncer has no hardcoded sequences. `Sync` is the unit of work delimiter and this declared by PostgreSQL, not pgbouncer:

""At completion of each series of extended-query messages, the frontend should issue a Sync message. This parameterless message causes the backend to close the current transaction if it's not inside a BEGIN/COMMIT transaction block (“close” meaning to commit if no error, or roll back if error). Then a ReadyForQuery response is issued. The purpose of Sync is to provide a resynchronization point for error recovery. When an error is detected while processing any extended-query message, the backend issues ErrorResponse, then reads and discards messages until a Sync is reached, then issues ReadyForQuery and returns to normal message processing.""",True,True,28,9794.966666666667
MagicStack_____asyncpg_____348,2018-08-26T18:16:43Z,True,MagicStack_____asyncpg_____348_____416058033,"> Uncached statements prepare twice iff session == False

Yes, and this is a problem.  There may be multiple reasons why the cache may be disabled, too small, get cleared often, etc.  Also, I don't think adding a new connection parameter is the right way to go at all.  See below.

> This is against the nature of pgbouncer and against the reason ""why we use pgbouncer with exactly this settings"". We don't want connection to postgresql to be held by someone outside of a transaction. Holding connection between Prepare and Execute leads to unpredictable behaviour under high load.

I was referring strictly to the handling of unnamed statements, where the time between Parse and Execute is predictably small.  I agree that named prepared statements, portals and other session-level features are ""against the nature of pgbouncer"" in transaction mode.  I think, however, that a more robust bouncer implementation would reject these requests outright as opposed to failing in an unpredictable fashion.

>>  It would also be awesome to add a way to deterministically detect pgbouncer (e.g. by having it append a ParameterStatus message on connection), to remove the need for the session argument.

> The choice to use pgbouncer or not should be done explicitly by a human. It has impact on performance characteristics, architecture and code of a service.

This is not about the choice to use pgbouncer.  This is about detecting the capabilities of the server and adjusting accordingly.  We do this already to support various PostgreSQL variants and servers speaking its protocol.

pgbouncer is **not** a transparent proxy by any means, given how it breaks the session semantics, so it should be treated as a PostgreSQL variant that doesn't support prepared statements properly, in which case the `statement_cache_size` should default to `0`.  If we are unable to detect pgbouncer, manually setting `statement_cache_size` to `0` will be required.

> pgbouncer has no hardcoded sequences.

If that's, in fact, true, and pgbouncer always only looks at `Sync`, then the solution is not to emit `Sync` after the initial `Parse` or `Parse/Describe`.

> `Sync` is the unit of work delimiter and this declared by PostgreSQL, not pgbouncer:

I am aware of that, thanks.

Bottom line, here's what I think should be done to add support for pgbouncer in an acceptable fashion:

1. Decouple the codec configuration cache from the server-side prepared statement cache. `statement_cache_size` explicitly becomes about the use of server-side prepared statements only.
2. Make it so that in the unnamed statement case the `Parse/Describe/Bind/Execute` sequence always has exactly one `Sync` (`Parse/Bind/Execute/Sync` for the cached codec case, `Parse/Describe/Flush/Bind/Execute/Sync` for the uncached case).
3. Add detection of pgbouncer (possibly relying on remote help).  Set `statement_cache_size` to `0`, when detected (and raise an exception if it is explicitly set to a non-zero value).  Lacking detection, and when a prepared statement exception occurs, advise the user to set `statement_cache_size` to `0` explicitly.",True,True,28,9794.966666666667
alliedmodders_____amxmodx_____524,2018-08-27T10:16:52Z,True,alliedmodders_____amxmodx_____524_____211065957,@psychonic It's based on your PR https://github.com/alliedmodders/sourcemod/pull/390 but I'm unsure of paths. Will it be fine?,True,True,8,285296.05
scikit-build/cmake-python-distributions/50,2018-08-27T11:36:45Z,False,5b83e37d6480fdc142f8e42f,"# [Codecov](https://codecov.io/gh/scikit-build/cmake-python-distributions/pull/50?src=pr&el=h1) Report
> Merging [#50](https://codecov.io/gh/scikit-build/cmake-python-distributions/pull/50?src=pr&el=desc) into [master](https://codecov.io/gh/scikit-build/cmake-python-distributions/commit/c7af338c389e15d34fadb5cbb5379c5d48d4d8ce?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/scikit-build/cmake-python-distributions/pull/50/graphs/tree.svg?width=650&token=AVLQfg6EK7&height=150&src=pr)](https://codecov.io/gh/scikit-build/cmake-python-distributions/pull/50?src=pr&el=tree)

```diff
@@          Coverage Diff           @@
##           master     #50   +/-   ##
======================================
  Coverage    92.3%   92.3%           
======================================
  Files           1       1           
  Lines          26      26           
  Branches        3       3           
======================================
  Hits           24      24           
  Partials        2       2
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/scikit-build/cmake-python-distributions/pull/50?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/scikit-build/cmake-python-distributions/pull/50?src=pr&el=footer). Last update [c7af338...6e3ba81](https://codecov.io/gh/scikit-build/cmake-python-distributions/pull/50?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",True,False,2,848552.7333333333
MagicStack_____asyncpg_____348,2018-08-27T12:02:37Z,True,MagicStack_____asyncpg_____348_____416204176,"> Decouple the codec configuration cache from the server-side prepared statement cache. statement_cache_size explicitly becomes about the use of server-side prepared statements only.

Can you explain this idea in more details?
Looks very complicated for me, maybe I missed something.

> `Parse/Describe/Flush/Bind/Execute/Sync` for the uncached case

Flush will not help. This will be one connection to PostgreSQL hold by one client. Application may be non-perfect and can not return control to coroutine connected to database for tenths and even hundreds of milliseconds resulting in pgsql connection hold by pgbouncer for the same time. It is inappropriate for distributed systems.",True,True,28,9794.966666666667
lballabio/QuantLib/524,2018-08-27T13:22:40Z,False,5b83fbf06480fd27bdd43df5,Thanks.  I've added a test for the knock-in + knock-out = European relationship (I didn't add the test to this PR because I didn't want to push to your master; you can see it [here](https://github.com/lballabio/QuantLib/blob/master/test-suite/barrieroption.cpp#L166)) and your changes make it pass.,True,False,14,26282.15
MagicStack_____asyncpg_____348,2018-08-27T14:26:14Z,True,MagicStack_____asyncpg_____348_____416244719,"> Can you explain this idea in more details? Looks very complicated for me, maybe I missed something.

It's not complicated.  The only change is making `statement_cache_size` track the number of _named_ statements in the `PreparedStatementState` cache.  That way setting `statement_cache_size` to `0` will prevent the use of named statements, but will retain the benefit of cached `Describe` results.

> Flush will not help. This will be one connection to PostgreSQL hold by one client. Application may be non-perfect and can not return control to coroutine connected to database for tenths and even hundreds of milliseconds resulting in pgsql connection hold by pgbouncer for the same time. It is inappropriate for distributed systems.

Then you need to fix your application!  There is no guarantee that your `await query` will always run until completion and will not get preempted by another coroutine at an arbitrary point in the protocol flow, regardless of the number of hacks you make.  It all depends on what and how much was `select()`-ed from the sockets on a particular loop iteration, and you can't reliably control that.  This is how asyncio works and you have to deal with it.  So, please stop making general claims that asyncpg is ""inappropriate for distributed systems"" when all I'm trying to do is help you improve the status-quo in the first place.",True,True,28,9794.966666666667
MagicStack_____asyncpg_____348,2018-08-27T14:55:50Z,True,MagicStack_____asyncpg_____348_____416254596,"> The only change is making statement_cache_size track the number of named statements in the PreparedStatementState cache.

I thought the primary reason of this parameter is to limit memory used by the client. If memory is not an issue then OK.

> Then you need to fix your application!

Different systems have different requirements. Small error in one of application request handlers shouldn't crash all the system (by utilizing all pgsql connections), one of worker can get stuck or die, but not the system at all. Web applications are live, they modified couple times a weak and even a day, they should be tolerant to small errors.

> There is no guarantee that your await query will always run until completion and will not get preempted by another coroutine at an arbitrary point in the protocol flow, regardless of the number of hacks you make.

I don't really care about python workers, there are many of them, they easily scale. I care about database itself, master is the only and not scale.

> please stop making general claims that asyncpg is ""inappropriate for distributed systems""

asyncpg has nothing about ""distributed systems"", and any database client too. It is an architecture of application about it. The only thing a database client should do - not to interfere. Right now asyncpg prevents usage of pgbouncer. So, scale is not possible with current asyncpg version.

I don't really mean that asyncpg is ""inappropriate"", this word was about `Parse/Describe/Flush/Bind/Execute/Sync` sequence.",True,True,28,9794.966666666667
MagicStack_____asyncpg_____348,2018-08-27T15:38:45Z,True,MagicStack_____asyncpg_____348_____416268881,"```python
        if (use_cache or named) and self._protocol.session:
            stmt_name = self._get_unique_id('stmt')
        else:
            stmt_name = ''
```

Looks like `statement_cache_size=0` is insufficient. I can change this line to `if use_cache and named` but this change current behaviour.",True,True,28,9794.966666666667
MagicStack_____asyncpg_____348,2018-08-27T16:10:49Z,True,MagicStack_____asyncpg_____348_____416279047,"> I thought the primary reason of this parameter is to limit memory used by the client. If memory is not an issue then OK.

It is about the memory usage, but mostly server-side, as prepared statements can consume a non-trivial amount of memory.  The overall size of the client-side cache should obviously remain capped.  I don't think we should expose that as a connection argument just yet, let's default to some larger value than the current `statement_cache_size` default.

> Different systems have different requirements. 

Yes, and if we were to satisfy all the different requirements of different systems in asyncpg, we would have a mess that wouldn't work for anybody.  The goal of asyncpg is to work well with vanilla PostgreSQL, as that is a known common baseline.  We are willing to support other PostgreSQL-like systems, but only **if** that support does not compromise the integrity and maintainability of asyncpg.

> Small error in one of application request handlers shouldn't crash all the system (by utilizing all pgsql connections).

Again, what does that have to do with asyncpg?  Your misbehaving application would exhaust the pgbouncer pool, or any other limited resource pool equally well.  Fix it!  Arguably, a system that can go down due to a small error in a single component is badly designed.  If you are so worried about connection stalls, then refactor the database access into a standalone, well reviewed and tested service, separate from the application logic.

>> There is no guarantee that your `await query` will always run until completion

> I don't really care about python workers, there are many of them, they easily scale. I care about database itself, master is the only and not scale.

I don't think you understood, or deliberately ignored what I wrote.  Whatever you do, you cannot guarantee with absolute certainty that the protocol instance will always receive the entire database response in a single loop iteration, and your `await query` might get preempted while holding the connection.  If your system cannot tolerate that, then asyncio is not for you.

> Right now asyncpg prevents usage of pgbouncer...

... in the transaction mode.  And the approach I suggested would fix that without introducing much complexity and side effects for existing workflows.

>  So, scale is not possible with current asyncpg version.

You just made that claim again.

> I don't really mean that asyncpg is ""inappropriate"", this word was about Parse/Describe/Flush/Bind/Execute/Sync sequence.

Well, I think that `Parse/Describe/Sync` + `Parse/Bind/Execute/Sync` is inappropriate since we would be forcing double `Parse` on all uncached queries, and there is a quantifiable cost to that, unlike your abstract claims about ""distributed systems"".  

As it stands, I'm against merging your version.",True,True,28,9794.966666666667
MagicStack_____asyncpg_____348,2018-08-27T16:35:38Z,True,MagicStack_____asyncpg_____348_____416286608,"> I don't think you understood, or deliberately ignored what I wrote. Whatever you do, you cannot guarantee with absolute certainty that the protocol instance will always receive the entire database response in a single loop iteration, and your await query might get preempted while holding the connection. If your system cannot tolerate that, then asyncio is not for you.

It's OK if asyncpg is talking with pgbouncer. pgbouncer will cache the response and postgresql connection will be released. I don't care how many loop iteration required in python, I only want postgresql connection to be released as soon as possible. Think of pgbouncer in front of postgresql the same way as you think about nginx in front of python backend - it is used to handle slow clients.

> If you are so worried about connection stalls, then refactor the database access into a standalone, well reviewed and tested service, separate from the application logic.

I love to keep things simple. A lot of small services which are modified often are harder to maintain.
Anyway a database client should not impact on architecture.

> And the approach I suggested would fix that without introducing much complexity and side effects for existing workflows.

This PR has no side effects for existing workflow.

> Well, I think that Parse/Describe/Sync + Parse/Bind/Execute/Sync is inappropriate since we would be forcing double Parse on all uncached queries

When connected to pgbouncer in `pool_mode=transaction` only. Right now even this is impossible.
This PR has no impact on existing workflow. It only adds additional one.",True,True,28,9794.966666666667
MagicStack_____asyncpg_____348,2018-08-27T17:25:01Z,True,MagicStack_____asyncpg_____348_____416301663,"> It's OK if asyncpg is talking with pgbouncer. pgbouncer will cache the response and postgresql connection will be released.

Not true in every case. pgbouncer is a buffered proxy, and if the response is larger than its buffer (which is [fairly small by default](https://github.com/pgbouncer/pgbouncer/blob/241a58923dce5df6f8618f90a4c66fa86f88b649/etc/pgbouncer.ini#L285)) then it will take multiple network operations to send the response. 

> This PR has no impact on existing workflow. It only adds additional one...

Even so, it's a flawed implementation, and I'm against adding a new connection parameter for every ""workflow"" for reasons I outlined in my previous response.  Please stop arguing your case by repeating the old arguments.  I've heard them and articulated my opinion at length.  Adding the necessary pgbouncer support is possible without these complications.

---

> Looks like statement_cache_size=0 is insufficient. I can change this line to `if use_cache and named` but this change current behaviour.

`named=True` basically means ""I want a named prepared statement regardless of the caching"", and is used by cursors (which don't work with pgbouncer).  I'd rename the argument to `force_named` and then the check becomes `if named_cache or force_named`, where `named_cache` is determined by `statement_cache_size`, and `use_cache` is a separate concern determined by `local_statement_cache_size > 0`.

For simplicity, I would define `local_statement_cache_size` as:

```python
local_statement_cache_size = statement_cache_size if named_supported else 1000
```

so that the current behaviour remains the same.  We can work on improving the cache logic as a followup.",True,True,28,9794.966666666667
MagicStack_____asyncpg_____348,2018-08-27T17:44:51Z,True,MagicStack_____asyncpg_____348_____416308520,"> Not true in every case. pgbouncer is a buffered proxy, and if the response is larger than its buffer (which is fairly small by default) then it will take multiple network operations to send the response.

Yes, you are right. I mean ""buffer"" not ""cache"". Buffer size is configurable.

> used by cursors (which don't work with pgbouncer)

They work. In a transaction. Exactly the same way as with vanilla PostgreSQL. I only limit them to be unnamed if connected to pgbouncer to prevent cleanup mess.

`named=True` is used by `Connecton::prepare()` too. I'd prefer `stmt = conn.prepare(...)` and then `stmt.execute()` to work even with pgbouncer inside a transaction and outside.",True,True,28,9794.966666666667
MagicStack_____asyncpg_____348,2018-08-27T17:50:56Z,True,MagicStack_____asyncpg_____348_____416310504,"> They work. In a transaction. Exactly the same way as with vanilla PostgreSQL. I only limit them to be unnamed if connected to pgbouncer to prevent cleanup mess.
> named=True is used by Connecton::prepare() too. I'd prefer stmt = conn.prepare(...) and then stmt.execute() to work even with pgbouncer inside a transaction and outside.

You cannot put named prepared statements into cache even inside a transaction, unless you clean them up from the cache once the transaction is closed, and this is way too complicated.",True,True,28,9794.966666666667
MagicStack_____asyncpg_____348,2018-08-27T17:55:26Z,True,MagicStack_____asyncpg_____348_____416311894,"> You cannot put named prepared statements into cache even inside a transaction, unless you clean them up from the cache once the transaction is closed, and this is way too complicated.

Right. That's why in case of pgbouncer I put _unnamed_ prepare statements into cache and use following check:
```python
            if state.name == '' and (state != self.last_unnamed
                                     or state.need_reprepare):
                query = state.query
                state.need_reprepare = False
                self.last_unnamed = state
            else:
                query = None
```",True,True,28,9794.966666666667
MagicStack_____asyncpg_____348,2018-08-27T18:43:21Z,True,MagicStack_____asyncpg_____348_____416326820,"Well, that's no longer a prepared statement then, is it? If you need that, you can always subclass the PreparedStatement class and do a `Parse` in the subclass.",True,True,28,9794.966666666667
MagicStack_____asyncpg_____348,2018-08-27T19:53:33Z,True,MagicStack_____asyncpg_____348_____416347443,"> Well, that's no longer a prepared statement then, is it? If you need that, you can always subclass the PreparedStatement class and do a Parse in the subclass.

That's a prepared statement still. But unnamed and with lifetime until next unnamed statement or end of a transaction.

Subclassing is overcomplicated and anyway this feature requires modifications in coreproto.pyx, protocol.pyx and connection.py.

If you don't like `session` parameter (neither I), then we can add to `statement_cache_size` special value `'pgbouncer'` or something like this to distinguish it from 0.",True,True,28,9794.966666666667
MagicStack_____asyncpg_____348,2018-08-27T20:19:06Z,True,MagicStack_____asyncpg_____348_____416354766,"> That's a prepared statement still. But unnamed and with lifetime until next unnamed statement or end of a transaction.

Which makes it essentially useless in a *prepared statement* sense.  The purpose of an explicit prepared statement is to control precisely when it gets prepared and deallocated.  Barring these guarantees it can no longer pretend to be a true prepared statement.

> Subclassing is overcomplicated and anyway this feature requires modifications in coreproto.pyx, protocol.pyx and connection.py.

In this case subclassing is the only way to go.  Changing things around to make it easier is fine, as long as those changes are generic and have no negative impact.

> then we can add to statement_cache_size special value 'pgbouncer' or something like this to distinguish it from 0.

Calling it differently does not remove my objection.  The magical re-`Parse` approach is a non-starter.",True,True,28,9794.966666666667
MagicStack_____asyncpg_____348,2018-08-27T20:35:36Z,True,MagicStack_____asyncpg_____348_____416359690,"> Barring these guarantees it can no longer pretend to be a true prepared statement.

True or untrue - it is subjective. From the PostgreSQL docs all of them are true.

> The magical re-Parse approach is a non-starter.

It is not magical. It is logical and predictible. More then that it already existed in the code, just was moved to a more appropriate place.",True,True,28,9794.966666666667
lballabio/QuantLib/524,2018-08-27T20:52:13Z,False,5b8465b36480fd2aea650ed7,"Just a quick question

        return process_->riskFreeRate()->zeroRate(
                    arguments_.exercise->lastDate(),
                    process_->riskFreeRate()->dayCounter(),
                    Continuous, NoFrequency);

Would this be able to handle other compounding frequency in case specified in the YieldTermStructure ? and the same for the dividendYield?
",True,False,14,26282.15
MagicStack_____asyncpg_____348,2018-08-27T21:09:35Z,True,MagicStack_____asyncpg_____348_____416369651,"> True or untrue - it is subjective. From the PostgreSQL docs all of them are true.

Sorry, I don't understand your statement.  If I do `PREPARE foo AS query`, I am guaranteed to execute the same query plan on all subsequent `EXECUTE foo` calls, and I'm _also_ guaranteed that the server would not waste time parsing and planning the query. This is exactly the promises of `conn.prepare()`.  Your approach would silently break these promises.  

Example:

```python
ps = await conn.prepare('complicated query...')
for i in range(100):
    param = await conn.fetchval('simple query', i)
    result = await ps.fetch(param)
```

I expect the above to either work as expected, or fail loudly.  What I _don't_ expect is the above doing silent `Parse` calls on every iteration wrecking my performance.  This is what I was referring to as ""magical"".  pgbouncer does not support prepared statements outside of a transaction, so an asyncpg client connecting to it shouldn't either.",True,True,28,9794.966666666667
MagicStack_____asyncpg_____348,2018-08-28T12:53:48Z,True,MagicStack_____asyncpg_____348_____416573018,"""In the extended protocol, the frontend first sends a Parse message, which contains a textual query string, optionally some information about data types of parameter placeholders, and the name of a destination prepared-statement object (an empty string selects the unnamed prepared statement).""
There is nothing about true or untrue. Only named and unnamed.

""Named prepared statements can also be created and accessed at the SQL command level, using PREPARE and EXECUTE."" PREPARE SQL command used in PostgreSQL is an additional feature, not compatible with SQL standard. It doesn't support unnamed statements because it is impossible on a high level of the SQL language, but this not imply what unnamed prepared statements - untrue.

> I expect the above to either work as expected, or fail loudly. What I don't expect is the above doing silent Parse calls on every iteration wrecking my performance.

This is how database clients in different languages work. If a server side prepared statements are disabled then a client falls back to a client side. This is common, widely used and familiar behaviour. Users experienced with other database clients are ready to this. This behaviour allows to write code able to work optimally with and without pgbouncer.
Anyway someone who uses pgbouncer in pool_mode=transaction (not default) exactly knows what they is doing and why.",True,True,28,9794.966666666667
MagicStack_____asyncpg_____348,2018-08-28T13:31:00Z,True,MagicStack_____asyncpg_____348_____416584680,"> This is how database clients in different languages work. If a server side prepared statements are disabled then a client falls back to a client side. This is common, widely used and familiar behaviour. 

Where did you get that from?

Are you able to show at least one example of a database driver that silently emulates an explicit call to make a server-side prepared statement?  Does libpq `PQprepare` do that? Does JDBC `Connection.prepareStatement`?  Most drivers don't even expose `PREPARE` as a method (mostly because they follow some DB API standard, and `PREPARE` is non-standard).",True,True,28,9794.966666666667
MagicStack_____asyncpg_____348,2018-08-28T13:51:42Z,True,MagicStack_____asyncpg_____348_____416591805,"> Does libpq PQprepare do that?

libpq is a low level library. PQprepare is highly tied with PostgreSQL client/server protocol.

> Does JDBC Connection.prepareStatement do that?

Yes, 5 times for each query by default: https://jdbc.postgresql.org/documentation/head/server-prepare.html

> Are you able to show at least one example of a database driver that silently emulates an explicit call to make a server-side prepared statement?

Wikipedia can (https://en.wikipedia.org/wiki/Prepared_statement):
""A number of programming languages support prepared statements in their standard libraries and will emulate them on the client side even if the underlying DBMS does not support them, including Java's JDBC,[11] Perl's DBI,[12] PHP's PDO [1] and Python's DB-API.[13] Client-side emulation can be faster for queries which are executed only once, by reducing the number of round trips to the server, but is usually slower for queries executed many times. It resists SQL injection attacks equally effectively.""",True,True,28,9794.966666666667
MagicStack_____asyncpg_____348,2018-08-28T14:00:41Z,True,MagicStack_____asyncpg_____348_____416595001,"> libpq is a low level library. PQprepare is highly tied with PostgreSQL client/server protocol.

This is exactly the point. asyncpg is like libpq.  Please read the README.  

Everything else you listed are interfaces implementing generic DB APIs, which is explicitly not the goal of asyncpg.",True,True,28,9794.966666666667
MagicStack_____asyncpg_____348,2018-08-28T14:10:06Z,True,MagicStack_____asyncpg_____348_____416598813,"> asyncpg is like libpq.

It is not like libpq. Hidden introspection queries are the most notable difference.

OK, your code your rules. I can live without `stmt = conn.prepare()`, `stmt.execute()`. But not without ` Parse/Describe/Sync + Parse/Bind/Execute/Sync`. If you still against it (are you?) then this project can not solve my problem.",True,True,28,9794.966666666667
MagicStack_____asyncpg_____348,2018-08-28T14:26:27Z,True,MagicStack_____asyncpg_____348_____416605480,"I'm not against supporting pgbouncer cleanly, which can be done.  I'm against your specific approach.  If you are unwilling to compromise, so be it.",True,True,28,9794.966666666667
MagicStack_____asyncpg_____348,2018-08-28T14:57:34Z,True,MagicStack_____asyncpg_____348_____416618754,"> I'm not against supporting pgbouncer cleanly, which can be done. I'm against your specific approach. If you are unwilling to compromise, so be it.

You want to support pgbouncer in a fashion what will scale badly with possibility of connections get stuck. Cleanly or not is a second question. At first it just should work.

For anyone who aware of horizontal scaling and who exactly knows why they want to use pgbouncer with pool_mode=transaction fork will live here: https://github.com/my-mail-ru/asyncpg",True,True,28,9794.966666666667
lballabio/QuantLib/524,2018-08-28T21:08:59Z,False,5b85bb216480fd2c8273b41b,"The formula needs a continuous rate, and ask the curve for it.

If the curve was initialized with some other rate, it should convert it before returning it.  The curves in the library all do it.",True,False,14,26282.15
lerna_____lerna_____1616,2018-08-28T23:07:06Z,True,lerna_____lerna_____1616_____211583752,"In this PR, the following text has been added to the existing MIT license:

```
The following license shall not be granted to the following entities or any
subsidiary thereof due to their collaboration with US Immigration and Customs
Enforcement (""ICE""):

- ""Microsoft Corporation""
- ""Palantir Technologies""
- ""Amazon.com, Inc.""
- ""Northeastern University""
- ""Ernst & Young""
- ""Thomson Reuters""
- ""Motorola Solutions""
- ""Deloitte Consulting LLP""
- ""Johns Hopkins University""
- ""Dell Inc""
- ""Xerox Corporation""
- ""Canon Inc""
- ""Vermont State Colleges""
- ""Charter Communications""
- ""LinkedIn Corporation""
- ""United Parcel Service Co""
```

I have already spoken to @kittens and @evocateur about this privately, but I do need @kittens to give us permission to make this change.

# Explanation

Over the last year I've been really disturbed to see what ICE has done to American immigrants, to an extreme with what has happened to children.

The other day I saw this video from the ACLU about a toddler who after being separated from his family for several months could no longer look his mother in the face:

[<img width=""1312"" alt=""screen shot 2018-08-28 at 3 53 53 pm"" src=""https://user-images.githubusercontent.com/952783/44755388-cdf86280-aada-11e8-8749-3ec6fd27fdcc.png"">
](https://twitter.com/ACLU/status/1033084026893070338)

<p align=""center""><a href=""https://twitter.com/ACLU/status/1033084026893070338"">twitter.com/ACLU/status/1033084026893070338</a></p>

Those with a background in early childhood development can tell you that severe cases of neglect at an early age can and will cause severe developmental delays and disabilities. They will grow up feeling detached, they will have deep rooted trust issues, and they will have an inability to feel empathy. The actions of ICE have had a lasting lifelong impact on these children, and many of them won't even remember it happening.

I have trouble expressing how angry this makes me feel.

And the worst part is that I feel helpless to improve the situation. I vote, I campaign, I phone bank, I donate, I protest, I write to officials, I try to inform others... and yet things just keep getting worse and worse.

There is one thing I have control over, and that's open source. Open source has always been a way that I try to make the world a better place. Bringing new contributions to the community helps drives innovation and competition.

Lerna is a perfect example of that. Historically monorepos required a lot of infrastructure and only large teams and companies could afford to set it up and maintain it. They had a very expensive cost to them. Lerna made it available to everyone and the community has flourished around it.

Tool after tool, this is what we accomplish with open source. This is what we contribute back to the world. But today I want to do something more.

As we've learned over the last few years with Facebook, Uber, Google, and others. Tech companies do a lot of shady things behind the scenes.

Recently it's come out that a lot of big tech companies are supporting ICE by providing them with infrastructure and in some cases doing significant development work for them. They all have their excuses, but the fact is that these companies care only about the millions of dollars that ICE is paying them and are willing to ignore all the horrible things that ICE does.

Recently it has come to my attention that many of these companies which are being paid millions of dollars by ICE are also using some of the open source software that I helped build.

Now, it's not news to me that people can use open source for evil. That's part of the whole deal.

But it's really hard for me to sit back and ignore what these companies are doing with my code. It doesn't feel like there are enough steps in between me and the horrible things ICE is doing.

So my plan now is to start licensing my software differently.

I have spoken to Sebastian and Daniel about this and we all want Lerna to do the same.

For the companies that are known supporters of ICE: Lerna will no longer be licensed as MIT for you. You will receive no licensing rights and any use of Lerna will be considered theft. You will not be able to pay for a license, the only way that it is going to change is by you publicly tearing your contracts with ICE.
",True,True,11,321.76666666666665
lerna_____lerna_____1616,2018-08-29T02:04:08Z,True,lerna_____lerna_____1616_____416798591,"Lerna team, thank you for taking a stand 👏🏼👏🏼👏🏼",True,True,11,321.76666666666665
lerna_____lerna_____1616,2018-08-29T03:04:04Z,True,lerna_____lerna_____1616_____416808477,"Please make sure that you amend your page on npmjs.org so that it does not state that the license of the project is ""MIT"".",True,True,11,321.76666666666665
lerna_____lerna_____1616,2018-08-29T03:09:47Z,True,lerna_____lerna_____1616_____416809307,"Curious: Do ""parents"" who drag their children across the desert with the express intent of illegally entering the United States have no share of blame for what happens to these children?",True,True,11,321.76666666666665
lerna_____lerna_____1616,2018-08-29T03:24:41Z,True,lerna_____lerna_____1616_____416811556,"Are you protesting the right of the United States to choose who to allow to immigrate by deporting illegal aliens, or are you protesting the specific treatment of these illegal aliens in the context of their removal? If it's the former, then there's no point in bringing up their specific treatment as a point for why ICE should be protested (because it would be the case regardless of the treatment of any particular alien), and if it's the latter, then why not specify that, and protest by listing what exactly you would like changed about the treatment of aliens during their deportation? That would make what exactly you are protesting much clearer.",True,True,11,321.76666666666665
lerna_____lerna_____1616,2018-08-29T03:40:14Z,True,lerna_____lerna_____1616_____416813739,"I'm adding it to all my repos to prevent the lerna project from being used in any of those projects, both open source and commercial. Just as a matter of principal. Adding your political beliefs to your licensing is petty. The irony is that this very project is hosted on a resource owned by Microsoft...",True,True,11,321.76666666666665
lerna_____lerna_____1616,2018-08-29T03:44:57Z,True,lerna_____lerna_____1616_____416814422,"While I too abhor ICE, this isn't actually a valid license change. In order to re-license a project without a CLA, the consent of all contributors needs to be sought. There are a variety of scripts out there that accomplish this, the one I am most familiar with is the [Rust Relicense assistant](https://github.com/cmr/relicense-assistant). I'd suggest using similar tooling to avoid potential legal issues.",True,True,11,321.76666666666665
lerna_____lerna_____1616,2018-08-29T03:48:33Z,True,lerna_____lerna_____1616_____416814961,"Yep, noted that is is no longer Open Source Software, by definition of https://opensource.org/osd .

The way this tirefire of a license can be interpreted, is that since a company uses Windows and pays Microsoft, they are complicit. Or Github for that matter, which is owned by Microsoft. Are the Lerna repo maintainers profiting on ICE, in direct opposition to their license? Github free accounts didn't come from nothingness.",True,True,11,321.76666666666665
lerna_____lerna_____1616,2018-08-29T03:56:32Z,True,lerna_____lerna_____1616_____416816092,"@jwcrawley: So what? Maximal open source permissiveness is not automatically correct and just. It's just one option.

And no, the terms are pretty clear, I suggest you read more carefully: ""The following license shall not be granted to the following entities or any subsidiary thereof."" It says nothing about people giving money to e.g. Microsoft or using Microsoft products.",True,True,11,321.76666666666665
lerna_____lerna_____1616,2018-08-29T04:21:19Z,True,lerna_____lerna_____1616_____416819388,"I'm not sure how disallowing corporations that deal with ICE from using lerna would affect ICE's behavior - which I assume is the intent behind this PR.

Shoving politics into code will not help anyone.
",True,True,11,321.76666666666665
lerna_____lerna_____1616,2018-08-29T04:28:52Z,True,lerna_____lerna_____1616_____416820399,"Locking this issue.

If you disagree with the license then you're welcome to use one of the alternatives or write your own.

If you're employed by a subsidiary listed, direct any questions about the usage of Lerna to your company lawyer. This license only applies to future versions, you're free to use old versions that do not contain this clause.

If you have concerns over the legality of relicensing. The MIT license allows sublicensing, which this falls under. Even still, all contributors implicitly agreed to the existing license, of which I am the original license holder, when they submitted code meaning we are within our rights to relicense.

If you're a contributor with active code in Lerna, and disagree with the relicense, feel free to privately message @jamiebuilds, @evocateur, or myself and we'll ensure that your contributions are either removed or rewritten to remove attribution.

Thanks everyone for your comments thus far.",True,True,11,321.76666666666665
callstack_____react-native-paper_____485,2018-08-29T15:44:28Z,True,callstack_____react-native-paper_____485_____213732135,"Frankly, I don't see much value in having `Surface` as a separate component. It's used in just one place, and only adds some styles. Can you tell me what use this component has outside of how it's used in your PR?",True,True,55,342611.05
callstack_____react-native-paper_____485,2018-08-29T15:45:11Z,True,callstack_____react-native-paper_____485_____213732443,Nit: add 'elevated' before 'surfaces'. Also elaborate on the placement -- I believe it only adapts based on the source element's position + actual size of the menu. ,True,True,55,342611.05
callstack_____react-native-paper_____485,2018-08-29T15:48:24Z,True,callstack_____react-native-paper_____485_____213733724,"Since the only rule that `styles.surface` has is `backgroundColor`, it will be overridden by the next line. Please remove it. ",True,True,55,342611.05
callstack_____react-native-paper_____485,2018-08-29T16:27:04Z,True,callstack_____react-native-paper_____485_____213747273,"Nit: This doesn't really ""toggle"" anything, it just updates the shown/hidden state, so I suggest renaming it to ""_updateVisibility""",True,True,55,342611.05
callstack_____react-native-paper_____485,2018-08-30T07:47:24Z,True,callstack_____react-native-paper_____485_____213932998,"You use this constant only once, and really far away from this declaration. It's a bit confusing why you need this until line 282, especially since you keep using `menuSizeAnimation.x` and `menuSizeAnimation.y`. Please avoid defining it and instead inline it's use below.",True,True,55,342611.05
callstack_____react-native-paper_____485,2018-08-30T07:49:09Z,True,callstack_____react-native-paper_____485_____213933471,"Nit: destructure `dimensions` into `{ width: screenWidth, height: screenHeight }`, it will be slightly easier to read later on. ",True,True,55,342611.05
callstack_____react-native-paper_____485,2018-08-30T07:50:52Z,True,callstack_____react-native-paper_____485_____213933879,"You use this constant only once, please inline it where it's used.",True,True,55,342611.05
callstack_____react-native-paper_____485,2018-08-30T08:07:57Z,True,callstack_____react-native-paper_____485_____213938442,"Nit: I believe this component just shows a single option inside a Menu, no?",True,True,55,342611.05
callstack_____react-native-paper_____485,2018-08-30T08:08:47Z,True,callstack_____react-native-paper_____485_____213938646,Nit: write 'item' instead of \`MenuItem\`.,True,True,55,342611.05
callstack_____react-native-paper_____485,2018-08-30T08:09:39Z,True,callstack_____react-native-paper_____485_____213938869,"Can you explain where does ""8 * 6 + 40"" come from? Possibly define a `marginWidth` const so that it's clear where does '8' come from.",True,True,55,342611.05
YilianSource_____brackeys-bot_____51,2018-08-30T08:15:21Z,True,YilianSource_____brackeys-bot_____51_____417231241,NEVER UPDATE TO A BETA VERSION WHEN IT'S USED FOR A PUBLISHED SYSTEM,True,True,11,8313.183333333332
callstack_____react-native-paper_____485,2018-08-30T08:34:55Z,True,callstack_____react-native-paper_____485_____213946356,"Please define `const disabledColor` instead, and use it with the `?:` operator to define const `titleColor` and `iconColor`.",True,True,55,342611.05
YilianSource_____brackeys-bot_____51,2018-08-30T09:19:04Z,True,YilianSource_____brackeys-bot_____51_____417250612,"Well, if something breaks we could always just revert. Anyhow, it was necessary because of a bug that screwed up the template enforcement that was patched in a beta.

> On 30 Aug 2018, at 10:15, Job Rapati <notifications@github.com> wrote:
> 
> NEVER UPDATE TO A BETA VERSION WHEN IT'S USED FOR A PUBLISHED SYSTEM
> 
> —
> You are receiving this because you authored the thread.
> Reply to this email directly, view it on GitHub, or mute the thread.
",True,True,11,8313.183333333332
YilianSource_____brackeys-bot_____51,2018-08-30T09:23:22Z,True,YilianSource_____brackeys-bot_____51_____417252017,"Not a good reason to upgrade to a beta, it's real simple.
Does it have a bug fix we need? Yes
Is it ready for production projects? No
Should we use it then? NO 

There's a reason it's a beta",True,True,11,8313.183333333332
YilianSource_____brackeys-bot_____51,2018-08-30T11:01:53Z,True,YilianSource_____brackeys-bot_____51_____417279650,"Just because it's a beta doesn't mean it's unstable.
As I said, we could revert.
The whole point of nightlies and betas is to download them if something's bugging you... Do you really expect Discord.NET from **September 2017** to work flawlessly with Discord right now? I don't think so.

If a bot is designed to do a task, (job template enforcement is one of the main ones), and it can't do it, it's useless.",True,True,11,8313.183333333332
YilianSource_____brackeys-bot_____51,2018-08-30T11:06:13Z,True,YilianSource_____brackeys-bot_____51_____417280783,"Alright so you need to get out of that mindset cause you will never find a job with people that will allow beta's to run in production.

Does beta mean it's unstable? No
Is it worth the risk in a production environment? No
A production environment should be reliable and sadly beta's are not. You can't rely on the stability of a bit cause then it wouldn't be a beta.",True,True,11,8313.183333333332
YilianSource_____brackeys-bot_____51,2018-08-30T11:29:48Z,True,YilianSource_____brackeys-bot_____51_____417286580,"Yeah. I understand and I see where you're coming from, but just... please. Trust me on this one. This one time. If something breaks, you can put all the blame on me and I will revert the project to a stable version from September 2017.",True,True,11,8313.183333333332
YilianSource_____brackeys-bot_____51,2018-08-30T11:31:13Z,True,YilianSource_____brackeys-bot_____51_____417286923,"I'm not expecting anything to break. I'm not going to put the blame on you cause I could have simply not pulled the latest version of the bot.

I'm simply trying to make you understand you should never have beta versions on a production environment",True,True,11,8313.183333333332
YilianSource_____brackeys-bot_____51,2018-08-30T11:32:55Z,True,YilianSource_____brackeys-bot_____51_____417287349,Yes. I understand.,True,True,11,8313.183333333332
YilianSource_____brackeys-bot_____51,2018-08-30T11:36:35Z,True,YilianSource_____brackeys-bot_____51_____417288218,"I agree with @Duxez but this isn't a really big problem if we run a beta in production. This is a pretty small bot.

We'll leave it be until further discussion. I don't think it's a big problem if it only affects the job channels. Closing for now. If you want to continue the discussion open another issue instead of having a conversation in a merged PR.",True,True,11,8313.183333333332
xbmc_____repo-plugins_____2021,2018-08-31T02:08:18Z,True,xbmc_____repo-plugins_____2021_____212256396,"### Description
Stream full unlocked episodes from cartoonnetwork.com
<!--- Provide a short summary of submitted add-on in case it's a new addition. -->
<!--- If it's plugin update only highlight biggest changes if needed. -->
<!--- Make sure you follow the checklist below before finalizing your pull-request. -->
### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply like this: [X] -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My code follows the [add-on rules](http://kodi.wiki/view/Add-on_rules) and [piracy stance](http://kodi.wiki/view/Official:Forum_rules#Piracy_Policy) of this project. 
- [x] I have read the [CONTRIBUTING](https://github.com/xbmc/repo-plugins/blob/master/CONTRIBUTING.md) document
- [x] Each add-on submission should be a single commit with using the following style: [plugin.video.foo] v1.0.0

Additional information :
- Submitting your add-on to this specific branch makes it available to any Kodi version equal or higher than the branch name with the applicable Kodi dependencies limits.
- [add-on development](http://kodi.wiki/view/Add-on_development) wiki page.
- Kodi [pydocs](http://kodi.wiki/view/PyDocs) provide information about the Python API
- [PEP8](https://www.python.org/dev/peps/pep-0008/) codingstyle which is considered best practice but not mandatory.
- This add-on repository has automated code guideline check which could help you improve your coding. You can find the results of these check at [Codacy](https://www.codacy.com/app/Kodi/repo-plugins/dashboard). You can create your own account as well to continuously monitor your python coding before submitting to repo.
- Development questions can be asked in the [add-on development](http://forum.kodi.tv/forumdisplay.php?fid=26) section on the Kodi forum.
",True,True,5,871.9833333333333
xbmc_____repo-plugins_____2021,2018-08-31T02:10:04Z,True,xbmc_____repo-plugins_____2021_____417527624,"## Travis tests have failed
Hey @jsergio123, 
please read the following log in order to understand the failure reason. There might also be some helpful tips along the way. 
It'll be awesome if you fix what's wrong and commit the changes.

### 1st Build
<details>
  <summary>
    <strong>
     Expand here
    </strong>
  </summary>

```
INFO: Checking add-on plugin.video.cartoon_network
INFO: Created by jsergio
INFO: Addon id matches folder name
INFO: Valid XML file found
INFO: This is a new addon
INFO: Image icon exists
ERROR: Icon.png should be solid. It has transparency.
INFO: Icon dimensions are fine 512x512
INFO: Image fanart exists
INFO: Fanart dimensions are fine 1920x1080
ERROR: We found 1 problems and 0 warnings, please check the logfile.
```
</details>
<br />
",True,True,5,871.9833333333333
xbmc_____repo-plugins_____2022,2018-08-31T02:14:43Z,True,xbmc_____repo-plugins_____2022_____212257073,"### Description
Stream full unlocked episodes from adultswim.com
Features include full metadata using the existing metahandler and multiple bitrate support
<!--- Provide a short summary of submitted add-on in case it's a new addition. -->
<!--- If it's plugin update only highlight biggest changes if needed. -->
<!--- Make sure you follow the checklist below before finalizing your pull-request. -->
### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply like this: [X] -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My code follows the [add-on rules](http://kodi.wiki/view/Add-on_rules) and [piracy stance](http://kodi.wiki/view/Official:Forum_rules#Piracy_Policy) of this project. 
- [x] I have read the [CONTRIBUTING](https://github.com/xbmc/repo-plugins/blob/master/CONTRIBUTING.md) document
- [x] Each add-on submission should be a single commit with using the following style: [plugin.video.foo] v1.0.0

Additional information :
- Submitting your add-on to this specific branch makes it available to any Kodi version equal or higher than the branch name with the applicable Kodi dependencies limits.
- [add-on development](http://kodi.wiki/view/Add-on_development) wiki page.
- Kodi [pydocs](http://kodi.wiki/view/PyDocs) provide information about the Python API
- [PEP8](https://www.python.org/dev/peps/pep-0008/) codingstyle which is considered best practice but not mandatory.
- This add-on repository has automated code guideline check which could help you improve your coding. You can find the results of these check at [Codacy](https://www.codacy.com/app/Kodi/repo-plugins/dashboard). You can create your own account as well to continuously monitor your python coding before submitting to repo.
- Development questions can be asked in the [add-on development](http://forum.kodi.tv/forumdisplay.php?fid=26) section on the Kodi forum.
",True,True,5,164.6
xbmc_____repo-plugins_____2022,2018-08-31T02:16:34Z,True,xbmc_____repo-plugins_____2022_____417528779,"## Travis tests have failed
Hey @jsergio123, 
please read the following log in order to understand the failure reason. There might also be some helpful tips along the way. 
It'll be awesome if you fix what's wrong and commit the changes.

### 1st Build
<details>
  <summary>
    <strong>
     Expand here
    </strong>
  </summary>

```
INFO: Checking add-on plugin.video.adultswim
INFO: Created by jsergio
INFO: Addon id matches folder name
INFO: Valid XML file found
Traceback (most recent call last):
  File ""/home/travis/virtualenv/python3.6.3/bin/kodi-addon-checker"", line 11, in <module>
    sys.exit(main())
  File ""/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/kodi_addon_checker/__main__.py"", line 81, in main
    report.add(check_artifact(directory, args, args.branch, all_repo_addons, args.PR))
  File ""/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/kodi_addon_checker/__main__.py"", line 47, in check_artifact
    return check_addon.start(artifact_path, branch_name, all_repo_addons, pr, config)
  File ""/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/kodi_addon_checker/check_addon.py"", line 50, in start
    check_old_addon.check_for_existing_addon(addon_report, addon_path, all_repo_addons, pr)
  File ""/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/kodi_addon_checker/check_old_addon.py"", line 23, in check_for_existing_addon
    if addon_name in repo_addons:
TypeError: argument of type 'NoneType' is not iterable
```
</details>
<br />
",True,True,5,164.6
xbmc_____repo-plugins_____2021,2018-08-31T02:19:11Z,True,xbmc_____repo-plugins_____2021_____417529268,"## Travis tests were successfully
Hey @jsergio123, 
we found no major flaws with your code. Still you might want to look at this logfile, as we usually suggest some optional improvements.

",True,True,5,871.9833333333333
xbmc_____repo-plugins_____2022,2018-08-31T02:21:23Z,True,xbmc_____repo-plugins_____2022_____417529677,"Not sure why you chose to close the original PR, but the conversation for it is here:
https://github.com/xbmc/repo-plugins/pull/2006
Any reviewers may want to have a look.",True,True,5,164.6
xbmc_____repo-plugins_____2022,2018-08-31T02:31:41Z,True,xbmc_____repo-plugins_____2022_____417531385,"@learningit I had no choice. My xbmc/repo-plugins fork was effed up and I couldn't create or push branches correctly using the windows client. At the moment my linux box is down.

Not sure if you noticed but I was noobing it up for over an hour until I just got fed up and decided to nuke the whole repository and start fresh.

It seems i may have brought to light a bug in the Travis scripts too. ",True,True,5,164.6
xbmc_____repo-plugins_____2022,2018-08-31T04:59:19Z,True,xbmc_____repo-plugins_____2022_____417551999,"## Travis tests were successfully
Hey @jsergio123, 
we found no major flaws with your code. Still you might want to look at this logfile, as we usually suggest some optional improvements.

",True,True,5,164.6
xbmc_____repo-plugins_____2021,2018-08-31T12:44:39Z,True,xbmc_____repo-plugins_____2021_____417652407,US residents only.,True,True,5,871.9833333333333
xbmc_____repo-plugins_____2021,2018-08-31T16:40:17Z,True,xbmc_____repo-plugins_____2021_____417722075,Lol now don't go pushing your own version tomorrow lol. Why not just ban me from your git? ,True,True,5,871.9833333333333
PanDAWMS/dkb/154,2018-09-04T12:14:39Z,False,5b8e78696480fd2467cde8d4,"This will be done in a separate branch and pull request, but I'll use and update this checklist.",True,False,6,51846.88333333333
ClimateImpactLab/impactlab_user/308,2018-09-04T22:53:35Z,False,5b8f0e206480fd27181a3fe3,Closing this in favor of #310,True,False,1,0.0
maceoutliner/maceoutliner/53,2018-09-05T13:23:37Z,False,5b8fda0b6480fd24aa19610e,"
[![Coverage Status](https://coveralls.io/builds/18838933/badge)](https://coveralls.io/builds/18838933)

Coverage remained the same at 100.0% when pulling **bccefdc788b53b44b17d85d14ad8703bd8e24f13 on pyup/scheduled-update-2018-09-05** into **7167db709ef623b535d792426f859475c05130fd on develop**.
",True,False,2,1401.7833333333333
maceoutliner/maceoutliner/53,2018-09-06T12:45:24Z,False,5b91229a6480fd257edf113b,Closing this in favor of #54,True,False,2,1401.7833333333333
scipy/scipy/9236,2018-09-07T15:56:02Z,False,5b92a0d96480fd24fc8eb29d,"why is renaming qhull directory necessary?

On September 7, 2018 3:16:45 PM UTC, Eric Larson <notifications@github.com> wrote:
>After spending way too much time trying to fix the errors that now crop
>up with Pytest 3.8:
>```
>can't resolve package from __spec__ or __package__, falling back on
>__name__ and __path__
>```
>I found out they are caused by an upstream Cython bug
>(https://github.com/astropy/astropy/issues/6025). So for now we should
>probably ignore these.
>You can view, comment on, or merge this pull request online at:
>
>  https://github.com/scipy/scipy/pull/9236
>
>-- Commit Summary --
>
>  * FIX: Add to ignore
>
>-- File Changes --
>
>    M pytest.ini (1)
>
>-- Patch Links --
>
>https://github.com/scipy/scipy/pull/9236.patch
>https://github.com/scipy/scipy/pull/9236.diff
",True,False,6,176.45
scipy/scipy/9236,2018-09-07T17:52:11Z,False,5b92bc006480fd24bf63d50b,"On Python2 you get:
```
E   ImportWarning: Not importing directory '/home/travis/build/scipy/scipy/build/testenv/lib/python2.7/site-packages/scipy/spatial/qhull': missing __init__.py
```",True,False,6,176.45
scipy/scipy/9236,2018-09-07T18:42:14Z,False,5b92c7bb6480fd25117e895f,I see. Not sure if it's good for Python to warn about that though ...,True,False,6,176.45
scipy/scipy/9236,2018-09-07T18:46:44Z,False,5b92c8a16480fd2b2c667d6b,"Ok, travis is green so merging.

There are some leftover references to the renamed directories e.g. in gitignore, which should still be changed.",True,False,6,176.45
scipy/scipy/9236,2018-09-07T18:47:12Z,False,5b92c8a16480fd2b2c667d6c,"> There are some leftover references to the renamed directories e.g. in gitignore, which should still be changed.

I can take care of this unless you are already on it",True,False,6,176.45
scipy/scipy/9236,2018-09-07T18:52:29Z,False,5b92ca236480fd27bddb02a2,Please go ahead. Thanks!,True,False,6,176.45
lballabio/QuantLib/524,2018-09-07T21:04:55Z,False,5b92e9286480fd282d9395f2,"Okay I just download the updated code and it seems that the problem persists.

	FdmSchemeDesc discretization = FdmSchemeDesc::Douglas();
	const Size tSteps = Steps;
	const Size xSteps = Steps;
	const Size dampingSteps = 0;
	const bool localVolFlag = true;
	double illegalVolOverride = volTS->blackVol(Evaldate, Barrier, true);

	boost::shared_ptr<PricingEngine> EnginePtr(new FdBlackScholesBarrierEngine(process, tSteps, xSteps, dampingSteps, discretization, localVolFlag, illegalVolOverride));",True,False,14,26282.15
HippieStation/HippieStation/9033,2018-09-09T18:42:36Z,False,5b956ac96480fd27181ce877,"I like more improvised stuff, but that sprite is a pile of garbage. It doesn't look improvised at all!

In fact it's literally just the sec jetpack but with a white strip added at the top.",True,False,1,0.0
lballabio/QuantLib/524,2018-09-10T09:06:23Z,False,5b9635426480fd25de63415f,"The fix was applied to the `AnalyticBarrierEngine` class.  I'm afraid FD engines can't be fixed, since they require a single time grid for the model and thus can't account for different mappings from date to times.",True,False,14,26282.15
tonerdo/coverlet/191,2018-09-10T19:43:14Z,False,5b96ca866480fd2aac50c56d,"# [Codecov](https://codecov.io/gh/tonerdo/coverlet/pull/191?src=pr&el=h1) Report
> Merging [#191](https://codecov.io/gh/tonerdo/coverlet/pull/191?src=pr&el=desc) into [master](https://codecov.io/gh/tonerdo/coverlet/commit/fece36a1b13cf66d40f7fda74c337e18fce2538b?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/tonerdo/coverlet/pull/191/graphs/tree.svg?width=650&token=kuFSAHLCW5&height=150&src=pr)](https://codecov.io/gh/tonerdo/coverlet/pull/191?src=pr&el=tree)

```diff
@@           Coverage Diff           @@
##           master     #191   +/-   ##
=======================================
  Coverage   95.01%   95.01%           
=======================================
  Files          15       15           
  Lines        1564     1564           
=======================================
  Hits         1486     1486           
  Misses         78       78
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/tonerdo/coverlet/pull/191?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/tonerdo/coverlet/pull/191?src=pr&el=footer). Last update [fece36a...550bd71](https://codecov.io/gh/tonerdo/coverlet/pull/191?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",True,False,4,15485.433333333332
cloudant/couch_replicator/80,2018-09-12T12:31:50Z,False,5b9908676480fd2a74350a89,stale PR,True,False,4,526626.9
google-test/signcla-probe-repo/117974,2018-09-15T18:00:01Z,False,5b9d49d16480fd2554e0ae87,indiv-pass-fork: test succeeded,True,False,1,0.0
tonerdo/coverlet/191,2018-09-15T21:13:25Z,False,5b9d774e6480fd2511834400,This should be below the `MSBuild` section,True,False,4,15485.433333333332
dirigeants_____klasa_____422,2018-09-16T09:32:39Z,True,dirigeants_____klasa_____422_____215813463,"### Description of the PR

This PR is ~~phase one of two of my proposal~~ that will change the way we write our usage strings forever, making the experience easier (in my opinion) and with less bugs too.

This PR completely nukes the concept of `usageDelim`, and instead integrates it into the `usage` string itself.

Take the following usage: `<member:member> [reason:string]`; Before this PR, you'd need to specify usageDelim as "" "", and add `[...]` at the end of reason to get it all. Not anymore.

The usage delimiter is now anything between a closed tag and a newly opened one. Yes, that means you can do `<member:member> in <time:duration>``, and you would have to type `@member in 2 days`.

*More in-depth stuff will be found in the guides I'm lazy to write :P*

### Changes Proposed in this Pull Request (List new items in CHANGELOG.MD)

- **[BREAKING]** Remove `Command#usageDelim`, `Usage#usageDelim` and `Usage#delimitedUsage`

- Others things to be added

### Semver Classification

- [ ] This PR only includes documentation or non-code changes.
- [ ] This PR fixes a bug and does not change the (intended) framework interface.
- [x] This PR adds methods or properties to the framework interface.
- [x] This PR removes or renames methods or properties in the framework interface.
",True,True,3,1805.1833333333334
dirigeants_____klasa_____422,2018-09-17T07:26:14Z,True,dirigeants_____klasa_____422_____421913419,"I've been using usage strings and delims since Komada so I'd like to voice my opinion on the refusal of this PR.

Usage delims are good but have a lot of downsides to them -
1) They are hard for a beginner to understand. It took me quite a while to understand what UsageDelims are and how they work.
2) They are unnecessary half the time. **Every single** core command in klasa uses spaces as usage-delims. And the usage strings have spaces in them. 
3) In the current system it is impossible to have multiple usage delims, which is very powerful for complex commands. It also reduces duplication from the [...] keyword.

TLDR: Not only is this new system is both user-friendly and easy to understand for noobs, but also much more powerful, reducing code duplication and adding a lot of necessary features.

I don't see why this would be called ""unnecessary"", but I want to know the logic behind that.",True,True,3,1805.1833333333334
rust-lang_____rfcs_____2544,2018-09-17T14:35:42Z,True,rust-lang_____rfcs_____2544_____216004359,"Make disambiguating generic arguments in expressions with `::` optional, allowing generic arguments to be specified without `::`. This makes the ""turbofish"" notation no longer necessary.

[Rendered](https://github.com/varkor/rfcs/blob/undisambiguated_generics/text/0000-undisambiguated-generics.md)

This makes the following valid syntax:
```rust
struct Nooper<T>(T);

impl<T> Nooper<T> {
    fn noop<U>(&self, _: U) {}
}

fn id<T>(t: T) -> T {
    t
}

fn main() {
    id<u32>(0u32); // ok
    let n = Nooper<&str>("":)""); // ok
    n.noop<()>(()); // ok
}
```

The syntax ambiguities `(a<b,c>(d))` and `a<b>>c` are resolved in favour of generic expressions.

---

This is an updated and more considered version of the RFC put forward a little while ago.
Thanks to @Centril, @comex, @joshtriplett, @kennytm, @petrochenkov, @rpjohnst, @scottmcm, @ubsan and @xfix for their feedback (and everyone else who chipped in)!

cc @aturon, @eddyb, @withoutboats",True,True,268,711818.1666666666
dirigeants_____klasa_____422,2018-09-17T15:37:50Z,True,dirigeants_____klasa_____422_____422065666,"This has been executively denied for countless reasons posted in several places, including you can do many of the end goal ideas already, without additional opinionated code (that inevitably breaks other functionality, and ironically the ability to do some of these end goal ideas).",True,True,3,1805.1833333333334
rust-lang_____rfcs_____2544,2018-09-17T16:18:28Z,True,rust-lang_____rfcs_____2544_____422078938,"However unusual a corner case, I feel very uncomfortable with making breaking parser changes for existing code.

On the other hand this change is a perfect candidate for edition switches since it can be entirely crate-local. I’d much prefer it only applied in Rust 2018 or, if it’s too late, in the following edition. The turbofish has been with us [since 2011](https://github.com/rust-lang/rust/commit/014c6922e12d4faa6a2181674d12a7f487c06bb6), before Rust 0.1. We can live with it a few more years.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-17T16:24:30Z,True,rust-lang_____rfcs_____2544_____422080887,"> However unusual a corner case, I feel very uncomfortable with making breaking parser changes for existing code.

There's precedent for doing this with https://github.com/rust-lang/rust/pull/53854.

> I’d much prefer it only applied in Rust 2018 [...]

Nominating for the next meeting to discuss this possibility.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-17T16:36:47Z,True,rust-lang_____rfcs_____2544_____422084748,"I have not tried reading that diff, but the title of that PR says “edition changes”. So… is that an agreement with my comment?",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-17T16:37:56Z,True,rust-lang_____rfcs_____2544_____422085152,@SimonSapin no; the precedent was for applying the grammar changes in Rust 2015.,True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-17T16:43:19Z,True,rust-lang_____rfcs_____2544_____422087071,I was not involved in that discussion but my opinion is the same. I think this is a bad precedent.,True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-17T20:55:16Z,True,rust-lang_____rfcs_____2544_____218224263,"This is not a language argument, but you are underestimating the work required to do this correctly.
On encountering `<` parser needs to enter some kind of new speculative mode suppressing all side effects, including non-fatal diagnostics.
We can ignore these details if the rollback is done only as a part of best-effort error recovery, but not if it's a part of the language, so the feature has some global effect on parser implementation rather than just calling `self.clone()` in one place.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-17T21:18:48Z,True,rust-lang_____rfcs_____2544_____218231342,"Additionally, parser can accept pretty strange things and then report ""semantic"" errors later, but we won't be aware of these errors when disambiguating with backtracking.
This problem already exists in the formulation ""what exactly is accepted under `cfg(false)`?"", but in that case it's probably easier to fix e.g. by doing AST validation during expansion.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-17T21:28:28Z,True,rust-lang_____rfcs_____2544_____422177966,"> However unusual a corner case, I feel very uncomfortable with making breaking parser changes for existing code.

I thought it might be helpful to weigh in with my experience at TC39, which spends a lot of effort on retaining compatibility but nevertheless does sometimes make technically breaking changes. It's true that the bar is high for breaking changes, which is why it's good to get empirical evidence about real-world breakage. But at the end of the day, we've found with JavaScript that -- if we are cautious and use good judgment -- there is some budget for _de jure_ incompatible changes that are _de facto_ compatible. To me, the fact that even something as high-usage and conservative about backwards compatibility as JavaScript is able to make changes like this suggests that Rust can as well.

My feeling is that if the language and ecosystem are better off for it, and it doesn't cause churn in practice, Rust should be willing to make formally breaking changes like this. (And given my personal experience both with teaching Rust to newcomers at work and designing APIs to try to avoid turbofish, I personally hope we do!)",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-17T21:35:47Z,True,rust-lang_____rfcs_____2544_____422179860,"> And given my personal experience both with teaching Rust to newcomers at work and designing APIs to try to avoid turbofish, I personally hope we do!

I would be interested in hearing (possibly off thread to avoid spamming) about what you've found the largest problems for newcomers when it comes to turbofish. I can think of a few:

- discoverability
- ""weird"" syntax
- understanding of the semantics

Also, I am interested in hearing what the main reason(s) for avoiding the need of turbofish in your API surfaces are that would be rendered moot by changing the syntax.

I am personally of the inclination that `rustc` should actually accept a superset of valid Rust code for more specific diagnostic errors, which would make merging @varkor's change almost as-is to inform the suggestions emitted something I would enthusiastically push for as it would help with the three items listed above, while changing the parsing semantics away from a regular syntax by accepting now-incorrect code a bit worry-some as it would put a higher burden on third-party implementers. (I understand the low likelihood of anyone actually trying to make an independent Rust compiler that matches nightly or even current stable `rustc`, but still.)",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-17T21:38:28Z,True,rust-lang_____rfcs_____2544_____422180550,"@dherman Fair points, but I think that the equation is significantly affected by Rust having this edition mechanism that JavaScript doesn’t.

We’re doing opt-in switches already, let’s use them for what they’re for.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-17T22:05:39Z,True,rust-lang_____rfcs_____2544_____218243076,"I noticed this was necessary with https://github.com/rust-lang/rust/pull/53578/commits/307ea60b893e62ed4bd88da7b7035bc29be73ffd, though I imagined this wasn't sufficient for a final implementation. The language in the RFC wasn't intended to insinuate how difficult the task would be: the proof of concept is definitely only that!",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-17T22:25:32Z,True,rust-lang_____rfcs_____2544_____422191951,"On the question of teaching, we also ought to consider the affect of type ascription. If we had type ascription but not this, we could teach and use the language entirely without turbofish, without worrying about compatibility or edition switches or weird syntax or backtracking.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-17T22:34:10Z,True,rust-lang_____rfcs_____2544_____422193876,"@estebank I would say discoverability, guessability, and -- maybe the biggest issue to me -- every one-more-thing you have to explain risks being the one thing that blows a newcomer's cognitive budget. Don't get me wrong, overall I've been pleasantly surprised at how quickly my colleagues have gone from zero to productive users of Rust. But there are still so many little surprises in the onboarding experience, that it's easy for a learner to just blow their stack and give up. (I think I'm just basically giving an exegesis for why I'm so excited about all the effort Rust is putting into ergonomics, at least the learning side of it.)

@SimonSapin My only point about JavaScript was that it shows us that it does in fact work in practice, at scale, to make _de facto_ compatible changes. JavaScript of course does not tell us what we _should_ do. From my perspective, doing it with language editions means we wait several years longer to solve a pain point simply because we have a mechanism that lets us do so, but that's obviously biased by my experiences I mentioned. Can you help me understand the rationale for why you wouldn't want to make the change now? Are you concerned about de facto risks that we haven't actually uncovered in our empirical investigations? Or is it an aesthetic about clarity of policy?",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-18T01:43:54Z,True,rust-lang_____rfcs_____2544_____422225569,"> If we had type ascription but not this, we could teach and use the language entirely without turbofish

I think this overlooks the effect of const generics as well as the instances where specifying generic arguments is more ergonomic than using type ascription (both mentioned in the RFC). Type ascription *helps*, but I don't think it solves the problem.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-18T02:26:10Z,True,rust-lang_____rfcs_____2544_____422232454,"There are two issues with turbofish:

Discoverability. This can be solved very well by best-effort error-reporting and recovery as @estebank already mentioned in https://github.com/rust-lang/rfcs/pull/2544#issuecomment-422179860.

Noisiness. Turbofish is objectively rare due to type inference mostly working automatically, even rarer with type ascription. I agree that avoiding `::` would be nice, but this minor nicety is not even close for being sufficient motivation for changing fundamental properties of the grammar.
Why do you think it was introduced in the first place and wasn't removed since then?
What fundamental changes happened recently so that the original decision to keep the grammar simple needs to be revised?",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-18T03:30:19Z,True,rust-lang_____rfcs_____2544_____422242606,"Turbofish comes up regularly in specific cases, such as `collect` and `parse`.

And part of the problem is the lack of parallel to generic syntax elsewhere.

I'd love to see this change, if viable.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-18T03:35:13Z,True,rust-lang_____rfcs_____2544_____422243429,"I've never really been bothered by turbofish itself. Rather, it annoys me that i need to edit the middle of an expression. I think the recent type ascription RFC assuages my annoyance.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-18T03:40:24Z,True,rust-lang_____rfcs_____2544_____422244320,"To me, being able to write `foo<u8>` instead of `foo::<u8>` is fundamentally about language uniformity.
It is *inconsistent* that you have to write `foo::<u8>` when you don't have to write `Vec::<u8>`.
Inconsistencies make languages more complex by forcing people to learn more things instead of being able to apply a rule they learned in one place everywhere. We should to the extent possible (and where there are expected semantics) *try* to remove inconsistencies from the language and have a holistic view of language design that does not just take a look at the feature itself but the language as a whole.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-18T03:49:01Z,True,rust-lang_____rfcs_____2544_____422245714,"Yes, but in this case we are making one part consistent at the expense of adding a (very weird) special case to the parser, which doesn't seem much better.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-18T03:52:53Z,True,rust-lang_____rfcs_____2544_____422246423,"@mark-i-m well yeah; we are trading more consistency in one place for less consistency in another.
However, crater did find zero regressions, which entails that in practice, one inconsistency is a practical problem (turbofish) and one is not (the thing we have to break). From a user's perspective this seems like a net win in terms of consistency.

However, we do have to consider the main drawback that Rust is not LL(k) anymore due to backtracking.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-18T03:58:13Z,True,rust-lang_____rfcs_____2544_____422247331,"> However, we do have to consider the main drawback that Rust is not LL(k) anymore due to backtracking.

This to me is the more painful issue. True, it's not directly user facing, but it means that IDE support and compiler maintainability become harder. That's seems like more painful baggage IMHO.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-18T04:21:25Z,True,rust-lang_____rfcs_____2544_____422250552,"@mark-i-m IMO LL and LR have overstayed their welcome by at least a decade, and if your parser is hand-written recursive descent, it's easy to add features that make it not LL (or worse, not CFG).
Also, full CFG parsing with recorded ambiguities allows richer/more sophisticated error reporting/recovery, and e.g. GLL can be more efficient at this than backtracking.

We (@lykenware) are building a GLL parser generator framework, with `rustc` and relating tooling in mind - which would be using a single official Rust context-free grammar¹, annotated in such a way to allow generating APIs for parse trees/ASTs across multiple languages.
Additionally, we believe that this will enable incremental parsing (ideal for IDEs) with a one-time implementation cost (once the framework supports it, all grammars do).

**EDIT**: to be clear, I'm not advocating we should add this feature *now*, IMO we should future-proof the Rust 2018 edition with all the ideas we *might want* to implement in the future.
I'd personally be fine with blocking actually allowing `foo<T>` on a transition to something like GLL.

<hr/>

¹ *a Rust CFG is an approximation of the real grammar, as (at least) raw strings are  [(mildly) context-sensitive](https://en.wikipedia.org/wiki/Mildly_context-sensitive_grammar_formalism)*",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-18T11:35:09Z,True,rust-lang_____rfcs_____2544_____422358610,"> Yes, but in this case we are making one part consistent at the expense of adding a (very weird) special case to the parser, which doesn't seem much better.

Arguably, the original addition of `::` was adding a weird special case to the parser. I don't think removing it is ""adding a special case"" any more than most other syntax changes.

> True, it's not directly user facing, but it means that IDE support and compiler maintainability become harder.

I don't think this is true. The grammar of a language is only indirectly related to the complexity of the parser implementing it. Adding support for this is trivial in most common parsers as far as I can tell: the concern about more expressive grammars is their theoretical efficiency, not how difficult they are to implement in practice (which has already been demonstrated not to be an issue).",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-18T11:48:27Z,True,rust-lang_____rfcs_____2544_____422361782,"> If we had type ascription but not this, we could teach and use the language entirely without turbofish

Not always. See for example `std::mem::size_of::<T>()`, `Any::is::<T>()`, etc.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-18T12:19:17Z,True,rust-lang_____rfcs_____2544_____422369583,"@SimonSapin One would argue in such cases we should be writing types in the argument list, instead of in a separate list, e.g. `size_of(T)` and `.is(T)`.
Sadly, that shit has *somewhat* sailed, but it is how I'd like some calls to be.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-18T15:25:04Z,True,rust-lang_____rfcs_____2544_____422438772,"> However, crater did find zero regressions, which entails that in practice, one inconsistency is a practical problem (turbofish) and one is not (the thing we have to break). From a user's perspective this seems like a net win in terms of consistency.

@Centril It just occurred to me that a crater run only gives us half the view into the effects of this grammar change. The other half would be to automatically change every public facing codebase from `::<>` to `<>` and rerun the test. We have validated that we _could_ make the change with little disruption to existing public codebases, we haven't validated that everyone could actually _use_ the new grammar.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-18T15:33:59Z,True,rust-lang_____rfcs_____2544_____422442155,"@eddyb 

> Sadly, that ship has somewhat sailed, but it is how I'd like some calls to be.

Oh yes please; Let it not be too late =P

@estebank good point; we should try that if possible :)",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-18T15:39:18Z,True,rust-lang_____rfcs_____2544_____422444150,"> It just occurred to me that a crater run only gives us half the view into the effects of this grammar change. The other half would be to automatically change every public facing codebase from ::<> to <> and rerun the test.

The code paths [are almost identical](https://github.com/rust-lang/rust/pull/53578/files#diff-da9d34ca1d0f6beee2838cf02e07345c) for `::<>` and `<>` in the Crater PR. If syntax parses with `::<>`, it should also do so with `<>`.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-18T17:33:03Z,True,rust-lang_____rfcs_____2544_____422481158,"One can emulate passing the type by passing a PhantomData parameter.

Here is how one can emulate passing a type as a parameter if it cannot be inferred:

```

use std::marker::PhantomData;
use std::mem;

trait TypeConstant{
    const TYPE:PhantomData<Self>=PhantomData;
}

impl<This:?Sized> TypeConstant for This{}


fn size_of<T>(_:PhantomData<T>)->usize{
    mem::size_of::<T>()
}


fn main(){
    println!(""size of usize is {}"",size_of( usize::TYPE ))
}

```

This does not change whether the turbofish is necessary for generic types like eg:Vec<T>,
because to get its size one needs to type `size_of(Vec::<()>::TYPE)`.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-18T18:08:21Z,True,rust-lang_____rfcs_____2544_____422492640,">> If we had type ascription but not this, we could teach and use the language entirely without turbofish
>
> Not always. See for example `std::mem::size_of::<T>()`, `Any::is::<T>()`, etc.

I'm missing something. Wouldn't this RFC allow writing `std::mem::size_of::<T>()` as `std::mem::size_of<T>()`?",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-18T18:20:33Z,True,rust-lang_____rfcs_____2544_____422496524,"> > > If we had type ascription but not this, we could teach and use the language entirely without turbofish
> > 
> > 
> > Not always. See for example `std::mem::size_of::<T>()`, `Any::is::<T>()`, etc.
> 
> I'm missing something. Wouldn't this RFC allow writing `std::mem::size_of::<T>()` as `std::mem::size_of<T>()`?

I think what they mean is that if Rust had chosen not to allow specifying generic parameters when calling a function but instead only had type ascription.
That means that you could not write `::std::mem::size_of::<T>()` and would have to use a different syntax,
for example:the one I wrote in my previous comment or by passing generic parameters in the regular parameter list as in `::std::mem::size_of(T)`.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-18T18:44:50Z,True,rust-lang_____rfcs_____2544_____422504303,"One can also ascribe the type of `size_of`, though that's probably worse than turbofish.

Haskell, which has no turbofish equivalent but does have type ascription, seems to do either that or pass in a dummy value that can be annotated.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-18T18:51:56Z,True,rust-lang_____rfcs_____2544_____422506477,"> One can also ascribe the type of `size_of`, though that's probably worse than turbofish.

How would you ascribe the type of `mem::size_of`?
",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-18T19:14:55Z,True,rust-lang_____rfcs_____2544_____422514013,"@rpjohnst 

> Haskell, which has no turbofish equivalent but does have type ascription, [...]

Haskell, has type application, which is what turbofish is, with [`{-# LANGUAGE TypeApplications #-}`](https://kseo.github.io/posts/2017-01-08-visible-type-application-ghc8.html):

```haskell
main :: IO ()
main = do
    quickCheck $ uncurry (==) . (sort @Int &&& msort)
```

This applies `Int` to [`sort :: forall a. Ord a => [a] -> [a]`](http://hackage.haskell.org/package/base-4.11.1.0/docs/Data-List.html#v:sort) such that `sort @Int :: [Int] -> [Int]`.

> [...] seems to do either that or pass in a dummy value that can be annotated.

See [`Data.Proxy`](http://hackage.haskell.org/package/base-4.11.1.0/docs/Data-Proxy.html) which is the equivalent of `PhantomData`.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-19T03:06:50Z,True,rust-lang_____rfcs_____2544_____422634095,"Just my personal opinion, but when I started learning Rust, I was actually quite happy to know that the turbofish was a thing, because it seemed like a good solution for the problem that C++ has regarding the same topic, which I personally found really cumbersome to deal with. It also makes the language simpler as a whole, because the parser is a lot easier to write with the turbofish syntax.

Essentially, I don't see a reason to remove the turbofish syntax, even with the provided arguments in the RFC. I'm also afraid that by finding a way to remove it, it might cause future problems if by some reason we come up with another feature of the language and it happens to conflict with the removed turbofish syntax. Maybe if we have a stronger motivation to remove it, like it will absolutely bring an improvement in the language or something. But removing for the current motivations just seems too weak, and just because we can, I'd rather not go down that risky rabbit hole and end up regretting removing turbofish from the language.

PS:

I'm not happy with Turbofish either, but between turbofish and the proposed alternative, I prefer turbofish. HOWEVER, if I could change how Rust worked, this is how I'd make type inference work:

Functions would be able to have two parameter lists: one for compile time arg (types and const generics), and one for runtime args. So it would look something like this

```
fn foo(T)(bar: i32) {}
```

Calling it with explicit types would look like `foo(&str)(5);` You could also ""partially call it"" like so: `let baz = foo(T)`. That would return a monomorphised function that could be called like `baz(10)`. The first parameter list would also be optional, so if T could be inferred, then you could call `foo(7)` and it would infer the types too. It's very inspired by Scala, really, and doesn't require the <> tokens to signify compile time arguments.

But oh well, I can't really go back in time to suggest that :P",True,True,268,711818.1666666666
owncloud/core/32762,2018-09-19T10:14:07Z,False,5ba221986480fd24e7247c09,"# [Codecov](https://codecov.io/gh/owncloud/core/pull/32762?src=pr&el=h1) Report
> Merging [#32762](https://codecov.io/gh/owncloud/core/pull/32762?src=pr&el=desc) into [stable10](https://codecov.io/gh/owncloud/core/commit/5f45094177156052aa831408a8bac92dd7af1b87?src=pr&el=desc) will **decrease** coverage by `9.76%`.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/owncloud/core/pull/32762/graphs/tree.svg?width=650&token=bvPvzqol8M&height=150&src=pr)](https://codecov.io/gh/owncloud/core/pull/32762?src=pr&el=tree)

```diff
@@              Coverage Diff               @@
##             stable10   #32762      +/-   ##
==============================================
- Coverage       62.92%   53.16%   -9.77%     
==============================================
  Files            1235       62    -1173     
  Lines           73914     7245   -66669     
  Branches         1282     1282              
==============================================
- Hits            46514     3852   -42662     
+ Misses          27020     3013   -24007     
  Partials          380      380
```

| Flag | Coverage Δ | Complexity Δ | |
|---|---|---|---|
| #javascript | `53.16% <ø> (ø)` | `0 <ø> (ø)` | :arrow_down: |
| #phpunit | `?` | `?` | |

| [Impacted Files](https://codecov.io/gh/owncloud/core/pull/32762?src=pr&el=tree) | Coverage Δ | Complexity Δ | |
|---|---|---|---|
| [apps/updatenotification/templates/admin.php](https://codecov.io/gh/owncloud/core/pull/32762/diff?src=pr&el=tree#diff-YXBwcy91cGRhdGVub3RpZmljYXRpb24vdGVtcGxhdGVzL2FkbWluLnBocA==) | | | |
| [lib/private/Encryption/Keys/Storage.php](https://codecov.io/gh/owncloud/core/pull/32762/diff?src=pr&el=tree#diff-bGliL3ByaXZhdGUvRW5jcnlwdGlvbi9LZXlzL1N0b3JhZ2UucGhw) | | | |
| [lib/private/App/CodeChecker/NodeVisitor.php](https://codecov.io/gh/owncloud/core/pull/32762/diff?src=pr&el=tree#diff-bGliL3ByaXZhdGUvQXBwL0NvZGVDaGVja2VyL05vZGVWaXNpdG9yLnBocA==) | | | |
| [lib/private/RedisFactory.php](https://codecov.io/gh/owncloud/core/pull/32762/diff?src=pr&el=tree#diff-bGliL3ByaXZhdGUvUmVkaXNGYWN0b3J5LnBocA==) | | | |
| [apps/dav/lib/Avatars/AvatarNode.php](https://codecov.io/gh/owncloud/core/pull/32762/diff?src=pr&el=tree#diff-YXBwcy9kYXYvbGliL0F2YXRhcnMvQXZhdGFyTm9kZS5waHA=) | | | |
| [apps/dav/lib/Connector/Sabre/FakeLockerPlugin.php](https://codecov.io/gh/owncloud/core/pull/32762/diff?src=pr&el=tree#diff-YXBwcy9kYXYvbGliL0Nvbm5lY3Rvci9TYWJyZS9GYWtlTG9ja2VyUGx1Z2luLnBocA==) | | | |
| [...s/dav/appinfo/Migrations/Version20170202213905.php](https://codecov.io/gh/owncloud/core/pull/32762/diff?src=pr&el=tree#diff-YXBwcy9kYXYvYXBwaW5mby9NaWdyYXRpb25zL1ZlcnNpb24yMDE3MDIwMjIxMzkwNS5waHA=) | | | |
| [apps/dav/lib/Upload/ChunkLocationProvider.php](https://codecov.io/gh/owncloud/core/pull/32762/diff?src=pr&el=tree#diff-YXBwcy9kYXYvbGliL1VwbG9hZC9DaHVua0xvY2F0aW9uUHJvdmlkZXIucGhw) | | | |
| [apps/files/lib/AppInfo/Application.php](https://codecov.io/gh/owncloud/core/pull/32762/diff?src=pr&el=tree#diff-YXBwcy9maWxlcy9saWIvQXBwSW5mby9BcHBsaWNhdGlvbi5waHA=) | | | |
| [apps/systemtags/list.php](https://codecov.io/gh/owncloud/core/pull/32762/diff?src=pr&el=tree#diff-YXBwcy9zeXN0ZW10YWdzL2xpc3QucGhw) | | | |
| ... and [1163 more](https://codecov.io/gh/owncloud/core/pull/32762/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/owncloud/core/pull/32762?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/owncloud/core/pull/32762?src=pr&el=footer). Last update [5f45094...812db0c](https://codecov.io/gh/owncloud/core/pull/32762?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",True,False,2,87.05
rust-lang_____rfcs_____2544,2018-09-19T11:36:01Z,True,rust-lang_____rfcs_____2544_____422767535,"@Ixrec I was responding to a comment that suggested that *even without* this RFC, type ascription would be enough to make the turbofish unnecessary. It would still be necessary in some cases.

@rpjohnst No, type ascription does not help with `size_of`. There is no value parameter, so the only expression to ascribe is the return value which is always `usize`. The turbofish is the only way to specify the type parameter.",True,True,268,711818.1666666666
owncloud/core/32762,2018-09-19T11:41:10Z,False,5ba2370d6480fd2a743925cb,CI is not happening here. See PR #32765 ,True,False,2,87.05
rust-lang_____rfcs_____2544,2018-09-19T16:01:54Z,True,rust-lang_____rfcs_____2544_____422859755,"I would like to be a voice against this change, mainly for four reasons:

1. I don't find the turbofish inconsistent, counter-intuitive, annoying or somehow against the mental model. I even think that it supports the idea of monomorphisation being the principle behind generic functions. If you think of a generic function being a module that includes a function for each possible type named after this type, the syntax is exactly as it should be. E.g. if you look at `collect::<i32>`, `collect` would be a module of functions doing the same job (namely collecting items) and `<i32>` would be the actual function that does the job for my type. The only difference is that the module is somehow auto-implemented by the compiler in a generic fashion and the name includes these `<>` which indicate that we indeed talk about an ""auto-implemented generic function"".

2. The main reason _for_ this change is, as I understand, making thinks easier for learners coming from other languages like C++ who are used to the proposed syntax. I think that reason is not applicable for any learner: Two years ago I've attended two lectures at my university at the same time. The first one was an introduction into Rust, the second one was an introduction into C++. I was a programmer before (Java, C, some others) but I found Rust being way more cleaner and intuitive than C++ with all its corner cases. And I especially include the turbofish here, since it made me think of a very important difference between C++/Rust and Java, the difference between monomorphisation and dynamic bindings.

3. The RFC includes a long list of reasons _against_ this change and -- even if they do not apply in practice -- I see absolutely no reason to go this way. Especially, I do not see a reason to add yet another syntax for a feature that is working totally fine. This holds even more to me, because the syntax will add a new ambiguity. I try to avoid a lot of languages just because of these ambiguities since they encourage people to use different dialects that others won't fully understand. I think, at best there should be a bijective mapping from the semantics to the syntax in order to make things easy. (That is the reason why I think that migrating from `...` to `..=`  and adding `impl Trait` in argument position was wrong, but these discussions are over...)

4. There are Rust programmers -- like me -- that are used to the current syntax. I don't want to ""learn"" a new one. In that sense I believe, we should think more of those who are used to Rust (ourselves) and less of those who might migrate to Rust (others).",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-19T16:03:54Z,True,rust-lang_____rfcs_____2544_____422860439,"IMO turbofish is not that big of a hurdle of learnability.

I agree with @petrochenkov that the problem is solved satisfiably with an informative error, and it's much easier to teach the turbo fish than it is ""you can't use this specifc combination of tokens because of reasons"".

The bottom line is that annoying as turbofish, is that it's almost irresponsible to introduce and ambiguity and break compatibility in order to solve an annoyance.

@ivandardi it's probably possible to introduce function monomorphisation with current syntax, no?",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-19T16:07:21Z,True,rust-lang_____rfcs_____2544_____422861730,"No idea. I'm not too well versed in the specifics of the syntax to know for
sure, but if someone wants to experiment with it just for the sake of
experimenting, go ahead! 😛

On Wed, Sep 19, 2018, 13:04 Gilad Naaman <notifications@github.com> wrote:

> IMO turbofish is not that big of a hurdle of learnability.
>
> I agree with @petrochenkov <https://github.com/petrochenkov> that the
> problem is solved satisfiably with an informative error, and it's much
> easier to teach the turbo fish than it is ""you can't use this specifc
> combination of tokens because of reasons"".
>
> The bottom line is that annoying as turbofish, is that it's almost
> irresponsible to introduce and ambiguity and break compatibility in order
> to solve an annoyance.
>
> @ivandardi <https://github.com/ivandardi> it's probably possible to
> introduce function monomorphisation with current syntax, no?
>
> —
> You are receiving this because you were mentioned.
> Reply to this email directly, view it on GitHub
> <https://github.com/rust-lang/rfcs/pull/2544#issuecomment-422860439>, or mute
> the thread
> <https://github.com/notifications/unsubscribe-auth/AIA8OvEdaErBfvLX7rruJKqH4-EmbPHxks5ucmsDgaJpZM4WsDpq>
> .
>
",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-19T16:13:55Z,True,rust-lang_____rfcs_____2544_____422864037,"This isn't being proposed to make the language more like other languages.

Rather, it makes the language more consistent. You define a generic function with a type parameter as `funcname<T>`, and you provide that type parameter with `funcname<T>`.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-19T16:14:46Z,True,rust-lang_____rfcs_____2544_____422864310,"As for migration, this is something that `cargo fix` could *trivially* handle.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-19T16:20:46Z,True,rust-lang_____rfcs_____2544_____422866357,"The thing that worries me isn't migrating old code. It's future proofing
future code that worries me. Can people be absolutely sure that removing
turbofish in favour of this new proposed syntax won't make it so that Rust
in the future have to create workarounds, just like C++ has with it's
horrible `foo.template get<Bar>()` syntax?

On Wed, Sep 19, 2018, 13:15 Josh Triplett <notifications@github.com> wrote:

> As for migration, this is something that cargo fix could *trivially*
> handle.
>
> —
> You are receiving this because you were mentioned.
> Reply to this email directly, view it on GitHub
> <https://github.com/rust-lang/rfcs/pull/2544#issuecomment-422864310>, or mute
> the thread
> <https://github.com/notifications/unsubscribe-auth/AIA8OqO2wFzDAFx6ncLRRQFsfPbJgvtiks5ucm2HgaJpZM4WsDpq>
> .
>
",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-19T16:22:00Z,True,rust-lang_____rfcs_____2544_____422866805,I think that favorable Crater results or `cargo fix` support should not be sufficient to justify breaking changes within an edition.,True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-19T16:26:29Z,True,rust-lang_____rfcs_____2544_____422868318,">Rather, it makes the language more consistent. You define a generic function with a type parameter as funcname<T>, and you provide that type parameter with funcname<T>.

That is indeed a good reason but I could argue that we should better change the behavior there because usually defining a function happens less often than using it.

> As for migration, this is something that `cargo fix` could _trivially_ handle.

That is true for my code base and possibly for most of the others. But as long as I use projects that have not yet migrated I need to learn both syntaxes to understand their code.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-19T16:32:12Z,True,rust-lang_____rfcs_____2544_____422870237,"There, I found the page that I was looking for.

https://en.cppreference.com/w/cpp/language/dependent_name

Especially in the bottom-most part of the page. Will we eventually have to deal with that? If yes, how? Are there are future-proofing plans to prevent that from happening? If yes, which ones?",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-19T16:38:39Z,True,rust-lang_____rfcs_____2544_____422872297,"> I'm not happy with Turbofish either, but between turbofish and the proposed alternative, I prefer turbofish. HOWEVER, if I could change how Rust worked, this is how I'd make type inference work:
>
> Functions would be able to have two parameter lists: one for compile time arg (types and const generics), and one for runtime args. So it would look something like this
>
> `fn foo(T)(bar: i32) {}`

The problem with that syntax is a function returning a closure. If you call both at once you end up with `foo(function_arg)(closure_arg)`.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-19T16:42:18Z,True,rust-lang_____rfcs_____2544_____422873558,"@teiesti Yeah, I know, it's not something I put much thought on, it was just a rushed idea. If I were to think about that seriously I'd address those issues more seriously. Who knows, maybe on the future?",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-19T17:21:12Z,True,rust-lang_____rfcs_____2544_____422887256,"On Wed, Sep 19, 2018 at 09:32:31AM -0700, Ivan Borgia Dardi wrote:
> There, I found the page that I was looking for.
> 
> https://en.cppreference.com/w/cpp/language/dependent_name
> 
> Especially in the bottom-most part of the page. Will we eventually have to deal with that? If yes, how? Are there are future-proofing plans to prevent that from happening? If yes, which ones?

Are you referring to the bits about disambiguating things so they don't
parse as the less-than operator?

I don't think we will, but that's something to determine through this
RFC process.

I hope we can separate the question of ""should we do this"" from the
question of ""can we do this"", and not attempt to use the latter as an
argument for the former. Let's evaluate them independently.
",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-19T17:22:42Z,True,rust-lang_____rfcs_____2544_____422887780,"I'm in favor in the abstract of getting rid of turbofish, which has only ever had two merits: we considered it necessary and it has good branding. I remember my own experience of thinking `collect` basically required me to create a temporary to type ascribe it before I learned turbofish existed. Discoverability is a real problem with turbofish: when `.collect<Vec<_>>` doesn't work, many users' first assumption will be (as mine was) that there just wasn't a way to specify the parameter.

I also think this is low priority and that implementation challenges should be weighted heavily. I personally think this is fine without an edition, the breakages are strictly theoretical.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-19T17:35:11Z,True,rust-lang_____rfcs_____2544_____422892283,"> it's much easier to teach the turbo fish than it is ""you can't use this specifc combination of tokens because of reasons"".

I think the proposed rule (linting against chained bit-shifts and comparisons) is no more confusing than needing to use `::` to disambiguate generic arguments in expressions. Expressions of this form are uncommon. This rule is rarely going to be encountered and won't need to be taught (unlike turbofish).

> Can people be absolutely sure that removing turbofish in favour of this new proposed syntax won't make it so that Rust in the future have to create workarounds

This is true of any syntax change. It can be useful to consider *specific* syntax that might be desirable in the future, but not worrying simply about potential for conflict without any examples. This issue hasn't been ignored: one particular future syntax extension has been addressed in the RFC already, for instance.

> I think that favorable Crater results or cargo fix support should not be sufficient to justify breaking changes within an edition.

I agree, but the arguments for making this change without an addition are generally taking favourable Crater results as a *necessary* condition — and that the advantages are beneficial enough to justify this change.

If there's enough time to get this into the 2018 Edition, we could also consider that, but that increases time pressure.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-19T17:43:18Z,True,rust-lang_____rfcs_____2544_____422894928,"> Discoverability is a real problem with turbofish: when .collect<Vec<_>> doesn't work, many users' first assumption will be (as mine was) that there just wasn't a way to specify the parameter.

@withoutboats This can be handled in _the next nightly if needed_ by updating the parser to use @varkor's PR slightly modified to emit a specific diagnostic suggesting the appropriate syntax. Another (related/more likely for newcomers) problem is [when doing a collect without turbofish](https://play.rust-lang.org/?gist=cadee1d6a1e80035bb73c39408b46c8c&version=nightly&mode=debug&edition=2015) (CC https://github.com/rust-lang/rust/issues/49391) we don't suggest it either, so we have a discoverability issue across the board. Note that [when we are binding the result of `collect`](https://play.rust-lang.org/?gist=f3fb34343cf57fb5a651a92889a2fa2d&version=nightly&mode=debug&edition=2015), we give an accurate, if sparse, hint. Regardless of wether this RFCS gets approved, we need to fix those rough edges.

> This rule is rarely going to be encountered and won't need to be taught (unlike turbofish).

I disagree slightly, as this new syntax will also require `rustc` to provide an appropriate suggestion in the cases mentioned above.

> If there's enough time to get this into the 2018 Edition, we could also consider that, but that increases time pressure.

At the very least we could reserve the syntax for 2018 and create a lint ""against chained bit-shifts and comparisons"" as you proposed...

> I also think this is low priority and that implementation challenges should be weighted heavily. I personally think this is fine without an edition, the breakages are strictly theoretical.

Having both `try!` and `?` was annoying for a while, but the community moved on (for the most part). With this change, I believe both `::<>` and `<>` will _have to_ coexist for cases where the syntax would otherwise be ambiguous and for backwards compatibility with existing code (if we introduce this in 2015 edition).

:-/",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-19T17:56:57Z,True,rust-lang_____rfcs_____2544_____422899542,"WRT the C++ dependent name stuff... the turbofish is itself already essentially that. Instead of `s.template foo<T>`, we change `template` to `::` and move it one token to the right: `s.foo::<T>`. The meaning is the same- ""parse this `<` as an opening bracket rather than a binary operator.""",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-19T18:09:09Z,True,rust-lang_____rfcs_____2544_____422903684,"@rpjohnst I don't think it's comparable. In Rust that's consistent, in C++ that's an arcane incantation. The compiler usually do not help you wrt `template` in that position, and you are left to wonder why your code don't work.

The code doesn't always work, it depends on the knowledge of the compiler of the dependent type, and it disables inference iirc.

In Rust the turbofish is consistent within itself, at least.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-19T18:13:34Z,True,rust-lang_____rfcs_____2544_____422905120,"> The compiler usually do not help you wrt `template` in that position, and you are left to wonder why your code don't work.

The compiler has just as much ability to help you insert `template` as rustc has to help you with turbofish. I know Clang does it in some situations. And as @estebank points out above, we don't do so great a job at it anyway (yet).",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-19T19:48:51Z,True,rust-lang_____rfcs_____2544_____422935020,I would be very happy to finally remove the turbofish language inconsistency. Having type ascription be inconsistent because of a hypothetical ambiguity is bad and I am glad that we can change it without having any crate on crates.io break. In my opinion we should lint against this ambiguous writing anyway for readability.,True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-20T03:44:46Z,True,rust-lang_____rfcs_____2544_____423030623,"> That is indeed a good reason but I could argue that we should better change the behavior there because usually defining a function happens less often than using it.

It’s not just functions, though. Turbofish can also be used when naming a type, e.g.
```rust
let mut x = Vec::<i32>::new()
```
In this case, Vec is both defined *and used* as `Vec<T>` – in most cases –  while only in this one specific case does it have to be written `Vec::<T>`.

Admittedly, using turbofish for types is probably less often necessary than with functions.  For example, the above snippet  can be written without turbofish by giving `x` a type annotation, and indeed this is generally seen as more idiomatic:
```rust
let mut x: Vec<u32> = Vec::new()
```
But then… *why* is this version the idiomatic one?  It’s longer than the first version, and repetitive, writing `Vec` twice.  It does have the advantage of explicitly naming the type of `x`, but the first version makes the type pretty obvious as well.

I think it’s mainly just because people consider turbofish to be ugly.  Thus, if we abolished the need for it, the pendulum would probably start to swing towards seeing `Vec<i32>::new` as the idiomatic version.  And IMO, that would be a good thing – especially since creating a Vec is one of those things that often shows up in introductory code snippets, where any kind of ugly syntax, including repetitiveness, can make the language look bad.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-20T03:56:56Z,True,rust-lang_____rfcs_____2544_____423032260,"@estebank
> With this change, I believe both `::<>` and `<>` will have to coexist for cases where the syntax would otherwise be ambiguous and for backwards compatibility with existing code (if we introduce this in 2015 edition).

No, the belief is that `::<>` would *never* be required with this change.  In ambiguous cases, the default would be interpreting as a generic (i.e. as if you had written `::<>`), and if you want comparisons instead, you can always force that by adding parentheses.  If it turns out there’s some edge case that that won’t be able to handle, I would personally reconsider my support for this change, but for now I’m not aware of any.

On the other hand, as you say, `::<>` would have to remain available for backwards compatibility.  But that’s no different from `try!`.  And, unlike when `?` was introduced, we now have a `cargo fix`, and it should be possible to have it rewrite the syntax for you automatically.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-20T05:23:09Z,True,rust-lang_____rfcs_____2544_____423043867,"@comex In particular, I think `Vec<i32>::new()` has a key desirable consistency property: it's consistent with the use of `Vec<i32>` as a type elsewhere. You can use `Vec<i32>` in a function signature, in a variable declaration, in a generic type parameter, in an ascription, anywhere else you can use a type. And with this change, you'll be able to use it to identify the type you want to call a method on, too.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-20T06:44:56Z,True,rust-lang_____rfcs_____2544_____423059802,"What I always thought was also weird was that you didn't have to write out the whole type in object literal syntax.

For example, if you have this definition: `struct Hello<T> { p: T }`

Then:
* `let h = Hello { p: 'c' }` compiles, and the type of `h` is `Hello<char>`. This is kind of surprising for me coming from C++/Java, where I would have written:
* `let h = Hello<char> { p: 'c' }`, which *doesn't* compile. Of course it's nice to have type inference do the work for you, but it's still surprising that writing out the full form is actually a syntax error. What the compiler actually wants, as it turns out, is turbofish:
* `let h = Hello::<char> { p: 'c' }` compiles. This is *very* surprising for me, especially as another way to write out the type fully does not involve turbofish:
* `let h: Hello<char> = Hello { p: 'c' }` also compiles.

It gets weirder with certain corner cases where type inference doesn't work:
* `let p = PhantomData` obviously doesn't compile, because we can't figure out the actual type of `p`.
* `let p = PhantomData<char>` doesn't compile either. You can guess why at this point.
* `let p: PhantomData<char> = PhantomData` and `let p = PhantomData::<char>` both compile.

So, in case it was not clear from the rant above, I wholeheartedly support this RFC.",True,True,268,711818.1666666666
gardener/landscape-setup/23,2018-09-20T07:35:29Z,False,5ba34eef6480fd2569f97206,[![CLA assistant check](https://cla-assistant.io/pull/badge/signed)](https://cla-assistant.io/gardener/landscape-setup?pullRequest=23) <br/>All committers have signed the CLA.,True,False,7,108.2
gardener/landscape-setup/23,2018-09-20T08:02:39Z,False,5ba356936480fd2cac8ce38b,you don't check for one master node like below,True,False,7,108.2
gardener/landscape-setup/23,2018-09-20T08:03:15Z,False,5ba356916480fd285af12476,do what? Looks strange that this should start bootkube ... ,True,False,7,108.2
gardener/landscape-setup/23,2018-09-20T08:45:01Z,False,5ba35f436480fd2d6a941cfc,"Yes and no. The `terraform output` command needs to be run from the folder containing the terraform state, so I guess it extracts the information from there. So, the number should be correct as long as 1. the caller has the up-to-date terraform state and 2. nobody has modified the infrastructure manually without using terraform for it. But I agree that in this case it might be better to get the actual number of master nodes from kubernetes directly. ",True,False,7,108.2
gardener/landscape-setup/23,2018-09-20T08:47:35Z,False,5ba35fe06480fd2877a18577,"Looks strange, but does the trick. This piece of code is based on https://github.com/gardener/kubify/blob/master/doc/troubleshoot.md#fix-control-plane-by-using-the-bootstrap-controlplane and according to that, simply copying some files somewhere else is enough to start the bootstrap controlplane. Works perfectly. But the comment could be more specific, I guess. ",True,False,7,108.2
gardener/landscape-setup/23,2018-09-20T09:23:26Z,False,5ba368436480fd24bf6b94da,so maybe end the script right away when you have more than one master node.,True,False,7,108.2
gardener/landscape-setup/23,2018-09-20T09:23:41Z,False,5ba368546480fd2c1513e464,ok :-),True,False,7,108.2
rust-lang_____rfcs_____2544,2018-09-20T09:45:34Z,True,rust-lang_____rfcs_____2544_____423116920,"Ok, I do agree with the points above, so removing turbofish might be an option. But for that, however, I'd think that the RFC should be updated to try and find edge cases and explain how the code would be have to be parsed in those cases. Tools that generate code might be an issue here sometimes too, because while we know a human has a low chance of writing something that would be wrongly interpreted as generics, generated code might not necessarily.

So basically the idea is ok, now we just need to actually toughen it up, get rid of edge cases and future-proof it.",True,True,268,711818.1666666666
github/VisualStudio/1901,2018-09-20T09:53:05Z,False,5ba36f3c6480fd26b7b8e61e,"# [Codecov](https://codecov.io/gh/github/VisualStudio/pull/1901?src=pr&el=h1) Report
> :exclamation: No coverage uploaded for pull request base (`master@3f90793`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).
> The diff coverage is `100%`.

[![Impacted file tree graph](https://codecov.io/gh/github/VisualStudio/pull/1901/graphs/tree.svg?width=650&token=VmoRXl8D24&height=150&src=pr)](https://codecov.io/gh/github/VisualStudio/pull/1901?src=pr&el=tree)

```diff
@@            Coverage Diff            @@
##             master    #1901   +/-   ##
=========================================
  Coverage          ?   40.96%           
=========================================
  Files             ?      487           
  Lines             ?    18868           
  Branches          ?        0           
=========================================
  Hits              ?     7729           
  Misses            ?    11139           
  Partials          ?        0
```


| [Impacted Files](https://codecov.io/gh/github/VisualStudio/pull/1901?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [src/GitHub.VisualStudio/Services/UsageTracker.cs](https://codecov.io/gh/github/VisualStudio/pull/1901/diff?src=pr&el=tree#diff-c3JjL0dpdEh1Yi5WaXN1YWxTdHVkaW8vU2VydmljZXMvVXNhZ2VUcmFja2VyLmNz) | `92.53% <100%> (ø)` | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/github/VisualStudio/pull/1901?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/github/VisualStudio/pull/1901?src=pr&el=footer). Last update [3f90793...9e0e2f6](https://codecov.io/gh/github/VisualStudio/pull/1901?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",True,False,1,0.0
rust-lang_____rfcs_____2544,2018-09-20T09:55:34Z,True,rust-lang_____rfcs_____2544_____423120409,@ivandardi Note: this RFC does not propose *removing* turbofish; rather it makes it *unnecessary*.,True,True,268,711818.1666666666
callstack_____react-native-paper_____485,2018-09-20T10:55:47Z,True,callstack_____react-native-paper_____485_____423139623,@iyadthayyil are you still working on this or you need some help? :),True,True,55,342611.05
rust-lang_____rfcs_____2544,2018-09-20T11:05:12Z,True,rust-lang_____rfcs_____2544_____423142638,"Well, not removing it, but I’d say it would make sense to consider it deprecated, and someday well down the line, add a warn-by-default lint for it.

I agree that it would make sense to consider whether there might be any issues with tools that generate code – specifically, if they could run into the very narrow cases that are valid today (so not chained comparisons) but would change meaning under this proposal.

For example, the RFC mentions this ambiguity:
```rust
(a < b, c > (d))
```
But there’s another possibility:
```rust
(a < b, c > ::d)
```
This could either be an associated const of the type `a<c, b>`, or a pair of comparisons where `::d` is an absolute path.  (…although I don’t know if that syntax will continue to be valid; I’ve lost track of all the module system proposals.)

This is even less likely to appear in human-written code, but it’s easier to imagine a code generator scattering absolute paths all over the place.

By the way – mostly unrelated – there’s also a class of ambiguities around binary operators.  This code:
```rust
(a<b, c>-4)
```
could be a pair of comparisons, or it could be `a<b, c>` minus 4.  How could it be the latter?  Currently, as far as I can tell, only in a very specific case: if `a` is a unit variant of an enum, the variant has been `use`d, and `Sub` has been manually implemented for that enum:
```rust
enum E<T, U> {
    Dummy(T, U),
    a
}
use E::a;
impl<T, U> Sub<i32> for E<T, U> { .. }

// this is valid:
a::<i32, i32> - 4
```

On the other hand, if the left-hand side has `::` (i.e. `z::a<b, c>-4`), it can be ambiguous without a `use`.  This is because the turbofish syntax for a unit enum variant is `Enum::Variant::<Parameters>`, *not* `Enum::<Parameters>::Variant` as might be expected.  To reduce the chance of this occurring in the wild, I suggest that we also change the syntax for enums to allow the latter and deprecate the former.

Of course, this also works for other operators that have both binary and unary variants (`*`, `&`… not `+` though, unlike other languages!).

Anyway, this is also a rather niche situation, and as usual you can disambiguate with parentheses.

It might become *very slightly* less niche with other future language features:
- With const generics, I believe `a<b, c>` could be a valid expression for a unit *struct* .  Currently, it can only be an enum: a struct with type parameters can’t be a unit struct, because the type parameters would necessarily be unused!  But const generics won’t need to be mentioned in the struct definition, so something like `struct a<const b: usize, const c: usize>;` would be valid.
- If we allow consts/statics to be generic, `a<b, c>` could refer to one of those and thus have any type (including types that might make a bit more sense to be doing arithmetic on).
",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-20T18:36:29Z,True,rust-lang_____rfcs_____2544_____423288747,"> On the other hand, as you say, ::<> would have to remain available for backwards compatibility. But that’s no different from try!. And, unlike when ? was introduced, we now have a cargo fix, and it should be possible to have it rewrite the syntax for you automatically.

@comex the point being that that [`try!` is still supported](https://play.rust-lang.org/?gist=16e0d5a336125797f164f38aae5ce0b9&version=nightly&mode=debug&edition=2015) and _if it weren't_ it could be trivially expressed in terms of `?`, while the proposed change here is a parser level change that can have much wider ramifications. (`?` was a strict addition to the syntax, as it didn't have the potential to clash with anything, while this is a change to existing syntax.) I am still _not_ rejecting the change outright, I just think we should be careful not to trivialize the potential problems caused by such a change.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-20T18:40:35Z,True,rust-lang_____rfcs_____2544_____423290039,"The disambiguation rule as specified is also is a forward-compatibility hazard:
```rust
save S;
try {
    parse GENERIC_ARGS;
} catch(...) {
    restore S;
    parse EXPR;
}
```
Note how this is dependent on specific grammar used for `GENERIC_ARGS` at the moment.
If the grammar is extended, then more previously valid `EXPR`s will convert into `GENERIC_ARGS` breaking code.

And the grammar *will* be extended, as soon as const generics are implemented and then progress and possibly allow wider class of expressions to be written in generic arguments.

In particular, something like `x < 10, 11 >` doesn't look like generic arguments now, so it wasn't interpreted as `x::<10, 11>` during the crater run and passed testing, this means const generics will break code *later* if this proposal is implemented now.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-20T18:50:55Z,True,rust-lang_____rfcs_____2544_____423293222,"I think it's possible to implement a more conservative version of this proposal that's implementable with  2-token lookahead on *token trees* - this means no rollback and no forward-compatibility issue.

""Token trees"" here means that we treat a balanced delimiter group (e.g. `(TOKEN_STREAM)`) as a single token, which we already kinda do because our parser accepts token trees from the lexer rather than tokens, this is especially visible in proc macros.

In this case we need roughly the next rule:
```
IF
  we are in turbofish position (after path segment identifier)
  AND
  the following (+1) token is a balanced angle bracketed group `<TOKEN_STREAM>`
  AND
  the next (+2) token is in the FOLLOW set for a path segment (this notably excludes identifiers and literals)
  THEN
  parse GENERIC_ARGS
END
```
It breaks a bit more code than the rollback version, but should still be acceptable for edition breakage.
(If only the first condition is used (balanced angle bracket), then the breakage is larger than it would be acceptable.)

I'm currently making a prototype, but there are a couple of subtle details that need to be figured out, like treatment of `->` in `X<fn(u8) -> u8>`.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-20T19:37:31Z,True,rust-lang_____rfcs_____2544_____423306896,I don't like the fact that there are multiple ambiguities. This seems like setting a bad president towards having code with lots special cases sprinkled around.,True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-20T19:45:12Z,True,rust-lang_____rfcs_____2544_____423309065,"> Note how this is dependent on specific grammar used for GENERIC_ARGS at the moment.
If the grammar is extended, then more previously valid EXPRs will convert into GENERIC_ARGS breaking code.

*If* the new syntax conflicts with any existing syntax — which is also true of any other syntax change. I understand your point is that you think it's likely the syntax will be extended in an incompatible way, though: but I don't think that future extensions are going to be incompatible (see below).

> And the grammar will be extended, as soon as const generics are implemented and then progress and possibly allow wider class of expressions to be written in generic arguments.

(To give a little more context for others: the const generic syntax does not cause any conflicts with this proposal (specifically because const expression arguments are required to be enclosed in `{}`), so this argument relies on a scenario in which this rule was relaxed.)

I don't think there's any reasonable argument to be made in favour of relaxing the rule to the point where this would cause issues without `::` (i.e. arbitrary const expressions). It's easy to come up with parsing issues when `{}` is not required, such as `f::<a>()>()` (which could parse as `(f::<a>()) > ()` or `f::<(a > ())>()`). The problems with relaxing the `{}` requirement are significant even *without* considering this proposal.

---

> I think it's possible to implement a more conservative version of this proposal that's implementable with 2-token lookahead on token trees - this means no rollback and no forward-compatibility issue.

> It breaks a bit more code than the rollback version, but should still be acceptable for edition breakage.

> I'm currently making a prototype, but there are a couple of subtle details that need to be figured out, like treatment of -> in X<fn(u8) -> u8>.

I'd definitely be interested in seeing feasible alternative implementations 👍",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-20T20:22:27Z,True,rust-lang_____rfcs_____2544_____423320187,"@varkor 
>the const generic syntax does not cause any conflicts with this proposal (specifically because const expression arguments are required to be enclosed in `{}`

But your own PR (https://github.com/rust-lang/rust/pull/53645) implements at least literals as generic arguments (in accordance with examples from the RFC - https://github.com/withoutboats/rfcs/blob/40ce721ae7315ba83c346bb9ba448885d6a4f03e/text/2000-const-generics.md#applying-a-const-as-a-parameter), without requiring `{}`.

Also, accepting only `{...}` in generic arguments would *also* be a breaking change, since it still extends what `GENERIC_ARGS` accepts and reinterprets previously valid code using `<` operators (the impact should be low in this case though).

>The problems with relaxing the {} requirement are significant even without considering this proposal.

That's until someone writes an RFC solving those problems with backtracking because `{}` is not *e r g o n o m i c* enough.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-20T20:32:00Z,True,rust-lang_____rfcs_____2544_____423323123,"> But your own PR (rust-lang/rust#53645) implements at least literals as generic arguments (in accordance with examples from the RFC - withoutboats/rfcs:text/2000-const-generics.md@40ce721#applying-a-const-as-a-parameter), without requiring {}.

> it still extends what GENERIC_ARGS accepts and reinterprets previously valid code using < operators

Ah, that's a good point. My assertion was probably a little cavalier. I think the impact is the same with these extensions, but it is more subtle than I indicated.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-20T21:24:27Z,True,rust-lang_____rfcs_____2544_____423338391,"Based on discussion in the @rust-lang/lang meeting today, the general sentiment was positive towards this. However, we don't think this should target the 2018 edition, and there's a *huge* amount of discussion here. We'd like to defer this until after the 2018 edition ships.

Please don't let this deter anyone from continuing to work on changes, testing, and feasibility analysis. This is just a note to say that the lang team probably won't have much bandwidth to dig deeply into this until after the edition ships.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-20T21:25:34Z,True,rust-lang_____rfcs_____2544_____423338683,Speaking for myself personally: I'm *hugely* impressed with @varkor here for persisting in the face of the seemingly invincible turbofish. Well done! I look forward to seeing this change go in.,True,True,268,711818.1666666666
tonerdo/coverlet/191,2018-09-21T13:44:26Z,False,5ba4f6f26480fd25de6a3b4f,"thanx, did the modification",True,False,4,15485.433333333332
tonerdo/coverlet/191,2018-09-21T13:48:40Z,False,5ba4f7e86480fd2c54cdf78f,@tonerdo no problem. This is because I am logged in in VS with another account :),True,False,4,15485.433333333332
rust-lang_____rfcs_____2544,2018-09-22T00:42:20Z,True,rust-lang_____rfcs_____2544_____423704055,"If this is to be entirely put off until after the 2018 edition, then it won't be able to be done without waiting for the next edition or breaking changes.

I'm not particularly a fan of the change, but it seems to me that if we are likely to make it we should make the new edition backwards compatible with this change by forbidding the ambiguous forms of syntax.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-22T00:46:06Z,True,rust-lang_____rfcs_____2544_____423704404,"@gmorenz Unfortunately the consensus during lang team discussion was that there isn't enough time before the edition ships to begin forbidding potential syntax ambiguities, especially since I believe detecting the ambiguities requires the same arbitrary parsing lookahead that the feature itself would require.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-22T06:53:12Z,True,rust-lang_____rfcs_____2544_____423722070,"> If this is to be entirely put off until after the 2018 edition, then it won't be able to be done without waiting for the next edition or breaking changes.

Why not? There will be another edition in 2021 or so.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-22T11:26:47Z,True,rust-lang_____rfcs_____2544_____423737571,"@SimonSapin that's what @gmorenz is referring to when they say ""waiting for the next edition""",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-22T16:04:06Z,True,rust-lang_____rfcs_____2544_____423754245,"This would be a reasonable feature for Rust21, imo, especially assuming that const generics will exist by then. We should probably have a `future_rust_incompatibility` warning that warns for chained comparisons like those shown here, then.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-23T07:45:54Z,True,rust-lang_____rfcs_____2544_____423798340,"I think it should be fine in Rust 2021. Sure, it will take time, but that's fine. It's not like waiting 13 years for C++11.

(I suppose there was C++03, but it didn't do much. Like, what it did? Introduce the requirement for std::vector elements to be stored contiguously?)",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-23T16:09:37Z,True,rust-lang_____rfcs_____2544_____423827385,">I think it's possible to implement a more conservative version of this proposal that's implementable with 2-token lookahead on token trees

I made an [experiment](https://github.com/petrochenkov/rust/tree/turbo) for https://github.com/rust-lang/rfcs/pull/2544#issuecomment-423293222, and it doesn't work unfortunately, too much breakage.
The most common reason for breakage is greater-or-equal `>=` due to `a<b,c>=d` being a valid assignment expression syntactically.
Here's the output from attempting to compile libcore:
```
error: balanced angle brackets in generic argument position are reserved
   --> libcore\num\flt2dec\strategy\dragon.rs:112:14
    |
112 |       if d.exp < 0 {
    |  ______________^
113 | |         scale.mul_pow2(-d.exp as usize);
114 | |     } else {
115 | |         mant.mul_pow2(d.exp as usize);
...   |
120 | |     // divide `mant` by `10^k`. now `scale / 10 < mant + plus <= scale * 10`.
121 | |     if k >= 0 {
    | |___________^
    |
    = note: #[deny(balanced_angle_brackets)] on by default

error: balanced angle brackets in generic argument position are reserved
   --> libcore\num\flt2dec\strategy\dragon.rs:240:14
    |
240 |       if d.exp < 0 {
    |  ______________^
241 | |         scale.mul_pow2(-d.exp as usize);
242 | |     } else {
243 | |         mant.mul_pow2(d.exp as usize);
...   |
246 | |     // divide `mant` by `10^k`. now `scale / 10 < mant <= scale * 10`.
247 | |     if k >= 0 {
    | |___________^

error: balanced angle brackets in generic argument position are reserved
   --> libcore\num\flt2dec\strategy\grisu.rs:394:26
    |
394 |               while plus1w < plus1v_up &&
    |  __________________________^
395 | |                   threshold - plus1w >= ten_kappa &&
    | |_______________________________________^

error: balanced angle brackets in generic argument position are reserved
   --> libcore\num\flt2dec\strategy\grisu.rs:396:39
    |
396 |                     (plus1w + ten_kappa < plus1v_up ||
    |  _______________________________________^
397 | |                    plus1v_up - plus1w >= plus1w + ten_kappa - plus1v_up) {
    | |________________________________________^

error: balanced angle brackets in generic argument position are reserved
   --> libcore\num\flt2dec\strategy\grisu.rs:408:19
    |
408 |           if plus1w < plus1v_down &&
    |  ___________________^
409 | |            threshold - plus1w >= ten_kappa &&
    | |________________________________^

error: balanced angle brackets in generic argument position are reserved
   --> libcore\num\flt2dec\strategy\grisu.rs:410:32
    |
410 |              (plus1w + ten_kappa < plus1v_down ||
    |  ________________________________^
411 | |             plus1v_down - plus1w >= plus1w + ten_kappa - plus1v_down) {
    | |___________________________________^

error: balanced angle brackets in generic argument position are reserved
   --> libcore\char\methods.rs:442:21
    |
442 |               if code < MAX_ONE_B && !dst.is_empty() {
    |  _____________________^
443 | |                 *dst.get_unchecked_mut(0) = code as u8;
444 | |                 1
445 | |             } else if code < MAX_TWO_B && dst.len() >= 2 {
...   |
453 | |                 3
454 | |             } else if dst.len() >= 4 {
    | |__________________________________^

error: balanced angle brackets in generic argument position are reserved
   --> libcore\char\methods.rs:445:28
    |
445 |             } else if code < MAX_TWO_B && dst.len() >= 2 {
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: balanced angle brackets in generic argument position are reserved
   --> libcore\char\methods.rs:449:28
    |
449 |             } else if code < MAX_THREE_B && dst.len() >= 3  {
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: balanced angle brackets in generic argument position are reserved
   --> libcore\slice\sort.rs:167:36
    |
167 |               let greater = if right < v.len() && is_less(&v[left], &v[right]) {
    |  ____________________________________^
168 | |                 right
169 | |             } else {
170 | |                 left
...   |
173 | |             // Stop if the invariant holds at `node`.
174 | |             if greater >= v.len() || !is_less(&v[node], &v[greater]) {
    | |_________________________^

error: balanced angle brackets in generic argument position are reserved
   --> libcore\slice\sort.rs:467:21
    |
467 |               while l < r && is_less(pivot, v.get_unchecked(r - 1)) {
    |  _____________________^
468 | |                 r -= 1;
469 | |             }
470 | |
471 | |             // Are we done?
472 | |             if l >= r {
    | |___________________^

error: balanced angle brackets in generic argument position are reserved
   --> libcore\str\mod.rs:505:10
    |
505 |       if x < 128 {
    |  __________^
506 | |         return Some(x as u32)
507 | |     }
508 | |
...   |
514 | |     let mut ch = utf8_acc_cont_byte(init, y);
515 | |     if x >= 0xE0 {
    | |___________^

error: aborting due to 12 previous errors
```
</details> ",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-23T16:13:03Z,True,rust-lang_____rfcs_____2544_____423827651,"Note that many cases in https://github.com/rust-lang/rfcs/pull/2544#issuecomment-423827385 will be interpreted as generics with the backtracking-based approach as well, if const generics grow ability to accept arbitrary expressions.",True,True,268,711818.1666666666
callstack_____react-native-paper_____485,2018-09-23T20:12:32Z,True,callstack_____react-native-paper_____485_____219709909,"It's a quick hack to overcome an animation  problem I faced when creating a new animated view from the existing `Surface` component. This was the original way I did it:
```javascript
const AnimatedSurface = Animated.createAnimatedComponent(Surface);
```
But this seems to render very choppy animations, would like to know if there is a way to just use `Surface` without this animation issue.",True,True,55,342611.05
callstack_____react-native-paper_____485,2018-09-23T20:17:21Z,True,callstack_____react-native-paper_____485_____219710052,"@iyadthayyil We can change `View` to `Animated.View` here: https://github.com/callstack/react-native-paper/blob/master/src/components/Surface.js#L65

Then we wouldn't need `Animated.createAnimatedComponent(Surface)`",True,True,55,342611.05
callstack_____react-native-paper_____485,2018-09-23T20:18:26Z,True,callstack_____react-native-paper_____485_____219710109,Ok will do that.,True,True,55,342611.05
callstack_____react-native-paper_____485,2018-09-23T20:21:06Z,True,callstack_____react-native-paper_____485_____219710205,"I just used the same code from the original `Surface` component, but will change that, also should probably change that in the original `Surface` component aswell.",True,True,55,342611.05
callstack_____react-native-paper_____485,2018-09-23T20:24:09Z,True,callstack_____react-native-paper_____485_____219710299,Ok will clear this up with some variables.,True,True,55,342611.05
callstack_____react-native-paper_____485,2018-09-23T20:26:44Z,True,callstack_____react-native-paper_____485_____423845407,"Ok, sorry guys, I have been busy with uni work, will try to get this ready soon.",True,True,55,342611.05
rust-lang_____rfcs_____2544,2018-09-24T02:41:32Z,True,rust-lang_____rfcs_____2544_____423867405,"It seems like one viable path forward (assuming backtracking) would be to require const generics to use `{}` for expressions containing the `&&` and `||` operators.

Note that this wouldn't exactly be a *new* special case; const generics will definitely have to use `{}` for expressions containing the `<` and `>` operators, so this would just be adding a few more operators to the list.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-24T02:48:09Z,True,rust-lang_____rfcs_____2544_____423867813,"> Note that many cases in #2544 (comment) will be interpreted as generics with the backtracking-based approach as well, if const generics grow ability to accept arbitrary expressions.

> It seems like one viable path forward (assuming backtracking) would be to require const generics to use {} for expressions containing the && and || operators.

I think it's reasonable just to assume we'll stick with the current model of requiring `{}` for any non-literal expression. It seems fairly clear even from these short discussions that anything else has major shortcomings.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-24T09:59:48Z,True,rust-lang_____rfcs_____2544_____423926396,"@varkor 
>I think it's reasonable just to assume we'll stick with the current model of requiring {} for any non-literal expression. It seems fairly clear even from these short discussions that anything else has major shortcomings.

I don't think it's reasonable to assume that.
Parsing `TYPE | EXPR` is a simpler problem to solve than turbofish, especially if more advanced parsers are employed or if backtracking becomes acceptable as a solution (did I say that you are opening a floodgate with this RFC?).
Parsing with restrictions like ""no `<`"" or ""no `{}`"" is not a problem either, it's already used.
The question of removing `{}` will very likely arise if the push for ergonomics continues, which is likely given the line up of the lang team.",True,True,268,711818.1666666666
mysqljs_____mysql_____1962,2018-09-24T21:12:52Z,True,mysqljs_____mysql_____1962_____424126892,@dougwilson Is this still planned to be merged? It obviously keeps accumulating conflicts while it is not :(,True,True,37,413793.7833333333
mysqljs_____mysql_____1962,2018-09-24T21:17:39Z,True,mysqljs_____mysql_____1962_____424128320,"This PR regresses behavior and cannot be merged until fixed as I noted above. I volunteered to fix the PR but have not gotten to it. Anyone is welcome to fix the regression in the PR, though, and will merge.",True,True,37,413793.7833333333
mysqljs_____mysql_____1962,2018-09-24T21:28:06Z,True,mysqljs_____mysql_____1962_____424131454,"@dougwilson Thanks for the update! Not sure I'll get to it in the nearby future personally, though (but it's a possibility).",True,True,37,413793.7833333333
mysqljs_____mysql_____1962,2018-09-24T21:54:46Z,True,mysqljs_____mysql_____1962_____424138608,It's np. I did get it mostly rebased and fixed locally but didn't quite finish. I'll bring this close to the top of my current todo list.,True,True,37,413793.7833333333
selfagency_____microsoft-drop-ice_____344,2018-09-25T11:28:11Z,True,selfagency_____microsoft-drop-ice_____344_____217945329,Fixed huge typo. Be more careful next time :),True,True,3,44208.083333333336
selfagency_____microsoft-drop-ice_____345,2018-09-25T12:14:01Z,True,selfagency_____microsoft-drop-ice_____345_____217957478,thanks,True,True,3,44160.76666666667
mysqljs_____mysql_____1962,2018-09-25T12:17:46Z,True,mysqljs_____mysql_____1962_____424319430,"> I'll look at what the fix is and push it up to your PR branch here

@dougwilson I was under the impression you would take over from there, and just assumed something else was blocking this. In any case, I'll gladly help to push this forward. Please, let me know what I can do.",True,True,37,413793.7833333333
mysqljs_____mysql_____1962,2018-09-25T12:25:32Z,True,mysqljs_____mysql_____1962_____424321907,You are correct. I volunteered to fix the PR. I did get it mostly rebased and fixed locally but didn't quite finish. I'll bring this close to the top of my current todo list.,True,True,37,413793.7833333333
mysqljs_____mysql_____1962,2018-09-25T12:30:10Z,True,mysqljs_____mysql_____1962_____424323464,"Alright, perfect. Let me know if there is something I can help with.",True,True,37,413793.7833333333
selfagency_____microsoft-drop-ice_____345,2018-09-25T13:53:39Z,True,selfagency_____microsoft-drop-ice_____345_____220201683,"It draws attention to an abuse of power by a government agency, and waste of government resources. It is an action that we can take as open source software developers to prevent the situation from becoming accepted and normalized.",True,True,3,44160.76666666667
selfagency_____microsoft-drop-ice_____344,2018-09-26T06:03:16Z,True,selfagency_____microsoft-drop-ice_____344_____424595236,"*Dear contributor,*
*thanks for your contribution. Your PR has been denied, due to the following reasons:*
 - *The PR has failed the tests against* :hankey:

*Please make the tests pass and commit again. Thank you.*",True,True,3,44208.083333333336
rust-lang_____rfcs_____2544,2018-09-26T07:33:26Z,True,rust-lang_____rfcs_____2544_____424615426,"> especially if more advanced parsers are employed or if backtracking becomes acceptable as a solution

ES2015 solved this with a ""cover grammar"" - for us, that would mean specifying `Type | Expr` as a new `TypeOrExpr` syntactical category (by taking any syntax that's shared between `Type` and `Expr`, and recursing on it with `TypeOrExpr`, e.g. type/expr tuples would be `,`-separated `TypeOrExpr*`).

So it even has avenues that don't require more advanced parsing algorithms or backtracking.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-26T08:55:17Z,True,rust-lang_____rfcs_____2544_____424638765,"I think there is an alternative missing for this RFC.

### Make the non-turbofish syntax redundant

The motivation, as I understand it, is to make the syntax consistent between `Foo<T>` and `bar::<T>`.

Suggestion: Make it possible to write `Foo::<T>`, and lint on `Foo<T>`.

This makes the syntax consistent. It also brings generics in line with the writing for namespaces: a generic is nothing more than a lot of automatically-defined types / functions, that can be considered as all being put under a namespace. And, most importantly, it doesn't introduce ambiguity, regardless of how rare the ambiguity actually happens or of how the ambiguity is resolved.

This idea is clearly not thought through, and there are likely many other things to change. Likely some drawbacks, too. But I think the idea of removing the non-turbofish syntax should be explored too, not only the idea of removing the turbofish syntax.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-26T10:18:27Z,True,rust-lang_____rfcs_____2544_____424663033,"Now, about the interaction with future features: what about (with chained comparisons and const generics):
```rust
if foo<bar<MYCONST>>() {
}
```
This doesn't sound really unlikely to me, and parsing will be ambiguous. Complete example with two possible interpretations, where one will take the `if` and the other the `else` branch:
```rust
struct MyStruct {}
const MYCONST: MyStruct = MyStruct {};
impl Shr<()> for MyStruct {
    type Output = usize;
    fn shr(self, _: ()) -> bool {
        4usize
    }
}

fn foo<T>() -> bool { false }
struct bar<const C: MyStruct> {}

// ...

let foo = 2usize;
let bar = 3usize;

if foo<bar<MYCONST>>() {
     // ...
} else {
     // ...
}
```",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-26T10:48:31Z,True,rust-lang_____rfcs_____2544_____424670936,"@Ekleog 
>Suggestion: Make it possible to write `Foo::<T>`, and lint on `Foo<T>`.

FWIW, it *is* possible to use the `::` disambiguator in ""type"" positions, just not strictly necessary.
```rust
type A = Vec::<u8>; // OK
```",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-26T11:12:41Z,True,rust-lang_____rfcs_____2544_____424677258,"> Now, about the interaction with future features: what about (with chained comparisons and const generics):

Chained comparisons are forbidden, so this would not be ambiguous syntax.

> FWIW, it is possible to use the :: disambiguator in ""type"" positions, just not strictly necessary.

Although not when declaring types:

```rust
struct S::<A>(A); // error: expected `where`, `{`, `(`, or `;` after struct name, found `::`
```

> This makes the syntax consistent. It also brings generics in line with the writing for namespaces

Yes, and this is undesirable. Generic parameters are unrelated to namespaces.

> a generic is nothing more than a lot of automatically-defined types / functions, that can be considered as all being put under a namespace

Except that the function or type is *not* a namespace and cannot be used like one. This conceptualisation doesn't fit into the existing framework of the language.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-26T13:35:20Z,True,rust-lang_____rfcs_____2544_____424717332,"> Chained comparisons are forbidden, so this would not be ambiguous syntax.

What do you mean ""forbidden""? We don't have it now or we will never have it any likely future?",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-26T15:03:55Z,True,rust-lang_____rfcs_____2544_____424750251,"@varkor this is true now, but I would like it in the future as shorthand for the mathematical meaning.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-26T16:12:25Z,True,rust-lang_____rfcs_____2544_____424776580,"> What do you mean ""forbidden""? We don't have it now or we will never have it any likely future?

> @varkor this is true now, but I would like it in the future as shorthand for the mathematical meaning.

Sorry, you're right. What I meant was that it's currently forbidden, but if it was introduced, this case would fall under the chained comparison and bit-shift lint (so you'd write `foo < bar < (MYCONST>>())` instead), so it doesn't introduce any additional problems.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-26T17:37:25Z,True,rust-lang_____rfcs_____2544_____424805217,"@varkor I agree with you that namespaces and generics are not exactly the same thing. However, I think it does make sense to think of them as paths (which is actually, I think, the reason why the syntax is this way?)

Also, I don't see any way in which, outside of consistency, the `ident<>` is better than the `ident::<>` syntax (gaining two characters is not much).

And the issue of `ident<>` that I mentioned above with chained-comparison-and-bit-shift is not a technical problem indeed, however it does sound like a human understanding problem: just parse the following few examples: (not requiring chained comparisons this time)
```rust
quux(foo<bar<baz<42>>>())
quux(foo<bar<baz<42>>())
quux(foo<bar,baz<stuff<42>>>())
quux(foo<bar,baz<stuff<42>>())
```
Then these ones:
```rust
quux(foo::<bar::<baz::<42>>>())
quux(foo<bar::<baz::<42>>>())
quux(foo::<bar,baz::<stuff::<42>>>())
quux(foo<bar,baz::<stuff::<42>>())
```
There is no technical ambiguity, and the meaning is the same for both examples. I also did not touch spacing so as not to cheat. And these are examples I came up with in less than a minute.

The second ones appear much easier to read to me.

Sure, saying “but just use `rustfmt`” is a possible solution to this, as correct spacing would make things easier to read. But then remember the users we're trying to help are beginners, and all beginners I know of have horrible indentation / spacing standards, few think to often run code maintenance tools, and they are overall very likely to make mistakes like the ones given as examples above.

Overall, I think the fact that the comparison operators and the generic parameter application are so easily distinguishable is something that is **good** for Rust. Maybe some other sybols than `<>` would have been better than the `::<>` syntax (though I can't find any easily-reachable ones, `≤≥` is hard to type on most keyboards), but, coming from a C++ background, I'm convinced the `<>` will actually make things worse.

(note here in these comparisons I'm comparing all-turbofish against non-turbofish, I still believe the best option is the current behaviour of turbofish-in-expression-location)

And all this only compares the objective qualities of the two syntaxes. It doesn't even compare the harsh difference in complexity of writing a parser, or external tools that deal with the language. (eg. good luck writing a syntax highlighter for vim that looks good with the new syntax -- C++ didn't manage it, and it's C++, while Rust has it good currently)",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-26T17:45:34Z,True,rust-lang_____rfcs_____2544_____424807836,"Actually, the distinction between the following two is pretty unfortunate, because it seems like a likely typo:

```rust
(foo < bar, baz)
(foo < bar, baz >) // today, this is a straight syntax error.
```",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-26T17:58:08Z,True,rust-lang_____rfcs_____2544_____424811780,"> Actually, the distinction between the following two is pretty unfortunate, because it seems like a likely typo:

You're going to get an error if you make a typo like this both now and after the changes described here (though the exact error might be different — it'll be local and easy to identify).",True,True,268,711818.1666666666
Marak_____faker.js_____616,2018-09-27T01:17:40Z,True,Marak_____faker.js_____616_____424922584,"@driade 

Looks good, merged.

I've redacted your comment here in regards to a surname having a previous political affiliation. This simply isn't the place for these kinds of discussions.

Your contributions are much appreciated. Thank you again.
",True,True,2,283129.48333333334
expload/pravda/243,2018-09-27T16:05:49Z,False,5bad07646480fd74cadfed35,I think It can be exchanged with simple `...Primitive._`,True,False,24,21281.0
expload/pravda/243,2018-09-27T16:11:09Z,False,5bad075e6480fd77f5c1c138,"Takes two items from the stack, raises the second number to a power of first number and pushes the result to the stack. ",True,False,24,21281.0
expload/pravda/243,2018-09-27T16:12:11Z,False,5bad075f6480fd788e8c1de0,"Use `val`, `def` recomputes results on every call. ",True,False,24,21281.0
expload/pravda/243,2018-09-27T16:12:26Z,False,5bad075e6480fd773159f507,`def` -> `val`,True,False,24,21281.0
expload/pravda/243,2018-09-27T16:12:36Z,False,5bad075d6480fd7c89385e07,`dev` -> `val`,True,False,24,21281.0
expload/pravda/243,2018-09-27T16:13:20Z,False,5bad075d6480fd74492c60b8,"Also you don't have to write the explicit type of the field, it it's obvious. ",True,False,24,21281.0
expload/pravda/243,2018-09-27T16:14:06Z,False,5bad075d6480fd784bea67a1,"And `override` keyword
",True,False,24,21281.0
expload/pravda/243,2018-09-27T16:15:39Z,False,5bad075e6480fd778de81830,Very bad naming here. Probably the best solution here just to take `5` as the factor. ,True,False,24,21281.0
expload/pravda/243,2018-09-27T16:18:40Z,False,5bad075d6480fd7434ac9bfb,"Add one more test with overflow. All in all, great tests :+1:",True,False,24,21281.0
expload/pravda/243,2018-09-27T16:21:12Z,False,5bad075d6480fd793be410aa,Overkill. You can define several overloaded functions instead of implicit classes. Implicit classes have some overhead and should be used with care. ,True,False,24,21281.0
expload/pravda/243,2018-09-27T16:23:08Z,False,5bad076b6480fd75067f7c1f,"Simplify the formula, I understand that you want to take `log_256(x^y)`, but it don't have to be exact. ",True,False,24,21281.0
expload/pravda/243,2018-09-27T16:26:04Z,False,5bad07606480fd7c07fb3247,"`if (true.toString.length == 4) { ... }`

Take a look at `.bitCount`, `.bitLength` methods. I'd also simplify this method in terms of constants. ",True,False,24,21281.0
expload/pravda/243,2018-09-27T16:26:23Z,False,5bad075d6480fd7c4755fc1d,Why two times?,True,False,24,21281.0
expload/pravda/243,2018-09-27T16:28:53Z,False,5bad075f6480fd756b5a4728,It's dangerous to convert `BigInt` to `Double`. It can be evaluated to `POSITIVE_INFINITY`. Write a method that takes two `BigInt`s and then convert the other argument to `BigInt` here. ,True,False,24,21281.0
expload/pravda/243,2018-09-27T16:30:21Z,False,5bad076a6480fd76bfc52df8,"Also that's wrong. If we produce `Int32` for example, we don't care about its length. We use 4 bytes in any case. ",True,False,24,21281.0
expload/pravda/243,2018-09-27T16:32:30Z,False,5bad075d6480fd7a33d2f2e3,"And with double overflow, it can become `POSITIVE_INFINITY `. Interesting to see this :)",True,False,24,21281.0
expload/pravda/243,2018-09-27T16:56:22Z,False,5bad0cef6480fd77f5c1c457,It's more correctly. Thanks,True,False,24,21281.0
rust-lang_____rfcs_____2544,2018-09-27T16:57:58Z,True,rust-lang_____rfcs_____2544_____425166778,"Well, yes, I'm not arguing the compiler won't be able to figure it out (and don't think I ever have). However, I *am* arguing that it is a problem for the reader's brain to figure it out.

Also, here is a small example for which that the compiler wouldn't report any error (just imagine the `bar` struct comes from `bindgen` to explain why it isn't capitalized correctly):
```rust
fn foo<T>() -> bool { false }
fn bar<T>() -> usize { 42 }
struct bar<T> {}
fn main() {
    let foo = 0;
    assert_eq!(foo<bar<usize>>(), false);
    assert_eq!(foo<bar<usize>(), true);
}
```

With your proposal, this program would pass. I argue that passing is correct under your semantics, but highly unexpected, and that making it pass is actually a bad idea.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-27T17:37:54Z,True,rust-lang_____rfcs_____2544_____425179571,"@Ekleog Your example would parse but not compile, because `foo<params>()` looks up `foo` in the value namespace (not the type namespace), so it would refer to the local variable.  Thus, if I convert your example to today's syntax by adding turbofish, I get this error:
```
error[E0109]: type parameters are not allowed on this type
 --> src/main.rs:6:22
  |
6 |     assert_eq!(foo::<bar<usize>>(), false);
  |                      ^^^^^^^^^^ type parameter not allowed
```
This is actually pretty bad wording; the real issue is that `foo` isn't a type at all.  This should be improved, but it's orthogonal to the turbofish question. :)

More generally, I'd say that if the programmer intended to write a comparison, they would probably use spaces:
```rust
assert_eq!(foo < bar<usize>(), true);
```

If they didn't intend to write a comparison, it's pretty unlikely that the code would compile without some sort of error.  Your example is already fairly artificial in that it defines an unrelated `fn` and `struct` both named `bar`, as well as shadowing `foo`.  But to make the `assert` lines both compile successfully, I think you'd need a much more convoluted arrangement.  The only approach I know of is to have a unit enum variant which is both callable and comparable:

```rust
enum E<T = u32> {
    foo,
    bar(T),
}
use E::foo;
impl<T> FnOnce<()> for E<T> {
    type Output = bool;
    extern ""rust-call""
    fn call_once(self, (): ()) -> bool { false }
}
impl PartialEq<usize> for E<u32> {
    fn eq(&self, other: &usize) -> bool { false }
}
impl PartialOrd<usize> for E<u32> {
    fn partial_cmp(&self, other: &usize) -> Option<Ordering> { Some(Ordering::Less) }
}
```",True,True,268,711818.1666666666
expload/pravda/243,2018-09-27T17:38:37Z,False,5bad16d76480fd740c67fbd4,"I think, here we can make our implicit classes as value classes.",True,False,24,21281.0
expload/pravda/243,2018-09-27T17:43:41Z,False,5bad18136480fd75c2bbcd65,And make it is top-level classes ofc,True,False,24,21281.0
rust-lang_____rfcs_____2544,2018-09-27T18:10:19Z,True,rust-lang_____rfcs_____2544_____425190571,"> Also, I don't see any way in which, outside of consistency, the `ident<>` is better than the `ident::<>` syntax (gaining two characters is not much).

The biggest problem with this is:

I believe the main reason Rust uses angle brackets in the first place (as opposed to square brackets, [which Rust supported in ancient days](
https://www.reddit.com/r/rust/comments/6l9mpe/minor_rant_i_wish_rust_had_gone_with_square/djsi37m), or other possibilities) is for consistency with other languages – minimizing the amount of the ""[strangeness budget](https://words.steveklabnik.com/the-language-strangeness-budget)"" that has to be spent on syntax.  Changing all uses of `Foo<Bar>` to `Foo::<Bar>` would largely negate that benefit; admittedly, the angle brackets are still there, but overloading `::` for this purpose is unique to Rust and arguably even more strange than `Foo[Bar]` would be.  (For the same reason, deprecating turbofish would improve Rust's consistency with other languages.)",True,True,268,711818.1666666666
expload/pravda/243,2018-09-28T10:03:22Z,False,5bae000a6480fd7600574b9a,calculateWatts,True,False,24,21281.0
expload/pravda/243,2018-09-28T10:04:56Z,False,5bae000a6480fd78ec1659ed,Write tests where you raise small primitive number to the power of bigint. ,True,False,24,21281.0
expload/pravda/243,2018-09-28T10:05:30Z,False,5bae000a6480fd7b7f58fbe5,calculateWattsForBigInt,True,False,24,21281.0
rust-lang_____rfcs_____2544,2018-09-28T18:58:07Z,True,rust-lang_____rfcs_____2544_____425533947,"(tl;dr below)

@comex Oh indeed, I didn't think that functions and variables were in the same namespace, so the example I gave is unlikely to be of any use indeed. Thanks :)

Now, **if** the compiler is able to generate a helpful error message for `foo<bar<usize>()` missing a `>` (in the same way that [forgetting the turbofish gives help right now](https://play.rust-lang.org/?gist=0ae192248a5a55401c7a5ff9c02bb33b&version=stable&mode=debug&edition=2015), **then** maybe it's not that bad.

But I know I have been with students learning C++, and they regularly forgot `>` in similar way (or had imbalanced `<>` in other ways), and it was a pain to just have to repeat everyone the same thing “count your brackets”. I fear Rust will fall in the same trap that C++ fell into, and this will be painful for people discovering the issue.

Because yes, with some experience, I can now tell if there's a missing parenthesis in a bunch of 5 or maybe more nested parenthesis. But I do know that beginners don't, and a type error, even local, may make them bang their head against the desk for a long time before someone comes in and tells them “look, you just didn't count your brackets correctly”.

About the strangeness budget… well, I don't really think that one minor syntax strangeness, especially when hand-held by the compiler and occurring relatively rarely, is worth it :) Especially when considering the argument of making the parser **much** more complex for **all** tools that want to deal with Rust. (and no, not all parsers are written in turing-complete languages, some “parsers” are really just regexes or similarly low-capacity parsing… good luck implementing this syntax change in these systems)

-----

To sum up this post:
 * If the compiler cannot give a hint that the closing `>` has been forgotten in `foo<bar<usize>()`, then I think this will *really* hinder beginners' liking of the system (as I experienced while helping beginner C++ programmers hitting this very same issue)
 * If the compiler can, then it is a trade-off between one minor strangeness in syntax that should occur relatively rarely and quite big added complexity to parser implementations, some of which may possibly just not be able to support the new syntax because they're written in regexes or similar (thinking of vim's syntax highlighting expressions, for instance)

In both cases, I do not think this change is worth it, even though I do understand why people want to remove this strangeness and want to applaud this effort put into the research for this PR :) (also, I still think the “use only turbofish” solution should at least be listed in the list of alternatives)",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-28T23:53:17Z,True,rust-lang_____rfcs_____2544_____425596377,"> Especially when considering the argument of making the parser much more complex for all tools that want to deal with Rust.

> some “parsers” are really just regexes

The ease of implementation in most traditional parsers is called out in the RFC. It's trivial to implement with regexes too (à la `(::)?`). If you think there's an example of a viable parser for which implementing this change is difficult, I'd like to see a concrete example.

> If the compiler cannot give a hint that the closing > has been forgotten in foo<bar<usize>(), then I think this will really hinder beginners' liking of the system

This is something we can and will do.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-29T05:11:51Z,True,rust-lang_____rfcs_____2544_____425616729,"Well, @Ekleog mentioned vim syntax highlighting rules.  As an example of what they look like, here’s rust.vim:

https://github.com/rust-lang/rust.vim/blob/master/syntax/rust.vim

Vim’s syntax highlighting engine is pretty ad-hoc, but AFAIK the expressive power of syntax rules is roughly equivalent to a pushdown automaton.  Thus, in theory you could distinguish between expressions and types under the existing syntax, but not after the proposed change.  However, the current rust.vim doesn’t actually bother to do so.  It takes a... cruder approach:

```
syn keyword rustTrait Box
syn keyword rustTrait ToOwned
syn keyword rustTrait Clone
syn keyword rustTrait PartialEq PartialOrd Eq Ord
syn keyword rustTrait AsRef AsMut Into From
syn keyword rustTrait Default
syn keyword rustTrait Iterator Extend IntoIterator
syn keyword rustTrait DoubleEndedIterator ExactSizeIterator
```",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-09-29T09:45:17Z,True,rust-lang_____rfcs_____2544_____425632095,"@varkor The part I'm thinking about is the following part of rust.vim:
```vim
syn match     rustFuncCall    ""\w\(\w\)*(""he=e-1,me=e-1
syn match     rustFuncCall    ""\w\(\w\)*::<""he=e-3,me=e-3 "" foo::<T>();
```
Which currently detects pretty well whether something is a function call or not. (actually, I can't remember of any time where I noticed it fail in actual code -- though it would fail on the `Struct::<GenArg>` syntax)

Now, detecting that `foo<bar, baz>()` is a function call while `foo < bar && baz > quux()` is not would sound… hard, with this scheme.

Also, this is only the first thing that came to my mind, because I use vim. I'm guessing a number of other text editors would have similar problems. Yes, people are using imperfect heuristics, but they do work well and are highly useful.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-10-01T05:15:48Z,True,rust-lang_____rfcs_____2544_____425791697,"This would be nice. It also would be hard, on several fronts:

- actually implementing this feature, which some here have suggested would require backtracking
- implementing the numerous lints and appropriate errors + error messages to keep things understandable
- the additional hoops that we would have to jump through to detect corner-cases

It seems like it's not worth the ergonomics of removing 2 characters (for experienced rust users) / making generics slightly less confusing (for beginners / new arrivals). The times where it is a problem for beginners / new arrivals, the existing error messages do a very good job of guiding the user to the correct answer.

If this is a feature our _existing_ parser could handle with little added effort, I could see the appeal. But adding backtracking and all the bugs/complexity/lints/error-messages associated with that seems too much to be worth the effort.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-10-01T09:27:24Z,True,rust-lang_____rfcs_____2544_____425843815,"> It also would be hard, on several fronts:

> If this is a feature our existing parser could handle with little added effort, I could see the appeal.

This feature has essentially already been implemented in https://github.com/rust-lang/rust/pull/53578. The additional lints would not be significant extra effort.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-10-01T10:30:04Z,True,rust-lang_____rfcs_____2544_____425860723,"@Phlosioneer `rustc`'s existing parser can support the change with little effort. That's unfortunately not the case with other more or less well-implemented parsers currently in use, that are used for tooling (eg. syntax highlighting, see https://github.com/rust-lang/rfcs/pull/2544#issuecomment-425632095).",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-10-01T14:51:26Z,True,rust-lang_____rfcs_____2544_____425936721,"Ah; well then, seems worth it to me.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-10-01T15:27:48Z,True,rust-lang_____rfcs_____2544_____425950321,I'm curious if @matklad has thoughts on how hard IDE support for this would be.,True,True,268,711818.1666666666
DevExpress/testcafe-hammerhead/1776,2018-10-01T15:34:11Z,False,5bb245546480fd778dea6346,:white_check_mark:&nbsp;Tests for the commit 74fb855846e7654c66ea8fe7c1e04ff88680454f have passed. See [details](https://travis-ci.org/testcafe-build-bot/testcafe-hammerhead/builds/435659010?utm_source=github_status&utm_medium=notification).,True,False,1,0.0
rust-lang_____rfcs_____2544,2018-10-01T16:04:03Z,True,rust-lang_____rfcs_____2544_____425963737,"> how hard IDE support for this would be.

Not a problem at all.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-10-01T16:46:27Z,True,rust-lang_____rfcs_____2544_____425978699,@matklad Can you give any idea how to update the vim syntax highlighting example I quoted above to work with this proposal? I can't find any way to decently express the syntax after the change.,True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-10-01T16:47:57Z,True,rust-lang_____rfcs_____2544_____425979185,"The issue is not how hard it is for any individual parser to implement- adding it once to rustc, or once to libsyntax2, or once to syn, is not that hard on its own.

The issue is when you have a wide array of tools that involve *some* level of parsing, but do not, or will not, or can not, reuse one of these ""juggernaut"" libraries for whatever reason. Quick scripts or Ctrl+F/grep-style human users, text editor or web-based syntax highlighting, small third-party parsers or particularly weird macros, independent implementations, etc.

There are workarounds and mitigations for some of these cases, but that doesn't make it worth it just to remove the turbofish. It's not that bad as things are now, and people will still have to work around the syntax in some (other/fewer) cases anyway with this change. Only a C++-like semantic disambiguation could actually remove *all* the workarounds, and that's certainly not a place worth going.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-10-01T16:52:40Z,True,rust-lang_____rfcs_____2544_____425980755,@Ekleog I was talking specifically about IDEs: tools that parse Rust syntax for real. I can't say anything about regular-expression based tools.,True,True,268,711818.1666666666
Azure/azure-docs-powershell-azuread/233,2018-10-01T19:35:44Z,False,5bb277a36480fd7689482d46,"### :white_check_mark: Validation status: passed


File | Status | Preview URL | Details
---- | ------ | ----------- | -------
[azureadps-2.0/AzureAD/Set-AzureADUserPassword.md](https://github.com/PrzemyslawKlys/azure-docs-powershell-azuread/blob/patch-2/azureadps-2.0/AzureAD/Set-AzureADUserPassword.md) | :white_check_mark:Succeeded | |

For more details, please refer to the [build report](https://opbuildstorageprod.blob.core.windows.net/report/2018%5C10%5C1%5Ced7d034d-a56c-a713-9d51-730d2ba643e8%5CPullRequest%5C201810011933099658-233%5Cworkflow_report.html?sv=2015-02-21&sr=b&sig=9uI5MWN8ZsGbNrIyoy93ZP%2FMwdhJnh2oez6PD9Eh2Zs%3D&st=2018-10-01T19%3A30%3A43Z&se=2018-11-01T19%3A35%3A43Z&sp=r).

**Note:** If you changed an existing file name or deleted a file, broken links in other files to the deleted or renamed file are listed only in the full build report.
",True,False,2,1141676.6833333333
rust-lang_____rfcs_____2544,2018-10-01T19:37:01Z,True,rust-lang_____rfcs_____2544_____426035448,"Hmm... I still tend to agree with @rpjohnst's thoughts in https://github.com/rust-lang/rfcs/pull/2544#issuecomment-425979185, but after seeing all of the parser experts say this is not too hard, I'm more willing to give this a try and see if it ever actually shows up in practice.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-10-01T19:51:38Z,True,rust-lang_____rfcs_____2544_____426039907,"Regarding rust.vim:

I didn't notice the bit @Ekleog quoted.  But again, the current rust.vim is *very* heuristic and only has a superficial understanding of Rust's syntax.  Here's that bit again (comment removed for clarity):

```vim
syn match     rustFuncCall    ""\w\(\w\)*(""he=e-1,me=e-1
syn match     rustFuncCall    ""\w\(\w\)*::<""he=e-3,me=e-3
```

Note that `\w\(\w\)*::<` is a regex.  Not only is it unable to distinguish `::<` used in type position, it won't even trigger if there's whitespace before or after the `::`.  Also, the first line (for non-turbofish calls) doesn't match calls where the callee expression doesn't end with an identifier, e.g. `(foo)(bar)`.  In other words, the bar for accuracy is pretty low.

On the other hand, it's true that it matches most turbofish usage today, and this change would make it harder.  For reference, Vim's syntax highlighting is not *just* a matter of ""highlight these regexes"": it has a concept of ""syntax regions"", which both allow it to transition between different states (""match groups"") with different sets of applicable regexes, and support nesting (e.g. you can define a ""parentheses"" region such that `(` enters the region, and `)` pops the stack and returns you to whatever state you were in before).  That's why I described it as a pushdown automaton, which is a bit more powerful than a DFA.  But it's not an NFA: it can't backtrack.  And the color used for each token is determined as it goes.

Thus, although we could use the pattern `>(`, without whitespace, as a decent heuristic for the *end* of an explicitly specialized generic call (inaccurate, but hardly more so than the existing heuristics), there's no way to use match groups to convey that information back to the beginning, where the function name is (the thing we want to highlight).  And the text at the beginning, `foo<`, is probably not a good enough heuristic by itself (even testing for a lack of whitespaces, there'd probably be too many false positives). 

But… regexes themselves can backtrack.  Vim's regexes don't support recursion, but we could define a regex that, say, matches up to 3 levels of nested `<>`, where the final `>` is followed by a `(`.  It would be ugly, but it'd mostly work.  However, things would get thornier if we wanted to correctly treat cases where `<` can appear as less-than within a type name, like `Foo<[u32; bar(a < b)]>` today, or const generics in the future...",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-10-02T01:41:02Z,True,rust-lang_____rfcs_____2544_____426118494,"@comex My concern is (I think the same as @rpjohnst's) that I guess vim will not be the only tool affected by this change, and even though making the grammar non-LL is not a problem for `rustc` in itself, it can easily become a problem for quite a lot of other tools. As you mentioned, currently it'd be possible to improve vim's syntax highlighting to have it accurately report expressions, and after this change it wouldn't. Sure, as @eddyb [mentions](https://github.com/rust-lang/rfcs/pull/2544#issuecomment-422250552) it's not a problem to make `rustc` parse a non-LL grammar, but other tools parse (at least partially) rust syntax with potentially reduced capabilities… and if I had a choice, I'd think we would fare better by making it *easier* for tools to parse it, not harder.

I fear that this change is a no-going-back change, and by doing it we are closing the way for appropriate tooling we maybe don't know yet.",True,True,268,711818.1666666666
googlefonts_____fontbakery_____2067,2018-10-02T18:32:09Z,True,googlefonts_____fontbakery_____2067_____219802212,"- Remove prebuilt FontVal. Use Hintak's binaries instead.
- Drop render tests. Diffbrowsers should be used.
- Added instructions for MAC and GNU Linux

I spent yesterday evening attempting to get Ms Font Validator to work on three macs. Since Hintak now provides [binaries](https://github.com/HinTak/Font-Validator/releases/tag/FontVal-2.1.2) for Font Validator, we should use these instead since it makes the installation so much easier.

I've also dropped the raster tests because we should use diffbrowsers instead

I dislike moving the binary to /usr/local/bin. I've only done this because our installation instructions for ots does this. Perhaps we should encourage soft links?

Keep this open since I need to get this working on Win. @felipesanches could you test on Linux?

cc @mjlagattuta @eliheuer ",True,True,49,21331.516666666666
googlefonts_____fontbakery_____2067,2018-10-02T18:40:50Z,True,googlefonts_____fontbakery_____2067_____426385735,"thanks, @m4rc1e !

I'll be testing it here, yes.",True,True,49,21331.516666666666
googlefonts_____fontbakery_____2067,2018-10-02T18:43:48Z,True,googlefonts_____fontbakery_____2067_____426386783,"Thanks, I'll fix the build whilst adding Win",True,True,49,21331.516666666666
georgymh/decentralized-ml/20,2018-10-02T18:51:08Z,False,5bb3bf596480fd7528e9f375,"Addressing your comments:

- Yes, that was intended. I presumed that if there was going to be a identity transform at the start (even if it session vs initialization), then it might just be better to maintain that identity transform as the default _transformed_ data. I thought that it would be cleaner to just add transforms if necessary and directly pass the data (I was assuming that transforms/passing happens in one step) without having to do error handling to check for the transformed folder. Let me know what you think.
 
- Makes sense, but I do also want to point out some things. I'm not sure if start of session implies that the Config Manager is already set up, but why not just initialize the DM at the start of a session? Transforming at the start of a session will require a transform function and data filepath. So calling the transform function without initialization (I presume you mean something like a static method) actually seems less clean to me. Again, let me know what you think. 

- Sounds good, I can take up it as a task for this week.
",True,False,1,0.0
googlefonts_____fontbakery_____2067,2018-10-02T18:57:26Z,True,googlefonts_____fontbakery_____2067_____426391143,I also want `pip install fontbakery` to install Ms Font Validator correctly.,True,True,49,21331.516666666666
googlefonts_____fontbakery_____2067,2018-10-02T19:03:35Z,True,googlefonts_____fontbakery_____2067_____426393123,"Hm, you can execute code when installing a wheel, that’s just unzipped in site packages. If you really want to pip install fontval then you need to either include prebuilt binaries as package_data, or make it available as a separate distribution on PyPI and require that in fontbakery.",True,True,49,21331.516666666666
googlefonts_____fontbakery_____2067,2018-10-02T19:08:31Z,True,googlefonts_____fontbakery_____2067_____426394585,Also when you include native executables or dlls in your pure python package you need to hack the bdist_wheel setuptools command to make pip think that this is not a pure python whee but a platform specific one. It’s tricky but doable. Get in touch if you want me to help,True,True,49,21331.516666666666
googlefonts_____fontbakery_____2067,2018-10-02T19:30:45Z,True,googlefonts_____fontbakery_____2067_____426401086,"@anthrotype Thanks for your willingness to help!

I only use Ms Val for the glyf checks. Do you know if the Noto project has more contour checks than what noto_lint provides?
 https://github.com/googlei18n/nototools/blob/master/nototools/noto_lint.py#L92-L333?
",True,True,49,21331.516666666666
googlefonts_____fontbakery_____2067,2018-10-02T19:32:07Z,True,googlefonts_____fontbakery_____2067_____426401477,I actually don’t know.,True,True,49,21331.516666666666
googlefonts_____fontbakery_____2067,2018-10-02T19:42:57Z,True,googlefonts_____fontbakery_____2067_____426404584,"As, a temporary improvement for installing Hintak's FontVal binaries: copying `FontValidator` to the bin of the Python3`venv` I'm using is working for me. We could probably write a shell script that sets up a FontBakery install in this way on macOS.
```
~/Py/Venvs/type/bin/FontValidator
``` ",True,True,49,21331.516666666666
googlefonts_____fontbakery_____2067,2018-10-02T19:49:56Z,True,googlefonts_____fontbakery_____2067_____426406662,Is your concern about /usr/local/bin that you can overwrite existing paths there Marc? How about installing these distributed executables in a local directory off of the system PATH and switch calling code to use those fontbakery specific paths rather than whatever is highest priority on system PATH definition.  Would allow the project to control project specific versions and users to install prior or more recent builds for other purposes as necessary.  Then you aren't mucking with default paths for distributed 3rd party software at all.  ,True,True,49,21331.516666666666
googlefonts_____fontbakery_____2067,2018-10-02T19:59:02Z,True,googlefonts_____fontbakery_____2067_____426409448,"@chrissimpkins pretty much

Personally, I like my dependencies to be specific for each tool (like virtualenvs). By dropping them in usr/local/bin, we're assigning these 3rd party tools to be run globally. I may not want FB's Font Val to be my system's default.",True,True,49,21331.516666666666
googlefonts_____fontbakery_____2067,2018-10-02T23:38:20Z,True,googlefonts_____fontbakery_____2067_____426465566,Good practice too.  Gives project control over dep versions and permits user to use what they want for other needs.  It looks like fontbakery calls use system PATH prioritized versions.  That may need to change to address this?  I submitted the ots install approach on macOS but agree with you.  ,True,True,49,21331.516666666666
callstack_____react-native-paper_____485,2018-10-04T10:25:43Z,True,callstack_____react-native-paper_____485_____426966389,Maybe we can do it step by step and take a look to rotation later and other edge cases. Let us know if you need help @iyadthayyil.,True,True,55,342611.05
googlefonts_____fontbakery_____2067,2018-10-04T10:47:48Z,True,googlefonts_____fontbakery_____2067_____426972128,"I think dropping things in /usr/local/bin (and /usr/local/lib) was perhaps historical - when you try not to do LD_LIBRARY_PATH, and such. Anyway, I am mostly of the view that things are either installed/uninstalled cleanly or not at all. Leaving things behind when fontbakery is gone is wrong.",True,True,49,21331.516666666666
googlefonts_____fontbakery_____2067,2018-10-04T11:56:36Z,True,googlefonts_____fontbakery_____2067_____426991163,"Somelody can explain to me what diffbrowser does, but the rasterization test in fontval is, to be honest, misnamed. 

It checks for validity and problems in the hinting instructions. Since the execution of hinting instructions depends on current resolution, especially at the lower end, the test is run at a range of resolutions. Rasterization test is not a visual test. I'd call it ""hinting instruction analysis"", though the Microsoft naming is stuck.

It defaults to be ""on"" in the GUI from old times, and was switched off in the command line because it did not work well or at all at the beginning of being opened. The GUI had new code added to trap the failure to allow it to ""land safely"". The intention was always to switch it back on when it works well, and it did with 2.1 - so it was switched on after. (the command switches for on/off will stay)",True,True,49,21331.516666666666
googlefonts_____fontbakery_____2067,2018-10-04T13:19:07Z,True,googlefonts_____fontbakery_____2067_____427015257,"> Somelody can explain to me what diffbrowser does, but the rasterization test in fontval is, to be honest, misnamed.

It enables us to take screenshots on different operating systems and browsers using https://www.browserstack.com",True,True,49,21331.516666666666
googlefonts_____fontbakery_____2067,2018-10-04T13:37:31Z,True,googlefonts_____fontbakery_____2067_____427021609," The FontVal raster test tells you where in the hinting instruction byte stream is wrong, and not the same thing. The same thing would be something like a non-interactive/scripted usage of ttdebug (in the ft2-demos). 
    On Thursday, 4 October 2018, 21:19:25 GMT+8, Marc Foley <notifications@github.com> wrote:  
 
 

Somelody can explain to me what diffbrowser does, but the rasterization test in fontval is, to be honest, misnamed.


It enables us to take screenshots on different operating systems and browsers using [https://www.browserstack.com]

—
You are receiving this because you are subscribed to this thread.
Reply to this email directly, view it on GitHub, or mute the thread.
   ",True,True,49,21331.516666666666
googlefonts_____fontbakery_____2067,2018-10-05T16:01:46Z,True,googlefonts_____fontbakery_____2067_____223059355,"this needs to be done on our travis setup, otherwise simply removing the prebuilt binaries will break the build as seen here: 
https://travis-ci.org/googlefonts/fontbakery/jobs/436304489

<img width=""820"" alt=""captura de tela 2018-10-05 as 13 00 39"" src=""https://user-images.githubusercontent.com/213676/46546191-c75dc780-c89e-11e8-8d3c-b1ac83ed42e3.png"">
<img width=""856"" alt=""captura de tela 2018-10-05 as 13 00 58"" src=""https://user-images.githubusercontent.com/213676/46546213-cd53a880-c89e-11e8-82e2-dc608590e3e2.png"">
",True,True,49,21331.516666666666
mysqljs_____mysql_____1962,2018-10-08T11:27:31Z,True,mysqljs_____mysql_____1962_____427799522,I think you should keep track of this issue :) still on 8.0.,True,True,37,413793.7833333333
callstack_____react-native-paper_____485,2018-10-11T08:13:25Z,True,callstack_____react-native-paper_____485_____428862610,Any ETA for this component?? This component looks beautiful,True,True,55,342611.05
expload/pravda/243,2018-10-11T09:15:14Z,False,5bbf15d46480fdfd3ef5f75e,Remove TODO,True,False,24,21281.0
expload/pravda/243,2018-10-12T10:46:49Z,False,5bc07cd16480fd01737d88d9,Great job! 👍 ,True,False,24,21281.0
googlefonts_____fontbakery_____2067,2018-10-12T16:19:43Z,True,googlefonts_____fontbakery_____2067_____429381226,">  I think dropping things in /usr/local/bin (and /usr/local/lib) was perhaps historical - ... 
> I am mostly of the view that things are either installed/uninstalled cleanly or not at all. Leaving things behind when fontbakery is gone is wrong.

This comment doesn't apply to any of the optional compiled executables in this project.  Users are being asked to install them outside of the FB install and uninstall outside of the FB uninstall.  The only way that I can see to achieve automation of this process is through something like `make` with install/uninstall targets on macOS/Linux and a Windows installer/uninstaller.  Probably the ideal approach? 

Assuming that the goal is to allow `/usr/local/bin`, `/usr/bin`, etc to take higher priority if multiple copies are installed on a system, pehaps we define a new bin path like `$HOME/.fontbakery/bin`.   This is the approach that Rust and Go use for installed compiled executables on Unix systems.  Then users place the new fontbakery bin directory at the end of their system PATH.  Not sure how this translates to Win platform.",True,True,49,21331.516666666666
googlefonts_____fontbakery_____2067,2018-10-12T19:27:16Z,True,googlefonts_____fontbakery_____2067_____429436037,"Well, put it this way, I probably use font validator more often than many, but I don't put it in my system directories either. Hence I have not noticed that running it via $PATH did not work.

My opinion would be put them in a private FB-owned directory and run things via full/relative path. That way, if you do delete the whole FB-owned directory, everything, include 3rd party tools users are asked to install (but not usually used independently of FB), is gone.",True,True,49,21331.516666666666
googlefonts_____fontbakery_____2067,2018-10-13T20:40:27Z,True,googlefonts_____fontbakery_____2067_____429573598,@eliheuer how do you plan to approach this in https://github.com/eliheuer/fontbakery-desktop?,True,True,49,21331.516666666666
googlefonts_____fontbakery_____2067,2018-10-13T20:58:07Z,True,googlefonts_____fontbakery_____2067_____429574738,"> @eliheuer how do you plan to approach this in https://github.com/eliheuer/fontbakery-desktop?

I think that separating the raw data from the text strings in log messages will enable front-ends like fontbakery-desktop to use the data in smarter ways.",True,True,49,21331.516666666666
googlefonts_____fontbakery_____2067,2018-10-13T20:59:51Z,True,googlefonts_____fontbakery_____2067_____429574852,"hmmm... maybe I misunderstood the question. Can you clarify what you were refering to in your questions bout fontbakery-desktop, @chrissimpkins ?",True,True,49,21331.516666666666
googlefonts_____fontbakery_____2067,2018-10-13T21:11:09Z,True,googlefonts_____fontbakery_____2067_____429575618,"Sorry.  Too concise.  I am wondering if Eli plans to distribute platform-specific pre-compiled versions of optional dependencies through something like clickable installer tools as part of the development work that takes place for the FB Desktop applications.  If so, FB ""CLI"" may be able to use the same approach and do away with the detailed installation documentation altogether.  This would all be placed within automated platform-specific install/uninstall tools with slight modifications for a CLI vs. GUI interface to the testing source.  The approach to the dependency installs might be the same for both tools.",True,True,49,21331.516666666666
googlefonts_____fontbakery_____2067,2018-10-13T21:15:40Z,True,googlefonts_____fontbakery_____2067_____429575886,ok. Got it. I think fontbakery-desktop should not worry about this. This is a base-problem to be solved by fontbakery core. A design principle for fontbakery-desktop is that it should simply work if the user already has got fontbakery CLI properly setup.,True,True,49,21331.516666666666
googlefonts_____fontbakery_____2067,2018-10-13T21:34:51Z,True,googlefonts_____fontbakery_____2067_____429577083,Agree. It seems that the question about where it is be best to place optional compiled FB dependencies remains an open one in this thread.  Marc used the same `/usr/local/bin` approach for FontVal that I recommended in the macOS ots-sanitize documentation.  That has been questioned in the discussion here and it remains an open topic.  I was interested in how Eli planned to address it with the GUI tool.  It sounds like it may just execute based upon how these are defined in the core project?,True,True,49,21331.516666666666
googlefonts_____fontbakery_____2067,2018-10-13T21:58:15Z,True,googlefonts_____fontbakery_____2067_____429578652,"yes. This is not a problem for FB-desktop to solve, even though a solution would benefit it (and any other frontend)",True,True,49,21331.516666666666
googlefonts_____fontbakery_____2067,2018-10-14T19:41:01Z,True,googlefonts_____fontbakery_____2067_____429655862,"I think you should wrap all the native executable that you depend on and distribute them on PyPI as pre-compiled wheels, so that you can then require them using the normal python packaging system.

I started a wheel builder repository for the opentype sanitizer here:
https://github.com/anthrotype/ots-wheels

I haven't uploaded wheels yet, but you should already be able to clone and pip install in editable mode.
Haven't tested on windows yet (I need to a build.bat for it, and set up appveyor).

This package exports an `ots` module with a single function called `sanitize` that takes a list of string arguments, that is passed on to the embedded `ots-sanitize` executable as a subprocess.
It also installs an `ots-sanitize` entry point console script (but maybe we don't need that one).",True,True,49,21331.516666666666
googlefonts_____fontbakery_____2067,2018-10-14T19:57:12Z,True,googlefonts_____fontbakery_____2067_____429657188,"@anthrotype That sounds good, but I wouldn't push to PyPI a native executable package containing FontVal since a portion of the source code used to generate the latest binaries is not publicly available under a free license, thus rendering those binaries non-free.

If we do ship binary packages to PyPI, then we should build it ourselves, from full sources (even if we end up with a binary that misses those few non-free features).",True,True,49,21331.516666666666
googlefonts_____fontbakery_____2067,2018-10-14T20:00:48Z,True,googlefonts_____fontbakery_____2067_____429657507,"Of course, I agree. I’m building ots from source",True,True,49,21331.516666666666
googlefonts_____fontbakery_____2067,2018-10-14T21:22:04Z,True,googlefonts_____fontbakery_____2067_____429663807,"I don't object to you guys not using FontVal at all. I just object to your practice of punishing your users with a substantially crippled version.

My opinion would be, use the whole of it, or don't use it. Don't ask people to use a substantially crippled version.

I am all for open-source - you can find my name listed as a subsystem maintainer in the Linux kernel - that's how far I am for it. But going on and on about what you want is not how you can get what you want.",True,True,49,21331.516666666666
googlefonts_____fontbakery_____2067,2018-10-14T21:43:25Z,True,googlefonts_____fontbakery_____2067_____429665780,"> since a portion of the source code used to generate the latest binaries is not publicly available under a free license

Out of curiosity, what is that portion exactly?",True,True,49,21331.516666666666
googlefonts_____fontbakery_____2067,2018-10-14T21:54:46Z,True,googlefonts_____fontbakery_____2067_____429666557,"> Out of curiosity, what is that portion exactly?

The `raster-tests` portion. It only works when interfacing with a non-free fork of freetype which provides a feedback channel to inform the application about all errors detected by the opentype hinting instructions virtual machine at runtime. Vanilla freetype silently deals with most of those malformed blocks of hinting instructions. The private fork extracts that info and reports back to fontval via a callback.",True,True,49,21331.516666666666
googlefonts_____fontbakery_____2067,2018-10-15T06:16:00Z,True,googlefonts_____fontbakery_____2067_____429720898,"Please feel free to write your own. I am rather tired of this whole exchange. All the FreeType developers are perfectly aware what I do. We all agree that the **FontVal** enhancement does not belong and should not polute FreeType. You, an outsider, keep telling us what we should do. 

Please feel free to fork your own, if you think it is merely whatever.

I have also not seen you improve any of the c# code either. If you feel you can do better, please do.",True,True,49,21331.516666666666
googlefonts_____fontbakery_____2067,2018-10-15T06:35:26Z,True,googlefonts_____fontbakery_____2067_____429724800,"See the FAQ https://github.com/HinTak/Font-Validator/wiki/FAQ#why-did-you-not-try-harder-to-upstream-the-patch . And regarding ""negative contributions"".

Cc @davelab6 : Can you please ask him to stop?",True,True,49,21331.516666666666
googlefonts_____fontbakery_____2067,2018-10-15T06:41:35Z,True,googlefonts_____fontbakery_____2067_____429726090,"Also this item of the FAQ https://github.com/HinTak/Font-Validator/wiki/FAQ#when-will-the-full-patch-set-be-posted

@davelab6 : please ask him to stop.",True,True,49,21331.516666666666
googlefonts_____fontbakery_____2067,2018-10-16T16:36:44Z,True,googlefonts_____fontbakery_____2067_____430307857,"I have updated the FAQ regarding this entry, https://github.com/HinTak/Font-Validator/wiki/FAQ#when-will-the-full-patch-set-be-posted , and posted a 4th condition:

```
Microsoft had removed the rasterization module, as well as refused to send me a more
up-to-date binary privately, although signs suggested that development continued for 4
more years after the last public update. The rasterization module is based on the windows
graphic kernel (win32k.sys), and understandably, there are too many security implications.
The decline to send a more up-to-date binary privately had always been stated as due to
""concerns about reverse-engineering"". Now that the work is mostly completed, before
it is posted, it must be carefully checked for any hints on that.
```

I have also registered an official complaint with @davelab6 concerning your bahavior. I have known and worked with the FreeType people, and Werner since at least 1996. Out of 20+ years of professional respect, it is okay for me to describe my work along the line of merely building on top of FreeType, but I find it absolutely offensive anybody else describing my work that way, and repeatedly.",True,True,49,21331.516666666666
googlefonts_____fontbakery_____2067,2018-10-16T17:17:34Z,True,googlefonts_____fontbakery_____2067_____430321834,"@HinTak For some reason this appears to be a touchy subject and I don't know the full back story but I haven't seen any criticism of you, your work, or the quality of the software that you are developing in this thread.  From what I can gather, there was simply a statement that it is not appropriate to distribute software that is not free through this project.  That seems like a reasonable goal to me.  If there are upstream issues that you cannot solve and must keep your source closed (if that is even the case, I don't know what the issue is) so be it.  

Also, the following comment is completely uncalled for and not in line with collegial collaborative work:

> You, an outsider, keep telling us what to do 

It is OK to have differences of opinion and discuss those in a courteous fashion but comments like these are destructive and a disincentive to open collaboration.  This cannot be tolerated.  Argue your own case and avoid personal attacks that are intended to dismiss other's opinions.  It should be assumed that everyone is attempting to do what is in the best interest of the project and there is no experience criterion to participate in open work.  ",True,True,49,21331.516666666666
googlefonts_____fontbakery_____2067,2018-10-16T17:23:02Z,True,googlefonts_____fontbakery_____2067_____430323807,"@chrissimpkins : as you admit you do not know the full story, why do you not read the FAQ? The FAQ was written last year! It was written to stop this kind of outsider comments from you.

https://github.com/HinTak/Font-Validator/wiki/FAQ#why-did-you-not-try-harder-to-upstream-the-patch",True,True,49,21331.516666666666
googlefonts_____fontbakery_____2067,2018-10-16T17:33:48Z,True,googlefonts_____fontbakery_____2067_____430327431,@chrissimpkins : please read the FAQ from the beginning to the end before you comment. https://github.com/HinTak/Font-Validator/wiki/FAQ thank you.,True,True,49,21331.516666666666
googlefonts_____fontbakery_____2067,2018-10-16T22:35:26Z,True,googlefonts_____fontbakery_____2067_____430424978," @chrissimpkins : to be honest, if I haven't known Cosimo for a bit, I would think that @anthrotype is being malicious and shit-stirring and trying to cause trouble, considering that he was in the FontVal development discussion **two days** before I was, and more than **two full years** before Felipe showed up ( read the FAQ https://github.com/HinTak/Font-Validator/wiki/FAQ )  @anthrotype knew full well the answer to his question, **3 years** before he asked it above.",True,True,49,21331.516666666666
pynet/crmzeus/258,2018-10-16T23:42:26Z,False,5bc678906480fdec5e2e8807,Closing this in favor of #262,True,False,1,0.0
googlefonts_____fontbakery_____2067,2018-10-17T09:27:36Z,True,googlefonts_____fontbakery_____2067_____430557002,"@HinTak thank you for reviewing this pr. I'll inspect this extension issue later on. I take it you were drinking last night?

I've fixed the build by updating travis to use Hintak's FontValiator Linux binary.

@felipesanches I just need to reread my install instructions and to see if Niko's win installation notes can work for this pr.",True,True,49,21331.516666666666
googlefonts_____fontbakery_____2067,2018-10-17T09:50:25Z,True,googlefonts_____fontbakery_____2067_____430564727,"Niko's Win installation instructions work for this PR.

I'll now do a fresh install on Win and test this .exe issue.",True,True,49,21331.516666666666
googlefonts_____fontbakery_____2067,2018-10-17T13:33:28Z,True,googlefonts_____fontbakery_____2067_____430629931,"I booted up Win7 and running `FontValidator` instead of `FontValidator.exe` worked just fine.

![screen shot 2018-10-17 at 14 31 43](https://user-images.githubusercontent.com/7525512/47089809-7bedd680-d219-11e8-8654-ed94f519ee6f.png)

I'll update the implementation as @HinTak suggested.",True,True,49,21331.516666666666
googlefonts_____fontbakery_____2067,2018-10-17T13:46:32Z,True,googlefonts_____fontbakery_____2067_____430634791,@felipesanches I think we're good. Feel free to review this.,True,True,49,21331.516666666666
googlefonts_____fontbakery_____2067,2018-10-17T13:51:19Z,True,googlefonts_____fontbakery_____2067_____225937051,this line can be removed now ,True,True,49,21331.516666666666
googlefonts_____fontbakery_____2067,2018-10-17T13:52:38Z,True,googlefonts_____fontbakery_____2067_____225937655,"This other line can also be removed now.
Please delete the `prebuilt/custom_freetype/` directory as well.",True,True,49,21331.516666666666
googlefonts_____fontbakery_____2067,2018-10-17T13:56:48Z,True,googlefonts_____fontbakery_____2067_____225939628,Already done in ff807173f5bd1e29e5af07232a79d5031a2b4ae4,True,True,49,21331.516666666666
googlefonts_____fontbakery_____2067,2018-10-17T14:02:54Z,True,googlefonts_____fontbakery_____2067_____430641063,@felipesanches I've implemented your suggestions. Thanks and I agree with them.,True,True,49,21331.516666666666
googlefonts_____fontbakery_____2067,2018-10-17T14:03:40Z,True,googlefonts_____fontbakery_____2067_____430641333,YAY!!! :-D,True,True,49,21331.516666666666
theia-ide/theia/3215,2018-10-18T00:19:10Z,False,5bc7d2b06480fdeba9f0d95e,"Here's how it looks:

![screenshot_2018-10-17_20-18-25](https://user-images.githubusercontent.com/1758287/47124064-e585d900-d249-11e8-925c-28e42b1faab9.png)
",True,False,10,17040.666666666668
rust-lang_____rfcs_____2544,2018-10-19T01:26:26Z,True,rust-lang_____rfcs_____2544_____431215378,"@Ixrec  

> > > If we had type ascription but not this, we could teach and use the language entirely without turbofish
> > 
> > 
> > Not always. See for example `std::mem::size_of::<T>()`, `Any::is::<T>()`, etc.
> 
> I'm missing something. Wouldn't this RFC allow writing `std::mem::size_of::<T>()` as `std::mem::size_of<T>()`?

Refer back to the text that you quoted: ""If we had type ascription but not this""

",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-10-19T01:51:00Z,True,rust-lang_____rfcs_____2544_____431219292,"@teiesti 

> > I'm not happy with Turbofish either, but between turbofish and the proposed alternative, I prefer turbofish. HOWEVER, if I could change how Rust worked, this is how I'd make type inference work:
> > Functions would be able to have two parameter lists: one for compile time arg (types and const generics), and one for runtime args. So it would look something like this
> > `fn foo(T)(bar: i32) {}`
> 
> The problem with that syntax is a function returning a closure. If you call both at once you end up with `foo(function_arg)(closure_arg)`.

In D you write the definition as `foo(T)(bar: i32)` but the invocation as `foo!(T)(bar)` ... or, for single simple generic arguments `foo!T(bar)`. Or `foo(bar)` if the type can be inferred. Use of generics in D is, IMO, much more pleasant than C++, Rust, or other languages.",True,True,268,711818.1666666666
theia-ide/theia/3215,2018-10-19T05:18:01Z,False,5bc96a376480fdea47411ba4,"I think it should be available only if the server actually running, i.e. like in typescript extension right now.

We also need to remove an existing command from the typescript extension to avoid duplicate.",True,False,10,17040.666666666668
theia-ide/theia/3215,2018-10-19T05:18:37Z,False,5bc96a5c6480fde98fd18e7d,Maybe `{this.name}: Restart Server` to align with other commands?,True,False,10,17040.666666666668
nestjs_____typeorm_____27,2018-10-19T09:05:18Z,True,nestjs_____typeorm_____27_____431296683,"This is the way I do it without any new decorator:
```ts
import { Injectable } from '@nestjs/common';
import { InjectConnection } from '@nestjs/typeorm';
import { Connection, EntitySubscriberInterface, InsertEvent } from 'typeorm';
import { NewNotificationMessage } from '../models';

@Injectable()
export class NewNotificationSubscriber implements EntitySubscriberInterface {

  constructor(
    @InjectConnection() readonly connection: Connection,
  ) {
    connection.subscribers.push(this);
  }

  listenTo() {
    return NewNotificationMessage;
  }

  afterInsert(event: InsertEvent<NewNotificationMessage>) {
    console.log('Hi guys!');
  };

}
```

```ts
// NOTE: TypeORM Subscribers are injected through Nest DI and register themselves with the TypeORM connection
 TypeOrmModule.forRoot({
   ...environment.db,
   entities: [ `${__dirname}/**/models/*.js` ],
   migrations: [ `${__dirname}/migrations/*.js` ],
   migrationsRun: true,
   type: 'postgres'
 }),
```

I thought that I ought to share this simple workaround that I use at the moment.",True,True,25,905236.35
nestjs_____typeorm_____27,2018-10-19T09:23:03Z,True,nestjs_____typeorm_____27_____431301658,"Wow, looks nice! ",True,True,25,905236.35
rebassjs_____rebass_____515,2018-10-19T22:18:54Z,True,rebassjs_____rebass_____515_____224424205,"In this diff I provided a build script for each package in this monorepo.
The structure looks like this one

```
packages/
  module
    emotion/package.json
    dist/package.json
    dist/index.cjs.js
    dist/index.esm.js
    dist/emotion.cjs.js
    dist/emotion.esm.js
```

Pkg specifies `main` and `module` fields for styled components and for
emotion.",True,True,9,1158.7333333333333
rebassjs_____rebass_____515,2018-10-19T22:18:58Z,True,rebassjs_____rebass_____515_____431515679,"
This pull request is [automatically deployed](https://zeit.co/docs/features/now-for-github?utm_source=automated&utm_medium=github&utm_campaign=now_bot) with [Now](https://zeit.co/now?utm_source=automated&utm_medium=github&utm_campaign=now_bot).
To access deployments, click Details below or on the icon next to each push.


	",True,True,9,1158.7333333333333
rebassjs_____rebass_____515,2018-10-19T22:31:20Z,True,rebassjs_____rebass_____515_____431517714,"I'm not sure how to fix deploy error. Travis works fine.
/cc @jxnblk ",True,True,9,1158.7333333333333
rust-lang_____rfcs_____2544,2018-10-20T11:54:22Z,True,rust-lang_____rfcs_____2544_____431573764,"Oof, I really hate the `foo(T)(bar)` syntax. It has too many nested and sets of parens: `foo(T: AsRef(Vec(T)))(v: T)`. Also, it syntactically conflates type arguments (static) and value arguements (dynamic). IMHO, there should be a distinction.

Personally, I find Scala's syntax with [ ] most pleasant to read, but it's clearly ambiguous in rust. Also, everyone coming from a more common language wonders about all the weird arrays at first... :P",True,True,268,711818.1666666666
theia-ide/theia/3215,2018-10-20T13:48:13Z,False,5bcb33506480fd33bd8dec22,"> I think it should be available only if the server actually running, i.e. like in typescript extension right now.

This is what this code does, doesn't it?  `activate` is only called when starting the language client/server.

> We also need to remove an existing command from the typescript extension to avoid duplicate.

Ok.",True,False,10,17040.666666666668
theia-ide/theia/3215,2018-10-20T13:50:16Z,False,5bcb33ca6480fd32edca0622,"Ok, I changed it to `${this.name}: Restart Language Server`.",True,False,10,17040.666666666668
theia-ide/theia/3215,2018-10-20T13:57:59Z,False,5bcb35996480fd31997945c4,"If the language server stops, we should remove the command, but I don't know how to make a language server stop for good.",True,False,10,17040.666666666668
theia-ide/theia/3215,2018-10-20T13:59:00Z,False,5bcb35dc6480fd3716b1a8d9,New version uploaded.,True,False,10,17040.666666666668
rebassjs_____rebass_____515,2018-10-20T15:49:48Z,True,rebassjs_____rebass_____515_____431593383,I'd rather hold off on all these build changes until after v3 is released,True,True,9,1158.7333333333333
rebassjs_____rebass_____515,2018-10-20T15:52:38Z,True,rebassjs_____rebass_____515_____431593573,They may be breaking. It should be landed in v3. What's the problem?,True,True,9,1158.7333333333333
rebassjs_____rebass_____515,2018-10-20T15:58:51Z,True,rebassjs_____rebass_____515_____431594069,Why would the build process be breaking changes?,True,True,9,1158.7333333333333
rebassjs_____rebass_____515,2018-10-20T16:00:36Z,True,rebassjs_____rebass_____515_____431594193,"Because the result of build process is different.

Everything should be landed and tested before major release or users will get shit in minor and patches.",True,True,9,1158.7333333333333
rebassjs_____rebass_____515,2018-10-20T16:01:25Z,True,rebassjs_____rebass_____515_____431594278,This is the point of prereleases.,True,True,9,1158.7333333333333
rebassjs_____rebass_____517,2018-10-20T17:25:14Z,True,rebassjs_____rebass_____517_____224488893,"- Simplifies the code base by removing subpackages
- Stabilizes the package to be more reliable (fewer moving parts)
- References to components can now be found at [rebassjs/extras](https://github.com/rebassjs/extras)
- Temporarily removes support for emotion until the `as` prop is supported (See https://github.com/emotion-js/emotion/issues/837)
- If you'd like to use Rebass with emotion, I'd recommend forking this repo for the time being.
",True,True,4,27.766666666666666
rebassjs_____rebass_____517,2018-10-20T17:25:17Z,True,rebassjs_____rebass_____517_____431601792,"
This pull request is [automatically deployed](https://zeit.co/docs/features/now-for-github?utm_source=automated&utm_medium=github&utm_campaign=now_bot) with [Now](https://zeit.co/now?utm_source=automated&utm_medium=github&utm_campaign=now_bot).
To access deployments, click Details below or on the icon next to each push.


	",True,True,4,27.766666666666666
rebassjs_____rebass_____517,2018-10-20T17:26:41Z,True,rebassjs_____rebass_____517_____431601940,"# [Codecov](https://codecov.io/gh/rebassjs/rebass/pull/517?src=pr&el=h1) Report
> Merging [#517](https://codecov.io/gh/rebassjs/rebass/pull/517?src=pr&el=desc) into [master](https://codecov.io/gh/rebassjs/rebass/commit/edb4392e1325412ecf3564544d93c3e71fccc808?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/rebassjs/rebass/pull/517/graphs/tree.svg?width=650&token=H5yQ0WBw7c&height=150&src=pr)](https://codecov.io/gh/rebassjs/rebass/pull/517?src=pr&el=tree)

```diff
@@          Coverage Diff          @@
##           master   #517   +/-   ##
=====================================
  Coverage     100%   100%           
=====================================
  Files           1      1           
  Lines          21     21           
=====================================
  Hits           21     21
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/rebassjs/rebass/pull/517?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/rebassjs/rebass/pull/517?src=pr&el=footer). Last update [edb4392...5ea091b](https://codecov.io/gh/rebassjs/rebass/pull/517?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",True,True,4,27.766666666666666
rebassjs_____rebass_____515,2018-10-20T17:37:38Z,True,rebassjs_____rebass_____515_____431602951,Fuck. Will build my own framework. Contribution to your projects makes me tired.,True,True,9,1158.7333333333333
rebassjs_____rebass_____517,2018-10-20T17:53:00Z,True,rebassjs_____rebass_____517_____431604156,You just makes things more complex by removing everything over and over again.,True,True,4,27.766666666666666
rust-lang_____rfcs_____2544,2018-10-22T03:50:42Z,True,rust-lang_____rfcs_____2544_____431735661,"> Oof, I really hate the `foo(T)(bar)` syntax. It has too many nested and sets of parens: `foo(T: AsRef(Vec(T)))(v: T)`. Also, it syntactically conflates type arguments (static) and value arguements (dynamic). IMHO, there should be a distinction.

We're now quite off topic and I don't really want to put more time into this, but it works quite well in D, perhaps because your criticisms aren't valid. the ""too many parens"" is quite artificial ... no one writes code like that, they use where clauses.  And at the point of invocation, generic arguments are indicated with a !, usually without parens as in convert_to!int(foo) or sort!""a > b""(array). And even in the definition  they aren't ""conflated"" ... the template params are in the first pair of parens and the regular params are in the second pair. (And since D extensively supports and uses compile-time function execution, the static/dynamic distinction isn't so crisp.) Finally, the types of paired brackets are at a premium and Walter didn't want to squander [] on template arguments. It's a design tradeoff, and again it works quite well in D. Anyway it's moot here ... Rust made its bed of thorns and now has to lay in it.
",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-10-22T04:06:33Z,True,rust-lang_____rfcs_____2544_____431736443,"> Oof, I really hate the `foo(T)(bar)` syntax. It has too many nested and sets of parens: `foo(T: AsRef(Vec(T)))(v: T)`. Also, it syntactically conflates type arguments (static) and value arguements (dynamic). IMHO, there should be a distinction.

We're now quite off topic and I don't really want to put more time into this, but it works quite well in D, perhaps because your criticisms aren't valid. the ""too many parens"" is quite artificial ... no one writes code like that, they use where clauses.  And at the point of invocation, generic arguments are indicated with a !, usually without parens as in convert_to!int(foo) or sort!""a > b""(array). And even in the definition  they aren't ""conflated"" ... the template params are in the first pair of parens and the regular params are in the second pair. (And since D extensively supports and uses compile-time function execution, the static/dynamic distinction is isn't so crisp.) Finally, the types of paired brackets are at a premium and Walter didn't want to squander [] on template arguments. It's a design tradeoff, and again it works quite well in D. Anyway it's moot here ... Rust made its bed of thorns and now has to lay in it.
",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-10-22T05:30:09Z,True,rust-lang_____rfcs_____2544_____431743577,"> Oof, I really hate the `foo(T)(bar)` syntax. It has too many nested and sets of parens: `foo(T: AsRef(Vec(T)))(v: T)`. Also, it syntactically conflates type arguments (static) and value arguements (dynamic). IMHO, there should be a distinction.

We're now quite off topic and I don't really want to put more time into this, but it works quite well in D, perhaps because your criticisms aren't valid. the ""too many parens"" is quite artificial ... no one writes code like that, they use where clauses.  And at the point of invocation, generic arguments are indicated with a !, usually without parens as in convert_to!int(foo) or sort!""a > b""(array). And even in the definition  they aren't ""conflated"" ... the template params are in the first pair of parens and the regular params are in the second pair. (And since D extensively supports and uses compile-time function execution, the static/dynamic distinction isn't so crisp.) Finally, the paired brackets are at a premium and Walter didn't want to squander [] on template arguments. It's a design tradeoff, and again it works quite well in D. Anyway it's moot here ... Rust made its bed of thorns and now has to lay in it.
",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-10-22T17:22:26Z,True,rust-lang_____rfcs_____2544_____431904881,"@jibal Fair enough. I could actually show some real examples where I think this might be a problem, but I don't want to derail the thread either. If your interested in discussing further, perhaps we could start an internals thread.",True,True,268,711818.1666666666
hashicorp/terraform/19178,2018-10-23T19:28:44Z,False,5bcf76a96480fd3772d560a8,"@apparentlymart I reverted a few of the changes you started with, to preserve the original behavior of this command.

Previously this command would remove whatever resources that matched the given addresses, in the same way that those addresses could be used as filter for the `state list` command. So what would be removed should be the same as what would be filtered using the same given addresses.

I did keep the `-dry-run` as that clearly adds value for a command like this. Of course we can always discuss the behavior and if we want to change it, but for now I tried to keep it as close to the previous behavior as possible.",True,False,2,756413.7833333333
jupyterhub_____kubespawner_____275,2018-10-23T22:29:45Z,True,jupyterhub_____kubespawner_____275_____225207913,"`image_pull_policy` **defaults**, i.e. gets derived from `image_spec` tag, only when it is not set explicitly!
`image_pull_policy='IfNotPresent'` + `:latest` tag ≠ `image_pull_policy='Always'`. Event `:latest` image won't be pulled if it exists!
If it is desired to have `image_pull_policy` 'dependent' on the tag (as-if it were `'Always'` for `:latest`/omitted tag and `'IfNotPresent'` otherwise), it should be set to `None`, which corresponds to `imagePullPolicy` omission. https://kubernetes.io/docs/concepts/containers/images#updating-images:
> If you would like to always force a pull, you can do one of the following:
> - omit the `imagePullPolicy` and use `:latest` as the tag for the image to use.
> - omit the `imagePullPolicy` and the tag for the image to use.",True,True,10,1907.1
jupyterhub_____kubespawner_____275,2018-10-24T05:58:34Z,True,jupyterhub_____kubespawner_____275_____432523141,"Do we want to support a ""not best practice"" of using `latest` as a tag instead of an explicit tag? Using `:latest` in production setups makes it very hard to track which version of the image is actually running and makes it hard to reproduce bugs (even for the same user as the next time they launch their notebook server things might start or stop working because the base image changed).

---

As a point of communication style: calling this a ""fix"" isn't helpful as it implies that the current behaviour is somehow ""broken"". Which might or might not be true. So best to avoid that implying that in order to foster a good discussion.
",True,True,10,1907.1
jupyterhub_____kubespawner_____275,2018-10-24T10:03:16Z,True,jupyterhub_____kubespawner_____275_____432595272,"> Do we want to support a ""not best practice"" of using latest as a tag instead of an explicit tag?

Are you serious? The goal of the project should be to correctly reflect the k8s behavior, not to force someone's view on which practice is best.

> As a point of communication style: calling this a ""fix"" isn't helpful as it implies that the current behaviour is somehow ""broken"". 

The `help` message of the traitlet says ""For more information on image pull policy, refer to `the Kubernetes documentation <https://kubernetes.io/docs/concepts/containers/images/>`"", which implies that its intent to reflect the behavior of the `imagePullPolicy` k8s parameter. But omitting `imagePullPolicy` in the .yaml-file and using the `:latest` tag is not the same as using the `:latest` tag and not setting the `image_pull_policy`. So `image_pull_policy` is obviously broken.

> best to avoid that implying that in order to foster a good discussion.

Did you adopt some brain-damaged CoC forbidding calling bugs ""bugs""? How should I call them now? ""Alternatively correct behavior""?",True,True,10,1907.1
jupyterhub_____kubespawner_____275,2018-10-24T10:57:06Z,True,jupyterhub_____kubespawner_____275_____432610412,"Thank you for this PR @BerserkerTroll! I did not know about this behavior before and I always appreciate learning more about kubernetes.

**Technical summary based on my understanding:**
Kubespawner is currently always applying a `imagePullPolicy` to the generated pod spec since we have a truthy default value for it (`IfNotPreset`). To supply a default value like this to the pod spec is not a common practice within kubespawner. Typically kubespawner omits details not explicitly configured!

---

I think it makes sense to not specify it in the generated pod spec due to this alone, and especially since the omitting of the pull policy in the pod spec can enable the dynamic behavior as @BerserkerTroll described where the actual pull policy depends on the tag of the image.",True,True,10,1907.1
jupyterhub_____kubespawner_____275,2018-10-24T11:18:30Z,True,jupyterhub_____kubespawner_____275_____432616015,">  To supply a default value like this to the pod spec is not a common practice within kubespawner. Typically kubespawner omits details not explicitly configured!

Yes. Even more obvious argument would be that `V1Container` constructor's `image_pull_policy` parameter has the default value `None` (https://github.com/kubernetes-client/python/blob/3fb2be14e18d84edef094bbd908b6bb3e39aafe6/kubernetes/client/models/v1_container.py#L81)
I don't think `KubeSpawner` ever had the intent to supply default config values different from k8s API default values.",True,True,10,1907.1
jupyterhub_____kubespawner_____275,2018-10-24T21:33:29Z,True,jupyterhub_____kubespawner_____275_____432836131,"Hi @BerserkerTroll , thanks for your contributions and your thoughts. I'd like to quickly highlight some of the main points of the [Jupyter community Code of Conduct](https://github.com/jupyter/governance/blob/master/conduct/code_of_conduct.md).

* Be friendly and patient.
* Be welcoming.
* Be considerate. 
* Be respectful. 
* Be careful in the words that you choose.

Suggesting the package is broken or suggesting that the project's decisions are ""brain damaged"" is not constructive. Please keep a positive and constructive tone when you engage with this community.",True,True,10,1907.1
jupyterhub_____kubespawner_____275,2018-10-24T23:56:58Z,True,jupyterhub_____kubespawner_____275_____432867070,"The funny thing is that this is not the first commit/PR having the ""fix"" word in its title, but it looks like it is the first one (I didn't check all of them) where this word caused such a reaction. So I conclude that the reason is not the word, but me. And the ""F"" word in the title is just a far-fetched reason.",True,True,10,1907.1
jupyterhub_____kubespawner_____275,2018-10-25T00:17:10Z,True,jupyterhub_____kubespawner_____275_____432870485,"Sorry you feel that way @BerserkerTroll - to be transparent, these are your comments that raised a flag in my mind:

> Are you serious? The goal of the project should be to correctly reflect the k8s behavior, not to force someone's view on which practice is best.

> Did you adopt some brain-damaged CoC forbidding calling bugs ""bugs""? 

",True,True,10,1907.1
jupyterhub_____kubespawner_____275,2018-10-25T03:33:08Z,True,jupyterhub_____kubespawner_____275_____432902668,"Thanks for raising this @choldgraf.

I struggled with this thread, communication in text messages is so extreamly limited and challenging.

I've learned more about myself. I mean to address something similar without fail next time and not become a passive bystander.

:heart:",True,True,10,1907.1
jupyterhub_____kubespawner_____275,2018-10-25T06:16:51Z,True,jupyterhub_____kubespawner_____275_____432928108,"Hi folks. I've gone ahead and locked this PR so all can pause communication here for a few days. 

All, this is a gentle reminder to reflect that the written word loses tone and context. Here's a few tips that I recently shared on another project.

> Just a reminder about the difficulty of email negotiation [1]:

> Email negotiations are also fraught with misunderstanding, both because emotion and tone are difficult to convey accurately and because parties neglect to consider the other side’s perspective. Notably, email communicators 1 are largely unaware of their limitations.

> The following tips may help [2]:

> **Stamp out conflict.** When rudeness is encountered, or you are angry, don’t respond immediately and don’t respond in kind. Instead, take a short break, and then contact your counterpart by phone, or email a simple statement of concern and schedule a face-to-face meeting as soon as possible. Conflict with emotional intensity is rarely ever resolved over email.
> **Ask more questions, not less.** There is a tendency to limit your questions over email because it appears tedious. Don’t fall into this trap. To avoid lengthy and exhausting lists, start with broad questions, intersperse phone conversations to discuss the answers, and use shorter emails to group follow-up questions by topic.
> **Keep the climate positive.** Maintain a friendly tone in emails. Interpret e-mail messages with caution and sensitivity, and leave room for personality, style and cultural differences. Make sure to clarify any ambiguities right away. And remember to use generally accepted best practices in email etiquette.

[1] https://www.pon.harvard.edu/daily/conflict-resolution/email-more-cons-than-pros/
[2] https://www.watershedassociates.com/learning-center-item/negotiating-over-email.html ",True,True,10,1907.1
nestjs_____typeorm_____27,2018-10-25T09:41:28Z,True,nestjs_____typeorm_____27_____432985114,"The solution posted above by @fwoelffel is really clean and nice. 
I'm going to close this PR now, as we have the solution above.",True,True,25,905236.35
selfagency_____microsoft-drop-ice_____345,2018-10-26T04:14:47Z,True,selfagency_____microsoft-drop-ice_____345_____433280842,gotta love when folks who advertise themselves as devout christians hate on refugees,True,True,3,44160.76666666667
selfagency_____microsoft-drop-ice_____344,2018-10-26T04:16:16Z,True,selfagency_____microsoft-drop-ice_____344_____433281066,"way to be a piece of 💩 dude
",True,True,3,44208.083333333336
Cynthesize/backend/23,2018-10-26T19:30:40Z,False,5bd36c946480fdfa81841c9d,Please add permission_classes  and define serializer here itself.,True,False,7,796.4
Cynthesize/backend/23,2018-10-26T19:31:06Z,False,5bd36cab6480fdff25b349d5,This should be defined upwords,True,False,7,796.4
Cynthesize/backend/23,2018-10-27T05:46:57Z,False,5bd402bc6480fdce6ad277b7,"Default permission class from settings is already applied here.
![screenshot from 2018-10-27 11-23-01](https://user-images.githubusercontent.com/21157929/47600183-c1a95c80-d9da-11e8-8eb3-e2d7b578425a.png)

![screenshot from 2018-10-27 11-17-10](https://user-images.githubusercontent.com/21157929/47600122-ee10a900-d9d9-11e8-90a6-84df24c14f28.png)
",True,False,7,796.4
Cynthesize/backend/23,2018-10-27T05:50:10Z,False,5bd3fde36480fdcf1f3a44f0,Again this is an API view and to update upvotes IdeaSerializer needs to be passed the updated count.,True,False,7,796.4
Cynthesize/backend/23,2018-10-27T05:53:28Z,False,5bd402ac6480fdcc8210e4b5,"Are you able to make a successful query with this? 
Please pull the code for frontend and try to see if you make a successful request by pressing the like button. The service currently adds the access token automatically.",True,False,7,796.4
Cynthesize/backend/23,2018-10-27T05:55:47Z,False,5bd3ff1c6480fdccacd1208b,"The API seems to work fine, please mention the endpoint used.",True,False,7,796.4
Cynthesize/backend/23,2018-10-27T08:47:04Z,False,5bd42d026480fdced4e20a58,"@agbilotia1998 Please add the ""user_id"": bool field in the response to this endpoint. This would be then used to update button",True,False,7,796.4
LambdaSchool/Sprint-Challenge--JavaScript/804,2018-10-29T02:52:13Z,False,5bd677126480fdedf64bdafd,"### Objective

- Student should be able to use let, const, var and demonstrate their differences.
- Student should be able to create and use object literals as well as describe object properties and methods
- Student should be able to create and use arrays as well as array properties and array methods
- Student should be able to describe and demonstrate the differences between `function scope` and `block scope`
- Student should be able to describe what closure is, how closure is created in a program and why it is important to have different types of `scope`
- Student should be able to demonstrate the proper use a of a callback function by passing a function to another function as a parameter
- Student should be able to demonstrate ability to use `.map` `.reduce` `.filter` and describe their use cases
- Student should be able to explain the four principles of the 'this' keyword and demonstrate each explanation with an example of their uses
- Student should be able to describe, and use prototypes, constructor functions the new keyword, and pseudo-classical inheritance to build a small object based video game
- Student should be able to describe and demonstrate how class syntax works.
- Student should be able to convert a pseudo classically instantiated program into class syntax

### MVP
**Objectives**

- [x] Questions
- [x] classes.js
- [x] functions.js
- [x] objects-arrays.js
- [x] prototypes.js

### Stretch
**Goals**

- [x] classes.js stretch
- [x] objects-arrays.js stretch

### Great
- Nice job using the arrow function syntax throughout the sprint challenge!
- Thanks for showing your work prior to simplification on the Classes challenge.
- Your code is always very readable, keep it up!

### Requests for Improvement
- In your objects-arrays.js file for Arrays Request 3, you're returning an object instead of the university names. 
- In your objects-arrays.js file for Advanced Arrays Request 3, you're returning an object instead of the animal names. 
- Make sure to do typo checks! For example, ""universitiyArray"" in objects-arrays.js file for Arrays Request 3 could cause issues down the line.

### Commits
- Great!

### Rating: 3",True,False,1,0.0
theia-ide/theia/3215,2018-10-29T08:47:03Z,False,5bd6cf276480fd1f54cfd497,We could implement `isEnabled` and `isVisible` in the same way for generic restart command that it is not visible while a server is restarting.,True,False,10,17040.666666666668
theia-ide/theia/3215,2018-10-29T19:09:36Z,False,5bd75c246480fd689e210fc3,I'll do that.,True,False,10,17040.666666666668
theia-ide/theia/3215,2018-10-29T20:19:50Z,False,5bd76c9a6480fd659aad676f,"Updated.  Please merge when you are happy with it (according to @marcdumais-work's interpretation of the Eclipse rules, only committers of the soon-to-be Eclipse project should press the merge button).",True,False,10,17040.666666666668
jameslzhu/alpm/1,2018-10-31T19:24:28Z,False,5bda01f36480fd66ebabf944,"UPD: or actually better, the code can have less changes by using imports like `use libalpm_fork as libalpm`.",True,False,2,8.233333333333333
jameslzhu/alpm/1,2018-10-31T19:32:42Z,False,5bda04906480fd656b00c04d,UPD: it seems that the original author wasn't contacted yet. I'll try my luck with notifying him and asking to make a release first then...,True,False,2,8.233333333333333
tonymai/jenkins-bitbar-plugin/1,2018-10-31T22:22:11Z,False,5bda2d846480fd6a94b7e529,"No need to have an else statement here, as it will return `nil` when it doesn't satisfy the `if` condition",True,False,1,0.0
rust-lang_____rfcs_____2544,2018-11-03T19:02:45Z,True,rust-lang_____rfcs_____2544_____435612807,"My ideal syntax for non-implicit generic parameters is `size_of(T)`.
That is, like Agda, Idris, Lean, etc. you'd have implicit and explicit parameters, and Rust's current generics would be implicit, unless they cannot be deduced from the signature (e.g. `size_of`).

I think it might even be backwards-compatible to allow both `size_of::<T>()` and `size_of(T)`.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-11-06T07:30:20Z,True,rust-lang_____rfcs_____2544_____436156511,"I feel this is yet another recipe for disaster. The parser of Rust isn't exactly simple already, and making it do what is basically (even if not *technically*) semantic analysis seems like we are throwing all the benefits of a well-separated parsing and sema phase right out of the window. (Arguably, this is even worse than some of the proposals requiring unbounded lookahead… at least those are all purely about syntax.)

And again, there's the human factor: given that the turbofish serves the purpose of disambiguation, it actually *helps* readers' internal parsers as well. I'm very glad there's some visual indication within an expression to tell me when something is a generic type argument. Losing that indication would actually make code harder to follow.

Please, throw the turbofish back to the pond. It might fulfill three of your wishes once.
",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-11-06T09:50:13Z,True,rust-lang_____rfcs_____2544_____436193369,"> I feel this is yet another recipe for disaster. The parser of Rust isn't exactly simple already, and making it do what is basically (even if not technically) partial semantic analysis seems like we are throwing all the benefits of a well-separated parsing and sema phase right out of the window. (Arguably, this is even worse than some of the proposals requiring unbounded lookahead… at least those are all purely about syntax.)

This is a somewhat common view about syntax and grammars, that I disagree with, and which, dismisses CFGs in favor of some subset thereof, dragging language design along with it.
I think the only reason it has stuck around is because tools kept the limitations and stopped evolving - having to generate C as a prerequisite didn't help anyone either.

We ended up with mostly (E)BNF and various sub-CFG LL and LR variants, which is pretty sad IMO.

An algorithm like GLL (or GLR, if you don't mind your parser being a black box) can easily parse the `<` as both comparison and generic argument start, and allow choosing what to do in case both worked.
In fact, https://github.com/rust-lang-nursery/wg-grammar/pull/13 does just that, as it's *less work* than encoding the current rules (we'll have to do that anyway, but not to start with).",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-11-06T10:04:04Z,True,rust-lang_____rfcs_____2544_____436197670,"> dragging language design along with it

That's a very strong assertion when the price to pay is only the typing of two colons sometimes.

And again, I get that it's technically possible or not even ""difficult"" (for some subjective definition of difficult) to do this. It still doesn't address the concern of readability by people, nor the fact that it's still just a partial solution. To me, that is not worth basically *any* additional complexity. I'm not an LR/LL zealot – I just think that in this case, the merits don't weigh up with the downsides.

Technically, there already exist smallish hacks in the grammar and parser, e.g. lexing `>>` as right shift vs. two closing angle brackets needs feedback from the parser to the lexer and is solved by pushing back half of it (a single `>`) to the list of yet unparsed tokens if it's in a generic type context. It's a very local rule which of which a correct implementation is hard to mess up, almost trivial. In comparison, the turbofish is far from this low level of additional complexity, but the gain is similar (IMO it's even smaller, because it's needed less often than one or more level of nested generic arguments), so the situation is disproportionate.
",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-11-06T10:19:52Z,True,rust-lang_____rfcs_____2544_____436202518,"> That's a very strong assertion

Not anymore than ""recipe for disaster"". There are many hacks in the Rust parser that could've been ""simply"" solved by ""use GLL and keep the grammar simple while not compromising on ergonomics"".

> Technically, there already exist smallish hacks in the grammar and parser, e.g. lexing `>>` as right shift vs. two closing angle brackets needs feedback from the parser to the lexer and is solved by pushing back half of it (a single `>`) to the list of yet unparsed tokens if it's in a generic type context. 

This is a solved problem, you include contextual information (""is this token joined to the next one"") in each token, so `>>` is ""less-than-joined followed by (less-than-joined or less-than-alone)"".
Or if you don't have a separate lexer, you just write `"">>""` in the grammar.
(in the Rust grammar linked above, I also write that, but it gets converted into the token thing)

> nor the fact that it's still just a partial solution

How so? If we wanted, we could remove `::<` from the language (in an edition, that is).
Then `(f<a, b>(c))` could be made unambiguous by writing `((f<a, b>)(c))`.
(not that I necessarily think that's much nicer, but it an option)",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-11-06T12:13:28Z,True,rust-lang_____rfcs_____2544_____436231934,">> nor the fact that it's still just a partial solution
>
> How so? If we wanted, we could remove `::<` from the language (in an edition, that is).
> Then `(f<a, b>(c))` could be made unambiguous by writing `((f<a, b>)(c))`.
> (not that I necessarily think that's much nicer, but it an option)

I think the point is the same I was trying to make above: even for a
human reader, it's easier to *read* with a visual indication that
something is a function vs. that something is a type.

Even if we only consider user-facing ergonomics (and dismiss the
argument I made above about vim's parser being unable to parse this
syntax that hasn't been answered):
 * The `f::<T, U>()` syntax requires a one-time rustc error for someone
   who comes from C++. From then on, it's easy to remember it (I came to
   rust from ~8 years of mostly C++, and followed exactly this path)
 * The `f<T, U>()` is ambiguous for the human reader forever. I have to
   actually use my brain to parse this vs. a comparison, while I'd
   rather have it used to understand the code

Regardless of whether this RFC is implemented, I know I personally won't
allow code without the turbofish to sneak in my projects, for the
reasons cited above. So I'd rather it didn't make it in at all, so that
external tools that don't bind to rustc's parser can continue to support
Rust properly :)
",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-11-06T13:29:13Z,True,rust-lang_____rfcs_____2544_____436252415,"> I think the point is the same I was trying to make above: even for a
human reader, it's easier to *read* with a visual indication that
something is a function vs. that something is a type.

I disagree with this as a universal statement: I don't think it's generally true that removing `::` makes it harder to read. Some people might find it easier to read with `::`, but the converse is also true. Unless there's evidence to suggest this, it comes down as stylistic preference. I definitely prefer the versions without `::`.

> * The `f<T, U>()` is ambiguous for the human reader forever. I have to
   actually use my brain to parse this vs. a comparison, while I'd
   rather have it used to understand the code

It'd be good to have some concrete examples of (non-malicious) code where the result is unintuitive after allowing turbofish to be optional. Considering the naming conventions for types vs variables are different, the examples I've encountered make it obvious which is which.

> so that external tools that don't bind to rustc's parser can continue to support Rust properly :)

Rust's grammar is continually changing. Any language change that modifies the grammar requires every independent parser to be updated. There is no reason to distinguish turbofish over any other such change.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-11-06T14:25:28Z,True,rust-lang_____rfcs_____2544_____436270079,">> * The `f<T, U>()` is ambiguous for the human reader forever. I have to
>    actually use my brain to parse this vs. a comparison, while I'd
>    rather have it used to understand the code
>
> It'd be good to have some concrete examples of (non-malicious) code
> where the result is unintuitive after allowing turbofish to be
> optional. Considering the naming conventions for types vs variables
> are different, the examples I've encountered make it obvious which is
> which.


The following code is an example:
```rust
if f<T, U>() {
   foo()
}
```

It is not unintuitive after having thought about it, but when I read it,
it took me a half-second to read `f<T` then fallback to “oh no it's a
function call” when I read the rest.

And the more complex the example, the more likely confusion will likely
come.

By the way, you yourself mention “(non-malicious)”. Underhanded C
contests exist for a reason: preventing introduction of backdoors by
attackers who may even be crate authors trying to escape reviews. I
don't think adding possibilities for underhanded Rust would be a good
thing. Thank you for this argument, I hadn't thought about it :)

>> so that external tools that don't bind to rustc's parser can continue
>> to support Rust properly :)
>
> Rust's grammar is continually changing. Any language change that
> modifies the grammar requires every independent parser to be
> updated. There is no reason to distinguish turbofish over any other
> such change.

One reason is that Rust is still in a class of grammars that can be
parsed by most parsers, while the proposed change would take it out of
it (case in mind: vim's syntax highlighter).

This is a choice that can be made, for sure. But for something that
brings little-to-negative benefit? As you say yourself,

> it comes down as stylistic preference

Should Rust, for a stylistic preference and a one-time error for people
who come from C++ background, ban a whole range of external parsers and
increase the potential for underhanded Rust?

If you think that yes, then I guess our priorities aren't in match, and
we aren't going to agree anyway :)

BTW, I'm sorry if I missed an argument for which no-turbofish would
help! I put all I could remember.
",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-11-06T14:32:58Z,True,rust-lang_____rfcs_____2544_____436272710,"> It is not unintuitive after having thought about it, but when I read it,
it took me a half-second to read `f<T` then fallback to “oh no it's a
function call” when I read the rest.

The first clue is the lack of spaces around `<`, the second clue is the `>` (which I ""read"" the same time as the `<`, it takes effort to not take in the whole line at once).

> One reason is that Rust is still in a class of grammars that can be
parsed by most parsers, while the proposed change would take it out of
it (case in mind: vim's syntax highlighter).

I think that's something interesting for @rust-lang/wg-grammar to compile information about: what are the inherent limitations of all the tools expected to parse Rust?
And do we want to limit ourselves to that, or switch to ""CFG modulo raw strings""?

(not that I think a non-full-language-plugin syntax highlighter should parse a language, or do anything other than basic lexing, but that's another thing)",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-11-06T16:15:30Z,True,rust-lang_____rfcs_____2544_____436311434,"> 
> 
> > how hard IDE support for this would be.
> 
> Not a problem at all.

For what IDE? Clearly vim would have problems, so this blanket claim is false even for the parsers already mentioned, and others could have problems as well. I know that when I edit C# code with emacs, it frequently gets confused by `<` and `>` in expressions and thinks there's a bracket mismatch.

Rust's grammar was constrained for a reason -- ease of unambiguous parsing. That reason is being ignored here. It's unfortunate that, because of the choice of `<>` to bracket generic parameters, the Rust grammar would be ambiguous without the turbofish, but it is, and it would be a serious mistake to remove the wisely placed constraint on the grammar to avoid something that rarely occurs and is really no big deal when it does.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-11-06T16:18:35Z,True,rust-lang_____rfcs_____2544_____436312595,"> There is no reason to distinguish turbofish over any other such change.

This is false, as has been repeatedly noted.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-11-06T17:39:55Z,True,rust-lang_____rfcs_____2544_____436341820,"> I think that's something interesting for @rust-lang/wg-grammar to compile information about: what are the inherent limitations of all the tools expected to parse Rust?

I work on the syntax highlighting for Sublime, which uses a stack-based regex system similar to TextMate highlighting.  Generally it's very limited, and lives in a realm between strict lexing and full parsing.  There are significant difficulties dealing with angles in paths versus less-than/greater-than symbols, and currently the highlighting gets confused by qualified paths.  Currently it assumes you don't put spaces in paths to decide between generic args and comparison.  It's not pretty and has issues, and something I've been ignoring due to the difficulty of fixing.  Of all rust syntax, angle brackets cause me some of the greatest difficulty highlighting properly.  However, I don't think this RFC would affect Sublime's highlighting right now because it doesn't treat turbofish specially, but it probably should.  
",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-11-06T19:13:28Z,True,rust-lang_____rfcs_____2544_____436373232,"@jibal @ehuss I keep being surprised by this, because I've only used editors which have regex-based syntax highlighting and don't really need to tell apart expressions from types.
Whereas I consider full IDE support for a language (e.g. through a plugin talking to a language server) separate, and in that case the language plugin can provide *semantic* highlighting.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-11-06T19:48:31Z,True,rust-lang_____rfcs_____2544_____436384831,"> 
> 
> @jibal @ehuss I keep being surprised by this, because I've only used editors which have regex-based syntax highlighting and don't really need to tell apart expressions from types.
> Whereas I consider full IDE support for a language (e.g. through a plugin talking to a language server) separate, and in that case the language plugin can provide _semantic_ highlighting.

Editors do need to tell expressions from types, if they color them differently. And again, editors do bracket matching, and so they need to distinguish a `<` or `>` that needs to be matched from one that doesn't. People will get surprised by their erroneous assumptions, and the programmer's experience will suffer from it.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-11-06T20:07:28Z,True,rust-lang_____rfcs_____2544_____436390745,"> The first clue is the lack of spaces around `<`

Please don't use that argument in a language where whitespace around operators doesn't make a semantic difference. You can *very* realistically come across ill-formatted/non-formatted code (or, God forbid, even code with different conventions than you are used to!), so readers shouldn't be required to rely on such a fragile dimension of the code.
",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-11-06T20:10:07Z,True,rust-lang_____rfcs_____2544_____436391571,"> For what IDE? Clearly vim would have problems, so this blanket claim is false even for the parsers already mentioned, and others could have problems as well. I know that when I edit C# code with emacs, it frequently gets confused by < and > in expressions and thinks there's a bracket mismatch.

Doesn't C++ have the same problem? I don't recall ever running into this, and I use vim for everything. That said, I would like to be 100% sure that no problems will arise in this aspect. I would be extremely unhappy if this RFC causes me to not be able to use vim.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-11-06T20:18:10Z,True,rust-lang_____rfcs_____2544_____436394047,"> Doesn't C++ have the same problem?

Possibly, but I don't write much C++. And there are far more emacs users who edit C++ than C# and have been doing so longer, so the emacs parser for C++ has probably had a lot more work on it. I don't use vim so I have no relevant experience with it.

> I don't recall ever running into this, and I use vim for everything. That said, I would like to be 100% sure that no problems will arise in this aspect. I would be extremely unhappy if this RFC causes me to not be able to use vim.

I use emacs even with the parsing problem ... I just have to revert the buffer when it gets confused.  But ""not being able to use"" is far too high a bar ... ""doesn't always do the right thing"" is already inadequate, and fails your ""100% sure"". And it isn't a matter of what you or I have encountered or can tolerate, it's the effect on the whole universe of Rust users. I think this is a risky change with very little payoff ... and others above have made this point in more detail.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2018-11-06T20:52:13Z,True,rust-lang_____rfcs_____2544_____436404172,"> The first clue is the lack of spaces around `<`

Note that the ""official"" Rust style has no space before `<` but *can* have space after it, similar to `(`, when the list of generic arguments needs to be split into multiple lines.",True,True,268,711818.1666666666
Metastruct_____garrysmod-chatsounds_____186,2018-11-08T20:46:35Z,True,Metastruct_____garrysmod-chatsounds_____186_____229503090,,True,True,8,53.05
Metastruct_____garrysmod-chatsounds_____186,2018-11-08T21:13:26Z,True,Metastruct_____garrysmod-chatsounds_____186_____437157903,Why is this needed??,True,True,8,53.05
Metastruct_____garrysmod-chatsounds_____186,2018-11-08T21:16:40Z,True,Metastruct_____garrysmod-chatsounds_____186_____437158897,"In my eyes, it is not.",True,True,8,53.05
Metastruct_____garrysmod-chatsounds_____186,2018-11-08T21:16:53Z,True,Metastruct_____garrysmod-chatsounds_____186_____437158965,????,True,True,8,53.05
Metastruct_____garrysmod-chatsounds_____186,2018-11-08T21:20:28Z,True,Metastruct_____garrysmod-chatsounds_____186_____437159968,Seems pointless - but there is no reason to not have it? *shrug*,True,True,8,53.05
Metastruct_____garrysmod-chatsounds_____186,2018-11-08T21:31:44Z,True,Metastruct_____garrysmod-chatsounds_____186_____232068103,Weapons policy???,True,True,8,53.05
Metastruct_____garrysmod-chatsounds_____186,2018-11-08T21:35:30Z,True,Metastruct_____garrysmod-chatsounds_____186_____437164390,stop using a template CoC and doing this meme for something completely irrelevant,True,True,8,53.05
Metastruct_____garrysmod-chatsounds_____186,2018-11-08T21:39:38Z,True,Metastruct_____garrysmod-chatsounds_____186_____437165589,Well this meme is boring already,True,True,8,53.05
awesomeWM_____awesome_____2477,2018-11-10T20:32:47Z,True,awesomeWM_____awesome_____2477_____229911761,"As per https://github.com/awesomeWM/awesome/issues/2476

Several methods...
  set_markup
  set_text
  set_ellipsize
  set_wrap
  set_valign
  set_align
  set_font",True,True,19,2105.366666666667
awesomeWM_____awesome_____2477,2018-11-10T20:40:04Z,True,awesomeWM_____awesome_____2477_____437619679,"# [Codecov](https://codecov.io/gh/awesomeWM/awesome/pull/2477?src=pr&el=h1) Report
> Merging [#2477](https://codecov.io/gh/awesomeWM/awesome/pull/2477?src=pr&el=desc) into [master](https://codecov.io/gh/awesomeWM/awesome/commit/6cdd737c4a4fbf4b8702432dc420529e26b1174b?src=pr&el=desc) will **increase** coverage by `<.01%`.
> The diff coverage is `100%`.

```diff
@@            Coverage Diff             @@
##           master    #2477      +/-   ##
==========================================
+ Coverage    84.2%   84.21%   +<.01%     
==========================================
  Files         479      479              
  Lines       33211    33218       +7     
==========================================
+ Hits        27966    27973       +7     
  Misses       5245     5245
```

| Flag | Coverage Δ | |
|---|---|---|
| #c_code | `72.71% <ø> (ø)` | :arrow_up: |
| #functionaltests | `72.71% <100%> (ø)` | :arrow_up: |
| #lua53 | `87.33% <100%> (ø)` | :arrow_up: |
| #samples | `71.18% <100%> (+0.01%)` | :arrow_up: |
| #unittests | `58.2% <100%> (+0.03%)` | :arrow_up: |

| [Impacted Files](https://codecov.io/gh/awesomeWM/awesome/pull/2477?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [lib/wibox/widget/textbox.lua](https://codecov.io/gh/awesomeWM/awesome/pull/2477/diff?src=pr&el=tree#diff-bGliL3dpYm94L3dpZGdldC90ZXh0Ym94Lmx1YQ==) | `93.95% <100%> (+0.29%)` | :arrow_up: |
",True,True,19,2105.366666666667
awesomeWM_____awesome_____2477,2018-11-10T21:02:06Z,True,awesomeWM_____awesome_____2477_____437621008,"The official way to access those fields is using the property like `my_textbox.markup = ""<b>Awesome!</b>""`. I get that you are trying to allow daisy chaining setters, but that both undocumented, undocumentable and the only module that would allow such construct.

So, why is this an improvement? I mean, if everything in Awesome was patched to support this and it was enforced but some linting or meta tests, I guess it would be fine-ish, even if a little intrusive change. However this brings the corner case where a setter has to return an error code or a boolean confirmation. In that case you would have daisy-chainable setters mixed with error returning setters and it would be very confusing. In that case, it means every property would need to be documented whether or not it allows daisy-chaining. Yet the documentation barely mention the explicit setter exist at all (on purpose).

I am not rejecting this PR, but again this needs more discussion and a plan for testing and consistency across the whole API. I don't see this as an improvement, but that may just be that my coding style isn't compatible with it and all the new kids program this way due to some web framework and I am old. That's not a logical argument, so lets keep this focused on facts rather than personal preferences.",True,True,19,2105.366666666667
awesomeWM_____awesome_____2477,2018-11-10T22:01:22Z,True,awesomeWM_____awesome_____2477_____437624710,"The reason I found this is I tried...

    local textbox = wibox.widget.textbox( ""Hi"" ):set_font( font )

Why did I try it...

    It is, dare I say, normal (the whole lua stirng library?) 

What would I rather have in my code...

    local textbox = wibox.widget.textbox( ""Hi"" ):set_font( font )

_or_

    local textbox = wibox.widget.textbox( ""Hi"" )
    textbox:set_font( font )
",True,True,19,2105.366666666667
awesomeWM_____awesome_____2477,2018-11-10T22:10:39Z,True,awesomeWM_____awesome_____2477_____437625380,"As to the bigger picture...

Setters that need to return a value...

    My 2c = Don't expose them _or_ don't call them ""set_""

Are your right again - there definitely are more cases [two methods I didn't touch didn't start with set / both seemed impossible to find in the doco.] 

On to documentation - The more the merrier - I know it's a pain for the developer, but it helps the user and I can categorically state that it needs consistency (read the code is what I'm doing and you know what that means ;-)
",True,True,19,2105.366666666667
awesomeWM_____awesome_____2477,2018-11-11T00:05:37Z,True,awesomeWM_____awesome_____2477_____437631912,"Just found a condition I really could do with a return value...

_ = state and widget:set_fg( fg_normal ) or widget:set_fg( fg_focus )

not possible without a return value",True,True,19,2105.366666666667
awesomeWM_____awesome_____2477,2018-11-11T01:08:12Z,True,awesomeWM_____awesome_____2477_____437634991,"> _ = state and widget:set_fg( fg_normal ) or widget:set_fg( fg_focus )

    widget.fg = state and fg_normal or fg_focus

Plus it even allows to do

    widget.fg = state and fg_focus or widget.fg

and

    widget1.fg, widget2.fg = fg_focus, fg_focus

> local textbox = wibox.widget.textbox( ""Hi"" ):set_font( font )

The newer widgets use an `args` Lua format so you can do

    local s = wibox.widget.separator {
        thickness = 42,
        color     = ""#ff0000""
    }

Which is Lua (and to some extent Python) official way to use named parameters. It is both cleaner and more consistent. More and more widgets are ported to this syntax in every release. The `textbox` will eventually get there. Otherwise the alternative syntax is already supported for the textbox:

    local s = wibox.widget {
        text   = ""foo"",
        fg     = ""#ff0000"",
        widget = wibox.widget.textbox 
    }

Daisy chaining like you propose is a JavaScript hack for a misguided programing language.


> On to documentation - The more the merrier - I know it's a pain for the developer, but it helps the user and I can categorically state that it needs consistency (read the code is what I'm doing and you know what that means ;-)

Our documentation has an enormous time investment in it. It also have been rewritten some time ago to make things consistent. The fact that getters and setters are not documented is because they were **removed** from the documentation. Other other components such as the widget private variable and ""interface"" methods such as `draw` have also been removed. This was done on purpose to focus on the property driven API.",True,True,19,2105.366666666667
awesomeWM_____awesome_____2477,2018-11-11T02:21:19Z,True,awesomeWM_____awesome_____2477_____437637940,"I tried for half the night to do this...
widget.fg = state and fg_normal or fg_focus

only success was when I found the ""set_""

Hence why I asked the question - what do you thin of this... Uli was not concerned so I put it forward with justifications 

Not going to debate languages or styles - just what I've experienced",True,True,19,2105.366666666667
awesomeWM_____awesome_____2477,2018-11-11T02:24:51Z,True,awesomeWM_____awesome_____2477_____437638084,"> only success was when I found the ""set_""

Any self contained example of this? It is used in thousand of places in the code and works",True,True,19,2105.366666666667
awesomeWM_____awesome_____2477,2018-11-11T04:18:05Z,True,awesomeWM_____awesome_____2477_____437642587,"I could very well be doing it wrong...

a) Don't believe textboxes have this anyway
	local textbox = wibox.widget.textbox( ""?"" )
	textbox:bg = ""#FFFFFF""

b) Seems to me the properties are protected 
function background:set_bg(bg)
    if bg then
        self._private.background = color(bg)
    else
        self._private.background = nil
    end
    self:emit_signal(""widget::redraw_needed"")
    return self
end

Either way - As you noted at the start, your not for or against (back then at least) - lets see what a few days thought has on it

Gotta fly (literally) - will check in in a couple",True,True,19,2105.366666666667
awesomeWM_____awesome_____2477,2018-11-11T06:51:33Z,True,awesomeWM_____awesome_____2477_____437647919,"    textbox.bg = ""#FFFFFF""",True,True,19,2105.366666666667
awesomeWM_____awesome_____2477,2018-11-11T18:54:52Z,True,awesomeWM_____awesome_____2477_____437694885,i think if you want quick way to set multiple values i am agree with @Elv13 what using `args` as in new widgets will be more consistent for the API (even despite the fact it will require more lines of code to implement than the proposed change),True,True,19,2105.366666666667
awesomeWM_____awesome_____2477,2018-11-12T01:06:50Z,True,awesomeWM_____awesome_____2477_____437723562,Hey - don't be so quick to close this - Lots of advantages and too many current shortcomings - please open your mind and listen to others,True,True,19,2105.366666666667
awesomeWM_____awesome_____2477,2018-11-12T01:31:32Z,True,awesomeWM_____awesome_____2477_____437726170,"> Lots of advantages

You will have to make your point very clear on this. So far what you said about this is mostly:

 * I used a web framework where this is supported
 * Strings allow immutable chains, so I propose adding a mutable chain (a well known anti-pattern)
 * I tried the property syntax but made a typo and it didn't work
 * It adds a third incompatible syntax to add many properties in the constructor
 * It allows expressions, even though the property syntax also does

Sorry, but it's not very convincing.

> too many current shortcomings

How would you address those shortcomings? So far they seems pretty much insurmountable to me. Keep in mind that there is a rather large maintenance cost associated with ""alternate ways"" to do everything. Currently me and @actionless agree that the property attribute and named property based constructor are the future we want to converge toward. Since 3.5, a large body of work ( > 10000 lines of patch) has been invested into cleaning up the API to bring consistency. All those things in the ""deprecated"" section of the doc come from that project. My vision of the future and the code I submitted to make it happen is getting closer to a property driven declarative programming syntax where you express the intent rather than the mechanics. This is what QML, CSS and SQL languages provide and I see it as a good fit for something very domain-specific like a window manager.

What you propose here goes backward toward the more inconsistent imperative APIs we had in the past. The second large challenge of what you propose is that it cannot exist in a void. It would have to be done with *everything* and enforced against regression introduced by new contribution in the CI system. This would be yet another maintenance heavy subsystem. ",True,True,19,2105.366666666667
awesomeWM_____awesome_____2477,2018-11-12T04:08:01Z,True,awesomeWM_____awesome_____2477_____437747311,"You started out by saying ""That's not a logical argument, so lets keep this focused on facts rather than personal preferences."" then soon degenerated into """"a JavaScript **hack** for a **misguided** programing language"" and now you refer to it as ""I used **a web framework**"" - Wow - I'm not trying to be rude (and if I've comes across that way I apologize) but you seem to be getting just plain nasty. 

You must think I'm active here just to make your time miserable - Far from it - As a recovered user (from back in 2012? on the old mailing list) I finally migrating into 4.2 and I'm reliving the ""new user"" experience and just sharing my learning / insights - maybe not in the way you'd like, / maybe a bit critical (particularly of the documentation) - If you take that personally - again - I apologize

I'm going to answer your allegations...

- I used a web framework where this is supported
    Never said / didn't mean that - Malicious? / Unrelated? -  Ignored
- Strings allow immutable chains, so I propose adding a mutable chain (a well known anti-pattern)
    I don't even get this - immutable chain is a Java name for a common OO technique
    Strings was just the first example that leapt to mind - maths is another
    mutable chain & anti-pattern / don't get that / Malicious? / Unrelated? -  Ignored
- I tried the property syntax but made a typo and it didn't work
    I didn't keep the actual code I used as it didn't work...
    I made the typo on the web page trying to give you an example 
    Malicious? / Sarcastic? / Unrelated? -  Ignored
- It adds a third incompatible syntax to add many properties in the constructor
    Not quite what you mean here - adds? ""set_ and ""get_"" exist!
    incompatible syntax / constructor?
- It allows expressions, even though the property syntax also does
    Property system is ok if it is there and works - I had a lot of trouble with it and fount the ""set_"" AOK

_insurmountable shortcomings?_ Unfortunately I read the above as mostly a malicious ramble - I'm just a bit slow at taking the hint?

_maintenance cost?_ Now this is a good discussion point - I  don't see having ""set_"" functions return themselves as being a major maintenance cost, - sure no change = less work than change - you may be able to explain it in more detail?

_""alternate ways"" to do everything_ - The ""set_"" & ""get_"" are already there - If I was asking to add them, then sure - it would be an alternative way - Having a return value / allowing it to chain is just an extension

_Currently me and @actionless agree that the property attribute_ - No problem with that - I had trouble and found (NOT invented) something that worked and offered what I see as a minor enhancement

_named property based constructor are the future_ - I'm guessing this falls into the same old argument I here about every suggestion : ""future plans""

_All those things in the ""deprecated"" section of the doc come from that project. My vision of the future and the code I submitted to make it happen_ - That's great - Well done - I actually appreciate it - Hope you keep up the good work - Wonder it there are others out there trying to help? 

_is getting closer to a property driven declarative programming syntax where you express the intent rather than the mechanics. This is what QML, CSS and SQL languages provide and I see it as a good fit for something very domain-specific like a window manager_ - Hmmm OO programming???

_What you propose here goes backward toward the more inconsistent imperative APIs we had in the past_ - How - ""_set"" already exists - Should I raise a PR removing it claiming that the property exists and the ""get_"" and ""set_ should NOT exist at all? - Should I raise a PR removing all property access as the ""args"" that @actionless espouses exist? Yes those were me being meant sarcastic

_The second large challenge of what you propose is that it cannot exist in a void._ - It already does - Limits can be put in place, much like you are doing now

_It would have to be done with everything and enforced against regression introduced by new contribution in the CI system. This would be yet another maintenance heavy subsystem_. - As before limits / details

.........................

I can't paste my actual code here as I'm travelling, but the gist of it was...

My first choice...

> create_object( limited_properties_here ):set_property( here):modify_behaviour( new )

Vs 

My second choice...

> create_object( limited_properties_here, PR for additional_previously _overlooked_property )

Vs

My third choice...

> create_object( limited_properties_here )
> object:set_property( here)
> object:modify_behaviour( new )

.........................

I still have no idea about the properties - From what I saw in whichever module section I was in [base?container?], the code I see seems s to have them nested under a ""_private"" which to me confirms why I could do what I tried and then... oh look - a ""set_"" and ""get_'
",True,True,19,2105.366666666667
awesomeWM_____awesome_____2477,2018-11-12T05:23:41Z,True,awesomeWM_____awesome_____2477_____437760269,">  I'm guessing this falls into the same old argument I here about every suggestion : ""future plans""

that's why i was suggesting you to start your contributions with the actual bugfixes so you will have more time to get familiar with the approaches used across the codebase instead of doing fast judgement based on particular code samples and so could better guess how new (""planned"") things could look like",True,True,19,2105.366666666667
awesomeWM_____awesome_____2477,2018-11-12T06:38:42Z,True,awesomeWM_____awesome_____2477_____437772686,that goes against the point of sharing learnings and assumes you two are the font of all wisdom,True,True,19,2105.366666666667
awesomeWM_____awesome_____2477,2018-11-12T07:19:43Z,True,awesomeWM_____awesome_____2477_____437780798,"LOL, i can recognize that abusive SJW vocabulary",True,True,19,2105.366666666667
awesomeWM_____awesome_____2477,2018-11-12T07:38:09Z,True,awesomeWM_____awesome_____2477_____437784377,instead of continuing this pointless argument please see how properties are implemented in newer widgets: https://github.com/awesomeWM/awesome/blob/master/lib/wibox/widget/progressbar.lua#L408-L417  and `args` handling: https://github.com/awesomeWM/awesome/blob/master/lib/wibox/widget/progressbar.lua#L436-L437,True,True,19,2105.366666666667
wangdoc/javascript-tutorial/77,2018-11-15T00:39:10Z,False,5becc15d6480fd6ac4585a0c,Thanks,True,False,1,0.0
vektorprogrammet/vektorprogrammet/1098,2018-11-18T19:02:16Z,False,5bf1b8676480fd6415cab12a,Staging server deployed at https://dependencies2018-11-18-20-00-05.staging.vektorprogrammet.no,True,False,1,0.0
php-fig_____fig-standards_____1120,2018-11-20T18:20:00Z,True,php-fig_____fig-standards_____1120_____232415577,,True,True,9,28566.516666666666
php-fig_____fig-standards_____1120,2018-11-20T18:22:46Z,True,php-fig_____fig-standards_____1120_____440379932,Why this change? ,True,True,9,28566.516666666666
php-fig_____fig-standards_____1120,2018-11-20T18:43:27Z,True,php-fig_____fig-standards_____1120_____440386436,What's the reasoning here?,True,True,9,28566.516666666666
php-fig_____fig-standards_____1120,2018-11-20T19:31:37Z,True,php-fig_____fig-standards_____1120_____440401748,@drupol @Jan0707 Fabien explained the reasons in this Twitter thread: https://twitter.com/fabpot/status/1064946698089365505,True,True,9,28566.516666666666
php-fig_____fig-standards_____1120,2018-11-20T19:52:46Z,True,php-fig_____fig-standards_____1120_____440408210,"I don't understand you here @fabpot: in which case(s) removing Symfony project from PHP Fig will help the interoperability and PHP standards in the future? 

Do we want to come back 6 years ago with custom autoloading, custom coding styles and custom ways to do everything ?",True,True,9,28566.516666666666
php-fig_____fig-standards_____1120,2018-11-20T20:32:18Z,True,php-fig_____fig-standards_____1120_____440419516,"> Do we want to come back 6 years ago with custom autoloading, custom coding styles and custom ways to do everything ?

Is this really about autoloading and coding style? Because Fabien's thread is clear about this: they both are great PSRs, it's mostly the ""new wave of incoming PSRs"" that's not interop and kinda breaks the initial project into a more opinionated set of rules instead of an interop one
",True,True,9,28566.516666666666
php-fig_____fig-standards_____1120,2018-11-20T21:02:59Z,True,php-fig_____fig-standards_____1120_____440428433,"@fabpot is completely correct, on all points. And to his point about PSR-7 specifically, there's actually an inherent security flaw in its design pertaining to file uploads. I tried to alert the FIG to it some years ago, but given that they [deliberately hide the GitHub issues feature from the repository](https://github.com/php-fig/http-message), I took it as a strong indicator that they don't want to know.",True,True,9,28566.516666666666
php-fig_____fig-standards_____1120,2018-11-20T21:10:25Z,True,php-fig_____fig-standards_____1120_____440430577,This isn't a place for this discussion. Please use the mailing list.,True,True,9,28566.516666666666
Azure/azure-sdk-for-java/2645,2018-11-22T08:33:51Z,False,5bf66b246480fd6636bd394d,"Build output: 
- [dist/com.microsoft.azure.batchai.v2017_09_01_preview/azure-mgmt-batchai-1.0.0-beta.pom](https://azuresdkinfrajobstore1.blob.core.windows.net/azure/azure-sdk-for-java/pullrequests/2645/dist/com.microsoft.azure.batchai.v2017_09_01_preview/azure-mgmt-batchai-1.0.0-beta.pom)
- [dist/com.microsoft.azure.batchai.v2017_09_01_preview/azure-mgmt-batchai-1.0.0-beta.jar](https://azuresdkinfrajobstore1.blob.core.windows.net/azure/azure-sdk-for-java/pullrequests/2645/dist/com.microsoft.azure.batchai.v2017_09_01_preview/azure-mgmt-batchai-1.0.0-beta.jar)
- [dist/com.microsoft.azure.batchai.v2017_09_01_preview/azure-mgmt-batchai-1.0.0-beta-sources.jar](https://azuresdkinfrajobstore1.blob.core.windows.net/azure/azure-sdk-for-java/pullrequests/2645/dist/com.microsoft.azure.batchai.v2017_09_01_preview/azure-mgmt-batchai-1.0.0-beta-sources.jar)
- [dist/com.microsoft.azure.batchai.v2017_09_01_preview/azure-mgmt-batchai-1.0.0-beta-javadoc.jar](https://azuresdkinfrajobstore1.blob.core.windows.net/azure/azure-sdk-for-java/pullrequests/2645/dist/com.microsoft.azure.batchai.v2017_09_01_preview/azure-mgmt-batchai-1.0.0-beta-javadoc.jar)
- [dist/com.microsoft.azure.batchai.v2018_03_01/azure-mgmt-batchai-1.0.0-beta.pom](https://azuresdkinfrajobstore1.blob.core.windows.net/azure/azure-sdk-for-java/pullrequests/2645/dist/com.microsoft.azure.batchai.v2018_03_01/azure-mgmt-batchai-1.0.0-beta.pom)
- [dist/com.microsoft.azure.batchai.v2018_03_01/azure-mgmt-batchai-1.0.0-beta.jar](https://azuresdkinfrajobstore1.blob.core.windows.net/azure/azure-sdk-for-java/pullrequests/2645/dist/com.microsoft.azure.batchai.v2018_03_01/azure-mgmt-batchai-1.0.0-beta.jar)
- [dist/com.microsoft.azure.batchai.v2018_03_01/azure-mgmt-batchai-1.0.0-beta-sources.jar](https://azuresdkinfrajobstore1.blob.core.windows.net/azure/azure-sdk-for-java/pullrequests/2645/dist/com.microsoft.azure.batchai.v2018_03_01/azure-mgmt-batchai-1.0.0-beta-sources.jar)
- [dist/com.microsoft.azure.batchai.v2018_03_01/azure-mgmt-batchai-1.0.0-beta-javadoc.jar](https://azuresdkinfrajobstore1.blob.core.windows.net/azure/azure-sdk-for-java/pullrequests/2645/dist/com.microsoft.azure.batchai.v2018_03_01/azure-mgmt-batchai-1.0.0-beta-javadoc.jar)
- [dist/com.microsoft.azure.batchai.v2018_05_01/azure-mgmt-batchai-1.0.0-beta.pom](https://azuresdkinfrajobstore1.blob.core.windows.net/azure/azure-sdk-for-java/pullrequests/2645/dist/com.microsoft.azure.batchai.v2018_05_01/azure-mgmt-batchai-1.0.0-beta.pom)
- [dist/com.microsoft.azure.batchai.v2018_05_01/azure-mgmt-batchai-1.0.0-beta.jar](https://azuresdkinfrajobstore1.blob.core.windows.net/azure/azure-sdk-for-java/pullrequests/2645/dist/com.microsoft.azure.batchai.v2018_05_01/azure-mgmt-batchai-1.0.0-beta.jar)
- [dist/com.microsoft.azure.batchai.v2018_05_01/azure-mgmt-batchai-1.0.0-beta-sources.jar](https://azuresdkinfrajobstore1.blob.core.windows.net/azure/azure-sdk-for-java/pullrequests/2645/dist/com.microsoft.azure.batchai.v2018_05_01/azure-mgmt-batchai-1.0.0-beta-sources.jar)
- [dist/com.microsoft.azure.batchai.v2018_05_01/azure-mgmt-batchai-1.0.0-beta-javadoc.jar](https://azuresdkinfrajobstore1.blob.core.windows.net/azure/azure-sdk-for-java/pullrequests/2645/dist/com.microsoft.azure.batchai.v2018_05_01/azure-mgmt-batchai-1.0.0-beta-javadoc.jar)
",True,False,2,3484.4333333333334
kubernetes/kubernetes/71366,2018-11-23T07:15:27Z,False,5bf7aa436480fd66ebbb5fba,"@shudipta: Adding the ""do-not-merge/release-note-label-needed"" label because no release-note block was detected, please follow our [release note process](https://git.k8s.io/community/contributors/guide/release-notes.md) to remove it.

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>",True,False,10,220183.41666666666
kubernetes/kubernetes/71366,2018-11-23T07:15:32Z,False,5bf7aa436480fd66ebbb5fbb,"[APPROVALNOTIFIER] This PR is **NOT APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/71366#"" title=""Author self-approved"">shudipta</a>*
To fully approve this pull request, please assign additional approvers.
We suggest the following additional approver: **deads2k**

If they are not already assigned, you can assign the PR to them by writing `/assign @deads2k` in a comment when ready.

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details open>
Needs approval from an approver in each of these files:

- **[pkg/kubectl/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/pkg/kubectl/OWNERS)**

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[""deads2k""]} -->",True,False,10,220183.41666666666
kubernetes/kubernetes/71366,2018-11-23T07:15:33Z,False,5bf7aa436480fd66ebbb5fbc,"Hi @shudipta. Thanks for your PR.

I'm waiting for a [kubernetes](https://github.com/orgs/kubernetes/people) member to verify that this patch is reasonable to test. If it is, they should reply with `/ok-to-test` on its own line. Until that is done, I will not automatically test new commits in this PR, but the usual testing commands by org members will still work. Regular contributors should [join the org](https://git.k8s.io/community/community-membership.md#member) to skip this step.

Once the patch is verified, the new status will be reflected by the `ok-to-test` label.

I understand the commands that are listed [here](https://go.k8s.io/bot-commands).

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>
",True,False,10,220183.41666666666
kubernetes/kubernetes/71366,2018-11-23T07:15:38Z,False,5bf7aa436480fd66ebbb5fbd,"Thanks for your pull request. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).

:memo: **Please follow instructions at <https://git.k8s.io/community/CLA.md#the-contributor-license-agreement> to sign the CLA.**

It may take a couple minutes for the CLA signature to be fully registered; after that, please reply here with a new comment and we'll verify.  Thanks.

---

- If you've already signed a CLA, it's possible we don't have your GitHub username or you're using a different email address.  Check your existing CLA data and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).
- If you signed the CLA as a corporation, please sign in with your organization's credentials at <https://identity.linuxfoundation.org/projects/cncf> to be authorized.
- If you have done the above and are still having issues with the CLA being reported as unsigned, please email the CNCF helpdesk: helpdesk@rt.linuxfoundation.org

<!-- need_sender_cla -->

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository. I understand the commands that are listed [here](https://go.k8s.io/bot-commands).
</details>
	",True,False,10,220183.41666666666
Azure/azure-sdk-for-java/2645,2018-11-24T18:38:17Z,False,5bf99bcc6480fd67611b5ab5,This PR has been merged into https://github.com/Azure/azure-sdk-for-java/pull/2162,True,False,2,3484.4333333333334
kubernetes/kubernetes/71366,2018-11-26T02:12:42Z,False,5bfb63136480fdc52f3157ed,/ok-to-test,True,False,10,220183.41666666666
kubernetes/kubernetes/71366,2018-11-26T02:40:31Z,False,5bfb63d56480fdc9feef840b,"@shudipta: The following test **failed**, say `/retest` to rerun them all:

Test name | Commit | Details | Rerun command
--- | --- | --- | ---
pull-kubernetes-integration | 7121cd2050fba73189c0a82829d6929bdecab345 | [link](https://gubernator.k8s.io/build/kubernetes-jenkins/pr-logs/pull/71366/pull-kubernetes-integration/36669/) | `/test pull-kubernetes-integration`

[Full PR test history](https://gubernator.k8s.io/pr/71366). [Your PR dashboard](https://gubernator.k8s.io/pr/shudipta). Please help us cut down on flakes by [linking to](https://git.k8s.io/community/contributors/devel/flaky-tests.md#filing-issues-for-flaky-tests) an [open issue](https://github.com/kubernetes/kubernetes/issues?q=is:issue+is:open) when you hit one in your PR.

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository. I understand the commands that are listed [here](https://go.k8s.io/bot-commands).
</details>
<!-- test report -->",True,False,10,220183.41666666666
akka/alpakka-kafka/661,2018-11-26T05:40:47Z,False,5bfb89536480fdc69b37ec14,"Also note, `lazy val` could be used if preferred.",True,False,6,1602.65
mysqljs_____mysql_____1962,2018-11-26T10:11:26Z,True,mysqljs_____mysql_____1962_____441585562,"Hi all,
Thanks for your effort!
But please merge this PR. It's been around 8 months that we have this compatibility issue with mysql 8.
Thanks 🎉",True,True,37,413793.7833333333
akka/alpakka-kafka/661,2018-11-26T15:39:49Z,False,5bfc174d6480fdc8816849a8,"These two internal functions are only conditionally called once, in one potential case
```scala
def partitionAssignedCB = getAsyncCallback[Set[TopicPartition]] 
def partitionRevokedCB = getAsyncCallback[Set[TopicPartition]]
```

The internal `ListenerCallbacks` is also only conditionally called once, in two of the three potential cases. 
```scala
 def rebalanceListener: KafkaConsumerActor.ListenerCallbacks
```

If `subscription match { case s: ManualSubscription => configureManualSubscription(s) }`  none of the above are called AFACT, why `val` it? I must be missing something :)",True,False,6,1602.65
akka/alpakka-kafka/661,2018-11-26T17:13:28Z,False,5bfc2f566480fdc69b384461,"@helena, I think I understand what @ennru is saying. Everytime a partition is assigned or revoked, the function passed in `rebalanceListener` would call `partitionAssignedCB` or `partitionRevokedCB`.
@ennru please correct me if I am wrong.
I will revert them as `val`s and move them into `rebalanceListener`",True,False,6,1602.65
akka/alpakka-kafka/661,2018-11-26T17:38:40Z,False,5bfc33236480fdcc6ef6cbb7,"@muditsin @ennru ah, I am getting familiar with this project so thank you for your patience. I dug in further to see the `getAsyncCallback` doc states that the callback `can be used asynchronously to re-enter the current [[GraphStage]] with an asynchronous notification`. Thanks 👍 ",True,False,6,1602.65
akka/alpakka-kafka/661,2018-11-27T07:28:39Z,False,5bfcf5786480fdc8cf7d9ac3,@ennru I've updated as per the comments. PTAL. :),True,False,6,1602.65
akka/alpakka-kafka/661,2018-11-27T08:23:26Z,False,5bfd00566480fdc76ca164b8,Thank you for suggesting improvements!,True,False,6,1602.65
GibbonEdu_____core_____742,2018-11-29T23:19:32Z,True,GibbonEdu_____core_____742_____234820290,"## Security Robot IP Check at Login
This feature is design to identify machines by IP address that have attempted more that 3 login (failures) within the last 20 minutes and ignore that IP Address for a maximum of 20 minutes.

The system Admin is able to whilte list IP addresses on the System Admin Setting page (Misc Section) using unique IP, subnet or partial IP addresses in a standard comma separated list. e.g 127.0.0.1, 172.16.0 and 192.168.1.1/24 are all valid. Invalid entries are ignored.

127.0.0.1 matches 127.0.0.1
172.16.0 matches 172.16.0.x
192.168.1.1.24 matches 192.168.1.x (this does a bit wise test, so 192.168.1.1/28 would match 16 machines. (Actually 15, due to match all requests on the network.)

### How was this tested?
Tested Both Locally and on Travis",True,True,3,403.2
GibbonEdu_____core_____742,2018-11-30T05:51:52Z,True,GibbonEdu_____core_____742_____443099180,"Thanks for putting this together. I notice you've introduced some new Manager classes which interact directly with the database. We've been structuring queries using Gateway classes, as these can be easily instantiated with the DI container, and help separate SQL code out of the page into a more reusable location. I find the tendency with Manager classes is they often end up breaking the goal of single responsibility, and become a catch-all for assorted domain logic.

In this case, there doesn't appear to be a gibbonLog or gibbonSettings gateway yet: you'd be welcome to add them, or I'd be happy to push them to your branch, let me know.",True,True,3,403.2
GibbonEdu_____core_____742,2018-11-30T06:02:44Z,True,GibbonEdu_____core_____742_____443100947,"I would find problem the same with Gateways,  but it is only a name, so I
will not mind.  The trick here is ONE manager PER entity.  The Gateway
functionality would be the Repository for the entity..., so it already
exist with another different name.  These are defined in the entity dcm.yml
files so that doctrine knows how to handle the fields in a table in a
database.
Looking ahead, The manager (gateway) is a single class injector that has
the entity and the repository imbedded and ready to go.  The manager does
embed a trait of standard methods to shortcut common calls such as find,
findBy, findOneBy, and others.
 Anyway, as you decide..
------------------------------------------
I greet you with the great words,
Grace and Peace

Craig Rayner
craig@craigrayner.com
Mobile: +61 456 560 018


On Fri, 30 Nov 2018 at 16:51, Sandra Kuipers <notifications@github.com>
wrote:

> Thanks for putting this together. I notice you've introduced some new
> Manager classes which interact directly with the database. We've been
> structuring queries using Gateway classes, as these can be easily
> instantiated with the DI container, and help separate SQL code out of the
> page into a more reusable location. I find the tendency with Manager
> classes is they often end up breaking the goal of single responsibility,
> and become a catch-all for assorted domain logic.
>
> In this case, there doesn't appear to be a gibbonLog or gibbonSettings
> gateway yet: you'd be welcome to add them, or I'd be happy to push them to
> your branch, let me know.
>
> —
> You are receiving this because you authored the thread.
> Reply to this email directly, view it on GitHub
> <https://github.com/GibbonEdu/core/pull/742#issuecomment-443099180>, or mute
> the thread
> <https://github.com/notifications/unsubscribe-auth/AA4FqS-5plbkU2tsiWzuSMjyL8qf3iuaks5u0Md5gaJpZM4Y6tNB>
> .
>
",True,True,3,403.2
php-fig_____fig-standards_____1120,2018-12-10T14:26:31Z,True,php-fig_____fig-standards_____1120_____445833348,Merged in 2e54756b87e895bf4e5238beafa0e20a36bad9d3 but github seems to be having issues,True,True,9,28566.516666666666
Qiskit/qiskit-tutorials/408,2018-12-12T01:26:13Z,False,5c73d5b66480fde1fedc42a2,"I think qiskit has promoted PassManager to qiskit.transpiler, you do not need to import from _passmanager.",True,False,21,108585.85
Qiskit/qiskit-tutorials/408,2018-12-12T01:27:29Z,False,5c73d5b66480fde1fedc42a3,it seems that this line is redundant?,True,False,21,108585.85
Qiskit/qiskit-tutorials/408,2018-12-12T01:30:04Z,False,5c73d5b66480fde1fedc42a4,"if you just want to get the number of parameters in the variational form, you can do `var_form.num_parameters` but I guess you would like to convey the number of amplitude in single and double excitations.",True,False,21,108585.85
Qiskit/qiskit-tutorials/408,2018-12-12T01:31:09Z,False,5c73d5b66480fde1fedc42a5,"since you have updated the way to setup quantum backend, this line could be removed to avoid confusion.",True,False,21,108585.85
Qiskit/qiskit-tutorials/408,2018-12-12T17:31:49Z,False,5c73d5b66480fde1fedc42a6,yes would rather keep that in,True,False,21,108585.85
Qiskit/qiskit-tutorials/408,2018-12-12T17:32:08Z,False,5c73d5b66480fde1fedc42a7,removed,True,False,21,108585.85
Qiskit/qiskit-tutorials/408,2018-12-12T22:16:57Z,False,5c73d5b66480fde1fedc42a8,"do you mind updating the way accessing the property of molecule info? (the newest Aqua-chemistry had updated that.)
now, you need to access it without the underscore. i.e. `molecule.num_alpha`, and all other properties.",True,False,21,108585.85
Qiskit/qiskit-tutorials/408,2018-12-12T22:25:39Z,False,5c73d5b66480fde1fedc42a9,"furthermore, for cell 16, we simplify the import path (your codes still work but there is a shorter import you can use)

cell 16
```python
from qiskit_aqua.algorithms.components.optimizers import L_BFGS_B
from qiskit_aqua.algorithms.adaptive import VQE
```

could be 
```python
from qiskit_aqua.components.optimizers import L_BFGS_B
from qiskit_aqua.algorithms import VQE
```
",True,False,21,108585.85
Qiskit/qiskit-tutorials/408,2018-12-12T22:27:12Z,False,5c73d5b66480fde1fedc42aa,"Furthermore, it seems that the figures are not in this PR as well.
LiHCompilation.png  and LiH.png.",True,False,21,108585.85
nestjs_____typeorm_____27,2018-12-14T13:08:35Z,True,nestjs_____typeorm_____27_____447320281,"It's gets worked for me, when i've added one more parameter **subscribers** to configuration object, or to ormconfig.json:
```
{
    ""type"": ""postgres"",
    ""host"": ""host"",
    ""port"": 5432,
    ""username"": ""databaseUser"",
    ""password"": ""databasePassword"",
    ""database"": ""databaseName"",
    ""entities"": [""src/**/**.entity.ts""],
    ""subscribers"": [""src/**/**.subscriber.ts""],
    ""synchronize"": ""true""
}
```

Subscriber code: 
src/subscribers/datetime.subscriber.ts
```
import { EventSubscriber, EntitySubscriberInterface, InsertEvent, UpdateEvent } from 'typeorm';
import { Injectable } from '@nestjs/common';
import { User } from '../../users/entity/user.entity';

@EventSubscriber()
@Injectable()
export class DateTimeUpdateSubscriber implements EntitySubscriberInterface<User> {
    beforeInsert(event: InsertEvent<User>) {
        console.log(`BEFORE ENTITY INSERTED: `, event.entity);
    }
    beforeUpdate(event: UpdateEvent<User>) {
        console.log(`BEFORE ENTITY UPDATED: `, event.entity);
    }
}
```

```
[System Information]
OS Version     : macOS
NodeJS Version : v11.4.0
YARN Version    : 1.12.3
[Nest Information]
typeorm version  : 5.2.2
common version   : 5.4.0
core version     : 5.4.0
```",True,True,25,905236.35
nestjs_____typeorm_____27,2018-12-14T13:17:07Z,True,nestjs_____typeorm_____27_____447322472,@whereiamagain Why do you decorate it as `Injectable` and `EventSubscriber`? ,True,True,25,905236.35
nestjs_____typeorm_____27,2018-12-14T13:19:16Z,True,nestjs_____typeorm_____27_____447323091,"> @whereiamagain Why do you decorate it as `Injectable` and `EventSubscriber`?
Oh, my mess, will update code, it's not needed, indeed.",True,True,25,905236.35
nestjs_____typeorm_____27,2018-12-14T13:24:21Z,True,nestjs_____typeorm_____27_____447324434,@whereiamagain the issue here is how to inject Nest components into your subscriber ;),True,True,25,905236.35
nestjs_____typeorm_____27,2018-12-14T13:29:20Z,True,nestjs_____typeorm_____27_____447325682,"> @whereiamagain the issue here is how to inject Nest components into your subscriber ;)

I know, but anyway, i wasn't able to find any examples with typeorm subscribers in docs, and i guess my stuff might be useful for someone like me ;)",True,True,25,905236.35
mate-desktop_____marco_____437,2018-12-15T23:21:43Z,True,mate-desktop_____marco_____437_____238937614,"#364  
most fucked-up code i've ever seen",True,True,27,4815.85
mate-desktop_____marco_____437,2018-12-15T23:26:45Z,True,mate-desktop_____marco_____437_____447605284,"> most fucked-up code i've ever seen

You speak about your own code in your pull request, right?",True,True,27,4815.85
mate-desktop_____marco_____437,2018-12-16T01:18:46Z,True,mate-desktop_____marco_____437_____447610178,yeah someone like you had cut off subwindows in xevents ,True,True,27,4815.85
mate-desktop_____marco_____437,2018-12-16T01:45:05Z,True,mate-desktop_____marco_____437_____447611163,"You speak about others code, while yours literally are worst contribution I have seen for modules I follow here...

- Useless commit message
- Commented out function call without any explanation
- There are many unrelated changes / diff
- Useless many new empty newlines
- Code does not follow coding style used in marco
- `struct t`? `gpointer b`? very meaningful... 

So yeah you have very fucked-up contribution, so fucked-up that it does not even deserve functional review. But you are lucky... I am not maintainer here.",True,True,27,4815.85
mate-desktop_____marco_____437,2018-12-16T08:32:08Z,True,mate-desktop_____marco_____437_____447625939,"Sorry, i don't review PRs with coding style issues any more.",True,True,27,4815.85
mate-desktop_____marco_____437,2018-12-16T11:27:26Z,True,mate-desktop_____marco_____437_____447635636,"with or without var names you've a little chances to understand what it does for if you didn't try to make it yourself. see how it works first , it's not for review for now .

",True,True,27,4815.85
mate-desktop_____marco_____437,2018-12-16T11:33:09Z,True,mate-desktop_____marco_____437_____447635928,"> it's not for review for now .

Then why did you open pull request? Put `WIP:` or something so others don't waste time...",True,True,27,4815.85
mate-desktop_____marco_____437,2018-12-16T11:44:22Z,True,mate-desktop_____marco_____437_____447636513,@alexeyneu - what is this supposed to do? Would you mind adding a description so that others can understand what this code does?,True,True,27,4815.85
mate-desktop_____marco_____437,2018-12-16T17:31:24Z,True,mate-desktop_____marco_____437_____447661081,"so there i've removed  stopfilter out of  gtk-proof unit . 
https://github.com/mate-desktop/marco/blob/8a2babd269066fc0a79f4bc05a07ce137567b907/src/ui/ui.c#L225  
Now gdk filter deployed by switch-handler could see mouse , really synthetic events produced by filter chain to replace real ones it blocks. After some reverse-engineering in my filter function  we could again  see original event.  
Another piece-of-code were does clean quit on mouse click ....
https://github.com/mate-desktop/marco/blob/8a2babd269066fc0a79f4bc05a07ce137567b907/src/core/display.c#L1824",True,True,27,4815.85
mate-desktop_____marco_____437,2018-12-16T17:51:17Z,True,mate-desktop_____marco_____437_____447662478,"Why are you changing `GDK_FILTER_REMOVE` to `GDK_FILTER_CONTINUE`? Why it was added in first place? Why it is obsolete and/or wrong? Does it introduce regression / can it?

> ""Ending grab op %u on window %s due to button press\n""

That if branch is supposed to end grab op, but you are removing code that does it... Would not be surprised if that introduce interesting side effects, regressions or something like that.",True,True,27,4815.85
mate-desktop_____marco_____437,2018-12-16T21:31:03Z,True,mate-desktop_____marco_____437_____447677673,The commit message of this needs to be changed to an explanation of what it is supposed to fix,True,True,27,4815.85
mate-desktop_____marco_____437,2018-12-17T15:52:01Z,True,mate-desktop_____marco_____437_____447893470,"And you have a real bug-breeder here :  
https://github.com/alexeyneu/marco/blob/6d6b7032f8fc9a5ab7ee7973aa66218607ff8ef4/src/ui/ui.c#L216  
those who interested may track its usage   
 ",True,True,27,4815.85
mate-desktop_____marco_____437,2018-12-17T15:54:19Z,True,mate-desktop_____marco_____437_____447894327,What? I don't see anything wrong with filter...,True,True,27,4815.85
OpencachingDeutschland_____oc-server3_____731,2018-12-17T19:29:24Z,True,OpencachingDeutschland_____oc-server3_____731_____239257835,"see [changelog](https://www.opencaching.de/okapi/changelog.html)

bugfix v1873 requested by mic@",True,True,6,172.4
OpencachingDeutschland_____oc-server3_____731,2018-12-17T21:21:12Z,True,OpencachingDeutschland_____oc-server3_____731_____448003104,"Ich weiß das Du nichts für aktuelle Technologien wie z.B. Composer übrig hast aber ein okapi Update läuft nun einmal darüber. Der Content-Hash fehlt in deiner manuell angepassten composer.lock siehe https://github.com/OpencachingDeutschland/oc-server3/commit/96482219a5a9bf12490158d93300a2a68596c96c

Entweder führst Du ./psh.phar update-okapi-package aus oder führst die beiden Befehle aus dieser [Datei](https://github.com/OpencachingDeutschland/oc-server3/blob/development/dev-ops/local.team-opencaching.de/actions/update-okapi-package.sh) aus.

Das Du die Unit-Tests die dadurch fehlschlagen anpassen sollst verlange ich ja noch nicht einmal von dir.",True,True,6,172.4
OpencachingDeutschland_____oc-server3_____731,2018-12-17T21:46:03Z,True,OpencachingDeutschland_____oc-server3_____731_____448010319,Ich weiß das Du nichts für aktuelle Technologien wie z.B. Composer übrig hast aber ein okapi Update läuft nun einmal darüber. Der Content-Hash fehlt in deiner manuell angepassten composer.lock siehe e8430e9a.,True,True,6,172.4
OpencachingDeutschland_____oc-server3_____731,2018-12-17T21:54:48Z,True,OpencachingDeutschland_____oc-server3_____731_____448012966,"Mein letzter Versuch, deine buggy Okapi-Unit-Tests zu korrigieren (#668), wurde von dir abgewiesen, also lass das bitte mal stecken.",True,True,6,172.4
OpencachingDeutschland_____oc-server3_____731,2018-12-17T22:11:15Z,True,OpencachingDeutschland_____oc-server3_____731_____448017986,"Peter das hat nichts mit Buggy zu tun. Wenn sich die eingesetzte Software ändert müssen Tests fehl schlagen sonst waren sie nicht gut. 

Es gibt dafür sogar Testmöglichkeiten die die Tests genau auf dieses Verhalten prüfen. Nennt sich Mutation Testing. ",True,True,6,172.4
OpencachingDeutschland_____oc-server3_____731,2018-12-17T22:21:48Z,True,OpencachingDeutschland_____oc-server3_____731_____448021286,"> Wenn sich die eingesetzte Software ändert müssen Tests fehl schlagen 

Nur wenn die Änderung nicht abwärtskompatibel ist, andernfalls ist der Test fehlerhaft.",True,True,6,172.4
mate-desktop_____marco_____437,2018-12-18T01:10:23Z,True,mate-desktop_____marco_____437_____448058738,So it's finished,True,True,27,4815.85
mate-desktop_____marco_____437,2018-12-18T04:18:46Z,True,mate-desktop_____marco_____437_____448091179,"Still needs an acceptable commit message: ""by the mouse"" means absolutely nothing at least to me and I have exactly zero idea what this is supposed to fix. This will probably go nowhere until we can understand its purpose. ",True,True,27,4815.85
mate-desktop_____marco_____437,2018-12-18T09:53:18Z,True,mate-desktop_____marco_____437_____448162018,"did you seen `. . .` sign right after that what you're callin ""commit message""? ",True,True,27,4815.85
mate-desktop_____marco_____437,2018-12-18T10:41:26Z,True,mate-desktop_____marco_____437_____448176562,"Finished, are you kidding?

- Your commit message still is not good... It still does not tell anything.
- You still have unneeded code changes that messes up coding style.
- Newly added code still does not follow coding style used in marco.

And more importantly - changes are wrong. You won't get away by commenting out code and/or by changing `GDK_FILTER_REMOVE` to `GDK_FILTER_CONTINUE`!

Sorry, but this is not going to be easy money for you... If this is your finished work, don't waste others time and just close your pull request!",True,True,27,4815.85
savonrb/savon/893,2018-12-18T16:30:37Z,False,5c1921dc6480fd50c7810c74,thanks!,True,False,1,0.0
mate-desktop_____marco_____437,2018-12-18T18:10:39Z,True,mate-desktop_____marco_____437_____448315834,"run this wm :  
```
git clone https://github.com/alexeyneu/marco.git
cd marco
./autogen.sh --prefix /usr
make
./src/marco --replace
```",True,True,27,4815.85
mate-desktop_____marco_____437,2018-12-18T18:39:54Z,True,mate-desktop_____marco_____437_____448325019,"What did not you understand? Your changes are **wrong**! It does **not** matter if you have got working requested feature...

Do the research, learn how code works and provide correct solution. Apparently you did not even bother to read comment above `maybe_redirect_mouse_event` function. There are reasons why events are removed with `GDK_FILTER_REMOVE`.",True,True,27,4815.85
mate-desktop_____marco_____437,2018-12-18T20:30:58Z,True,mate-desktop_____marco_____437_____448359644,"looks like this condom have a plans to  use my code.  
@lukefromdc it may go nowhere but you still need to pay",True,True,27,4815.85
mate-desktop_____marco_____437,2018-12-18T20:31:39Z,True,mate-desktop_____marco_____437_____448359831,We can reopen this if you get a correct commit message and code that works to fix whatever the intended problem is.,True,True,27,4815.85
mate-desktop_____marco_____437,2018-12-18T20:36:35Z,True,mate-desktop_____marco_____437_____448361323,No man now you'll be forced to pay,True,True,27,4815.85
mate-desktop_____marco_____437,2018-12-18T20:41:47Z,True,mate-desktop_____marco_____437_____448362865,"Is this aimed at a problem for which someone has posted a bounty? If so, a fix for that issue would collect the bounty. Otherwise no money would be involved. This is not paid software, and we are not a team with funders behind us. If you are looking for money I would suggest you look elsewhere unless you are trying to fix  something for which someone has posted a bounty.   Please refrain from posting threats, especially empty threats",True,True,27,4815.85
mate-desktop_____marco_____437,2018-12-18T20:45:58Z,True,mate-desktop_____marco_____437_____448364130,"Of course he is after money - just look at his contribution... The problem is **not fixed**! His code is **not merged** and will not get accepted - so he can not claim bounty. And the truth, probably, is that he is not capable of coming up with proper solution...",True,True,27,4815.85
mate-desktop_____marco_____437,2018-12-18T21:21:17Z,True,mate-desktop_____marco_____437_____448374948,"OK, I see he is trying to fx https://github.com/mate-desktop/marco/issues/364 but Bountysource requires that a PR be accepted for the bounty to be claimed. Also, that particular issue was supposed to be already fixed-and the bounty claimed-by
https://github.com/mate-desktop/marco/pull/330
so he needs to start with an open issue with an open bounty. Firefox has a big one outstanding for some issue, at $500, but the size of that bounty implies it may take an expert or even a team effort to fix it",True,True,27,4815.85
mate-desktop_____marco_____437,2018-12-18T21:24:23Z,True,mate-desktop_____marco_____437_____448375846,@lukefromdc that is/was different problem...,True,True,27,4815.85
Qiskit/qiskit-tutorials/408,2018-12-19T01:49:45Z,False,5c19a4ed6480fd4e0f8a7213,@ss2165 do you mind adding the images you used? ,True,False,21,108585.85
hamcrest/PyHamcrest/96,2018-12-19T06:34:37Z,False,5c19e6b56480fd4dd7c65578,"
[![Coverage Status](https://coveralls.io/builds/20710458/badge)](https://coveralls.io/builds/20710458)

Coverage remained the same at ?% when pulling **da49cb4c4c9910670ef5475deeb87316a3fed10f on Kaligule:master** into **0cb26024a2af337ea12f8bd3e9e28ec440838bef on hamcrest:master**.
",True,False,9,84017.08333333333
hamcrest/PyHamcrest/96,2018-12-19T06:34:37Z,False,5c19e6b56480fd4dd7c65572,"
[![Coverage Status](https://coveralls.io/builds/20710458/badge)](https://coveralls.io/builds/20710458)

Coverage remained the same at ?% when pulling **da49cb4c4c9910670ef5475deeb87316a3fed10f on Kaligule:master** into **0cb26024a2af337ea12f8bd3e9e28ec440838bef on hamcrest:master**.
",True,False,9,84017.08333333333
hamcrest/PyHamcrest/96,2018-12-19T06:34:37Z,False,5c19e6b56480fd4dd7c65573,"
[![Coverage Status](https://coveralls.io/builds/20710458/badge)](https://coveralls.io/builds/20710458)

Coverage remained the same at ?% when pulling **da49cb4c4c9910670ef5475deeb87316a3fed10f on Kaligule:master** into **0cb26024a2af337ea12f8bd3e9e28ec440838bef on hamcrest:master**.
",True,False,9,84017.08333333333
hamcrest/PyHamcrest/96,2018-12-19T06:34:37Z,False,5c19e6b56480fd4dd7c65574,"
[![Coverage Status](https://coveralls.io/builds/20710458/badge)](https://coveralls.io/builds/20710458)

Coverage remained the same at ?% when pulling **da49cb4c4c9910670ef5475deeb87316a3fed10f on Kaligule:master** into **0cb26024a2af337ea12f8bd3e9e28ec440838bef on hamcrest:master**.
",True,False,9,84017.08333333333
hamcrest/PyHamcrest/96,2018-12-19T06:34:37Z,False,5c19e6b56480fd4dd7c65575,"
[![Coverage Status](https://coveralls.io/builds/20710458/badge)](https://coveralls.io/builds/20710458)

Coverage remained the same at ?% when pulling **da49cb4c4c9910670ef5475deeb87316a3fed10f on Kaligule:master** into **0cb26024a2af337ea12f8bd3e9e28ec440838bef on hamcrest:master**.
",True,False,9,84017.08333333333
hamcrest/PyHamcrest/96,2018-12-19T06:34:37Z,False,5c19e6b56480fd4dd7c65576,"
[![Coverage Status](https://coveralls.io/builds/20710458/badge)](https://coveralls.io/builds/20710458)

Coverage remained the same at ?% when pulling **da49cb4c4c9910670ef5475deeb87316a3fed10f on Kaligule:master** into **0cb26024a2af337ea12f8bd3e9e28ec440838bef on hamcrest:master**.
",True,False,9,84017.08333333333
hamcrest/PyHamcrest/96,2018-12-19T06:34:37Z,False,5c19e6b56480fd4dd7c65577,"
[![Coverage Status](https://coveralls.io/builds/20710458/badge)](https://coveralls.io/builds/20710458)

Coverage remained the same at ?% when pulling **da49cb4c4c9910670ef5475deeb87316a3fed10f on Kaligule:master** into **0cb26024a2af337ea12f8bd3e9e28ec440838bef on hamcrest:master**.
",True,False,9,84017.08333333333
hamcrest/PyHamcrest/96,2018-12-19T06:42:36Z,False,5c19e98d6480fd4cf8f2c259,@coveralls You look broken to me. You are spamming comments into Pullrequests and don't even have a coverage to report.,True,False,9,84017.08333333333
mate-desktop_____marco_____437,2018-12-19T07:37:34Z,True,mate-desktop_____marco_____437_____448498136,"The backer of  https://github.com/mate-desktop/marco/issues/364 (the issue you are trying to fix) is
https://www.bountysource.com/people/36613-phocean
and not myself. Thus if you submitted a PR with code that worked and the commit message was understandable so the PR got reviewed, and if the PR passed that review of both code and behavior and was merged to master, it would be @phocean who would accept or reject your contribution as having actually fixed the problem, and it would be their bountysource account that would pay, not the MATE project and certainly not myself, as I have posted no bounties of my own on this.

If I submitted a PR I cared about to a project and was told the team could understand the commit message (or had concluded it would not  make sense in the ChangeLog), and then someone pointed out multiple issues in the code, the first thing I would do is change the commit message and force-push that change, then change the PR title.  PR titles can be edited right here on the Github website, and git-gui provides a convenient way to deal with commits, changing commit messages for the last commit (you need git rebase -i from the command line to change older commit messages), and force-push the result.

Once that was done, I would look at each of the code problems my work had been cited for, and fix them one by one. It would probably then be necessary to squash that series of commits, unless of course I had done all that work in a build directory and committed all the changes to my local git repo in a single commit or by amending the previous (original) commit. I would then push these changes, with a force-push required if I had amended the last commit or squashed the changes into it. Only then would I call for further review.

Several heads are better than one when it comes to looking at and fixing code, and C is known as an ""unforgiving"" language, so it it particularily important in a project written mostly in C or in C++ that the code itself (not just the apparent behavior) be reviewed. Otherwise memory leaks, exploitable buffer overflows, and other serious but not immediately apparent problems can be introduced. 
",True,True,27,4815.85
Qiskit/qiskit-tutorials/408,2018-12-20T15:25:31Z,False,5c1bb5a26480fd5245243481,"@chunfuchen I have made the updates to line up with the released versions of terra/aqua/aqua-chemistry and added the images now

",True,False,21,108585.85
canonical-websites/www.ubuntu.com/4534,2018-12-20T16:13:19Z,False,5c1bc09e6480fd4df7b5c36d,Starting demo at: https://www-ubuntu-com-canonical-websites-pr-4534.run.demo.haus/,True,False,4,31310.883333333335
Qiskit/qiskit-tutorials/408,2018-12-20T16:30:31Z,False,5c1bc4df6480fd4bf9988792,@ss2165 Thanks. I noticed that the last two cells are not executed. is it okay to run it and have the results there?,True,False,21,108585.85
canonical-websites/www.ubuntu.com/4534,2018-12-20T16:53:19Z,False,5c1bca316480fd4ccf06014b,"### Suggestions:

#### Kubeflow section:
- [ ] 'Build composable' title maybe should be a h3?
- [ ] kubeflow logo to be `width: 200px`

#### Deepsense section:

- [ ] logo `width=""280px""`
- [ ] add `margin-top: 16px;` to the `figcaption`
- [ ] can we make ""formula"" and ""methodology"" into 2 cards? Also have bullet points instead of numbers? see [example](https://www.ubuntu.com/openstack/managed) below:
<img width=""719"" alt=""screenshot 2018-12-20 at 16 39 20"" src=""https://user-images.githubusercontent.com/36884067/50297924-d56ebd80-0475-11e9-8be8-1ce82ba666f5.png"">

#### Manceps section:

- [ ] I think it looks weird having the logo on the left side of the page. Would work if it was an image or illustration. So I suggest to move move the text to the left and image on the right side.
- [ ] logo `width=""270px""`
- [ ] add `margin-top: 16px;` to the `figcaption`
- [ ] align logo to the top of the text. see below
![consulting ai ubuntu](https://user-images.githubusercontent.com/36884067/50298501-32b73e80-0477-11e9-949f-e078350956e5.png)
- [ ] 'formula' can we try something like this (6 col width)
<img width=""697"" alt=""screenshot 2018-12-20 at 16 51 42"" src=""https://user-images.githubusercontent.com/36884067/50298671-9477a880-0477-11e9-9541-4ad2e60f381a.png"">

",True,False,4,31310.883333333335
canonical-websites/www.ubuntu.com/4534,2018-12-20T17:13:37Z,False,5c1bcef66480fd4f32bbce0a,Starting demo at: https://www-ubuntu-com-canonical-websites-pr-4534.run.demo.haus/,True,False,4,31310.883333333335
Qiskit/qiskit-tutorials/408,2018-12-21T00:01:28Z,False,5c1c2e8c6480fd4edef99db6,"@chunfuchen Ah sorry that was an oversight, have run them now. Good spot.",True,False,21,108585.85
Polymer/lit-element/399,2018-12-22T01:11:26Z,False,5c1d90716480fd4df7b6846b,"@rictic adding you for eyes on TypeScript. It looks like I have the component type reasonable now, but getting the types annotated while passing in the React module as an argument was messier than I'd like.

The generated type is `ComponentClass<ElementClass, void>` which should mean that any property defined in the prototype chain should be a valid prop, and there's no state. I think I need to update the `setProperty` function to not just look in `_classProperties` but anything defined on the prototype so we can set regular, non-UpdatingElement, properties. That would make it not UpdatingElement-specific anymore, so we'd have to see if there are other things to do that would justify this being in the lit-element package, vs something generic.",True,False,1,0.0
Qiskit/qiskit-tutorials/408,2018-12-22T04:36:04Z,False,5c1dc0646480fd5323583751,"@ss2165  thanks!. 
Do you mind helping for the last modification? 
At `qiskit-aqua-chemsitry` **0.4.1**, the package name has been changed to `qiskit_chemistry`.
So you will need to do `from qiskit_chemistry import xxx`

I think you do not need to re-run everything, just update the codes so others can re-run your notebook by themselves. ",True,False,21,108585.85
mysqljs_____mysql_____1962,2018-12-26T20:34:12Z,True,mysqljs_____mysql_____1962_____450022147,Thanks to all who have worked hard on the `caching_sha2_password` support. Are there plans to merge this soon?,True,True,37,413793.7833333333
citra-emu_____citra_____4535,2018-12-28T14:56:08Z,True,citra-emu_____citra_____4535_____241346735,"Increase: CTRL + I
Decrease: CTRL + D
Conflicts with #4437

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/citra-emu/citra/4535)
<!-- Reviewable:end -->
",True,True,3,26.833333333333332
citra-emu_____citra_____4535,2018-12-28T15:17:51Z,True,citra-emu_____citra_____4535_____450375204,"> Conflicts with #4437 

I take this as seeking for fight. And because of the conversation in #4532, I lost my hope. No.",True,True,3,26.833333333333332
citra-emu_____citra_____4535,2018-12-28T15:22:58Z,True,citra-emu_____citra_____4535_____450376018,Sad,True,True,3,26.833333333333332
iina_____iina_____2170,2019-01-02T08:58:00Z,True,iina_____iina_____2170_____241696162,"- [No] This change has been discussed with the author.
- [No] It implements / fixes issue #.

---

**Description:** update zh-Hans
",True,True,10,28.316666666666666
iina_____iina_____2170,2019-01-02T09:04:43Z,True,iina_____iina_____2170_____450813476,"Sorry but this will not count you as a contributor.

_Better try to mine some contributions in other repositories which really needs proper translation. Not here, though._",True,True,10,28.316666666666666
iina_____iina_____2170,2019-01-02T09:08:52Z,True,iina_____iina_____2170_____450814234,"Are you kidding me ?
I don't don't want to be a contributor, I just want to make Chinese localization more proper.
Funny.",True,True,10,28.316666666666666
iina_____iina_____2170,2019-01-02T09:10:43Z,True,iina_____iina_____2170_____450814549,"Funny that you don't even know that how this software looks like under current Simp. Chinese localization then you just went to change some irrelevant strings.

That's really intriguing.",True,True,10,28.316666666666666
iina_____iina_____2170,2019-01-02T09:11:56Z,True,iina_____iina_____2170_____450814779,"都是千年的狐狸，在这玩什么聊斋¿

<sub>Sent with <a href=""http://githawk.com"">GitHawk</a></sub>",True,True,10,28.316666666666666
iina_____iina_____2170,2019-01-02T09:12:11Z,True,iina_____iina_____2170_____450814819,"Fine !
You're right!",True,True,10,28.316666666666666
iina_____iina_____2170,2019-01-02T09:19:02Z,True,iina_____iina_____2170_____450816111,我tm 学医  混个 contributor 有啥意思？  你说说看,True,True,10,28.316666666666666
iina_____iina_____2170,2019-01-02T09:19:49Z,True,iina_____iina_____2170_____450816256,我就是喜欢汉化，我怎么知道这个软件开发者竟然是这么唯利是图的中国人！  shame on you,True,True,10,28.316666666666666
iina_____iina_____2170,2019-01-02T09:21:14Z,True,iina_____iina_____2170_____450816527,"Reported abuse: personal attacking.

Have a good day.",True,True,10,28.316666666666666
iina_____iina_____2170,2019-01-02T09:26:19Z,True,iina_____iina_____2170_____450817469,"下次吧自己尾巴藏起来再说自己学医，GitHub 默认 repo 是公开的

<sub>Sent with <a href=""http://githawk.com"">GitHawk</a></sub>",True,True,10,28.316666666666666
mozilla/DeepSpeech/1398,2019-01-03T02:53:25Z,False,5c2d7a576480fd4e8d18291b,"This thread has been automatically locked since there has not been any recent activity after it was closed. Please open a new issue for related bugs.
",True,False,2,310289.36666666664
LFDLFoundation/lfdl-landscape/61,2019-01-03T21:22:22Z,False,5c2e7e426480fd53235d811e,"Deploy preview for *lfdllandscape* ready!

Built with commit 223e3e66d1f1653dda5bf42178b53d0ba49e133c

https://deploy-preview-61--lfdllandscape.netlify.com",True,False,1,0.0
jshttp_____mime-db_____149,2019-01-04T23:17:47Z,True,jshttp_____mime-db_____149_____242397286,"When a Windows user converts a folder to a zip file, the filetype becomes: `x-zip-compressed` as shown below:
![image](https://user-images.githubusercontent.com/16158417/50715706-794a9280-104c-11e9-82e3-6ffbd953ac1c.png)

There are a few sources, however I am having trouble finding one that isn't an aggregated list:

Closest I can find is SitePoint:
https://www.sitepoint.com/mime-types-complete-list/
http://filext.com/file-extension/ZIP

My company will be using my forked branch in the meantime, as we have windows users uploading zip files pretty regularly.  Let me know if there is anything else I can do.",True,True,5,4003.9166666666665
jshttp_____mime-db_____149,2019-01-04T23:26:56Z,True,jshttp_____mime-db_____149_____451599287,"Let me know if this works as a primary source:
https://www.oreilly.com/library/view/web-design-in/0596009879/ch04s05.html",True,True,5,4003.9166666666665
google_____styleguide_____428,2019-01-05T00:10:49Z,True,google_____styleguide_____428_____242404213,Specify that no byte order mask should be used (when applicable) for source files.,True,True,13,724371.4333333333
google_____styleguide_____428,2019-01-05T00:10:52Z,True,google_____styleguide_____428_____451606408,"
Thanks for your pull request. It looks like this may be your first contribution to a Google open source project (if not, look below for help). Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).

:memo: **Please visit <https://cla.developers.google.com/> to sign.**

Once you've signed (or fixed any issues), please reply here (e.g. `I signed it!`) and we'll verify it.

----

#### What to do if you already signed the CLA

##### Individual signers

*   It's possible we don't have your GitHub username or you're using a different email address on your commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).

##### Corporate signers

*   Your company has a Point of Contact who decides which employees are authorized to participate. Ask your POC to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the Google project maintainer to [go/cla#troubleshoot](http://go/cla#troubleshoot) ([Public version](https://opensource.google.com/docs/cla/#troubleshoot)).
*   The email used to register you as an authorized contributor must be the email used for the Git commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).
*   The email used to register you as an authorized contributor must also be [attached to your GitHub account](https://github.com/settings/emails).
		

<!-- need_sender_cla -->",True,True,13,724371.4333333333
TFPatches_____TotalFreedomMod_____128,2019-01-06T06:14:20Z,True,TFPatches_____TotalFreedomMod_____128_____242478145,,True,True,4,7.533333333333333
TFPatches_____TotalFreedomMod_____128,2019-01-06T06:17:52Z,True,TFPatches_____TotalFreedomMod_____128_____451718609,robin said so,True,True,4,7.533333333333333
TFPatches_____TotalFreedomMod_____128,2019-01-06T06:18:11Z,True,TFPatches_____TotalFreedomMod_____128_____451718620,"windows said yes
",True,True,4,7.533333333333333
TFPatches_____TotalFreedomMod_____128,2019-01-06T06:21:52Z,True,TFPatches_____TotalFreedomMod_____128_____451718763,but robin said no so,True,True,4,7.533333333333333
google_____styleguide_____428,2019-01-06T20:30:02Z,True,google_____styleguide_____428_____451772154,I signed it!,True,True,13,724371.4333333333
google_____styleguide_____428,2019-01-06T20:30:05Z,True,google_____styleguide_____428_____451772157,"CLAs look good, thanks!

<!-- ok -->",True,True,13,724371.4333333333
jshttp_____mime-db_____149,2019-01-07T16:12:54Z,True,jshttp_____mime-db_____149_____451987418,"I really don't think there is any available primary source documentation, it is a Microsoft mime-type for .zip files created within windows.

![image](https://user-images.githubusercontent.com/16158417/50778067-16831200-126b-11e9-8555-7ee2d3ab2971.png)
`HKEY_CLASSES_ROOT\.zip` in regedit, Windows 10 version 1803

This is the default registry value, and appears to have been for [over 9 years](https://bugzilla.mozilla.org/show_bug.cgi?id=540900).  Why IANA hasn't been updated I do not know.

I've added exceptions to handle this situation within my company's codebase, so do what you will with this PR with no primary source.  However, this is a valid mime-type and I worry the buggy situations that my company has experienced will occur for other users of both this library and the multitude of libraries that utilize it.  I'd hope you share in this concern.",True,True,5,4003.9166666666665
jshttp_____mime-db_____149,2019-01-07T16:20:07Z,True,jshttp_____mime-db_____149_____451990029,"I agree that it's likely been around for a long time. However, the goal of this module is simply to aggregate the three sources in the readme together. We have some built in ones for legacy reasons, but for every person who wants to add one (like you) someone will then come back later saying it should actually be something different.

I do not want to be a mediator here.

Without a primary source it won't be accepted here directly. The best best is to get it added to one of the three sources we aggregate from and so it'll just be added in here automatically. ",True,True,5,4003.9166666666665
jshttp_____mime-db_____149,2019-01-07T18:01:42Z,True,jshttp_____mime-db_____149_____452024600,Ridiculous that you would close this PR. Known issue with the library caused by excluding the mimetype generated by the most popular OS on the planet. @hdwatts has a valid case for a known issue... ,True,True,5,4003.9166666666665
hibernate/hibernate-validator/1012,2019-01-09T14:40:28Z,False,5c360a356480fdaeafc25042,"Can one of the admins add this person to the trusted builders? (reply with: ""add to whitelist"" or ""ok to test"")",True,False,72,112490.03333333334
Qiskit/qiskit-tutorials/408,2019-01-09T15:08:10Z,False,5c360f9d6480fda5de2705b1,"@ss2165 and I are working together to clear up some questions about the table in the notebook. Once that's completed, and any ancillary issues fixed up, this should be good to go.",True,False,21,108585.85
hibernate/hibernate-validator/1012,2019-01-09T15:12:05Z,False,5c3618626480fda4a6790a57,OK to test,True,False,72,112490.03333333334
hibernate/hibernate-validator/1012,2019-01-09T18:32:38Z,False,5c9d05f16480fd726061f26c,"Interesting, thanks. I'm travelling until Monday but will take a look next week.",True,False,72,112490.03333333334
canonical-websites/www.ubuntu.com/4534,2019-01-11T10:04:12Z,False,5c386b566480fda716f65786,Closing until the copy is signed off.,True,False,4,31310.883333333335
rust-lang_____rfcs_____2544,2019-01-11T20:53:17Z,True,rust-lang_____rfcs_____2544_____453653184,"The discussion has grinded to a halt and so now's a good time for a final team and community review of this RFC. Before that, I will give a rough summary of the discussion thus far and some conclusions I've made. So let's go through some of the major points of discussion.

## Motivation

[consistency]: https://github.com/rust-lang/rfcs/pull/2544#issuecomment-423043867
[easier to learn]: https://github.com/rust-lang/rfcs/pull/2544#issuecomment-422244320
[the motivation]: https://github.com/varkor/rfcs/blob/undisambiguated_generics/text/0000-undisambiguated-generics.md#motivation
[case_1]: https://users.rust-lang.org/t/why-cant-i-specify-type-parameters-directly-after-the-type/2365
[Later]: https://users.rust-lang.org/t/why-cant-i-specify-type-parameters-directly-after-the-type/2365/11
[comex_idiomatic]: https://github.com/rust-lang/rfcs/pull/2544#issuecomment-423030623
[case_2]: https://users.rust-lang.org/t/type-parameter-syntax-when-defining-vs-calling-functions/15037
[josh_internally]: https://github.com/rust-lang/rfcs/pull/2544#issuecomment-422864037
[case_4]: https://www.reddit.com/r/rust/comments/73pm5e/whats_the_rationale_behind_for_type_parameters/
[summarizes]: https://github.com/rust-lang/rfcs/pull/2544#issuecomment-423059802
[boats_assumed]: https://github.com/rust-lang/rfcs/pull/2544#issuecomment-422887780
[dherman_discoverability]: https://github.com/rust-lang/rfcs/pull/2544#issuecomment-422193876

[new_corner]: https://github.com/rust-lang/rfcs/pull/2544#issuecomment-422244320
[less_common]: https://github.com/rust-lang/rfcs/pull/2544#issuecomment-422246423
[suggested]: https://github.com/rust-lang/rfcs/pull/2544#issuecomment-424638765
[prenex]: https://en.wikipedia.org/wiki/Parametric_polymorphism#Rank-1_(prenex)_polymorphism
[higher]: https://en.wikipedia.org/wiki/Parametric_polymorphism#Rank-n_(%22higher-rank%22)_polymorphism
[surprisingly for some]: https://github.com/rust-lang/book/issues/385#issuecomment-271050377

The main positive motivation of this RFC is *[consistency]* and by extension making Rust [easier to learn]. That is, having to use turbofish for function application is, as noted in [the motivation] an unexpected corner case.

While this RFC [does][new_corner] add a weird new corner case to parsing Rust, one has to consider how often each inconsistency would arise. As I [noted][less_common], the inconsistency introduced by this RFC is not a practical problem as the crater run has also demonstrated. Meanwhile, turbofish is a corner case users actually hit therefore making it a practical problem. The RFC gives a number of examples:

+ [[1]][case_1]

  In this example, the user likely expected that `Vec<u64>::new()` should work
  because `Vec<u64>` works in type contexts.

  [Later] in the same thread, another newcomer noted their confusion over where turbofish is necessary and not.

  @comex [notes][comex_idiomatic] that because of the inconsistency, the following is considered idiomatic:

  ```rust
  let mut x: Vec<u32> = Vec::new();
  ```

  They also note that this is both longer and more repetitive than writing `Vec::<u64>::new()` and that the longer version is likely chosen because turbofish is considered ugly. I tend to agree, being able to present `Vec<u64>::new()` as idiomatic would be good for Rust's reputation.

+ [[2]][case_2]

  Here, the user is confused, and for quite a while, over the declaration form `fn generic<T, ..>(..)` not being mirrored in the application form `generic::<T, ..>`. This is also captured in a comment written by @joshtriplett, where he further [notes][josh_internally] that the RFC isn't proposed to make Rust more like other languages but rather more *internally consistent*.

+ [[4]][case_4]

  In another case, a user notes that turbofish is both awkward to type and unnatural.

In comments thus far, other instances of confusion have been noted:

+ @Wyverald eloquently [summarizes] the various scenarios in which turbofish is needed and not when type-applying a struct literal and notes their surprise when coming from C++ and Java.

+ @withoutboats [notes][boats_assumed] that they initially assumed that since `.collect<Vec<_>>()` wasn't possible, type-application wasn't possible either.

+ @dherman [notes][dherman_discoverability] that newcomers at work have issues wrt. the guessability and discoverability of turbofish.

[estebank_diagnostics]: https://github.com/rust-lang/rfcs/pull/2544#issuecomment-422179860
[gilnaa_learnability]: https://github.com/rust-lang/rfcs/pull/2544#issuecomment-422860439

While we can [improve diagnostics][gilnaa_learnability] as [suggested] by @estebank, thereby improving discoverability for learners, a broken mental model still needs to be maintained in a user's mind. This results in interrupted flow for new users and sometimes for novices and experts as well.

### Making non-turbofish idiomatic

It has been [suggested] that an alternative to making turbofish redundant would be to do the reverse: making non-turbofish redundant by linting on `Foo<T>` and allowing `Foo::<T>`. However, `Foo::<T>` is, [surprisingly for some], *already* allowed:

```rust
type X = Vec::<u8>;
```
Not only is it allowed, but *linted* against:

```rust
warning: unnecessary path disambiguator
 --> src/lib.rs:1:13
  |
1 | type X = Vec::<u8>;
  |             ^^ try removing `::`
```

Thus, to make `Foo::<T>` idiomatic we would need to reverse this lint and it would make virtually all Rust code thus far unidiomatic. Additionally, it would still *not* remove the inconsistency of having `Vec<T>` work but not `identity<u8>`.

Finally, the reason we chose `<T>` in the first place is to make Rust more familiar for C-family users (e.g. C++, C#, Java, Kotlin). To make `::<T>` idiomatic would be to nullify the rationale for `<T>` in the first place.

### The namespaces model

[namespaces_suggested]: https://github.com/rust-lang/rfcs/pull/2544#issuecomment-422859755
[type_erasure]: https://internals.rust-lang.org/t/2019-strategy-for-rustc-and-the-rls/8361/71

It has been [suggested][namespaces_suggested] that generics are nothing more than automatically defined types and functions put under namespaces (e.g `Foo_u8`). This may be true in a language with only [rank-1 prenex polymorphism][prenex]. However, Rust allows functions and types that are of arbitrarily high rank ([rank-n polymorphism][higher]): 

```rust
type X = fn(fn(for<'a> fn(&'a u8))); // X is a rank-3 polymorphic type.
```

The namespace model falls apart with rank-n polymorphism as you truly need to pass in a function that is valid for all lifetimes.

It is further suggested that `::<T>` supports the idea of monomorphization being the principle behind generic functions. However, this somewhat conflates implementation strategy with language semantics. For example, for improved compile times and reduced binary sizes we could [potentially employ type erasure][type_erasure].

### Type ascription vs. Type application

[rpjohnst_ascription]: https://github.com/rust-lang/rfcs/pull/2544#issuecomment-422191951
[type ascription]: https://github.com/rust-lang/rfcs/pull/2522
[size_of]: https://github.com/rust-lang/rfcs/pull/2544#issuecomment-422361782
[parse]: https://github.com/rust-lang/rfcs/pull/2544#issuecomment-422242606
[text_ascription]: https://github.com/varkor/rfcs/blob/undisambiguated_generics/text/0000-undisambiguated-generics.md#future-frequency-of-disambiguated-generic-expressions
[haskell_both]: https://github.com/rust-lang/rfcs/pull/2544#issuecomment-422514013

@rpjohnst [suggests][rpjohnst_ascription] that we should consider the effect of [type ascription] and that if we had it, Rust could be taught without type application. While type ascription would reduce the usage of type application, as @SimonSpin [notes][size_of], in cases such as `size_of::<T>()` and `Any::is::<T>()` this is not possible. Meanwhile, in examples such [`.parse::<u8>()`][parse] it is *possible* to use type ascription but then you have to annotate a larger type. Other examples are noted in [the RFC's text][text_ascription]. Moreover, as the RFC notes, `const A: B` generics are likely to increase the number of cases where type application is better than ascription.

Finally, Rust would not be alone in supporting both type application and ascription. Another language, that supports it today, is [Haskell][haskell_both] wherein you may write:

```haskell
let s = sort :: [Int] -> [Int] -- ascriping the type of `sort`.
let s = sort @Int -- same thing, but with type application.
```

## Backwards compatibility

[bc_incompat]: https://github.com/rust-lang/rfcs/pull/2544#issuecomment-422078938
[crater_run]: https://github.com/varkor/rfcs/blob/undisambiguated_generics/text/0000-undisambiguated-generics.md#reference-level-explanation
[strictly theoretical]: https://github.com/rust-lang/rfcs/pull/2544#issuecomment-422887780
[crater_not_enough]: https://github.com/rust-lang/rust/issues/53668#issuecomment-422903463
[principle]: https://github.com/rust-lang/rust/issues/53668#issuecomment-423137936
[pragmatic]: https://github.com/rust-lang/rust/issues/53668#issuecomment-422892580
[good indicators]: https://github.com/rust-lang/rust/issues/53668#issuecomment-423141487
[done regularly]: https://github.com/rust-lang/rust/issues/53668#issuecomment-423144713
[practical]: https://github.com/rust-lang/rust/issues/53668#issuecomment-423319580
[if_let]: https://github.com/rust-lang/rust/pull/53854
[RFC 599]: https://rust-lang.github.io/rfcs/0599-default-object-bound.html
[TC39]: https://github.com/tc39
[dherman_defacto]: https://github.com/rust-lang/rfcs/pull/2544#issuecomment-422177966
[edition mechanism]: https://github.com/rust-lang/rfcs/pull/2544#issuecomment-422180550
[no_time]: https://github.com/rust-lang/rfcs/pull/2544#issuecomment-423338391
[cargo_fix]: https://github.com/rust-lang/rfcs/pull/2544#issuecomment-422864310
[fix_not_sufficient]: https://github.com/rust-lang/rfcs/pull/2544#issuecomment-422866805
[ed_1]: https://github.com/rust-lang/rfcs/pull/2544#issuecomment-423704055
[ed_2]: https://github.com/rust-lang/rfcs/pull/2544#issuecomment-423754245
[ed_3]: https://github.com/rust-lang/rfcs/pull/2544#issuecomment-423798340
[sufficient]: https://github.com/rust-lang/rfcs/pull/2544#issuecomment-422892283
[justify such breakage]: https://github.com/rust-lang/rfcs/pull/2544#issuecomment-422177966
[crater run]: https://github.com/rust-lang/rust/pull/53578#issuecomment-421487068

This RFC technically amounts to [a backwards incompatible change][bc_incompat] without using the edition mechanism. However, as the [RFC notes][crater_run], a [crater run] was made and the syntax was not encountered at all. The breakage is therefore [strictly theoretical]. In the eventuality that it isn't theoretical, the migration can be [trivially handled by `cargo fix`][cargo_fix].

[A case has been made][crater_not_enough] that crater runs don't cover all code (e.g. in-house code) and that the [principle] of backwards compatibility is important. However, our approach to backwards compatibility has been [pragmatic] and [practical]. What we care about is whether it break someone's code, which crater runs are [good indicators] of, rather than theoretical breakage. Indeed, changes with negligible effects are [done regularly] but nobody notices them. There is also precedent in [`if let p = q && r { .. }`][if_let] for doing such changes. As @nikomatsakis noted, another notable precedent was [RFC 599]. In it, we find:

> A. Breaking change. This change has the potential to break some existing code, though given the statistics gathered we believe the effect will be minimal (in particular, defaults are only permitted in `fn` signatures today, so in most existing code explicit lifetime bounds are used).

We are also not alone in our pragmatic approach. The [TC39] committee, which oversees the development and standardization of JavaScript, spends, [as @dherman noted][dherman_defacto], a lot of effort on retaining backwards compatibility. However, TC39 also cautiously makes changes which are *de jure* breaking but which *de facto* aren't if there is empirical evidence for that. I argue that we have and should continue to take such an approach.

@SimonSapin noted that we have the [edition mechanism] whereas JavaScript does not and that [favourable crater results and `cargo fix` support][fix_not_sufficient] shouldn't be sufficient to justify in-edition breakages. I think using an edition would have been more feasible if we had the time to do it in Rust 2018. However, [we didn't][no_time]. [Some][ed_1] have [noted][ed_2] that [we][ed_3] should wait until Rust 2021 (the next edition). I believe that, even if we felt the wait was short enough, the technical debt of an edition breakage for theoretical breakage would not be a good idea since it would need to be handled by tooling, documentation. The aforementioned case of `if let` also sets precedent for avoiding such debt. The benefits of this proposal are also [sufficient] to [justify such breakage].

All in all, given our pragmatic approach and after careful consideration, doing this change for all editions seems the better choice to me.

## Effort

[underestimated]: https://github.com/rust-lang/rfcs/pull/2544#discussion_r218224263
[poc]: https://github.com/rust-lang/rust/pull/53578
[persistent]: https://github.com/rust-lang/rfcs/pull/2544#issuecomment-423338683

An argument has been made that the work required is [underestimated]. While a proof of concept [already exists][poc], it is only that. However, the RFC author, @varkor, has been [persistent] and there's therefore no reason to think that the necessary effort won't be spent.

## Alternative implementation strategies

[alt_strat]: https://github.com/rust-lang/rfcs/pull/2544#issuecomment-423293222
[doesnt_work]: https://github.com/rust-lang/rfcs/pull/2544#issuecomment-423827385

An alternative implementation strategy was [suggested][alt_strat] that would not need backtracking. However, [this solution wouldn't work][doesnt_work] since it would break code. Since we are within an edition, such demonstrated breakage would not be acceptable.

## Grammatical Complexity, LL(k), and Tooling

[backtrack]: https://github.com/varkor/rfcs/blob/undisambiguated_generics/text/0000-undisambiguated-generics.md#drawbacks
[lookahead]: https://en.wikipedia.org/wiki/Parsing#Lookahead
[llk]: https://en.wikipedia.org/wiki/LL_grammar
[k_constant]: https://en.wikipedia.org/wiki/LL_parser
[ll_linear]: https://docs.lib.purdue.edu/cgi/viewcontent.cgi?article=1311&context=ecetr
[perf_1]: https://github.com/varkor/rfcs/blob/undisambiguated_generics/text/0000-undisambiguated-generics.md#performance
[perf_2]: https://github.com/varkor/rfcs/blob/undisambiguated_generics/text/0000-undisambiguated-generics.md#drawbacks
[ordo_3]: https://github.com/rust-lang/rfcs/pull/2584#discussion_r230587813
[ide_support]: https://github.com/rust-lang/rfcs/pull/2544#issuecomment-422247331
[eddyb_1]: https://github.com/rust-lang/rfcs/pull/2544#issuecomment-422250552
[proto_gll_rust]: https://github.com/rust-lang-nursery/wg-grammar/pull/13
[recursive decent]: https://github.com/varkor/rfcs/blob/undisambiguated_generics/text/0000-undisambiguated-generics.md#drawbacks
[not difficult]: https://github.com/rust-lang/rfcs/pull/2544#issuecomment-422358610
[eddyb_dragging]: https://github.com/rust-lang/rfcs/pull/2544#issuecomment-436193369
[simpler grammar]: https://github.com/rust-lang/rfcs/pull/2544#issuecomment-436202518
[sensitive]: https://users.rust-lang.org/t/why-cant-i-specify-type-parameters-directly-after-the-type/2365/9?u=centril

A major theme in this RFC has been grammatical complexity and its relation to tooling.

To enable `foo<Type>()`, [the RFC proposes using backtracking][backtrack]. This means that, in theory, parsing Rust will require unlimited token [lookahead]. Thus, Rust is no longer has an [`LL(k)` grammar][llk] ([technically Rust's grammar isn't context free on raw bytes but is on tokens][sensitive]). Here, [`k` is some constant][k_constant] corresponding to the number of lookahead tokens required to parse Rust.

One property of `LL(k)` parsers is that their complexity is [`O(input_size)`][ll_linear]. Moving to unlimited lookahead parsing does not preserve that and thus performance may suffer in theory. However, [as the RFC notes][perf_1], [empirical evidence][perf_2] shows no notable performance regression across the Rust ecosystem (i.e. in representative Rust code).

Besides performance, another issue with using more complex formalisms is that [IDE and tooling support could suffer][ide_support]. However, as @eddyb [noted][eddyb_1], LL, and other subsets of CFGs, have overstayed their welcome by at least a decade, and is [dragging language design along with it][eddyb_dragging]. If, in the future, we use GLL, to parse Rust, we can limit complexity to [`O(input_size^3)`][ordo_3] and at the same time provide richer and more sophisticated error reporting and recovery.

The grammar working group (wg-grammar) is working on a canonical grammar for Rust that uses GLL. A prototype implementation can be found [here][proto_gll_rust]. Notably, this grammar requires less work to encode and results in a [simpler grammar]. Such a canonical grammar can then be translated into ENBF or used directly. This can significantly cut down on implementation costs. Where GLL cannot be used, other methods such as [recursive decent] (an exceedingly common way of implementing parsers) or parser combinators can be used. I therefore concur with @varkor that implementation in common parsers is [not difficult].

### Tooling

[matklad_ide]: https://github.com/rust-lang/rfcs/pull/2544#issuecomment-425963737
[vim_hard_1]: https://github.com/rust-lang/rfcs/pull/2544#issuecomment-424805217
[sublime text]: https://github.com/rust-lang/rfcs/pull/2544#issuecomment-436341820
[a cruder approach]: https://github.com/rust-lang/rfcs/pull/2544#issuecomment-425616729
[Distinguishing function calls]: https://github.com/rust-lang/rfcs/pull/2544#issuecomment-425632095
[comex_vim_heuristic]: https://github.com/rust-lang/rfcs/pull/2544#issuecomment-426039907
[ekelog_tools]: https://github.com/rust-lang/rfcs/pull/2544#issuecomment-426118494
[jibal_concurrence]: https://github.com/rust-lang/rfcs/pull/2544#issuecomment-436384831
[mark_bracket]: https://github.com/rust-lang/rfcs/pull/2544#issuecomment-436391571
[rpjohnst_1]: https://github.com/rust-lang/rfcs/pull/2544#issuecomment-425979185

As for IDE support, @matklad, who has significant experience with IDE development, [notes][matklad_ide] that IDE support would not be a problem. However, there are certain text editors, such as [vim][vim_hard_1] and [sublime text], that have more limited parsing capabilities and will therefore have a harder time parsing Rust.

While in theory, highlighting Rust in vim could distinguish between expressions and types, the current `rust.vim` takes [a cruder approach] and seems to get by. [Distinguishing function calls] from conditionals could become more difficult in `rust.vim`.

However, as @comex [notes][comex_vim_heuristic], `rust.vim`'s understanding of Rust's syntax is superficial, very heuristic, and has a low bar for accuracy. @comex further notes that even after this change, a slightly more complicated heuristic could work. Sublime Text also uses a heuristic approach and doesn't treat turbofish specially.

Meanwhile, @Ekelog [notes][ekelog_tools] that other tools will also be affected. @jibal [concurs][jibal_concurrence] and notes that editors do need to tell expressions from types. However, @mark-i-m [notes][mark_bracket] that, while they use vim for everything, they haven't run into issues with vim being confused by bracket mismatch with `<` and `>`.

Beyond text editors, @rpjohnst [notes][rpjohnst_1] that in situations in which semantic parser libraries cannot be used, such as when using `ctrl + f` or when grepping, experiences may suffer. My personal view here is that heuristics are often used in these types of situation and it mostly works well. For example, when `ctrl + f`ing, I might not have the time to even write a regex wherefore I will go with an even cruder approach.

As a closing note on tooling, I believe that people who author tooling for Rust are substantially fewer than users who would encounter the inconsistencies of turbofish. In the end, I therefore believe this RFC to be a net benefit.

### Readability for humans

[H2CO3_readability]: https://github.com/rust-lang/rfcs/pull/2544#issuecomment-436156511
[ekelog_readability]: https://github.com/rust-lang/rfcs/pull/2544#issuecomment-436231934
[formatting conventions]: https://github.com/rust-lang/rfcs/pull/2544#issuecomment-436252415

An adjacent subject to giving up on `LL(k)` is readability for humans.

Here, @H2CO3 [argues that][H2CO3_readability] will suffer as a result since turbofish currently serves as a disambiguator. In particular they argue that they are glad that there is visual indication when type application happens. However, as aforementioned, this indication is not consistent and therefore misleading. While turbofish may be required or beneficial in struct literals: `Foo::<Type> { ... }` and in function applications: `.collect::<Vec<_>>()`, it is not required for type application in types. In other words, you may write: `Vec<u8>`.

On the subject of readability, @Ekelog [notes][ekelog_readability] that *""`if f<T, U>() {` is ambiguous for the human reader forever""*. However, as @varkor notes, the [formatting conventions] for types and bindings are different. Furthermore, `rustfmt` will format type applications without spaces while it will keep spaces around `<` and `>` when used as binary operators. A comparison with `()` is unlikely. More likely is comparison with a parenthesized expression. But under no circumstances would you put a comparison with a parenthesized expression as the second element of a 2-tuple directly inside a conditional since `if expr,expr {` is not legal. Furthermore, a comma (`,`) is not a valid binary operator in Rust.

## Forward compatibility

There is a question of forward compatibility with respect to changes we *might* want to make in the future.

### With `const A: B` generics

[RFC 2000]: https://github.com/rust-lang/rfcs/pull/2000
[petrochenkov_fears_1]: https://github.com/rust-lang/rfcs/pull/2544#issuecomment-423290039
[petrochenkov_fears_2]: https://github.com/rust-lang/rfcs/pull/2544#issuecomment-423320187
[new ambiguities]: https://github.com/rust-lang/rfcs/pull/2544#issuecomment-423827651
[comex_backtracking]: https://github.com/rust-lang/rfcs/pull/2544#issuecomment-423867405
[cover grammars]: https://github.com/rust-lang/rfcs/pull/2544#issuecomment-424615426

With `const` generics, as proposed by [RFC 2000], it becomes possible to let types depend on *values* known at compile time, e.g. `1`. For example, you may write `foo::<42>()` or `foo::<{40 + 2}>`. Notice that in the latter example, `40 + 2` was wrapped in braces (`{ .. }`). As long as this wrapping occurs, there are no forward compatibility issues in relation to this RFC. However, if you were allowed to write `foo<40 + 2>()`, as @petrochenkov [fears][petrochenkov_fears_1] will [happen][petrochenkov_fears_2], then [new ambiguities] may arise. However, these could be handled by disambiguating using methods like GLL, [backtracking][comex_backtracking], or [cover grammars]. This is not to say that the language team will necessarily eventually make `foo<42 + 2>()` legal in the name of ergonomics. There are no such plans today or inevitability.

### With chained comparisons

[RFC 558]: https://github.com/rust-lang/rfcs/pull/558
[ekelog_chained]: https://github.com/rust-lang/rfcs/pull/2544#issuecomment-424663033
[deems desirable]: https://github.com/rust-lang/rfcs/pull/2544#issuecomment-424750251
[comex_contrived]: https://github.com/rust-lang/rfcs/pull/2544#issuecomment-425179571

Another possible extension to the language, which @ubsan [deems desirable], that would also interact with this RFC, is chained comparisons. For example: `x < y < z`. These chained comparisons were forbidden in [RFC 558] as a means of future proofing. In https://github.com/rust-lang/rfcs/issues/2083, the idea of adding chained comparisons to the language is under discussion.

Consider an expression such as `1 < 2 <= 2 < 3` and let's further assume that `<` and `<=` are left associative. The result would thus be: `((1 < 2) <= 2) < 3`. If we reduce `1 < 2` we now get `(true <= 2) < 3`. However, `true <= 2` is nonsense since `bool` may only be compared with itself but not with integers, and would not result in what we expect. To make `1 < 2 <= 2 < 3` work an ad-hoc solution is required where chained comparisons are taken as a unit/list rather than as a tree and then desugared to `1 < 2 && 2 <= 2 && 2 < 3` as is done in Python. However, as `(1 < 0) < true` is valid, it would be surprising for `1 < 0 < true` to be semantically different (and not type check because `1 < 0 && 0 < true` isn't valid).

The primary use case for chained comparisons are checking whether some number is contained within a range, that is: `r_start < y < r_end`. This use case could also be realized by pattern matching. For example, if range patterns `a..b` were supported you could write `if let r_start..r_end = y { ... }` or `if y is r_start..r_end { .. }` in @petrochenkov's style.

If we did elect to support chained comparisons, then `foo<bar>()` could either associate as `(foo < bar) > ()` or as `(foo::<bar>)()`. It would however  be possible to disambiguate in favour of type application. As @Ekelog [notes][ekelog_chained], if we also have const generics without `{ .. }` then you may write `foo<bar<MYCONST>>()` which can associate as `((foo < bar) < MYCONST) >> ()` or as `(foo::<(bar::<MYCONST>)>)()`. However, having this RFC, chained comparisons, and const generics without `{ .. }` altogether seems exceedingly unlikely. @comex [notes][comex_contrived] that many examples where confusion with comparisons and type application would arise are unlikely to occur and that examples are contrived.

## Conclusion

[generally positive sentiment]: https://github.com/rust-lang/rfcs/pull/2544#issuecomment-423338391

**In closing**, because of the strong motivation in improving consistency and learnability, the remaining usefulness of type-appliction even with stable type ascription, the zero-regression crater run, the strong likelihood that the necessary implementation effort will be put in, the relative ease with which this can be implemented in rustc, the non-regression in performance, the ability to use and current use of heuristics in vim and similar editors, the low forward compatibility risk, and finally the [generally positive sentiment] within the language team, **I propose that we...**

@rfcbot merge

**...this RFC.**
",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-11T20:53:19Z,True,rust-lang_____rfcs_____2544_____453653193,"Team member @Centril has proposed to merge this. The next step is review by the rest of the tagged team members:

* [x] @Centril
* [x] @aturon
* [x] @cramertj
* [x] @eddyb
* [x] @joshtriplett
* [x] @nikomatsakis
* [x] @pnkfelix
* [ ] @scottmcm
* [ ] @withoutboats

Concerns:

* please-explicitly-disclaim-grammatical-precedent (https://github.com/rust-lang/rfcs/pull/2544#issuecomment-453708156)
* too-uncertain-for-its-value (https://github.com/rust-lang/rfcs/pull/2544#issuecomment-453710318)

Once a majority of reviewers approve (and at most 2 approvals are outstanding), this will enter its final comment period. If you spot a major issue that hasn't been raised at any point in this process, please speak up!

See [this document](https://github.com/rust-lang/rfcbot-rs/blob/master/README.md) for info about what commands tagged team members can give me.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-11T22:02:45Z,True,rust-lang_____rfcs_____2544_____453671361,"One final question before merging... If this change does end up having bad consequences in the future, will it be possible to revert it in another edition?
",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-11T22:08:12Z,True,rust-lang_____rfcs_____2544_____453672671,"I don't agree with the conclusion but I appreciate how thorough the summary is, giving fair weight to all criticisms. This is how difficult decisions about controversial issues should be made. Kudos.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-11T22:09:34Z,True,rust-lang_____rfcs_____2544_____453672965,"OK so this is exactly one case where the change is very controversial and I think it's being pushed by T-lang. There are currently as many 👎 s on the RFC as 👍 s and there have been multiple concerns by several users. These have all been dismissed as basically ""resolved"" or ""not too bad"". I respectfully disagree with most of that reasoning because they still are issues; furthermore, the consistency argument in favor of this RFC still doesn't hold, because it's not possible to remove it *everywhere*.

(I also somehow feel that in general the comments against have more upvotes than the supporting ones, but I didn't count.)
",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-11T22:11:24Z,True,rust-lang_____rfcs_____2544_____453673405,"@ivandardi Yes, AFAIK, it should be technically possible to revert with an edition if we so hypothetically wish.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-11T22:17:19Z,True,rust-lang_____rfcs_____2544_____453674848,"I strongly believe that summary underestimates the cost to other tools. @eddyb's claims about LL are fairly radical, given that GLL/GLR/etc are still virtually unused in production, so I don't think we can dismiss the downsides of this change solely on the basis of heuristics and more powerful parsers. The same applies to human visual parsing and human-driven heuristics.

I would much rather have extra parser power leveraged toward improvements in error messages, editors, etc. *and not need it otherwise* than the reverse. We're cutting out a chunk of the design space here, and it's not clear how big it is or what it overlaps with. Meanwhile the benefits are relatively small- there's no new mental model being enabled, unlike match ergonomics; AFAIK there's no repetitive papercut we're eliminating, unlike uniform paths; this is just something you have to learn once about Rust syntax.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-11T22:36:38Z,True,rust-lang_____rfcs_____2544_____453679165,"I can't form a strong opinion either way on the fairness of the summary (although you certainly deserve kudos for thoroughness) or the mergeability of the RFC, _but_ I do think it's interesting that the web of arguments surrounding this theoretically minor change involve three big, unfinished pieces of work:
- const generics
- type ascription
- a canonical Rust grammar

We do have a pretty decent idea what each of these things will eventually look like, but all together these add up to enough uncertainty that I'm convinced the tradeoffs we're discussing today are going to shift in some unforseeable but significant way by the time one or more of these things becomes set in stone.

Which is a long way of saying: perhaps postponing this wouldn't be a bad idea.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-11T22:51:54Z,True,rust-lang_____rfcs_____2544_____453682449,"@Ixrec 

> involve three big, unfinished pieces of work:
> 
> * const generics
> * type ascription
> * a canonical Rust grammar

That's true enough, but we have discussed these and I think there's sufficient useful data and thinking already to go on to take the first step now.

> We do have a pretty decent idea what each of these things will eventually look like, but all together these add up to enough uncertainty that I'm convinced the tradeoffs we're discussing today are going to shift in some unforseeable but significant way by the time one or more of these things becomes set in stone.
>
> Which is a long way of saying: perhaps postponing this wouldn't be a bad idea.

Remember that merging an RFC is not the same as stabilization and that we aren't setting the redundancy of turbofish in stone by this move. This is rather a declaration of intent as well as permission to move into nightly, but the point of nightly is in part to enable the collection of data. If this RFC turns out to be a mistake in nightly, we can change our minds. I believe there's sufficient motivation and interest to go ahead with the implementation for now tho. I would even say that it's beneficial to to evaluate the three things you itemized and this RFC together.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-11T23:05:09Z,True,rust-lang_____rfcs_____2544_____453684990,"@Centril this summary is amazing! There's one subject that I don't think you covered, which @SimonSapin [brought up](https://github.com/rust-lang/rfcs/pull/2544#issuecomment-422087071): the precedent that this decision sets. Since precedent is cited frequently here as justification for this change, would you mind writing a few words about what precedent you believe this decision would represent? My impression so far is that unbounding the lookahead in the grammar is in a sense crossing a line that can't be uncrossed, one that has been a ""core value"" of the Rust syntax for a while.

What does this change mean from a policy perspective? Can the RFC include language to redraw this previously uncrossed line in the sand? Can we quantify what grammar changes would be acceptable which are similar to this?",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-11T23:13:06Z,True,rust-lang_____rfcs_____2544_____453686610,"I have seen diagnostics mentioned only once – in context of it being an alternative to this RFC. I would like to make a point that implementing this RFC makes multiple diagnostics hard or impossible to implement (well) anymore.

Since with this RFC every typo'd expression can be one of about bazillion different things, it negatively impacts diagnostics that point out syntax errors. Errors, especially typos, can, and will, become significantly less localized and difficult to make a good span for. In fact, with infinite-ish look-around it will become necessary to span the whole buffer that has been ever considered for the expression parse in order to provide a reliable diagnostic. Such diagnostic will end up being less targeted and force the user to stare at it longer to comprehend what it is about.

Another one of the things that the current rustc does is ""recovery"" by making an educated guess how to fix up malformed code so that it could continue working and possibly report more errors. Depending on whom you ask you’ll hear both praises and curses – that comes from it being essentially a heuristically made guess at what malformed code ought to look like. To make said guess it is necessary to have an idea what the code ought to mean in the first place, and with a large number of alternative options it becomes impossible to do.

I sure hope that, in the process of removing a tiny element of surprise for users trying to pick up Rust, we don’t end up introducing a permanent element of surprise every time there’s an accidental syntax error.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-11T23:22:00Z,True,rust-lang_____rfcs_____2544_____453688378,"@anp 

> @Centril this summary is amazing!

❤️ 

> There's one subject that I don't think you covered, which @SimonSapin [brought up](https://github.com/rust-lang/rfcs/pull/2544#issuecomment-422087071): the precedent that this decision sets.

The precedent Simon talks about is about zero-regression-crater + breakage, which is addressed in my summary (the section on breakage). The precedent on breakage specifically was already set (as outlined in the section).

> Since precedent is cited frequently here as justification for this change, would you mind writing a few words about what precedent you believe this decision would represent? My impression so far is that unbounding the lookahead in the grammar is in a sense crossing a line that can't be uncrossed, one that has been a ""core value"" of the Rust syntax for a while.
> 
> What does this change mean from a policy perspective? Can the RFC include language to redraw this previously uncrossed line in the sand? Can we quantify what grammar changes would be acceptable which are similar to this?

I wouldn't mind such language in the RFC but I also don't think it particularly needs spelling out. This RFC will unbound the lookahead. However, merely because we have unbounded the lookahead in the grammar (if and when this RFC is *stabilized*, but *not before*), it does not mean that any use of lookahead is OK. We still need to consider: performance, how much of actual backtracking would occur in real code, and the benefits of the individual proposal as compared to these drawbacks. In other words, we go from a blanket statement of ""no infinite lookahead"" to ""weigh the trade-offs case by case"". So we will still need to do the weighing done in this RFC.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-11T23:40:58Z,True,rust-lang_____rfcs_____2544_____453692163,"Strong disagree with the notion of LL(k) being some kind of archaic constraint on language design, and with the direction of this change in general.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-11T23:43:59Z,True,rust-lang_____rfcs_____2544_____453692655,"> Since with this RFC every typo'd expression can be one of about bazillion different things, it negatively impacts diagnostics that point out syntax errors. Errors, especially typos, can, and will, become significantly less localized and difficult to make a good span for.

> I sure hope that, in the process of removing a tiny element of surprise for users trying to pick up Rust, we don’t end up introducing a permanent element of surprise every time there’s an accidental syntax error.

Personally, this is the most convincing concern for me. I completely agree that the quality of diagnostics is more important than this piece of syntax, if the two are in conflict. I think, however, that it's very tricky to make flat-out assertions in this scenario without actually testing.

Should this be implemented (unstably), we will have to be very careful to review the diagnostic changes that result from this. I also don't want this to be merged if it means significantly worse error messages, etc.

My hope is that the changes actually will be fairly localised — the change to the parser this requires is not large after all — and we'll be able to address any diagnostic regressions. This is something that will come up in testing. I certainly don't think it's being ignored simply because it's not been heavily mentioned: I don't think anyone would argue severe diagnostic regressions are worth any change.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-11T23:51:41Z,True,rust-lang_____rfcs_____2544_____453693995,"> In other words, we go from a blanket statement of ""no infinite lookahead"" to ""weigh the trade-offs case by case"". So we will still need to do the weighing done in this RFC.

What about ""this is the only case of unbounded lookahead that will be allowed in Rust's grammar?"" If we can't guarantee that we'll stop here, then why not lay out some decision-making tools for how to reason about future examples of similar changes?

> LL(k) being some kind of archaic constraint on language design

I have done a small amount of work with the gll crate and it is REALLY COOL AND AMAZING AND GOOD. It is still baking, though. The wg-grammar work is based on git/master/HEAD of the gll crate, and I at least am not aware of other implementations that rust tools (much less other languages) could make use of today or in the near future. Is this level of maturity really sufficient to assuage near-term tooling concerns?",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T00:07:54Z,True,rust-lang_____rfcs_____2544_____453696848,"@anp 

> What about ""this is the only case of unbounded lookahead that will be allowed in Rust's grammar?""

That doesn't seem particularly useful to say; there's the argument about ""opening the floodgates"" and such, but there are legitimately other useful cases where the trade-offs may be similar to those in this RFC wrt. performance and occurrence of backtracking in real code. Let's judge those case by case in the same deliberate manner as @varkor's.

> If we can't guarantee that we'll stop here, then why not lay out some decision-making tools for how to reason about future examples of similar changes?

I mean.. that's what my comment about trade-offs was for.. This RFC sets out decision making tools *by example*. =P

> I have done a small amount of work with the gll crate and it is REALLY COOL AND AMAZING AND GOOD. It is still baking, though. The wg-grammar work is based on git/master/HEAD of the gll crate, and I at least am not aware of other implementations that rust tools (much less other languages) could make use of today or in the near future. Is this level of maturity really sufficient to assuage near-term tooling concerns?

GLL and wg-grammar's use of it is of interest for significantly reducing costs long term (as compared to *before this RFC*), it is still baking, that is true. For near term tooling concerns I think backtracking, combinators (e.g. nom, parsec, combine, ..), recursive decent, and heuristics (vim) work... or *we should at least try that out on nightly*. If it didn't work, at least we found out. IOW, I think this is the right step even if we forget about GLL.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T00:16:23Z,True,rust-lang_____rfcs_____2544_____453698496,"> If it didn't work

I don't imagine anyone here doubts that it is technically parseable / will _work_. the issue is that once it's made-live on nightly (and ""nothing breaks""), it's easy to make-permanent while ignoring/dismissing the cost argument (""already paid on rustc, who cares about other places""), and then in the future use it as precedent for ""well the grammar is already post-LL(k) so we can keep adding ever more grammar costs"".

This line / design constraint exists in the grammar to _limit costs_. See also recent comments on placing limits: that they ought to exist and be planned-for and adapted-to consciously rather than unconsciously overshot and only noticed in hindsight when it's actually harmful. This was a limit the language grew up with and was quite capable of healthy growth while staying inside of. Yet here is an RFC explicitly saying ""let's remove the limit"". I object to _that_.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T00:24:46Z,True,rust-lang_____rfcs_____2544_____453699920,I will second @graydon (among others) here; I will be sad to see this RFC merged.,True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T00:33:55Z,True,rust-lang_____rfcs_____2544_____453701186,"@graydon 

> I don't imagine anyone here doubts that it is technically parseable / will _work_. the issue is that once it's made-live on nightly (and ""nothing breaks""), it's easy to make-permanent while ignoring/dismissing the cost argument (""already paid on rustc, who cares about other places""), and then in the future use it as precedent for ""well the grammar is already post-LL(k) so we can keep adding ever more grammar costs"".

To me, this reads as a matter of mistrust in the current language team's ability to regulate and not cavalierly add ""ever more grammar costs"" and our ability to take other places (e.g. `syn`, IntelliJ Rust, other tools ...) into account.

> This line / design constraint exists in the grammar to _limit costs_. See also recent comments on placing limits: that they ought to exist and be planned-for and adapted-to consciously rather than unconsciously

We considering making a *deliberate choice* here. Nothing is done unconsciously.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T00:40:24Z,True,rust-lang_____rfcs_____2544_____453702010,"> To me, this reads as a matter of mistrust in the current language team's ability to regulate and not cavalierly add ""ever more grammar costs"" and our ability to take other places (e.g. `syn`, IntelliJ Rust, other tools ...) into account.

To me, that reads like a C programmer arguing that they should be trusted not to shoot themselves in the foot. It misconstrues the whole idea and intent of placing limits.

> We considering making a _deliberate choice_ here. Nothing is done unconsciously.

I believe that Graydon was referring to the limits consciously placed on the language design, not this specific feature. I do not believe that a conscious choice is being made to remove that limit -- rather, the limit is collateral damage due to a desire to ease language learning for a corner case. It seems to me to be a hugely disproportionate cost.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T00:44:09Z,True,rust-lang_____rfcs_____2544_____453702462,"> To me, this reads as a matter of mistrust in the current language team's ability to regulate and not cavalierly add ""ever more grammar costs"" and our ability to take other places (e.g. syn, IntelliJ Rust, other tools ...) into account.

I have been reading @graydon in light of his [recent blog post](https://graydon2.dreamwidth.org/263429.html), with the following tldr:

> I'm writing to make a recommendation about paying attention to -- acknowledging, planning, making explicit mechanisms and policy around the limits of -- the growth of two things in the project:
> 1. Necessarily-shared technical artifacts, specifically the language definition itself.
> 2. The strains on people participating in conversations about those artifacts.

To me, that post reads as an acknowledgement of how human systems are necessarily fallible and must be accounted for. Trust is a spectrum, and we wouldn't have the RFC process if everyone had perfect trust in the governance teams (which is a changing entity) to consider everything all the time. We wouldn't need it if they were capable of it! It's reasonable to say 'this is a value we hold and we don't know what constraints will come up later, but we'll be sad if we lose this value.' It's also reasonable to say 'we don't hold this value strongly enough to enshrine it against all possible futures.'",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T00:50:17Z,True,rust-lang_____rfcs_____2544_____453703218,"> I don't imagine anyone here doubts that it is technically parseable / will work. the issue is that once it's made-live on nightly (and ""nothing breaks""), it's easy to make-permanent while ignoring/dismissing the cost argument (""already paid on rustc, who cares about other places""), and then in the future use it as precedent for ""well the grammar is already post-LL(k) so we can keep adding ever more grammar costs"".

To be clear, this is not an argument about turbofish, or this particular RFC. This is a philosophical objection. If the grammar is already not LL(k), that doesn't immediately imply that any language feature that's *also* not LL(k) will automatically be considered as having no cost on the grammar or parser. Arguing that a change should not be made, because the first such change (even if justified) means other similar changes will be made is fallacious. It implies that those participating in discussions don't consider proposals thoroughly (which, seems to be clear from this thread, is definitely not the case).

One could use exactly the same argument for: we should not add any complex features, even if they are useful, because it means we're more likely to add more unnecessary complex features in the future. Judging the value of proposals is exactly what the RFC process is for.

It's entirely reasonable to agree or disagree with this proposal based on its individual virtues. But philosophical objections are not pertinent.

> See also recent comments on placing limits: that they ought to exist and be planned-for and adapted-to consciously rather than unconsciously overshot and only noticed in hindsight when it's actually harmful.

This is a very clear case of a situation in which we are *very* consciously discussing whether it is justified to modify them. Again, regardless of one's view on the topic, it unreasonable to claim that we are ignoring these issues.

> I will second @graydon (among others) here; I will be sad to see this RFC merged.

I think it's clear that this is going to generate a lot (more) discussion in the near future, so it would really help if we all tried to keep our comments constructive, even if we do have strong feelings one way or another about the change 🙂",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T00:55:10Z,True,rust-lang_____rfcs_____2544_____453703807,"> Arguing that a change should not be made, because the first such change (even if justified) means other similar changes will be made is fallacious.

Maybe, but it's not fallacious to argue that no change of a particular type should be made (even if justified), because that leaves a clearly delineated area with clear benefits in complexity.

This may be philosophical but it's hardly ""not pertinent."" This sort of philosophy is *exactly* how we can keep ourselves from losing sight of the forest for the trees. It's really the only way we can even judge overall language complexity, and we're already on a pretty tight budget there- if we haven't blown it already.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T00:57:58Z,True,rust-lang_____rfcs_____2544_____453704165,"> it would really help if we all tried to keep our comments constructive

I don't think it's constructive to claim that Graydon's objections are not ""pertinent"" or to dismiss them as ""philosophical"". Nor is it constructive to accuse him of ""mistrust"".
",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T01:05:54Z,True,rust-lang_____rfcs_____2544_____453705177,"> To me, this reads as a matter of mistrust in the current language team's ability to regulate

Correct. I believe the current language team is failing to adequately regulate the addition of costs. And I believe in the context of a change the premise of which is to _remove an explicit category of cost-control in the language_, that is a reasonable criticism to make.

> We considering making a deliberate choice here. Nothing is done unconsciously.

You quoted half of what I said seemingly in order to misread it. The present is of course conscious: but you're consciously voting to remove the need to be conscious of such costs _in the future_. You're trading a present explicit limit that you must (by nature of its visibility) _currently_ consciously consider for a future implicit limit (which is there no matter what -- just ""out there somewhere"" in the class of ""too much complexity"") that, by nature of no longer being visible, will be unconsciously overshot.

The very fact that this limit caused people to stop and think about whether to go further _is its virtue_. You are proposing removing it, after which there will be one less explicit checkpoint that causes people to stop and think whether to go further in the future.

> If the grammar is already not LL(k), that doesn't immediately imply that any language feature that's also not LL(k) will automatically be considered as having no cost on the grammar or parser

This statement exhibits a deep misunderstanding of how these social processes work over years of people arriving, examining the current landscape, and evaluating what's acceptable or not. IOW that is _exactly_ what it implies, and if you have not noticed that that is how this process works I don't know what else to say.

> philosophical objections are not pertinent

Totally disagree.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T01:09:28Z,True,rust-lang_____rfcs_____2544_____453705566,"I don't think this point has been raised before: this sentence is extracted from “Making non-turbofish idiomatic” from @Centril's summary:

> Thus, to make Foo::<T> idiomatic we would need to reverse this lint and it would make virtually all Rust code thus far unidiomatic.

The very same problem will happen if this RFC is merged: either `.collect::<T>()` will become idiomatic, and virtually all Rust code thus far will become unidiomatic, or it will not, and this RFC will have changed basically nothing (well… replaced an error with a warning, but still confusing the beginner).

-----

Also, I don't think this has already been discussed: if the aim of this RFC is really only to experiment on nightly and decide afterwards, then why not make it an eRFC? Even people in favor of the current text sound like they would be more in favor of it as an eRFC than as an actual RFC.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T01:11:52Z,True,rust-lang_____rfcs_____2544_____453705811,"> I think it's clear that this is going to generate a lot (more) discussion in the near future, so it would really help if we all tried to keep our comments constructive, even if we do have strong feelings one way or another about the change 🙂

I am trying to be constructive; I don't have any details to add that haven't already been said, and better, by others. But we do not legislate decisions in Rust by emoji reactions, and so I feel that actually voicing dissent here, rather than just clicking a 👍 button, is of substance and is worth doing.

> philosophical objections are not pertinent

I can't disagree more strongly with this statement. This RFC is largely about various philosophies regarding the language and its development.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T01:14:51Z,True,rust-lang_____rfcs_____2544_____453706089,"@rpjohnst 

> Maybe, but it's not fallacious to argue that no change of a particular type should be made (even if justified), because that leaves a clearly delineated area with clear benefits in complexity.

I certainly agree that it's legitimate to argue for retaining formal properties and the merits of those as compared with other values. But let's have and continue *that* conversation. We can ask some questions:

1. What are the practical implications of losing LL(k)?
    a. Will tooling suffer considerably?
    b. How harder will implementations of Rust parsers become?
    ....
    c. in particular what are the practical implications of this specific use of backtracking?
1. Do benefits to consistency outweigh the drawbacks?

What I argue with my move to merge this RFC is that there is sufficient (you may disagree, let's discuss that...) initial motivation to try it out on nightly and gather more data. The answer to some of these questions can only truly be answered empirically.

What I object to is the notion that the language team won't consider the implications of gathered results on nightly before we have even tried. If in the future, you believe the language team has done that (e.g. if we try to stabilize ...), *then* you should make objections about dismissing gathered evidence.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T01:32:07Z,True,rust-lang_____rfcs_____2544_____453707723,"Okay, after thinking about this a bit more, here is something new that I can bring to this thread.

We're at the start of the year for Rust's development. We do not have a roadmap yet, but looking over the Rust 2019 posts, many, many people have said, to some effect, ""I would like to see the rate of change slow down."" To see the language team move towards complicating the grammar significantly in order to remove a small edge case that, is in many ways, beloved on its own, is disheartening. And, as the first decision of the year, in some ways, it sets the tone for the year.

Your summary is an *amazing* summary, @Centril . I think we can all agree on that. But an excellent summary comment does not a good feature make. To weigh in on one aspect of this change that I do have significant experience with:

> In closing, because of the strong motivation in improving consistency and learnability,

I have spent a *lot* of time helping people learn Rust. The existence of the turbofish is nowhere near the top of things I'd want to have to improve the learnability of Rust. It is, at worst, a minor speedbump.

In order to not add to a pile of replies, I'll leave it at that. But I do think this is the wrong decision, for a number of reasons, ""philosophical"" and not.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T01:34:09Z,True,rust-lang_____rfcs_____2544_____453707907,"IMO comments like ""I agree with this sentiment"" or ""I disagree with this sentiment"" without additional context aren't much more valuable than emoji reactions. This is a hard discussion to have, since people have long-held opinions here that are contributing to a great deal of frustration on all sides.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T01:36:25Z,True,rust-lang_____rfcs_____2544_____453708156,"First of all, I'm incredibly enthusiastic about this change, and I feel it removes a major pothole for users. And I found @Centril's write-up excellent and quite clear.

@rfcbot reviewed

That said, I do feel that it would be appropriate to explicitly state in the RFC that this is *not* precedent for any future non-LL(k) grammar changes, and that any such proposals must be independently evaluated.

@rfcbot concern please-explicitly-disclaim-grammatical-precedent",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T01:48:51Z,True,rust-lang_____rfcs_____2544_____453709244,"> You quoted half of what I said seemingly in order to misread it.

I apologise if it seemed that way. It was not intentional.

> You're trading a present explicit limit that you must (by nature of its visibility) currently consciously consider for a future implicit limit

Right: I misinterpreted your previous comment. You're saying that to be justified in making a decision that alters limits, it is very important to be completely explicit about what limits would exist afterwards, to make sure making such changes in the future is not made any easier. It's about ensuring accountability, regardless of whether or not there's currently trust in the system. I agree this *isn't* something that has currently been addressed and is something that is important to address.

> IOW that is exactly what it implies

I suppose this is precisely what accountability in terms of explicit limits is about: making sure it doesn't matter how careful such discussion in terms of implicit limits and consequences is.

> > philosophical objections are not pertinent

> I can't disagree more strongly with this statement. This RFC is largely about various philosophies regarding the language and its development.

That's precisely my point: the discussion this RFC is generating at the moment is about the design of the language as a whole. It becomes difficult to differentiate discussion that's relevant to turbofish, say, from discussion that's about the right way to make design choices for the language. One may be a prerequisite topic, but I think it should be a discussion in its own right, rather than taking over the discussion of a particular design. These arguments are ones that could be made with respect to really *any* large feature.

I'm not arguing that philosophical discussions are not important in general (on the contrary: I really do). I think simply that we should identify the concerns specific to this proposal and specific to Rust's evolution in general, which is a much wider discussion. This proposal might bring many of these concerns to the forefront, but it doesn't mean that this proposal encompasses or represents all of these wider concerns.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T01:52:18Z,True,rust-lang_____rfcs_____2544_____453709531,"I'm in strong agreement with @steveklabnik here. The juice does not seem worth the squeeze. This change implies a lot of work, not only in implementing it, but also _migrating away_ from it in the ecosystem. Sometimes that's worth doing. But, in my opinion, I don't think turbofish is enough of a problem to justify this change.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T01:52:30Z,True,rust-lang_____rfcs_____2544_____453709553,"> One may be a prerequisite topic, but I think it should be a discussion in its own right, rather than taking over the discussion of a particular design.

Then this RFC should be tabled until that discussion has been held.

> These arguments are ones that could be made with respect to really _any_ large feature.

The feature is tiny. The consequences of the change are extensive.
",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T01:56:42Z,True,rust-lang_____rfcs_____2544_____453709856,"I'd like to emphasize that costs are contextual.  The fact that this change would make it impossible for classical parser generators to parse Rust is certainly significant.  But I think it's also significant that it would add *very little* complexity to any parser implemented with recursive descent, apparently including all the codebases people are actually using to parse Rust at the moment (except vim, but as mentioned previously, vim.rs already uses a very crude approximation of Rust's grammar).  It's not just a matter of saying ""parsing complexity is fine as long as it's technically decidable"" – a motto you might ascribe to C++, say, or even C given the lexer hack.  It's ""excluding this type of parser generator is okay if the costs are otherwise reasonable"".

To look at it another way, even though the current Rust grammar is ""simple"" from the perspective of a classical parser, from other perspectives it's quite complicated/awkward.  A few years ago I wrote a syntax extension to add Swift-like named argument syntax to Rust, basically by desugaring `foo(a: b, c: d)` into something like `foo__a_c(b, d)`.  For various reasons, I decided to implement this using my own minimalist parser rather than using an existing one.  For one, `syn` didn't exist at the time and I was worried about compile times using `syntex_syntax`.  Also, I wanted my plugin to do its best to accept unknown syntax and pass it through, for the sake of compositionality: I was already adding new syntax on top of stock Rust, and if someone wanted to use my plugin in conjunction with another that did the same, one of the plugins would have to run first, and pass through instances of the other's added syntax.

Luckily, I could implement that desugaring while being oblivious to most of Rust's syntax.  An identifier followed by an open paren, for example, is (AFAIK) guaranteed to be a function call unless either (a) the identifier is one of the `Fn` traits or (b) before the identifier is the keyword `fn` (making it a function definition instead).  However, for some reason I did want to keep track of the delimiter nesting structure of the code; in retrospect I'm not sure whether this was actually necessary, but it seemed so at the time.  But to do that, I had to distingush between the two meanings of `<`, which meant I had to distinguish between type and expression context.  So I had to implement rules like ""`:` introduces a type unless it's in a struct literal"" and ""an identifier followed by `{` might be the start of a struct literal, or it might be the end of something like `if foo = bar {`"".  This made the parser a lot more complicated than it would have been if Rust hadn't repurposed `<` as both a delimiter and an operator.  Even though a full Rust parser can distinguish between expression and type state with no trouble, even with classical algorithms, it was still an obstacle for a more limited parser.  And while the remove-turbofish change now being proposed wouldn't have made its job any easier, it wouldn't have made it particularly harder either; it would only add a bit extra to the large amount of ambiguity that already exists from its perspective.

Incidentally, another (more minor) bugbear was lambda syntax.  Differentiating between lambdas and the binary `|` operator requires differentiating between two different states within expression context: whether we're (a) expecting an expression or unary operator, or (b) after an expression, expecting a binary operator or the end of the block.  Of course, that's table stakes for a proper parser; but for my purposes I think I could have gotten away with not distinguishing them, reducing the number of grammar rules my parser had to care about, if Rust had used a different lambda syntax.  Just for a bit of perspective.

So what's my point?  I'm not saying that Rust's syntax being complicated in some ways is a reason to add other types of complexity out of pure spite. _(...probably.)_  Rather, I'm suggesting that we're not at as sharp a precipice as it might seem.  Abandoning LL(k) is not necessarily crossing the Rubicon; it's just crossing one Rubicon among others, some of which have already been crossed, others of which won't be crossed even with this change.  It's still a cost, and thus worth considering very carefully.  But it's not an all-or-nothing decision of whether Rust should be parser-friendly or not.
",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T02:03:14Z,True,rust-lang_____rfcs_____2544_____453710318,"@rfcbot concern too-uncertain-for-its-value

I always liked the first slide from http://venge.net/graydon/talks/intro-talk-2.pdf:

> Technology from the past come to save the future from itself

Or, further in,

> Concentrate on known  ways of achieving
> - more safety,
> - more concurrency,
> - less mess

And I don't feel like a potential GLL parser is that.

I can't help but feel like this is another RFC where I think that diagnostics -- which aren't part of a hypothetical language spec and where speculative fancier things as quality of implementation improvements is fine -- are the right place to solve the problem, not language changes.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T02:14:25Z,True,rust-lang_____rfcs_____2544_____453711097,"> it's just crossing one Rubicon among others, some of which have already been crossed, others of which won't be crossed even with this change

That this rationale occurs here and now ought to give pause (and confirmation to my point above re: how this process works socially). This is what the future will hold: someone will say this exact same sentence about _this_ Rubicon when justifying proceeding over the _next_ one. I'm suggesting that having one that is actually the _last_ one is intrinsically valuable.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T02:22:04Z,True,rust-lang_____rfcs_____2544_____453711635,"It's a mistake to take metaphors and analogies too literally, but ""it's just crossing one Rubicon among others"" is quite ironic. The significance of Caesar crossing the Rubicon was that it was an irreversible step with immense consequences.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T02:29:24Z,True,rust-lang_____rfcs_____2544_____453712137,"Well, if there's a possibility of reversing this change even after it goes through extensive nightly testing and possible adoption on the stable language in a future edition, then I'm ok with it.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T02:31:16Z,True,rust-lang_____rfcs_____2544_____453712287,"> I'm in strong agreement with @steveklabnik here. The juice does not seem worth the squeeze. This change implies a lot of work, not only in implementing it, but also _migrating away_ from it in the ecosystem. Sometimes that's worth doing. But, in my opinion, I don't think turbofish is enough of a problem to justify this change.

I don't think there needs to be any real urgency to migrate away from it.  In particular, personally I wouldn't want the compiler to even warn about turbofish usage until a significant amount of time has passed since the new syntax became available.

@steveklabnik 
> We do not have a roadmap yet, but looking over the Rust 2019 posts, many, many people have said, to some effect, ""I would like to see the rate of change slow down."" To see the language team move towards complicating the grammar significantly in order to remove a small edge case that, is in many ways, beloved on its own, is disheartening. 

I don't have a very strong opinion on whether turbofish removal is a good feature or not.  But personally, I'm disheartened by the suggestion that Rust needs to slam the brakes on language changes.  There are so many little features that have been blocked for years on the state of the compiler implementation.  Some of them have RFCs already accepted (which I realize nobody is proposing to get rid of) – but others have RFCs postponed, and still others never got past the pre-RFC or issue stage, just because someone realized early on that they wouldn't be possible to implement anytime soon.  Many of these features have little user-facing complexity overhead, or even negative.  As one example, given
```rust
fn foo<T>() {
    type B = Box<T>;
}
```
...it's pretty obvious what this should do, and from a user's perspective, the fact that it doesn't work is itself an unnecessary bit of complexity.  Adding support for it would effectively reduce complexity.

But there are other features which *would* add user-facing complexity.  There are certainly valid rationales for opposing them.  Yet some of them would have made it into the language earlier on, with much less opposition, if not for implementation blockers.  They aren't necessary to have.  But they're not extraneous either; they would round out the language, make it more elegant.  Freezing Rust forever based on the state of the implementation at a certain time leads to a design that's random, arbitrary.

Admittedly, that doesn't negate the fact that every change has a real cost to the continually increasing number of users who already use Rust – regardless of how good an idea it would have been 'back in the day'.  It's hardly *unusual* in software to see ancient implementation artifacts preserved for the ages for compatibility reasons.  But... it's disappointing.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T02:39:40Z,True,rust-lang_____rfcs_____2544_____453712891,">  I'm disheartened by the suggestion that Rust needs to slam the brakes on language changes.

Where did anyone suggest that? If there's one thing that is not constructive, it's using loaded language and hyperbole to misrepresent actual arguments.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T02:39:50Z,True,rust-lang_____rfcs_____2544_____453712899,"> It's a mistake to take metaphors and analogies too literally, but ""it's just crossing one Rubicon among others"" is quite ironic. The significance of Caesar crossing the Rubicon was that it was an irreversible step with immense consequences.

My point is that there are many different types of irreversible steps Rust either could take or has taken, some of which (I argue) have consequences comparable to this one.

After all, because of backwards compatibility, every bit of added complexity is irreversible.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T02:39:56Z,True,rust-lang_____rfcs_____2544_____453712906,"> I'm disheartened by the suggestion that Rust needs to slam the brakes on language changes

I think I'm less disheartened than you might be, because many of those posts _also_ tend to want complex and many-changes-needed things like type-level integers.  ([Random example](https://blog.cessen.com/post/2018_12_12_rust_2019_its_the_little_things))

So overall I read the posts more as ""there's lots of good stuff already on the list; let's spend our available effort on those first"" than as ""nothing should be changed"".",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T02:42:35Z,True,rust-lang_____rfcs_____2544_____453713056,"> > I'm disheartened by the suggestion that Rust needs to slam the brakes on language changes.
> 
> Where did anyone suggest that? If there's one thing that is not constructive, it's using loaded language and hyperbole to misrepresent actual arguments.

For example, from [@steveklabnik's Rust 2019 blog post](https://words.steveklabnik.com/thoughts-on-rust-in-2019):

> Well, there are a few features that are in the pipeline that I do think should land [...]
>
> But after that? I’d like to see a moratorium on major features until 2020, and I’d prefer if we limited 2020 to two or three, if any.
>
> We’ve hit a sweet spot. We’ve always said that Rust 1.0 was about stability, not completeness. I think we’re fast approaching completeness.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T02:43:18Z,True,rust-lang_____rfcs_____2544_____453713093,"> 
> 
> > It's a mistake to take metaphors and analogies too literally, but ""it's just crossing one Rubicon among others"" is quite ironic. The significance of Caesar crossing the Rubicon was that it was an irreversible step with immense consequences.
> 
> My point is that there are many different types of irreversible steps Rust either could take or has taken, some of which (I argue) have consequences comparable to this one.
> 
> After all, because of backwards compatibility, every bit of added complexity is irreversible.

Again, my point was that the use of that metaphor is ironic. If this really is a crossing of the Rubicon, that would be a very strong argument not to do it. But again, metaphors aren't literal so it would be a mistake to argue from the consequences of Caesar's actions to whether this RFC is advisable.

And regardless of what is arguable, the question here is the cost in terms of consequences -- which includes the effort hashing out the philosophical issues and the strain on human relationships -- relative the benefit of the change.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T02:45:27Z,True,rust-lang_____rfcs_____2544_____453713279,"Hopefully we can return to discussing the merits and demerits of LL(k), the specific ambiguities in this RFC, and the merits and demerits of this RFC's motivation. I think things are getting quite off-topic.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T02:48:22Z,True,rust-lang_____rfcs_____2544_____453713490,"> 
> 
> Hopefully we can return to discussing the merits and demerits of LL(k), the specific ambiguities in this RFC, and the merits and demerits of this RFC's motivation. I think things are getting quite off-topic.

We were told that those aren't pertinent (and you hearted that). Again, my view is that this RFC should be shelved if resolving the philosophical issues is a prerequisite.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T02:53:58Z,True,rust-lang_____rfcs_____2544_____453713833,"> For example, from [@steveklabnik's Rust 2019 blog post](https://words.steveklabnik.com/thoughts-on-rust-in-2019):

I'm not going to get dragged off to someone's blog entry. If it's not an argument made here, then it's not ""pertinent"".",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T02:54:17Z,True,rust-lang_____rfcs_____2544_____453713849,"**Moderator note:** @jibal Please stop the tit-for-tat and picking excessively at folks' language. We should all be participating in this discussion with an assumption of good faith. If you have a problem with this, please email the Rust mods at rust-mods@rust-lang.org. Do not litigate it in this thread.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T02:57:43Z,True,rust-lang_____rfcs_____2544_____453714059,"> 
> 
> **Moderator note:** @jibal Please stop the tit-for-tat and picking excessively at folks' language. We should all be participating in this discussion with an assumption of good faith. If you have a problem with this, please email the Rust mods at [rust-mods@rust-lang.org](mailto:rust-mods@rust-lang.org). Do not litigate it in this thread.

Nice picking on me and accusing me of bad faith. I will now unsubscribe.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T03:11:19Z,True,rust-lang_____rfcs_____2544_____453714777,"One big problem we have with this RFC is that at this point there can only be arguments for the learnability benefits and aesthetic/ideological reasons and against the complexity of implementation/knock down effects on diagnostics/interactions with other features and aesthetic/ideological reasons.

I personally lean against this change in particular for (in my view) pragmatic reasons against wanting to see negative interactions with existing codebases. There have been proof of concepts showing that the feature _can_ be reasonably implemented and we can see the effect of it on our existing tests, but I worry what the feature being used could break havoc on code during development (incomplete code, incorrect code, etc.).

There _is_ a ticket to start collecting metrics from the compiler. If we had that, we could run the new behavior in the background and see if there's a big increment of errors between the two parser behaviors, that way we could get real, hard numbers, instead of opinions. But without that we can only use our best judgement/experience/biases to evaluate wether this change is worth it.

Personally I don't find it as a reasonable wart of the language that will not stop anyone that could learn the language from learning it. I don't see the turbofish as any different to [requiring people to write parenthesis around the structs in `if (T {}) == (T {}) { println!(""Ok""); }`](https://github.com/rust-lang/rust/pull/51360) or [requiring a space between `<` and `-` in `if x<-1 {}`](https://github.com/rust-lang/rust/pull/51883): a limitation that can be annoying, but one that we help as much as possible (and suggestions can _very_ easily be applied in RLS enabled editors).
",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T03:31:07Z,True,rust-lang_____rfcs_____2544_____453715762,"> I am trying to be constructive; I don't have any details to add that haven't already been said, and better, by others. But we do not legislate decisions in Rust by emoji reactions, and so I feel that actually voicing dissent here, rather than just clicking a 👍 button, is of substance and is worth doing.

I thought that the very reason we ""do not legislate decisions in Rust by emoji reactions"" is exactly to discourage voicing consent/dissent without adding new arguments. I hope we're making decisions based on the strength of arguments, not the people or the number of people in consent/dissent. With all due respect, statements such as ""I would be very sad to see this merged"" really don't contribute anything to the discussion (for the record, neither do statements such as ""I can't wait for this to be merged"") -- as it brings emotional weight to the table, almost accusing the opposing party of hurting one's feelings.

> There is a ticket to start collecting metrics from the compiler. If we had that, we could run the new behavior in the background and see if there's a big increment of errors between the two parser behaviors, that way we could get real, hard numbers, instead of opinions. But without that we can only use our best judgement/experience/biases to evaluate wether this change is worth it.

This is a great idea. Is there a link to the ticket? Given the stalemate we're in in terms of opinions, actual data would help so much.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T03:38:21Z,True,rust-lang_____rfcs_____2544_____453716146,">>There is a ticket to start collecting metrics from the compiler. If we had that, we could run the new behavior in the background and see if there's a big increment of errors between the two parser behaviors, that way we could get real, hard numbers, instead of opinions. But without that we can only use our best judgement/experience/biases to evaluate wether this change is worth it.
>
>This is a great idea. Is there a link to the ticket? Given the stalemate we're in in terms of opinions, actual data would help so much.

@Wyverald https://github.com/rust-lang/rust/issues/45857. It is not a trivial amount of work though.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T04:24:16Z,True,rust-lang_____rfcs_____2544_____453718441,"As a compiler writer, I don't see LL(k) as something that particularly matters. Parsing technology has improved since the '70s. What's wrong with using the newer technology if it makes the language easier to use?

As far as ""philosophy"" goes, my philosophy is this: Programming languages are tools, nothing more. That means we should make the best tools we can, of course, but we need to be mindful that we are simply making tools for a particular practical purpose. (In the case of Rust, that's making systems programming safer and more approachable.) Formalism can be useful for programming languages, but only insofar as it helps those languages achieve their goals better. For example, a formal model of the type system can help prove that the language does indeed achieve its goal of memory safety. A formal model of the grammar can be useful to help make tooling easier to write or to detect parsing ambiguities.

What I don't see the need for is formalism *for its own sake*, and this is why I'm confused as to the objections here. It's worth asking *why* we seem to want the LL(k) property. And I don't mean just ""it might be easier to write tooling with LL(k)"". I mean, what tools, *specifically*, can you not usefully write with a grammar that requires unbounded lookahead? Is there an editor that does not allow grammars with unbounded lookahead? That, to me, is a much more interesting question than theoretical formalisms. Formalism is a *means*; it is not an *end*.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T04:39:29Z,True,rust-lang_____rfcs_____2544_____453719129,"It's worth remembering, by the way, that LL(k) is by definition nothing more than ""a grammar that one particular parsing algorithm from the 1960s accepts"". The reason the notion of LL(k) exists is so that we can draw a line around the set of grammars that can be parsed with that type of parser. So the concept of LL(k) is only useful *insofar as we care about that particular algorithm*. Thus my question is: Why, specifically, should I care about the LL parsing algorithm?

There may well be good reasons! I'm not wedded to the idea of dropping the turbofish. But I'd like to hear who, specifically, needs to use an LL parser to parse Rust, and so far I haven't seen anyone say that they need to. Again: formalism for its own sake is uninteresting; the question is what *purpose* the formalism serves.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T04:42:32Z,True,rust-lang_____rfcs_____2544_____453719269,"> the question is what purpose the formalism serves

As a cost limit. There aren't a lot of ways to limit endless growth, but this is one and it's reasonably easy to articulate.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T04:44:32Z,True,rust-lang_____rfcs_____2544_____453719347,"> As a cost limit. There aren't a lot of ways to limit endless growth, but this is one and it's reasonably easy to articulate.

This is circular logic. I'm questioning what the cost of losing LL(k) is.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T04:51:50Z,True,rust-lang_____rfcs_____2544_____453719645,"It's not circular at all. _It is a limit_. Removing it is removing a limit, going from ""we have a limit"" to ""we have no limit"".",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T04:58:32Z,True,rust-lang_____rfcs_____2544_____453719912,"> It's not circular at all. _It is a limit_.

Yes, but why is __*this*__ *specific* limit the one to pick/retain?

> Removing it is removing a limit, going from ""we have a limit"" to ""we have no limit"".

We will still have limits after this. It is *moving* or weakening a limit rather than removing all limits on grammar complexity. Given @joshtriplett's request for an explicit note about not making this a precedent (which I support) it seems things are still quite constrained; it's using backtracking in one specific *pathological* (and demonstrably non-occuring wrt. the ambiguity) instance. For example, we are not moving towards a CSG or type 0 grammar (if we forget about macros...).",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T05:01:42Z,True,rust-lang_____rfcs_____2544_____453720079,"Nobody is suggesting that we stop caring about what impact the complexity of the grammar has on tooling. In fact, the summary post does the exact opposite: it puts forth an argument that this grammar change will *not* have a meaningful impact on tools.

In other words, we do have a limit. Everyone agrees that we should not make changes that make it hard for tools to parse Rust. It's just that this limit is stated in terms of *practical* consequences, not theoretical ones.

And as stated before, if we want theoretical boundaries for some reason, LL(k) is a strange one to start with. LL(k) is the set of grammars parseable by a particular algorithm. If nobody is using that algorithm to begin with, I don't see why that is a particularly meaningful complexity boundary.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T05:04:27Z,True,rust-lang_____rfcs_____2544_____453720247,"To elaborate on this, an example of a limit that *would* make sense to me is: ""We should not make changes to the Rust grammar that make the Vim highlighting noticeably slower, or that would make it cease to work."" Backed up with data, that would be a perfectly reasonable example of a limit.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T05:22:26Z,True,rust-lang_____rfcs_____2544_____453721013,">  LL(k) is a strange one to start with. LL(k) is the set of grammars parseable by a particular algorithm

My point is it was not onerous thus far, and transgressing it here is not based on an important need or anything; it's based on a conversation about how having a limit is archaic. Which suggests that if that's the way we're thinking about limits, whatever _new_ limit is picked will just be adjusted again when it's viewed as inconvenient. LL(k) is -- to borrow a biblical phrase -- a hedge around the law. It's a barrier that is definitely far enough back from whatever real hazards exist in overcomplexity of grammar, it's obviously safe for all plausible tools, it's not hard to stay within, and it's obvious and clear as a criterion.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T05:27:09Z,True,rust-lang_____rfcs_____2544_____453721215,"I guess we just fundamentally disagree about whether it's worthwhile to have limits that don't have specific practical reasons for their existence (i.e. ""if we break limit X, then undesirable thing Y will necessarily happen as a result""). I don't know what to call such limits other than ""arbitrary"". (Which, of course, is not to say that I don't see the point in limits at all; I just prefer practical ones.)",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T05:36:03Z,True,rust-lang_____rfcs_____2544_____453721588,"Undesirable thing Y is ""the grammar is too complex for a human to understand or a machine to parse or the maintainers to keep straight"" and it absolutely will happen _eventually_ if we have no limit and keep expanding. The only question is whether we stay back from this event _by policy_ -- which means picking a limit that denotes a place _before_ it happens -- or remove checks on it until it's too late, encountering the limit _after_ it happens.

It's like this: you've got a radiation badge and a Geiger counter. The badge will tell you that you just got a fatal dose of radiation. The Geiger counter is going to tick a bunch before you get to the fatal radiation but it'll also tell you when you're at, say, 1000 milirems, which _is_ a safe place but is also probably a place you might want to stop walking in the direction of increasing ticks in order to _avoid the fatal radiation_. Do you look at the badge and say ""well hey I can tell when I've been irradiated so let's get rid of the Geiger counter""?",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T05:43:02Z,True,rust-lang_____rfcs_____2544_____453721898,"We all agree that the grammar needs to be understandable and that the machine should be able to parse it. The disagreement is whether sacrificing LL(k) hurts those two goals. So far, I haven't seen any compelling reasons why LL(k) affects human readability or the ability of the machine to parse the language.

It may well be that losing turbofish makes it harder for a human to understand Rust code! But, if so, the LL(k) property doesn't have anything to do with it. Humans don't use LL(k) parsers.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T05:56:49Z,True,rust-lang_____rfcs_____2544_____453722513,"From a big picture point of view: Rust is still a pretty easy language to parse. With my compiler writer hat on, ordering popular languages from hardest to easiest to parse, I guess I'd come up with something like:

Tier 1:
* Perl
* C++

Tier 2:
* PHP
* Ruby
* C
* Scala
* JavaScript

Tier 3:
* Python
* Rust
* Scheme (expanding macros)
* Lisp (likewise)

Tier 4:
* Java
* C#
* Go

Tier 1 is basically ""parsing is intertwined with semantics in arbitrary ways"". Tier 2 is ""needs lexer hacks"" (e.g. JavaScript's context-sensitive lexing of `/`). Tier 3 is ""doesn't need lexer hacks, but is somewhat complex and/or needs macro expansion"". Tier 4 is the simplest.

I would say that only tier 1 can really be characterized as ""not understandable by a human and not parseable by anything other than the reference implementation"". The others have or could reasonably have independent implementations.

Note that the difficulty of parsing Rust in practice mostly has to do with macros and has little to do with the complexity class of the grammar. I think we've done a good job so far keeping the language relatively friendly for tooling as far as parsing is concerned, and, moreover, we have a long way to go before we run into trouble.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T06:31:18Z,True,rust-lang_____rfcs_____2544_____453724105,"> The main positive motivation of this RFC is consistency and by extension making Rust easier to learn. That is, having to use turbofish for function application is, as noted in the motivation an unexpected corner case.

As someone who trains rust professionally and has probably the most training experience under their belt, I disagree with this.

While I agree that the presented cases are valid, but I feel like this argument is applied selectively here. It _is_ and unexpected corner case, but it also doesn't matter. Rust has tons of learnability problems, but this extremely far down the list.

* Turbofish is a rather rare syntax in use and easy to learn once you know it
* It's verbose, but that's fine, as usage is rare
* Its confusion with `Vec::<u8>` is _not_ an issue of the Turbofish, but of the `Vec::<u8>` syntax
* It's a single, self-contained bit of knowledge
* I agree with @H2CO3 that the turbofish also serves as a marker

At worst, Turbofish is what I call an _odd fact_. _Odd facts_ are not necessarily easy to uncover, but rather easy to keep in mind as you learn them.

What confuses me is that this always pops up around syntax, while we are _extremely happy_ to keep or introduce odd facts in other places in the language, leading to much more confusion and _much harder_ ways around. Just as examples:

* `impl Trait` is not available in traits. That's an `odd fact`, figuring out the the semi-replacement (bounded associated types) is hard and applying it is _verbose_.
* `where ...` is not considered when detecting overlap trait implementations. That's an `odd fact` and hard to circumvent if you hit it.
* Lifetime syntax is _incredibly_ hard to figure out just by reading code and a place where a lot of tutoring is needed

If verbosity is seriously the argument, we need to start doing a push towards removing verbosity from the language. I guess we can all agree that the boat ""Rust is a verbose language"" has sailed.

If consistency is the argument, there's far more long-standing issues with language consistency to be fixed before caring about turbofish.

Making turbofish the corner case that matters is weird: programming languages are full of corner-cases, that comes from the complexity of the domain. People are _used_ to those. There's popular programming languages that are basically all edge-cases. I'm not saying that's a good thing, but a corner-case does _not_ necessarily make a language harder to learn, especially if they are simple facts with rare application.

I hate to say this, but I get the impression that the Turbofish is an instance of the bikeshedding problem: small enough to argue about, standing out enough for people to care and the willingness to get rid of it at all cost.

I strongly oppose that change, I find the core argument unconvincing and the repercussions to serious and unpredictable. I agree with @graydon that boundaries should be crossed with great care and motivation, this change does not give enough motivation. I appreciate some people don't care about the boundary. But it has been existing and respected for a long time and has a reasoning, I think this issue does not carry its weight to change the reasoning.

The FCP of an RFC is also _the worst place_ to have arguments about the parser complexity of a language. As long as that discussion is ongoing, I recommend shelving the RFC.

Finally, I'd like to add that - as a project - we currently have tons of things on our plates. Seeing the impact on tooling and other RFCs in this discussion doesn't make my heart happy :/.

All respect to @varkor for trying again and again, but I think we should care about other issues currently.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T06:54:05Z,True,rust-lang_____rfcs_____2544_____453725128,"I have to say that the idea of having self-imposed limits that we can never breach, even if the limit is ultimately shown to be pointless, concerns me. It seems to me to be irrational--like, objectively so--for us to come to the conclusion that a limit is arbitrary, yet continue to impose that limit upon ourselves. Especially since this supposed LL(k) limit wasn't ever something that was formally documented that I recall.

Needless to say, I don't believe that Rust could have succeeded if it was this dogmatic in the early days. The changes that we made that were hugely controversial at the time because they breached some arbitrary limit are now completely uncontroversial. (For example, we used to have a 5 character limit on keywords!) The changes are now universally accepted precisely because, while these changes had effects on the formalism, they didn't have negative effects in practice, and as Rust is an industry language the practice is ultimately what matters.

I think the discussions at the beginning of this thread were a lot more productive than the more recent discussions. Discussions about subjective readability and learnability are extremely important: that's the whole reason to make (or not make) this change, after all. Discussions about whether the grammar conforms to some formalism tied to a particular algorithm from the '60s seem to me to be irrelevant.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T06:58:27Z,True,rust-lang_____rfcs_____2544_____453725337,"> It seems to me to be irrational--like, objectively so--for us to come to the conclusion that a limit is arbitrary, yet continue to impose that limit upon ourselves

Did you just like completely miss all the commentary I made above about making a benign and observable limit that is well-short of the one you're worried about, to be sure you don't hit the bad one?",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T07:02:08Z,True,rust-lang_____rfcs_____2544_____453725553,"My point is that I perceive the motivations of the change odd in the first place, given its context within the subjects of learnability and readability and that the repercussions at large don't merit the change.

I have absolutely zero issue with us deciding to go move up the grammar ladder given enough motivations, I don't feel this is the good time and place.

> I think the discussions at the beginning of this thread were a lot more productive than the more recent discussions.

Also note that this _is_ the FCP phase, so I'm confused how the lower part of the discussion is kind of devalued. People are made aware of the RFC for that reason again and people now weight the argument in @Centril's summary.

> Discussions about subjective readability and learnability are extremely important: that's the whole reason to make this change, after all. 

Yes, but we don't invest a lot of time to provide them with proper footing, making this a playground of people with enough time and privilege to promote their opinion.

> Discussions about whether the grammar conforms to some formalism tied to a particular algorithm from the '60s seem to me to be irrelevant.

I'm sorry, but I don't appreciate that sentence. Techniques from the 60s don't lose their validity just because the 60s are long ago.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T07:04:37Z,True,rust-lang_____rfcs_____2544_____453725686,"Limits are *not* benign if adhering to them imposes costs somewhere else. (In this case, the cost is learnability and readability.)

Furthermore, your analogy presupposes that we can't know when we've made the language unable to be read by humans or machines, and so we have to be extremely conservative. But that isn't the case: as I argued above in my tier list, the problems occur when you intertwine parsing and semantic analysis, or at the very least when you introduce lexer hacks. Nobody is proposing doing either.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T07:08:15Z,True,rust-lang_____rfcs_____2544_____453725856,"> I'm sorry, but I don't appreciate that sentence. Techniques from the 60s don't lose their validity just because the 60s are long ago.

They do if those techniques are obsolete. Strict LL parsers are obsolete now.

If being backward compatible with compiler technology of the 1960s was a constraint, then we'd have to introduce the `register` keyword to Rust, because good register allocation was impractical back in those days.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T07:10:46Z,True,rust-lang_____rfcs_____2544_____453725979,"> Limits are _not_ benign if adhering to them imposes costs somewhere else. (In this case, the cost is learnability and readability.)

Can you give me a rough estimation of the time wasted on newcomers by learning turbofish (which, in itself is a feature usually more for advance programming) and the cost introduced to readibility, measured at a codebase of - say - 10000 lines of code? Preferably compared to other language features?

I don't want to say that these are not issues, but as we are only comparing experiences, my experiences of turbofish being not a huge issue is as valid as yours that seems to make it a huge issue.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T07:11:05Z,True,rust-lang_____rfcs_____2544_____453726012,"> In this case, the cost is learnability and readability

In this case, that cost is defined by reference to 5 comments on the internet. I can find 5 comments about _anything_ in rust that confused someone. The thousands of crates authored were written by people who seem not to have been stumped by this. The language is learnable as-is, and where it's not, we've got feedback from people here who teach rust who say this is not one of the actual problems. It's just _something someone wants to change_.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T07:12:47Z,True,rust-lang_____rfcs_____2544_____453726137,"> What confuses me is that this always pops up around syntax, while we are _extremely happy_ to keep or introduce odd facts in other places in the language, leading to much more confusion and _much harder_ ways around. Just as examples:
> 
> * `impl Trait` is not available in traits. That's an `odd fact`, figuring out the the semi-replacement (bounded associated types) is hard and applying it is _verbose_.

This is not a state of affairs that anyone's ""extremely happy"" to have; it's more like `impl Trait` as a feature is not finished yet.  The original `impl Trait` RFCs [still not quite fully implemented](https://github.com/rust-lang/rust/issues/34511) – well, I can't tell whether `existential type` is 'done', but if so, it only recently became that way, and both it and `impl_trait_in_bindings` are not yet stable.  Also relevant are GATs, which are waiting on Chalk: `impl Trait` returns from a generic trait method are equivalent to a GAT.  Once that stuff is done, I'm pretty sure `impl Trait` in traits is highly desired, especially for the sake of `async fn`.

> * `where ...` is not considered when detecting overlap trait implementations. That's an `odd fact` and hard to circumvent if you hit it.
This is not true in general; e.g. this compiles, but not if the `where` is removed:
```rust
trait Foo {}
trait Bar {}
impl<T> Foo for T where T: Bar {}
impl Foo for i32 {}
```
But there are some cases that aren't handled, such as bounds with distinct associated types.  IIRC this is yet another thing that's waiting on implementation work, in particular Chalk.

> * Lifetime syntax is _incredibly_ hard to figure out just by reading code and a place where a lot of tutoring is needed
Lifetime syntax is an area where significant changes and improvements have been made over time, most recently with the addition of implicit lifetime bindings.  It's still tricky, in large part because lifetimes are fundamentally complex.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T07:13:55Z,True,rust-lang_____rfcs_____2544_____453726178,"I personally find turbofish to be ugly and unintuitive, because it deviates from the type syntax. But, as always, with something subjective I'm happy to be outvoted if people do in fact like the turbofish.

There are plenty of things I didn't get my way with; I filed an RFC way back in the day to rename `i32` to `int32` that went over like a lead balloon and I was completely fine with that. :)",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T07:15:27Z,True,rust-lang_____rfcs_____2544_____453726230,"> But there are some cases that aren't handled, such as bounds with distinct associated types. IIRC this is yet another thing that's waiting on implementation work, in particular Chalk.

Sure, I know. But this is work that doesn't even need an RFC, yet, we're spending time on this RFC to remove an easy-to-learn edge case. ",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T07:16:36Z,True,rust-lang_____rfcs_____2544_____453726278,"> I personally find turbofish to be ugly and unintuitive, because it deviates from the type syntax. But, as always, with something subjective I'm happy to be outvoted if people do in fact like the turbofish.

And I would agree with you on that. I don't _like_ it. I have no issue with it being there, though and am staggered by the amount of time spent to remove it. If it were to unlock 4-5 features downstream, I'd be much more up for it.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T07:22:34Z,True,rust-lang_____rfcs_____2544_____453726563,"> Sure, I know. But this is work that doesn't even need an RFC, yet, we're spending time on this RFC to remove an easy-to-learn edge case.

Are you suggesting that instead of participating in an RFC, we should be going and working on the compiler implementation?  If so, that's a nice sentiment, but it's easier said than done; certainly it would take me far more time to get up to speed on the current status of Chalk than it takes to post here.  If that's not what you meant, I don't see your point, since those things are entirely orthogonal.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T07:30:26Z,True,rust-lang_____rfcs_____2544_____453726975,"> In this case, that cost is defined by reference to 5 comments on the internet. I can find 5 comments about _anything_ in rust that confused someone. The thousands of crates authored were written by people who seem not to have been stumped by this. The language is learnable as-is, and where it's not, we've got feedback from people here who teach rust who say this is not one of the actual problems. It's just _something someone wants to change_.

It may be true that the supposed cost has not been adequately established by concrete evidence; I do agree @steveklabnik's opinion on the matter is highly significant, due to his experience with teaching Rust.  On the other hand, absence of evidence is not evidence of absence.  IMO, the concept of ""complexity budget"" is key here: even if turbofish isn't itself the breaking point that drives someone away from Rust, it's yet another thing to learn in a language that's renowned for being hard to learn – one that, unusually, doesn't need to exist.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T07:31:37Z,True,rust-lang_____rfcs_____2544_____453727033,A turbofish that only shows up in old or weird code is arguably worse for the complexity budget than a turbofish that shows up consistently.,True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T07:33:14Z,True,rust-lang_____rfcs_____2544_____453727119,"I disagree.  Turbofish shows up very early when learning Rust, for things like `collect::<Vec<_>>` – much earlier than you'd be likely to be perusing ""old or weird code"".",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T08:15:44Z,True,rust-lang_____rfcs_____2544_____453729352,"> Are you suggesting that instead of participating in an RFC, we should be going and working on the compiler implementation? If so, that's a nice sentiment, but it's easier said than done; certainly it would take me far more time to get up to speed on the current status of Chalk than it takes to post here. If that's not what you meant, I don't see your point, since those things are entirely orthogonal.

No, I'm suggesting that the language _as is_ already has a lot of places that need to be fixed in the accepted boundaries and accepting new RFCs with such downstream repercussions as this doesn't improve the situation. This is certainly something that needs to be weighted, some changes might be worth doing this tradeoff, I don't feel this one belongs to it.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T08:22:55Z,True,rust-lang_____rfcs_____2544_____453729766,"> I disagree. Turbofish shows up very early when learning Rust, for things like collect::<Vec<_>> – much earlier than you'd be likely to be perusing ""old or weird code"".

The hard part here is not the turbofish syntax, but learning that you need to explicitly need to parametrize _collect_ here in some way.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T08:36:15Z,True,rust-lang_____rfcs_____2544_____453730518,"> * Its confusion with `Vec::<u8>` is _not_ an issue of the Turbofish, but of the `Vec::<u8>` syntax

@skade I have no idea what you mean by this, `Vec::<u8>` *is* turbofish syntax (which in turn is a variant on type-application where the other variant is `Vec<u8>`). Please elaborate.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T08:42:13Z,True,rust-lang_____rfcs_____2544_____453730876,"@centril sorry, I changed the wording. Thanks for noticing that, I wrote this before first coffee ;).",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T08:45:23Z,True,rust-lang_____rfcs_____2544_____453731014,"> It may be true that the supposed cost has not been adequately established by concrete evidence; I do agree @steveklabnik's opinion on the matter is highly significant, due to his experience with teaching Rust.

What's the bar to be considered relevant here? I'm the trainer for the European Mozilla Rust teams, have a trainer crew of five and run the oldest learners meetup worldwide. I hate pulling credentials, but it seems necessary.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T09:36:17Z,True,rust-lang_____rfcs_____2544_____453733727,"There's a lot of discussion of parsing formalisms in here and, since I've ended up doing more research in that area than I ever wanted to, I thought it might be worthwhile to give my 2p worth. Sorry in advance!

I have written langauges and parsers in the following styles: generalised parsing (Earley, which has the same expressive power as GLL or GLR); PEG; and LR. I started off with generalised parsing, because it seemed like a good idea to be able to handle any Context-Free Grammar (CFG). The problem with parsing in a formalism that allows ambiguity is that, for any non-trivial language, you can never know if you've resolved all cases of ambiguity. When a user hits a new case at run-time, what do you do? The safe choice is to raise an error. I tried using a default resolution scheme, but that can be *extremely* surprising to users -- and it surprised me, in unpleasant ways, several times. There are ambiguity heuristic tools (I had a small part in developing [one such tool](http://soft-dev.org/pubs/pdf/vasudevan_tratt__detecting_ambiguity_in_programming_language_grammars.pdf)), but they can never find all ambiguities. I eventually found parsing in such formalisms so dangerous that I abandoned it for my work.

Then I moved to PEG / recursive descent. There are no ambiguity problems. Yay! But there is an even worse problem, which doesn't seem to have an agreed name, but I ended up calling ""shadowing"". The PEG ""a / ab"" matches the string ""a"" but not, surprisingly, the string ""ab"". Just this week I've been converting a recursive descent parser to LR, and found some comical cases of this. There is no way to formally model this, so you don't know if your recursive descent parser has unintended examples of this. This also makes it hard (in my opinion, impractical) for users to work out how an input will be parsed.

So now -- and I tried to avoid going down this route for over 10 years -- I've gone back to LR parsing (which we can consider as similar-ish to LL in the sense that it's provably ambiguous, albeit slightly more expressive than LL). Yes, it's often frustrating to write grammars in this style, but that's in large part because it's guaranteed to be safe. It won't be ambiguous, it won't cause shadowing, and normal humans stand a chance of working out how an input will be parsed. Personally I've ended up feeling these are the best long-term trade-offs for users. I've put my money where my mouth is: I've tried to make [LR error recovery better](https://arxiv.org/abs/1804.07133) and I've written a [Rust yacc parser](https://github.com/softdevteam/grmtools).

All this is to say that, in one way LL(k) is an irrelevant, and in some ways an annoying, property -- yes, absolutely. But as soon as one moves beyond LL/LR, one opens up a dangerous can of worms that can never be shut again.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T10:38:08Z,True,rust-lang_____rfcs_____2544_____453737180,"As a daily user of rust at work, I can only beg to not introduce more ways of expressing the same thing. `Box<T>` vs `Box<dyn T>` and `&Trait` vs `&dyn Trait`. I still don't get why I should write `dyn` (I read something about it mirroring `impl`). More to write, no difference.

Since rust can't remove the turbofish, I can only beg, please don't add this!",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T10:42:48Z,True,rust-lang_____rfcs_____2544_____453737465,"> As a daily user of rust at work, I can only beg to not introduce more ways of expressing the same thing. Box<T> vs Box<dyn T> and &Trait vs &dyn Trait. I still don't get why I should write dyn (I read something about it mirroring impl). More to write, no difference.

I don't think `dyn` is a good example here. The reason is that it marks visually (and also without type resolution) that there is a fat pointer and dynamic dispatch involved. That could lead to all kind of weird problems and hard to implement diagnostics down the line. Also, `dyn` is mandatory in 2018, so there's only 1 way again.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T10:45:02Z,True,rust-lang_____rfcs_____2544_____453737609,"@skade 

> Also, `dyn` is mandatory in 2018, so there's only 1 way again.

[No, it's not mandatory.](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=67a4216942d6b33ec652bfd29579d23c)

```rust
type X = Box<Iterator<Item = u8>>;
```
Is entirely legal.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T10:53:44Z,True,rust-lang_____rfcs_____2544_____453738120,"Since tooling comes up a lot in this discussion, I feel I should share my IDE-writer perspective.

First of all, supporting this particular feature in IDE wouldn't be hard. IDEs use hand-written parsers (for good error recovery), and lookahead/backtracking is easy to add there.

An example here would be Kotlin. It was designed specifically around IDEs, and it has this very ambiguity around generics. Here's a fun little program that compiles and runs:

```Kotlin
fun foo(a: Any, b: Any) { println(""comparisons"") }
fun foo(a: Any) { println(""generics"") }

fun <U, V> a(c: Any) {}
class b
class c

fun main(args: Array<String>) {
    val a = 0
    val b = 1
    val c = 2
    val d = 3
    foo((a < b), (c > (d))) // comparisons
    foo(a<b, c>(d)) // generics
}
```


But, from the same IDE writer position, I agree with ideas about establishing formal complexity boundaries, and about avoiding non-essential changes, for the sake of (artificially) keeping complexity low and the language stable.

Supporting this particular feature in the IDE is work. Not a ton of work, but still something which could have been spend on figuring out how to support macros better, for example.

But if there's a precedent for ""changing grammar in significantish ways is OK"", I expect there will be a constant tickle of such ""small incremental steps"", which will create a significant amount of work for IDE writers, and which might slowly push us well beyond ""easy to support"" area.

Finally, I believe a good IDE support is one of the most effective ways for improving learnability. For example, Kotlin's compiler has only bare bones error messages, but this is completely irrelevant, because, in the IDE, you get the relevant code highlighted, the context around it analyzed fully, and you get a ""click here to fix error"" red light bulb.

The thing which is the primary blocker of good IDE support right now is ""quality of implementation"", not ""language design"". An important missing bit in QoI is full-fidelity syntax trees and parser with good error recovery, and *any* changes to the grammar make that work harder.
",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T15:31:28Z,True,rust-lang_____rfcs_____2544_____453756485,"Brian Smith brought up a good point on Twitter: we can solve the problem of LL(k), if we desire, by simply introducing a hard limit on the amount of lookahead that we do that is so high nobody will ever hit it in practice. The question, then, is the inconsistency of that limit vs. the inconsistency of turbofish in the first place.

(As well as, of course, the more important questions of usability, readability, pedagogy, etc.)",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T15:33:57Z,True,rust-lang_____rfcs_____2544_____453756684,"@matklad I might rephrase your position as (correct me if I'm wrong): Let's slow down the pace of language changes so that tooling can catch up to what we already have. That is perfectly legitimate, and I'm very receptive to that.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T15:53:31Z,True,rust-lang_____rfcs_____2544_____453758048,"> This also makes it hard (in my opinion, impractical) for users to work out how an input will be parsed.

I don't understand this claim. Since most parsers in the wild are recursive descent, this seems to imply that humans can't work out how input will be parsed in most languages. That doesn't seem true to me. Humans are generally capable of parsing C, in fact, despite C being context-sensitive due to the lexer hack.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T16:35:22Z,True,rust-lang_____rfcs_____2544_____453761372,"As an alternative to using the entire grammar of Rust to backtrack, can we do something like (strawman proposal):

    FNCALL := ... IDENT '<' CALLGENERICS '>' '(' ...
    CALLGENERICS := '<' CALLGENERICS '>' | '(' CALLGENERICS ')' | '[' CALLGENERICS ']' | (TOKEN \ {'<', '>', '(', ')', '[', ']'})*

In other words, don't parse all of Rust to determine which rule to use; just match parentheses, angle brackets, and brackets. This makes the grammar almost LL(∗). It's not truly LL(∗) because brace matching is not a regular language. However, if we place a limit on the amount of brace matching that we do—say, 16 levels or so—then the Rust grammar *will* formally be LL(∗), since regular languages are capable of nesting up to any arbitrary fixed depth. (I should stress that this is a purely theoretical result, since nobody would actually use a DFA to implement this.)",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T16:54:07Z,True,rust-lang_____rfcs_____2544_____453762822,"> Brian Smith brought up a good point on Twitter: we can solve the problem of LL(k), if we desire, by simply introducing a hard limit on the amount of lookahead that we do that is so high nobody will ever hit it in practice.

As in, you are saying that LL(500) enforced by the compiler is still technically LL(k)...?

While technically true, it's not really useful, for most practical purposes, LL(500) behaves like LL(*).",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T16:58:51Z,True,rust-lang_____rfcs_____2544_____453763196,"> As in, you are saying that LL(500) enforced by the compiler is still technically LL(k)...?
> 
> While technically true, it's not really useful, for most practical purposes, LL(500) behaves like LL(*).

I agree! As I've been saying, I don't find the LL(k) formalism particularly useful. I'm just saying that, if we feel we need the LL(k) property for whatever reason, we can effectively get it.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T17:51:18Z,True,rust-lang_____rfcs_____2544_____453767462,"> Since most parsers in the wild are recursive descent, this seems to imply that humans can't work out how input will be parsed in most languages.

The challenge with recursive descent parsers is that they also accept a non-CFG set of languages and implementers often don't realise when they've drifted into that set and/or aren't parsing the language they intended to parse. I know from experience (mine, and seeing other's parsers) that it's really easy to make subtle mistakes here. Anyway, this is probably a tangent to the main discussion.

With regards to the LL(k) formalism: the advantage it has is that (in its pure form, without any interaction with the lexer) it *guarantees* that there is no ambiguity (or, depending on your tool, guaranteeing that all points of ambiguity are pointed out to you, and you have to choose which way each is resolved). That's a powerful property. As soon as you move beyond LL/LR, you're in the realm of grammars where ambiguity is provably undecidable in general. So, yes, LL/LR are formalisms from ye olde days (in computing terms), but that doesn't mean they're pointless or out of date. There have been a couple of extensions (e.g. LRR) that enlarge the class of guaranteed unambiguous grammars, but AFAIK they're not significant differences. Until, and unless, that changes, there'll be an important place for LL/LR.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T18:12:01Z,True,rust-lang_____rfcs_____2544_____453769119,"Bit of a meta-observation about the current state of the discussion: This is somewhere where the FCP model kind of breaks down. The FCP is a period where ""closing arguments"" are made and typically rehashing arguments is frowned upon . But as I go through the post-FCP discussion here I'm realizing that that's not actually what's happening, what's happening is that multiple core arguments in this RFC are very subjective and people are disagreeing with the subjective leveling made at the end (something which could not have been done before the FCP comment making these subjective decisions was made!). 

This is also why I don't find it a productive argument to label the other side as ""philosophical"" or subjective; both sides -- the importance of LL(k) as a logical boundary for grammar evolution, and the severity of learnability issues of a turbofish -- seem pretty subjective to me. Yes, ""turbofish is hard to learn"" is itself a subjective notion, see [skade's excellent comment on this](https://github.com/rust-lang/rfcs/pull/2544/#issuecomment-453724105).

The discussion seems to have boiled down to some key (rather subjective) points:

 - Is LL(k) an important logical boundary? Is it important to have a focal point here at all?
 - Is turbofish that much of a hurdle to newcomers? @skade classed it as an ""odd fact"" (and pointed out we have a lot of them, as do other languages).

The second discussion isn't progressing as much as the LL(k) one, but imo resolving both is part of the solution here. Also worth noting: these points are somewhat independent -- even _if_ we decide LL(k) is not a big deal, we still need to decide if we consider turbofish to be enough of a weird edge case that we want to change it.

The reason I'm underscoring the subjectivity of these discussions is to point out that most of the arguments here boil down to more or less irredeemable differences of personal axioms (as is the case with most subjective disagreements). It's good to notice when that's starting to happen, to avoid endlessly talking in circles. 

I don't really have a solid recommendation for how I think the discussion should proceed in light of this; finding common ground seems tricky. But I think it's worth being aware of where the discussion is headed.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T18:51:38Z,True,rust-lang_____rfcs_____2544_____453772041,"To reiterate, if we cap the lookahead at any finite *level of nesting* of brackets (say, 16), then we will have an LL(∗) grammar, and therefore an unambiguous one. So, if our premise is that maintaining the LL(∗) property is important, the relevant question is whether having the turbofish is more inconsistent or having a finite nesting level is more inconsistent.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T18:55:34Z,True,rust-lang_____rfcs_____2544_____453772336,"@Manishearth You have a good point there that I was just going to write more about. But first, a reaction to an earlier comment:

Every time I encounter the need arise for an arbitrary numerical limit, I see a big red flag, spelling out ""hack"". And I wonder, and it just somehow appears misguided to me to resort to a hack in order to kinda-sorta, technically (but quite ""dishonestly"") get LL(k) with a sizeable portion of the real-life disadvantages of non-LL(k) / unbounded lookahead, whereas we could just go with real, actual LL(k=small) in the first place.

And now to the point of subjectivity. Yes, several aspects of this discussion are subjective. But I also noticed that along these lines, the (perceived) advantages of not having to type out the turbofish are being considered with a weight disproportionately high compared to the (perceived) disadvantages of the resulting ambiguity, first and foremost in *human* readers of the code. (Incidentally, I think in this issue human-readability is more important than machine-readability, because it's exposed to users directly, raw and naked, so it's not *only* an implementation detail anymore.)

Relatedly, I see it as a fallacious line of reasoning to first assert that beginners are not good enough at understanding and/or memorizing the literally 1-bit decision rule of ""the fish is needed in value context but not in type context"", then dismissing how they might equally struggle with the resulting ambiguities should the turbofish be gone. Conversely, if we believe and presume that some/most people are not going to be annoyed or misled by such ambiguities, why don't we also believe that having to memorize when to type and when not to type two colons is not an issue for some/most programmers?

There is an entire series of arguments in favor of this change based on ergonomics, yet these arguments seem to deny that in addition to people who find the turbofish more annoying than the ambiguity, there are also people who find ambiguities more annoying than having to memorize the turbofish.
",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T19:04:09Z,True,rust-lang_____rfcs_____2544_____453772943,"I hope this isn't just more retreading, but thanks to @ltratt's excellent https://github.com/rust-lang/rfcs/pull/2544#issuecomment-453733727 and @nagisa's https://github.com/rust-lang/rfcs/pull/2544#issuecomment-453686610, I'd like to elaborate a bit on https://github.com/rust-lang/rfcs/pull/2544#issuecomment-453674848:

> I would much rather have extra parser power leveraged toward improvements in error messages, editors, etc. *and not need it otherwise* than the reverse.

Today Rust's grammar does not require any backtracking (IIUC). However, `rustc` already does plenty of it regardless- this is purely to improve error recovery and messages. If backtracking becomes an actual tool required for correctness, that makes `rustc`'s job there harder, because there's less ""negative space"" in the grammar for it to bounce off.

Here's another example of this that I don't think has been mentioned: I work on a C++ IDE, and doing a full parse of the user's file often takes way too long. (I believe much of this is due to implementation, rather than language, but often that's just reality- e.g. this also applies to the RLS.) So for some operations, we have to find ways to skip things or jump in in the middle- and having the ability to use a more powerful parser than required by a successful straight-line compile is very useful here. (And no, this is not about the lexer hack- it does not increase the class of grammar we use in a straight-line compile, and it's not what we're working around here....)

In general, this grammatical negative space is valuable in and of itself, both for compilers and IDEs. When a user writes something wrong, if it falls into negative space it's more likely that we can tell what they intended based on what valid grammar is nearby. But if we extend the grammar, there's less negative space and it's more likely that the user will have meant something else, or that their wrong code already *does* mean something else.

So regardless of whether this particular change *immediately* affects this side of things, it still interacts with any future changes we may make. What I would prefer to take from @varkor's experiments here is not that we can make this change with only a little compatibility break (ugh) but that it's an *extremely effective* method of error recovery! Let's use it for that purpose, and focus on making the edit/compile/fix loop tighter, through a faster `cargo check`, or `rustfix` and IDE integration.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T19:18:43Z,True,rust-lang_____rfcs_____2544_____453773884,"@rfcbot concern needs-better-crater-run

It would be good to prepare a lint catching parsing ambiguity cases with more future-compatibility in mind than it was done in https://github.com/rust-lang/rust/pull/53578, like `f<1, 2>()` and `f<1 + 2>()`.
I planned to do it, but delayed the work due to edition-related tasks, perhaps now it's a good time to return to it.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T19:26:41Z,True,rust-lang_____rfcs_____2544_____453774407,"> most of the arguments here boil down to more or less irredeemable differences of personal axioms

I agree, and I don't want to be making pointless arguments in bad faith or anything. This may not be the ideal place to litigate the disagreement, but it's _clear evidence_ to me that the chorus of ""please stop changing things"" input from the community is being flatly ignored by the language team. [I said as much in as plain language above as I could](https://github.com/rust-lang/rfcs/pull/2544#issuecomment-453705177): the language team seems to be unable, and I think given the conversation I've seen here and elsewhere simply unwilling, to minimize or halt changes to the language. Lip service is paid, but the changes keep being justified and pushed through. This change will of course not break the language, but crossing a long-held design constraint for a seemingly minor papercut is _illustrative of the pattern_.

I thought I was perceiving this pattern from a distance over the past couple years and it motivated me to participate in the blogging-for-next-year thing a few weeks ago; the response in the past few weeks has been nothing but vigorous reinforcement of that perception. I tried to convince myself otherwise by going through the open and moving-towards-approval lang RFCs yesterday, looking for signs of a willingness to say no, to draw lines, to place limits .. and only found further reinforcement of the pattern of addition. Given the willingness on display to take on features, I can't avoid the conclusion that the language team has a serious divergence in _direction_ from .. well, at least where I _personally_ think it ought to be going if it's to retain a decent margin of safety from limits to engineering and cognition. Now, my opinions don't matter that much; maybe I'm old and obsolete and dramatically less-clever than the typical rust user or maintainer and so I'm yelling about nothing. But the issue is that given the number of other people who've mentioned observing and disagreeing with this same pattern, I am concerned that the broader community or org does not seem to have the capability to address a divergence of opinion about _where and how to wrap up the language_ within itself. 

The fact that [you refer to comments](https://twitter.com/ManishEarth/status/1083906817334292481) like ""saving rust from the lang team"" as toxic is perhaps fair from a quality-of-discourse perspective -- snark escalates, and deep personal differences ought to be de-escalated if they're ever to be resolved -- but it nevertheless embodies a sentiment that is _clearly felt_ by a large contingent of the community. I would have hoped there was some less-public, less-critical, less-intrusive way to make this point (I thought a solicited blog response might be adequate) but it seems all that has provoked is denial or insistence that the endless supply of motives for change (papercuts, ergonomics, expressivity, consistency, generality) subjectively outweigh the motives for cessation thereof, without an effort to recognize, reflect-on and resolve the large evident divergence of opinion about where the language _ought to be stopping_.

I agree this _is_ deriving from a major difference of subjective opinions, and that embedding that discussion in a discussion about LL(k) muddies the water a fair bit. I'm truly sorry to be bringing this up here and now; it's a canonical example but hardly a significant one. But I don't think that observation means that the divergence in opinion is solved (it will not be, regardless of the fate of this PR), nor that the broader guidance of the _central shared technical artifact_ that _everyone has to live with_ should thereby now-and-always go to with the current language team's preference for addition _if a big chunk of the community is indicating significant personal-subjective disagreement with that preference_. The inability to address such a division is indicative of a governance problem and I hate to be the person bringing that up, but it really seems to me that there is one here.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T19:35:50Z,True,rust-lang_____rfcs_____2544_____453775153,"> Every time I encounter the need arise for an arbitrary numerical limit, I see a big red flag, spelling out ""hack"".

But the turbofish is itself a hack. So it's a question of which hack is better.

> Here's another example of this that I don't think has been mentioned: I work on a C++ IDE, and doing a full parse of the user's file often takes way too long. (I believe much of this is due to implementation, rather than language, but often that's just reality- e.g. this also applies to the RLS.) So for some operations, we have to find ways to skip things or jump in in the middle- and having the ability to use a more powerful parser than required by a successful straight-line compile is very useful here. (And before you bring up the lexer hack, it does not increase the class of grammar we use in a straight-line compile, and it's not what we're working around here....)

There are real benchmarks provided in this thread. I think those are far more relevant than experiences with C++, which is a completely different language with far more parsing problems than the complexity class of the grammar.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T19:36:42Z,True,rust-lang_____rfcs_____2544_____453775200,"@graydon The fact that this is spiraling into a discussion about governance is disconcerting to me. To be frank, it's hard to read this as anything other than a wish to return to the days of you as BDFL. Rust just does not have that model anymore, and hasn't for years.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T19:40:37Z,True,rust-lang_____rfcs_____2544_____453775479,"> But the turbofish is itself a hack.

I get your point, and then we just disagree here. The reason why I don't see the turbofish as a hack is that it's a very simple way of completely eliminating a problem that has been present (and a pain point) in older languages. Given the circumstances, I would even call it *elegant* compared to other solutions. (And now I'm expecting the stones to be thrown.)

> So it's a question of which hack is better.

So, if we regard the turbofish as a hack, then it's the smaller one, because it's local, ie. it doesn't have any other side effect outside its immediate scope.
",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T19:41:55Z,True,rust-lang_____rfcs_____2544_____453775551,"> it's clear evidence to me that the chorus of ""please stop changing things"" input from the community is being flatly ignored by the language team.

Speaking as a member of the language team: no, it isn't. We're actively discussing such things, trying to find new processes, and in any case saying no quite often. Half the things you commented on in your commenting spree were those we had *already* decided against, or had not yet decided on and were leaning against. That they haven't yet been *closed* is not an indication that they're moving forward.

Yes, some improvement is needed. In particular, there was a spree of ""ergonomics"" RFCs that (in my opinion) didn't use the right criteria for evaluating the overall impact on the language. But I feel that that has slowed down, and we're cleaning up the result and trying to make sure the default answer is ""no"" without strong rationale.

That said, *this* RFC hardly seems like an example of ""we're making the language more complicated""; on the contrary, this change makes it simpler and more consistent.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T19:43:03Z,True,rust-lang_____rfcs_____2544_____453775625,"> There are real benchmarks provided in this thread.

My comment wasn't about the speed of parsing, so those benchmarks are mostly unrelated. It was about what we did after the *implementation*-related slowness- which Rust also has, and thus might also need to work around in similar ways.

> That said, this RFC hardly seems like an example of ""we're making the language more complicated""; on the contrary, this change makes it simpler and more consistent.

That's the *main point of contention* here. I personally think the opposite.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T19:43:29Z,True,rust-lang_____rfcs_____2544_____453775653,"I think it's obviously quite unlikely that this PR is going to be merged, and that's a success of the governance model, not a failure. There was a FCP, the community weighed in with ""wait, we don't like this"" after it went around on Twitter, and so now it's not going to happen. What's the problem?",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T19:45:03Z,True,rust-lang_____rfcs_____2544_____453775762,"@pcwalton
> I think it's obviously quite unlikely that this PR is going to be merged

I'm curious where you're getting the ""obviously"" from.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T19:46:34Z,True,rust-lang_____rfcs_____2544_____453775868,"@pcwalton I hate to say it, but, as a project member, I see @graydon's point. It's neither the first time he's voicing it, nor is he the only person who is raising it. There have been _multiple_ calls for stability in the ongoing 2019 blog campaign and I do know that some people approach Graydon with things that they don't feel that the current project staffing could deal with.

There's a growing feeling that I notice on multiple occasions that people _don't_ believe their input matters, and large resources being spent on _multiple_ tries to remove the turbofish are an instance of that problem. I want to add that this is not necessary my opinion, but that doesn't make the _feeling_ go away.

I would hope those issues would be pointed to the community team more, but what I can definitely say is the community team is also internally not _consulted_ on things like this, though assessment of situations like this is definitely _our_ expertise.

I know it's frustrating that generally small things spark these kinds of discussions, but here we are.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T19:48:21Z,True,rust-lang_____rfcs_____2544_____453775968,"> a wish to return to the days of you as BDFL

@pcwalton First: I never asked to be and never was (and strenuously resisted) any title like that when I was ""de facto tech lead"" inside a team at moz. I _regularly_ lost arguments to you, Niko, Dave, Marijn, Brian and numerous community members, managers and even interns. You're misrepresenting my tenure by using a term like that.

Second: those were some of the hardest and worst days of my life and I wouldn't take the job of even de facto tech lead of this project again if you paid me a fortune for it. If you think I have any nostalgia for that time, you are profoundly misunderstanding me.

I'm disappointed and hurt by this statement, and surprised that you'd even say it, given the circumstances of my departure.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T19:48:21Z,True,rust-lang_____rfcs_____2544_____453775967,"@skade
> There have been multiple calls for stability in the ongoing 2019 blog campaign

I've read many of those blog posts, and I agree. (Some of them are more constructive than others, but the sentiment is clear.) I feel the same way myself.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T19:55:14Z,True,rust-lang_____rfcs_____2544_____453776466,"@graydon 

> I agree, and I don't want to be making pointless arguments in bad faith or anything

to be clear, I wasn't saying that was the case with your comments, it was more of a general ""we are heading in this direction and it's good to be aware of it so we save ourselves hours of arguing"" :smile: 

My comment wasn't meant to be a rebuke of anyone, more of just a way to take stock of the state of the discussion.

> but it nevertheless embodies a sentiment that is clearly felt by a large contingent of the community

I think there's a good way and a bad way to express the underlying sentiment, I'm not passing judgement on that sentiment itself in the tweet you linked, just the way people typically express that sentiment.

I do think that discussing this and other general governance issues are off topic for this thread, though. 


The part of the governance discussion that's relevant to this RFC: it's clear to me that the same governance issues that plagued us during the run up to the edition are rearing their heads again. Given that we no longer have an edition deadline, we don't need to postpone thinking about them so that we can ship things. There have been multiple strong calls for solving ""governance debt""/""process debt""/""organizational debt"" this year, and it seems likely to me that we're going to decide to focus on that this year. Perhaps we should wait on resolving those first? Default to postponing contentious RFCs that stretch the limits of governance, or something like that.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T19:59:21Z,True,rust-lang_____rfcs_____2544_____453776739,"> Speaking as a member of the language team: no, it isn't. We're actively discussing such things, trying to find new processes, and in any case saying no quite often

@joshtriplett I'm heartened to hear it, and apologize for the bull-in-china-shop nature of my comments here. This is the last thing I want to be intruding on and I wish I could stay away for good. I'm feeling a bit too emotional about the idea that I'd be wanting to _be_ the governance of the project -- it basically destroyed my life last time I was involved to that extent -- and I hope the divergence I perceive is somehow resolvable. I am not calling for a coup or anything, just some indication of priority being given on acknowledging and responding to the evident gap in opinion. I wish you & the governance system of the project all the luck in resolving the tension here. There have in the past been divisions deep enough lead to people advocating forks; I would love for that to never happen to Rust, but it's only avoidable through conscious compromise, giving up on some of one's wants.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T20:01:10Z,True,rust-lang_____rfcs_____2544_____453776849,"@graydon For the record, I do believe you're perceiving a real problem, but it's one that the language team (and other teams) has seen and is dealing with as well.

Speaking specifically for *myself* at the moment, this is something I deeply care about, and more often than not I find myself the voice of dissent in the direction of ""no"". :)",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T20:03:15Z,True,rust-lang_____rfcs_____2544_____453776950,"> My comment wasn't meant to be a rebuke of anyone, more of just a way to take stock of the state of the discussion.

@Manishearth I did not read it as such. It seemed an honest and wise assessment. My comment about speaking in bad faith was to indicate that I recognize the risk of speaking that way myself, and that I wish to refrain from doing so.

> I do think that discussing this and other general governance issues are off topic for this thread, though

Clear enough. I ought to step away anyways, it's not doing myself or anyone here any further good. Apologies.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T20:09:30Z,True,rust-lang_____rfcs_____2544_____453777353,"@graydon I'm sorry. I apologize, that was out of line on my part.

(I had an entire post here typed up, but I think it would probably do more harm than good to litigate this further, especially in this RFC.)",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T22:13:08Z,True,rust-lang_____rfcs_____2544_____453784869,"Forgive me for piling on -- I'd also like to quickly apologize for setting a poor tone when I brought this up on Twitter. I could have easily separated out my need to vent from my desire to have a conversation about precedents, and I should have.

Re: this RFC, from @Manishearth:

> The part of the governance discussion that's relevant to this RFC: it's clear to me that the same governance issues that plagued us during the run up to the edition are rearing their heads again. Given that we no longer have an edition deadline, we don't need to postpone thinking about them so that we can ship things. There have been multiple strong calls for solving ""governance debt""/""process debt""/""organizational debt"" this year, and it seems likely to me that we're going to decide to focus on that this year. Perhaps we should wait on resolving those first? Default to postponing contentious RFCs that stretch the limits of governance, or something like that.

The point has been made several times about apparent themes of 2019 posts, specifically how many community members have called for adopting a more conservative stance towards changes to the language. I've waffled quite a bit myself over time, but something has started to happen that's changed my mind a little bit.

Rust is kinda doing really well? Where a necessarily short-term view sees scaling issues, I'm starting to see a really rosy longer-term future as long as we keep figuring the short term stuff out in good faith. If your metric for success is to grow the community and help the world deliver safer, faster software with less work, ""scaling problems"" translates roughly to ""problems due to unexpected levels of success."" In no small part thanks to the work of everyone in this thread. It's a sucky side effect of success, but it's still pretty awesome to have it, IMO.

Perhaps this is too generalized, but there's a fun cycle here:

* more people depend on the language (woo)
* the community grows (woo)
* the perceived value of the project increases (woo)
* the increased importance of getting each change right grows too (hm)
* the emotional value of ""real estate"" (RFCs, features, etc) grows too (hmm)
* the speed of making significant changes slows
* people perceive the language to be more stable and predictable
* more organizations depend on the language (oh no, but also woo)

Not sure how to resolve this, but if there's a chance that everyone here has done such important work that Rust is still valuable to the world in 10/20/30?/40??/50??? years, it's worth taking time to get answers to important questions right.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T22:37:39Z,True,rust-lang_____rfcs_____2544_____453786236,"One alternative I didn't see in the RFC:

Require space around ""<"" and "">"" for comparisons, and prohibit leading and trailing space in generics.

Maybe this is an obvious non-starter, but I thought I would mention it.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T23:03:52Z,True,rust-lang_____rfcs_____2544_____453787737,"@sayrer right now I can only think of once place in the syntax where whitespace is significant, and thats the nightly-only emplacement syntax, and that is because `<-` is a valid token, so `if x<-1 {}` _must_ be written as `if x < -1 {}`. There's no _technical_ reason it _can't_ be implemented that way, but making whitespace significant _can_ be a similar wart/piece of syntax context that developers will need to keep in mind when writing their code, not dissimilar to the turbofish, although granted, with a lower likelihood of being hit due to the predominant style when writing types, but just as likely to be hit by accident when writing comparisons as emplacement is.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T23:07:14Z,True,rust-lang_____rfcs_____2544_____453787937,"Prohibiting leading and trailing spaces in generics would mean one cannot have a closing `>` alone on its line, which is currently AFAIR the advised coding style for generics-heavy code.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-12T23:16:48Z,True,rust-lang_____rfcs_____2544_____453788491,"@estebank I agree it's a bit of a departure for Rust, but I think rustfmt already does this. One useful pattern for making these changes might be to lift things from rustfmt into the language itself (at the right time...).

@Ekleog Hmm. I guess only leading space really needs to be prohibited. This seems pretty easy to understand, as it isn't too different from HTML, etc.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-13T00:29:14Z,True,rust-lang_____rfcs_____2544_____453791904,"> the nightly-only emplacement syntax,

@estebank this was removed from nightly, https://github.com/rust-lang/rfcs/pull/2387",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-13T02:23:34Z,True,rust-lang_____rfcs_____2544_____453796456,"I think the turbofish is *in itself* a net negative for Rust - when I learned Rust, the error message did not helpfully suggest turbofish when you tried to use normal braces, so I spent some time unaware that I could specify the type as needed without pulling this expression out into its own let binding. Now, the compiler at least tells you what to do, but its still a stumble and it would be ideal for it to not to be necessary. But I'm wary of complicating the grammar and implementation, and I was optimistic about seeing good, nuanced and precise information about what the costs of removing the turbofish are.

I've gotten the sense this position is pretty roughly the lang team's previous consensus last time we talked about it. In other words, the turbofish is a cost we know, and we'd like to get an accurate weight of the cost we'd be taking on in exchange for it.

Unfortunately, that discussion is not what's emerged on this thread. This thread has become, like so many RFCs these days, full of sound and fury. Exercises like this are unproductive, exhausting, and emotionally draining for everyone involved. This much content, and with this much emotional fervor behind it, overwhelms the projects' processes and grinds other areas to a halt while we all deal with the repercussions of a discussion that erupts in the manner that this has.

I'm not sure what to do about this in the long term, but in an immediate sense I'm calling a cool down on this thread. I'm locking discussion for a couple of days or so and when it gets unlocked I hope it will be conducted with a decorum appropriate to an open source project.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2019-01-13T02:24:19Z,True,rust-lang_____rfcs_____2544_____453796484,"I fear the discussion here is getting way beyond the scope of this RFC. But to add to it anyway: I think it is correct to be concerned about the rate of change, and I know that both the language and core teams think a lot about rate of change. However, I think avoiding change for the sake of avoiding change is as bad as change for the sake of change. Let's focus on the magnitude of the change, as well as the costs and benefits.

IMO, turbofish is a wart. It is not a bad wart, as @skade says, it is easily learnt and infrequently encountered. Nonetheless, it is still something which has to be learnt and is not intuitive. If we can get rid of it, then I see that as making the language *less complex* for the user. As such it is the kind of 'polishing' change that I would like to see, c.f., change which truly adds something to, or changes the language. I think there is a valid and interesting debate to be add about whether the LL(k) property is an important one to keep. To my mind it is not - it is not the kind of formal category which makes a huge difference (c.f., type soundness, for example) and I think complexity for readers and writers is far more important than complexity for implementers or theoreticians (which is not to say it is not important, just less so). ",True,True,268,711818.1666666666
nox/serde_urlencoded/51,2019-01-14T09:04:57Z,False,5c3c51e96480fdab993b92a6,"What is the purpose of that change? Why should the input be ignored when trying to deserialise a unit struct? Why deserialise to a unit struct in the first place? `Option<T>` is supported because you could want to deserialise `Some(actual_stuff)`, whereas I don't see a use case for unit structs there.",True,False,3,130944.03333333334
nox/serde_urlencoded/51,2019-01-14T09:06:43Z,False,5c3c52546480fda8622204a5,"Err, didn't notice it is for serialisation.",True,False,3,130944.03333333334
google-test/signcla-probe-repo/152875,2019-01-15T14:46:27Z,False,5c3df3796480fdad4c46cdaf,indiv-pass-fork: test succeeded,True,False,1,0.0
cabaletta_____baritone_____313,2019-01-16T00:23:40Z,True,cabaletta_____baritone_____313_____244983775,Exactly what the title says UwU,True,True,22,1500.4166666666667
cabaletta_____baritone_____313,2019-01-16T18:41:08Z,True,cabaletta_____baritone_____313_____248403969,"This provides very limited usage of the builder function, you can't use a custom schematic type, custom naming, or custom origin.",True,True,22,1500.4166666666667
cabaletta_____baritone_____313,2019-01-16T18:41:27Z,True,cabaletta_____baritone_____313_____248404076,"I don't even know what to say about this, what could you possibly do to remove and re-add the whole file.",True,True,22,1500.4166666666667
cabaletta_____baritone_____313,2019-01-16T18:41:59Z,True,cabaletta_____baritone_____313_____248404267,This method should align in order with the Baritone implementation,True,True,22,1500.4166666666667
cabaletta_____baritone_____313,2019-01-16T18:42:31Z,True,cabaletta_____baritone_____313_____248404483,Not a friendly name for the user,True,True,22,1500.4166666666667
cabaletta_____baritone_____313,2019-01-16T18:43:25Z,True,cabaletta_____baritone_____313_____454893002,"On top of the issues stated in the review comments I made, your commit is not linked to your GitHub account, it isn't signed, and I've already decided to make the changes myself.",True,True,22,1500.4166666666667
cabaletta_____baritone_____313,2019-01-16T19:15:36Z,True,cabaletta_____baritone_____313_____454903717,"Don't ever say UwU in this christian repo again, thanks.",True,True,22,1500.4166666666667
cabaletta_____baritone_____313,2019-01-16T19:15:52Z,True,cabaletta_____baritone_____313_____454903803,uwu motherfucker,True,True,22,1500.4166666666667
cabaletta_____baritone_____313,2019-01-16T19:16:03Z,True,cabaletta_____baritone_____313_____454903874,No!,True,True,22,1500.4166666666667
cabaletta_____baritone_____313,2019-01-16T19:16:13Z,True,cabaletta_____baritone_____313_____454903939,uwu uwu uwu uwu!! ,True,True,22,1500.4166666666667
cabaletta_____baritone_____313,2019-01-16T19:16:24Z,True,cabaletta_____baritone_____313_____454904007,Quit it!,True,True,22,1500.4166666666667
cabaletta_____baritone_____313,2019-01-16T19:16:35Z,True,cabaletta_____baritone_____313_____454904070,*growls while slowly exposing my terrifying eagle beak*,True,True,22,1500.4166666666667
cabaletta_____baritone_____313,2019-01-16T19:17:08Z,True,cabaletta_____baritone_____313_____454904251,"Stop erping in the Baritone issues, mr leijurv",True,True,22,1500.4166666666667
cabaletta_____baritone_____313,2019-01-16T19:18:04Z,True,cabaletta_____baritone_____313_____454904590,"*rips you to shreds with my sharp eagle talons killing you instantly*

*this repo is my turf, or rather, nest*

*screeches warning you to stay away*",True,True,22,1500.4166666666667
cabaletta_____baritone_____313,2019-01-16T19:18:44Z,True,cabaletta_____baritone_____313_____454904792,I am requesting ownership over this repo as I consider you being too mentally unstable to be the main leader of the project.,True,True,22,1500.4166666666667
cabaletta_____baritone_____313,2019-01-16T19:20:22Z,True,cabaletta_____baritone_____313_____454905280,you have an anime profile pic so your opinion doesn't count *chuckles through beak*,True,True,22,1500.4166666666667
cabaletta_____baritone_____313,2019-01-16T19:20:58Z,True,cabaletta_____baritone_____313_____454905469,Well played,True,True,22,1500.4166666666667
cabaletta_____baritone_____313,2019-01-16T19:21:24Z,True,cabaletta_____baritone_____313_____454905647,*literally triumphantly eating your corpse*,True,True,22,1500.4166666666667
cabaletta_____baritone_____313,2019-01-16T19:24:10Z,True,cabaletta_____baritone_____313_____454906602,Uh,True,True,22,1500.4166666666667
cabaletta_____baritone_____313,2019-01-16T19:24:23Z,True,cabaletta_____baritone_____313_____454906689,This issue is cursed,True,True,22,1500.4166666666667
cabaletta_____baritone_____313,2019-01-16T19:24:44Z,True,cabaletta_____baritone_____313_____454906823,Wow Brady hates me kms,True,True,22,1500.4166666666667
cabaletta_____baritone_____313,2019-01-17T01:24:05Z,True,cabaletta_____baritone_____313_____455007004,uwu,True,True,22,1500.4166666666667
hibernate/hibernate-validator/1012,2019-01-17T08:22:53Z,False,5c403c8e6480fda560444fb6,Ok. We are looking forward for the review,True,False,72,112490.03333333334
sindresorhus/gifski-app/50,2019-01-18T05:51:48Z,False,5c416dd06480fdabc01a343c,"I think you need this on line 83:

```swift
progress.cancellationHandler = {
	generator.cancelAllCGImageGeneration()
}
```",True,False,66,7352.8
sindresorhus/gifski-app/50,2019-01-18T05:54:13Z,False,5c416dce6480fda50fa87070,Note: https://stackoverflow.com/a/6000289/64949,True,False,66,7352.8
sindresorhus/gifski-app/50,2019-01-18T05:55:41Z,False,5c416dce6480fdac49609f62,Can you add a short comment?,True,False,66,7352.8
sindresorhus/gifski-app/50,2019-01-18T05:57:24Z,False,5c416dce6480fda8f9b29b9d,"Since there are just two states, wouldn't it be easier to just use a boolean?",True,False,66,7352.8
sindresorhus/gifski-app/50,2019-01-18T06:00:32Z,False,5c416cb06480fdabf21a6125,Thanks for working on this! 🙌,True,False,66,7352.8
sindresorhus/gifski-app/50,2019-01-18T06:00:36Z,False,5c416cb76480fda794b254bb,The dock icon progress is not reset when cancelling.,True,False,66,7352.8
sindresorhus/gifski-app/50,2019-01-18T06:02:10Z,False,5c416dcd6480fda894436fdb,I'm not seeing any write error.,True,False,66,7352.8
sindresorhus/gifski-app/50,2019-01-18T06:03:33Z,False,5c416dcd6480fda4e30df35f,And make `padding` a `Double`. I prefer using `Double` for my own APIs whenever possible for ease of use.,True,False,66,7352.8
sindresorhus/gifski-app/50,2019-01-18T06:12:08Z,False,5c416f696480fdae5d5bcc85,"What do you think about this idea for the cancel button? The idea is that it fades over the percentage when you hover the window. It's just a quick mockup. Might look better to have it filled, since the progress circle is already unfilled. The benefit of this is that the progress circle doesn't have to move.

![gifski-cancel-button-mockup](https://user-images.githubusercontent.com/170270/51368541-765aa200-1b22-11e9-9673-545bb2ffde17.png)
",True,False,66,7352.8
sindresorhus/gifski-app/50,2019-01-18T08:25:47Z,False,5c418eba6480fda5a0a69051,"That's a bit cleaner, especially since we're not using other keys.

`cancelOperation(_:)` only works on `NSWindow`, `cancel(:_)` gets called on the `NSWindowController`.

https://stackoverflow.com/a/42440020",True,False,66,7352.8
sindresorhus/gifski-app/50,2019-01-18T08:30:22Z,False,5c418fd06480fdabc01a41ad,"> (Note: the latest master branch introduced an issue with the progress indicator. It seems to start the conversion in the background and takes quite a few moments before it starts indicating progress.)

I have noticed this too. I'll try to track down when it was introduced.",True,False,66,7352.8
sindresorhus/gifski-app/50,2019-01-18T08:32:52Z,False,5c4190696480fda50fa87f76,The `HoverView` could be expanded to also trigger `onHover` when the mouse moves inside the window. That's why I went with the `Event` enum straight away.,True,False,66,7352.8
sindresorhus/gifski-app/50,2019-01-18T08:34:30Z,False,5c4190d56480fda5ca578c0f,Added.,True,False,66,7352.8
sindresorhus/gifski-app/50,2019-01-18T08:35:34Z,False,5c41910a6480fda4fa115818,"<img width=""1841"" alt=""screenshot 2019-01-18 at 09 29 42"" src=""https://user-images.githubusercontent.com/225410/51374768-47353800-1b04-11e9-9f71-68e0f8b221e8.png"">

Even with the cancellation handler on line 83 of `Gifski.swift` implemented, I still trigger this fatal error if I cancel the conversion without the if statement in place.",True,False,66,7352.8
sindresorhus/gifski-app/50,2019-01-18T08:48:09Z,False,5c4193f96480fda4e30e03a7,"Never mind, I was just on the wrong build.",True,False,66,7352.8
sindresorhus/gifski-app/50,2019-01-18T08:53:14Z,False,5c41952b6480fdaf008bd65e,"I've added the comment and changed it to take a `Double`.

I prefer floats myself for their memory usage compared to doubles. It also adds a bunch of casts to this method. But I can see that it's more consistent with the existing functions.",True,False,66,7352.8
sindresorhus/gifski-app/50,2019-01-18T09:15:59Z,False,5c419a856480fdab5ddf98a2,"> The dock icon progress is not reset when cancelling.

Good catch. See commit message for reasoning behind implementation.",True,False,66,7352.8
sindresorhus/gifski-app/50,2019-01-18T09:19:35Z,False,5c419b616480fdaa6eaac560,This should update `previousProgressValue = 0` too.,True,False,66,7352.8
sindresorhus/gifski-app/50,2019-01-18T09:55:22Z,False,5c41a3be6480fdab993e3a05,"> What do you think about this idea for the cancel button? The idea is that the `x` button fades over the percentage label when you hover the window. Note that this is just a quick mockup. Might look better to have it filled, since the progress circle is already unfilled. The benefit of this is that the progress circle doesn't have to move. Having the progress circle turn into a cancel button is a common design choice. You can see this in the progress circle button when downloading a song in iTunes, for example.

I think that looks quite appealing. Let me see how it translates into code.
",True,False,66,7352.8
sindresorhus/gifski-app/50,2019-01-18T10:34:54Z,False,5c41acfd6480fdaf008be252,"![circular](https://user-images.githubusercontent.com/225410/51381631-f843ce80-1b14-11e9-9072-dbc9a8ba2202.gif)

I think this looks pretty cool, and it works well. What do you think? :)

I've added reusable support for these types of buttons to `CustomButton` in the process.",True,False,66,7352.8
sindresorhus/gifski-app/50,2019-01-18T10:46:25Z,False,5c41afb16480fdad04ddb199,"<img width=""472"" alt=""screenshot 2019-01-18 at 11 44 21"" src=""https://user-images.githubusercontent.com/225410/51382269-a4d28000-1b16-11e9-858b-24fc89520987.png"">
<img width=""472"" alt=""screenshot 2019-01-18 at 11 44 38"" src=""https://user-images.githubusercontent.com/225410/51382270-a4d28000-1b16-11e9-9a6e-7e5f733cfaaf.png"">

Reduced its size a little.
",True,False,66,7352.8
sindresorhus/gifski-app/50,2019-01-18T10:48:03Z,False,5c41b0246480fdac85145c1a,"Looks really good :)

The `X` looks a bit weird. It should be totally square. Either using an icon or a different font.",True,False,66,7352.8
sindresorhus/gifski-app/50,2019-01-18T10:49:02Z,False,5c41b04d6480fda75eb22cde,Using a font would make this a lot more portable. I'll have a look.,True,False,66,7352.8
sindresorhus/gifski-app/50,2019-01-18T11:12:57Z,False,5c41b5eb6480fda8f9b2bde0,"I noticed a problem. After having converted once, I can no longer drag another movie into the window.",True,False,66,7352.8
sindresorhus/gifski-app/50,2019-01-18T11:14:50Z,False,5c41b6686480fda560450742,"> I noticed a problem. After having converted once, I can no longer drag another movie into the window.

🤔 That worked yesterday. I'll look into it.",True,False,66,7352.8
sindresorhus/gifski-app/50,2019-01-18T11:28:33Z,False,5c41b9956480fda75eb23182,"I have been playing with this for a while now. Not so sure anymore about having the button be an unfilled circle. It feels like too many circle lines...

I played with having the cancel button circle filled:

<img width=""472"" alt=""screen shot 2019-01-18 at 18 14 43"" src=""https://user-images.githubusercontent.com/170270/51384276-6a84d500-1b4e-11e9-85b2-ba51494366f7.png"">

And it's a slight improvement, but it still feels like it could look better.

And then I thought we could make the progress circle itself the button:

![gifski-cancel-button-mockup-2](https://user-images.githubusercontent.com/170270/51384352-a7e96280-1b4e-11e9-9de1-d8a87f69fb3b.png)

And I kinda like this. Obviously needs tweaks and a better `X`. Thoughts? Open to other ideas too.",True,False,66,7352.8
sindresorhus/gifski-app/50,2019-01-18T11:35:11Z,False,5c41bb2d6480fda5ca57a280,"> And then I thought we could make the progress circle itself the button:

That was my initial thought as well, with the 'growing circle when pressing Esc'. The last mockup looks nice by itself. It's how it transforms between the progress indicator and the cancel state that determines how it finally looks though, I think. It could feel a but too bulky.

Every other element on the screen is outlines only, so it feels out of place pretty quick.",True,False,66,7352.8
sindresorhus/gifski-app/50,2019-01-18T11:59:16Z,False,5c41c0cb6480fdabc01a5a25,"<img width=""472"" alt=""screenshot 2019-01-18 at 12 57 06"" src=""https://user-images.githubusercontent.com/225410/51385845-b28d0300-1b20-11e9-878a-eddec22dc29f.png"">

I've gone through a few options and this seems to be the only squared x that's positioned properly. 🤔

Reducing the size much makes it rather subtle.",True,False,66,7352.8
sindresorhus/gifski-app/50,2019-01-18T12:13:30Z,False,5c41c4206480fda75eb23693,"Trying some weird sizes and I came up with this. I rather like it.

<img width=""472"" alt=""screenshot 2019-01-18 at 13 12 18"" src=""https://user-images.githubusercontent.com/225410/51386459-b752b680-1b22-11e9-8fda-6be4c2072d43.png"">

Especially how pressing cancel basically swallows the progress view.

<img width=""472"" alt=""screenshot 2019-01-18 at 13 12 06"" src=""https://user-images.githubusercontent.com/225410/51386461-b9b51080-1b22-11e9-83c1-675bcfa49717.png"">
",True,False,66,7352.8
sindresorhus/gifski-app/50,2019-01-18T12:49:58Z,False,5c41ccaa6480fdaeafc79b80,"Simply matching the progress view's size, looks cleaner.

<img width=""472"" alt=""screenshot 2019-01-18 at 13 40 21"" src=""https://user-images.githubusercontent.com/225410/51387852-e6b7f200-1b27-11e9-8da0-7ec2ecdf8218.png"">
",True,False,66,7352.8
sindresorhus/gifski-app/50,2019-01-18T12:57:47Z,False,5c41ce7f6480fdabc01a6017,"I can get onboard with this as well. Does not feel as bulky as I expected.

<img width=""472"" alt=""screenshot 2019-01-18 at 13 55 34"" src=""https://user-images.githubusercontent.com/225410/51388112-c472a400-1b28-11e9-9d34-a018f710311b.png"">
",True,False,66,7352.8
sindresorhus/gifski-app/50,2019-01-18T13:12:27Z,False,5c41d1f46480fdae2c5ddda4,"![dark-filled](https://user-images.githubusercontent.com/225410/51388882-0a306c00-1b2b-11e9-97b8-264a4594835f.gif)
",True,False,66,7352.8
sindresorhus/gifski-app/50,2019-01-18T13:17:10Z,False,5c41d30f6480fda4b87fee1d,I love the last one. Just reduce the size of the X slightly. ❤️,True,False,66,7352.8
sindresorhus/gifski-app/50,2019-01-18T13:22:48Z,False,5c41d45d6480fdadf558bea1,"Awesome. Glad we've worked through getting the best variant implemented. 👌

<img width=""472"" alt=""screenshot 2019-01-18 at 14 20 25"" src=""https://user-images.githubusercontent.com/225410/51389353-63e56600-1b2c-11e9-8ef2-a87135dd0caf.png"">
",True,False,66,7352.8
sindresorhus/gifski-app/50,2019-01-18T13:23:31Z,False,5c41d4896480fdacbc63966c,Perfect! 🎉,True,False,66,7352.8
sindresorhus/gifski-app/50,2019-01-18T13:29:34Z,False,5c41d5f46480fda4e30e2282,"The new X is nice. It made the done checkmark look retro though, so maybe the checkmark could get an upgrade too?",True,False,66,7352.8
sindresorhus/gifski-app/50,2019-01-18T13:34:46Z,False,5c41d72c6480fda5a0a6b43c,"@kornelski 💁‍♂️

<img width=""472"" alt=""screenshot 2019-01-18 at 14 32 08"" src=""https://user-images.githubusercontent.com/225410/51389861-ef132b80-1b2d-11e9-9a62-664974b43741.png"">

I think this one feels a lot less retro. It's not exactly in the same style as the X, but there's not that many glyphs to choose from unfortunately. Close enough, for now?",True,False,66,7352.8
sindresorhus/gifski-app/50,2019-01-19T19:54:11Z,False,5c4381966480fda7dae29448,Shall we merge this in @sindresorhus? 😊,True,False,66,7352.8
hibernate/hibernate-validator/1012,2019-01-20T19:22:30Z,False,5c44e23b6480fdaaf6d280bc,"we probably could remove this method and in `PredefinedScopeValidatorFactoryImpl` use the simple `getPropertyNodeNameProvider()` which would be initialized by the default implementation. 

In general we tend to add new methods to the bottom of this interface. 

It would be great to add some JavaDoc to the new methods. If you add it please also use `@since 6.1.0`.",True,False,72,112490.03333333334
hibernate/hibernate-validator/1012,2019-01-20T20:29:52Z,False,5c44e2416480fdae5d5d0bce,"hmm, that's an interesting choice of a contract. It's a nice way to not rely neither on reflection nor on our current `internal.properties.*` wrappers. I think though there might be a problem with JSON/Map validation case. An implementation of a `PropertyNodeNameProvider` would need to check the type of an object passed and determine how to proceed based on that. And as we plan to support any kind of property holders the implementations of `PropertyNodeNameProvider` would need to know about all of them.
Using `internal.properties.*` types would probably solve the problem but as @gsmet mentioned, these types are not yet ready to be public, and they might not become such. ",True,False,72,112490.03333333334
hibernate/hibernate-validator/1012,2019-01-20T20:36:54Z,False,5c44e23c6480fdaa17cf3d71,Do we need to keep both names resolved/original ones ? I was thinking that we could keep just one name. Then we also wouldn't need the `getResolvedPropertyPath()` method in `ConstraintViolationImpl`,True,False,72,112490.03333333334
hibernate/hibernate-validator/1012,2019-01-20T20:38:08Z,False,5c44e23d6480fda8c56f1b3f,keeping just one name as mentioned in one of the above comments would allow us to keep these methods unchanged. ,True,False,72,112490.03333333334
hibernate/hibernate-validator/1012,2019-01-20T20:44:13Z,False,5c44e23c6480fda991338056,We probably should change the name of this class so it matches more to its purpose. Let's first get settled with the main interface contract before any changes here.,True,False,72,112490.03333333334
hibernate/hibernate-validator/1012,2019-01-20T20:51:41Z,False,5c44e23b6480fda58a229485,"It's great that you've added this test implementation as we can uncover potentially interesting cases.
- How would it handle a case of getter properties? would you check both fields/getters ?
- Note that recently we merged in a new feature - https://hibernate.atlassian.net/browse/HV-1363 which would allow to define which methods should be considered as getter properties. Hence such `AnnotationPropertyNodeNameProvider` would need to know about currently used `GetterPropertySelectionStrategy`. ",True,False,72,112490.03333333334
sindresorhus/gifski-app/50,2019-01-21T04:48:32Z,False,5c4550516480fda6a9fb248c,"I noticed a problem. After having converted once, I can no longer drag another movie into the window.",True,False,66,7352.8
sindresorhus/gifski-app/50,2019-01-21T04:56:28Z,False,5c4554a96480fda4fa12a715,"This does not update when the user changes their accent color in System Preferences. I know that sounds obscure for the user to do while Gifski is running, it's something Apple says you should handle correctly. I suggest we expose a `onUpdateLayer` callback on `CustomButton` class, which would be called in `func CustomButton#updateLayer`. That would be a powerful hook for users to customize behavior on layer changes.",True,False,66,7352.8
sindresorhus/gifski-app/50,2019-01-21T05:01:09Z,False,5c4554a96480fdae2c5f0eb4,This could use a comment about where it's coming from. I could also not find this in the docs? Could you?,True,False,66,7352.8
sindresorhus/gifski-app/50,2019-01-21T05:05:19Z,False,5c4554ab6480fda5ca58dca6,"I don't think this should have an argument as it's used in multiple places:

```suggestion
	private func cancelConversion() {
```

Instead, on line 158, use:

```swift
cancelButton.onAction = { _ in
	self.cancelConversion()
}
```",True,False,66,7352.8
sindresorhus/gifski-app/50,2019-01-21T08:03:01Z,False,5c457df06480fda4cc3b2252,"> I noticed a problem. After having converted once, I can no longer drag another movie into the window.

I might've misread this the first time. Do you mean after having cancelled, or should it also accept a new file after successfully completing a conversion?

This commit resolved starting a new conversion after cancelling one first for me: https://github.com/sindresorhus/gifski-app/pull/50/commits/1abb31855a94fb4f8e58a397659c1d6eeed7fac3",True,False,66,7352.8
sindresorhus/gifski-app/50,2019-01-21T08:14:39Z,False,5c4580a46480fda536119607,"That looks absolutely horrendous. The alpha prevents the background color from automatically updating. Should've checked that.

I agree with the `updateLayer` closure being a suitable workaround.",True,False,66,7352.8
sindresorhus/gifski-app/50,2019-01-21T08:16:07Z,False,5c4580fb6480fda5a0a7ede0,"> should it also accept a new file after successfully completing a conversion?

Yes",True,False,66,7352.8
sindresorhus/gifski-app/50,2019-01-21T08:17:35Z,False,5c4581526480fdaeafc8ddeb,"I really wish it was possible to create dynamic colors in user-land... So `NSColor.appTheme.with(alpha: 0.1)` returned a NSColor instance that updated itself, exactly as `NSColor.appTheme` would.",True,False,66,7352.8
sindresorhus/gifski-app/50,2019-01-21T09:33:20Z,False,5c4593326480fda55139586f,"> > should it also accept a new file after successfully completing a conversion?
> 
> Yes

![restart](https://user-images.githubusercontent.com/225410/51465275-e60d9e80-1d67-11e9-9565-310103838b3c.gif)

",True,False,66,7352.8
sindresorhus/gifski-app/50,2019-01-21T09:36:51Z,False,5c4593ff6480fda5ca58f5fc,"I can appreciate the brevity of simply assigning the method to the `onAction` property, but I've committed the change.",True,False,66,7352.8
sindresorhus/gifski-app/50,2019-01-21T09:44:22Z,False,5c4595a86480fda524f3e6be,"The only mention of `cancel(_:)` is in `NSSavePanel`, which does not seem immediately related. I don't really like that's it's undocumented.

The alternatives are implementing `cancelOperation(_:)` in a `NSWindow` or `NSView` subclass. (The latter will probably require jumping through some extra hoops, accepting first responder etc.) Or falling back to the event listener I implemented first.

Personally, I think there's up and downsides to all of these options. The current implementation seems the most light weight and has my preference.

I've added a comment with a link to the StackOverflow post.",True,False,66,7352.8
sindresorhus/gifski-app/50,2019-01-21T09:59:03Z,False,5c4599286480fdada958157f,The memory usage is negligible in this case.,True,False,66,7352.8
sindresorhus/gifski-app/50,2019-01-21T10:01:03Z,False,5c4599c26480fda5a0a7fa6b,Thanks. I'm ok with just having a comment for it.,True,False,66,7352.8
sindresorhus/gifski-app/50,2019-01-21T10:01:36Z,False,5c4599d56480fdaa6eac2fb7,Oh sure. Just mentioned it because you said you prefer it.,True,False,66,7352.8
sindresorhus/gifski-app/50,2019-01-21T10:02:58Z,False,5c459a1e6480fda8c56f5f38,It's actually less characters this way. Really depends on how you measure brevity.,True,False,66,7352.8
sindresorhus/gifski-app/50,2019-01-21T10:49:36Z,False,5c45a4fc6480fda7dae3497c,"I went with a slightly different solution. Instead of providing an `onUpdateLayer` callback (that could cause some trouble with having to update properties that would in turn call `updateLayer` again), I've added a mechanism that allows you to set a 'color generator' for any of the key paths that return `NSColor`.

```swift
$0.setColorGenerator(for: \.backgroundColor) {
	NSColor.appTheme.with(alpha: 0.1)
}
```

The generator gets called in `animateColor` through a convenience method that returns either the generated color if it exists, or the standard property:

```swift
let backgroundColor = isOn ? color(for: \.activeBackgroundColor) : color(for: \.backgroundColor)
```",True,False,66,7352.8
laurent22_____joplin_____1141,2019-01-21T14:16:20Z,True,laurent22_____joplin_____1141_____246307875,"New feature for mobile: a menu option to move notebooks. Possibility to create sub-notebooks and so on.

Sry if the code isn't very good, but
* I don't have any experiences with react and react-native
* The guide for translation is outdated, so there is currently no translation
* It is a little bit copy&paste from other files

@laurent22 
If you don't like this feature as a menu option, I have also a branch for ""move notebooks via dropdown in the header"". But this isn't yet finished. Too many refactorings necessary.

Feel free to give me tips for improvements.",True,True,8,129507.5
hibernate/hibernate-validator/1012,2019-01-21T18:19:00Z,False,5c460e4c6480fdaabbc63f41,"The idea we have is that we provide the contract, an extension point, for property name resolution, and let others implement it (not have the implementations part of the `hibernate-validator`). That way, it's up to the one who is implementing the contract to decide how to resolve the name (depending on the use case). One example of implementation is to use reflection and resolve the name from the annotation.

Could you please describe in more details your concern regarding JSON/Map validation case?",True,False,72,112490.03333333334
hibernate/hibernate-validator/1012,2019-01-21T18:23:53Z,False,5c460f696480fda55139a02c,"We can keep just one name, it makes more sense",True,False,72,112490.03333333334
hibernate/hibernate-validator/1012,2019-01-21T18:30:57Z,False,5c4611126480fda8337d8179,"This is just to show how it could look. There is more work around it.

The questions you have would be actually addressed by someone who is implementing the contract. It should't be hard to check both fields and getters.

As for `GetterPropertySelectionStrategy` thanks for pointing it out. If we agree on everything else, we could try to create an implementation that would include `GetterPropertySelectionStrategy ` in consideration as a proof of concept.",True,False,72,112490.03333333334
hibernate/hibernate-validator/1012,2019-01-21T18:37:44Z,False,5c4612ab6480fdac8516043f,"One more example is that someone who is implementing the contract to be used for name resolution from [jackson](https://github.com/FasterXML/jackson) annotations might want to take [property naming strategy](https://fasterxml.github.io/jackson-databind/javadoc/2.7/com/fasterxml/jackson/databind/PropertyNamingStrategy.html) into consideration when resolving the names. But again, that is up to the implementor to decide how to handle",True,False,72,112490.03333333334
hibernate/hibernate-validator/1012,2019-01-21T20:31:32Z,False,5c462d536480fda8337d90de,"Yes sure. Let me try to show it with the example. Let's assume we have next bean:
```java
class SomeBean {
    @Valid 
    private SomeOtherBean someOtherBean;

    @NotNull
    private String string;

    @ValidPropertyHolder(...)
    private Map<String, ?> mapAsPropertyHolder;

    @ValidPropertyHolder(...)
    private JsonObject someJsonAsPropertyHolder;

    // .... anything else
}
```
fields annotated with `ValidPropertyHolder` are considered to be ""property holders"" and each their property could have own set of validation constraint rules. Hence `PropertyNodeNameProvider` would also be called on properties of these structures. By properties I mean something like:
```java
mapAsPropertyHolder.get(""SomePropertyKey"");
```
 And what I was concerned about is that in case of the current `PropertyNodeNameProvider` interface that you've provided, you could get in situation where object is either `Map` or some `JsonObject` and an implementation would need to check for all these possible cases before making any actions. 
Going to the example that you have in the tests, in case of the bean above, you would first need to check if passed object is a `Map`, if so - do some custom logic for it (or simply return the key) then check if maybe it's a JSON, and in the end if it doesn't fall under any ""special"" cases you would try to get a field or a getter matching the given property name. 
While it's all doable, the implementation of such `PropertyNodeNameProvider` could grow big and would be dependent on all these cases. Using something like `internal.properties.*`, in theory, should prevent this from happening as it all we be abstracted out. ",True,False,72,112490.03333333334
hibernate/hibernate-validator/1012,2019-01-21T20:36:53Z,False,5c462e946480fdada9585c2c,"Right, I'm just thinking how we could minimize the additional factors that such `PropertyNodeNameProvider` need to care about, and make implementation of them easier and smaller. ",True,False,72,112490.03333333334
sindresorhus/gifski-app/50,2019-01-22T07:33:32Z,False,5c46c87c6480fda5a0a88720,"What do you think about making this a setter/getter instead?

Then you could just use it like this:


```swift
// Add
$0.colorGenerator(for: \.backgroundColor) = {
	NSColor.appTheme.with(alpha: 0.1)
}

// Remove
$0.colorGenerator(for: \.backgroundColor) = nil
```
",True,False,66,7352.8
sindresorhus/gifski-app/50,2019-01-22T07:33:57Z,False,5c46c8946480fdaeafc98056,Very cool idea to use KeyPaths for this. I would never have thought of that.,True,False,66,7352.8
sindresorhus/gifski-app/50,2019-01-22T07:37:04Z,False,5c46c9526480fdae5d5ddc3b,"I also just discovered that it's possible to subclass NSColor: https://pfandrade.me/blog/adopting-dark-mode-and-older-macs/ Although, I have not been able to figure out how to do it in Swift and make it work with `NSColor.white.with(alpha: 0.5)`. Would be super cool to make that work at some point though.",True,False,66,7352.8
sindresorhus/gifski-app/50,2019-01-22T07:38:15Z,False,5c46c99c6480fda9913463e2,"And also, please do open issues here if you see anything that could be improved in the app or code, even if you don't intend to fix it yourself.",True,False,66,7352.8
sindresorhus/gifski-app/50,2019-01-22T07:40:37Z,False,5c46ca0f6480fda991346403,"Thank you so much for working on this, @boyvanamstel. It turned out really great! 🙌",True,False,66,7352.8
sindresorhus/gifski-app/50,2019-01-22T09:29:21Z,False,5c46e3ac6480fda4e31017cf,"Thanks @sindresorhus! I really enjoyed working on this. 🙌
",True,False,66,7352.8
sindresorhus/gifski-app/50,2019-01-22T09:30:43Z,False,5c46e3f86480fdaf008ddd17,"> I also just discovered that it's possible to subclass NSColor: https://pfandrade.me/blog/adopting-dark-mode-and-older-macs/ Although, I have not been able to figure out how to do it in Swift and make it work with `NSColor.white.with(alpha: 0.5)`. Would be super cool to make that work at some point though.

Interesting, that might be worth looking into.",True,False,66,7352.8
sindresorhus/gifski-app/50,2019-01-22T09:42:59Z,False,5c46e6d96480fdaf008dde9d,@boyvanamstel Any thoughts on https://github.com/sindresorhus/gifski-app/pull/50#discussion_r249665639 ?,True,False,66,7352.8
sindresorhus/gifski-app/50,2019-01-22T09:43:51Z,False,5c46e7116480fdac85166887,"> @boyvanamstel Any thoughts on [#50 (comment)](https://github.com/sindresorhus/gifski-app/pull/50#discussion_r249665639) ?

Looking into that as we speak.",True,False,66,7352.8
sindresorhus/gifski-app/50,2019-01-22T10:54:04Z,False,5c46f77f6480fda6a9fbe95c,"I've tried getting close to the syntax you came up with, but I'm not sure it's possible without adding something like `$0.colorGenerator(for: \.backgroundColor).value`. 🤔

I've created a PR that just makes the handler optional, allowing for `$0.setColorGenerator(for: \.backgroundColor, nil)`.",True,False,66,7352.8
awesome-academy/Music_50/22,2019-01-22T13:24:37Z,False,5c471aa76480fda50faac38e,ready,True,False,1,0.0
sindresorhus/gifski-app/50,2019-01-23T05:45:41Z,False,5c4800b96480fdacbc661c61,"Yeah, you're right. Too bad that doesn't work though. Would have been nice to have this. I should propose something like that on the Swift Forums.

Could make computed properties support arguments:

```swift
var unicorn(for: Magic): Int {
    get { … }
    set { … }
}
```

Used as:

```swift
.unicorn(for: .rainbow) = 2
```


Thoughts on this?",True,False,66,7352.8
sindresorhus/gifski-app/50,2019-01-23T08:24:36Z,False,5c4825fb6480fdada959427c,"It's similar to the subscript solution you posted here: https://github.com/sindresorhus/gifski-app/pull/54#issuecomment-456678511

With the added benefit that the syntax looks more in line with what you'd expect. Would be nice to have. 

I can see how this would be unusual for other reasons though. There's no single variable that it points too. There should always be another (private) property (or multiple properties/values) that it interacts with. I think that's what the subscript syntax solves.",True,False,66,7352.8
hibernate/hibernate-validator/1012,2019-01-23T13:48:26Z,False,5c4875296480fda5a0a95cde,"@marko-bekhta by using the `Property` interface, we can provide more support to the `PropertyNodeNameProvider` implementors in the future",True,False,72,112490.03333333334
hibernate/hibernate-validator/1012,2019-01-23T14:01:27Z,False,5c48752d6480fdad04e0906a,"@marko-bekhta this is an example of `PropertyNodeNameProvider` for the [jackson](https://github.com/FasterXML/jackson) use-case (which will probably be the most used one). Here we can see that the implementor has the freedom of using any API that can assist him in implementing the correct behaviour. In this example, jackson provides all the necessary API-s that are needed for the implementation. If `internal.properties.*` becomes open one day, the implementor can use it.

The point is that this feature, in our opinion, is not related, or blocked by `internal.properties.*` being opened or closed.

[this](/engine/src/test/java/org/hibernate/validator/test/spi/nodenameprovider/jackson/JacksonAnnotationPropertyNodeNameProviderTest.java) is a test for `JacksonAnnotationPropertyNodeNameProvider `",True,False,72,112490.03333333334
hibernate/hibernate-validator/1012,2019-01-23T14:03:22Z,False,5c4875656480fdaa17d0f63f,"This is done, please review and resolve if the change is ok.",True,False,72,112490.03333333334
hibernate/hibernate-validator/1012,2019-01-23T14:06:12Z,False,5c48760a6480fda716fd48d8,"Thank you for the example.

I have updated the PR, and added a new comment addressing your concerns: https://github.com/hibernate/hibernate-validator/pull/1012#discussion_r250205593",True,False,72,112490.03333333334
hibernate/hibernate-validator/1012,2019-01-23T14:07:11Z,False,5c48764d6480fda9cf6ee5d8,"This is done, please review and resolve if the change is ok.",True,False,72,112490.03333333334
switchbrew_____libnx_____234,2019-01-24T07:15:20Z,True,switchbrew_____libnx_____234_____247224405,This initial implementation provides access to both `esCountCommonTicket` and `esCountPersonalizedTicket`.,True,True,5,536.3666666666667
switchbrew_____libnx_____234,2019-01-24T14:33:21Z,True,switchbrew_____libnx_____234_____457217577,"Personally, why would people want to mess up with tickets, like it's understandable for some homebrew, but...",True,True,5,536.3666666666667
switchbrew_____libnx_____234,2019-01-24T15:18:09Z,True,switchbrew_____libnx_____234_____457234117,"Hence why this provides access to the two safest `Get`-related services only, to ensure people don't accidentally screw up their ticket db.",True,True,5,536.3666666666667
switchbrew_____libnx_____234,2019-01-24T16:06:06Z,True,switchbrew_____libnx_____234_____457252738,Is there a specific reason why this was closed?,True,True,5,536.3666666666667
switchbrew_____libnx_____234,2019-01-24T16:11:42Z,True,switchbrew_____libnx_____234_____457255036,"There's no meaningful use case for ticket functions, other than supporting piracy-related tools.",True,True,5,536.3666666666667
Monika-After-Story_____MonikaModDev_____3588,2019-01-26T15:55:07Z,True,Monika-After-Story_____MonikaModDev_____3588_____247896881,"Here.
Update to this version whenever.
I don't care when, I use it now locally anyways.",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-01-26T17:13:39Z,True,Monika-After-Story_____MonikaModDev_____3588_____457847984,"Let's not forget the last PR, for records of course: #3166. 

Hopefully you had a nice 9 day spiritual journey. 

_Welcome back._ ",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-01-26T18:17:41Z,True,Monika-After-Story_____MonikaModDev_____3588_____457853138,"No need to welcome me back, let's just leave it at what it is.",True,True,160,26066.383333333335
laurent22_____joplin_____1141,2019-01-29T17:37:05Z,True,laurent22_____joplin_____1141_____458634117,"To move notebooks, I think it should be done directly in the sidebar, by drag and dropping them. What do you think?",True,True,8,129507.5
hibernate/hibernate-validator/1012,2019-01-30T08:57:49Z,False,5c5168446480fdaaf6d84dd5,"Any updates? Should we continue with the implementation (do refactoring, code cleanup, add documentation, tests...), or there are still some concerns/doubts that we need to address?",True,False,72,112490.03333333334
hibernate/hibernate-validator/1012,2019-01-30T09:27:14Z,False,5c516f2e6480fdaa17d4fea6,"Hi, @dalibegovic it's great that you've done some more changes. I didn't have much time to take a look at them though. Also I had an idea that I wanted to try out. I'll try to find some time this week and will let you know how it went. Thanks!

**EDIT**
One quick question that I wanted to ask you. Is there any reason we would need a runtime object to determine a property path label? I mean is there a case when a property path would be different for the same class but different instances ?",True,False,72,112490.03333333334
hibernate/hibernate-validator/1012,2019-01-30T10:41:47Z,False,5c5183036480fda7dae8c4cd,You can add the `@since 6.1` tag here.,True,False,72,112490.03333333334
hibernate/hibernate-validator/1012,2019-01-30T10:42:31Z,False,5c5183046480fda4e3151a1e,Looks simple enough to write the doc instead of having a TODO :). Wouldn't want to forget about this.,True,False,72,112490.03333333334
hibernate/hibernate-validator/1012,2019-01-30T10:49:54Z,False,5c5183036480fda5730b798d,"So, indeed you can work around not having the properties as you did it.

But I think it will be very slow and probably not acceptable in the general case. Take a look at what you have to do in the `getName()` method. It does not look good performance-wise.

While I don't think we're ready to push `internal.properties.*` in SPIs, I think it might be possible to have a subset of it covering the most common use cases (e.g. property name and annotations). Could you maybe take a stab at it?",True,False,72,112490.03333333334
lepton-eda/lepton-eda/329,2019-01-30T12:42:48Z,False,5c519cfc6480fda8f9b9c6d6,"The assertion in the last commit that ChangeLog files are not generated any more, is not quite right. You can find `ChangeLog` targets in several `Makefile.am`s. They're generated when you do `make dist` and lepton tarballs contain them (I've just checked 1.9.7), so that the people who build the programs from tarballs (including building for various distributions) could still access the history.",True,False,3,185.0
hibernate/hibernate-validator/1012,2019-01-30T13:37:51Z,False,5c51a9df6480fda4cc40f80c,"> Hi, @dalibegovic it's great that you've done some more changes. I didn't have much time to take a look at them though. Also I had an idea that I wanted to try out. I'll try to find some time this week and will let you know how it went. Thanks!
> 
> **EDIT**
> One quick question that I wanted to ask you. Is there any reason we would need a runtime object to determine a property path label? I mean is there a case when a property path would be different for the same class but different instances ?

@marko-bekhta good question.
For the use-case we are currently focused on, that is resolving the name from the annotation on a field, you are right, the class information should be enough.

On the other hand, if the name is resolved by using some different mechanism (e.g. by looking at a value in some field), then the property path would be different depending on the runtime instances. 

It is hard to predict if this will be a use-case, but since we have a runtime instance, and it provides more flexibility to the implementor, i don't see a reason why we shouldn't provide a runtime object.

Do you see any disadvantages in using a runtime object? Maybe some performance concerns?",True,False,72,112490.03333333334
hibernate/hibernate-validator/1012,2019-01-30T13:39:57Z,False,5c51aa606480fda8f9b9cd3b,"@gsmet: i agree that it might be a bit of a hassle for some the cases to implement something simple and that we should provide more property related information. but this is why we proposed to have the `Property` interface, to be flexible with new features that improve the experience when implementing `PropertyNodeNameProvider`.

I just wanted to indicate that e.g. `Jackson` is more complicated than it seems. Influencing how a property is resolved cannot only be done through an annotation but also through a globally defined naming strategy. Plus `Jackson` is doing a lot of caching, the call that is made (as an example) in the `JacksonAnnotationPropertyNodeNameProvider.getName` is actually quite fast.

So i would suggest to refactor `PropertyNodeNameProvider.getName` to:
```
String getName(Property property);
```

and the `Property` to:

```
public interface Property {
	String getName();
	Annotation[] getDeclaredAnnotations();
	Class<?> getDeclaringClass();
	Object getObject();
}
```

WDYT?",True,False,72,112490.03333333334
lepton-eda/lepton-eda/329,2019-01-30T14:32:15Z,False,5c51b6a76480fdaa17d52404,"@vzh Indeed, sorry. I've fixed that.",True,False,3,185.0
laurent22_____joplin_____1141,2019-01-30T14:56:04Z,True,laurent22_____joplin_____1141_____458973471,"Sounds better, for sure! But currently I don't have the skills to implement it.
I will take a look for tutorials at weekend, but don't expect too much 😉",True,True,8,129507.5
lepton-eda/lepton-eda/329,2019-01-30T15:47:48Z,False,5c51c8336480fdad4c4fd22f,"Merged, thank you!",True,False,3,185.0
callstack_____react-native-paper_____485,2019-01-31T05:57:38Z,True,callstack_____react-native-paper_____485_____459225827,knock knock,True,True,55,342611.05
Monika-After-Story_____MonikaModDev_____3588,2019-01-31T20:37:10Z,True,Monika-After-Story_____MonikaModDev_____3588_____252831220,"I'm sure some people might tell you that's too many ""he""s. I'd remove one. ",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-01-31T20:41:31Z,True,Monika-After-Story_____MonikaModDev_____3588_____252832572,"It might just be me being < a fragile little flower like I can be, but couldn't this be offensive to some people and can this be allowed in?

Might just be me, we'll see. ",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-01-31T20:49:31Z,True,Monika-After-Story_____MonikaModDev_____3588_____252835146,"_Very clever,_ but I think the spelling you want in this instance is ""practice"". ",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-01-31T20:51:21Z,True,Monika-After-Story_____MonikaModDev_____3588_____252835715,Would Monika actually say this?,True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-01T00:52:51Z,True,Monika-After-Story_____MonikaModDev_____3588_____252900662,"I have yet to see her in any comparable situation to make accurate assumptions.
This is a pretty rare event.
You can keep her one dimensional if you like, rephrase it into something positive/neutral then.",True,True,160,26066.383333333335
laurent22_____joplin_____1141,2019-02-03T07:17:06Z,True,laurent22_____joplin_____1141_____460029348,"Hi @laurent22 

I tried to implement drag & drop to move notebooks, but now I'm stuck. Perhaps you have an idea?

But first of all one of the last commits crashed my android emulator. Have you been notified about my comment at this commit? https://github.com/laurent22/joplin/commit/9c1219b188fdd0746db64272198935a5af3c79b2#commitcomment-32163393

Now my problem:
I put the folder item from the side menu into a new component. This component creates a Animated.View around the existing View and TouchableOpacity.
With this Animated.View I can implement drag & drop with the help of PanResponder:

```
            onPanResponderRelease: (event, gesture) => {
                ...
            }
```

So far so good ...

But event has lack of informations about the element where the element/folder is dropped. All I get are positions or a target. (https://facebook.github.io/react-native/docs/panresponder)
**target**: a node id. I don't know what node id is. A small number between 150 and 160 in my tests. No DOM element or something I can use. Even StackOverflow only helps with a private API method which is outdated.
**position**: How can I get the element (or folder) from a position? (It would take a lot of code to remember the positions of all folders and compare, where the drag was released ... Espacially if the folder list is so long you have to scroll)

Currently I dont' like the idea with drag & drop .. too many problems 😉",True,True,8,129507.5
Monika-After-Story_____MonikaModDev_____3588,2019-02-04T23:59:31Z,True,Monika-After-Story_____MonikaModDev_____3588_____253694521,Change the name of this persistent to `_mas_pm_ever_let_monika_win` that way it has the same naming convention as the other player related vars.,True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-05T00:07:25Z,True,Monika-After-Story_____MonikaModDev_____3588_____253695982,"Change this one to `_mas_pong_difficulty` to keep it consistent with other games like chess. Same for the other ""pong"" persistent vars.",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-05T00:07:30Z,True,Monika-After-Story_____MonikaModDev_____3588_____253695993,"Change these to be like the chess constants(these would start with the PONG_ prefix), maybe it's not a bad idea to put all of them inside a store named `mas_pong`",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-05T00:10:45Z,True,Monika-After-Story_____MonikaModDev_____3588_____253696592,Make those response ids constants so the values aren't hard coded and can be modified easily later on if needed.,True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-05T00:48:41Z,True,Monika-After-Story_____MonikaModDev_____3588_____253703769,"Could you define this persistent variable at the beginning of the file with the other persistent vars? it's faster to see what variables we store from pong that way, because they all will be on the same place. Also, any reason to make this one a datetime? the place where you check it also makes a date time from today's date, so it seems it'd be easier to just use a date object instead.",True,True,160,26066.383333333335
callstack_____react-native-paper_____485,2019-02-05T09:11:51Z,True,callstack_____react-native-paper_____485_____460563570,"please move forward, we need menu",True,True,55,342611.05
spring_____spring_____427,2019-02-05T18:06:53Z,True,spring_____spring_____427_____250500393,"e.g. something like this:

```lua
    Spring.GiveOrderToUnit(unitID,
      CMD.INSERT,
      {-1,CMD.ATTACK,''CMD.OPT_SHIFT'',''unitID2''},
      {""timeout"" = 500 }
    );
```

Related to https://springrts.com/mantis/view.php?id=6128",True,True,9,1544.6
w3c_____csswg-drafts_____3618,2019-02-05T23:15:51Z,True,w3c_____csswg-drafts_____3618_____250585815,"An ellipse may have an x-radius and y-radius, or neither.

resolves #3609
",True,True,8,34231.75
spring_____spring_____427,2019-02-06T00:07:17Z,True,spring_____spring_____427_____460854542,"That would work, but the (badly named) command ""options"" have special meaning. Timeout is a separate parameter.",True,True,9,1544.6
spring_____spring_____427,2019-02-06T00:10:47Z,True,spring_____spring_____427_____460855281,"@rtri I appreciate the comment but you closed it before I could fix the PR!
No need for the trigger happy close, unless you're trying to put off
contributions?

Perhaps next time you should use the built in review functionality and
request changes? E.g. switching to an additional parameter because options
have special meaning?

On Wed, 6 Feb 2019 at 00:07, rtri <notifications@github.com> wrote:

> Closed #427 <https://github.com/spring/spring/pull/427>.
>
> —
> You are receiving this because you authored the thread.
> Reply to this email directly, view it on GitHub
> <https://github.com/spring/spring/pull/427#event-2120001408>, or mute the
> thread
> <https://github.com/notifications/unsubscribe-auth/AADl598QGC_BSGkh38MqMyeyXMN4RDV2ks5vKhy8gaJpZM4ajxVn>
> .
>
",True,True,9,1544.6
spring_____spring_____427,2019-02-06T00:44:55Z,True,spring_____spring_____427_____460862065,"You seem to have missed be999101, which I started before this PR arrived.",True,True,9,1544.6
hibernate/hibernate-validator/1012,2019-02-06T12:38:44Z,False,5c6202526480fdde215cdf45,"> @dalibegovic sorry for the delay. We had our Hibernate face to face meeting last week and I'm pretty swamped.
> 
> Tried to provide some feedback so that you can make progress on this.
> 
> Overall, it looks like a useful addition so let's drive this puppy home.

@marko-bekhta @gsmet we are ready to drive this puppy home, just waiting on some opinions and input from you guys :)",True,False,72,112490.03333333334
spring_____spring_____427,2019-02-06T16:27:22Z,True,spring_____spring_____427_____461088078,"@rtri **that's no excuse for rudeness**, I opened the PR to try and be helpful.

Next time:

 - If you already have a PR, link to it
 - Leave a review requesting changes

For all you know I may have come back and refactored it shortly after. If it had been a few days then sure, close it, as is common practice here, but instead you were hostile. Stop that.",True,True,9,1544.6
spring_____spring_____427,2019-02-06T17:13:36Z,True,spring_____spring_____427_____461106112,"@tomjn:
next time: please make a pull request to the develop branch. we don't accept pull requests to the master branch!


",True,True,9,1544.6
spring_____spring_____427,2019-02-06T17:22:51Z,True,spring_____spring_____427_____461109643,"@abma I wasn't aware, perhaps a [pull request template](https://github.blog/2016-02-17-issue-and-pull-request-templates/) would help document this? That way it would be clear to anybody creating a pull request that they need to apply it to the `develop` branch not the `master` branch, even a prompt to link to any related Mantis tickets

---

As a general note, as a part of my job and general activities I regularly make and comment on pull requests on a wide range of projects on a daily basis, but this experience was poor, and below average, and entirely avoidable.

I don't know if the rude response from @rtri was because english isn't the primary language, or habit, but it's very easy to be polite and at the same time close responses. GitHub provides various processes to avoid these.

For example, the original comment doesn't explain why the PR was closed. If it had instead just been:

> Thanks, it's been fixed in [be99910](https://github.com/spring/spring/commit/be999101be20d10fe46ce6921d7ec7d88ccdece5)

That would have been perfectly acceptable on its own. The follow up comment was also catty and rude. Or a review left that was literally just the comment he left, requesting changes.",True,True,9,1544.6
spring_____spring_____427,2019-02-06T18:38:19Z,True,spring_____spring_____427_____461136952,"@tomjn 
https://springrts.com/wiki/Development:Getting_Started#How_to_get_your_code_included
i presume you knew that. please stop complaining.",True,True,9,1544.6
tgstation/TerraGov-Marine-Corps/570,2019-02-06T19:33:48Z,False,5c61441f6480fde1beee041f,"```suggestion
	if(QDELETED(victim))
```",True,False,3,8.15
tgstation/TerraGov-Marine-Corps/570,2019-02-06T19:39:44Z,False,5c6144216480fde10d68f2ac,Feel free to remove this useless check.,True,False,3,8.15
tgstation/TerraGov-Marine-Corps/570,2019-02-06T19:41:57Z,False,5c6144166480fddcdb166127,"`for(var/i in list(""heart"", ""lungs""))`, and remove the above definition, since it's unused outside this loop.",True,False,3,8.15
spring_____spring_____427,2019-02-06T19:51:29Z,True,spring_____spring_____427_____461162887,"@tomjn 

 > the original comment doesn't explain why the PR was closed

When closing it I presumed you had taken at least a cursory glance at the log (or the mantis ticket) and would understand your PR had crossed incoming commits, which was clearly a mistake on my part. Now please get off your lecturing high horse.
",True,True,9,1544.6
openshift/origin/21978,2019-02-06T21:09:09Z,False,5c6264c76480fde05c02e958,"/approve
/lgtm",True,False,124,41433.166666666664
openshift/origin/21978,2019-02-06T21:22:29Z,False,5c6264c76480fde05c02e959,"[APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/openshift/origin/pull/21978#issuecomment-461188169"" title=""LGTM"">derekwaynecarr</a>*, *<a href=""https://github.com/openshift/origin/pull/21978#"" title=""Author self-approved"">sjenning</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=openshift%2Forigin).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[vendor/k8s.io/kubernetes/pkg/kubelet/OWNERS](https://github.com/openshift/origin/blob/master/vendor/k8s.io/kubernetes/pkg/kubelet/OWNERS)~~ [derekwaynecarr]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->",True,False,124,41433.166666666664
openshift/origin/21978,2019-02-06T21:49:16Z,False,5c6264c76480fde05c02e95a,"unit test flakes
https://github.com/openshift/origin/issues/21979
https://github.com/openshift/origin/issues/21980
/test unit",True,False,124,41433.166666666664
hibernate/hibernate-validator/1012,2019-02-06T22:51:25Z,False,5c62760e6480fde2c0e8f32a,"Sorry for long response times. I didn't have a chance to spend much time on this one. But here's a few things that might give you more directions. 
- I would like us to resolve the property path name at the bootstrap time, i.e. when we create metadata rather than doing it at the time of the checks. I cannot find a good use case where a path would vary for the same type based on the state of the particular instance, that's why I was asking if you maybe have some examples.
- If we go with such approach the most logical place to store the path would be inside a property (https://github.com/hibernate/hibernate-validator/blob/master/engine/src/main/java/org/hibernate/validator/internal/properties/Property.java). Maybe add another method - `String getPropertyPath()`?
- In this case we would need to have a property path label before we actually create an instance of `internal.properties.Property`
- Thus exposing part of `internal.properties` wouldn't work for us in this case. We probably would need to either have a separate hierarchy of property interfaces just for determining the property path label, or  have a set of various name providers for each and every case (field, method, ""property"" of a map, json property, etc). So I'm leaning more towards a hierarchy of property interfaces :wink: 
The interfaces based on the suggestion of one of your colleges could be something like
```java
interface Property {
    String getName();
}

interface JavaBeanProperty extends Property {
    Annotation[] getDeclaredAnnotations();
    Class<?> getDeclaringClass();
}
```
or instead of exposing the `Annotation` type we could go with something like:
```java
interface JavaBeanProperty extends Property {
    <T> T getParameterValueOfDeclaredAnnotation(Class<?> annotationClass, Class<T> valueClass );
    Class<?> getDeclaringClass();
}
```
It would be important to have this base `Property` interface in place and use it in the name provider. This would allow us to include other property types (map, json etc) in the future. And name provider could then check if a passed property is of some more specific type (e.x. `JavaBeanProperty`) and if it's of unknown type it could fallback to using the `Property.getName()`",True,False,72,112490.03333333334
openshift/origin/21978,2019-02-07T14:40:13Z,False,5c6264c76480fde05c02e95b,/retest,True,False,124,41433.166666666664
openshift/origin/21978,2019-02-07T20:16:23Z,False,5c6264c86480fde05c02e95c,/retest,True,False,124,41433.166666666664
openshift/origin/21978,2019-02-08T12:11:15Z,False,5c6264c86480fde05c02e95d,/retest,True,False,124,41433.166666666664
openshift/origin/21978,2019-02-08T15:17:05Z,False,5c6264c86480fde05c02e95e,/retest,True,False,124,41433.166666666664
openshift/origin/21978,2019-02-09T01:33:31Z,False,5c6264c86480fde05c02e95f,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
openshift/origin/21978,2019-02-09T03:34:01Z,False,5c6264c86480fde05c02e960,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
openshift/origin/21978,2019-02-09T05:34:50Z,False,5c6264c86480fde05c02e961,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
openshift/origin/21978,2019-02-09T05:57:10Z,False,5c6264c86480fde05c02e962,"@sjenning: The following tests **failed**, say `/retest` to rerun them all:

Test name | Commit | Details | Rerun command
--- | --- | --- | ---
ci/prow/e2e-aws-image-ecosystem | 65ca1cfc46a59b071a8747ebe95098782729f66c | [link](https://openshift-gce-devel.appspot.com/build/origin-ci-test/pr-logs/pull/21978/pull-ci-openshift-origin-master-e2e-aws-image-ecosystem/123) | `/test e2e-aws-image-ecosystem`
ci/prow/e2e-aws-builds | 65ca1cfc46a59b071a8747ebe95098782729f66c | [link](https://openshift-gce-devel.appspot.com/build/origin-ci-test/pr-logs/pull/21978/pull-ci-openshift-origin-master-e2e-aws-builds/739) | `/test e2e-aws-builds`
ci/prow/e2e-conformance-k8s | 65ca1cfc46a59b071a8747ebe95098782729f66c | [link](https://openshift-gce-devel.appspot.com/build/origin-ci-test/pr-logs/pull/21978/pull-ci-openshift-origin-master-e2e-conformance-k8s/217) | `/test e2e-conformance-k8s`

[Full PR test history](https://openshift-gce-devel.appspot.com/pr/21978). [Your PR dashboard](https://openshift-gce-devel.appspot.com/pr/sjenning). Please help us cut down on flakes by [linking to](https://github.com/kubernetes/community/blob/master/contributors/devel/flaky-tests.md#filing-issues-for-flaky-tests) an [open issue](https://github.com/openshift/origin/issues?q=is:issue+is:open) when you hit one in your PR.

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository. I understand the commands that are listed [here](https://go.k8s.io/bot-commands).
</details>
<!-- test report -->",True,False,124,41433.166666666664
openshift/origin/21978,2019-02-09T07:37:21Z,False,5c6264c86480fde05c02e963,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
openshift/origin/21978,2019-02-09T09:36:48Z,False,5c6264c86480fde05c02e964,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
openshift/origin/21978,2019-02-09T11:37:50Z,False,5c6264c86480fde05c02e965,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
openshift/origin/21978,2019-02-09T13:38:49Z,False,5c6264c86480fde05c02e966,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
openshift/origin/21978,2019-02-09T15:39:52Z,False,5c6264c86480fde05c02e967,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
openshift/origin/21978,2019-02-09T17:54:24Z,False,5c6264c86480fde05c02e968,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
KSP-KOS_____KOS_____2260,2019-02-09T18:26:21Z,True,KSP-KOS_____KOS_____2260_____462067539,"What is the problem with merging this? Should I recreate [boot from archive](/KSP-KOS/KOS/pull/2260/commits/40daa29bde82808de7a4c698489b28e00d757571) under current code to get this merged?

@Dunbaratu I know you do not like booting from archive, but kOS allows it. So, either dissallow it or make it working. What is the problem? Should I make it as small as possible? I really cannot think of any other reason: You either do not like it (then drop the option alltogether and make it harder for beginners and force them to create boot script to load important stuff to the core before they even start exploring what kOS can do) or you fear it would break something, which is at least understandable for me. I am not perfect, I am not AI but a human and I did make mistakes in my HUGE commit `parts redone`. Two mistakes so far, one because I did not examine all references to some function call and second was just miss-click, but that does not matter, I do mistakes. Would it help to recreate it in minimalistic way to help you review it? This is really crutial for me to use official kOS (the other PR about `TARGET` would be nice but not required, this one is).",True,True,36,458822.06666666665
openshift/origin/21978,2019-02-09T19:41:49Z,False,5c6264c86480fde05c02e969,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
KSP-KOS_____KOS_____2260,2019-02-09T20:46:46Z,True,KSP-KOS_____KOS_____2260_____462077986,"The lack of an answer to that problem I brought up in July 31 and again on August 1 is why I stopped looking at this PR there.  I pointed out that I can't review your merge conflict decisions (like you explicitly asked me to) if I can't get git to actually generate a report of what the conflicts even are.  It kept claiming no conflict when I tried to rewind my repo to before your work, and then merge your commits.  So you're asking for a review of something I can't see.  You fell silent after that, and I was happy for the chance to not have to talk to you for a while.  Besides, some of what this PR had was melted together with another PR of yours that hvacengi was still reviewing at the time, and I figured it would get less messy after that got merged.  Then there was also the fact that I thought @hvacengi had said he was going to look at this, so I thought my only involvement in this PR *was* that one line you tagged me on where you asked for the review of the one thing I couldn't see - your merge conflict decisions.  Other than that ONE parenthetical side comment, I saw this as  being @hvacengi 's merge with me just making side comments but not being the merger.  He was usually much more involved in the booting system than I was, and the original issue was raised by him so he knew better whether this PR addressed it well or not.",True,True,36,458822.06666666665
KSP-KOS_____KOS_____2260,2019-02-09T20:59:24Z,True,KSP-KOS_____KOS_____2260_____255313360,Missing period in the sentence?,True,True,36,458822.06666666665
KSP-KOS_____KOS_____2260,2019-02-09T20:59:46Z,True,KSP-KOS_____KOS_____2260_____255313385,period?,True,True,36,458822.06666666665
KSP-KOS_____KOS_____2260,2019-02-09T21:02:11Z,True,KSP-KOS_____KOS_____2260_____462079161,"The PR melts together some IStack refactors that don't appear to be in any way related to the issue in with the bug fix.  You said this was related to an external tool you use for debugging, but that's not really part of this issue.",True,True,36,458822.06666666665
KSP-KOS_____KOS_____2260,2019-02-09T21:18:45Z,True,KSP-KOS_____KOS_____2260_____462080292,"Quite sad that *you were happy for the chance to not have to talk to me for a while.* I have always considered you a team-mate, just like my colleague Ondřej. We disagree occasionally, but always find a way out of it, find a consensus despite our differences, despite our original disagreement and maybe some *block* and repetition of arguments, but what I value about him is that he does not get stuck. He will repeat his invalid argument but will also, after some repetitions, understand why it is invalid. My other colleague Karel gets stuck indefinitely, repeating nonsense, unable to hear any logic. I can understand that too (fragile psychic, stuck in his self-doubts he is trying to fight the wrong way), but I do not know how to handle him. You seem to me to be very close to Ondřej, but you do not like something about me and resist, a lot, not indefinitely like Karel but still more than Ondřej. I would really like to understand what is the problem. My problem with you all (kOS squad) is the response time - you have your own lives, I can understand that, but if you do not respond in reasonable time (and half a year is really not *reasonable time*), then there is nothing I can do.

About the merge conflict: I thought it is solved by you not finding the conflict (meaning there is no conflict, nothing is needed to be done). Yes, @hvacengi should probably look into this and you @Dunbaratu are here just because I asked you to take a look. The question is still the same: Would it help if I make it minimal?

There trully are things that are not needed to fix the problem and I can understand that, that is why I asked - making it minimal should help you (or whomever will review it) do it quicker and merge it. I would like you/anybody merge it as it is, because it would help in testing, which is what I prefer - testing, automated testing, I know I do mistakes, I therefore like to automate tests (and like to write documentation). But that is another story, so be it, I will create another PR with minimal changes to solve the booting from archive problem.",True,True,36,458822.06666666665
KSP-KOS_____KOS_____2260,2019-02-09T21:23:21Z,True,KSP-KOS_____KOS_____2260_____255314145,Where would you like a period?,True,True,36,458822.06666666665
KSP-KOS_____KOS_____2260,2019-02-09T21:23:52Z,True,KSP-KOS_____KOS_____2260_____255314159,After `{0}` before `\n`?,True,True,36,458822.06666666665
KSP-KOS_____KOS_____2260,2019-02-09T21:37:31Z,True,KSP-KOS_____KOS_____2260_____255314545,"yes
",True,True,36,458822.06666666665
KSP-KOS_____KOS_____2260,2019-02-09T21:38:46Z,True,KSP-KOS_____KOS_____2260_____255314582,"The statement ""The file is missing"" is a separate sentence that isn't continued on the next line.  (Instead a new sentence starts on the next line).  So, yeah, it feels like a period is needed before the ``\n``.",True,True,36,458822.06666666665
openshift/origin/21978,2019-02-09T21:42:48Z,False,5c6264c86480fde05c02e96a,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
KSP-KOS_____KOS_____2260,2019-02-09T22:02:58Z,True,KSP-KOS_____KOS_____2260_____255315156,Surprised you don't want it after `{0}` as that is clearly also *separate sentence that isn't continued on the next line. Does not compute*,True,True,36,458822.06666666665
KSP-KOS_____KOS_____2260,2019-02-09T22:05:35Z,True,KSP-KOS_____KOS_____2260_____255315228,"It's both.  For some reason when github showed these comments in the PR thread, it was under line 165 when it shows it under line 166 on the longer diff output, so I didn't see the second sentence on line 166 when replying.",True,True,36,458822.06666666665
KSP-KOS_____KOS_____2260,2019-02-09T22:14:49Z,True,KSP-KOS_____KOS_____2260_____255315851,Does those dot-fixes make it any closer to merging? I don't think so. I will consider creating that minimalistic PR tomorrow... and maybe never. I have my working version and it does not feel like I am of any help here.,True,True,36,458822.06666666665
KSP-KOS_____KOS_____2260,2019-02-09T22:33:25Z,True,KSP-KOS_____KOS_____2260_____462085487,"> I would really like to understand what is the problem.

Do you genuinely mean that?  You're asking to open up the floodgates here.

> There trully are things that are not needed to fix the problem and I can understand that, that is why I asked - making it minimal should help you (or whomever will review it) do it quicker and merge it. I would like you/anybody merge it as it is, because it would help in testing, which is what I prefer - testing, automated testing, I know I do mistakes, I therefore like to automate tests (and like to write documentation). But that is another story, so be it, I will create another PR with minimal changes to solve the booting from archive problem.

Two separate PR's would work better.  One that's a refactor so your debugger can work, and the other that's addressing the bug issue.  Putting them together makes it harder for the reviewer who then has to make a judgment call on each line to figure out if it's part of the fix or not.

",True,True,36,458822.06666666665
KSP-KOS_____KOS_____2260,2019-02-09T22:57:19Z,True,KSP-KOS_____KOS_____2260_____462087025,"> Do you genuinely mean that? You're asking to open up the floodgates here.

Yes I do.",True,True,36,458822.06666666665
openshift/origin/21978,2019-02-09T23:43:32Z,False,5c6264c86480fde05c02e96b,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
openshift/origin/21978,2019-02-10T01:49:13Z,False,5c6264c86480fde05c02e96c,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
tgstation/tgstation/42729,2019-02-10T03:17:02Z,False,5c63f0eb6480fde1478ebe5b,??????,True,False,14,2850.9166666666665
tgstation/tgstation/42729,2019-02-10T03:22:26Z,False,5c63f0eb6480fde1478ebe5c,"> ??????

yes umm hello maam what is it?",True,False,14,2850.9166666666665
tgstation/tgstation/42729,2019-02-10T03:30:04Z,False,5c63f0eb6480fde1478ebe5d,this feels like a minecraft mod,True,False,14,2850.9166666666665
tgstation/tgstation/42729,2019-02-10T03:30:38Z,False,5c63f0eb6480fde1478ebe5e,"I'd add one more thing to that gondola grenade, Teslium.


Frankenstein, it to make things come to life. That or strange reagent",True,False,14,2850.9166666666665
openshift/origin/21978,2019-02-10T03:48:31Z,False,5c6264c86480fde05c02e96d,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
tgstation/tgstation/42729,2019-02-10T04:55:14Z,False,5c63f0eb6480fde1478ebe5f,>3 hide to make a grenade that can spawn the creatures to obtain 7 hide,True,False,14,2850.9166666666665
tgstation/tgstation/42729,2019-02-10T05:35:06Z,False,5c63f0eb6480fde1478ebe60,Hides are worth a significant amount of dosh to cargo. This basically makes infinite money.,True,False,14,2850.9166666666665
tgstation/tgstation/42729,2019-02-10T05:42:48Z,False,5c63f0eb6480fde1478ebe61,"Yeah I never thought about that, one sec.

",True,False,14,2850.9166666666665
openshift/origin/21978,2019-02-10T05:49:31Z,False,5c6264c86480fde05c02e96e,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
openshift/origin/21978,2019-02-10T07:50:52Z,False,5c6264c86480fde05c02e96f,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
tgstation/tgstation/42729,2019-02-10T08:29:34Z,False,5c63f0ec6480fde1478ebe62,"not anymore, there is a chance of you getting a single use cargo bounty for the hide else they are worthless",True,False,14,2850.9166666666665
openshift/origin/21978,2019-02-10T09:51:33Z,False,5c6264c86480fde05c02e970,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
tgstation/tgstation/42729,2019-02-10T10:00:06Z,False,5c63f0ec6480fde1478ebe63,"Gondola Hides have value upon themselves Tlaltecuhtli, like xenomorph hides, just slap them inside a crate to send off, i dont think they were referring to the bounty.

- More grenades are great but this feels like scraping the bottom of the barrel, here's a on the fly gorilla grenade that's long-term availible but hard to get and properly regulate without it blowing up in your face as a experienced chemist/scientist without atleast cryo beakers & access to cubes.

```
        /datum/crafting_recipe/tarzangrenade
	name = ""Rumble In-the Jungle Grenade""
	result = /obj/item/grenade/spawnergrenade/tarzan
	reqs = list(/datum/reagent/strange_reagent = 12
                                /datum/reagent/synthflesh = 12
                                /datum/reagent/blood= 12
                                /obj/item/reagent_containers/food/snacks/monkeycube = 12,
				/obj/item/grenade/chem_grenade)
	time = 60
	category = CAT_WEAPONRY
        subcategory = CAT_WEAPON",True,False,14,2850.9166666666665
tgstation/tgstation/42729,2019-02-10T10:05:34Z,False,5c63f0ec6480fde1478ebe64,oh i tought it was converted to a bounty a while ago? nvm,True,False,14,2850.9166666666665
openshift/origin/21978,2019-02-10T11:52:33Z,False,5c6264c86480fde05c02e971,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
openshift/origin/21978,2019-02-10T13:53:31Z,False,5c6264c86480fde05c02e972,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
tgstation/tgstation/42729,2019-02-10T13:58:43Z,False,5c63f0ec6480fde1478ebe65,I don’t even want to make tarzan grenade craft able.,True,False,14,2850.9166666666665
openshift/origin/21978,2019-02-10T15:54:30Z,False,5c6264c86480fde05c02e973,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
openshift/origin/21978,2019-02-10T17:55:31Z,False,5c6264c86480fde05c02e974,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
openshift/origin/21978,2019-02-10T19:56:43Z,False,5c6264c86480fde05c02e975,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
openshift/origin/21978,2019-02-10T21:57:31Z,False,5c6264c86480fde05c02e976,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
openshift/origin/21978,2019-02-10T23:58:32Z,False,5c6264c86480fde05c02e977,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
tgstation/tgstation/42729,2019-02-11T00:53:31Z,False,5c63f0ec6480fde1478ebe66,"Also @FantasticFwoosh that recipe is far too easy, given it spawns 3 angry gorillas, who have a high chance of stunning each hit.",True,False,14,2850.9166666666665
openshift/origin/21978,2019-02-11T01:59:36Z,False,5c6264c86480fde05c02e978,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
openshift/origin/21978,2019-02-11T04:00:33Z,False,5c6264c86480fde05c02e979,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
openshift/origin/21978,2019-02-11T06:11:05Z,False,5c6264c86480fde05c02e97a,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
openshift/origin/21978,2019-02-11T08:02:30Z,False,5c6264c86480fde05c02e97b,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
openshift/origin/21978,2019-02-11T10:03:32Z,False,5c6264c86480fde05c02e97c,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
KSP-KOS_____KOS_____2260,2019-02-11T11:18:57Z,True,KSP-KOS_____KOS_____2260_____462293454,"@firda-cze 

I am only saying this because you at least do deserve an explanation.

In the text you deleted, you had the rule not to make any judgements about you.  Well that makes it impossible to answer the question honestly.  Honesty in this case *requires* pointing out your toxic communication style where you are always on the attack, not treating other team members like equals.  (Your deleted text *claims* you view people as colleagues, but your behavior proves otherwise.)  But, I doubt you'll listen.  It suffices to say that I'm not alone in this decision.  I asked other team members about it, sought out the advice of others *who had also watched this exchange so they weren't just relying on my word over yours* and gave it a long think, that's why I was away over the weekend.  This decision was important, and needed to be made with some distance and time.

Communicating with you is painful, making working on kOS a chore instead of a joy.  The advantage of another pair of hands on the code is offset by the time lost to having to step away for days to calm down after being browbeaten by your narcissistic refusal to meet on common ground yet again one more time.  You annoy more people than just me.  I've just had less tolerance of it than others do. There's a reason you were never invited to join the dev team's Slack channel, even though other people who've contributed less have been.  

Be aware that if you try to use the github comments to complain about this, or blame others yet again, then a ban will be necessary.  I don't want to do it, but this is a place for teamwork, not browbeating, so just don't.  This toxic commentary has already been waay to public as-is.

Just walk away.",True,True,36,458822.06666666665
openshift/origin/21978,2019-02-11T12:08:01Z,False,5c6264c86480fde05c02e97d,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
openshift/origin/21978,2019-02-11T14:06:14Z,False,5c6264c86480fde05c02e97e,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
openshift/origin/21978,2019-02-11T15:58:51Z,False,5c6264c86480fde05c02e97f,/retest,True,False,124,41433.166666666664
openshift/origin/21978,2019-02-11T16:06:38Z,False,5c6264c86480fde05c02e980,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
openshift/origin/21978,2019-02-11T18:07:37Z,False,5c6264c86480fde05c02e981,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
Monika-After-Story_____MonikaModDev_____3588,2019-02-11T19:01:34Z,True,Monika-After-Story_____MonikaModDev_____3588_____255648424,"```suggestion
        m 5hubfb ""You're so sweet, letting me win~""
```",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-11T19:01:53Z,True,Monika-After-Story_____MonikaModDev_____3588_____255648540,Need to dissolve into this exp,True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-11T19:04:40Z,True,Monika-After-Story_____MonikaModDev_____3588_____255649509,"```suggestion
        m 3tsu ""As you can see, I can win by myself!""
```",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-11T19:07:05Z,True,Monika-After-Story_____MonikaModDev_____3588_____255650340,"Both 'Ahaha' and 'Ehehe' are always kept to the same length.
```suggestion
        m 2lssdrb ""Ahaha...""
```",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-11T19:11:47Z,True,Monika-After-Story_____MonikaModDev_____3588_____255652059,"```suggestion
        m 2esd ""I hope you're having fun, [player].""
```",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-11T19:12:14Z,True,Monika-After-Story_____MonikaModDev_____3588_____255652215,"```suggestion
        m 1hub ""Ahaha!""
```",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-11T19:16:31Z,True,Monika-After-Story_____MonikaModDev_____3588_____255653771,"```suggestion
            m 4tfu""But so am I, Ahaha!""
```",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-11T19:18:20Z,True,Monika-After-Story_____MonikaModDev_____3588_____255654421,"Don't really like this line, could reference the player's streak instead, so getting rid of the if statement:
```suggestion
            m 2tku ""Looks like your streak is over!""
```",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-11T19:19:20Z,True,Monika-After-Story_____MonikaModDev_____3588_____255654769,"```suggestion
            m 2hub ""Ahaha, sorry [player]!""
```",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-11T19:20:06Z,True,Monika-After-Story_____MonikaModDev_____3588_____255655074,"```suggestion
            m 2eksdlc ""It happened again."" 
```",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-11T19:20:26Z,True,Monika-After-Story_____MonikaModDev_____3588_____255655189,"```suggestion
            m 3hksdlb ""Sorry about that!""
```",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-11T19:20:59Z,True,Monika-After-Story_____MonikaModDev_____3588_____255655413,"```suggestion
                m 4hua ""I'm sure you'll win soon."" 
                m 4hub ""Just keep trying!""
```",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-11T19:22:40Z,True,Monika-After-Story_____MonikaModDev_____3588_____255656076,"```suggestion
                m 3tub ""I'm just kidding, [player].""
```",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-11T19:23:01Z,True,Monika-After-Story_____MonikaModDev_____3588_____255656216,"```suggestion
                m 4hub ""You're pretty good yourself!""
```",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-11T19:23:17Z,True,Monika-After-Story_____MonikaModDev_____3588_____255656324,"```suggestion
                m 5eua ""Don't worry, I'm sure you'll win again soon~""
```",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-11T19:23:53Z,True,Monika-After-Story_____MonikaModDev_____3588_____255656558,"```suggestion
                m 2duu ""Not bad, [player].""
```",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-11T19:24:15Z,True,Monika-After-Story_____MonikaModDev_____3588_____255656692,"```suggestion
                m 4ekb ""I gave it everything I had, so don't feel too bad for losing from time to time.""
```",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-11T19:25:10Z,True,Monika-After-Story_____MonikaModDev_____3588_____255657009,"```suggestion
        m 2tub ""I was really trying this time!""
```",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-11T19:25:29Z,True,Monika-After-Story_____MonikaModDev_____3588_____255657122,"```suggestion
        m 1hub ""Way to go, [player]!""
```",True,True,160,26066.383333333335
openshift/origin/21978,2019-02-11T19:42:19Z,False,5c6264c86480fde05c02e982,/retest,True,False,124,41433.166666666664
openshift/origin/21978,2019-02-11T20:08:37Z,False,5c6264c86480fde05c02e983,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
Monika-After-Story_____MonikaModDev_____3588,2019-02-11T21:41:58Z,True,Monika-After-Story_____MonikaModDev_____3588_____255704963,"```suggestion
            m 1rusdlb ""I didn't expect to lose this quickly.""
```",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-11T21:42:36Z,True,Monika-After-Story_____MonikaModDev_____3588_____255705171,"```suggestion
                m 4eud ""Another win for you!""
```",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-11T21:43:00Z,True,Monika-After-Story_____MonikaModDev_____3588_____255705295,"```suggestion
                m 2tfb ""Well, I'm sure I'll beat you sooner or later [player]...""
```",True,True,160,26066.383333333335
chrisspen/dryden-requirements/957,2019-02-12T01:00:02Z,False,5c63a4026480fddbfd1fd5a6,Closing this in favor of #964,True,False,1,0.0
tgstation/tgstation/42729,2019-02-12T01:06:05Z,False,5c63f0ec6480fde1478ebe67,these make no sense and are weird.,True,False,14,2850.9166666666665
tgstation/tgstation/42729,2019-02-12T02:47:57Z,False,5c63f0ec6480fde1478ebe68,reeeeeeeeeee but i need one for something I wanna do later,True,False,14,2850.9166666666665
openshift/origin/21978,2019-02-12T04:11:31Z,False,5c6264c86480fde05c02e984,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
openshift/origin/21978,2019-02-12T06:11:30Z,False,5c6264c86480fde05c02e985,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
openshift/origin/21978,2019-02-12T08:13:28Z,False,5c64ce476480fddd7020a51f,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
openshift/origin/21978,2019-02-12T10:14:51Z,False,5c64dbb86480fdd9dc742d0b,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
openshift/origin/21978,2019-02-12T12:15:46Z,False,5c64eb306480fde2c0ea58b5,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T13:27:45Z,True,Monika-After-Story_____MonikaModDev_____3588_____255950591,"Changing this to 5 so it's consistent
```suggestion
                    m 5hub ""Ehehe!""
```",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T13:33:33Z,True,Monika-After-Story_____MonikaModDev_____3588_____255952706,"```suggestion
                    m 5hua ""Thanks for letting me win, [player]~""
```",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T13:34:16Z,True,Monika-After-Story_____MonikaModDev_____3588_____255952954,"Should try to stay within the same pose, looks better that way.
```suggestion
                        m 5eubla ""But I wouldn't mind losing against you sometimes.""
```",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T13:35:02Z,True,Monika-After-Story_____MonikaModDev_____3588_____255953300,"```suggestion
                        m 5hub ""I like to see you win just as much as you like to see me win~""
```",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T13:38:20Z,True,Monika-After-Story_____MonikaModDev_____3588_____255954968,"Same thing regarding poses here
```suggestion
                        m 5eub ""I wouldn't mind losing against you, though.""
```",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T13:45:18Z,True,Monika-After-Story_____MonikaModDev_____3588_____255957917,"As an FYI, all menu options go *inside* the menus (they don't take expression params inside there, so you'll need to `show monika exp` before the menu) Should look something like this;

```renpy
show monika exp
menu:
    m ""Question""

    ""Menu Option"":
        m exp ""Dialogue""

    ""Menu Option 2"":
        m exp ""Dialogue""
```
etc.",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T13:46:12Z,True,Monika-After-Story_____MonikaModDev_____3588_____255958312,Question in menu,True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T13:47:16Z,True,Monika-After-Story_____MonikaModDev_____3588_____255958736,"Feels a little out of place.
```suggestion
```",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T13:48:11Z,True,Monika-After-Story_____MonikaModDev_____3588_____255959199,"```suggestion
                                m 1rfu ""[player]!""
```",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T13:51:44Z,True,Monika-After-Story_____MonikaModDev_____3588_____255960715,"While I know the expressions here are slightly different to the one above, I think the exp's there work a little better.  You could probably just put the one above into a label and call it both up there and here, so we don't have to maintain two copies of the same dialogue.",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T13:55:33Z,True,Monika-After-Story_____MonikaModDev_____3588_____255962250,"```suggestion
                m 2tku ""Aren't you getting tired of letting me win, [player]?""
```",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T13:56:19Z,True,Monika-After-Story_____MonikaModDev_____3588_____255962603,"```suggestion
        m 3hub ""Ehehe~""
```",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T14:01:37Z,True,Monika-After-Story_____MonikaModDev_____3588_____255964854,"```suggestion
            m 4tsb ""I told you I'd win the next game.""
```",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T14:03:10Z,True,Monika-After-Story_____MonikaModDev_____3588_____255965497,"```suggestion
            m 4eub ""Keep it up and you'll beat me, I'm sure of it.""
```",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T14:03:28Z,True,Monika-After-Story_____MonikaModDev_____3588_____255965610,"```suggestion
            m 4eub ""You're really good!""
```",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T14:05:55Z,True,Monika-After-Story_____MonikaModDev_____3588_____255966705,"```suggestion
        m 4hua ""Now it's my time to shine~""
```",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T14:09:07Z,True,Monika-After-Story_____MonikaModDev_____3588_____255968054,"```suggestion
                    m 2hub ""Looks like I won.""
```",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T14:09:18Z,True,Monika-After-Story_____MonikaModDev_____3588_____255968149,"```suggestion
                    m 3hub ""Looks like I won again.""
```",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T14:09:35Z,True,Monika-After-Story_____MonikaModDev_____3588_____255968283,"```suggestion
                m 1hub ""Ahaha!""
```",True,True,160,26066.383333333335
openshift/origin/21978,2019-02-12T14:16:58Z,False,5c64f7416480fdda45370f4d,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T14:17:48Z,True,Monika-After-Story_____MonikaModDev_____3588_____255971808,I don't really like this block of dialogue. I think something more along the lines of how hard it is to make a shot like that would be better suited.,True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T14:18:43Z,True,Monika-After-Story_____MonikaModDev_____3588_____255972179,"```suggestion
            m 2wuo ""Wow, there's no way I could hit that!""
```",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T14:19:03Z,True,Monika-After-Story_____MonikaModDev_____3588_____255972331,"```suggestion
        m 2wud ""You've won three times in a row already...""
```",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T14:19:24Z,True,Monika-After-Story_____MonikaModDev_____3588_____255972462,"```suggestion
            m 2tub ""Maybe I'm going a little bit too easy on you~""
```",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T14:19:46Z,True,Monika-After-Story_____MonikaModDev_____3588_____255972615,"```suggestion
            m 4hua ""You're good, [player]!""
```",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T14:25:12Z,True,Monika-After-Story_____MonikaModDev_____3588_____255974979,"```suggestion
        m 2tsu ""Have you been practicing?"" 
```",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T14:34:06Z,True,Monika-After-Story_____MonikaModDev_____3588_____255979149,"```suggestion
            m 3hub ""Well played, [player]!""
```",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T14:34:58Z,True,Monika-After-Story_____MonikaModDev_____3588_____255979628,"```suggestion
            m 3tfu ""Are you sure you aren't cheating, [player]?""
```",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T14:36:46Z,True,Monika-After-Story_____MonikaModDev_____3588_____255980373,"```suggestion
            m 4wuo ""That was amazing, [player]!""
```",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T14:38:20Z,True,Monika-After-Story_____MonikaModDev_____3588_____255981016,"```suggestion
        m 3hksdlb ""I don't know what happened but I don't stand a chance against you!"" 
```",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T14:38:54Z,True,Monika-After-Story_____MonikaModDev_____3588_____255981222,"```suggestion
        m 1eka ""Do you think you could go a little easier on me please?""
```",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T14:40:51Z,True,Monika-After-Story_____MonikaModDev_____3588_____255982160,"```suggestion
            m 2wuo ""Incredible, [player]!""
```",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T14:41:35Z,True,Monika-After-Story_____MonikaModDev_____3588_____255982518,"```suggestion
            m 4hksdlb ""I can't keep up!""
```",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T14:42:01Z,True,Monika-After-Story_____MonikaModDev_____3588_____255982713,"```suggestion
            m 4eub ""You're really good!""
```",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T14:43:27Z,True,Monika-After-Story_____MonikaModDev_____3588_____255983412,"```suggestion
            m 2hksdlb ""Ahaha..."" 
```",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T14:44:26Z,True,Monika-After-Story_____MonikaModDev_____3588_____255983909,Dissolve into pose 5,True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T14:45:53Z,True,Monika-After-Story_____MonikaModDev_____3588_____255984786,"```suggestion
                m 2wuo ""Wow, I'm really trying...{w=1}you're unstoppable!""
```",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T14:46:58Z,True,Monika-After-Story_____MonikaModDev_____3588_____255985345,"```suggestion
                m 3hub ""Ahaha!""
```",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T14:49:23Z,True,Monika-After-Story_____MonikaModDev_____3588_____255986544,"```suggestion
                m 1tsu ""This is intense!""
```",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T14:49:39Z,True,Monika-After-Story_____MonikaModDev_____3588_____255986655,Dissolve into pose 5,True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T14:50:26Z,True,Monika-After-Story_____MonikaModDev_____3588_____255987006,"```suggestion
                m 1hub ""You're really good, [player].""
```",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T14:52:52Z,True,Monika-After-Story_____MonikaModDev_____3588_____255988229,"```suggestion
                m 4eua ""I love playing Pong with you.""
```",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T14:53:03Z,True,Monika-After-Story_____MonikaModDev_____3588_____255988326,"```suggestion
```",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T14:55:12Z,True,Monika-After-Story_____MonikaModDev_____3588_____255989362,"```suggestion
    m 5hub ""Let's play again sometime soon, okay?""
```",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T14:55:54Z,True,Monika-After-Story_____MonikaModDev_____3588_____255989689,"```suggestion
```",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T14:56:46Z,True,Monika-After-Story_____MonikaModDev_____3588_____255990124,"```suggestion
                m 5eub ""It's nice to see you win, [player].""
```",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T14:58:15Z,True,Monika-After-Story_____MonikaModDev_____3588_____255990829,"```suggestion
        m 2tfu ""Let's find out how good you really are, [player]!""  
```",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T14:58:26Z,True,Monika-After-Story_____MonikaModDev_____3588_____255990938,"```suggestion
        m 2tsu ""So you are playing seriously now?""
```",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T14:58:52Z,True,Monika-After-Story_____MonikaModDev_____3588_____255991137,"```suggestion
        m 1hub ""Ahaha!""
```",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T14:59:10Z,True,Monika-After-Story_____MonikaModDev_____3588_____255991285,"```suggestion
                m 2efu ""Keep up, [player]!""
```",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T14:59:19Z,True,Monika-After-Story_____MonikaModDev_____3588_____255991358,"```suggestion
                m 2hua ""This time it's my win!""
```",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T15:01:09Z,True,Monika-After-Story_____MonikaModDev_____3588_____255992236,Dissolve into pose 5,True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T15:02:38Z,True,Monika-After-Story_____MonikaModDev_____3588_____255992875,"```suggestion
            m 3hksdla ""I didn't mean to bounce it that much.""
```",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T15:03:36Z,True,Monika-After-Story_____MonikaModDev_____3588_____255993355,"```suggestion
        m 1hua ""Ehehe!""
```",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T15:03:59Z,True,Monika-After-Story_____MonikaModDev_____3588_____255993529,"```suggestion
        m 3eub ""Keep trying!""
```",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T15:08:40Z,True,Monika-After-Story_____MonikaModDev_____3588_____255995763,"```suggestion
        m 2lssdrb ""Ahaha...""
```",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T17:42:00Z,True,Monika-After-Story_____MonikaModDev_____3588_____256068319,?,True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T17:56:06Z,True,Monika-After-Story_____MonikaModDev_____3588_____256074388,"Could I ask what this ""#"" is and what it's for here?",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T17:57:15Z,True,Monika-After-Story_____MonikaModDev_____3588_____256074862,"I get that Monika wants you to stay hydrated and all, but I think having this here is a bit random and could sound a bit like she's nagging at you. ",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T17:58:09Z,True,Monika-After-Story_____MonikaModDev_____3588_____256075201,"Same as before; What's this ""#"" doing there?",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T17:58:30Z,True,Monika-After-Story_____MonikaModDev_____3588_____256075321,"Same as before; What's this ""#"" doing there?",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T17:59:11Z,True,Monika-After-Story_____MonikaModDev_____3588_____256075603,"Same as before; What's this ""#"" doing there?",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T18:02:54Z,True,Monika-After-Story_____MonikaModDev_____3588_____256077086,Dissolve into body pose 5. ,True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T18:05:19Z,True,Monika-After-Story_____MonikaModDev_____3588_____256078025,"Same as before; What's this ""#"" doing there?",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T18:11:29Z,True,Monika-After-Story_____MonikaModDev_____3588_____256080295,"Same as before; What's this ""#"" doing there?",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T18:15:33Z,True,Monika-After-Story_____MonikaModDev_____3588_____256081878,Why do you want to say [player] after having said it the line before?,True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T18:18:34Z,True,Monika-After-Story_____MonikaModDev_____3588_____256082959,"Maybe it's just me, but I think it would be easier to read and go over the code if this was an `elif`. ",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T18:27:35Z,True,Monika-After-Story_____MonikaModDev_____3588_____256086554,The emphasis does not work as well with a ! in my oppinion.,True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T18:28:46Z,True,Monika-After-Story_____MonikaModDev_____3588_____256087075,"That is exactly the point.
They are not the same and are not supposed to be the same.",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T18:31:14Z,True,Monika-After-Story_____MonikaModDev_____3588_____256088155,Need to dissolve into pose 5.,True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T18:33:12Z,True,Monika-After-Story_____MonikaModDev_____3588_____256088905,"The point of the if-clause is to remind the player of this if it is from longer ago.
Your suggestion duplicates the other if clause.",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T18:48:17Z,True,Monika-After-Story_____MonikaModDev_____3588_____256095069,Dunno about this one.,True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T19:01:32Z,True,Monika-After-Story_____MonikaModDev_____3588_____256100389,"Fair point, overlooked that when I was going through.",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T19:04:12Z,True,Monika-After-Story_____MonikaModDev_____3588_____256101293,"Hm, then perhaps change the expression to something like `2dsc` or `2dsd`, it might suit the line a little better.",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T19:09:16Z,True,Monika-After-Story_____MonikaModDev_____3588_____256103578,"```renpy
m 2ekc ""I'm sorry for assuming then...""
m 3ekb ""In case you can't concentrate, maybe you should take a break.""
m 4eka ""Drinking a glass of water can also help.""
```
vs.

```renpy
m 2ekd ""I'm sorry for assuming...""#
m 3eka ""If you can't concentrate, maybe you should take a break.""
m 4eka ""Drinking a glass of water can also help.""
```
Sure, the first line is different, and upon looking at it again, it might be fine w/o the `then` as well. I still feel the expressions in the first one look better though, hence why I say it.",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T19:09:49Z,True,Monika-After-Story_____MonikaModDev_____3588_____256103787,It just comes off as robotic otherwise.,True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T19:10:41Z,True,Monika-After-Story_____MonikaModDev_____3588_____256104127,It sounds rather robotic in the original way.,True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T19:20:39Z,True,Monika-After-Story_____MonikaModDev_____3588_____256107956,?,True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T19:25:45Z,True,Monika-After-Story_____MonikaModDev_____3588_____256109905,I don't think this is giving enough credit.,True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T19:26:13Z,True,Monika-After-Story_____MonikaModDev_____3588_____256110178,"Either that, or we can keep the exclamatory, which I feel does make sense, if perhaps the expression was `2tfu` or something.",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T19:27:36Z,True,Monika-After-Story_____MonikaModDev_____3588_____256110797,?,True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T19:28:29Z,True,Monika-After-Story_____MonikaModDev_____3588_____256111180,"What's wrong with changing ""you are"" to ""you're""?",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T19:32:37Z,True,Monika-After-Story_____MonikaModDev_____3588_____256112835,it's not about the you're,True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T19:33:27Z,True,Monika-After-Story_____MonikaModDev_____3588_____256113140,What do you mean with Dissolve into pose?,True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T19:37:30Z,True,Monika-After-Story_____MonikaModDev_____3588_____256114775,"if this is the expression to dissolve into 5, what is the expression to dissolve out of 5?
The same one for the next pose?",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T19:44:48Z,True,Monika-After-Story_____MonikaModDev_____3588_____256117631,"This is actually a reference to the tired topic if i remember correctly, not the hydrated one.",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T19:47:23Z,True,Monika-After-Story_____MonikaModDev_____3588_____256118729,"Again, one way just makes Monika sound like a robot.",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T19:47:39Z,True,Monika-After-Story_____MonikaModDev_____3588_____256118826,See @Rai99's comment below,True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T19:48:13Z,True,Monika-After-Story_____MonikaModDev_____3588_____256119055,"Original line is kinda choppy, so if you've got another idea that makes it less choppy, feel free to use that.",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T19:49:11Z,True,Monika-After-Story_____MonikaModDev_____3588_____256119441,Still feels kinda out of place.,True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T19:51:30Z,True,Monika-After-Story_____MonikaModDev_____3588_____256120382,Still a reference to the tired topic.,True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T19:52:48Z,True,Monika-After-Story_____MonikaModDev_____3588_____256120939,"Please define ""sounding like a robot"" to me so that I can judge that myself.",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T20:00:54Z,True,Monika-After-Story_____MonikaModDev_____3588_____256124065,"Are you sure about the dissolving?
Don't know whether it looks better with it tbh.
I also think there are other 5s that don't use it either.",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T20:27:40Z,True,Monika-After-Story_____MonikaModDev_____3588_____462921216,"I'm just going to handle this myself, I think.",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T20:40:56Z,True,Monika-After-Story_____MonikaModDev_____3588_____462925828,"> I'm just going to handle this myself, I think.

You know what a community project is, right?",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T20:50:13Z,True,Monika-After-Story_____MonikaModDev_____3588_____462928985,"I have not checked whether any of the suggested poses are ""better"" or ""worse"" than the ones already implemented.
I think it is best to have variants, so that multiple responses for the same event are possible.
",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T20:51:00Z,True,Monika-After-Story_____MonikaModDev_____3588_____462929296,"That said, @multimokia you have suggested using invalid sprites.
Either make them become valid or change them into valid ones.",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T20:56:21Z,True,Monika-After-Story_____MonikaModDev_____3588_____256143438,I think we are past the point where we have to worry about single if statements.,True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T20:58:23Z,True,Monika-After-Story_____MonikaModDev_____3588_____256144205,2dsc is a completly different emotion,True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T21:02:12Z,True,Monika-After-Story_____MonikaModDev_____3588_____256145630,"Why does it matter how it looks?
This is not a beauty-contest, Monika is expressing herself.
Also, you may like a version better but this doesn't mean everyone does.",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T23:43:38Z,True,Monika-After-Story_____MonikaModDev_____3588_____256194785,"I'm not sure it it fits to start in body pose 5 for this. I think it feels a bit unnatural for Monika to go into a lean just to confirm that you want to play pong again. 

Also, dissolve out of body pose 5. ",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T23:50:57Z,True,Monika-After-Story_____MonikaModDev_____3588_____256196464,"I'm still not sure this fits here. Sure, Monika wants you to stay hydrated and it might even help you concentrate like she wants, but personally, it seems a bit random to have Monika say that here. ",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T23:56:09Z,True,Monika-After-Story_____MonikaModDev_____3588_____256197635,"Personally, I think ""you'll"" sounds more natural than ""you will"". ",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T23:59:20Z,True,Monika-After-Story_____MonikaModDev_____3588_____256198275,"Add a comma after ""Congrats"". ",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-12T23:59:41Z,True,Monika-After-Story_____MonikaModDev_____3588_____256198369,"Add a comma after ""enough"". ",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-13T00:00:55Z,True,Monika-After-Story_____MonikaModDev_____3588_____256198610,"Add a comma after ""happened"". ",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-13T00:01:10Z,True,Monika-After-Story_____MonikaModDev_____3588_____256198670,"Add a comma after ""me"". ",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-13T00:04:06Z,True,Monika-After-Story_____MonikaModDev_____3588_____256199296,"Add a comma after ""later"". ",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-13T00:09:55Z,True,Monika-After-Story_____MonikaModDev_____3588_____256200429,"Add a comma after ""sorry"". ",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-13T00:12:40Z,True,Monika-After-Story_____MonikaModDev_____3588_____256201023,Maybe you'll want to fix this comment at some point. ,True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-13T05:29:22Z,True,Monika-After-Story_____MonikaModDev_____3588_____256252018,Does this one pop up the first time you play?,True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-13T05:30:22Z,True,Monika-After-Story_____MonikaModDev_____3588_____256252193,"It is also worth thinking about to change the ""you are awesome at pong"" compliment.",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-13T05:51:53Z,True,Monika-After-Story_____MonikaModDev_____3588_____463069154,"Hey @multimokia.
It is ok that you make suggestions to improve the game.
However it is not ok to just do whatever you want and delete my lines as you See fit and replace them with yours.
I could have ignored your suggestions but I even added them without further checking them.
Please note that I will revert your commit so that random line selection is a part of the dialog again.
I will check the other changes you made later.
Please do not do something like this again.",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-13T10:42:39Z,True,Monika-After-Story_____MonikaModDev_____3588_____256338203,"Oh you meant the comment in the code, not monika's comment.",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-13T11:17:28Z,True,Monika-After-Story_____MonikaModDev_____3588_____463160922,"You do understand that the point of editing is to remove things that don't sound good, and replace them with things that sound better, right? 

What you did was circumvent the editing process, and are actively making people's work harder along with making the code more messy.

Don't get me wrong, if you have other suggestions I'm more than happy to hear them and see how they sound, if I think they're alright, sure let's use that. But that's not even remotely close to what you did here. This sort of behavior is why I took it over.

While this is a community project, you fail to understand that when you're requested changes, you're supposed to make them. Not half do them.",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-13T11:22:06Z,True,Monika-After-Story_____MonikaModDev_____3588_____463162368,"Do note, by the way, I will be reverting your further commits adding that random selection back. A lot of what you had simply isn't Monika's voice. There's a reason I requested changes on it.",True,True,160,26066.383333333335
openshift/origin/21978,2019-02-13T12:27:42Z,False,5c6583ac6480fdd971edeb76,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
Monika-After-Story_____MonikaModDev_____3588,2019-02-13T13:37:40Z,True,Monika-After-Story_____MonikaModDev_____3588_____463201825,"Just a note you certainly cannot ignore suggestions made by devs.  Well, actually you can but that just means your PR will be closed.  We make these suggestions for a reason.  Dialogue that sounds nothing like Monika isn't going to make it into the mod. So you can either learn from what you are being told or you can continue to fight us every step of the way at which point we'll just move on to another PR.  Your choice.",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-13T13:43:36Z,True,Monika-After-Story_____MonikaModDev_____3588_____463203730,"> when you're requested changes, you're supposed to make them.

This is where you are wrong.
Everything you can do is suggest, you can not command me to do your bidding, which is exactly what you are doing.
Your code can be questioned just as much as mine.
If I disagree with a suggested change or think it can be solved differently, then it is on you to respect this, not to force your oppinion by abusing your status. If you can reasonably convince me that my solution is not acceptable, then it is on me to react to it. If the endresult is not acceptable for the team (not you alone), theoretically the community itself, then merging the pull request can be denied, if no compromise can be found.",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-13T13:46:55Z,True,Monika-After-Story_____MonikaModDev_____3588_____463204831,"Not gonna continue arguing with you.  If your work is not up to our standards and you refuse to adjust it so it is, it's not making it into the mod.  Your dialogue writing is not satisfactory.  Either listen to us or close the PR and stop wasting everyone's time ",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-13T13:59:45Z,True,Monika-After-Story_____MonikaModDev_____3588_____463208909,"> you can either learn from what you are being told or you can continue to fight us every step of the way

It is saddening that none of you can handle criticism, yet you criticise more than a hundred things in this content alone.
I uploaded this pull request for the community, so do go on and close it, if oppinions outside your owns aren't welcome.
I can try to help the community, but it is entirely voluntary.
I have literally a dozent better things to do and there really is no reason why I should have to put up with this treatment.
I will upload a final version.
From thereon out I will make no more changes to it, it is your responsibility towards the community to make something out of it.",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-13T14:27:13Z,True,Monika-After-Story_____MonikaModDev_____3588_____463218493,"> If I disagree with a suggested change or think it can be solved differently, then it is on you to respect this, not to force your oppinion by abusing your status.

Did I or did I not say:
> Don't get me wrong, if you have other suggestions I'm more than happy to hear them and see how they sound, if I think they're alright, sure let's use that.

I'm done arguing. Don't bother pushing anything else. I'm not even done with my changes.

Since you're so unwilling to make changes yourself, or even compromise, what's the point of even suggesting at this point? Like @jmwall24 said above, dialogue that's not in Monika's voice won't make it into the mod.",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-13T15:30:05Z,True,Monika-After-Story_____MonikaModDev_____3588_____463242987,"@multimokia why did you remove the random dialogue? if the dialogue doesnt fit then change the dialogue, not remove the random aspect.",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-13T15:33:57Z,True,Monika-After-Story_____MonikaModDev_____3588_____463244571,"Whatever anyone says next,please be tactful and mindful,we don't want any more unpleasantness to happen here,things like these should unite people,not put any awkwardness and negative emotions between them",True,True,160,26066.383333333335
openshift/origin/21978,2019-02-13T16:29:08Z,False,5c65a3f56480fdde215ef864,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
Monika-After-Story_____MonikaModDev_____3588,2019-02-13T17:08:52Z,True,Monika-After-Story_____MonikaModDev_____3588_____256496074,that was a bug.,True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-13T17:25:37Z,True,Monika-After-Story_____MonikaModDev_____3588_____463289265,">""Look...""
>""Writing is a really personal thing.""
>""And sharing it can definitely be hard.""
>""It looks like we learned that today.""
>""Even small criticism can lead to something pretty heated.""
>""Yeah, so...""
>""You don't need to feel threatened.""
>""You're a great writer, multimokia.""",True,True,160,26066.383333333335
Monika-After-Story_____MonikaModDev_____3588,2019-02-13T18:21:30Z,True,Monika-After-Story_____MonikaModDev_____3588_____463309664,"Dennis the menace strikes again.

With this in mind, you've shown multiple times of your hostility towards criticism, advice, and requests to make changes to your PR. Time and time again you've broken our Code of Conduct, continuing to be a toxic element to the community, as pointed out by several people. If you cannot comply peacefully (and no, malicious compliance is not peaceful), then we are not obligated to cooperate with you any longer. We literally have ""dozents"" of better things to do than argue with you all day.",True,True,160,26066.383333333335
webpack_____webpack-dev-server_____1664,2019-02-13T23:53:49Z,True,webpack_____webpack-dev-server_____1664_____252890752,"- [x] This is a **bugfix**
- [ ] This is a **feature**
- [ ] This is a **code refactor**
- [ ] This is a **test update**
- [ ] This is a **docs update**
- [ ] This is a **metadata update**

### Motivation / Use-Case

HMR client code builds the socket URL using `location.hostname` but uses the port set in server's configuration. Since the browser is at the very end of the architecture, the proper way to infer socket's URL is to also use `location.port` along with the location.hostname.

More and more we see the scenario where the dev server is used in a cloud-based development environment or an architecture with some sort of proxy in front of it.

- With a dev server externally exposed, host `0.0.0.0` and port `9000` and my proxy exposing it in `http://dev.mydomain.com` (default port 80).
  - Expected HMR socket generated URL:  `http://dev.mydomain.com/sockjs-node/info?t=XX` (default port 80).
  - Actual HMR socket generated URL:  `http://dev.mydomain.com:9000/sockjs-node/info?t=XX` (**wrong** port 9000).

More details in issue: https://github.com/webpack/webpack-dev-server/issues/1663

### Breaking Changes

No.
Those who exposed also that wrong port in their proxies as a way around the issue can now remove that configuration.

",True,True,39,88465.16666666667
webpack_____webpack-dev-server_____1664,2019-02-15T00:35:32Z,True,webpack_____webpack-dev-server_____1664_____463860464,"@evilebottnawi How are you testing the logic of the client code? I looked for it but couldn't find it in any of the tests. I guess webdriver is the right solution here but I didn't want to add too much overhead to your current tests. Guide me on how you recommend to do it and I'll be glad to add it.

",True,True,39,88465.16666666667
openshift/origin/21978,2019-02-15T02:00:18Z,False,5c6675816480fdd95c636196,/retest,True,False,124,41433.166666666664
openshift/origin/21978,2019-02-15T02:35:28Z,False,5c6677416480fddff0bc6d8d,/retest,True,False,124,41433.166666666664
webpack_____webpack-dev-server_____1664,2019-02-15T10:13:34Z,True,webpack_____webpack-dev-server_____1664_____463982908,https://github.com/webpack/webpack-dev-server/blob/master/test/Socket.test.js,True,True,39,88465.16666666667
hamcrest/PyHamcrest/96,2019-02-15T14:51:42Z,False,5c66d3376480fdda1c89daaa,@offbyone Looks good to me.,True,False,9,84017.08333333333
openshift/origin/21978,2019-02-15T16:38:23Z,False,5c66ec386480fddbfd21a968,/test e2e-aws-builds,True,False,124,41433.166666666664
openshift/origin/21978,2019-02-15T16:41:13Z,False,5c66ece36480fddfaeec7253,"@sjenning: The following tests **failed**, say `/retest` to rerun them all:

Test name | Commit | Details | Rerun command
--- | --- | --- | ---
ci/prow/e2e-aws-image-ecosystem | 65ca1cfc46a59b071a8747ebe95098782729f66c | [link](https://openshift-gce-devel.appspot.com/build/origin-ci-test/pr-logs/pull/21978/pull-ci-openshift-origin-master-e2e-aws-image-ecosystem/123) | `/test e2e-aws-image-ecosystem`
ci/prow/e2e-aws-builds | 65ca1cfc46a59b071a8747ebe95098782729f66c | [link](https://openshift-gce-devel.appspot.com/build/origin-ci-test/pr-logs/pull/21978/pull-ci-openshift-origin-master-e2e-aws-builds/739) | `/test e2e-aws-builds`
ci/prow/e2e-conformance-k8s | 65ca1cfc46a59b071a8747ebe95098782729f66c | [link](https://openshift-gce-devel.appspot.com/build/origin-ci-test/pr-logs/pull/21978/pull-ci-openshift-origin-master-e2e-conformance-k8s/217) | `/test e2e-conformance-k8s`
ci/prow/e2e-aws | 65ca1cfc46a59b071a8747ebe95098782729f66c | [link](https://openshift-gce-devel.appspot.com/build/origin-ci-test/pr-logs/pull/21978/pull-ci-openshift-origin-master-e2e-aws/4091) | `/test e2e-aws`

[Full PR test history](https://openshift-gce-devel.appspot.com/pr/21978). [Your PR dashboard](https://openshift-gce-devel.appspot.com/pr/sjenning). Please help us cut down on flakes by [linking to](https://github.com/kubernetes/community/blob/master/contributors/devel/flaky-tests.md#filing-issues-for-flaky-tests) an [open issue](https://github.com/openshift/origin/issues?q=is:issue+is:open) when you hit one in your PR.

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository. I understand the commands that are listed [here](https://go.k8s.io/bot-commands).
</details>
<!-- test report -->",True,False,124,41433.166666666664
openshift/origin/21978,2019-02-15T19:20:12Z,False,5c67125b6480fdd98b8d2050,"@sjenning: The following tests **failed**, say `/retest` to rerun them all:

Test name | Commit | Details | Rerun command
--- | --- | --- | ---
ci/prow/e2e-aws-image-ecosystem | 65ca1cfc46a59b071a8747ebe95098782729f66c | [link](https://openshift-gce-devel.appspot.com/build/origin-ci-test/pr-logs/pull/21978/pull-ci-openshift-origin-master-e2e-aws-image-ecosystem/123) | `/test e2e-aws-image-ecosystem`
ci/prow/e2e-conformance-k8s | 65ca1cfc46a59b071a8747ebe95098782729f66c | [link](https://openshift-gce-devel.appspot.com/build/origin-ci-test/pr-logs/pull/21978/pull-ci-openshift-origin-master-e2e-conformance-k8s/217) | `/test e2e-conformance-k8s`
ci/prow/e2e-aws | 65ca1cfc46a59b071a8747ebe95098782729f66c | [link](https://openshift-gce-devel.appspot.com/build/origin-ci-test/pr-logs/pull/21978/pull-ci-openshift-origin-master-e2e-aws/4091) | `/test e2e-aws`
ci/prow/e2e-aws-builds | 65ca1cfc46a59b071a8747ebe95098782729f66c | [link](https://openshift-gce-devel.appspot.com/build/origin-ci-test/pr-logs/pull/21978/pull-ci-openshift-origin-master-e2e-aws-builds/828) | `/test e2e-aws-builds`

[Full PR test history](https://openshift-gce-devel.appspot.com/pr/21978). [Your PR dashboard](https://openshift-gce-devel.appspot.com/pr/sjenning). Please help us cut down on flakes by [linking to](https://github.com/kubernetes/community/blob/master/contributors/devel/flaky-tests.md#filing-issues-for-flaky-tests) an [open issue](https://github.com/openshift/origin/issues?q=is:issue+is:open) when you hit one in your PR.

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository. I understand the commands that are listed [here](https://go.k8s.io/bot-commands).
</details>
<!-- test report -->",True,False,124,41433.166666666664
openshift/origin/21978,2019-02-16T23:08:20Z,False,5c68991a6480fdd9f1e828b3,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
openshift/origin/21978,2019-02-16T23:45:10Z,False,5c68a1ba6480fddb760aa21a,"@sjenning: The following tests **failed**, say `/retest` to rerun them all:

Test name | Commit | Details | Rerun command
--- | --- | --- | ---
ci/prow/e2e-aws-image-ecosystem | 65ca1cfc46a59b071a8747ebe95098782729f66c | [link](https://openshift-gce-devel.appspot.com/build/origin-ci-test/pr-logs/pull/21978/pull-ci-openshift-origin-master-e2e-aws-image-ecosystem/123) | `/test e2e-aws-image-ecosystem`
ci/prow/e2e-conformance-k8s | 65ca1cfc46a59b071a8747ebe95098782729f66c | [link](https://openshift-gce-devel.appspot.com/build/origin-ci-test/pr-logs/pull/21978/pull-ci-openshift-origin-master-e2e-conformance-k8s/217) | `/test e2e-conformance-k8s`
ci/prow/e2e-aws-builds | 65ca1cfc46a59b071a8747ebe95098782729f66c | [link](https://openshift-gce-devel.appspot.com/build/origin-ci-test/pr-logs/pull/21978/pull-ci-openshift-origin-master-e2e-aws-builds/828) | `/test e2e-aws-builds`
ci/prow/e2e-aws | 65ca1cfc46a59b071a8747ebe95098782729f66c | [link](https://openshift-gce-devel.appspot.com/build/origin-ci-test/pr-logs/pull/21978/pull-ci-openshift-origin-master-e2e-aws/4289) | `/test e2e-aws`

[Full PR test history](https://openshift-gce-devel.appspot.com/pr/21978). [Your PR dashboard](https://openshift-gce-devel.appspot.com/pr/sjenning). Please help us cut down on flakes by [linking to](https://github.com/kubernetes/community/blob/master/contributors/devel/flaky-tests.md#filing-issues-for-flaky-tests) an [open issue](https://github.com/openshift/origin/issues?q=is:issue+is:open) when you hit one in your PR.

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository. I understand the commands that are listed [here](https://go.k8s.io/bot-commands).
</details>
<!-- test report -->",True,False,124,41433.166666666664
openshift/origin/21978,2019-02-17T01:09:20Z,False,5c68b5746480fdd9f1e83770,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
openshift/origin/21978,2019-02-17T05:12:42Z,False,5c68ee7a6480fddf0c4a6d50,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
openshift/origin/21978,2019-02-17T07:12:35Z,False,5c690aab6480fdd99df51c54,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
openshift/origin/21978,2019-02-17T09:13:19Z,False,5c6926e96480fde236b5a35e,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
openshift/origin/21978,2019-02-17T13:15:26Z,False,5c695fa86480fdda45399cac,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
openshift/origin/21978,2019-02-17T15:16:20Z,False,5c697bf56480fdd9dc76c613,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
openshift/origin/21978,2019-02-17T17:17:20Z,False,5c6998596480fde05c06fa31,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
callstack_____react-native-paper_____485,2019-02-17T18:56:52Z,True,callstack_____react-native-paper_____485_____464494914,"Hey guys, I want to help merge this PR. Can I rebase from 'upstream' master or is that not needed?",True,True,55,342611.05
openshift/origin/21978,2019-02-17T19:18:18Z,False,5c69b4b46480fde09f33fcb6,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
openshift/origin/21978,2019-02-17T21:19:42Z,False,5c69d1296480fdd9c71d07b7,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
openshift/origin/21978,2019-02-17T23:21:00Z,False,5c69ed8f6480fdd99df59428,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
openshift/origin/21978,2019-02-18T01:21:24Z,False,5c6a09c96480fddd702379c9,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
openshift/origin/21978,2019-02-18T03:23:15Z,False,5c6a265f6480fdd9b27b060c,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
openshift/origin/21978,2019-02-18T05:25:03Z,False,5c6a44326480fddad1494eee,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
openshift/origin/21978,2019-02-18T07:24:20Z,False,5c6a5edf6480fdd9c71d5611,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
callstack_____react-native-paper_____485,2019-02-18T08:40:37Z,True,callstack_____react-native-paper_____485_____464637886,"Hey guys, I have made some changes to follow the new way of doing things compared to when the PR was first created. Part of this was to add the typescript typings here: `typings/components/Menu.d.ts`, this is my first time doing some typescript so would be cool if someone could have a look and give some feedback.",True,True,55,342611.05
openshift/origin/21978,2019-02-18T09:25:23Z,False,5c6a7b436480fddff0bea8d0,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
laurent22_____joplin_____1141,2019-02-18T09:37:10Z,True,laurent22_____joplin_____1141_____464657591,"> To move notebooks, I think it should be done directly in the sidebar, by drag and dropping them. What do you think?

Hmm, I'm not sure, how easy the gesture of clicking an entry, holding it, and dragging it to a folder a few pages below is.",True,True,8,129507.5
apache/incubator-dubbo/3500,2019-02-18T10:50:32Z,False,5c6a8f6c6480fde1fed611fa,"# [Codecov](https://codecov.io/gh/apache/incubator-dubbo/pull/3500?src=pr&el=h1) Report
> Merging [#3500](https://codecov.io/gh/apache/incubator-dubbo/pull/3500?src=pr&el=desc) into [master](https://codecov.io/gh/apache/incubator-dubbo/commit/9031a4c20455ba16a63233f10783a55915afcd9b?src=pr&el=desc) will **increase** coverage by `0.01%`.
> The diff coverage is `59.24%`.

[![Impacted file tree graph](https://codecov.io/gh/apache/incubator-dubbo/pull/3500/graphs/tree.svg?width=650&token=VnEIkiFQT0&height=150&src=pr)](https://codecov.io/gh/apache/incubator-dubbo/pull/3500?src=pr&el=tree)

```diff
@@             Coverage Diff              @@
##             master    #3500      +/-   ##
============================================
+ Coverage     64.06%   64.07%   +0.01%     
  Complexity       71       71              
============================================
  Files           664      665       +1     
  Lines         28604    28790     +186     
  Branches       4768     4785      +17     
============================================
+ Hits          18324    18448     +124     
- Misses         8066     8106      +40     
- Partials       2214     2236      +22
```


| [Impacted Files](https://codecov.io/gh/apache/incubator-dubbo/pull/3500?src=pr&el=tree) | Coverage Δ | Complexity Δ | |
|---|---|---|---|
| [...org/apache/dubbo/registry/redis/RedisRegistry.java](https://codecov.io/gh/apache/incubator-dubbo/pull/3500/diff?src=pr&el=tree#diff-ZHViYm8tcmVnaXN0cnkvZHViYm8tcmVnaXN0cnktcmVkaXMvc3JjL21haW4vamF2YS9vcmcvYXBhY2hlL2R1YmJvL3JlZ2lzdHJ5L3JlZGlzL1JlZGlzUmVnaXN0cnkuamF2YQ==) | `38.81% <0%> (-0.23%)` | `0 <0> (ø)` | |
| [...bo/metadata/integration/MetadataReportService.java](https://codecov.io/gh/apache/incubator-dubbo/pull/3500/diff?src=pr&el=tree#diff-ZHViYm8tbWV0YWRhdGEtcmVwb3J0L2R1YmJvLW1ldGFkYXRhLXJlcG9ydC1hcGkvc3JjL21haW4vamF2YS9vcmcvYXBhY2hlL2R1YmJvL21ldGFkYXRhL2ludGVncmF0aW9uL01ldGFkYXRhUmVwb3J0U2VydmljZS5qYXZh) | `78.04% <0%> (-6.17%)` | `0 <0> (ø)` | |
| [...pache/dubbo/monitor/dubbo/DubboMonitorFactory.java](https://codecov.io/gh/apache/incubator-dubbo/pull/3500/diff?src=pr&el=tree#diff-ZHViYm8tbW9uaXRvci9kdWJiby1tb25pdG9yLWRlZmF1bHQvc3JjL21haW4vamF2YS9vcmcvYXBhY2hlL2R1YmJvL21vbml0b3IvZHViYm8vRHViYm9Nb25pdG9yRmFjdG9yeS5qYXZh) | `100% <100%> (ø)` | `0 <0> (ø)` | :arrow_down: |
| [...e/dubbo/registry/integration/RegistryProtocol.java](https://codecov.io/gh/apache/incubator-dubbo/pull/3500/diff?src=pr&el=tree#diff-ZHViYm8tcmVnaXN0cnkvZHViYm8tcmVnaXN0cnktYXBpL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9kdWJiby9yZWdpc3RyeS9pbnRlZ3JhdGlvbi9SZWdpc3RyeVByb3RvY29sLmphdmE=) | `83.07% <100%> (+0.19%)` | `0 <0> (ø)` | :arrow_down: |
| [...apache/dubbo/rpc/protocol/dubbo/DubboProtocol.java](https://codecov.io/gh/apache/incubator-dubbo/pull/3500/diff?src=pr&el=tree#diff-ZHViYm8tcnBjL2R1YmJvLXJwYy1kdWJiby9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvZHViYm8vcnBjL3Byb3RvY29sL2R1YmJvL0R1YmJvUHJvdG9jb2wuamF2YQ==) | `65.78% <100%> (+0.25%)` | `0 <0> (ø)` | :arrow_down: |
| [...he/dubbo/registry/zookeeper/ZookeeperRegistry.java](https://codecov.io/gh/apache/incubator-dubbo/pull/3500/diff?src=pr&el=tree#diff-ZHViYm8tcmVnaXN0cnkvZHViYm8tcmVnaXN0cnktem9va2VlcGVyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9kdWJiby9yZWdpc3RyeS96b29rZWVwZXIvWm9va2VlcGVyUmVnaXN0cnkuamF2YQ==) | `67.37% <100%> (+0.7%)` | `0 <0> (ø)` | :arrow_down: |
| [...c/protocol/dubbo/ReferenceCountExchangeClient.java](https://codecov.io/gh/apache/incubator-dubbo/pull/3500/diff?src=pr&el=tree#diff-ZHViYm8tcnBjL2R1YmJvLXJwYy1kdWJiby9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvZHViYm8vcnBjL3Byb3RvY29sL2R1YmJvL1JlZmVyZW5jZUNvdW50RXhjaGFuZ2VDbGllbnQuamF2YQ==) | `68.51% <100%> (+1.21%)` | `0 <0> (ø)` | :arrow_down: |
| [...che/dubbo/registry/dubbo/DubboRegistryFactory.java](https://codecov.io/gh/apache/incubator-dubbo/pull/3500/diff?src=pr&el=tree#diff-ZHViYm8tcmVnaXN0cnkvZHViYm8tcmVnaXN0cnktZGVmYXVsdC9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvZHViYm8vcmVnaXN0cnkvZHViYm8vRHViYm9SZWdpc3RyeUZhY3RvcnkuamF2YQ==) | `89.74% <100%> (+0.55%)` | `0 <0> (ø)` | :arrow_down: |
| [...in/java/org/apache/dubbo/config/ServiceConfig.java](https://codecov.io/gh/apache/incubator-dubbo/pull/3500/diff?src=pr&el=tree#diff-ZHViYm8tY29uZmlnL2R1YmJvLWNvbmZpZy1hcGkvc3JjL21haW4vamF2YS9vcmcvYXBhY2hlL2R1YmJvL2NvbmZpZy9TZXJ2aWNlQ29uZmlnLmphdmE=) | `55.86% <100%> (+0.09%)` | `0 <0> (ø)` | :arrow_down: |
| [...ubbo/registry/support/AbstractRegistryFactory.java](https://codecov.io/gh/apache/incubator-dubbo/pull/3500/diff?src=pr&el=tree#diff-ZHViYm8tcmVnaXN0cnkvZHViYm8tcmVnaXN0cnktYXBpL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9kdWJiby9yZWdpc3RyeS9zdXBwb3J0L0Fic3RyYWN0UmVnaXN0cnlGYWN0b3J5LmphdmE=) | `87.87% <100%> (+0.78%)` | `0 <0> (ø)` | :arrow_down: |
| ... and [22 more](https://codecov.io/gh/apache/incubator-dubbo/pull/3500/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/apache/incubator-dubbo/pull/3500?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/apache/incubator-dubbo/pull/3500?src=pr&el=footer). Last update [9031a4c...39394bf](https://codecov.io/gh/apache/incubator-dubbo/pull/3500?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",True,False,13,20122.733333333334
openshift/origin/21978,2019-02-18T11:26:15Z,False,5c6a978f6480fdd99df5f7d9,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
callstack_____react-native-paper_____485,2019-02-18T11:37:40Z,True,callstack_____react-native-paper_____485_____464699201,"Hey @waquidvp thanks for coming back to this. I guess you work together with @iyadthayyil ?

Would you mind adding: Screenshots and code for docs? You can see how to do it from other components.

I am also wondering if we could animate scale instead animating `height` and `width`, that would allow use to use `useNativeDriver`. However we can merge first this and then focus on that.",True,True,55,342611.05
openshift/origin/21978,2019-02-18T13:27:12Z,False,5c6ab3e76480fdd9b27b5614,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
openshift/origin/21978,2019-02-18T15:28:58Z,False,5c6ad0816480fde2c0ed9d00,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
Qiskit/qiskit-tutorials/408,2019-02-18T17:21:38Z,False,5c6aeadd6480fde0d8a1a854,"@chunfuchen Could you please review to make sure Aqua imports are correct?
@pistoia Could you please review to make sure essential chemistry concepts are there, and we're fully using Aqua's functionality?
@jaygambetta Could you please review for overall content/narrative/flow? I'll set up a time to go over it with you.",True,False,21,108585.85
openshift/origin/21978,2019-02-18T17:29:28Z,False,5c6aecb96480fddff0bee51d,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
callstack_____react-native-paper_____485,2019-02-18T20:47:46Z,True,callstack_____react-native-paper_____485_____464872554,There were already some screenshots and some code examples. They just weren't in the right place and so wasn't showing up in the generated docs. I have moved it to the right place and the docs look ok now.,True,True,55,342611.05
callstack_____react-native-paper_____485,2019-02-18T22:02:49Z,True,callstack_____react-native-paper_____485_____257837330,I am wondering if we should call this prop`button`. As far as I know these menus can appear in different kind of actions (like in forms). Should we call it `anchor` as is more generic and it is what they use in the docs? Does it make sense?,True,True,55,342611.05
Qiskit/qiskit-tutorials/408,2019-02-19T11:00:48Z,False,5c6be31d6480fde147933b78,@Travis-S and @ss2165 this looks good there is a lot of work put into this tutorial. ,True,False,21,108585.85
Qiskit/qiskit-tutorials/408,2019-02-19T15:24:23Z,False,5c6c20eb6480fddff0bf7297,"@nonhermitian @chriseclectic In this tutorial, we're using a bit of a kludge to get around issues of Aer on Mac. (See In [32].) Is this acceptable, for now?",True,False,21,108585.85
Qiskit/qiskit-tutorials/408,2019-02-19T15:40:59Z,False,5c6c24de6480fde05c087eb4,So it looks like the issue with Aer on OSX is fixed.  It is just awaiting a few more tests.  I am fine with the current work around.  It can easily be removed once the fix is out.,True,False,21,108585.85
callstack_____react-native-paper_____485,2019-02-19T21:35:34Z,True,callstack_____react-native-paper_____485_____465320087,"So I finished the changing all the things that @kpsroka mentioned, now waiting on @iyadthayyil to make a decision on the `button` to `anchor` change.",True,True,55,342611.05
rust-lang/rust/58601,2019-02-20T17:13:32Z,False,5c6d8bba6480fde0d8a31e18,cc @alexcrichton ,True,False,11,912.4333333333333
rust-lang/rust/58601,2019-02-20T17:18:45Z,False,5c6d8e1d6480fdd9b27d062a,"```suggestion
                            .map_err(LoadTargetError::Other)?;
```",True,False,11,912.4333333333333
rust-lang/rust/58601,2019-02-20T17:19:24Z,False,5c6d8e3a6480fddfaeef2fa3,"```suggestion
                            .map_err(LoadTargetError::Other)?;
```",True,False,11,912.4333333333333
rust-lang/rust/58601,2019-02-20T17:21:50Z,False,5c6d8e2e6480fddca8579d67,"I'm not so sure about these load errors, it seems to me that they are a compiler bug. Either we panic on them and test them, or we allow the user to work around them by specifying a json file. I'd prefer the former.",True,False,11,912.4333333333333
rust-lang/rust/58601,2019-02-20T17:24:18Z,False,5c6d8e746480fdda88b959b0,"
The job `x86_64-gnu-llvm-6.0` of your PR [failed on Travis](https://travis-ci.com/rust-lang/rust/jobs/179236572) ([raw log](https://api.travis-ci.com/v3/job/179236572/log.txt)). Through arcane magic we have determined that the following fragments from the build log may contain information about the problem.

<details><summary><i>Click to expand the log.</i></summary>

```plain
travis_time:end:2bc5ddfd:start=1550682900316794114,finish=1550682901272244157,duration=955450043
$ git checkout -qf FETCH_HEAD
travis_fold:end:git.checkout

Encrypted environment variables have been removed for security reasons.
See https://docs.travis-ci.com/user/pull-requests/#pull-requests-and-security-restrictions
$ export SCCACHE_BUCKET=rust-lang-ci-sccache2
$ export SCCACHE_REGION=us-west-1
Setting environment variables from .travis.yml
$ export IMAGE=x86_64-gnu-llvm-6.0
---
[00:08:50]    Compiling rustc-rayon v0.1.1
[00:08:54]    Compiling tempfile v3.0.5
[00:08:54]    Compiling rustc_data_structures v0.0.0 (/checkout/src/librustc_data_structures)
[00:08:56]    Compiling arena v0.0.0 (/checkout/src/libarena)
[00:08:56] error: expected one of `,`, `.`, `?`, `}`, or an operator, found `;`
[00:08:56]      |
[00:08:56]      |
[00:08:56] 1188 |                     Ok(t) => return Ok(t);
[00:08:56]      |                           --             ^ expected one of `,`, `.`, `?`, `}`, or an operator here
[00:08:56]      |                           |
[00:08:56]      |                           while parsing the `match` arm starting here
[00:08:57]    Compiling syntax_pos v0.0.0 (/checkout/src/libsyntax_pos)
[00:08:58] error: unreachable statement
[00:08:58]     --> src/librustc_target/spec/mod.rs:1194:17
[00:08:58]      |
[00:08:58]      |
[00:08:58] 1194 | /                 let path = {
[00:08:58] 1195 | |                     let mut target = target_triple.to_string();
[00:08:58] 1196 | |                     target.push_str("".json"");
[00:08:58] 1197 | |                     PathBuf::from(target)
[00:08:58]      | |__________________^
[00:08:58]      |
[00:08:58]      = note: `-D unreachable-code` implied by `-D warnings`
[00:08:58] 
---
[00:09:01] command did not execute successfully: ""/checkout/obj/build/x86_64-unknown-linux-gnu/stage0/bin/cargo"" ""build"" ""--target"" ""x86_64-unknown-linux-gnu"" ""-j"" ""4"" ""--release"" ""--locked"" ""--color"" ""always"" ""--features"" """" ""--manifest-path"" ""/checkout/src/rustc/Cargo.toml"" ""--message-format"" ""json""
[00:09:01] expected success, got: exit code: 101
[00:09:01] failed to run: /checkout/obj/build/bootstrap/debug/bootstrap build
[00:09:01] Build completed unsuccessfully in 0:02:05
[00:09:01] make: *** [all] Error 1
[00:09:01] Makefile:18: recipe for target 'all' failed
The command ""stamp sh -x -c ""$RUN_SCRIPT"""" exited with 2.
travis_time:start:2424f1ca
$ date && (curl -fs --head https://google.com | grep ^Date: | sed 's/Date: //g' || true)
Wed Feb 20 17:24:13 UTC 2019
---
travis_time:end:3677af2a:start=1550683453798676427,finish=1550683453803221705,duration=4545278
travis_fold:end:after_failure.3
travis_fold:start:after_failure.4
travis_time:start:107f830b
$ ln -s . checkout && for CORE in obj/cores/core.*; do EXE=$(echo $CORE | sed 's|obj/cores/core\.[0-9]*\.!checkout!\(.*\)|\1|;y|!|/|'); if [ -f ""$EXE"" ]; then printf travis_fold"":start:crashlog\n\033[31;1m%s\033[0m\n"" ""$CORE""; gdb --batch -q -c ""$CORE"" ""$EXE"" -iex 'set auto-load off' -iex 'dir src/' -iex 'set sysroot .' -ex bt -ex q; echo travis_fold"":""end:crashlog; fi; done || true
travis_fold:end:after_failure.4
travis_fold:start:after_failure.5
travis_time:start:05346fa8
travis_time:start:05346fa8
$ cat ./obj/build/x86_64-unknown-linux-gnu/native/asan/build/lib/asan/clang_rt.asan-dynamic-i386.vers || true
cat: ./obj/build/x86_64-unknown-linux-gnu/native/asan/build/lib/asan/clang_rt.asan-dynamic-i386.vers: No such file or directory
travis_fold:end:after_failure.5
travis_fold:start:after_failure.6
travis_time:start:0c1420d4
$ dmesg | grep -i kill
```

</details><p></p>

[I'm a bot](https://github.com/rust-ops/rust-log-analyzer)! I can only do what humans tell me to, so if this was not helpful or you have suggestions for improvements, please ping or otherwise contact **`@TimNN`**. ([Feature Requests](https://github.com/rust-ops/rust-log-analyzer/issues?q=is%3Aopen+is%3Aissue+label%3Afeature-request))
        ",True,False,11,912.4333333333333
webpack_____webpack-dev-server_____1664,2019-02-20T17:52:48Z,True,webpack_____webpack-dev-server_____1664_____465685759,"@evilebottnawi as I understand those tests are checking that the socket and the server are available, but it is not testing the client code that will be executed on the browser's end (more precisely testing the code in https://github.com/webpack/webpack-dev-server/blob/master/client-src/default/index.js).

Any suggestions on how to test it without adding the overhead of webdriver?

> https://github.com/webpack/webpack-dev-server/blob/master/test/Socket.test.js

",True,True,39,88465.16666666667
webpack_____webpack-dev-server_____1664,2019-02-20T17:54:55Z,True,webpack_____webpack-dev-server_____1664_____465686490,"/cc @rlamana oh, need thinks how we can tests client, maybe we need setup something to e2e testing
/cc @hiroppy What do you think?",True,True,39,88465.16666666667
rust-lang/rust/58601,2019-02-20T18:22:23Z,False,5c6d9c196480fdd9f1eb02cc,"> I'm not so sure about these load errors, it seems to me that they are a compiler bug.

When you target, say, an `ios` target, creating the Target executes code like this: https://github.com/rust-lang/rust/blob/master/src/librustc_target/spec/apple_ios_base.rs#L29

Which can fail, say on Linux, if that tool is not available. 

So in that case, load target failed, for a reason that AFAICT isn't a compiler bug, but an user bug: its running the compiler without the appropriate tools in the path.",True,False,11,912.4333333333333
rust-lang/rust/58601,2019-02-20T18:31:37Z,False,5c6d9e3c6480fde18d82aa6d,"I don't know if reporting those errors breaks somebody's workflow. E.g. if they are relying on the builtin target failing for external reasons to override it with a json file. But that seems very brittle, and that use case is better addressed with a `--target-file=file.json` (or just `--target=file.json`) CLI option that explicitly requests obtaining the target from a json file. 

",True,False,11,912.4333333333333
rust-lang/rust/58601,2019-02-20T18:33:02Z,False,5c6d9e996480fddc55331e91,"
The job `x86_64-gnu-llvm-6.0` of your PR [failed on Travis](https://travis-ci.com/rust-lang/rust/jobs/179255471) ([raw log](https://api.travis-ci.com/v3/job/179255471/log.txt)). Through arcane magic we have determined that the following fragments from the build log may contain information about the problem.

<details><summary><i>Click to expand the log.</i></summary>

```plain
travis_time:end:0da2b216:start=1550686929924600452,finish=1550686930819087585,duration=894487133
$ git checkout -qf FETCH_HEAD
travis_fold:end:git.checkout

Encrypted environment variables have been removed for security reasons.
See https://docs.travis-ci.com/user/pull-requests/#pull-requests-and-security-restrictions
$ export SCCACHE_BUCKET=rust-lang-ci-sccache2
$ export SCCACHE_REGION=us-west-1
Setting environment variables from .travis.yml
$ export IMAGE=x86_64-gnu-llvm-6.0
---
[00:10:24]    Compiling rustc-rayon v0.1.1
[00:10:27]    Compiling rustc_data_structures v0.0.0 (/checkout/src/librustc_data_structures)
[00:10:27]    Compiling tempfile v3.0.5
[00:10:30]    Compiling arena v0.0.0 (/checkout/src/libarena)
[00:10:30] error: expected one of `,`, `.`, `?`, `}`, or an operator, found `;`
[00:10:30]      |
[00:10:30]      |
[00:10:30] 1188 |                     Ok(t) => return Ok(t);
[00:10:30]      |                           --             ^ expected one of `,`, `.`, `?`, `}`, or an operator here
[00:10:30]      |                           |
[00:10:30]      |                           while parsing the `match` arm starting here
[00:10:30]    Compiling syntax_pos v0.0.0 (/checkout/src/libsyntax_pos)
[00:10:31] error: unreachable statement
[00:10:31]     --> src/librustc_target/spec/mod.rs:1194:17
[00:10:31]      |
[00:10:31]      |
[00:10:31] 1194 | /                 let path = {
[00:10:31] 1195 | |                     let mut target = target_triple.to_string();
[00:10:31] 1196 | |                     target.push_str("".json"");
[00:10:31] 1197 | |                     PathBuf::from(target)
[00:10:31]      | |__________________^
[00:10:31]      |
[00:10:31]      = note: `-D unreachable-code` implied by `-D warnings`
[00:10:31] 
---
[00:10:34] command did not execute successfully: ""/checkout/obj/build/x86_64-unknown-linux-gnu/stage0/bin/cargo"" ""build"" ""--target"" ""x86_64-unknown-linux-gnu"" ""-j"" ""4"" ""--release"" ""--locked"" ""--color"" ""always"" ""--features"" """" ""--manifest-path"" ""/checkout/src/rustc/Cargo.toml"" ""--message-format"" ""json""
[00:10:34] expected success, got: exit code: 101
[00:10:34] failed to run: /checkout/obj/build/bootstrap/debug/bootstrap build
[00:10:34] Build completed unsuccessfully in 0:02:06
[00:10:34] make: *** [all] Error 1
[00:10:34] Makefile:18: recipe for target 'all' failed
The command ""stamp sh -x -c ""$RUN_SCRIPT"""" exited with 2.
travis_time:start:05a93c0c
$ date && (curl -fs --head https://google.com | grep ^Date: | sed 's/Date: //g' || true)
Wed Feb 20 18:32:56 UTC 2019
---
travis_time:end:074f3d04:start=1550687577217707182,finish=1550687577222406625,duration=4699443
travis_fold:end:after_failure.3
travis_fold:start:after_failure.4
travis_time:start:04b7ea96
$ ln -s . checkout && for CORE in obj/cores/core.*; do EXE=$(echo $CORE | sed 's|obj/cores/core\.[0-9]*\.!checkout!\(.*\)|\1|;y|!|/|'); if [ -f ""$EXE"" ]; then printf travis_fold"":start:crashlog\n\033[31;1m%s\033[0m\n"" ""$CORE""; gdb --batch -q -c ""$CORE"" ""$EXE"" -iex 'set auto-load off' -iex 'dir src/' -iex 'set sysroot .' -ex bt -ex q; echo travis_fold"":""end:crashlog; fi; done || true
travis_fold:end:after_failure.4
travis_fold:start:after_failure.5
travis_time:start:162fe958
travis_time:start:162fe958
$ cat ./obj/build/x86_64-unknown-linux-gnu/native/asan/build/lib/asan/clang_rt.asan-dynamic-i386.vers || true
cat: ./obj/build/x86_64-unknown-linux-gnu/native/asan/build/lib/asan/clang_rt.asan-dynamic-i386.vers: No such file or directory
travis_fold:end:after_failure.5
travis_fold:start:after_failure.6
travis_time:start:053245f2
$ dmesg | grep -i kill
```

</details><p></p>

[I'm a bot](https://github.com/rust-ops/rust-log-analyzer)! I can only do what humans tell me to, so if this was not helpful or you have suggestions for improvements, please ping or otherwise contact **`@TimNN`**. ([Feature Requests](https://github.com/rust-ops/rust-log-analyzer/issues?q=is%3Aopen+is%3Aissue+label%3Afeature-request))
        ",True,False,11,912.4333333333333
callstack_____react-native-paper_____485,2019-02-20T21:36:57Z,True,callstack_____react-native-paper_____485_____465764255,"So changed `button` to `anchor`, is there anything else we need to fix or do before merging this?",True,True,55,342611.05
callstack_____react-native-paper_____485,2019-02-20T23:19:06Z,True,callstack_____react-native-paper_____485_____258719459,Should be `() => void`.,True,True,55,342611.05
callstack_____react-native-paper_____485,2019-02-20T23:19:20Z,True,callstack_____react-native-paper_____485_____258719515,Should be `() => void`.,True,True,55,342611.05
callstack_____react-native-paper_____485,2019-02-21T06:36:14Z,True,callstack_____react-native-paper_____485_____258795334,Don't use `Modal` from `react-native`. Use `Portal` from `react-native-paper`,True,True,55,342611.05
callstack_____react-native-paper_____485,2019-02-21T06:38:04Z,True,callstack_____react-native-paper_____485_____258795668,Use `StyleProp<ViewStyle>`,True,True,55,342611.05
callstack_____react-native-paper_____485,2019-02-21T06:39:03Z,True,callstack_____react-native-paper_____485_____258795826,Is the wrapper view around anchor necessary? feels like this `onLayout` could be placed on the parent view as well,True,True,55,342611.05
callstack_____react-native-paper_____485,2019-02-21T06:40:08Z,True,callstack_____react-native-paper_____485_____258796036,"Also, can we measure the layout when we first need to show the menu instead of mount? Will be better for perf.",True,True,55,342611.05
callstack_____react-native-paper_____485,2019-02-21T06:44:58Z,True,callstack_____react-native-paper_____485_____258796905,Can you add a note on where you got these numbers? Doesn't any existing easing preset in RN match these?,True,True,55,342611.05
callstack_____react-native-paper_____485,2019-02-21T06:45:21Z,True,callstack_____react-native-paper_____485_____258796968,Can you add a comment on what this is used for?,True,True,55,342611.05
callstack_____react-native-paper_____485,2019-02-21T06:46:24Z,True,callstack_____react-native-paper_____485_____258797146,Should be `?View`,True,True,55,342611.05
rust-lang/rust/58601,2019-02-21T08:25:05Z,False,5c6e61b36480fdda06f913d4,that makes sense,True,False,11,912.4333333333333
rust-lang/rust/58601,2019-02-21T08:25:57Z,False,5c6e62406480fdd98b917032,@bors r+ rollup,True,False,11,912.4333333333333
rust-lang/rust/58601,2019-02-21T08:25:58Z,False,5c6e62636480fddad14ac2f2,":pushpin: Commit 103ed0c347062967b8b5fe76a02f945da14aac72 has been approved by `oli-obk`

<!-- @bors r=oli-obk 103ed0c347062967b8b5fe76a02f945da14aac72 -->",True,False,11,912.4333333333333
hibernate/hibernate-validator/1012,2019-02-21T10:23:27Z,False,5c6e7d586480fddd7025e94f,"If we are going to take that approach (resolving the name at bootstrap time), I am going to need some more directions.

I am able to resolve the name in `internal.metadata.provider.AnnotationMetaDataProvider` and add it to `internal.properties.javabean.JavaBeanField` because this is the place where it's created.

What I am missing is how to propagate this meta-data, stored in `internal.properties.Property` to `javax.validation.metadata.ConstraintDescriptor.ConstraintViolation` that is used at the end, by the client?",True,False,72,112490.03333333334
openshift/origin/21978,2019-02-21T12:08:55Z,False,5c6e960b6480fddc5533ba6e,/retest,True,False,124,41433.166666666664
Bradniedt/Range_society/92,2019-02-21T14:03:59Z,False,5c6eb1066480fddd9ec1bf8f,i'm curious to know more about the html safe usage!,True,False,2,109.95
Bradniedt/Range_society/92,2019-02-21T15:53:56Z,False,5c6ed1576480fdda88ba1cd8,I like this setup and logic! I too wonder about the html_safe - just want to know it's use.,True,False,2,109.95
hibernate/hibernate-validator/1012,2019-02-21T21:08:22Z,False,5c6f14826480fde10d70c5ba,"There's 3 places where JavaBean properties are created - annotation provider (as you mentioned) then there's xml and programmatic API providers. Last two are using `JavaBeanHelper` to find/create instances of `Property`. 

> What I am missing is how to propagate this meta-data, stored in `internal.properties.Property` to `javax.validation.metadata.ConstraintDescriptor.ConstraintViolation` that is used at the end, by the client?

I think we actually don't need it that far. If we have a property-path-node-name inside of a property we should be able to use it right away for construction of paths. So for example `AbstractPropertyConstraintLocation#appendTo(ExecutableParameterNameProvider, PathImpl)` would change from current:
```java
	@Override
	public void appendTo(ExecutableParameterNameProvider parameterNameProvider, PathImpl path) {
		path.addPropertyNode( property.getPropertyName() );
	}
```
to something like (you probably can come up with a better getter name):
```java
	@Override
	public void appendTo(ExecutableParameterNameProvider parameterNameProvider, PathImpl path) {
		path.addPropertyNode( property.getPropertyNodePathName() );
	}
```
where you can use the resolved node name. The same would apply to `AbstractPropertyCascadable`. And, I think, the last place where the property can be appended to a path is in `ConstraintViolationBuilderImpl`. But I guess we shouldn't be worried about this one as it's up to the users to put what they want when using this builder.

This way when a `ConstraintViolation` is created you would get a `Path propertyPath` that is already using all expected node names.

Is this helpful ? Or did I misinterpreted the problem ? 
",True,False,72,112490.03333333334
callstack_____react-native-paper_____485,2019-02-21T22:35:33Z,True,callstack_____react-native-paper_____485_____259145630,"The 'Standard easing' section of this page states that numbers that we are using, and from what I have looked at, there isn't any identical ones in RN: https://material.io/design/motion/speed.html#easing",True,True,55,342611.05
callstack_____react-native-paper_____485,2019-02-21T22:48:52Z,True,callstack_____react-native-paper_____485_____259149357,Done.,True,True,55,342611.05
Qiskit/qiskit-tutorials/408,2019-02-22T14:39:26Z,False,5c700ad66480fddff0c1e4f8,"@ss2165 @Travis-S I am not able to update the branch to align with the master; therefore, I can not merge the PR. Do you mind rebasing your PR to the master and then we can merge it? Thanks.",True,False,21,108585.85
kubernetes/kubernetes/71366,2019-02-24T03:42:30Z,False,5c7213d86480fdda1c90ad15,"Issues go stale after 90d of inactivity.
Mark the issue as fresh with `/remove-lifecycle stale`.
Stale issues rot after an additional 30d of inactivity and eventually close.

If this issue is safe to close now please do so with `/close`.

Send feedback to sig-testing, kubernetes/test-infra and/or [fejta](https://github.com/fejta).
/lifecycle stale",True,False,10,220183.41666666666
laurent22_____joplin_____1141,2019-02-24T10:50:23Z,True,laurent22_____joplin_____1141_____466762804,"Yes maybe it's too complicated with drag and drop. To move notes to a notebook, there's a dropdown list. Can't we re-use that same dropdown list to move notebooks too?",True,True,8,129507.5
tokio-rs/tokio/928,2019-02-24T17:56:51Z,False,5c72dc156480fde2c0f2f4ab,@rylev Thanks for getting this started! I'll be poking around here too. You are obviously further along than me (https://github.com/tokio-rs/tokio/pull/926) :P.,True,False,7,2827.5666666666666
tokio-rs/tokio/928,2019-02-24T17:57:30Z,False,5c72e49c6480fde0d8a70e42,I also found that [diesel](https://github.com/diesel-rs/diesel) has a pretty comprehensive pipelines setup.,True,False,7,2827.5666666666666
hibernate/hibernate-validator/1012,2019-02-24T22:21:42Z,False,5c731a2c6480fddd9ec4f221,"Yes, it is, that was exactly what I was missing. Ok, I will try with this new approach and update the PR soon",True,False,72,112490.03333333334
apache/incubator-dubbo/3500,2019-02-25T01:53:02Z,False,5c734bae6480fde10d740153,Can any one of the admins verify this PR? @chickenlj or any other admins?,True,False,13,20122.733333333334
tokio-rs/tokio/928,2019-02-25T08:43:40Z,False,5c73abef6480fddc55379364,@carllerche I think we can close this and just use it as a reference for your work on #926. Let me know how I can help push #926 further! 😄 ,True,False,7,2827.5666666666666
Qiskit/qiskit-tutorials/408,2019-02-25T11:12:04Z,False,5c73cecf6480fde18d864d28,"@chunfuchen  I just merged from the master, I assume that will do the trick?",True,False,21,108585.85
tokio-rs/tokio/928,2019-02-25T16:02:38Z,False,5c7412d36480fdd98b95b61e,"@carllerche 👍 I'll let you let me know what exactly is missing and will work on the stuff you need help with (so we don't both end up doing the same thing). I _might_ have permission, but I'll let you know if I don't.",True,False,7,2827.5666666666666
tokio-rs/tokio/928,2019-02-25T16:28:17Z,False,5c7418dd6480fde2c0f3e2de,@rylev You want to try adding the check only cross compilation bit: https://github.com/tokio-rs/tokio/blob/master/.travis.yml#L104-L106?,True,False,7,2827.5666666666666
apache/incubator-dubbo/3500,2019-02-26T02:02:45Z,False,5c749f806480fddec80e54a5,"I think providing a method like`URLBuilder.from(url)` would be better than using a constructor directly.

What do you think?",True,False,13,20122.733333333334
apache/incubator-dubbo/3500,2019-02-26T02:06:32Z,False,5c74a07b6480fde09f3b286d,Does these two reading methods `hasParameter` `hasParameter` necessary for a Builder?,True,False,13,20122.733333333334
apache/incubator-dubbo/3500,2019-02-26T02:08:36Z,False,5c74a0dd6480fde0d8a85c99,All look good to me except for these above two minor problems.,True,False,13,20122.733333333334
apache/incubator-dubbo/3500,2019-02-26T02:31:15Z,False,5c74a6266480fde286465077,"The two methods are used inside the builder, and I just made them public because I think it's necessary because there are cases where we want to write code like this:
```java
URLBuilder builder = ...;
if (builder.hasParameter(""serverSideProp"")) {
    builder.addParameter(""someServerSideProp1"", v2);
    builder.addParameter(""someServerSideProp2"", v3);
}
```
without these methods we have to (again) create `URL`s just for calling the methods, what do you think",True,False,13,20122.733333333334
apache/incubator-dubbo/3500,2019-02-26T02:35:53Z,False,5c74a7406480fddc24d3949a,updated as requested,True,False,13,20122.733333333334
weseek/growi/838,2019-02-26T07:41:50Z,False,5c74f1706480fddbdfe7ebe3,このメソッドも不要。普通に save を使えばいいと思う。,True,False,14,10.3
weseek/growi/838,2019-02-26T07:43:10Z,False,5c74f16c6480fdd93a96d2f5,スキーマ定義はOK,True,False,14,10.3
weseek/growi/838,2019-02-26T07:43:51Z,False,5c74f16d6480fdd98b964d28,module.exports はOK,True,False,14,10.3
weseek/growi/838,2019-02-26T07:44:53Z,False,5c74f1726480fde147997f8c,static メソッドは全て async/await で実装し直してください,True,False,14,10.3
weseek/growi/838,2019-02-26T07:45:43Z,False,5c74f16c6480fddb76139bcc,このメソッドは不要。mongoose 標準の find を使えば良い。,True,False,14,10.3
weseek/growi/838,2019-02-26T07:47:04Z,False,5c74f16d6480fdde5ee96453,"find して map でフィルタするのではなく、最初から select を使う

https://mongoosejs.com/docs/api.html#query_Query-select",True,False,14,10.3
weseek/growi/838,2019-02-26T07:47:20Z,False,5c74f1796480fde1fedd0489,"find して map でフィルタするのではなく、最初から select を使う

https://mongoosejs.com/docs/api.html#query_Query-select",True,False,14,10.3
weseek/growi/838,2019-02-26T07:49:14Z,False,5c74f16c6480fddad14db325,めちゃくちゃ読みにくいので async/await で再実装して,True,False,14,10.3
weseek/growi/838,2019-02-26T07:50:06Z,False,5c74f1716480fde2c0f47b87,あと、モデルの責務にした方がいいことを route の中でやっている気がするので、口頭で何をやりたいのか相談してほしい,True,False,14,10.3
weseek/growi/838,2019-02-26T07:50:38Z,False,5c74f16d6480fdda1c92d9b7,このメソッド不要,True,False,14,10.3
weseek/growi/838,2019-02-26T07:50:42Z,False,5c74f17d6480fdd9dc7f4de8,このメソッド不要,True,False,14,10.3
weseek/growi/838,2019-02-26T07:50:46Z,False,5c74f1c36480fdd99dfccc99,このメソッド不要,True,False,14,10.3
weseek/growi/838,2019-02-26T07:51:48Z,False,5c74f1816480fdd95c6c8d4e,"page-tag-relation.js のように、クラスを定義してください。
あと不要なメソッドをわざわざ実装しているので、mongoose の API docs を常に確認して、車輪の再開発をしないように。",True,False,14,10.3
weseek/growi/838,2019-02-26T07:52:08Z,False,5c74f9506480fde05c0e92fe,このメソッドもおそらく不要。(route でどこまでやるかによるけど),True,False,14,10.3
tokio-rs/tokio/928,2019-02-26T10:07:00Z,False,5c7510fd6480fdd971f7d69d,@carllerche yea sounds great - Will do! ,True,False,7,2827.5666666666666
apache/incubator-dubbo/3500,2019-02-26T11:10:51Z,False,5c75204a6480fde1fedd1ee4,This issue i have also found when i worked on another PR. You exactly do what i want to. So i think it's a good improvement.,True,False,13,20122.733333333334
openshift/origin/21978,2019-02-26T15:10:05Z,False,5c75582f6480fddbdfe82b63,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
tokio-rs/tokio/928,2019-02-26T17:04:25Z,False,5c7572cb6480fddec80ec322,@johnterickson FYI ^^,True,False,7,2827.5666666666666
openshift/origin/21978,2019-02-26T17:11:23Z,False,5c7574756480fdd98b9695a7,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
jorgebucaran_____hyperapp_____811,2019-02-26T17:51:00Z,True,jorgebucaran_____hyperapp_____811_____256384621,"I shared a snippet of an alternative approach to lifecycle hooks I have been playing with in a fork of V2 being used on personal project of mine. This raised a few questions and a more detailed explanation was requested, so here is the implementation. A couple of things are assumed:

- Firstly @frenzzy suggested that:
> I think delayed remove is not needed, but oncreate and ondestroy are important https://hyperapp.slack.com/archives/C41ECC0V6/p1551190367214200

I'm not sure how you can do transition out style animations without them? But removing this certainly [simplifies](https://github.com/jorgebucaran/hyperapp/compare/V2...lukejacksonn:V2#diff-1fdf421c05c1140f6d71444ea2b27638L179) hyperapp core so `onRemove` is omitted here.

- Secondly by nature of the implementation the remaining lifecycle events get treated like any user interaction (like `onclick` for example) and so now have the same signature and behave the same:

```js
oncreate | onupdate | onremove:  (state, e) => ...,
```

I will create a codepen for this build now.",True,True,25,10066.75
jorgebucaran_____hyperapp_____811,2019-02-26T17:55:53Z,True,jorgebucaran_____hyperapp_____811_____467544075,"# [Codecov](https://codecov.io/gh/jorgebucaran/hyperapp/pull/811?src=pr&el=h1) Report
> Merging [#811](https://codecov.io/gh/jorgebucaran/hyperapp/pull/811?src=pr&el=desc) into [V2](https://codecov.io/gh/jorgebucaran/hyperapp/commit/900a0c640779971fc1c543d03ebf3401e3526d16?src=pr&el=desc) will **increase** coverage by `1.41%`.
> The diff coverage is `30%`.

[![Impacted file tree graph](https://codecov.io/gh/jorgebucaran/hyperapp/pull/811/graphs/tree.svg?width=650&token=zI5PKKwI7i&height=150&src=pr)](https://codecov.io/gh/jorgebucaran/hyperapp/pull/811?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##               V2     #811      +/-   ##
==========================================
+ Coverage   17.13%   18.54%   +1.41%     
==========================================
  Files           1        1              
  Lines         251      248       -3     
  Branches       69       67       -2     
==========================================
+ Hits           43       46       +3     
+ Misses        143      139       -4     
+ Partials       65       63       -2
```


| [Impacted Files](https://codecov.io/gh/jorgebucaran/hyperapp/pull/811?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [src/index.js](https://codecov.io/gh/jorgebucaran/hyperapp/pull/811/diff?src=pr&el=tree#diff-c3JjL2luZGV4Lmpz) | `18.54% <30%> (+1.41%)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/jorgebucaran/hyperapp/pull/811?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/jorgebucaran/hyperapp/pull/811?src=pr&el=footer). Last update [900a0c6...312d553](https://codecov.io/gh/jorgebucaran/hyperapp/pull/811?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",True,True,25,10066.75
jorgebucaran_____hyperapp_____811,2019-02-26T18:17:32Z,True,jorgebucaran_____hyperapp_____811_____260420216,Thank you for this :clap: ,True,True,25,10066.75
jorgebucaran_____hyperapp_____811,2019-02-26T18:24:15Z,True,jorgebucaran_____hyperapp_____811_____260422914,Hah 😅 unintentional side effect of trying to keep things as uniform/simple as possible.,True,True,25,10066.75
jorgebucaran_____hyperapp_____811,2019-02-26T18:58:50Z,True,jorgebucaran_____hyperapp_____811_____467567029,"Played around a bit with your Codepen.

I like the new function signature.  Having the app state injected should allow us to create these handlers outside of the view function, which could have small perf wins.

Removing the delayed onRemove is going to make animations more challenging, but it's workable.

Here is a forked codepen showing one way to achieve a fade-in/fade-out:  https://codepen.io/SkaterDad/pen/rRaGoz?editors=0010

I cloned the exiting node and inserted it into the parent in the same position.  I then remove the node when the animation is done.",True,True,25,10066.75
jorgebucaran_____hyperapp_____811,2019-02-26T19:01:38Z,True,jorgebucaran_____hyperapp_____811_____467568133,"@lukejacksonn  Could you add onRemove back? 🙏 

",True,True,25,10066.75
jorgebucaran_____hyperapp_____811,2019-02-26T19:05:04Z,True,jorgebucaran_____hyperapp_____811_____260439594,"if remove this line at all, it will be possible to use both `onCreate` and `oncreate` similar to all other events like `onClick` and `onclick`. ",True,True,25,10066.75
openshift/origin/21978,2019-02-26T23:15:31Z,False,5c75c9d66480fddd9ec69967,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
openshift/origin/21978,2019-02-27T01:14:06Z,False,5c75e5956480fddfaef40dd2,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
apache/incubator-dubbo/3500,2019-02-27T02:25:19Z,False,5c75f64e6480fddcdb23abbc,Got it.,True,False,13,20122.733333333334
webpack_____webpack-dev-server_____1664,2019-02-27T02:44:45Z,True,webpack_____webpack-dev-server_____1664_____467701599,"# [Codecov](https://codecov.io/gh/webpack/webpack-dev-server/pull/1664?src=pr&el=h1) Report
> Merging [#1664](https://codecov.io/gh/webpack/webpack-dev-server/pull/1664?src=pr&el=desc) into [master](https://codecov.io/gh/webpack/webpack-dev-server/commit/f78a9a3dde0de9468945c80a4fc8e740ae63a248?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/webpack/webpack-dev-server/pull/1664/graphs/tree.svg?width=650&token=WeyEj48Ike&height=150&src=pr)](https://codecov.io/gh/webpack/webpack-dev-server/pull/1664?src=pr&el=tree)

```diff
@@           Coverage Diff           @@
##           master    #1664   +/-   ##
=======================================
  Coverage   75.12%   75.12%           
=======================================
  Files          18       18           
  Lines         591      591           
  Branches      171      171           
=======================================
  Hits          444      444           
  Misses        113      113           
  Partials       34       34
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/webpack/webpack-dev-server/pull/1664?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/webpack/webpack-dev-server/pull/1664?src=pr&el=footer). Last update [f78a9a3...50ef125](https://codecov.io/gh/webpack/webpack-dev-server/pull/1664?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",True,True,39,88465.16666666667
webpack_____webpack-dev-server_____1664,2019-02-27T02:52:01Z,True,webpack_____webpack-dev-server_____1664_____467702978,"@evilebottnawi @hiroppy I added some e2e tests using `puppeteer` headless Chrome API. This allows testing my fix and enables more e2e testing. 

I created a new `Client.test.js` that contains this client code related tests: https://github.com/webpack/webpack-dev-server/blob/50ef125fbfe04eb51f6788a0c44ada539834ea57/test/Client.test.js

Also the `runBrowser` helper allows to quickly start the headless browser for e2e testing.

Let me know what you think.",True,True,39,88465.16666666667
openshift/origin/21978,2019-02-27T03:15:01Z,False,5c7601ec6480fde1feddbc09,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
openshift/origin/21978,2019-02-27T05:16:00Z,False,5c761e426480fde1befb2498,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
adventuregamestudio_____ags_____648,2019-02-27T07:07:08Z,True,adventuregamestudio_____ags_____648_____256563069,"Controversial pull request!  I tried to arrange this in two parts, the first has some general string based bug fixes, the second has the modification to String to use std::string.

The main benefit is that the c++11 string type does not have COW, which makes String much safer for multithreaded code. 

I also removed the implicit conversion from String to char*. I noticed that the compiler would silently convert to char* if a comparison operator wasn't implemented. That means there was the potential for pointer comparisons instead of content. It also makes it much more obvious which parts of the code are relying on char* strings.

Note: I have only tested on Linux so far, will test in Windows and fix any issues I find.",True,True,19,115511.16666666667
openshift/origin/21978,2019-02-27T07:17:00Z,False,5c763a9f6480fddcdb23e2c8,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
openshift/origin/21978,2019-02-27T09:18:02Z,False,5c76570d6480fde1befb4e1b,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
adventuregamestudio_____ags_____648,2019-02-27T10:26:56Z,True,adventuregamestudio_____ags_____648_____467808797,"Perhaps you could include removal of conversion operator to the first commit (""Explicitly convert AGS Strings to char*"")? It would help finding places where you need to add .GetStr().
Also in commit 3ce8b3e it would no longer be necessary to create temp string objects from literal strings",True,True,19,115511.16666666667
adventuregamestudio_____ags_____648,2019-02-27T10:30:10Z,True,adventuregamestudio_____ags_____648_____260684910,"Since you remove implicit conversion to const char* perhaps this is no longer necessary?
Both AGS::Common::String and std::string implement comparison operator that accepts const char* as an argument, this is to avoid extra string object allocation.",True,True,19,115511.16666666667
adventuregamestudio_____ags_____648,2019-02-27T10:32:54Z,True,adventuregamestudio_____ags_____648_____467810758,"TBH I'd rather pick out commits f000788 and 370cd37 , because they are bug fixes and not related to the changes to string implementation (also in case we have to apply them to older version).",True,True,19,115511.16666666667
adventuregamestudio_____ags_____648,2019-02-27T11:12:44Z,True,adventuregamestudio_____ags_____648_____467822675,"I modified the commit ""Explicitly convert AGS Strings to char*"" to also remove that conversion from the string.h file. There are a couple more places where we can call GetCStr but that's because I haven't modified the rest of string.h yet to accept String instead of char*",True,True,19,115511.16666666667
adventuregamestudio_____ags_____648,2019-02-27T11:14:57Z,True,adventuregamestudio_____ags_____648_____467823276,"> I haven't modified the rest of string.h yet to accept String instead of char*

Do you mean you want to not accept arguments of const char* at all?",True,True,19,115511.16666666667
adventuregamestudio_____ags_____648,2019-02-27T11:17:10Z,True,adventuregamestudio_____ags_____648_____467823904,"> Do you mean you want to not accept arguments of const char* at all?

I think it makes sense. That way we're only ever implicitly converting to AGS::String. You need to be explicit when converting back to a char*. 

The only char* it accepts now is in the constructor and for printf variants.",True,True,19,115511.16666666667
adventuregamestudio_____ags_____648,2019-02-27T11:17:27Z,True,adventuregamestudio_____ags_____648_____467823997,"> TBH I'd rather pick out commits [f000788](https://github.com/adventuregamestudio/ags/commit/f0007889e1e334a714ed8ee3517f900b850c283d) and [370cd37](https://github.com/adventuregamestudio/ags/commit/370cd373c7d3a61b85b8af71baa45d6b9fb5750e) , because they are bug fixes and not related to the changes to string implementation

I have pulled out those two fixes into their own pull requests.",True,True,19,115511.16666666667
adventuregamestudio_____ags_____648,2019-02-27T11:21:32Z,True,adventuregamestudio_____ags_____648_____467825174,"> I have pulled out those two fixes into their own pull requests.

Ah, I was going to just cherry pick and push them right away, because they are small and clear :)",True,True,19,115511.16666666667
adventuregamestudio_____ags_____648,2019-02-27T11:24:38Z,True,adventuregamestudio_____ags_____648_____467826040,"> I think it makes sense. That way we're only ever implicitly converting to AGS::String. You need to be explicit when converting back to a char*.

Converting back to char* is one thing, but taking only String arguments? I don't know... that means extra string objects are created for example every time we compare with a literal. Like I mentioned, std::string accepts C-strings also as argument to some functions and operators.
Is there really a problem with that?",True,True,19,115511.16666666667
adventuregamestudio_____ags_____648,2019-02-27T11:30:50Z,True,adventuregamestudio_____ags_____648_____467827761,"> I don't know... that means extra string objects are created for example every time we compare with a literal.

Only accepting AGS::String means we can keep the implicit conversion from char* to String. We only have to worry about being explicit in the other direction.

We could overload and implement for both types, but I wonder if we only need to do that in performance hot spots. And in those spots, should we be doing string manipulation at all?

",True,True,19,115511.16666666667
jorgebucaran_____hyperapp_____811,2019-02-27T11:32:47Z,True,jorgebucaran_____hyperapp_____811_____467828248,Humm.. adding back `onRemove` is slightly problematic as we can't pass the `remove` function through an Event 🤔 (unless we attach it to the element?),True,True,25,10066.75
hibernate/hibernate-validator/1012,2019-02-27T12:01:48Z,False,5c7cc9dc6480fdac865f35b5,add test scope,True,False,72,112490.03333333334
hibernate/hibernate-validator/1012,2019-02-27T12:01:53Z,False,5c7cc9da6480fda89e16124b,add test scope,True,False,72,112490.03333333334
jorgebucaran_____hyperapp_____811,2019-02-27T12:04:49Z,True,jorgebucaran_____hyperapp_____811_____467837235,"@lukejacksonn IMO the most important thing about this PR is the user-facing API changes making lifecycle events act like other events, i.e., implicit dispatch callers. If using `Event` creates an implementation problem, we can use `dispatch` directly in the current code. Do you want to make those changes?

We need to have a discussion about how this changes the way lifecycle events can be used. @loteoo You were telling me how you've been using this in your own projects. Can you share it here as well?

I'd love to hear what @zaceno thinks about this too.
",True,True,25,10066.75
hibernate/hibernate-validator/1012,2019-02-27T12:22:23Z,False,5c7cc9e16480fdad6f039ac2,indentation,True,False,72,112490.03333333334
hibernate/hibernate-validator/1012,2019-02-27T12:26:53Z,False,5c7cc9d86480fdadd60088ed,`Class<?>`,True,False,72,112490.03333333334
hibernate/hibernate-validator/1012,2019-02-27T13:06:20Z,False,5c7ccbf66480fdaa5cd7ea2b,"It's how the project formatter indented it, so i don't want to argue :)",True,False,72,112490.03333333334
jorgebucaran_____hyperapp_____811,2019-02-27T13:27:55Z,True,jorgebucaran_____hyperapp_____811_____260746928,"Depending on browser support, we may want to use `event = new CustomEvent('build', { detail: elem.dataset.time });`.

Another thing I think we need to consider is running in headless - will this still work as intended?",True,True,25,10066.75
jorgebucaran_____hyperapp_____811,2019-02-27T13:29:38Z,True,jorgebucaran_____hyperapp_____811_____467861901,"@jorgebucaran I think this proposal is good. Especially the fact that this makes it possible (...or, well, easier) to manage state and dispatch effects in relation to particular dom elements. I think it should be perfectly adequate to have just ""oncreate"" and ""ondestroy"". (Perhaps all we need, even is ""oncreate"")

(Also I am 100% on board with all-lowercase at least as an option, for all events incl lifecycle)",True,True,25,10066.75
jorgebucaran_____hyperapp_____811,2019-02-27T13:55:20Z,True,jorgebucaran_____hyperapp_____811_____260758200,"From what I have read.. `Event` is supported better than `CustomEvent` but we might need to *not* use the constructor. Something like this (which is not ideal I guess but will work):

```
var event;
if(typeof(Event) === 'function') {
    event = new Event('submit');
}else{
    event = document.createEvent('Event');
    event.initEvent('submit', true, true);
}
```",True,True,25,10066.75
jorgebucaran_____hyperapp_____811,2019-02-27T13:57:46Z,True,jorgebucaran_____hyperapp_____811_____467870978,"Just to clarify one thing.. I didn't change the capitalisation of the lifecycle events out of preference, rather out of necessity – as they are treated the same as any other event which gets lowercased. That said, I do prefer it like this 😅 ",True,True,25,10066.75
jorgebucaran_____hyperapp_____811,2019-02-27T14:26:55Z,True,jorgebucaran_____hyperapp_____811_____467881395,"> @zaceno I think it should be perfectly adequate to have just ""oncreate"" and ""ondestroy"".

I'm not following. We need onUpdate and onRemove too.",True,True,25,10066.75
jorgebucaran_____hyperapp_____811,2019-02-27T14:27:15Z,True,jorgebucaran_____hyperapp_____811_____467881513,"@lukejacksonn ~~I can still use camelCase correct?~~ Nevermind.

",True,True,25,10066.75
jorgebucaran_____hyperapp_____811,2019-02-27T14:27:53Z,True,jorgebucaran_____hyperapp_____811_____467881764,"> @zaceno  I think it should be perfectly adequate to have just ""oncreate"" and ""ondestroy"". (Perhaps all we need, even is ""oncreate"")

I agree that the delayed onremove isn't strictly necessary, but I think `onupdate` and `ondestroy` are pretty important if you're using an non-hyperapp component lib or trying to do animation.

EDIT:  If we can make both camel-cased and lowercased events work, that will be ideal, IMO.",True,True,25,10066.75
jorgebucaran_____hyperapp_____811,2019-02-27T14:28:48Z,True,jorgebucaran_____hyperapp_____811_____467882133,"This probably isn't explicitly for this PR, but I don't think this will work for headless mode.  Then again, most events wouldn't work unless you used jsdom or similar (which is essentially not headless mode), so maybe that's okay, but probably warrants a discussion.",True,True,25,10066.75
jorgebucaran_____hyperapp_____811,2019-02-27T14:28:48Z,True,jorgebucaran_____hyperapp_____811_____467882131,"I have no intention of removing only some lifecycle events. It's all (Create, Update, Remove, and Destroy) or nothing (no lifecycle events at all #717).",True,True,25,10066.75
jorgebucaran_____hyperapp_____811,2019-02-27T15:56:22Z,True,jorgebucaran_____hyperapp_____811_____467918184,"> I have no intention of removing only some lifecycle events. It's all (Create, Update, Remove, and Destroy) or nothing (no lifecycle events at all #717).

That's entirely up to you of course, although I think a halfway approach would be a win. We kan keep convenient access to particular DOM-nodes of interest, while still reducing the complexity our current lifecycle methods add.

Like @SkaterDad says, maybe Update is necessary (but perhaps we can simplify it to only run if attributes change). I no longer think both onDestroy and onRemove are necessary. Just one that works like onDestroy does should be enough.
",True,True,25,10066.75
adventuregamestudio_____ags_____648,2019-02-27T22:28:16Z,True,adventuregamestudio_____ags_____648_____260972892,Updated this fix.,True,True,19,115511.16666666667
jorgebucaran_____hyperapp_____811,2019-02-27T23:06:06Z,True,jorgebucaran_____hyperapp_____811_____468067112,"I would like to use this solution for simplifying css transitions with onCreate and onDestroy by changing the global state (treat it like an action returning a new state?). I was looking for this exact solution earlier, but had to instead manually add an attribute to the element and a custom css selector (yuck). Maybe I’m going about transitions the wrong way?",True,True,25,10066.75
jorgebucaran_____hyperapp_____811,2019-02-28T03:22:50Z,True,jorgebucaran_____hyperapp_____811_____468122279,"There's disagreement over what lifecycle methods we should keep and which ones are okay to lose as if we needed to simplify Hyperapp when there's no pressing need to do that.

Implementation details aside, do we want to change the lifecycle API to dispatch actions like we can from other DOM events?",True,True,25,10066.75
jorgebucaran_____hyperapp_____811,2019-02-28T03:36:45Z,True,jorgebucaran_____hyperapp_____811_____468124672,"I vote yes on the new function signature. Seems like a big usability win, so long as it isn't adding too many bytes. ",True,True,25,10066.75
w3c_____csswg-drafts_____3618,2019-02-28T22:45:00Z,True,w3c_____csswg-drafts_____3618_____468469454,@astearns @atanassov please review,True,True,8,34231.75
w3c_____csswg-drafts_____3618,2019-02-28T23:54:35Z,True,w3c_____csswg-drafts_____3618_____468487095,"@ewilligers I'm fine taking the change, but I'm not certain why the group is required here.",True,True,8,34231.75
w3c_____csswg-drafts_____3618,2019-02-28T23:59:00Z,True,w3c_____csswg-drafts_____3618_____468488117,"https://drafts.csswg.org/css-values/#component-combinators

> Every type, keyword, or bracketed group may be followed by **one** of the following modifiers:
> - A  question mark (?) indicates that the preceding type, word, or group is optional (occurs zero or one times).
> - A single number in curly braces ({A}) indicates that the preceding type, word, or group occurs A times.

Two modifiers are not permitted.
",True,True,8,34231.75
w3c_____csswg-drafts_____3618,2019-03-01T05:48:34Z,True,w3c_____csswg-drafts_____3618_____468550859,"Why was my comment deleted, @w3c? Please reinstate it for the record.",True,True,8,34231.75
jorgebucaran_____hyperapp_____811,2019-03-01T07:21:05Z,True,jorgebucaran_____hyperapp_____811_____468569148,I have been migrating continent these past two days so only just catching up with this thread. Will be back soon with some responses and an updated PR!,True,True,25,10066.75
openshift/origin/21978,2019-03-01T13:45:05Z,False,5c7ec5256480fda93afe6ba3,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
w3c_____csswg-drafts_____3618,2019-03-01T14:51:42Z,True,w3c_____csswg-drafts_____3618_____468690133,"It didn't add anything to the discussion here. For the record, everything that happens in the W3C GitHub org is separately archived.",True,True,8,34231.75
w3c_____csswg-drafts_____3618,2019-03-01T15:48:52Z,True,w3c_____csswg-drafts_____3618_____468710091,"Well, that's your opinion.

I disagree, and in a discussion about a project, other readers should be allowed to form their own opinions of my legitimate input.

There's a strong correlation between my comment and the resolution of this pull request; indeed, there's a good argument for a causal relationship, so it seems suspicious to suggest that my comment didn't add anything to the discussion.

Please reinstate my comment, because what people read is *this* discussion (not some separate archive), and I want my name (*mfwitten*) associated with my comment, not with @w3c's comment that my input has been deleted, which makes it appear as though my input is somehow uncouth.

I mean, before deletion, there was just my one comment, which led to the swift resolution of this pull request. Now, there is a discussion about @w3c's deletion of my comment; it seems to me that it is the deletion of my comment that has detracted from the discussion and that is leading rapidly to dampened progress or cooperation.

If a person feels compelled to provide input, then that's not something that you should ignore, let alone explicitly silence; such input represents a perspective that others might share. At best, such silencing tends to dissuade future contributions, some of which you might actually consider to be valuable.

Have a little leeway, you know, for the sake of [noise margins](https://en.wikipedia.org/wiki/Static_discipline).",True,True,8,34231.75
w3c_____csswg-drafts_____3618,2019-03-01T17:47:36Z,True,w3c_____csswg-drafts_____3618_____468750324,"Michael, frankly the tone of your comment was rude and disrespectful if not outright abusive. IMO it was also in violation of the [W3C Code of Ethics and Professional Conduct](https://www.w3.org/Consortium/cepc/).

If I were you I'd be grateful that there _isn't_ a readily accessible record of your behavior. Alan was doing you a favor by deleting it. But instead you choose to double-down and suggest that demonstrating being abusive is the way to get things done.

This is not acceptable and is not the way to foster involvement in a community where many of the participants are volunteering their time uncompensated. You have no right to demand action by anyone for any reason.

Not all input is welcome, and silencing disruptive and disrespectful input actually does **more** to encourage future contributions from people who don't care to be at the receiving end of such behavior.

Perhaps you'd benefit from reading some of the educational materials of the [Positive Work Environment Task Force](https://www.w3.org/Consortium/pwe/#Education).",True,True,8,34231.75
openshift/origin/21978,2019-03-01T19:48:08Z,False,5c7efa6e6480fdac34cf24a3,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
openshift/origin/21978,2019-03-01T20:26:21Z,False,5c7eff306480fdac0e8655af,/retest,True,False,124,41433.166666666664
brianchandotcom/liferay-portal/68848,2019-03-02T09:24:21Z,False,5c7f348e6480fdad3a47024c,"CI is automatically triggering &quot;ci:test:sf&quot; and &quot;ci:test:relevant&quot; for this pull to run Source Formatter and relevant tests.

Comment &quot;ci:test&quot; to run the full PR Tester for this pull.",True,False,4,424.7
brianchandotcom/liferay-portal/68848,2019-03-02T09:27:03Z,False,5c7f348e6480fdad3a47024d,"<html><h3>:heavy_check_mark: ci:test:sf - 1 out of 1 jobs passed in 2 minutes 38 seconds 556 ms</h3><details><summary>Click here for more details.</summary><h4>Base Branch:</h4><p>Branch Name: <a href=""https://github.com/liferay/liferay-portal/tree/master"">master</a><br/>Branch GIT ID: <a href=""https://github.com/liferay/liferay-portal/commit/091165df86766131d0fb2cf0eacca824ddbe9542"">091165df86766131d0fb2cf0eacca824ddbe9542</a></p><h4>Sender Branch:</h4><p>Branch Name: <a href=""https://github.com/jbalsas/liferay-portal/tree/pr-1677"">pr-1677</a><br/>Branch GIT ID: <a href=""https://github.com/jbalsas/liferay-portal/commit/844426da38a599389a1e021ed326c3f770964197"">844426da38a599389a1e021ed326c3f770964197</a></p>1 out of 1jobs PASSED<details><summary><strong>1 Successful Jobs:</strong></summary><ul><li><a href=""https://test-1-22.liferay.com/job/test-portal-source-format/1799/"">test-portal-source-format</a></li></ul></details><h5>For more details click <a href=""https://test-1-22.liferay.com/userContent/jobs/test-portal-source-format/builds/1799/jenkins-report.html"">here</a>.</h5></details></html>",True,False,4,424.7
brianchandotcom/liferay-portal/68848,2019-03-02T11:03:41Z,False,5c7f348e6480fdad3a47024e,"<html><h3>:x: ci:test:relevant - 77 out of 85 jobs passed in 1 hour 39 minutes 8 seconds 297 ms</h3><details><summary>Click here for more details.</summary><h4>Base Branch:</h4><p>Branch Name: <a href=""https://github.com/liferay/liferay-portal/tree/master"">master</a><br/>Branch GIT ID: <a href=""https://github.com/liferay/liferay-portal/commit/091165df86766131d0fb2cf0eacca824ddbe9542"">091165df86766131d0fb2cf0eacca824ddbe9542</a></p><h4>Copied in Private Modules Branch:</h4><p>Branch Name: <a href=""https://github.com/liferay/liferay-portal-ee/tree/master-private"">master-private</a><br/>Branch GIT ID: <a href=""https://github.com/liferay/liferay-portal-ee/commit/bb05b18168fd1ff84bb232f565de282ff8c473b8"">bb05b18168fd1ff84bb232f565de282ff8c473b8</a></p>77 out of 85 jobs PASSED<div><h4>8 Failed Jobs:</h4><ul><li><a href=""https://test-1-22.liferay.com/job/test-portal-acceptance-pullrequest(master)/3440/""><strike><strong>test-portal-acceptance-pullrequest(master)</strong></strike></a></li><li><a href=""https://test-1-8.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/237532/""><strike><strong>test-portal-acceptance-pullrequest-batch(master)/functional-tomcat90-mysql57-jdk8/28</strong></strike></a></li><li><a href=""https://test-1-21.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/224444/""><strike><strong>test-portal-acceptance-pullrequest-batch(master)/functional-tomcat90-mysql57-jdk8/29</strong></strike></a></li><li><a href=""https://test-1-5.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/275460/""><strike><strong>test-portal-acceptance-pullrequest-batch(master)/functional-tomcat90-mysql57-jdk8/31</strong></strike></a></li><li><a href=""https://test-1-15.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/193142/""><strike><strong>test-portal-acceptance-pullrequest-batch(master)/functional-tomcat90-mysql57-jdk8/47</strong></strike></a></li><li><a href=""https://test-1-9.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/240811/""><strike><strong>test-portal-acceptance-pullrequest-batch(master)/functional-upgrade-tomcat90-mysql57-jdk8/0</strong></strike></a></li><li><a href=""https://test-1-3.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/298040/""><strike><strong>test-portal-acceptance-pullrequest-batch(master)/integration-mysql57-jdk8</strong></strike></a></li><li><a href=""https://test-1-10.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/243082/""><strike><strong>test-portal-acceptance-pullrequest-batch(master)/modules-integration-mysql57-jdk8</strong></strike></a></li></ul></div><details><summary><strong>77 Successful Jobs:</strong></summary><ul><li><a href=""https://test-1-17.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/274388/"">test-portal-acceptance-pullrequest-batch(master)/central-requirements-jdk8</a></li><li><a href=""https://test-1-22.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/147105/"">test-portal-acceptance-pullrequest-batch(master)/functional-smoke-tomcat90-mysql57-jdk11_open/0</a></li><li><a href=""https://test-1-5.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/275456/"">test-portal-acceptance-pullrequest-batch(master)/functional-smoke-tomcat90-mysql57-jdk8/0</a></li><li><a href=""https://test-1-17.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/274389/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat90-mysql57-jdk8/0</a></li><li><a href=""https://test-1-22.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/147106/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat90-mysql57-jdk8/1</a></li><li><a href=""https://test-1-5.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/275458/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat90-mysql57-jdk8/10</a></li><li><a href=""https://test-1-19.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/281660/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat90-mysql57-jdk8/11</a></li><li><a href=""https://test-1-22.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/147108/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat90-mysql57-jdk8/12</a></li><li><a href=""https://test-1-20.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/295745/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat90-mysql57-jdk8/13</a></li><li><a href=""https://test-1-17.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/274392/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat90-mysql57-jdk8/14</a></li><li><a href=""https://test-1-11.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/286743/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat90-mysql57-jdk8/15</a></li><li><a href=""https://test-1-21.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/224442/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat90-mysql57-jdk8/16</a></li><li><a href=""https://test-1-8.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/237531/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat90-mysql57-jdk8/17</a></li><li><a href=""https://test-1-22.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/147109/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat90-mysql57-jdk8/18</a></li><li><a href=""https://test-1-5.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/275459/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat90-mysql57-jdk8/19</a></li><li><a href=""https://test-1-17.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/274390/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat90-mysql57-jdk8/2</a></li><li><a href=""https://test-1-21.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/224443/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat90-mysql57-jdk8/20</a></li><li><a href=""https://test-1-14.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/283890/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat90-mysql57-jdk8/21</a></li><li><a href=""https://test-1-17.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/274393/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat90-mysql57-jdk8/22</a></li><li><a href=""https://test-1-19.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/281661/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat90-mysql57-jdk8/23</a></li><li><a href=""https://test-1-23.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/148167/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat90-mysql57-jdk8/24</a></li><li><a href=""https://test-1-11.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/286744/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat90-mysql57-jdk8/25</a></li><li><a href=""https://test-1-20.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/295746/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat90-mysql57-jdk8/26</a></li><li><a href=""https://test-1-22.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/147110/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat90-mysql57-jdk8/27</a></li><li><a href=""https://test-1-19.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/281658/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat90-mysql57-jdk8/3</a></li><li><a href=""https://test-1-14.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/283891/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat90-mysql57-jdk8/30</a></li><li><a href=""https://test-1-17.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/274394/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat90-mysql57-jdk8/32</a></li><li><a href=""https://test-1-19.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/281662/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat90-mysql57-jdk8/33</a></li><li><a href=""https://test-1-23.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/148168/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat90-mysql57-jdk8/34</a></li><li><a href=""https://test-1-15.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/193141/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat90-mysql57-jdk8/35</a></li><li><a href=""https://test-1-3.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/298037/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat90-mysql57-jdk8/36</a></li><li><a href=""https://test-1-7.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/260711/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat90-mysql57-jdk8/37</a></li><li><a href=""https://test-1-6.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/273331/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat90-mysql57-jdk8/38</a></li><li><a href=""https://test-1-16.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/281648/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat90-mysql57-jdk8/39</a></li><li><a href=""https://test-1-21.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/224441/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat90-mysql57-jdk8/4</a></li><li><a href=""https://test-1-1.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/259850/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat90-mysql57-jdk8/40</a></li><li><a href=""https://test-1-7.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/260712/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat90-mysql57-jdk8/41</a></li><li><a href=""https://test-1-6.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/273332/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat90-mysql57-jdk8/42</a></li><li><a href=""https://test-1-4.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/280073/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat90-mysql57-jdk8/43</a></li><li><a href=""https://test-1-11.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/286745/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat90-mysql57-jdk8/44</a></li><li><a href=""https://test-1-3.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/298038/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat90-mysql57-jdk8/45</a></li><li><a href=""https://test-1-18.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/35074/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat90-mysql57-jdk8/46</a></li><li><a href=""https://test-1-4.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/280074/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat90-mysql57-jdk8/48</a></li><li><a href=""https://test-1-3.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/298039/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat90-mysql57-jdk8/49</a></li><li><a href=""https://test-1-5.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/275457/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat90-mysql57-jdk8/5</a></li><li><a href=""https://test-1-11.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/286746/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat90-mysql57-jdk8/50</a></li><li><a href=""https://test-1-15.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/193143/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat90-mysql57-jdk8/51</a></li><li><a href=""https://test-1-6.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/273333/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat90-mysql57-jdk8/52</a></li><li><a href=""https://test-1-16.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/281649/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat90-mysql57-jdk8/53</a></li><li><a href=""https://test-1-18.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/35075/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat90-mysql57-jdk8/54</a></li><li><a href=""https://test-1-7.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/260713/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat90-mysql57-jdk8/55</a></li><li><a href=""https://test-1-23.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/148169/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat90-mysql57-jdk8/56</a></li><li><a href=""https://test-1-1.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/259851/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat90-mysql57-jdk8/57</a></li><li><a href=""https://test-1-4.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/280075/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat90-mysql57-jdk8/58</a></li><li><a href=""https://test-1-23.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/148170/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat90-mysql57-jdk8/59</a></li><li><a href=""https://test-1-22.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/147107/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat90-mysql57-jdk8/6</a></li><li><a href=""https://test-1-18.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/35076/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat90-mysql57-jdk8/60</a></li><li><a href=""https://test-1-7.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/260714/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat90-mysql57-jdk8/61</a></li><li><a href=""https://test-1-17.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/274391/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat90-mysql57-jdk8/7</a></li><li><a href=""https://test-1-19.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/281659/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat90-mysql57-jdk8/8</a></li><li><a href=""https://test-1-8.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/237530/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat90-mysql57-jdk8/9</a></li><li><a href=""https://test-1-2.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/291138/"">test-portal-acceptance-pullrequest-batch(master)/functional-upgrade-tomcat90-mysql57-jdk8/1</a></li><li><a href=""https://test-1-9.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/240812/"">test-portal-acceptance-pullrequest-batch(master)/functional-upgrade-tomcat90-mysql57-jdk8/2</a></li><li><a href=""https://test-1-13.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/251375/"">test-portal-acceptance-pullrequest-batch(master)/functional-upgrade-tomcat90-mysql57-jdk8/3</a></li><li><a href=""https://test-1-20.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/295747/"">test-portal-acceptance-pullrequest-batch(master)/functional-upgrade-tomcat90-mysql57-jdk8/4</a></li><li><a href=""https://test-1-16.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/281650/"">test-portal-acceptance-pullrequest-batch(master)/functional-upgrade-tomcat90-mysql57-jdk8/5</a></li><li><a href=""https://test-1-22.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/147111/"">test-portal-acceptance-pullrequest-batch(master)/functional-upgrade-tomcat90-mysql57-jdk8/6</a></li><li><a href=""https://test-1-10.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/243081/"">test-portal-acceptance-pullrequest-batch(master)/functional-upgrade-tomcat90-mysql57-jdk8/7</a></li><li><a href=""https://test-1-16.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/281651/"">test-portal-acceptance-pullrequest-batch(master)/js-unit-jdk8</a></li><li><a href=""https://test-1-9.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/240813/"">test-portal-acceptance-pullrequest-batch(master)/lpkg-base-jdk8</a></li><li><a href=""https://test-1-2.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/291139/"">test-portal-acceptance-pullrequest-batch(master)/lpkg-controller-jdk8</a></li><li><a href=""https://test-1-22.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/147112/"">test-portal-acceptance-pullrequest-batch(master)/modules-compile-jdk8</a></li><li><a href=""https://test-1-13.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/251376/"">test-portal-acceptance-pullrequest-batch(master)/modules-semantic-versioning-jdk8</a></li><li><a href=""https://test-1-11.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/286747/"">test-portal-acceptance-pullrequest-batch(master)/modules-unit-project-templates-jdk8</a></li><li><a href=""https://test-1-20.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/295748/"">test-portal-acceptance-pullrequest-batch(master)/semantic-versioning-jdk8</a></li><li><a href=""https://test-1-23.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/148171/"">test-portal-acceptance-pullrequest-batch(master)/service-builder-jdk8</a></li><li><a href=""https://test-1-13.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/251377/"">test-portal-acceptance-pullrequest-batch(master)/unit-jdk8</a></li></ul></details><h5>For more details click <a href=""https://test-1-22.liferay.com/userContent/jobs/test-portal-acceptance-pullrequest(master)/builds/3440/jenkins-report.html"">here</a>.</h5><hr/><h4>Failures unique to this pull:</h4><ol><li><div><h5><a href=""https://test-1-9.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/240811/"">test-portal-acceptance-pullrequest-batch(master)/functional-upgrade-tomcat90-mysql57-jdk8/0</a></h5><div><h6>Job Results:</h6><p>1 Test Passed.<br/>1 Test Failed.</p></div><ol><li><div><a href=""https://test-1-9.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/AXIS_VARIABLE=0,label_exp=!master/240811//consoleText"">AXIS_VARIABLE=0,label_exp=!master #240811</a><ol><li><div><a href=""https://test-1-9.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/AXIS_VARIABLE=0,label_exp=!master/240811//testReport/com.liferay.poshi.runner/PoshiRunner/test_LocalFile_PortalSmokeUpgrade_ViewPortalSmokeArchive7110_"">LocalFile.PortalSmokeUpgrade#ViewPortalSmokeArchive7110</a> - <a href=""https://testray.liferay.com/reports/production/logs/test-1-22/1551518684240/test-portal-acceptance-pullrequest(master)/3440/functional-upgrade-tomcat90-mysql57-jdk8/0/0/LocalFile.PortalSmokeUpgrade_ViewPortalSmokeArchive7110/index.html.gz"">Poshi Report</a> - <a href=""https://testray.liferay.com/reports/production/logs/test-1-22/1551518684240/test-portal-acceptance-pullrequest(master)/3440/functional-upgrade-tomcat90-mysql57-jdk8/0/0/LocalFile.PortalSmokeUpgrade_ViewPortalSmokeArchive7110/summary.html.gz"">Poshi Summary</a> - <a href=""https://testray.liferay.com/reports/production/logs/test-1-22/1551518684240/test-portal-acceptance-pullrequest(master)/3440/functional-upgrade-tomcat90-mysql57-jdk8/0/0/jenkins-console.txt.gz"">Console Output</a></div></li></ol></div></li></ol></div></li></ol><hr/><details><summary><strong>Failures in common with <a href=""https://test-1-1.liferay.com/job/test-portal-acceptance-upstream(master)"">acceptance upstream results</a> at 091165df86766131d0fb2cf0eacca824ddbe9542:</strong></summary><ol><li><div><h5><a href=""https://test-1-8.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/237532/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat90-mysql57-jdk8/28</a></h5><div><h6>Job Results:</h6><p>24 Tests Passed.<br/>2 Tests Failed.</p></div><ol><li><div><a href=""https://test-1-8.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/AXIS_VARIABLE=2,label_exp=!master/237532//consoleText"">AXIS_VARIABLE=2,label_exp=!master #237532</a><ol><li><div><a href=""https://test-1-8.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/AXIS_VARIABLE=2,label_exp=!master/237532//testReport/com.liferay.poshi.runner/PoshiRunner/test_LocalFile_CPRolesPGBlogs_DeleteBlogsEntryOrgRoleDefaultPermission_"">LocalFile.CPRolesPGBlogs#DeleteBlogsEntryOrgRoleDefaultPermission</a> - <a href=""https://testray.liferay.com/reports/production/logs/test-1-22/1551518684240/test-portal-acceptance-pullrequest(master)/3440/functional-tomcat90-mysql57-jdk8/28/2/LocalFile.CPRolesPGBlogs_DeleteBlogsEntryOrgRoleDefaultPermission/index.html.gz"">Poshi Report</a> - <a href=""https://testray.liferay.com/reports/production/logs/test-1-22/1551518684240/test-portal-acceptance-pullrequest(master)/3440/functional-tomcat90-mysql57-jdk8/28/2/LocalFile.CPRolesPGBlogs_DeleteBlogsEntryOrgRoleDefaultPermission/summary.html.gz"">Poshi Summary</a> - <a href=""https://testray.liferay.com/reports/production/logs/test-1-22/1551518684240/test-portal-acceptance-pullrequest(master)/3440/functional-tomcat90-mysql57-jdk8/28/2/jenkins-console.txt.gz"">Console Output</a></div></li><li><div><a href=""https://test-1-8.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/AXIS_VARIABLE=2,label_exp=!master/237532//testReport/com.liferay.poshi.runner/PoshiRunner/test_LocalFile_CPRolesPGBlogs_DeleteBlogsEntryOrgRoleDefinePermission_"">LocalFile.CPRolesPGBlogs#DeleteBlogsEntryOrgRoleDefinePermission</a> - <a href=""https://testray.liferay.com/reports/production/logs/test-1-22/1551518684240/test-portal-acceptance-pullrequest(master)/3440/functional-tomcat90-mysql57-jdk8/28/2/LocalFile.CPRolesPGBlogs_DeleteBlogsEntryOrgRoleDefinePermission/index.html.gz"">Poshi Report</a> - <a href=""https://testray.liferay.com/reports/production/logs/test-1-22/1551518684240/test-portal-acceptance-pullrequest(master)/3440/functional-tomcat90-mysql57-jdk8/28/2/LocalFile.CPRolesPGBlogs_DeleteBlogsEntryOrgRoleDefinePermission/summary.html.gz"">Poshi Summary</a> - <a href=""https://testray.liferay.com/reports/production/logs/test-1-22/1551518684240/test-portal-acceptance-pullrequest(master)/3440/functional-tomcat90-mysql57-jdk8/28/2/jenkins-console.txt.gz"">Console Output</a></div></li></ol></div></li></ol></div></li><li><div><h5><a href=""https://test-1-21.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/224444/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat90-mysql57-jdk8/29</a></h5><div><h6>Job Results:</h6><p>22 Tests Passed.<br/>4 Tests Failed.</p></div><ol><li><div><a href=""https://test-1-21.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/AXIS_VARIABLE=0,label_exp=!master/224444//consoleText"">AXIS_VARIABLE=0,label_exp=!master #224444</a><ol><li><div><a href=""https://test-1-21.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/AXIS_VARIABLE=0,label_exp=!master/224444//testReport/com.liferay.poshi.runner/PoshiRunner/test_LocalFile_CPUsersandorganizations_AddMember_"">LocalFile.CPUsersandorganizations#AddMember</a> - <a href=""https://testray.liferay.com/reports/production/logs/test-1-22/1551518684240/test-portal-acceptance-pullrequest(master)/3440/functional-tomcat90-mysql57-jdk8/29/0/LocalFile.CPUsersandorganizations_AddMember/index.html.gz"">Poshi Report</a> - <a href=""https://testray.liferay.com/reports/production/logs/test-1-22/1551518684240/test-portal-acceptance-pullrequest(master)/3440/functional-tomcat90-mysql57-jdk8/29/0/LocalFile.CPUsersandorganizations_AddMember/summary.html.gz"">Poshi Summary</a> - <a href=""https://testray.liferay.com/reports/production/logs/test-1-22/1551518684240/test-portal-acceptance-pullrequest(master)/3440/functional-tomcat90-mysql57-jdk8/29/0/jenkins-console.txt.gz"">Console Output</a></div></li><li><div><a href=""https://test-1-21.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/AXIS_VARIABLE=0,label_exp=!master/224444//testReport/com.liferay.poshi.runner/PoshiRunner/test_LocalFile_CPUsersandorganizations_AddSuborganization_"">LocalFile.CPUsersandorganizations#AddSuborganization</a> - <a href=""https://testray.liferay.com/reports/production/logs/test-1-22/1551518684240/test-portal-acceptance-pullrequest(master)/3440/functional-tomcat90-mysql57-jdk8/29/0/LocalFile.CPUsersandorganizations_AddSuborganization/index.html.gz"">Poshi Report</a> - <a href=""https://testray.liferay.com/reports/production/logs/test-1-22/1551518684240/test-portal-acceptance-pullrequest(master)/3440/functional-tomcat90-mysql57-jdk8/29/0/LocalFile.CPUsersandorganizations_AddSuborganization/summary.html.gz"">Poshi Summary</a> - <a href=""https://testray.liferay.com/reports/production/logs/test-1-22/1551518684240/test-portal-acceptance-pullrequest(master)/3440/functional-tomcat90-mysql57-jdk8/29/0/jenkins-console.txt.gz"">Console Output</a></div></li><li><div><a href=""https://test-1-21.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/AXIS_VARIABLE=0,label_exp=!master/224444//testReport/com.liferay.poshi.runner/PoshiRunner/test_LocalFile_CPUsersandorganizations_DeleteOrganization_"">LocalFile.CPUsersandorganizations#DeleteOrganization</a> - <a href=""https://testray.liferay.com/reports/production/logs/test-1-22/1551518684240/test-portal-acceptance-pullrequest(master)/3440/functional-tomcat90-mysql57-jdk8/29/0/LocalFile.CPUsersandorganizations_DeleteOrganization/index.html.gz"">Poshi Report</a> - <a href=""https://testray.liferay.com/reports/production/logs/test-1-22/1551518684240/test-portal-acceptance-pullrequest(master)/3440/functional-tomcat90-mysql57-jdk8/29/0/LocalFile.CPUsersandorganizations_DeleteOrganization/summary.html.gz"">Poshi Summary</a> - <a href=""https://testray.liferay.com/reports/production/logs/test-1-22/1551518684240/test-portal-acceptance-pullrequest(master)/3440/functional-tomcat90-mysql57-jdk8/29/0/jenkins-console.txt.gz"">Console Output</a></div></li></ol></div></li><li><div><a href=""https://test-1-21.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/AXIS_VARIABLE=1,label_exp=!master/224444//consoleText"">AXIS_VARIABLE=1,label_exp=!master #224444</a><ol><li><div><a href=""https://test-1-21.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/AXIS_VARIABLE=1,label_exp=!master/224444//testReport/com.liferay.poshi.runner/PoshiRunner/test_LocalFile_CPUsersandorganizations_EditOrganizationSite_"">LocalFile.CPUsersandorganizations#EditOrganizationSite</a> - <a href=""https://testray.liferay.com/reports/production/logs/test-1-22/1551518684240/test-portal-acceptance-pullrequest(master)/3440/functional-tomcat90-mysql57-jdk8/29/1/LocalFile.CPUsersandorganizations_EditOrganizationSite/index.html.gz"">Poshi Report</a> - <a href=""https://testray.liferay.com/reports/production/logs/test-1-22/1551518684240/test-portal-acceptance-pullrequest(master)/3440/functional-tomcat90-mysql57-jdk8/29/1/LocalFile.CPUsersandorganizations_EditOrganizationSite/summary.html.gz"">Poshi Summary</a> - <a href=""https://testray.liferay.com/reports/production/logs/test-1-22/1551518684240/test-portal-acceptance-pullrequest(master)/3440/functional-tomcat90-mysql57-jdk8/29/1/jenkins-console.txt.gz"">Console Output</a></div></li></ol></div></li></ol></div></li><li><div><h5><a href=""https://test-1-5.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/275460/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat90-mysql57-jdk8/31</a></h5><div><h6>Job Results:</h6><p>25 Tests Passed.<br/>1 Test Failed.</p></div><ol><li><div><a href=""https://test-1-5.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/AXIS_VARIABLE=0,label_exp=!master/275460//consoleText"">AXIS_VARIABLE=0,label_exp=!master #275460</a><ol><li><div><a href=""https://test-1-5.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/AXIS_VARIABLE=0,label_exp=!master/275460//testReport/com.liferay.poshi.runner/PoshiRunner/test_LocalFile_PGMediagallery_DeleteFolderDocument_"">LocalFile.PGMediagallery#DeleteFolderDocument</a> - <a href=""https://testray.liferay.com/reports/production/logs/test-1-22/1551518684240/test-portal-acceptance-pullrequest(master)/3440/functional-tomcat90-mysql57-jdk8/31/0/LocalFile.PGMediagallery_DeleteFolderDocument/index.html.gz"">Poshi Report</a> - <a href=""https://testray.liferay.com/reports/production/logs/test-1-22/1551518684240/test-portal-acceptance-pullrequest(master)/3440/functional-tomcat90-mysql57-jdk8/31/0/LocalFile.PGMediagallery_DeleteFolderDocument/summary.html.gz"">Poshi Summary</a> - <a href=""https://testray.liferay.com/reports/production/logs/test-1-22/1551518684240/test-portal-acceptance-pullrequest(master)/3440/functional-tomcat90-mysql57-jdk8/31/0/jenkins-console.txt.gz"">Console Output</a></div></li></ol></div></li></ol></div></li><li><div><h5><a href=""https://test-1-15.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/193142/"">test-portal-acceptance-pullrequest-batch(master)/functional-tomcat90-mysql57-jdk8/47</a></h5><div><h6>Job Results:</h6><p>1 Test Passed.<br/>1 Test Failed.</p></div><ol><li><div><a href=""https://test-1-15.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/AXIS_VARIABLE=0,label_exp=!master/193142//consoleText"">AXIS_VARIABLE=0,label_exp=!master #193142</a><ol><li><div><a href=""https://test-1-15.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/AXIS_VARIABLE=0,label_exp=!master/193142//testReport/com.liferay.poshi.runner/PoshiRunner/test_LocalFile_CPUsersandorganizations_AddOrganizationTeam_"">LocalFile.CPUsersandorganizations#AddOrganizationTeam</a> - <a href=""https://testray.liferay.com/reports/production/logs/test-1-22/1551518684240/test-portal-acceptance-pullrequest(master)/3440/functional-tomcat90-mysql57-jdk8/47/0/LocalFile.CPUsersandorganizations_AddOrganizationTeam/index.html.gz"">Poshi Report</a> - <a href=""https://testray.liferay.com/reports/production/logs/test-1-22/1551518684240/test-portal-acceptance-pullrequest(master)/3440/functional-tomcat90-mysql57-jdk8/47/0/LocalFile.CPUsersandorganizations_AddOrganizationTeam/summary.html.gz"">Poshi Summary</a> - <a href=""https://testray.liferay.com/reports/production/logs/test-1-22/1551518684240/test-portal-acceptance-pullrequest(master)/3440/functional-tomcat90-mysql57-jdk8/47/0/jenkins-console.txt.gz"">Console Output</a></div></li></ol></div></li></ol></div></li><li>...</li></ol></details></details></html>",True,False,4,424.7
HIINTEL/bingreward/94,2019-03-02T12:55:36Z,False,5c7cc9716480fdaeb625751c,Closing this in favor of #95,True,False,1,0.0
brianchandotcom/liferay-portal/68848,2019-03-02T16:29:03Z,False,5c7f348e6480fdad3a47024f,Merged. Thx.,True,False,4,424.7
callstack_____react-native-paper_____485,2019-03-02T17:22:52Z,True,callstack_____react-native-paper_____485_____468940642,"Pushed the requested changes here: https://github.com/callstack/react-native-paper/compare/pr/485

Seems when using our `Portal`, the menu is under the statusbar. So we need to handle it and then merge.
",True,True,55,342611.05
openshift/origin/21978,2019-03-03T02:02:18Z,False,5c7f68c26480fdb2aefa20ad,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
openshift/origin/21978,2019-03-03T08:05:19Z,False,5c7f749c6480fdb19fffc2e9,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
openshift/origin/21978,2019-03-03T10:06:17Z,False,5c7f7a866480fdaeebf079ee,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
openshift/origin/21978,2019-03-03T12:07:16Z,False,5c7f7ea26480fda99e785bfc,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
openshift/origin/21978,2019-03-03T14:08:24Z,False,5c7f862a6480fdac8660ea79,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
openshift/origin/21978,2019-03-03T16:09:18Z,False,5c7f8d676480fdae73e0cd23,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
openshift/origin/21978,2019-03-03T18:10:25Z,False,5c7f968c6480fda953345ef7,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
openshift/origin/21978,2019-03-03T20:11:29Z,False,5c7f9da76480fda901b98e01,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
callstack_____react-native-paper_____485,2019-03-03T21:30:22Z,True,callstack_____react-native-paper_____485_____469066397,"To solve the status bar issue, should a combination `SafeAreaView` and `StatusBar.currentHeight` do, or is there any other we handle it in this library?",True,True,55,342611.05
openshift/origin/21978,2019-03-03T22:12:18Z,False,5c7fa54e6480fdaeb62714c0,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
callstack_____react-native-paper_____485,2019-03-03T23:17:44Z,True,callstack_____react-native-paper_____485_____469075882,"> To solve the status bar issue, should a combination SafeAreaView and StatusBar.currentHeight do, or is there any other we handle it in this library?

Let's do it for now. We can refactor to extract this logic later.",True,True,55,342611.05
openshift/origin/21978,2019-03-04T00:13:16Z,False,5c7fab6d6480fdafe4130eee,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
openshift/origin/21978,2019-03-04T02:14:20Z,False,5c7fb1826480fdaeb6271c6d,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
openshift/origin/21978,2019-03-04T04:15:17Z,False,5c7fb7cb6480fda96c9e0f6e,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
openshift/origin/21978,2019-03-04T06:16:18Z,False,5c7fc0896480fdb2aefa46b6,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
openshift/origin/21978,2019-03-04T08:17:15Z,False,5c7fc9906480fdb24df8223c,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
apache/incubator-dubbo/3500,2019-03-04T09:00:01Z,False,5c7df47c6480fda901b88fdd,this comments looks unnecessary to me.,True,False,13,20122.733333333334
webpack_____webpack-dev-server_____1664,2019-03-04T09:14:04Z,True,webpack_____webpack-dev-server_____1664_____469175556,Looks good! Ready to merge?,True,True,39,88465.16666666667
apache/incubator-dubbo/3500,2019-03-04T09:37:03Z,False,5c7df47b6480fdadaefbdd6f,"since it's builder, we should make all constructor **private**",True,False,13,20122.733333333334
webpack_____webpack-dev-server_____1664,2019-03-04T09:40:02Z,True,webpack_____webpack-dev-server_____1664_____469184574,"@evilebottnawi it's ready but for some weird reason the test keeps failing in node 6. The proxy I use fails with a EADDRNOTAVAIL error. I've been trying to repro in a container with node 6.16.0 (same version Appveyor uses), but it works just fine and the test passes without problems. Any idea why this could be happening?",True,True,39,88465.16666666667
webpack_____webpack-dev-server_____1664,2019-03-04T09:42:27Z,True,webpack_____webpack-dev-server_____1664_____469185387,"@rlamana 
```
 console.info node_modules/http-proxy-middleware/lib/logger.js:77
      [HPM] Proxy created: /  ->  http://0.0.0.0:8080
    console.error node_modules/http-proxy-middleware/lib/logger.js:89
      [HPM] Error occurred while trying to proxy request /sockjs-node from localhost:9050 to http://0.0.0.0:8080 (EADDRNOTAVAIL) (https://nodejs.org/api/errors.html#errors_common_system_errors)
    console.error node_modules/http-proxy-middleware/lib/logger.js:89
      [HPM] Error occurred while trying to proxy request /main from localhost:9050 to http://0.0.0.0:8080 (EADDRNOTAVAIL) (https://nodejs.org/api/errors.html#errors_common_system_errors)
  ● Client code › behind a proxy › responds with a 200
    expected 200 ""OK"", got 500 ""Internal Server Error""
      at Test.Object.<anonymous>.Test._assertStatus (node_modules/supertest/lib/test.js:268:12)
      at Test.Object.<anonymous>.Test._assertFunction (node_modules/supertest/lib/test.js:283:11)
      at Test.Object.<anonymous>.Test.assert (node_modules/supertest/lib/test.js:173:18)
      at localAssert (node_modules/supertest/lib/test.js:131:12)
      at node_modules/supertest/lib/test.js:128:5
      at Test.Object.<anonymous>.Request.callback (node_modules/superagent/lib/node/index.js:756:3)
      at IncomingMessage.parser (node_modules/superagent/lib/node/index.js:944:18)
  ● Client code › behind a proxy › requests websocket through the proxy with proper port number
    Timeout - Async callback was not invoked within the 30000ms timeout specified by jest.setTimeout.
      58 |     });
      59 | 
    > 60 |     it('requests websocket through the proxy with proper port number', (done) => {
         |     ^
      61 |       runBrowser().then(({ page, browser }) => {
      62 |         page
      63 |           .waitForRequest((requestObj) => requestObj.url().match(/sockjs-node/))
      at new Spec (node_modules/jest-jasmine2/build/jasmine/Spec.js:92:20)
      at Suite.it (test/Client.test.js:60:5)
      at Suite.describe (test/Client.test.js:42:3)
      at Object.describe (test/Client.test.js:24:1)
```

Maybe something doesn't handle (like errors) or something starts early then tests",True,True,39,88465.16666666667
webpack_____webpack-dev-server_____1664,2019-03-04T09:57:55Z,True,webpack_____webpack-dev-server_____1664_____469190639,"Oh, no ideas
/cc @hiroppy ",True,True,39,88465.16666666667
apache/incubator-dubbo/3500,2019-03-04T10:08:04Z,False,5c7df5e26480fdaba8b6bc8c,"> since it's builder, we should make all constructor **private**

I don't think the constructor of the builder itself should be `private`, it is the constructor of the class that the builder is to build(the `URL` class) should be `private` to prevent client code from creating the (`URL`) objects without using the builder. But for compatibility, the constructor of `URL` should not be private at this moment.

About the visibilities of the constructors, please refer to [this thread](https://stackoverflow.com/a/37028913)

> This looks a bit strange because usually a builder uses private constructor to totally avoid the creation of the instance by the client code without using the builder.

and [this post](https://dzone.com/articles/design-patterns-the-builder-pattern):

> The Pattern
The Builder pattern allows us to write readable, understandable code to set up complex objects. It is often implemented with a fluent interface, which you may have seen in tools like Apache Camel or Hamcrest. The builder will contain all of the fields that exist on the BankAccount class itself. We will configure all of the fields that we want on the builder, and then we'll use the builder to create accounts. At the same time, we'll remove the public constructor from the BankAccount class and replace it with a private constructor so that accounts can only be created via the builder.",True,False,13,20122.733333333334
apache/incubator-dubbo/3500,2019-03-04T10:13:16Z,False,5c7df62e6480fda9f95748ee,@beiwei30 what do you think,True,False,13,20122.733333333334
openshift/origin/21978,2019-03-04T10:18:16Z,False,5c7fd5806480fdb0af3079bf,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
openshift/origin/21978,2019-03-04T12:19:18Z,False,5c7fe30f6480fdaa7b762dd9,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
hibernate/hibernate-validator/1012,2019-03-04T14:14:21Z,False,5c7e0bdb6480fdad3a46484f,"I think we should just have
```java
String getName(Property property);
```
And property interface would be:
```java
public interface Property {
	String getName();
}
```
property itself should already contain information about its own name.",True,False,72,112490.03333333334
hibernate/hibernate-validator/1012,2019-03-04T14:18:42Z,False,5c7e0bcc6480fdb16c548c36,"It's unclear what's the purpose of this method. We should have javadoc for all public classes and their methods. Please also note that we should have an hierarchy of property interfaces as mentioned before.
```java
interface Property {
	String getName();
}

interface JavaBeanProperty extends Property {
	Annotation[] getDeclaredAnnotations();
	Class<?> getDeclaringClass();
}
```
It is important that we don't expose any methods in property interface that wouldn't make sense for non JavaBean properties. ",True,False,72,112490.03333333334
openshift/origin/21978,2019-03-04T14:22:06Z,False,5c7ff3906480fdafa6a16bfe,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
hibernate/hibernate-validator/1012,2019-03-04T14:22:42Z,False,5c7e0bcf6480fda901b8a183,? :smiley: ,True,False,72,112490.03333333334
hibernate/hibernate-validator/1012,2019-03-04T14:24:55Z,False,5c7e0bd26480fdac0e85bc12,We probably should have another method in `ValidatorFactoryConfigurationHelper` to determine the property name provider. `determineGetterPropertySelectionStrategy()` is a nice example.,True,False,72,112490.03333333334
hibernate/hibernate-validator/1012,2019-03-04T14:32:07Z,False,5c7e0bdd6480fda93afe06cd,We don't really need to create this `ExecutablePropertyNodeNameProvider`. We should have a wrapper of field/getter which implements `Property` interface that was added in this PR and pass it to the propertyNodeNameProvider. We even shouldn't add `propertyNodeNameProvider` as an additional field to this provider. We already have it in `JavaBeanHelper` so we probably should use it. We can add a method in that helper that would resolve a name for us. ,True,False,72,112490.03333333334
hibernate/hibernate-validator/1012,2019-03-04T14:34:14Z,False,5c7e0bcb6480fda96c9d2295,If this constructor is not used anymore we should probably remove it.,True,False,72,112490.03333333334
hibernate/hibernate-validator/1012,2019-03-04T14:37:00Z,False,5c7e0bce6480fda8c9691605,"It's still a property, right? you could have annotated getters that would be converted to json properties. If we follow the approach of resolving the name based on a `Property` this case would get covered as well.",True,False,72,112490.03333333334
hibernate/hibernate-validator/1012,2019-03-04T14:37:39Z,False,5c7e0bd56480fdb05dd4e334,Same comment as in the `AnnotationMetadataProvider`,True,False,72,112490.03333333334
hibernate/hibernate-validator/1012,2019-03-04T14:38:27Z,False,5c7e0bcb6480fdb19ffefa4a,So it seems that we don't actually need this class.,True,False,72,112490.03333333334
openshift/origin/21978,2019-03-04T18:22:30Z,False,5c8010906480fdb1e8b0146b,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
openshift/origin/21978,2019-03-04T20:25:30Z,False,5c8025476480fdafe413538f,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
openshift/origin/21978,2019-03-05T02:26:16Z,False,5c8049396480fdaeb6276c21,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
openshift/origin/21978,2019-03-05T04:37:50Z,False,5c8052de6480fda93aff4b6b,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
openshift/origin/21978,2019-03-05T06:28:08Z,False,5c805b1d6480fdb16c55e4a2,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
openshift/origin/21978,2019-03-05T08:29:08Z,False,5c8063f66480fdafe41378f1,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
webpack_____webpack-dev-server_____1664,2019-03-05T09:28:46Z,True,webpack_____webpack-dev-server_____1664_____469606578,Something wrong with CI :confused: ,True,True,39,88465.16666666667
webpack_____webpack-dev-server_____1664,2019-03-05T09:41:51Z,True,webpack_____webpack-dev-server_____1664_____469611130,"@evilebottnawi I'm still trying to figure out why the proxy fails to connect to the devserver on the appveyor Windows environment for node 6 when the host is 0.0.0.0. I tried to launch a local instance of the appveyor env in local to repro the issue and try to debug with no luck...
",True,True,39,88465.16666666667
openshift/origin/21978,2019-03-05T10:30:13Z,False,5c806d9a6480fda8b6adca22,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
P3KI/bendy/20,2019-03-05T11:57:47Z,False,5c7e65f86480fdad046b54b3,These are excellent. Highly approved :-D,True,False,1,0.0
openshift/origin/21978,2019-03-05T12:31:11Z,False,5c8078e86480fdac0e872b7c,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
openshift/origin/21978,2019-03-05T14:32:08Z,False,5c80851d6480fdb16c55fece,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
openshift/origin/21978,2019-03-05T16:33:54Z,False,5c8090dc6480fdad046c9e94,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
jorgebucaran_____hyperapp_____811,2019-03-05T17:15:33Z,True,jorgebucaran_____hyperapp_____811_____469768957,"I'm probably late to the discussion, but as requested, what I'm doing on some of my projects is dispatching a DOM event on all dom nodes created via javascript.

[Codepen example](https://codepen.io/lot3oo/pen/LgRbjj?editors=0010)

I actually used this on the hyperapp.rocks website:
https://github.com/loteoo/hyperapp-rocks/blob/master/src/app/components/ProjectViewer/index.jsx#L26

I might move to using a Custom Element, and dispatch the `mount` event on the node from there in the `connectedCallback`, which is a little more work but seems cleaner.

And as for why I'm pro life-cycle events:
They allow you to re-use logic from the view to dispatch actions/side-effects.

(from slack, for sharing purposes)

> If you have a component that needs to start a side effect when it becomes visible, and you have already some sort of logic in the view that handles displaying / hiding that component, it is very easy to ""time"" that side-effect right there, instead of duplicating that logic in some subscription.

> Common example, if you have some sort of routing inside the view, and you want to fetch data when that piece of view appears, you would need a similar (duplicate) routing in another place, probably in a subscription, that handles dispatching the side-effects.

> But it's not always a routing problem, sometimes it's for animations / transitions and all sorts of view logic that might need side effects.

The Custom Elements solution definitively does the job, but it doesn't feel as good as it would be if the hook was natively integrated in hyperapp.",True,True,25,10066.75
jorgebucaran_____hyperapp_____811,2019-03-05T17:37:45Z,True,jorgebucaran_____hyperapp_____811_____469777615,"@lukejacksonn I'm going to hold on this for now. I may circle back to this eventually, as I don't consider the current alternatives final answers to the problem either.

@loteoo Thank you for your input, I appreciate it. I've decided to remove lifecycle events. I also plan on getting rid of other features that can be used as ""escape hatches"" to V2's declarative model. I know we can (and will) find solutions to problems where lifecycle events were convenient (https://github.com/jorgebucaran/hyperapp/issues/717). These solutions may not be perfect at first, but we'll iterate on them and learn how to improve them. 

One situation where lifecycle events were convenient was when animating removing elements (delayed removals), which this PR removes. But even for that, I don't want to use lifecycle events. 



",True,True,25,10066.75
openshift/origin/21978,2019-03-05T18:35:31Z,False,5c80a0c36480fdad046ca87f,"/retest

Please review the [full test history](https://openshift-gce-devel.appspot.com/pr/21978) for this PR and help us cut down flakes.",True,False,124,41433.166666666664
openshift/origin/21978,2019-03-05T18:44:12Z,False,5c80a1dd6480fda99e78fa3c,/retest,True,False,124,41433.166666666664
openshift/origin/21978,2019-03-05T19:20:35Z,False,5c80a5f16480fda9d916ca2b,New changes are detected. LGTM label has been removed.,True,False,124,41433.166666666664
openshift/origin/21978,2019-03-05T19:21:32Z,False,5c80a6036480fdaeb6279b30,"[APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/openshift/origin/pull/21978#issuecomment-461188169"" title=""LGTM"">derekwaynecarr</a>*, *<a href=""https://github.com/openshift/origin/pull/21978#"" title=""Author self-approved"">sjenning</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=openshift%2Forigin).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[vendor/k8s.io/kubernetes/pkg/kubelet/OWNERS](https://github.com/openshift/origin/blob/master/vendor/k8s.io/kubernetes/pkg/kubelet/OWNERS)~~ [derekwaynecarr,sjenning]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->",True,False,124,41433.166666666664
webpack_____webpack-dev-server_____1664,2019-03-05T19:30:58Z,True,webpack_____webpack-dev-server_____1664_____469825870,"@evilebottnawi @hiroppy, it is now ready to merge.

Apparently, win32/node 6 has issues establishing a connection to `0.0.0.0`. I fixed it by just pointing the test proxy to localhost. The test needs the dev server to be listening on `0.0.0.0`, it doesn't really matter how the proxy redirects to it anyway, as long as it reaches the dev server.

With this PR you can now use the `runBrowser` helper I included to add more e2e testing. I hope this helps.",True,True,39,88465.16666666667
webpack_____webpack-dev-server_____1664,2019-03-05T21:17:02Z,True,webpack_____webpack-dev-server_____1664_____469860487,"Sorry for the late reply. Thank you for creating e2e environment.
@rlamana Could you change the port number because `8080` is popular number?",True,True,39,88465.16666666667
webpack_____webpack-dev-server_____1664,2019-03-05T21:27:14Z,True,webpack_____webpack-dev-server_____1664_____469863902,@hiroppy in the test code? sure! I just thought since it should be in an isolated environment it wouldn't matter. I'll just set `9001` for the dev server and `9000` for the proxy.,True,True,39,88465.16666666667
webpack_____webpack-dev-server_____1664,2019-03-05T21:53:30Z,True,webpack_____webpack-dev-server_____1664_____469872784,"Yep, thanks! I'll change the default port number(`test/helper.js`) at other pr.",True,True,39,88465.16666666667
openshift/origin/21978,2019-03-05T22:40:49Z,False,5c80c1b06480fda953350598,/retest,True,False,124,41433.166666666664
webpack_____webpack-dev-server_____1664,2019-03-06T04:21:31Z,True,webpack_____webpack-dev-server_____1664_____469962631,/cc @evilebottnawi PTAL;),True,True,39,88465.16666666667
webpack_____webpack-dev-server_____1664,2019-03-06T09:28:26Z,True,webpack_____webpack-dev-server_____1664_____262855952,"/cc @rlamana Looks we catch bug, when we use `API`, hot plugin should be added too, can you create issue?",True,True,39,88465.16666666667
doomspork/elixir-companies/481,2019-03-06T18:16:01Z,False,5c813ab16480fdae73e18e6f,"Wow, I haven't seen this approach before, I would typically do a simple redirect on a controller action, care to explain this to me a bit?",True,False,7,65.23333333333333
doomspork/elixir-companies/481,2019-03-06T18:29:22Z,False,5c813c616480fdaa7b76fa38,"@gemantzu  oh really I applied this thinking it would be the standard approach since we don't have a matching controller action, So what I do here is I pass the options from the router to my plug, the important bit is the `to` key which accepts a path and the send the user along to that given url

You can see the relevant docs here 
https://hexdocs.pm/phoenix/Phoenix.Controller.html#redirect/2 ... I can switch it up to  standard redirect if you feel this is overkill?",True,False,7,65.23333333333333
doomspork/elixir-companies/481,2019-03-06T18:57:29Z,False,5c813fe76480fdac8661e15c,"The issue I came up with while testing your branch is that you do not have a :to key set anywhere, and as a result, Phoenix.redirect/2 fails. Was it working on your machine? You probably wanted to do it in the router, instead of using `get ""/hiring"", Redirect, ""browse?type=hiring""` => `get ""/hiring"", Redirect, to: ""/browse?type=hiring""`",True,False,7,65.23333333333333
doomspork/elixir-companies/481,2019-03-06T19:01:08Z,False,5c813ff36480fdb1e8b0b80c,"@gemantzu  aah thats was my last change I didn't add it to my amend, good catch",True,False,7,65.23333333333333
doomspork/elixir-companies/481,2019-03-06T19:10:13Z,False,5c813ff36480fdb1e8b0b80d,"You have to add a leading ""/"" in the path, otherwise it's not considered as one. :)",True,False,7,65.23333333333333
doomspork/elixir-companies/481,2019-03-06T19:15:07Z,False,5c813ff36480fdb1e8b0b80e,@gemantzu your diligence is not human! ,True,False,7,65.23333333333333
doomspork/elixir-companies/481,2019-03-06T19:21:15Z,False,5c813ff36480fdb1e8b0b80f,Thank you @zacck and @gemantzu 💜 ,True,False,7,65.23333333333333
webpack_____webpack-dev-server_____1664,2019-03-07T03:25:44Z,True,webpack_____webpack-dev-server_____1664_____263225475,"I assumed that was the API expected behavior, so I didn't think it was a bug. It all makes sense now. I will create the issue then.",True,True,39,88465.16666666667
webpack_____webpack-dev-server_____1664,2019-03-07T05:07:21Z,True,webpack_____webpack-dev-server_____1664_____263239396,I created issue #1703.,True,True,39,88465.16666666667
eclipse/che/12843,2019-03-07T08:47:31Z,False,5c817f8b6480fdaf71acd77f,@amisevsk could you also add old traces screenshot example? ,True,False,73,19438.75
eclipse/che/12843,2019-03-07T09:02:47Z,False,5c80df846480fdb102079b49,"It can not be null - it is class. It WILL be instantiated by Guice on demand if nothing is bound. Apart from that it doesn't make sense to use this class AFAIK since you can just bind optional `Tracer`. Please, clean this up - I'm not sure I understand why this helper is needed at all. ",True,False,73,19438.75
eclipse/che/12843,2019-03-07T09:12:08Z,False,5c80e9f06480fdb05dd68f20,Tracer and workspace ID are not changed during the life cycle of this class. Why not move them to Phase constructor  and not pass them on every call?,True,False,73,19438.75
eclipse/che/12843,2019-03-07T09:29:53Z,False,5c80e9ef6480fda89e17a70d,Why don't we inject tracer on object construction? It would simplify the code,True,False,73,19438.75
eclipse/che/12843,2019-03-07T09:31:18Z,False,5c80e9fc6480fdaa5cda52e4,Could we move this code into a separate method? This would simplify the method,True,False,73,19438.75
eclipse/che/12843,2019-03-07T09:38:01Z,False,5c80e9f46480fdaa1a0470c2,"Could you move this to a separate method? This would simplify the code.
```",True,False,73,19438.75
eclipse/che/12843,2019-03-07T09:39:50Z,False,5c80e9f06480fdac0e876b10,Should we close it in any case or only in a successful case?,True,False,73,19438.75
eclipse/che/12843,2019-03-07T09:40:54Z,False,5c80e9ec6480fda918e1bf55,This complicates code quite significantly. Can you move it to a separate method?,True,False,73,19438.75
eclipse/che/12843,2019-03-07T09:45:40Z,False,5c80e9ee6480fda88cb0c757,"General topic - not about this PR changes:
Wondering if we need to add some utils to tracing framework since we have a lot of places with the same code snippet pattern - if span is present finish it. Maybe we should have some helper class that is created and finished nevertheless the tracer is null or not. This would simplify code a bit.",True,False,73,19438.75
eclipse/che/12843,2019-03-07T09:56:44Z,False,5c80ec196480fdac8661b120,"It seems this is part of the tracing framework I didn't really understand. Still don't think it is clean, but OK to leave it as is since it is already use in other places",True,False,73,19438.75
eclipse/che/12843,2019-03-07T10:20:15Z,False,5c810fce6480fda953352f05,Does it make sense to explicitly trace this method when it's only called from `InternalRuntime#start()` which is itself also traced and does very little on top of calling this method?,True,False,73,19438.75
eclipse/che/12843,2019-03-07T10:39:04Z,False,5c810fe06480fdaf34cb2ca3,This should mark the span the same way `finishSpanAsFailure` did if `ex` is non-null.,True,False,73,19438.75
eclipse/che/12843,2019-03-07T11:51:59Z,False,5c810fd46480fdb19f00a7f2,"Couldn't the pair `startTracingPhase` and `finishSpanIfExists` be replaced by merely annotating the methods as `@Traced`?
It would require a little bit of refactoring, because different subclasses handle the spans slightly differently, but I think it would improve the readability of the code if it were possible.",True,False,73,19438.75
eclipse/che/12843,2019-03-07T13:53:18Z,False,5c817f8b6480fdaf71acd77e,"Yeah I don't understand it either, but it was the way it's done in other areas. AFAICT it's just `Optional<Tracer>` which I agree seems not useful.",True,False,73,19438.75
uncovertruth/django-lookup-extensions/303,2019-03-07T13:56:22Z,False,5c81b8986480fdaba8b8f82f,Closing this in favor of #304,True,False,1,0.0
eclipse/che/12843,2019-03-07T13:59:58Z,False,5c8125246480fda918e1e11b,We had a discussion in platform team chat https://chat.openshift.io/developers/pl/tda3ybd8epfsmgewmgi1uhhb9c,True,False,73,19438.75
eclipse/che/12843,2019-03-07T14:22:44Z,False,5c812a716480fdad6f05ffc5,"I tried using @Traced annotations but could not get it to work (traces just don't show up). That could be a lack of understanding on my part wrt how tracing works.

I'll move the passed variables to instance vars on `BrokerPhase`, that's a good idea.",True,False,73,19438.75
eclipse/che/12843,2019-03-07T14:33:30Z,False,5c812cfa6480fdb16c565c85,If object is not injected by Guice  annotation should not work,True,False,73,19438.75
eclipse/che/12843,2019-03-07T15:28:59Z,False,5c8139f56480fda953354738,"@garagatyi Right, of course.",True,False,73,19438.75
eclipse/che/12843,2019-03-07T15:29:14Z,False,5c813a0e6480fda9d9171cd1,KubernetesDeployments isn't injected,True,False,73,19438.75
openshift/origin/21978,2019-03-07T15:41:52Z,False,5c81c5c36480fdafe414275f,/lgtm,True,False,124,41433.166666666664
openshift/origin/21978,2019-03-07T15:42:19Z,False,5c81c5e16480fdae1b5ac819,"[APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/openshift/origin/pull/21978#issuecomment-470576206"" title=""LGTM"">derekwaynecarr</a>*, *<a href=""https://github.com/openshift/origin/pull/21978#"" title=""Author self-approved"">sjenning</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=openshift%2Forigin).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[vendor/k8s.io/kubernetes/pkg/kubelet/OWNERS](https://github.com/openshift/origin/blob/master/vendor/k8s.io/kubernetes/pkg/kubelet/OWNERS)~~ [derekwaynecarr,sjenning]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->",True,False,124,41433.166666666664
eclipse/che/12843,2019-03-07T16:02:55Z,False,5c8141e66480fdafa6a21efd,Than we can pass it at the object construction time. Might still make code cleaner,True,False,73,19438.75
eclipse/che/12843,2019-03-07T18:00:28Z,False,5c815da86480fdad6f061e97,"I think we should tune this specific trace in this way (with the environment variable).
Agree that db tracing is quite talkative and it makes sense to remove/disable it or make it configurable. 
We can do that with jaeger configuration.
1. To disable we can use Jaeger configuration https://www.jaegertracing.io/docs/1.10/sampling/#collector-sampling-configuration
2. With named parameter
3. Remove it at all.

I would say 3->2->1 would be my vote list. @metlos @ibuziuk @garagatyi  wdyt?
Anyway I think it's worth of separate issue/PR",True,False,73,19438.75
knative/eventing-sources/230,2019-03-07T19:18:44Z,False,5c81e1726480fda9d9177e97,"[APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/knative/eventing-sources/pull/230#pullrequestreview-211971204"" title=""Approved"">grantr</a>*, *<a href=""https://github.com/knative/eventing-sources/pull/230#"" title=""Author self-approved"">matzew</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[OWNERS](https://github.com/knative/eventing-sources/blob/master/OWNERS)~~ [grantr]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->",True,False,1,0.0
eclipse/che/12843,2019-03-08T03:41:11Z,False,5c8210d26480fda99e79ea65,"## use MockTracer here (needs CQ)

https://github.com/eclipse/che/blob/61b59fa06658eeb849d37bf678da380da0574a8e/core/commons/che-core-commons-tracing/src/test/java/org/eclipse/che/commons/tracing/TracerUtilTest.java#L46-L51

---

###### This comment was generated by [todo](https://todo.jasonet.co) based on a `TODO` comment in 61b59fa06658eeb849d37bf678da380da0574a8e in #12843. cc @amisevsk.",True,False,73,19438.75
eclipse/che/12843,2019-03-08T03:41:43Z,False,5c81e5ad6480fda89e17fdb0,Moved to `TracerUtil`,True,False,73,19438.75
eclipse/che/12843,2019-03-08T03:41:48Z,False,5c81e5b56480fdafe4143b2d,Moved to `TracerUtil`,True,False,73,19438.75
eclipse/che/12843,2019-03-08T03:41:51Z,False,5c81e5d96480fdadd603a923,Moved to `TracerUtil`,True,False,73,19438.75
eclipse/che/12843,2019-03-08T03:42:06Z,False,5c81e5df6480fda9f9595249,I've reworked it a bit to have a utility class that simplifies these steps.,True,False,73,19438.75
eclipse/che/12843,2019-03-08T03:42:36Z,False,5c81e5e96480fdaa7b774b6f,Done.,True,False,73,19438.75
eclipse/che/12843,2019-03-08T03:43:46Z,False,5c81e6316480fdac86623f41,I agree with those options and the order; I mostly didn't want to remove it wholesale since I didn't fully understand its purpose.,True,False,73,19438.75
eclipse/che/12843,2019-03-08T03:45:51Z,False,5c81e6aa6480fdadaefd00f4,"I generally don't think that tracing each database access is worthwhile, since we're not getting very actionable information (e.g. an `UPDATE` takes a long time -- what do we do about it). It would be more useful to track things like number database operations, average time, etc.",True,False,73,19438.75
eclipse/che/12843,2019-03-08T04:06:11Z,False,5c81eb726480fdad046d66fc,"Good catch, reworked this. It's a minor hassle since closing a scope twice is undefined behavior, so the close call is now in the finally and we can add a failure status if necessary.",True,False,73,19438.75
eclipse/che/12843,2019-03-08T04:10:37Z,False,5c81ec726480fdb2aefb8ffd,"This is worth considering.

`KubernetesDeployments` is created by `KubernetesNamespace`, which is created by the factory... etc. We would have to pass the tracer down all the way from `KubernetesRuntimeContext`, which seems more complex to just use it in this one method. OTOH, it would allow adding tracing to other KubernetesDeployments methods down the line.",True,False,73,19438.75
eclipse/che/12843,2019-03-08T04:12:10Z,False,5c81eccf6480fda88cb1606b,"You're right -- I added it early when it was more useful but in refactoring it became meaningless.

Good catch.",True,False,73,19438.75
eclipse/che/12843,2019-03-08T04:18:46Z,False,5c81ee666480fda96c9f573c,Moved to `TracerUtil`.,True,False,73,19438.75
eclipse/che/12843,2019-03-08T04:20:07Z,False,5c8213c16480fdb019760f0b,"I kind of messed up the git log in rebasing, but the general changes from the original PR are

- Minor cleanup / fixes
- Extract common operations (check if tracer is null, create span, finish span) to a utility class for simplicity.",True,False,73,19438.75
eclipse/che/12843,2019-03-08T05:18:45Z,False,5c8218f66480fdb0197611ef,"I finally got around to capturing traces for comparison.

### Current PR
![test-eclipse-che 192 168 42 147 nip io_trace_ccafa44a56e57ca1 3](https://user-images.githubusercontent.com/16168279/54008980-038ba180-4137-11e9-9663-e5b0bdbde289.png)
Note, compared to the original, this one has all traces expanded (figured out how to capture the entire window in a screenshot)

### Che 7 workspace start, **db traces disabled**
![test-eclipse-che 192 168 42 147 nip io_trace_ccafa44a56e57ca1 2](https://user-images.githubusercontent.com/16168279/54007963-82321000-4132-11e9-8dd7-532197a0b1e4.png)
Improvements in this PR
- Poor tracing for broker (most of the trace for brokering is empty)
- `machine.create` traces don't split pod start from server start.
- `machine.create` traces extend past end of parent (`OpenShiftInternalRuntime#startMachines`) so if parent trace is collapsed, it look like all child traces end well before parent `OpenShiftInternalRuntime#start`

### For fun, current `master` with db traces enabled
![test-eclipse-che 192 168 42 147 nip io_trace_ccafa44a56e57ca1 1](https://user-images.githubusercontent.com/16168279/54008080-f8cf0d80-4132-11e9-97d1-c568d5308aa2.png)
",True,False,73,19438.75
eclipse/che/12843,2019-03-10T12:05:31Z,False,5c84fec26480fdad6f080897,@amisevsk  can you comment your opinion at  https://github.com/eclipse/che/issues/12851?,True,False,73,19438.75
callstack_____react-native-paper_____485,2019-03-10T16:02:10Z,True,callstack_____react-native-paper_____485_____264045951,"@satya164 thanks for adding this, I have merged your change to this branch.",True,True,55,342611.05
callstack_____react-native-paper_____485,2019-03-10T16:02:17Z,True,callstack_____react-native-paper_____485_____264045955,Done,True,True,55,342611.05
callstack_____react-native-paper_____485,2019-03-10T16:03:47Z,True,callstack_____react-native-paper_____485_____264046019,I have changed it to remove the inner view and just add the `onLayout` on the outer view,True,True,55,342611.05
eclipse/che/12843,2019-03-11T09:00:43Z,False,5c8625086480fdacb6f63100,"Not sure it is purpose of this PR to remove this completely. Every distinct operation trace doesn't say much, but all of them overall do say that we have HUGE amount of DB calls on every workspace operation.",True,False,73,19438.75
eclipse/che/12843,2019-03-11T09:05:11Z,False,5c8626146480fdb019785bb6,@amisevsk thanks a lot for the images and explanations - they are very helpful. Adding them on PR creation would really help to review PR faster.,True,False,73,19438.75
eclipse/che/12843,2019-03-11T09:15:38Z,False,5c862f456480fda901bd2a07,Should we also finish span when `ex != null`? This case is checked above,True,False,73,19438.75
eclipse/che/12843,2019-03-11T09:17:26Z,False,5c862f4b6480fdb05dd920b9,Why not building that span before lambda block? This would allow us not separating active span retrieval and building span.,True,False,73,19438.75
eclipse/che/12843,2019-03-11T09:20:17Z,False,5c862f506480fdab05c7079a,Refactoring this with moving span creation code into a separate method would simplify this method. Since this method is about bootstrapping and not tracing it would benefit from moving tracing details out of its implementation details,True,False,73,19438.75
eclipse/che/12843,2019-03-11T09:24:15Z,False,5c862f4d6480fdac34d30944,I still think that it is better to let construction phase pass this dependency because passing tracing as `waitRunningAsync` argument violates SRP of this method. This distracts dev from the purpose of this method.,True,False,73,19438.75
eclipse/che/12843,2019-03-11T09:32:42Z,False,5c862f496480fdb24dfbb574,If a case of an exception it could be bypassed. Should we move it to finally section?,True,False,73,19438.75
eclipse/che/12843,2019-03-11T09:34:15Z,False,5c862f466480fdacb6f6341b,Subscribing is immediate whereas listening is not. But actual listening is not traced here. Should we remove this tracing?,True,False,73,19438.75
eclipse/che/12843,2019-03-11T09:34:39Z,False,5c862f4a6480fdaa5cdd513e,If a case of an exception it could be bypassed. Should we move it to finally section?,True,False,73,19438.75
eclipse/che/12843,2019-03-11T09:36:02Z,False,5c862f4f6480fdac8664800b,Maybe it is better to use your new tracing util?,True,False,73,19438.75
eclipse/che/12843,2019-03-11T10:01:17Z,False,5c8633236480fdb05dd924c9,"ok let's add an ability to disable db traces in this pr.
maybe the condition should be like: 
```java
Boolean.valueOf(System.getenv(""CHE_DB_TRACING_ENABLED"")) && Boolean.valueOf(System.getenv(""CHE_TRACING_ENABLED""))
``` 
wdyt?",True,False,73,19438.75
eclipse/che/12843,2019-03-11T10:04:47Z,False,5c8634006480fdafa6a4b8d8,"@amisevsk @garagatyi @metlos wdyt will we simplify logic if we use NoopTracer implementation in case if tracing is not enabled. I see a lot of null checks, maybe we can avoid that?",True,False,73,19438.75
eclipse/che/12843,2019-03-11T13:11:22Z,False,5c92a7cf6480fdf34df9270b,"The way the machine boot chain works means that if the span is defined before the lambda block, the trace starts when the chain is created (i.e. the check servers span starts at the same time as the wait running async span). Doing it this way enables the check servers span to start immediately after wait running async is done.

I agree that this is pretty opaque, I'll add a comment explaining this.",True,False,73,19438.75
eclipse/che/12843,2019-03-11T13:36:50Z,False,5c8665b36480fda8c96da762,Makes sense. Thanks for the explanation,True,False,73,19438.75
eclipse/che/12843,2019-03-11T14:25:47Z,False,5c92a7cf6480fdf34df9270c,"I'm not sure how it would be possible to move to a separate method, could you elaborate? I agree that it is a lot of cruft added to this method, but don't see a way around it.",True,False,73,19438.75
eclipse/che/12843,2019-03-11T14:42:34Z,False,5c92a7cf6480fdf34df9270d,"I mean:
```java
private void buildCheckServerSpan(Span activeSpan, KubernetesMachineImpl machine) {
              return tracerUtil.buildSpan(
              ""CheckServers"",
              activeSpan,
              getContext().getIdentity().getWorkspaceId(),
              machine.getName());
}
```
and call here 
```java
final Span tracingSpan = buildCheckServerSpan(activeSpan, machine);
```
But it is up to you whether to do this or not - rather matter of taste since we don't have any code purity standards in Che",True,False,73,19438.75
eclipse/che/12843,2019-03-11T15:04:36Z,False,5c867a476480fdadd6064750,"@skabashnyuk I agree that NoopTracer would simplify things on our end, but from a first glance, it could be a significant refactor due to how tracing is enabled currently. I'll look into it.",True,False,73,19438.75
eclipse/che/12843,2019-03-11T17:49:27Z,False,5c86a0ea6480fdaf34cf067b,"Fixed, although this adds some mess and complexity.",True,False,73,19438.75
eclipse/che/12843,2019-03-11T17:49:44Z,False,5c86a0ee6480fda96ca1a84d,Added comment explaining the reasoning.,True,False,73,19438.75
eclipse/che/12843,2019-03-11T17:50:55Z,False,5c86a1376480fda8e1949f38,Refactored `KubernetesDeployments` to take the utils at creation in commit https://github.com/eclipse/che/pull/12843/commits/8de23f7ae3170c1af09533c0b674ab2af17c8b7a,True,False,73,19438.75
eclipse/che/12843,2019-03-11T17:51:27Z,False,5c86a15a6480fdad3a4b19e5,"I agree that it's better, especially since tracerUtil is not `nullable` like the normal tracer is.",True,False,73,19438.75
eclipse/che/12843,2019-03-11T17:52:52Z,False,5c86a1ae6480fdaf71af09f1,"Avoiding this would have to be done in a catch block instead of finally, otherwise the span would not complete until all remaining phases would be done (since finally won't execute until `nextPhase.execute()` is complete. 

I've added a catch block here, but it's more messy (catch exception, do something, rethrow exception)",True,False,73,19438.75
eclipse/che/12843,2019-03-11T17:53:27Z,False,5c86a1dc6480fdae1b5dbd84,"You're right, the goal was to represent all phases of brokering, but listen events is a >1ms operation. Removed.",True,False,73,19438.75
eclipse/che/12843,2019-03-11T17:54:05Z,False,5c86a1fc6480fdb05dd9617e,"Fixed in same way as for DeployBroker (catch, finish span, rethrow). I don't know if there's a better way to do this though.",True,False,73,19438.75
eclipse/che/12843,2019-03-11T17:54:53Z,False,5c92a7cf6480fdf34df9270e,It's indeed *a lot* cleaner to do that -- don't know why I didn't start there. These methods on `BrokerPhase` are totally unnecessary.,True,False,73,19438.75
cosmos/launch/39,2019-03-11T21:18:32Z,False,5c86d1296480fdb19f03acbd,:heavy_check_mark: This submission is **valid**.,True,False,1,0.0
eclipse/che/12843,2019-03-12T06:46:20Z,False,5c8756fa6480fda9d91a6785,"If ex is null function returns at line 426, so this should be an unreachable code",True,False,73,19438.75
eclipse/che/12843,2019-03-12T07:49:45Z,False,5c8765da6480fda96ca21281,"
I'm -1 with the way we are going with TracerUtil, OptionalTracer.
I think we are trying to solving null safety in a slightly complex manner.

This issue is already solved with NoopTracer, NoopSpanBuilder, NoopScopeManagerImpl.

After reading of 
https://github.com/opentracing/opentracing-java/blob/master/opentracing-util/README.md
https://github.com/opentracing/opentracing-java/blob/master/README.md
I think we should relay on opentracing standard mechanism how to work in case if Tracing is disabled - use tracer provider by container or GlobalTracer.

Also, I think we should use try-with-resource for all closable components as described in documentation instead of creating utility methods.
```
try (Scope scope = tracer.buildSpan(""ServiceHandlerSpan"").startActive(false)) {
```
As far as I can see this operation is  safe to use with NoopTracer.

",True,False,73,19438.75
eclipse/che/12843,2019-03-12T09:35:31Z,False,5c877ea76480fdaa7b7a5b6d,"I like avoiding null checks with `NoopTracer` if it's possible.
But even then it would be useful to have some class that would provide syntax sugar for us, like finish span with an error. TracerUtil can be reworked in composer manner https://github.com/sleshchenko/che/commit/8bcfa519ab54783cf666d8358888e8a33b40ae71 (it's only small parts of reworking but I hope it shows an idea).",True,False,73,19438.75
eclipse/che/12843,2019-03-12T09:42:15Z,False,5c87803d6480fda9ba1562e9,"`Bootstrap` and `checkServers` spans are managed by `KubernetesInternalRuntime`. Why can not `KubernetesInternalRuntime` manage `WaitRunningAsync` span as well? Like
```java
    final Span tracingSpan = tracerUtil
        .buildSpan(""WaitRunningAsync"", null, getContext().getIdentity().getWorkspaceId(),
            machine.getName());
    CompletableFuture<Void> waitFuture =
        namespace.deployments().waitRunningAsync(machine.getPodName())
            .whenComplete((v, ex) -> {
              if (ex != null) {
                tracerUtil.finishSpanAsFailure(tracingSpan, ex.getMessage());
              } else {
                tracerUtil.finishSpan(tracingSpan);
              }
            });
```",True,False,73,19438.75
eclipse/che/12843,2019-03-12T09:45:54Z,False,5c8781186480fda9d91a7e6c,Should not you check if an ex is null here?,True,False,73,19438.75
alliedmodders_____amxmodx_____524,2019-03-12T16:07:45Z,True,alliedmodders_____amxmodx_____524_____472065940,@djearthquake There are `Float:geoip_latitude(const ip[])` and `Float:geoip_longitude(const ip[])` defined in geoip.inc. Do you have an issue with these?,True,True,8,285296.05
alliedmodders_____amxmodx_____524,2019-03-12T16:43:30Z,True,alliedmodders_____amxmodx_____524_____472082305,"Those 2 natives do not proof back to raw coordinates as stated in my initial post. Can you show me the maths please if they do? How is ""longitude"":4.744700  zero?",True,True,8,285296.05
alliedmodders_____amxmodx_____524,2019-03-12T17:21:22Z,True,alliedmodders_____amxmodx_____524_____472098303,"They do exactly what they are supposed to. You did something wrong in your code or you didn't install the GeoIP database correctly. Please ask for assistance in the [Scripting Help](https://forums.alliedmods.net/forumdisplay.php?f=11) section on our forums. Post more information about your setup and what you did, and provide your code so people can help you out. ",True,True,8,285296.05
alliedmodders_____amxmodx_____524,2019-03-12T23:18:39Z,True,alliedmodders_____amxmodx_____524_____472217607,"amx_ctof and amx_ftoc. Is that a typo?


// native geoip_latitude(const ip[]);
static cell AMX_NATIVE_CALL amx_geoip_latitude(AMX *amx, cell *params)
{
	int length;
	char *ip = stripPort(MF_GetAmxString(amx, params[1], 0, &length));

	const char *path[] = { ""location"", ""latitude"", NULL };
	double latitude = lookupDouble(ip, path);

	return amx_ftoc(latitude);
}

// native geoip_longitude(const ip[]);
static cell AMX_NATIVE_CALL amx_geoip_longitude(AMX *amx, cell *params)
{
	int length;
	char *ip = stripPort(MF_GetAmxString(amx, params[1], 0, &length));

	const char *path[] = { ""location"", ""longitude"", NULL };
	double longitude = lookupDouble(ip, path);

	return amx_ftoc(longitude);
}

// native Float:geoip_distance(Float:lat1, Float:lon1, Float:lat2, Float:lon2, system = SYSTEM_METRIC);
static cell AMX_NATIVE_CALL amx_geoip_distance(AMX *amx, cell *params)
{
	float earthRadius = params[5] ? 3958.0 : 6370.997; // miles / km

	float lat1 = amx_ctof(params[1]) * (M_PI / 180);
	float lon1 = amx_ctof(params[2]) * (M_PI / 180);
	float lat2 = amx_ctof(params[3]) * (M_PI / 180);
	float lon2 = amx_ctof(params[4]) * (M_PI / 180);

	return amx_ftoc(earthRadius * acos(sin(lat1) * sin(lat2) + cos(lat1) * cos(lat2) * cos(lon2 - lon1)));
}",True,True,8,285296.05
alliedmodders_____amxmodx_____524,2019-03-13T08:20:43Z,True,alliedmodders_____amxmodx_____524_____472323642,"This is not a place for support. Please post in the forums. The AMXX code works, I tested it.",True,True,8,285296.05
nodejs/nodejs.dev/197,2019-03-13T12:15:20Z,False,5c88ff0b6480fdb05dda8adf,Nit: could use boolean type for simple “isRead” local variable?,True,False,12,1270.5
nodejs/nodejs.dev/197,2019-03-13T12:18:23Z,False,5c88ff0a6480fda9d91b49d5,Question for my education: why is innerRef preferred over ref? (Some lib like styled-components v4 started to use ref instead),True,False,12,1270.5
alliedmodders_____amxmodx_____524,2019-03-13T12:32:19Z,True,alliedmodders_____amxmodx_____524_____472402935,What AMXX code works? What did you test exactly? If this is not the place for support then why am I bothering testing your work for you for free and offering solutions here on this site already? How do you think we got here? The auto packaging of GeoIP sent it to the general public in a unusable form. I sorted that? Remember? The arrogance of AMXX does not match the greatness. Really guys. Good bye. I just showed you the native was returning a 0 when bash shows there is data. There is not anything wrong with my database copy or my work. Yours buddy had the problem. How quickly you forget. Why this code roundup on the forums? Then get here with this unappreciative attitude like only 3 people can program C++ really? How clannish. This site is the source of that code it's C++ not Small Pawn Alliedmodders. You want me to broadcast this further? I shredded my databases that I could use bash and pull coordinates because you are so sure of yourself and guess what it did not do anything. It's time you take more of my advice and less of your own. Your forums are a bigot troll factory. Clean it up. Your code and packaging. ,True,True,8,285296.05
nodejs/nodejs.dev/197,2019-03-13T12:54:20Z,False,5c88ff0f6480fdacb6f7c6f4,"Curious question, instead of Map, could a Set be alternative, if the data structure just tracks the unique slugs, instead of tracking k-v pairs of (slugs, is done flags)?",True,False,12,1270.5
alliedmodders_____amxmodx_____524,2019-03-13T13:12:55Z,True,alliedmodders_____amxmodx_____524_____472415957,"Helping is welcomed and appreciated, but please do it the proper way. 
Answering after a merged commit is not helpful and make difficult to track the discussion/problem.

If you have an issue, always go there: https://github.com/alliedmodders/amxmodx/issues 
**It's important**. 

For scripting related questions, the forum is also a good place, as stated Nextra.

In your case, make sure you have the latest [city database](https://geolite.maxmind.com/download/geoip/database/GeoLite2-City.tar.gz) from Maxmind site (we know if there an issue with the current shipped database).

I tested your IP and it worked as expected:

```
L 03/13/2019 - 14:07:42: [test.amxx] lat = 46.321300
L 03/13/2019 - 14:07:42: [test.amxx] long = 4.744699
```

```SourcePawn
#include <amxmodx>
#include <geoip>

public plugin_init()
{
    new const ip[] = ""109.25.197.97"";

    new const Float:lat = geoip_latitude(ip);
    new const Float:long = geoip_longitude(ip);

    log_amx(""lat = %f"", lat);
    log_amx(""long = %f"", long);
}
```
Note: for debugging, you can dump your IP data directly in the console: `geoip dump <ip>`.

If you think there is a bug, **please create an issue instead**, elaborate as much as possible, and show your code as well.



",True,True,8,285296.05
nodejs/nodejs.dev/197,2019-03-13T13:13:17Z,False,5c8903236480fda96ca2f9b6,"`ref` is definitely preferred. 

This is just a temporary workaround to pacify TS. It basically was throwing a TypeError. @ollelauribostrom had logged an issue in the gatsbyjs repo: https://github.com/gatsbyjs/gatsby/issues/12014.

Quoting @freiksenet,
>We haven't updated gatsby-link to use React>=16.4 API yet, so you can only use function refs through innerRef function. ref isn't even an allowed prop type in Gatsby link component. We definitely do want to support it though.",True,False,12,1270.5
nodejs/nodejs.dev/197,2019-03-13T13:16:12Z,False,5c8903d86480fdb2aeff6ede,"Oh, looks like https://github.com/gatsbyjs/gatsby/pull/12174 was merged! We need to upgrade our package.",True,False,12,1270.5
nodejs/nodejs.dev/197,2019-03-13T13:36:40Z,False,5c8908ac6480fdb13e488926,Sure. Added.,True,False,12,1270.5
nodejs/nodejs.dev/197,2019-03-13T13:38:27Z,False,5c8909166480fdb24dfd2d7a,"Upgraded packages (it didn't resolve the TypeError yet somehow, but that's no reason to go backwards). Reverted `innerRef`.",True,False,12,1270.5
nodejs/nodejs.dev/197,2019-03-13T13:51:42Z,False,5c890c2b6480fdaa1a08e78a,"Hmm... that's an interesting proposition. 👍 

We could keep track of the unique slugs that have been marked as read in a set. And when rendering the navigation item, we could just check if the corresponding slug is present in the set and decide is it is read.

Seems like a good idea! Will make the data structure even leaner. Trying it out right away. 💯 ",True,False,12,1270.5
nodejs/nodejs.dev/197,2019-03-13T14:21:41Z,False,5c8a3b956480fdaa7b7c143a,"Done. And done. Also, threw in early returns from the iterations as soon as the current slug is met, for good measure.

It works great and is lighter! 💯 

Thanks for the suggestion, @BeniCheni! ❤️ ",True,False,12,1270.5
hibernate/hibernate-validator/1012,2019-03-13T15:58:14Z,False,5c8929ca6480fdafa6a64a8a,"I added a commit with the changes. I tried addressing the comments to the best of my understanding. If I misinterpreted something, please do not hesitate to leave a comment.

Note that this is still a WIP, some docs are missing, some things need to be renamed, etc, but the main part should be there.",True,False,72,112490.03333333334
hibernate/hibernate-validator/1012,2019-03-13T19:29:06Z,False,5c8a00b06480fda9f95d920b,Let's use `ValidatorFactoryConfigurationHelper#determinePropertyNodeNameProvider()` here as well. ,True,False,72,112490.03333333334
hibernate/hibernate-validator/1012,2019-03-13T19:41:58Z,False,5c8a00af6480fdab05c94a0f,It seems that we are missing the resolved name for the getter case. I was thinking that we would need similar property as for the field to store the resolved name or am I missing something?,True,False,72,112490.03333333334
hibernate/hibernate-validator/1012,2019-03-13T19:55:41Z,False,5c8a00af6480fdaf71b09802,Let's put the `@Valid` on this getter rather than on the field in this case. Then it'll cover the case with getters and the comment in `JavaBeanGetter`,True,False,72,112490.03333333334
hibernate/hibernate-validator/1012,2019-03-13T20:38:36Z,False,5c8a00af6480fdac0e8c7fa5,"I've noticed there's one more place where similar anonymous class is created. Let's have a `private static` inner class in `JavaBeanHelper` implementing this interface:
```java 
private static class JavaBeanPropertyImpl implements JavaBeanProperty {
	private final Class<?> declaringClass;
	private final String name;

	private JavaBeanPropertyImpl(java.lang.reflect.Member member) {
		this( member.getDeclaringClass(), member.getName() );
	}

	private JavaBeanPropertyImpl(Class<?> declaringClass, String name) {
		this.declaringClass = declaringClass;
		this.name = name;
	}

	@Override
	public Class<?> getDeclaringClass() {
		return declaringClass;
	}

	@Override
	public String getName() {
		return name;
	}
}
```
that we can use for both cases.
With this in place we can encapsulate all the resolving name logic in this `JavaBeanHelper` by adding method that would create `JavaBeanField` 

This would also reduce the number of anonymous classes.",True,False,72,112490.03333333334
vitessio/vitess/4722,2019-03-13T21:53:27Z,False,5c897d046480fdaa5cdf2d5b,Not yet tested,True,False,11,824898.4333333333
nodejs/nodejs.dev/197,2019-03-14T05:00:29Z,False,5c89e1206480fdb1020c5d03,/gcbrun,True,False,12,1270.5
nodejs/nodejs.dev/197,2019-03-14T05:03:44Z,False,5c89e1e56480fdac0e8c682c,Preview at: https://storage.googleapis.com/staging.nodejs.dev/7efe5a0/index.html,True,False,12,1270.5
nodejs/nodejs.dev/197,2019-03-14T09:25:50Z,False,5c8a1f656480fdb1e8b56038,@LaRuaNa Reverted all the package upgrades. We can upgrade as needed on separate PRs later.,True,False,12,1270.5
callstack_____react-native-paper_____485,2019-03-14T11:24:48Z,True,callstack_____react-native-paper_____485_____472810907,@satya164 can we have your approval here for merging it?,True,True,55,342611.05
eclipse/che/12843,2019-03-15T03:32:44Z,False,5c92a7cf6480fdf34df9270f,"That's a great point, and I don't know why I didn't think of it. Thanks.",True,False,73,19438.75
eclipse/che/12843,2019-03-15T03:32:51Z,False,5c92a7cf6480fdf34df92710,"Yep, done.",True,False,73,19438.75
eclipse/che/12843,2019-03-15T03:34:14Z,False,5c92a7d06480fdf34df92711,"@skabashnyuk I agree that NoopTracer is a better option but AFAICT it's nontrivial to add with the way tracing is currently implemented (hence the `OptionalTracer`, which I still don't fully understand). I'd prefer to break that task out into its own issue and not block merging this PR.",True,False,73,19438.75
eclipse/che/12843,2019-03-15T10:39:32Z,False,5c92a7d06480fdf34df92712,@amisevsk up2you,True,False,73,19438.75
eclipse/che/12843,2019-03-15T18:28:36Z,False,5c92a7d06480fdf34df92713,ci-test,True,False,73,19438.75
eclipse/che/12843,2019-03-15T21:49:12Z,False,5c92a7d06480fdf34df92714,"Results of automated E2E tests of Eclipse Che Multiuser on OCP:
[Build details](https://ci.codenvycorp.com/job/che-pullrequests-test-ocp/1632/)
[Test report](https://ci.codenvycorp.com/job/che-pullrequests-test-ocp/1632//Selenium_20tests_20report/)
docker image: eclipseche/che-server:12843
https://github.com/orgs/eclipse/teams/eclipse-che-qa please check this report.

",True,False,73,19438.75
fffaraz_____awesome-cpp_____705,2019-03-16T19:06:54Z,True,fffaraz_____awesome-cpp_____705_____261793671,,True,True,4,5500.233333333334
adventuregamestudio_____ags_____648,2019-03-19T08:45:29Z,True,adventuregamestudio_____ags_____648_____474248968,"All good, I'll just include it as part of my SDL2 port for now.  Were you able to measure a performance difference though?

The COW implementation copy still needs to perform some checks and balances before assigning that pointer. The c++11 strings can implement something called SSO, which can store small strings (10-22 chars) within the struct without having to allocate on the heap. This means to copy these small strings you only need to copy 3 longints.",True,True,19,115511.16666666667
OpenViX_____enigma2_____399,2019-03-19T15:44:49Z,True,OpenViX_____enigma2_____399_____262515945,"This change removes the 'ALL' button as it now serves no purpose.  Its position on the keyboard layout is now used by the new 'DEL' button.  This change allows all the locale keyboards to return to their previous layouts and have the 'DEL' button in a consistent position.
",True,True,53,940.3666666666667
OpenViX_____enigma2_____399,2019-03-19T15:46:57Z,True,OpenViX_____enigma2_____399_____474434891,Please do not merge this until after we have widened the spacebar.,True,True,53,940.3666666666667
OpenViX_____enigma2_____399,2019-03-19T15:49:03Z,True,OpenViX_____enigma2_____399_____474436106,"Who is making that change?

This change is a simple adjustment to restore the previous keyboard layouts (particularly Polish).  If other changes are made then this change will become unmergeable!
",True,True,53,940.3666666666667
OpenViX_____enigma2_____399,2019-03-19T15:51:27Z,True,OpenViX_____enigma2_____399_____474437500,I'll find someone to do it.,True,True,53,940.3666666666667
OpenViX_____enigma2_____399,2019-03-19T15:52:15Z,True,OpenViX_____enigma2_____399_____474437969,"Well then this change should go in first!
",True,True,53,940.3666666666667
OpenViX_____enigma2_____399,2019-03-19T15:53:03Z,True,OpenViX_____enigma2_____399_____474438379,Why is that?,True,True,53,940.3666666666667
OpenViX_____enigma2_____399,2019-03-19T15:53:28Z,True,OpenViX_____enigma2_____399_____474438621,"To avoid merge errors and to fix the Polish locale.
",True,True,53,940.3666666666667
OpenViX_____enigma2_____399,2019-03-19T15:53:55Z,True,OpenViX_____enigma2_____399_____474438887,Why do you want that crap code imported from PLi.,True,True,53,940.3666666666667
OpenViX_____enigma2_____399,2019-03-19T15:53:57Z,True,OpenViX_____enigma2_____399_____474438916,It can be done later,True,True,53,940.3666666666667
OpenViX_____enigma2_____399,2019-03-19T15:54:24Z,True,OpenViX_____enigma2_____399_____474439170,"Broken crap code!
",True,True,53,940.3666666666667
OpenViX_____enigma2_____399,2019-03-19T15:54:29Z,True,OpenViX_____enigma2_____399_____474439239,What is crap about wide space bar?,True,True,53,940.3666666666667
OpenViX_____enigma2_____399,2019-03-19T15:55:02Z,True,OpenViX_____enigma2_____399_____474439576,"There is nothing wrong with the visuals but the code to implement it is very broken!
",True,True,53,940.3666666666667
OpenViX_____enigma2_____399,2019-03-19T15:55:52Z,True,OpenViX_____enigma2_____399_____474440011,"Nothing wrong with the idea of a wider space bar, the problem is the crap coding.",True,True,53,940.3666666666667
OpenViX_____enigma2_____399,2019-03-19T15:57:12Z,True,OpenViX_____enigma2_____399_____474440844,"Have you tested the OpenPLi code with a pop up VirtualKeyBoard skin?

Have you examined the code that makes the buttons bigger?
",True,True,53,940.3666666666667
OpenViX_____enigma2_____399,2019-03-19T15:57:59Z,True,OpenViX_____enigma2_____399_____474441247,Did you not read my answer on the forum?,True,True,53,940.3666666666667
OpenViX_____enigma2_____399,2019-03-19T15:58:26Z,True,OpenViX_____enigma2_____399_____474441494,"Which answer on which forum?
",True,True,53,940.3666666666667
OpenViX_____enigma2_____399,2019-03-19T15:59:12Z,True,OpenViX_____enigma2_____399_____474441954,The one where you asked the same question,True,True,53,940.3666666666667
OpenViX_____enigma2_____399,2019-03-19T16:00:32Z,True,OpenViX_____enigma2_____399_____474442713,"Sorry, haven't been on the forum. Have been trying to debug this other mangled code.",True,True,53,940.3666666666667
OpenViX_____enigma2_____399,2019-03-19T16:01:51Z,True,OpenViX_____enigma2_____399_____474443423,"There is no example of the OpenPLi code on a pop up window based skin.  Running the one keyboard that has been crafted to sort of work is not extensive testing.
",True,True,53,940.3666666666667
OpenViX_____enigma2_____399,2019-03-19T16:03:32Z,True,OpenViX_____enigma2_____399_____474444397,"So, you are asking if I have tested something that does not exist",True,True,53,940.3666666666667
OpenViX_____enigma2_____399,2019-03-19T16:04:45Z,True,OpenViX_____enigma2_____399_____474445149,"I haven't dismissed creating an eye candy keyboard but it will only be done if it is appropriately reasonable to do so.

I think I have some ideas on how to do it but the code is quite complex.  The more complex it become the easier it is for bugs to creep in.  I am still not sure that it is worth it.  Functionality wise the eye candy makes little usage difference.
",True,True,53,940.3666666666667
OpenViX_____enigma2_____399,2019-03-19T16:05:26Z,True,OpenViX_____enigma2_____399_____474445528,Give it a rest about eye candy.,True,True,53,940.3666666666667
OpenViX_____enigma2_____399,2019-03-19T16:06:08Z,True,OpenViX_____enigma2_____399_____474445951,"I don't remember what skins I tested against but one of them was a pop up window version without a colour button bar.

I also have a hidden option to do a pop up version in OverlayHD.
",True,True,53,940.3666666666667
OpenViX_____enigma2_____399,2019-03-19T16:07:04Z,True,OpenViX_____enigma2_____399_____474446483,"If it is a visual only change then what should it be called?  Eye candy is what this sort of change is often called.
",True,True,53,940.3666666666667
OpenViX_____enigma2_____399,2019-03-19T16:07:28Z,True,OpenViX_____enigma2_____399_____474446668,The keyboard should look like a real keyboard.,True,True,53,940.3666666666667
OpenViX_____enigma2_____399,2019-03-19T16:09:03Z,True,OpenViX_____enigma2_____399_____474447632,"Who said that?  Why was the previous version so acceptable for so many years?  My aim was to put the most common buttons in the same relative positions as on a real keyboard.  I believe that I achieved that objective.
",True,True,53,940.3666666666667
OpenViX_____enigma2_____399,2019-03-19T16:11:03Z,True,OpenViX_____enigma2_____399_____474448871,So something you want is valid. What others want is eye candy?,True,True,53,940.3666666666667
OpenViX_____enigma2_____399,2019-03-19T16:13:04Z,True,OpenViX_____enigma2_____399_____474450048,"If you want it then why aren't you coding it?

At the moment all I am seeing is obstruction to my maintaining the existing code.
",True,True,53,940.3666666666667
OpenViX_____enigma2_____399,2019-03-19T16:14:01Z,True,OpenViX_____enigma2_____399_____474450627,We'll merge your code later.,True,True,53,940.3666666666667
OpenViX_____enigma2_____399,2019-03-19T16:14:55Z,True,OpenViX_____enigma2_____399_____474451190,"Guys, this can be discussed on the forum.

@ Ian, this PR is not passing Travis CI checks, getting build error.",True,True,53,940.3666666666667
OpenViX_____enigma2_____399,2019-03-19T16:17:41Z,True,OpenViX_____enigma2_____399_____474452411,"I am still puzzled why EVERYONE accepted the original VirtualKeyBoard for so many years and no-one demanded it look any different.  I propose an enhancement to better match physical keyboards and all of the sudden I am responsible for massive disappointment that the VirtualKeyBoard is not a visible match to its physical counterpart.  Taapat only made his changes AFTER I fixed the code and proposed a better layout.  If he had coded it properly I would have used his code.  His changes are VERY poor.  The other OpenPLi enhancements are now implemented on OpenViX.
",True,True,53,940.3666666666667
OpenViX_____enigma2_____399,2019-03-19T16:18:30Z,True,OpenViX_____enigma2_____399_____474452762,"I don't understand what the Travis CI check is failing?

Can someone please explain the problem.
",True,True,53,940.3666666666667
OpenViX_____enigma2_____399,2019-03-19T16:21:39Z,True,OpenViX_____enigma2_____399_____474454085,"> 
> 
> I don't understand what the Travis CI check is failing?
> 
> Can someone please explain the problem.

This might give a glue: https://travis-ci.com/OpenViX/enigma2/builds/104981721

",True,True,53,940.3666666666667
OpenViX_____enigma2_____399,2019-03-19T16:22:16Z,True,OpenViX_____enigma2_____399_____474454352,"There is no need to shout.

It was PR2 suggestion to have the wide keyboard, you rejected it.

It's now added to PLI. I'd like to have it in ViX too.

What's the point keep changing things to fix it again and again. Let's get it right in the first place.",True,True,53,940.3666666666667
OpenViX_____enigma2_____399,2019-03-19T16:25:49Z,True,OpenViX_____enigma2_____399_____474455844,The wide spacebar to better match a real keyboard was made before the virtual keyboard got refactored. It was mentioned about page 10 in the thread. Taapat got involved in late 30s.,True,True,53,940.3666666666667
OpenViX_____enigma2_____399,2019-03-19T16:26:12Z,True,OpenViX_____enigma2_____399_____474456024,"I rejected it because it is not easy to do properly.  I still don't have a workable plan to implement it.

The OpenPLi version is broken.  Are you asking me to add broken code to OpenViX?

What is wrong with refining my code?  Why can't I commit changes to improve it?  Are you suggesting that all commited code must be finalised in a single commit?
",True,True,53,940.3666666666667
OpenViX_____enigma2_____399,2019-03-19T16:28:23Z,True,OpenViX_____enigma2_____399_____474456919,"What is broken? It looks like a real keyboard, buttons are selected like a real keyboard.

I'm not referring to colours.",True,True,53,940.3666666666667
OpenViX_____enigma2_____399,2019-03-19T16:32:31Z,True,OpenViX_____enigma2_____399_____474458608,"The errors are due to a build environment error and not my code:

> E: Unable to locate package g++-5
> E: Couldn't find any package by regex 'g++-5'
> apt-get install failed
",True,True,53,940.3666666666667
OpenViX_____enigma2_____399,2019-03-19T16:38:55Z,True,OpenViX_____enigma2_____399_____474461272,"The cursor colour changes into the Locale selection colour on some buttons.  That is not correct. 

The RED, GREEN, YELLOW and BLUE action buttons are no longer consistently displayed.  That is not correct.

There are now two versions of English.  While this is not an error it is a reversal of the code optimisation and is now bloat that is much harder to maintain.

Latvian is now promoted to be a core language even though it is basically English.  Yet more difficult to administer bloat.  This also indicates a lack of understanding how the code actually works.

Making buttons bigger was the simple part of the task.  Making the bigger buttons work consistently and properly is much harder and this has not been done.
",True,True,53,940.3666666666667
adventuregamestudio_____ags_____648,2019-03-19T17:03:53Z,True,adventuregamestudio_____ags_____648_____474471752,"> I'll just include it as part of my SDL2 port for now

how is this change related to the SDL2 port ?",True,True,19,115511.16666666667
OpenViX_____enigma2_____399,2019-03-19T18:05:41Z,True,OpenViX_____enigma2_____399_____474502893,"> The wide spacebar to better match a real keyboard was made before the virtual keyboard got refactored. It was mentioned about page 10 in the thread. Taapat got involved in late 30s.

The first mention of a larger space bar was the suggestion on page 16 by Pr2. [Post 315](https://forums.openpli.org/topic/60472-language-assistance-requested/?view=findpost&p=921739)  At the time I mentioned it would be difficult to implement and offered little in return.  This was well after the bulk of the refactored VirtualKeyBoard code was already written.

There was no further mention or request for a wider SPACE button until the bottom of page 38 in [Post 759](https://forums.openpli.org/topic/60472-language-assistance-requested/?view=findpost&p=935259) where Littlesat provided a pointer to a completely different piece of code that had implemented variable sized buttons.  That code had nothing to do with VirtualKeyBoard.py.

Taapat then jumped on the desire / need to have variable sized buttons.  Littlesat asked that the change be limited to allowing for a larger SPACE bar only.  There was no further discussion on the code changes.  Taapat simply commited his radical changes with no further discussion.  Had Taapat only coded the wider SPACE bar, as requested by Littlesat and others, then his changes may have been acceptable and workable.

If I restrain my change to simply allow for a wider SPACE bar then that should be significantly more achievable.
",True,True,53,940.3666666666667
OpenViX_____enigma2_____399,2019-03-19T18:13:10Z,True,OpenViX_____enigma2_____399_____474506918,"Are you saying a truer reflections of a keyboard caused the issues you have highlighted?

Can you document an easy to follow reproduction method to trigger the issues?

We can then test removal of the three commits and establish if theses issues are really caused by having keys that are sized similar to what users see on all other devices.

",True,True,53,940.3666666666667
OpenViX_____enigma2_____399,2019-03-19T18:34:21Z,True,OpenViX_____enigma2_____399_____474516270,Trigger what issues? Main issue is the coding is crap.,True,True,53,940.3666666666667
OpenViX_____enigma2_____399,2019-03-19T18:36:35Z,True,OpenViX_____enigma2_____399_____474517052,The issues Ian is alleging that truer representation of a real keyboard has caused.,True,True,53,940.3666666666667
OpenViX_____enigma2_____399,2019-03-20T00:16:35Z,True,OpenViX_____enigma2_____399_____474634005,"The tests for problems are easy:
1. Navigate around the grid of a keyboard that has large buttons, note that the cursor colour changes from white to yellow over some buttons.  Compare that to an unmodified layout.
2. Compare the ESC, SHIFT and ENTER buttons on the large button version and the unmodified layout.  Note colour highlighting code fails on the large button versions.
3. Find a skin that displays the VirtualKeyBoard as a pop up window without the colour button bar and tell me to what the colour buttons are mapped.
4. Look at the code and note the unwarranted duplication and complication of the English tables.
5. Note the promotion of Latvian to a root locale even though it is based on English.  More bloat and a demonstration of a lack of understanding of how the code works.
6. Look at the code, note the size growth and new complexity.  Does it add any functionality, other than look?  A look that is not working correctly.

Next use the OpenViX version and retest all of the above.  Up until Taapat's commits the code was **identical**.

I am not rating the severity of the issues.  I am simply saying that I will not deliberately write, implement, or merge, broken code.  What if this code were merged into OpenViX.  How would the functionality issues be addressed?  I suspect there would be blame allocated and the change would be reverted.  So I have actually saved people time and effort.
",True,True,53,940.3666666666667
OpenViX_____enigma2_____399,2019-03-20T00:29:47Z,True,OpenViX_____enigma2_____399_____474636487,What do you mean by pop up window?,True,True,53,940.3666666666667
OpenViX_____enigma2_____399,2019-03-20T00:31:09Z,True,OpenViX_____enigma2_____399_____474636741,He means a window that doesn't show the button bar.,True,True,53,940.3666666666667
OpenViX_____enigma2_____399,2019-03-20T00:44:13Z,True,OpenViX_____enigma2_____399_____474639464,"He is mentioning items that are irrelevant.

We will add wide buttons, then merge his code.",True,True,53,940.3666666666667
OpenViX_____enigma2_____399,2019-03-20T00:45:21Z,True,OpenViX_____enigma2_____399_____474639682,But that code doesn't work properly.,True,True,53,940.3666666666667
OpenViX_____enigma2_____399,2019-03-20T00:49:09Z,True,OpenViX_____enigma2_____399_____474640385,"![1](https://user-images.githubusercontent.com/2067864/54651261-5740a800-4ab2-11e9-99d0-fae51b742547.jpg)
",True,True,53,940.3666666666667
OpenViX_____enigma2_____399,2019-03-20T01:13:00Z,True,OpenViX_____enigma2_____399_____474644950,"Pull requests should be applied in order of submission to avoid creating merge errors.  The new code should be based on the fixed Polish locale.
",True,True,53,940.3666666666667
OpenViX_____enigma2_____399,2019-03-20T01:19:50Z,True,OpenViX_____enigma2_____399_____474646227,"> He is mentioning items that are irrelevant.

If I submitted such buggy code directly to OpenViX it would be immediately reverted as faulty.
",True,True,53,940.3666666666667
adventuregamestudio_____ags_____648,2019-03-20T01:55:42Z,True,adventuregamestudio_____ags_____648_____474653027,"> how is this change related to the SDL2 port ?

It's just where I'm doing my main work.. I occasionally pull stuff out (like this PR) to put into ags3.",True,True,19,115511.16666666667
OpenViX_____enigma2_____399,2019-03-20T06:12:57Z,True,OpenViX_____enigma2_____399_____474698400,"Abu we have two experienced coders clearly giving their advice about the code, please accept their advise.

Please can any further discussion on this issue be discussed in the relevant forum thread.",True,True,53,940.3666666666667
OpenViX_____enigma2_____399,2019-03-20T07:25:11Z,True,OpenViX_____enigma2_____399_____474716507,"Btw, sorry I didn't mean to close the pull request, just to lock the comment.",True,True,53,940.3666666666667
fffaraz_____awesome-cpp_____705,2019-03-20T11:41:50Z,True,fffaraz_____awesome-cpp_____705_____474794663,@fffaraz Is anyone maintaining this?,True,True,4,5500.233333333334
fffaraz_____awesome-cpp_____705,2019-03-20T13:30:28Z,True,fffaraz_____awesome-cpp_____705_____474828867,"Because a PR with no additional details on the library is open for 4 days, while you see lots of commits being made every few days, you question whether the project is maintained? 😄 

NeuroCL has one star and seems to be incomplete with ""Comming soon..."" in the description. Kind of hard to judge whether this really fits the awesome list. 🤔 ",True,True,4,5500.233333333334
fffaraz_____awesome-cpp_____705,2019-03-20T14:47:08Z,True,fffaraz_____awesome-cpp_____705_____474863921,"@fffaraz feel free to close all my pull requests and also remove my libraries from your list as well.

@eXpl0it3r who are you exactly to judge whether this or any library fits the awesome list? You just violated the Code of Conduct of this repository. What really amazes me though is that @fffaraz is just laughing about it.

Have a nice day!",True,True,4,5500.233333333334
laurent22_____joplin_____1141,2019-03-20T20:14:50Z,True,laurent22_____joplin_____1141_____475009977,"hello.

is a ""sub-notebook"" function implemented? i thinke like this:
 Notebook --> Subnotebook ---> Notes
                   |-> Subnotebook 2 --> Notes
                   '-> Subnotebook 3 --> Notes

thank you for this great app :)",True,True,8,129507.5
eclipse/che/12843,2019-03-20T20:46:16Z,False,5c92a7cb6480fdf3bbf0f45d,Closing in favor of https://github.com/eclipse/che/pull/12947,True,False,73,19438.75
hibernate/hibernate-validator/1012,2019-03-21T11:59:44Z,False,5c937dea6480fdf51517a43d,"It's missing. Because i forgot to put `@Valid` on the getter, the tests were passing, so i thought this was done. I will update it in the next commit",True,False,72,112490.03333333334
hibernate/hibernate-validator/1012,2019-03-21T14:02:11Z,False,5c939a976480fdf3bbf1706b,Any hints on where the documentation should be added? I was thinking of adding a new section in chapter 12: [Hibernate Validator Specifics](https://github.com/hibernate/hibernate-validator/blob/master/documentation/src/main/asciidoc/ch12.asciidoc),True,False,72,112490.03333333334
hibernate/hibernate-validator/1012,2019-03-21T14:09:36Z,False,5c9d05f16480fd726061f26d,"> a new section in chapter 12: [Hibernate Validator Specifics](https://github.com/hibernate/hibernate-validator/blob/master/documentation/src/main/asciidoc/ch12.asciidoc)

Yes that would be a good place for it. Just add one more section in the end. Thanks!",True,False,72,112490.03333333334
hibernate/hibernate-validator/1012,2019-03-22T17:04:17Z,False,5c9d05f16480fd726061f26e,"I think that the feature is ready for a final code review, after that, I will:
- Add the documentation
- Rebase and Squash",True,False,72,112490.03333333334
callstack_____react-native-paper_____485,2019-03-22T19:55:48Z,True,callstack_____react-native-paper_____485_____475759579,Great work @iyadthayyil! Thanks everyone!,True,True,55,342611.05
FieldWarning/projectFieldWarning/48,2019-03-24T00:01:12Z,False,5c96c9496480fd409a0b057d,"Maybe the best way to resolve the conflict is to drop the scene changes and then me creating a new commit re-doing my changes to scene. Or just overwrite the old scene with my scene, as long as nothing of importance gets undone this way.",True,False,2,503.3833333333333
FieldWarning/projectFieldWarning/48,2019-03-24T08:24:35Z,False,5c973ff66480fd44769ed352,"Hi, I rebased this branch on master, resolving conflicts in favor of master (`git rebase master -Xours`) and pushed the rebased version to https://github.com/FieldWarning/projectFieldWarning/commits/feature/minimap-improvements . Could you redo your scene changes there and then we'll merge that?

The binary conflicts in scenes are a pain in the ass, I think in the future we'll make all the scene objects prefabs so that we can just change the prefab instead of the scene. ",True,False,2,503.3833333333333
FuelRats_____pipsqueak3_____123,2019-03-25T20:38:24Z,True,FuelRats_____pipsqueak3_____123_____264279147,,True,True,34,2853.55
FuelRats_____pipsqueak3_____123,2019-03-25T21:20:43Z,True,FuelRats_____pipsqueak3_____123_____476382121,"# [Codecov](https://codecov.io/gh/FuelRats/pipsqueak3/pull/123?src=pr&el=h1) Report
> Merging [#123](https://codecov.io/gh/FuelRats/pipsqueak3/pull/123?src=pr&el=desc) into [develop](https://codecov.io/gh/FuelRats/pipsqueak3/commit/4898a9d75e3306f9667d78fbdfedaceb0811df40?src=pr&el=desc) will **increase** coverage by `0.02%`.
> The diff coverage is `100%`.

| [Impacted Files](https://codecov.io/gh/FuelRats/pipsqueak3/pull/123?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [src/packages/ratmama/ratmama\_parser.py](https://codecov.io/gh/FuelRats/pipsqueak3/pull/123/diff?src=pr&el=tree#diff-c3JjL3BhY2thZ2VzL3JhdG1hbWEvcmF0bWFtYV9wYXJzZXIucHk=) | `100% <100%> (ø)` | :arrow_up: |
",True,True,34,2853.55
FuelRats_____pipsqueak3_____123,2019-03-25T23:30:05Z,True,FuelRats_____pipsqueak3_____123_____268894128,[Nitpick] Couldn't this be simplified to `from ..galaxy import Galaxy`?,True,True,34,2853.55
FuelRats_____pipsqueak3_____123,2019-03-25T23:30:35Z,True,FuelRats_____pipsqueak3_____123_____268894230,[Style] Constants should follow `UPPER_CASE` notation.,True,True,34,2853.55
FuelRats_____pipsqueak3_____123,2019-03-25T23:32:11Z,True,FuelRats_____pipsqueak3_____123_____268894526,"[Error] This method call is risky, because `find_system_by_name` can return `None`, which will cause `find_nearest_landmark` to break.",True,True,34,2853.55
FuelRats_____pipsqueak3_____123,2019-03-25T23:34:00Z,True,FuelRats_____pipsqueak3_____123_____268894886,"[Error] If `find_nearest_landmark` does not return a distance greater than `0`, this string will interpolate to, for instance, `""Reported System: Sol ()""`",True,True,34,2853.55
FuelRats_____pipsqueak3_____123,2019-03-25T23:35:47Z,True,FuelRats_____pipsqueak3_____123_____268895201,[Suggestion] I think `code_red` was a better name for this variable.,True,True,34,2853.55
FuelRats_____pipsqueak3_____123,2019-03-25T23:38:05Z,True,FuelRats_____pipsqueak3_____123_____268895682,[Discussion] [Not Blocking] Is there a case in which this `re.sub` shouldn't be called? It appears to be called in every branch of this `if`. Would it not be better placed outside of the `if`s to remove the duplication?,True,True,34,2853.55
FuelRats_____pipsqueak3_____123,2019-03-25T23:38:52Z,True,FuelRats_____pipsqueak3_____123_____268895847,"[Error] Same concern as above. If the system does not resolve into a `StarSystem` object, `find_nearest_landmark` will break.",True,True,34,2853.55
FuelRats_____pipsqueak3_____123,2019-03-25T23:42:12Z,True,FuelRats_____pipsqueak3_____123_____268896487,[Error] Debug print should be removed from production tests.,True,True,34,2853.55
FuelRats_____pipsqueak3_____123,2019-03-25T23:46:06Z,True,FuelRats_____pipsqueak3_____123_____268897234,"[Error]

in this case, this import is erroneous as it imports from the internal module, rather than the interface.

it should be simplified to `from ..galaxy import Galaxy`",True,True,34,2853.55
FuelRats_____pipsqueak3_____123,2019-03-26T00:01:32Z,True,FuelRats_____pipsqueak3_____123_____268900275,"[Error][scope][style]
this was renamed to `code_red` intentionally, as per naming conventions and rules",True,True,34,2853.55
FuelRats_____pipsqueak3_____123,2019-03-26T00:05:05Z,True,FuelRats_____pipsqueak3_____123_____268900931,[error] empty table intentionally empty?,True,True,34,2853.55
FuelRats_____pipsqueak3_____123,2019-03-26T00:06:08Z,True,FuelRats_____pipsqueak3_____123_____268901113,"[style][error] instance of an object should be lower case, further this shadows name from containing scope (`Galaxy` already defined from  import)",True,True,34,2853.55
FuelRats_____pipsqueak3_____123,2019-03-26T00:12:37Z,True,FuelRats_____pipsqueak3_____123_____268902203,it is not called in the event none of the conditions are met.,True,True,34,2853.55
FuelRats_____pipsqueak3_____123,2019-03-26T00:17:49Z,True,FuelRats_____pipsqueak3_____123_____268903140,"[suggestion] this expression, `.split('[')[0]`, while simple, is repeated at least twice within this module. Further, i can forsee usages of this expression in other modules/

Therefore, it may be wise to move this routine into our utilities package
```py
def strip_tags(nickname:str) -> str
    return nickname.strip('[')[0]
```",True,True,34,2853.55
FuelRats_____pipsqueak3_____123,2019-03-26T00:18:23Z,True,FuelRats_____pipsqueak3_____123_____268903230,[error] [style] usage of single character variables,True,True,34,2853.55
FuelRats_____pipsqueak3_____123,2019-03-26T00:19:02Z,True,FuelRats_____pipsqueak3_____123_____268903336,[error][style] usage of single character variables,True,True,34,2853.55
FuelRats_____pipsqueak3_____123,2019-03-26T00:19:47Z,True,FuelRats_____pipsqueak3_____123_____268903463,"
[error][style] usage of single character variables",True,True,34,2853.55
FuelRats_____pipsqueak3_____123,2019-03-26T00:20:03Z,True,FuelRats_____pipsqueak3_____123_____268903499,"
[error][style] usage of single character variables",True,True,34,2853.55
FuelRats_____pipsqueak3_____123,2019-03-26T00:20:13Z,True,FuelRats_____pipsqueak3_____123_____268903536,"
[error][style] usage of single character variables",True,True,34,2853.55
FuelRats_____pipsqueak3_____123,2019-03-26T00:23:41Z,True,FuelRats_____pipsqueak3_____123_____268904183,404 empty table not found,True,True,34,2853.55
FuelRats_____pipsqueak3_____123,2019-03-26T00:24:21Z,True,FuelRats_____pipsqueak3_____123_____268904294,"``md

# ratsignal_parser
| Element| description|
|--------|------------|
|announcer_nicks| list of case-insensitive nicks, that are allowed to announce incoming clients|
```",True,True,34,2853.55
FuelRats_____pipsqueak3_____123,2019-03-26T00:24:58Z,True,FuelRats_____pipsqueak3_____123_____268904418,"nope, i misread here. 🤦‍♂️ ",True,True,34,2853.55
FuelRats_____pipsqueak3_____123,2019-03-26T00:39:34Z,True,FuelRats_____pipsqueak3_____123_____268906870,"looking into ratlib, this function actually exists already",True,True,34,2853.55
FuelRats_____pipsqueak3_____123,2019-03-26T00:40:47Z,True,FuelRats_____pipsqueak3_____123_____268907056,"I could have sworn it had existed, but evidently i didn't look hard enough when i searched for it prior to rendering this suggestion 😅 

```py
def strip_name(nickname: str) -> str:
    """"""
    This function accepts one input `nickname` and returns the input string
    minus any tags.

    An IRC tag is anything starting with ""`[`"". Further, anything following a
    `[` is truncated.

    Args:
        nickname (str): raw nickname to strip tags

    Returns:
        str: nickname stripped of tags
    """"""
    split_string = nickname.split(""["")
    return split_string[0]

``` 

so it does

In which case, best not re-invent the wheel, i suggest using this method rather than duplicating it",True,True,34,2853.55
FuelRats_____pipsqueak3_____123,2019-03-26T03:53:50Z,True,FuelRats_____pipsqueak3_____123_____268935363,"[Scope] Modifying codeowners is out of scope for your pull request, and currently irrelevant for those without write access to the repository.  Please remove this.",True,True,34,2853.55
FuelRats_____pipsqueak3_____123,2019-03-26T03:56:56Z,True,FuelRats_____pipsqueak3_____123_____268935773,Agreed. Please fix.,True,True,34,2853.55
kubernetes/kubernetes/71366,2019-03-26T04:29:20Z,False,5c99abd16480fd54c0b5a99e,"Stale issues rot after 30d of inactivity.
Mark the issue as fresh with `/remove-lifecycle rotten`.
Rotten issues close after an additional 30d of inactivity.

If this issue is safe to close now please do so with `/close`.

Send feedback to sig-testing, kubernetes/test-infra and/or [fejta](https://github.com/fejta).
/lifecycle rotten",True,False,10,220183.41666666666
FuelRats_____pipsqueak3_____123,2019-03-26T07:05:00Z,True,FuelRats_____pipsqueak3_____123_____268963652,"As this is a module-level constant, don't you mean upper case?",True,True,34,2853.55
FuelRats_____pipsqueak3_____123,2019-03-26T11:02:31Z,True,FuelRats_____pipsqueak3_____123_____269046200,"Modifying Codeownership is something that should have been in the original PR, therefore it's well within scope of this one.

 Even if it's useless since I have no write access, I still have the right to put my thumbprint on modules that have been created by me.",True,True,34,2853.55
FuelRats_____pipsqueak3_____123,2019-03-26T11:05:03Z,True,FuelRats_____pipsqueak3_____123_____269047127,"I agree it should be uppercase since it's a module level constant, even if it's a temporary one.",True,True,34,2853.55
hibernate/hibernate-validator/1012,2019-03-26T15:08:41Z,False,5c9a60f96480fd54d51a87ed,Just noticed this now. We usually tend to define all the dependencies and their versions in `dependencyManagement` of a parent pom. And then reference what we need in the modules. There's also a specific naming convention for version property name. In this case it would be `version. com.fasterxml.jackson.core` which could be used for both dependencies.,True,False,72,112490.03333333334
hibernate/hibernate-validator/1012,2019-03-26T15:15:06Z,False,5c9a60f86480fd5749b6af6d,We should probably also put `@Incubating` here. See an example just above. This would allow us to make future adjustments to the newly introduced feature after getting feedback from the users.,True,False,72,112490.03333333334
hibernate/hibernate-validator/1012,2019-03-26T15:20:34Z,False,5c9a60fa6480fd5c6b2f84b5,Same about `@Incubating`,True,False,72,112490.03333333334
hibernate/hibernate-validator/1012,2019-03-26T15:21:56Z,False,5c9a60fc6480fd5a1f55a713,Let's not expose this getter in the interface. Keeping it in `AbstractConfigurationImpl` should be enough. ,True,False,72,112490.03333333334
hibernate/hibernate-validator/1012,2019-03-26T15:22:33Z,False,5c9a60fb6480fd5a4d072ec0,we should drop this method from the `HibernateValidatorContext`,True,False,72,112490.03333333334
FuelRats_____pipsqueak3_____123,2019-03-26T15:23:08Z,True,FuelRats_____pipsqueak3_____123_____269161948,"I'm not going to get drawn into a debate with you about 'rights' with your code.  Once it is integrated into the project its no longer 'your code.'  That ideology is incompatible with an open-source project.

That point aside, anyone can see who contributed to the project and who authored specific commits.   What you are proposing is not the intended usage of the codeowners file.  If you had submitted a modification to the codeowners file as part of your original PR, It also would have been considered out of scope.",True,True,34,2853.55
hibernate/hibernate-validator/1012,2019-03-26T15:28:59Z,False,5c9a60f96480fd5cbcba550a,We actually changed all these kind of messages to `DEBUG` level in https://github.com/hibernate/hibernate-validator/commit/84fd7327010b5652c41482dca65539f98cc42220 to reduce log verbosity. You'll see these changes after rebasing. ,True,False,72,112490.03333333334
hibernate/hibernate-validator/1012,2019-03-26T15:39:11Z,False,5c9a60ff6480fd5b3bc53a44,"We can add `@TestForIssue( jiraKey = ""HV-823"" ) on a class level.",True,False,72,112490.03333333334
hibernate/hibernate-validator/1012,2019-03-26T15:41:48Z,False,5c9a60fa6480fd57ba84ade8,And `@Incubating` here too 😉 ,True,False,72,112490.03333333334
hibernate/hibernate-validator/1012,2019-03-26T15:42:59Z,False,5c9a60fb6480fd55ae72b0bf,Let's put `@Incubating` on these `Property`/`JavaBeanProperty` interfaces. ,True,False,72,112490.03333333334
hibernate/hibernate-validator/1012,2019-03-26T15:52:11Z,False,5c9a60f96480fd5ded775ffd,"Let's drop these two methods `resolvePropertyName ()` `javaBeanPropertyFrom()` and instead just have something like 
```java
	public JavaBeanField field(Field field) {
		return new JavaBeanField(
				field,
				propertyNodeNameProvider.getName( new JavaBeanPropertyImpl( field.getDeclaringClass(), field.getName() ) )
		);
	}
```
in `JavaBeanHelper`",True,False,72,112490.03333333334
hibernate/hibernate-validator/1012,2019-03-26T15:57:20Z,False,5c9a60fc6480fd5c2a525d13,"if `field` at this point is `null` - there's not need to do any additional work we should just return `Optional.empty()`. Otherwise we can find the resolved name and use `Optional.of()`. Something like:
```java
Field field = run( GetDeclaredField.action( declaringClass, property ) );
if ( field == null ) {
	return Optional.empty();
}
else {
	String resolvedName = propertyNodeNameProvider.getName( new JavaBeanPropertyImpl( declaringClass, property ) );

	return Optional.of( new JavaBeanField( field, resolvedName ) );
}
```",True,False,72,112490.03333333334
hibernate/hibernate-validator/1012,2019-03-26T17:06:03Z,False,5c9a60fa6480fd5a829d8f08,we can remove it from here too.,True,False,72,112490.03333333334
FuelRats_____pipsqueak3_____123,2019-03-26T17:34:45Z,True,FuelRats_____pipsqueak3_____123_____476763845,"the function and purpose of this file is not to assign who owns what
files(the Fuel Rats own everything) but rather toassign who is
responsiblefor Reviewing changes to the specified files.

it's clear *who* wrote a bit of code by looking at who committed the lines
in question, as provided

For its intended use, this file's settings are only enforced for members
with write access. GH will not permit a code owner that does not have write
access

putting all that aside, it is beyond the scope of a feature pull request to
effect policy change.By modifying this file, you are inherently modifying
policy.


, Mar 26, 2019, 08:23 Shatt <notifications@github.com> wrote:

> *@shatteredbeam* commented on this pull request.
> ------------------------------
>
> In .github/CODEOWNERS
> <https://github.com/FuelRats/pipsqueak3/pull/123#discussion_r269161948>:
>
> > @@ -22,6 +22,9 @@
>  # rules module
>  /src/packages/rules/ @MHajoha
>
> +# RatSig related module
> +/src/packages/ratmama @beepbeat
>
> I'm not going to get drawn into a debate with you about 'rights' with your
> code. Once it is integrated into the project its no longer 'your code.'
> That ideology is incompatible with an open-source project.
>
> That point aside, anyone can see who contributed to the project and who
> authored specific commits. What you are proposing is not the intended usage
> of the codeowners file. If you had submitted a modification to the
> codeowners file as part of your original PR, It also would have been
> considered out of scope.
>
> —
> You are receiving this because you commented.
> Reply to this email directly, view it on GitHub
> <https://github.com/FuelRats/pipsqueak3/pull/123#discussion_r269161948>,
> or mute the thread
> <https://github.com/notifications/unsubscribe-auth/AC94SsiveuFSgECe7cT6hGZ6-k8Q-FqOks5vajtegaJpZM4cJK-6>
> .
>
",True,True,34,2853.55
hibernate/hibernate-validator/1012,2019-03-27T16:10:23Z,False,5c9ba1af6480fd54c0b6e21d,@dalibegovic that was quick! Nice. I think you can go ahead and squash+rebase it all. And add that documentation section if you have time for it.,True,False,72,112490.03333333334
hibernate/hibernate-validator/1012,2019-03-27T16:17:00Z,False,5c9ba3376480fd5491194ebc,"@marko-bekhta thanks :) On it, I will add the documentation, since I think it's an important part",True,False,72,112490.03333333334
FuelRats_____pipsqueak3_____123,2019-03-27T20:11:57Z,True,FuelRats_____pipsqueak3_____123_____269748930,"yes. the original naming made it confusing to tell if it was constant or not. if its a constant then yes, UPPER_CASE is correct",True,True,34,2853.55
libretro_____libretro-common_____112,2019-03-27T21:48:50Z,True,libretro_____libretro-common_____112_____265113964,"This is something I had been thinking too, and a user seemed interested too.
So much that he started a bounty.

https://github.com/fr500/dosbox-svn/issues/6
https://www.bountysource.com/issues/72009314-make-ipxnet-avaible-just-by-using-netplay

This is a first draft of what it would take to have such integration.
I'd like some comments before starting to work on a final proposal for a core (dosbox) and the frontend (retroarch of course)

This would be ideal for game cores, and I figure with some work it would work for dolphin/ppsspp netplay too.

The idea would be that when the env is set the ""start netplay"" action in the frontend defers to a different codepath, it would still announce the lobby, but instead of implementing netplay, it would signal the core to start in server mode. The frontend specifies the port and the listening address. Maybe some other variables would be desirable, I'd like to hear other people's opinions.

A ""join host"" action in the frontend would then signal the core to join the hosting peer.

I already tried this in a hacky manner (hijacked the lan announcement code) and it worked reasonably well. Relay would not be supported of course, but port mapping should)",True,True,2,5675.05
callstack_____react-native-paper_____485,2019-03-28T00:22:50Z,True,callstack_____react-native-paper_____485_____477395830,"Can the Menu component be used as a Dropdown for TextInput as shown https://material.io/design/components/menus.html#exposed-dropdown-menu ?

Replacing the `anchor` attribute with TextInput (and using `onFocus` instead of `onPress`) won't work.",True,True,55,342611.05
pantheon-systems/docker-build-tools-ci/19,2019-03-28T15:16:39Z,False,5c9ce68b6480fd70c26da695,$TERMINUS_SITE and $TERMINUS_ENV will not necessarily be defined here (if they are taking default values). This line should therefore be single-quoted.,True,False,16,1716.6833333333334
pantheon-systems/docker-build-tools-ci/19,2019-03-28T15:19:27Z,False,5c9ce7306480fd73bbe0ab6b,"Circle-specific environment variables should not be used here. Define generic environment variable names and set them to their circle-provided value if not set.

Example:
```
CI_BUILD_URL=${CI_BUILD_URL:-$CIRCLE_BUILD_URL}
```",True,False,16,1716.6833333333334
pantheon-systems/docker-build-tools-ci/19,2019-03-28T15:20:22Z,False,5c9ce7676480fd7656ec1268,"This check doesn't hurt, but Composer should always be installed in this image (we install it in the Dockerfile)",True,False,16,1716.6833333333334
pantheon-systems/docker-build-tools-ci/19,2019-03-28T15:25:32Z,False,5c9ce8a16480fd7656ec138f,"My thought is to copy this script to cache in an early job on CircleCI, then source it in each subsequent job. While this container has Composer the visual regression container, for example, does not.",True,False,16,1716.6833333333334
pantheon-systems/docker-build-tools-ci/19,2019-03-28T15:27:47Z,False,5c9ce92a6480fd70b092ca3c,"That works for CircleCI but how would we define something generic on other providers?

Maybe we could check for a provider-specific variable, such as `CIRCLECI`, and set the defaults for each provider in their own block.",True,False,16,1716.6833333333334
pantheon-systems/docker-build-tools-ci/19,2019-03-28T15:28:32Z,False,5c9ce9646480fd74e2aa8d57,"Can we just cache `$BASH_ENV` instead? While other containers might need some of the other services provided by this script, it seems error-prone to me to maintain a script that will run in multiple environments. `$BASH_ENV` is safe for this, because it only sets variables. The risk is that someone might add stuff to this script later not realizing its effect on visual regression.",True,False,16,1716.6833333333334
hibernate/hibernate-validator/1012,2019-03-28T15:29:58Z,False,5c9ce9ad6480fd786af00252,"I was not sure how to do the squashing without messing up the history, so i created a new PR: https://github.com/hibernate/hibernate-validator/pull/1029. We could merge it, and close this one. The comments from this PR will not be lost, and the git history will be clean.

I hope this is fine.",True,False,72,112490.03333333334
pantheon-systems/docker-build-tools-ci/19,2019-03-28T15:31:21Z,False,5c9ce9fd6480fd7900251724,I define the default variable names before calling this script. See https://github.com/pantheon-systems/example-drops-8-composer/pull/198/files#diff-81f62e874f3f2d77c10287105a377dceR12,True,False,16,1716.6833333333334
pantheon-systems/docker-build-tools-ci/19,2019-03-28T15:31:56Z,False,5c9cea226480fd72b53a7105,The script `.bitbucket/set-up-globals.sh` will then go away.,True,False,16,1716.6833333333334
pantheon-systems/docker-build-tools-ci/19,2019-03-28T15:52:14Z,False,5c9ceeec6480fd709c5d34a9,"> Can we just cache `$BASH_ENV` instead

If we cache the result of `$BASH_ENV` and source that in each job the rest of the script, such as setting the Git token for Composer, won't run in those jobs.",True,False,16,1716.6833333333334
pantheon-systems/docker-build-tools-ci/19,2019-03-28T16:32:08Z,False,5c9cf8396480fd70d75b86c9,"Yeah, I think those small tasks should be duplicated in the container that needs the service.",True,False,16,1716.6833333333334
pantheon-systems/docker-build-tools-ci/19,2019-03-28T16:33:34Z,False,5c9cf8986480fd77d7bcbf49,"The git token for Composer is only needed for job steps that run `composer require` and similar, for example; we should strive to avoid doing more installation in later jobs, and instead pass build results along in the cache.",True,False,16,1716.6833333333334
pantheon-systems/docker-build-tools-ci/19,2019-03-28T16:34:36Z,False,5c9cf8d26480fd79d6826db9,"I'm not sure if that gets the stuff we need to duplicate in other containers down to the empty set or not, but there's only a few things the script does right now, so I think we can pare it down to close to zero.",True,False,16,1716.6833333333334
hibernate/hibernate-validator/1012,2019-03-28T17:30:30Z,False,5c9d05ed6480fd74a98d1b9c,"Yes, it even might be better. Having a clean PR without these existing comments would be easier to read. Thanks!

Closing this PR in favor of https://github.com/hibernate/hibernate-validator/pull/1029",True,False,72,112490.03333333334
pantheon-systems/docker-build-tools-ci/19,2019-03-28T17:56:50Z,False,5c9d0c186480fd728e03bdbb,Maybe we should evaluate `TERMINUS_ENV=${TERMINUS_ENV:-$DEFAULT_ENV}` (& same for TERMINUS_SITE) above rather than having multiple expansions of it in the `$BASH_ENV` generation.,True,False,16,1716.6833333333334
pantheon-systems/docker-build-tools-ci/19,2019-03-28T18:01:24Z,False,5c9d0d266480fd751f420c58,Done!,True,False,16,1716.6833333333334
spacetelescope/drizzlepac/299,2019-03-28T20:14:42Z,False,5c9d2c586480fd76099e3a55,"Hi there @stsci-hack :wave: - thanks for the pull request! I'm just a friendly :robot: that checks for issues related to the changelog. I help make sure that this pull request is milestoned and labeled correctly. This is mainly intended for the maintainers, so if you are not a maintainer you can ignore this, and a maintainer will let you know if any action is required on your part :smiley:.

Everything looks good from my point of view! :+1:

*If there are any issues with this message, please report them [here](https://github.com/spacetelescope/stsci-bot/issues).*",True,False,23,1147.1333333333334
spacetelescope/drizzlepac/299,2019-03-28T20:14:43Z,False,5c9d2c586480fd76099e3a56,"Hi there @stsci-hack :wave: - thanks for the pull request! I'm just a friendly :robot: that checks for issues related to the changelog. I help make sure that this pull request is milestoned and labeled correctly. This is mainly intended for the maintainers, so if you are not a maintainer you can ignore this, and a maintainer will let you know if any action is required on your part :smiley:.

Everything looks good from my point of view! :+1:

*If there are any issues with this message, please report them [here](https://github.com/spacetelescope/stsci-bot/issues).*",True,False,23,1147.1333333333334
spacetelescope/drizzlepac/299,2019-03-28T20:14:43Z,False,5c9d2c586480fd76099e3a57,"Hi there @stsci-hack :wave: - thanks for the pull request! I'm just a friendly :robot: that checks for issues related to the changelog. I help make sure that this pull request is milestoned and labeled correctly. This is mainly intended for the maintainers, so if you are not a maintainer you can ignore this, and a maintainer will let you know if any action is required on your part :smiley:.

Everything looks good from my point of view! :+1:

*If there are any issues with this message, please report them [here](https://github.com/spacetelescope/stsci-bot/issues).*",True,False,23,1147.1333333333334
spacetelescope/drizzlepac/299,2019-03-28T20:36:28Z,False,5c9d39156480fd71008918bc,"This is nitpicking, but users can see the default values from the function definition. It is simply easier to maintain when one does not need to change things in multiple places. (I am suggesting not to have `Default: False`)",True,False,23,1147.1333333333334
spacetelescope/drizzlepac/299,2019-03-28T20:38:18Z,False,5c9d39126480fd734482689c,"There is no use for this `clobber` - just use `force` directly in the next line:
```python
results = alignimages.perform_align([dataset], clobber=force, debug=True)
```",True,False,23,1147.1333333333334
spacetelescope/drizzlepac/299,2019-03-28T20:39:28Z,False,5c9d32366480fd70c26dd8e1,"# [Codecov](https://codecov.io/gh/spacetelescope/drizzlepac/pull/299?src=pr&el=h1) Report
> Merging [#299](https://codecov.io/gh/spacetelescope/drizzlepac/pull/299?src=pr&el=desc) into [master](https://codecov.io/gh/spacetelescope/drizzlepac/commit/72c67b6af6d56fba3582ae6c8dd7d3f79ebc0ee3?src=pr&el=desc) will **decrease** coverage by `<.01%`.
> The diff coverage is `50%`.

[![Impacted file tree graph](https://codecov.io/gh/spacetelescope/drizzlepac/pull/299/graphs/tree.svg?width=650&token=xgivWzKE8Z&height=150&src=pr)](https://codecov.io/gh/spacetelescope/drizzlepac/pull/299?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##           master     #299      +/-   ##
==========================================
- Coverage   40.76%   40.75%   -0.01%     
==========================================
  Files          52       52              
  Lines       13083    13087       +4     
  Branches     2572     2574       +2     
==========================================
+ Hits         5333     5334       +1     
- Misses       6980     6982       +2     
- Partials      770      771       +1
```


| [Impacted Files](https://codecov.io/gh/spacetelescope/drizzlepac/pull/299?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [drizzlepac/hlautils/testutils.py](https://codecov.io/gh/spacetelescope/drizzlepac/pull/299/diff?src=pr&el=tree#diff-ZHJpenpsZXBhYy9obGF1dGlscy90ZXN0dXRpbHMucHk=) | `42.3% <50%> (-1.45%)` | :arrow_down: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/spacetelescope/drizzlepac/pull/299?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/spacetelescope/drizzlepac/pull/299?src=pr&el=footer). Last update [72c67b6...c7c4198](https://codecov.io/gh/spacetelescope/drizzlepac/pull/299?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",True,False,23,1147.1333333333334
spacetelescope/drizzlepac/299,2019-03-28T20:56:31Z,False,5c9d39166480fd72b53aa32c,"This entire `if` block can be replaced with
```python
control = os.environ.get('ASTROMETRY_STEP_CONTROL')
```",True,False,23,1147.1333333333334
spacetelescope/drizzlepac/299,2019-03-28T21:07:47Z,False,5c9d39156480fd75484e1efd,"In my opinion, there is a serious issue with this change/restoring of the environment: if a crash occurs, the environment will not be restored to the previous state. It think this should be either addressed somehow or documented/explained as to why this should be OK. That is, the way this is currently implemented, there is no guaranty that the environment will be restored to the previous state.",True,False,23,1147.1333333333334
spacetelescope/drizzlepac/299,2019-03-29T13:39:15Z,False,5c9e21376480fd7821a92507,"I knew there was a simple way to handle this, so thanks for reminding me.  Will get this fixed...",True,False,23,1147.1333333333334
spacetelescope/drizzlepac/299,2019-03-29T14:13:40Z,False,5c9e29476480fd7138b8e317,"Original code is OK (i.e., nothing to ""fix""). Just 3 fewer lines to look at. Just a suggestion...

The critical part in this PR is the env left in a modified state in the event of a crash.",True,False,23,1147.1333333333334
spacetelescope/drizzlepac/299,2019-03-29T14:48:20Z,False,5c9e31676480fd7100899822,"This was fixed by wrapping the code in a try...except...finally block which still preserves all traceback information and insures that no matter what happens, if the environment was changed it will be restored. :-)",True,False,23,1147.1333333333334
spacetelescope/drizzlepac/299,2019-03-29T14:49:13Z,False,5c9e31a16480fd71a87e99e0,"Fixed.  This remained in the code as I originally had an input parameter with the exact opposite meaning and tried to interpret it separately.  Anyway, fixed...",True,False,23,1147.1333333333334
spacetelescope/drizzlepac/299,2019-03-29T14:50:22Z,False,5c9e31e26480fd73e80dbc19,Old habits die hard where I have always tried to be as explicit in the docs as possible (a convention originally needed under the pre-sphinx doc standard). ,True,False,23,1147.1333333333334
spacetelescope/drizzlepac/299,2019-03-29T14:52:11Z,False,5c9e32866480fd720a544963,"One more thing... I think `except` block is not necessary at all - you can safely remove it. Also, it really should be either `except:` or `except Exception as e:` (in order to do some additional processing on `e` before re-rising it).",True,False,23,1147.1333333333334
spacetelescope/drizzlepac/299,2019-03-29T14:54:18Z,False,5c9e32d66480fd71a87e9b0e,except the except block is not necessary :-),True,False,23,1147.1333333333334
spacetelescope/drizzlepac/299,2019-03-29T14:57:46Z,False,5c9e33a36480fd7a6d8fa6ac,"That is, you can have a construction like this:
```python
try:
    # do something dangerous
finally:
    # do something that always needs to be done
    # regardless of the dangerous stuff
```",True,False,23,1147.1333333333334
spacetelescope/drizzlepac/299,2019-03-29T15:00:00Z,False,5c9e34216480fd76810014fa,"I was not quite sure what would happen in the case of exceptions, so I erred on the side of being very explicit (as per Zen of Python).  It turns out, though, that this logic still misses a key behavior which will be fixed in the next commit: removing the variable from os.environ if it wasn't there in the first place.",True,False,23,1147.1333333333334
spacetelescope/drizzlepac/299,2019-03-29T15:05:35Z,False,5c9e35906480fd72b53b28d2,"Also, here specifically, it would be better/safer (IMO) to have a check such as `if control is None:` because an empty string could evaluate to `False`. That is, what if `environ['ASTROMETRY_STEP_CONTROL'] = ''` then, currently, this env will not be restored to its original state.
",True,False,23,1147.1333333333334
spacetelescope/drizzlepac/299,2019-03-29T15:09:39Z,False,5c9e366d6480fd786af0b8b0,Yes! Great catch! `if control is None: del env['...'] else env['...'] = control` I think this will do.,True,False,23,1147.1333333333334
spacetelescope/drizzlepac/299,2019-03-29T15:14:15Z,False,5c9e37af6480fd76f09cfcbd,Removing 'except Exception' block worked just as intended.,True,False,23,1147.1333333333334
spacetelescope/drizzlepac/299,2019-03-29T15:14:39Z,False,5c9e37c26480fd70b0938423,Done. ,True,False,23,1147.1333333333334
spacetelescope/drizzlepac/299,2019-03-29T15:15:44Z,False,5c9e37d96480fd74e2ab4a57,I think the branches are flipped over.,True,False,23,1147.1333333333334
spacetelescope/drizzlepac/299,2019-03-29T15:21:50Z,False,5c9e39406480fd70b0938531,"I will get this right eventually, with your help... fixed.",True,False,23,1147.1333333333334
pantheon-systems/docker-build-tools-ci/19,2019-03-29T18:50:18Z,False,5c9e6a216480fd7656ece893,"The vr job won't be calling this script directly, so we don't need to mkdir the artifacts dir here. Just define the path to it, create it when using it for vr.",True,False,16,1716.6833333333334
pantheon-systems/docker-build-tools-ci/19,2019-03-29T19:53:20Z,False,5c9e78e06480fd776682fc74,Optional: Remove `BASH_ENV_FILE_NAME`.  Recommended but not required.,True,False,16,1716.6833333333334
fossasia_____neurolab-android_____129,2019-03-30T02:06:48Z,True,fossasia_____neurolab-android_____129_____265906262,"Fixes #128 

**Changes**: Now whenever the user opens the app. His last checked preferences shall be stored.

**Checklist**: [Please tick following check boxes with `[x]` if the respective task is completed]
- [x] I have used resources from `strings.xml`, `dimens.xml` and `colors.xml` without hard-coding them
- [ ] No modifications done at the end of resource files `strings.xml`, `dimens.xml` or `colors.xml`
- [x] I have reformatted code in every file included in this PR [<kbd>CTRL</kbd>+<kbd>ALT</kbd>+<kbd>L</kbd>]
- [x] My code does not contain any extra lines or extra spaces
- [x] I have requested reviews from other members

",True,True,12,1049.65
fossasia_____neurolab-android_____129,2019-03-30T02:40:23Z,True,fossasia_____neurolab-android_____129_____478198914,@mariobehling @iamareebjamal @CloudyPadmal Please review. Thanks!,True,True,12,1049.65
fossasia_____neurolab-android_____129,2019-03-30T11:56:48Z,True,fossasia_____neurolab-android_____129_____478238905,@iamareebjamal Please review this.,True,True,12,1049.65
fossasia_____neurolab-android_____129,2019-03-30T12:57:05Z,True,fossasia_____neurolab-android_____129_____478243360,@iamareebjamal Please review this.,True,True,12,1049.65
fossasia_____neurolab-android_____129,2019-03-30T13:59:41Z,True,fossasia_____neurolab-android_____129_____478248347,"@RohitJain1103 @iamareebjamal I could not get the purpose of #123 . The server settings (the checkboxes specifically simulation, load resources, audio feedback, 24 bit mode and advanced mode) preferences from the Launcher Activity should be stored in Shared Prefs only because their last response should be stored after every session to aid the user the next time he uses the app for configuring and setting up the next session and he doesn't need to check the necessary settings again. We don't need to store anything from the Program modes from the app. And @RohitJain1103 If you are talking about such large data even Cloud tech like Firestore can be used in the future if needed. Please don't try to compare each and everything from the desktop application. Android development has got some separate principles and dev strategies. ",True,True,12,1049.65
fossasia_____neurolab-android_____129,2019-03-30T14:00:06Z,True,fossasia_____neurolab-android_____129_____478248383,@iamareebjamal Please share your thoughts.,True,True,12,1049.65
fossasia_____neurolab-android_____129,2019-03-30T14:06:21Z,True,fossasia_____neurolab-android_____129_____478248969,"@RohitJain1103 @suresh-gandhi If you want further clarification, let us discuss on the gitter channels and let's leave the forums for reviews from mentors. Cheers!",True,True,12,1049.65
fossasia_____neurolab-android_____129,2019-03-30T14:55:18Z,True,fossasia_____neurolab-android_____129_____478253240,"@jddeep You still didn't answer the question. I am afraid but It seems to me you are beating around the bush. What I am saying is a simple question. The issue is already being tackled in this PR. What is the need to duplicate it. And assume even if shared preferences are to be used(our mentors @iamareebjamal @CloudyPadmal would let us know in that case) then also it should be tackled by this PR not by a separate PR. I would suggest you to understand neurolab-desktop first, install it in your machine, run the application. And if you have already installed it please understand the code-base comprehensively. 

> I could not get the purpose of #123 . The server settings (the checkboxes specifically simulation, load resources, audio feedback, 24 bit mode and advanced mode) preferences from the Launcher Activity should be stored in Shared Prefs only because their last response should be stored after every session to aid the user the next time he uses the app for configuring and setting up the next session and he doesn't need to check the necessary settings again.

Its not so simple. Just see how Launcher class and ini file are related in neurolab-desktop. It seems to me you have not at all installed the neurolab-desktop repo in your machine. 

>If you are talking about such large data even Cloud tech like Firestore can be used in the future if needed...

See again. Its not big data dear. Nobody is suggesting to go for the Cloud Storage. Its about using right things for right purpose. You please understand neurolab-desktop in depth first. I would strongly urge you to do that.

>Please don't try to compare each and everything from the desktop application. Android development has got some separate principles and dev strategies.

Its not about comparing the two things together. Its about going in the right direction and porting the software correctly which you aren't. Its not about a single feature which has subjectivity in its implementation for different platforms. Its about the underlying design pattern involved. I hope you understand.

> Suggestion

Why don't you work on the program modes and concrete PR's. It would make the porting process swift and help the organization a lot. 

",True,True,12,1049.65
fossasia_____neurolab-android_____129,2019-03-30T15:09:46Z,True,fossasia_____neurolab-android_____129_____478254558,"Dear @RohitJain1103  
Answer to your first question:
I was working on Shared preferences before the #123 was made. And as soon as @iamareebjamal commented about using them I made the PR incidently. Please see here https://github.com/fossasia/neurolab-android/pull/123#issuecomment-478199105 for verification. 

> I am afraid but It seems to me you are beating around the bush. 

And why are your use of words in a quarrelling fashion buddy? If you want any particular change in a PR. Please comment about it and leave the rest to the Author and mentor.
Talking about helping out the organization and the project development. I have been contributing to it right from when the project was at the level of scratch. Again for verification please refer here 
https://github.com/fossasia/neurolab-android/pulls/jddeep . Instead of thinking about helping out the organization start doing it by quality PRs. I suggested you not to extend the discussion here in the forums instead try using the gitter channel. But still you didn't listen. Hope you understand. Looking forward to your quality contributions rather than just reformatting the code and changing the images. Cheers!",True,True,12,1049.65
fossasia_____neurolab-android_____129,2019-03-30T15:15:18Z,True,fossasia_____neurolab-android_____129_____478255043,">  I could not get the purpose of #123 . The server settings (the checkboxes specifically simulation, load resources, audio feedback, 24 bit mode and advanced mode) preferences from the Launcher Activity should be stored in Shared Prefs only because their last response should be stored after every session to aid the user the next time he uses the app for configuring and setting up the next session and he doesn't need to check the necessary settings again. We don't need to store anything from the Program modes from the app. And @RohitJain1103 If you are talking about such large data even Cloud tech like Firestore can be used in the future if needed. Please don't try to compare each and everything from the desktop application. Android development has got some separate principles and dev strategies.

@iamareebjamal Please share your thoughts.",True,True,12,1049.65
fossasia_____neurolab-android_____129,2019-03-30T19:26:58Z,True,fossasia_____neurolab-android_____129_____478281170,"@jddeep It is the people like you who are destroying the reputation of Foss by unnecessarily fighting in the comments again and again. Do you know why any new contributor tries to work on this repo and then leaves it? It is because of your regular pestering in comments and telling them to do real contribution while you are busy adding text to AboutUs, porting classes with no lines of code in them. Your logic is pretty clear - @jddeep wants to do GSoc in Foss so disturb every other contributor, there is no competition and hence you get the opportunity. Well done man! Who am I even discussing with. A person who is ""contributing"" to this repo and don't even know how to squash commits, A ""contributor"" who doesn't even know how to run neurolab-desktop and is porting it to android version. (I have screenshot of the gitter message which you had sent asking procedure of running neurolab-desktop).

Talking about serious contributions, your comments in this repo = exp(number of commits). If you want proof I can add all the screenshots of all your pestering sessions. 
You tell you have been working on this repo from scratch but the project before March was hollow only consisting of UI's. Talking about my contributions, I have optimised many mathematical functions which require good maths base which I'm sure you wouldn't have. 

Note - If you want proof of each and every statement, I have screenshot of everything.

And do not comment on this again. Your insensible statements do not make any sense. And if you do so I will have to contact higher authorities to take care of this matter.",True,True,12,1049.65
fossasia_____neurolab-android_____129,2019-03-30T19:36:27Z,True,fossasia_____neurolab-android_____129_____478282166,"From now on, please keep comments strictly related to PR code quality, and bugs. Not that if a PR is necessary or the approach. Both of you reflect poorly.
",True,True,12,1049.65
vitessio/vitess/4722,2019-03-31T05:04:43Z,False,5ca04b9a6480fd706ff00e5c,"CopySchemaShard will need to run before SplitClone, so it seems like they both need something like this.",True,False,11,824898.4333333333
vitessio/vitess/4722,2019-03-31T05:14:14Z,False,5ca04dd56480fd78b9e8788f,"CopySchemaShard itself should succeed without the check, right? The tables have no data in them.",True,False,11,824898.4333333333
vitessio/vitess/4722,2019-03-31T05:16:27Z,False,5ca04e5a6480fd7081802b6b,It still errors out if the tables aren't created in the right order.,True,False,11,824898.4333333333
vitessio/vitess/4722,2019-03-31T05:21:28Z,False,5ca04f8b6480fd7656ed8dfe,"Ahh, of course...
Should re-enable checks after the apply?
Then we should have SplitClone disable for its own sake.",True,False,11,824898.4333333333
vitessio/vitess/4722,2019-03-31T06:37:43Z,False,5ca063ea6480fd734483c689,"> Ahh, of course...
> Should re-enable checks after the apply?
> Then we should have SplitClone disable for its own sake.

`set foreign_key_checks = 0` should only be setting a session variable, not a global, so if `usePool=false` does what it sounds like it does I would think there shouldn't be a need to reset it on the connection after copying the schema.

I could potentially add `set foreign_key_checks = @@foreign_key_checks` afterwards to copy the global back into the session as a precaution in case someone removes the `usePool=false` in the future. Was trying to discourage that with a comment, but a little extra caution seems harmless. I don't have strong feelings either way.

What do you think?",True,False,11,824898.4333333333
vitessio/vitess/4722,2019-03-31T15:57:13Z,False,5ca0e4886480fd76810105ab,Looks like the tests need fixing after all.,True,False,11,824898.4333333333
vitessio/vitess/4722,2019-03-31T16:12:53Z,False,5ca0e8386480fd728e054b9a,"Oh, I thought a dba query would allow running an arbitrary `set` but that must not be true. Need to look into this:

`TabletManager.ExecuteFetchAsDba on cell1-0000000010 error: rpc error: code = Unknown desc = unknown error: query: 'set foreign_key_checks = 0' is not supported on destinationMasterDb (errno 1105) (sqlstate HY000) during query: set foreign_key_checks = 0: rpc error: code = Unknown desc = unknown error: query: 'set foreign_key_checks = 0' is not supported on destinationMasterDb (errno 1105) (sqlstate HY000) during query: set foreign_key_checks = 0`",True,False,11,824898.4333333333
vitessio/vitess/4722,2019-03-31T16:14:06Z,False,5ca0e8836480fd70c26f7b8a,I think these tests use mocks. You'll just have to add that query to the expected list.,True,False,11,824898.4333333333
libretro_____libretro-common_____112,2019-03-31T20:23:53Z,True,libretro_____libretro-common_____112_____478378715,"So... no feedback, no guidance, not sure how to proceed...
API changes are complex due to the fact that all cores would need an updated libretro.h if this gets implemented.

With no feedback there can be no progress, and with no progress... well may as well start forking.
The API side is growing stale. The fact that so many things work on assumptions or hardcoding when the API can be fully bi-directional is annoying.

I figure there is no point moving forward without feedback from stakeholders so until that happens I won't be moving any of my related code forward.",True,True,2,5675.05
callstack_____react-native-paper_____485,2019-04-03T11:19:16Z,True,callstack_____react-native-paper_____485_____479446957,"@Zefau I also needed to do something similar and I ended up using focus and blur events. It's working on android, but for ios is working just in the simulator. On real ios device the surface has a bug related to height. Any ideea what might be the problem ? This is how the component looks like

```import React, { Component } from ""react"";
import { Keyboard, ScrollView } from ""react-native"";
import { Menu, TextInput, Theme } from ""react-native-paper"";
import PaperMenu from ""./PaperMenu"";

export interface TextInputAutocompleteProps {
  width: number;
  items: string[];
  value: string;
  theme: Theme;
  label: string;
  onChange: (value: string) => void;
}

interface TextInputAutocompleteState {
  filteredItems: string[];
  value: string;
  showMenu: boolean;
}

export default class TextInputAutocomplete extends Component<
  TextInputAutocompleteProps,
  TextInputAutocompleteState
> {
  state = {
    filteredItems: [] as string[],
    value: """",
    showMenu: false
  };
  componentDidMount = () => this.updateStateFromProps(this.props);

  componentWillReceiveProps = (props: TextInputAutocompleteProps) =>
    this.updateStateFromProps(props);

  updateStateFromProps = (props: TextInputAutocompleteProps) =>
    this.setState({ value: props.value });

  filterItems = value => {
    const filteredItems =
      value.trim() !== """"
        ? this.props.items.filter(
            item =>
              item !== value &&
              item.toUpperCase().startsWith(value.toUpperCase())
          )
        : [];
    const showMenu = filteredItems.length > 0;
    this.setState({
      showMenu,
      filteredItems
    });
  };

  onTextInputFocus = () => this.filterItems(this.state.value);

  onTextInputBlur = () => this.setState({ showMenu: false });

  onMenuDismiss = () => {
    this.setState({ showMenu: false });
    Keyboard.dismiss();
  };

  onItemPress = (item: string) => {
    this.onMenuDismiss();
    this.setState({ value: item });
    this.props.onChange(item);
  };

  onTextInputChange = value => {
    this.setState({ value });
    this.filterItems(value);
  };

  render() {
    const menuItems = this.state.filteredItems.map((item, i) => {
      const onPress = () => this.onItemPress(item);
      return (
        <Menu.Item
          style={{ minWidth: this.props.width, maxWidth: this.props.width }}
          onPress={onPress}
          key={i}
          title={item}
        />
      );
    });
    return (
      <PaperMenu
        style={{ marginTop: 50, width: this.props.width }}
        visible={this.state.showMenu}
        onDismiss={this.onMenuDismiss}
        anchor={
          <TextInput
            label={this.props.label}
            mode=""outlined""
            theme={this.props.theme}
            value={this.state.value}
            onChangeText={this.onTextInputChange}
            onFocus={this.onTextInputFocus}
            onBlur={this.onTextInputBlur}
          />
        }
      >
        <ScrollView
          scrollEnabled={true}
          showsVerticalScrollIndicator={true}
          keyboardShouldPersistTaps=""always""
          style={{ height: 135 }}
        >
          {menuItems}
        </ScrollView>
      </PaperMenu>
    );
  }
}
```
The PaperMenu is a fork of Menu component to temporary fix the bug I described here
[https://github.com/callstack/react-native-paper/issues/970](url)
",True,True,55,342611.05
callstack_____react-native-paper_____485,2019-04-03T13:47:46Z,True,callstack_____react-native-paper_____485_____479496791,On iOS Statusbar.currentHeight does not work so ending up with a undefined top.,True,True,55,342611.05
callstack_____react-native-paper_____485,2019-04-03T14:00:48Z,True,callstack_____react-native-paper_____485_____479502171,"Yes..I use a default value of 40 for now..so i removed StatusBar completely..the issue I have now is with the height of the menu..not the position
",True,True,55,342611.05
callstack_____react-native-paper_____485,2019-04-03T14:08:45Z,True,callstack_____react-native-paper_____485_____479505424,Please create issue ticket instead of posting here. This component is very new so you will see lot of issues.,True,True,55,342611.05
spring-projects/spring-retry/168,2019-04-04T12:19:33Z,False,5ca5f80e6480fd70c27240a4,This is h3 heading I think? So three hashes?,True,False,4,63253.55
nestjs_____typeorm_____27,2019-04-04T15:49:01Z,True,nestjs_____typeorm_____27_____479954114,"Any news on this? For some reason, fwoelffel's solution doesn't work for me, I guess it might be related to my multi-database setup & using forFeature().
The only way to get Subscribers to work for me right now is to reference them in subscribers array of forRoot() config. Which will end with missing dependencies again. ",True,True,25,905236.35
nestjs_____typeorm_____27,2019-04-04T15:51:54Z,True,nestjs_____typeorm_____27_____479955304,"If you use multiple connections, make sure you inject the right connection in your subscriber. Maybe you could provide us some code so we can see what's wrong.",True,True,25,905236.35
nestjs_____typeorm_____27,2019-04-04T16:08:18Z,True,nestjs_____typeorm_____27_____479961857,"> If you use multiple connections, make sure you inject the right connection in your subscriber. Maybe you could provide us some code so we can see what's wrong.

Thanks, I just had the same thought and am trying to find out how to control which connection is being injected. Are you able to tell me how to inject a certain connection?

The code: First, I'm registering a ""users"" connection like this
```ts
TypeOrmModule.forRoot({
	type: ""sqlite"",
	name: ""users"",
	database: Config.get(""databasePath"")+""/users.db"",
	entities: [UserEntity],
}),
```

And assigning the users db connection to be used for UserEntity.
```ts
TypeOrmModule.forFeature([
	UserEntity
], 'users')

```

Here's the basic UserSubscriber
```ts
@Injectable()
export class UserSubscriber implements EntitySubscriberInterface<UserEntity> {

  constructor(
    @InjectConnection() readonly connection: Connection,
	@InjectEventEmitter() private emitter: AppEventEmitter,
	) {
	connection.subscribers.push(this);
	console.log( typeof connection, typeof emitter);
  }

  listenTo() {
    return UserEntity;
  }
  beforeInsert(event: InsertEvent<UserEntity>) {
	console.log('### InsertEvent triggered!');
  };
}
```
",True,True,25,905236.35
nestjs_____typeorm_____27,2019-04-04T16:11:14Z,True,nestjs_____typeorm_____27_____479963005,"I'm not sure but if I remember well you should try with:

```js
  constructor(
    @InjectConnection('users') readonly connection: Connection,
    @InjectEventEmitter() private emitter: AppEventEmitter,
  ) {
    connection.subscribers.push(this);
  }
```",True,True,25,905236.35
nestjs_____typeorm_____27,2019-04-04T16:11:23Z,True,nestjs_____typeorm_____27_____479963061,"OMG - stupid me just found out all I have to do is to use
```ts
@InjectConnection('USERS') readonly connection: Connection,
```
thanks for pointing me at that one.

__EDIT:__ Haha you were faster. Thank you!",True,True,25,905236.35
spring-projects/spring-retry/168,2019-04-04T18:06:12Z,False,5ca648e46480fd7418468922,"Initially thought about ""something a bit greater than bold"", but agree, this consistency is better:) Fixed.",True,False,4,63253.55
spring-projects/spring-retry/168,2019-04-04T18:11:35Z,False,5ca64a0b6480fd744d79ea4a,Headers have been fixed. Thanks for review!,True,False,4,63253.55
jainaman224/Algo_Ds_Notes/925,2019-04-07T15:56:42Z,False,5caa1ef66480fd7260680bf4,What happened?,True,False,3,2744.3166666666666
jainaman224/Algo_Ds_Notes/925,2019-04-07T18:51:54Z,False,5caa47f96480fd71008f4a75,"@jainaman224 There were some issues in the code ,so I closed this PR and created a new PR (#926).",True,False,3,2744.3166666666666
webpack_____webpack-dev-server_____1664,2019-04-08T20:06:33Z,True,webpack_____webpack-dev-server_____1664_____480986713,"@rlamana @evilebottnawi This PR, in version 3.3.0, breaks the use of webpack-dev-server with Rails webpacker gem, inside Docker containers. We used to configure rails app to execute in 0.0.0.0:3000 (from container ""A""), and webpack-dev-server in 0.0.0.0:3035 (from container ""B""). So, the socket URL must be ""0.0.0.0:3035"". But, with this version, the socket URL is generated as ""0.0.0.0:3000"" (same port of Rails app, instead of 3035). ",True,True,39,88465.16666666667
webpack_____webpack-dev-server_____1664,2019-04-08T20:07:36Z,True,webpack_____webpack-dev-server_____1664_____480987071,The version 3.2.1 does not have problem with it :+1: ,True,True,39,88465.16666666667
webpack_____webpack-dev-server_____1664,2019-04-08T21:01:02Z,True,webpack_____webpack-dev-server_____1664_____481006338,This change also broke my setup. I have a static assets server on port 3000 that refers to the webpack-dev-server build on port 8080. Now it is looking for the websocket on port 3000 instead of 8080. This worked fine in 3.2.1.,True,True,39,88465.16666666667
webpack_____webpack-dev-server_____1664,2019-04-08T22:40:47Z,True,webpack_____webpack-dev-server_____1664_____481034349,"@pedrofurtado @nick, so as I understand you are not using the dev-server to actually serve your files, but just using it for the hot reload capability?

https://github.com/webpack-contrib/webpack-hot-middleware actually allows you to add hot reloading into an existing server.",True,True,39,88465.16666666667
webpack_____webpack-dev-server_____1664,2019-04-08T22:57:08Z,True,webpack_____webpack-dev-server_____1664_____481037691,I wonder if `client-src/default/index.js` should also take into account the [`devServer.public`](https://webpack.js.org/configuration/dev-server/#devserverpublic) option to override the URL value and support these kind of scenarios where dev server is not use to serve the files.,True,True,39,88465.16666666667
webpack_____webpack-dev-server_____1664,2019-04-09T09:05:27Z,True,webpack_____webpack-dev-server_____1664_____481167736,"@rlamana This change also broke my setup. I using the dev-server the same way as @nick.
",True,True,39,88465.16666666667
webpack_____webpack-dev-server_____1664,2019-04-09T11:01:09Z,True,webpack_____webpack-dev-server_____1664_____481205057,"This change broke out tools too. We have multiple sites proxied to a single domain with different paths. The original behavior was to get the port the actual Webpack dev server, rather than the one after proxied. Now the port changed and it's very tricky works to update the rest parts of the toolchains.",True,True,39,88465.16666666667
webpack_____webpack-dev-server_____1664,2019-04-09T11:14:26Z,True,webpack_____webpack-dev-server_____1664_____481208817,"> @pedrofurtado @nick, so as I understand you are not using the dev-server to actually serve your files, but just using it for the hot reload capability?
> 
> https://github.com/webpack-contrib/webpack-hot-middleware actually allows you to add hot reloading into an existing server.

Thanks for feedback, @rlamana ! Firstly, thanks for you work in maintainance of webpack-dev-server!

Actually, I use webpack-dev-server for serve static files and hot replacement. For this, we here use the Webpacker gem (Integration between Webpack and Rails -> https://github.com/rails/webpacker ), that provides the two features mentioned (serving static files and hot replacement). Our setup is Rails application running in localhost:3000, and webpack-dev-server (and its socket) running in localhost:3035

My scenario and scenario of @nick are similar :+1: ",True,True,39,88465.16666666667
webpack_____webpack-dev-server_____1664,2019-04-09T11:19:18Z,True,webpack_____webpack-dev-server_____1664_____481210147,"It was fixed, please test with latest version",True,True,39,88465.16666666667
webpack_____webpack-dev-server_____1664,2019-04-09T11:54:50Z,True,webpack_____webpack-dev-server_____1664_____481220009,@evilebottnawi Thanks! I will test here. Doubt: The latest version is the 3.3.0 (re-released) or the branch master?,True,True,39,88465.16666666667
webpack_____webpack-dev-server_____1664,2019-04-09T11:56:26Z,True,webpack_____webpack-dev-server_____1664_____481220433,"@pedrofurtado `3.3.0`, but we prepare `3.3.1` on today due some regressions",True,True,39,88465.16666666667
webpack_____webpack-dev-server_____1664,2019-04-09T11:58:06Z,True,webpack_____webpack-dev-server_____1664_____481220947,"@evilebottnawi Ok, thank you!",True,True,39,88465.16666666667
jainaman224/Algo_Ds_Notes/925,2019-04-09T13:41:01Z,False,5cacab9e6480fd73e814b7c6,"@jainaman224 There were some issues in the code ,so I closed this PR and created a new PR (#926).",True,False,3,2744.3166666666666
ReactionMechanismGenerator/ARC/113,2019-04-09T22:53:49Z,False,5cad23b26480fd71cdd9d348,"# [Codecov](https://codecov.io/gh/ReactionMechanismGenerator/ARC/pull/113?src=pr&el=h1) Report
> Merging [#113](https://codecov.io/gh/ReactionMechanismGenerator/ARC/pull/113?src=pr&el=desc) into [master](https://codecov.io/gh/ReactionMechanismGenerator/ARC/commit/5ea8a57c5d108f884622df662a54466e50e04ced?src=pr&el=desc) will **decrease** coverage by `0.01%`.
> The diff coverage is `12.5%`.

[![Impacted file tree graph](https://codecov.io/gh/ReactionMechanismGenerator/ARC/pull/113/graphs/tree.svg?width=650&token=jK7SSIPILm&height=150&src=pr)](https://codecov.io/gh/ReactionMechanismGenerator/ARC/pull/113?src=pr&el=tree)

```diff
@@            Coverage Diff            @@
##           master    #113      +/-   ##
=========================================
- Coverage   40.52%   40.5%   -0.02%     
=========================================
  Files          22      22              
  Lines        5419    5424       +5     
  Branches     1415    1416       +1     
=========================================
+ Hits         2196    2197       +1     
- Misses       2872    2874       +2     
- Partials      351     353       +2
```


| [Impacted Files](https://codecov.io/gh/ReactionMechanismGenerator/ARC/pull/113?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [arc/processor.py](https://codecov.io/gh/ReactionMechanismGenerator/ARC/pull/113/diff?src=pr&el=tree#diff-YXJjL3Byb2Nlc3Nvci5weQ==) | `57.87% <0%> (-0.7%)` | :arrow_down: |
| [arc/main.py](https://codecov.io/gh/ReactionMechanismGenerator/ARC/pull/113/diff?src=pr&el=tree#diff-YXJjL21haW4ucHk=) | `45.16% <25%> (+0.01%)` | :arrow_up: |
| [arc/reaction.py](https://codecov.io/gh/ReactionMechanismGenerator/ARC/pull/113/diff?src=pr&el=tree#diff-YXJjL3JlYWN0aW9uLnB5) | `41.47% <0%> (ø)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/ReactionMechanismGenerator/ARC/pull/113?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/ReactionMechanismGenerator/ARC/pull/113?src=pr&el=footer). Last update [5ea8a57...6abab0e](https://codecov.io/gh/ReactionMechanismGenerator/ARC/pull/113?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",True,False,4,1173.9
webpack_____webpack-dev-server_____1664,2019-04-10T13:46:26Z,True,webpack_____webpack-dev-server_____1664_____481697556,"@evilebottnawi Even in `3.3.1`, the error is still occuring :cry: (as described in https://github.com/webpack/webpack-dev-server/pull/1664#issuecomment-481006338 )  

The workaround, for me, is to lock in version `3.2.1` for a while.",True,True,39,88465.16666666667
ReactionMechanismGenerator/ARC/113,2019-04-10T18:23:29Z,False,5cae36ef6480fd794ff7f0d1,"`output_path` and `out_path` are confusing names, not informative of their content (that one is a directory path).
Could you instead keep the original `output_path`, and change the condition to be as suggested below?
`if not os.path.exists(os.path.dirname(output_path)):`",True,False,4,1173.9
ReactionMechanismGenerator/ARC/113,2019-04-10T18:27:09Z,False,5cae36f36480fd73bbe95903,"in the commit message, could you replace
`model_chemistry.lower() == 'fake'`
with
`model_chemistry = 'fake'`
?",True,False,4,1173.9
ReactionMechanismGenerator/ARC/113,2019-04-10T18:27:43Z,False,5cae36f46480fd7548567118,How about renaming 'fake' as 'kinetics'?,True,False,4,1173.9
webpack_____webpack-dev-server_____1664,2019-04-12T03:05:12Z,True,webpack_____webpack-dev-server_____1664_____482419286,Broke my setup too (similar to https://github.com/webpack/webpack-dev-server/pull/1664#issuecomment-481006338.). `webpack-dev-server` running on a different port is only used to serve assets i.e. js and whatnot.,True,True,39,88465.16666666667
webpack_____webpack-dev-server_____1664,2019-04-12T10:42:10Z,True,webpack_____webpack-dev-server_____1664_____482528189,https://github.com/webpack/webpack-dev-server/pull/1664#issuecomment-481699922,True,True,39,88465.16666666667
pi-hole_____pi-hole_____2706,2019-04-14T22:46:51Z,True,pi-hole_____pi-hole_____2706_____270333603,"**What does this PR aim to accomplish?:**

This is the fix for the security vulnerability documented in issue #2704.

**How does this PR accomplish the above?:**

It removes the vulnerable misconfiguration in the defaults.

**What documentation changes (if any) are needed to support this PR?:**

N/A.",True,True,4,29.833333333333332
pi-hole_____pi-hole_____2706,2019-04-14T22:54:15Z,True,pi-hole_____pi-hole_____2706_____483065459,"If using HTTP is insecure and can cause a DoS, then using unencrypted DNS is even more insecure and more likely to cause a DoS. Hint: DNS is by default insecure.

Pi-hole is not the place you want to try to solve this.",True,True,4,29.833333333333332
pi-hole_____pi-hole_____2706,2019-04-14T23:08:07Z,True,pi-hole_____pi-hole_____2706_____483066413,"The ISP for sysctl.org can break the web (and VoIP, which may be used for emergency services) for every single pi-hole user who doesn't change the default blocklists (I would estimate this is 99%+ of users).

If you're okay with this, then fine.  But I doubt that's what your users signed up for.",True,True,4,29.833333333333332
pi-hole_____pi-hole_____2706,2019-04-14T23:16:41Z,True,pi-hole_____pi-hole_____2706_____483067051,"The owners of any list can ""break the web"" for all of their users, even those outside of Pi-hole, if they wished. That is why it is up to the user to decide what blocklists they want to use. These ""default"" lists are not forced upon anyone, they are recommended at install time.

If you feel so strongly about this issue, then contact the list maintainers instead. They are the ones who control access to their lists. Again, Pi-hole is not the place you want to try to solve such global issues as HTTP or DNS insecurity.",True,True,4,29.833333333333332
nox/serde_urlencoded/51,2019-04-15T07:28:59Z,False,5cb433f36480fd79d68d9232,Why would you want to serialise an unit struct into nothing?,True,False,3,130944.03333333334
infOpen/infopen-pre-commit-hooks/119,2019-04-16T03:23:04Z,False,5cb54bcd6480fd74184db6ad,Closing this in favor of #126,True,False,1,0.0
webpack_____webpack-dev-server_____1664,2019-04-16T07:16:38Z,True,webpack_____webpack-dev-server_____1664_____483540963,"also broke my setup, this fix is a breaking change, maybe revisit it?",True,True,39,88465.16666666667
webpack_____webpack-dev-server_____1664,2019-04-16T09:37:33Z,True,webpack_____webpack-dev-server_____1664_____483587053,This also broke our setup and this is a breaking change for us. How can we fix this?,True,True,39,88465.16666666667
webpack_____webpack-dev-server_____1664,2019-04-16T10:18:59Z,True,webpack_____webpack-dev-server_____1664_____483600640,"yep :disappointed: we have `sockPort` for this case now https://github.com/webpack/webpack-dev-server/pull/1792, feel free to send a PR with revert",True,True,39,88465.16666666667
crossplaneio/crossplane/397,2019-04-16T16:04:15Z,False,5cb5fe346480fd77668d7d3d,"# [Codecov](https://codecov.io/gh/crossplaneio/crossplane/pull/397?src=pr&el=h1) Report
> Merging [#397](https://codecov.io/gh/crossplaneio/crossplane/pull/397?src=pr&el=desc) into [master](https://codecov.io/gh/crossplaneio/crossplane/commit/b1dda118a2d04b128d48f7cff27fca22849612a5?src=pr&el=desc) will **increase** coverage by `0.07%`.
> The diff coverage is `n/a`.


```diff
@@            Coverage Diff             @@
##           master     #397      +/-   ##
==========================================
+ Coverage   57.87%   57.95%   +0.07%     
==========================================
  Files          97       97              
  Lines        5344     5344              
==========================================
+ Hits         3093     3097       +4     
+ Misses       2116     2112       -4     
  Partials      135      135
```
",True,False,40,30597.416666666668
crossplaneio/crossplane/397,2019-04-17T17:51:02Z,False,5cd206436480fd3e28ddf980,I'm reading this here first before looking at the doc. Comments for these `string` fields might make it more obvious what they were for.,True,False,40,30597.416666666668
crossplaneio/crossplane/397,2019-04-17T17:54:05Z,False,5cd206436480fd3e28ddf981,"It sounds like step one teaches Crossplane about the extension while step two instantiates an instance of the extension, and thus step two could be repeated N times to install N Gitlabs?

I had to read this a few times to grok that. Initially it seemed like step 2 might have been required to complete the installation of Gitlab _support_, rather than installing a Gitlab instance.",True,False,40,30597.416666666668
crossplaneio/crossplane/397,2019-04-17T18:01:24Z,False,5cd206436480fd3e28ddf982,"I think workloads could be a good candidate for packaging as an extension too. Neither the contemporary workload design or the proposed complex workload design are useful until the `kubernetescluster.compute.crossplane.io` extension has been installed. We've discussed potentially wanting to support other workload flavours (e.g. serverless, VM) in future, which would each require their own scheduler implementations and target some resource claim other than `KubernetesCluster`.",True,False,40,30597.416666666668
crossplaneio/crossplane/397,2019-04-17T18:05:08Z,False,5cd206436480fd3e28ddf983,Will it be possible to configure the EM to point to an arbitrary registry?,True,False,40,30597.416666666668
crossplaneio/crossplane/397,2019-04-17T18:16:52Z,False,5cd206436480fd3e28ddf984,"How will dependency resolution deal with versioning? I imagine there will be cases in which version N of one extension requires at least version M of another extension, etc.

This document mentions the controller code will be versioned - I presume this means via a Docker tag of the container image that contains the controller code. Our CRD schemas are also versioned in the typical Kubernetes fashion. Is that enough for us to consider an extension versioned?",True,False,40,30597.416666666668
crossplaneio/crossplane/397,2019-04-17T18:18:56Z,False,5cd206436480fd3e28ddf985,Why not require this to be specified one of these two ways?,True,False,40,30597.416666666668
crossplaneio/crossplane/397,2019-04-17T18:20:12Z,False,5cd206436480fd3e28ddf986,Will the extension manager also support updating and deleting extensions?,True,False,40,30597.416666666668
crossplaneio/crossplane/397,2019-04-17T18:22:30Z,False,5cd206436480fd3e28ddf987,"The design examples show a `.status.phase` field, which appears absent here.",True,False,40,30597.416666666668
crossplaneio/crossplane/397,2019-04-17T19:39:00Z,False,5cba48bc6480fda5d9db3893,"> filesystem based contents of a package

Does this mean the metadata files that are contained inside the package tarball?",True,False,40,30597.416666666668
crossplaneio/crossplane/397,2019-04-17T19:39:39Z,False,5cba48bb6480fda2c5eb02b6,Why translate? Could we just use an instance of this CRD as the metadata inside a package?,True,False,40,30597.416666666668
crossplaneio/crossplane/397,2019-04-17T19:41:48Z,False,5cba48b66480fd9d47980a0d,"Nitpick, but I'm 99% sure there's no such thing as a Redis user. ;) ",True,False,40,30597.416666666668
crossplaneio/crossplane/397,2019-04-19T03:59:37Z,False,5cd206446480fd3e28ddf988,"The overall design looks good to me (after quick scanning), i.e., I don't have any obvious ""red flags"" which would prevent us from going forward.

My only question as follows: do we want the ExtensionManager to be a part of this GitHub project: crossplaneio/crossplane, vs. should we create a separate GitHub project: crossplaneio/extension-manager?

While it is related to the crossplane, I do see it performing a distinct set of tasks that in my mind are not part of the ""core"" crossplane components, like ""ResourceClass"", ""ResourceClaim"", ""Provider(s)"", and ""Workloads"". There appears to be very little (or no) intersect between above mentioned ""core"" components and the ExtensionManager.

I am just wondering if you have considered this option. If not, are you willing to entertain it? If yes, what are your thoughts?",True,False,40,30597.416666666668
crossplaneio/crossplane/397,2019-04-19T04:11:29Z,False,5cbab6ad6480fda28713989d,"> I do see it performing a distinct set of tasks that in my mind are not part of the ""core"" crossplane components, like ""ResourceClass"", ""ResourceClaim"", ""Provider(s)"", and ""Workloads"".

Isn't the idea that ResourceClaims and Providers would be provided by extensions? Following on from that KubernetesCluster would be provided by an extension, and thus KubernetesApplication (i.e. workloads) would need to be provided by an extension. The design states ""Core API types (CRDs)"" will be part of Crossplane, but I took this to specifically mean `core.crossplane.io` kinds like `ResourceClass`.

This is all tangential to @ichekrygin's point in the comment I quoted, but indicates that it might be worth being more explicit about which contemporary CRDs will be supported by Crossplane without any extensions.",True,False,40,30597.416666666668
crossplaneio/crossplane/397,2019-04-20T20:07:57Z,False,5cbb7d4f6480fd9caac22bb2,"@ichekrygin Regarding putting extension manager in a separate repo, I think it would be easier to stick to a single repo approach for now (build, packaging, etc.). I agree that extension manager is somewhat independent of the core, but I would push for it to be in the same repo (at least for the short term).",True,False,40,30597.416666666668
crossplaneio/crossplane/397,2019-04-21T01:15:35Z,False,5cbbc5646480fda359509b6d,"@ichekrygin @bassam From an experience perspective, I think it's important that when Crossplane has been installed, the extension manager functionality is also present and ready to go.  If we were to build and package the extension manager separately from core Crossplane, that could mean a second set of steps for the user to download and install the extension manager before they'd be able to start adding extensions to Crossplane.

I definitely prefer for Crossplane once it has been installed to be 100% ready to start installing a user's extension requests as well, and the easiest/smoothest way to do that right now seems to build/package the extension manager along with core Crossplane.",True,False,40,30597.416666666668
laurent22_____joplin_____1141,2019-04-21T12:43:50Z,True,laurent22_____joplin_____1141_____485248638,Closed inactive pull request. Feel free to ask to re-open if there's something new.,True,True,8,129507.5
htmlacademy-php/1050655-doingsdone-9/1,2019-04-22T11:19:11Z,False,5cbda4956480fda6aadb21c8,"ОК, имя добавил, но у тебя есть ссылка на профиль, а у меня нет, я тоже хочу ))",True,False,2,113.95
htmlacademy-php/1050655-doingsdone-9/1,2019-04-22T13:13:08Z,False,5cbdbf4c6480fda579ac822e,"Добавил, глянь ниже
",True,False,2,113.95
kubernetes/kubernetes/71366,2019-04-25T04:58:44Z,False,5cc13fb96480fd9f9c4893e8,"Rotten issues close after 30d of inactivity.
Reopen the issue with `/reopen`.
Mark the issue as fresh with `/remove-lifecycle rotten`.

Send feedback to sig-testing, kubernetes/test-infra and/or [fejta](https://github.com/fejta).
/close",True,False,10,220183.41666666666
kubernetes/kubernetes/71366,2019-04-25T04:58:52Z,False,5cc13fbe6480fda5a027269e,"@fejta-bot: Closed this PR.

<details>

In response to [this](https://github.com/kubernetes/kubernetes/pull/71366#issuecomment-486519829):

>Rotten issues close after 30d of inactivity.
>Reopen the issue with `/reopen`.
>Mark the issue as fresh with `/remove-lifecycle rotten`.
>
>Send feedback to sig-testing, kubernetes/test-infra and/or [fejta](https://github.com/fejta).
>/close


Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository.
</details>",True,False,10,220183.41666666666
rust-lang/rust.vim/319,2019-04-28T13:53:18Z,False,5cc5b17a6480fd9f9c4a7fb1,"Thanks for the pull request, and welcome! The Rust team is excited to review your changes, and you should hear from @chris-morgan (or someone else) soon.

If any changes to this PR are deemed necessary, please add them as extra commits. This ensures that the reviewer can see what has changed since they last reviewed the code. Due to the way GitHub handles out-of-date commits, this should also make it reasonably obvious what issues have or haven't been addressed. Large or tricky changes may require several passes of review and changes.

Please see [the contribution instructions](https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md) for more information.
",True,False,2,30293.333333333332
ReactiveX_____RxSwift_____1960,2019-04-30T07:55:54Z,True,ReactiveX_____RxSwift_____1960_____274630373,"Per discussion on Twitter and GitHub previously - It seems we didn't necessarily consider all of the downsides of limiting to Static Library usage on Carthage. 

The main issue is that Carthage allows literally no customiation options for this. Since Dynamic Frameworks are the ""default"" option, I think it makes more sense to go back to our old default and have users who require the customization do some ""manual"" work.

That customization could be a custom Carthage script for people who're interested in RxSwift as a Static Library. For example, something along the lines of: 

```none
carthage update RxSwift --platform iOS --no-build
sed -i -e 's/MACH_O_TYPE = mh_dylib/MACH_O_TYPE = staticlib/g' Carthage/Checkouts/RxSwift/Rx.xcodeproj/project.pbxproj
carthage build RxAlamofire --platform iOS
```

We can put the above script under the Carthage category in our README file for users who ""insist"" on using RxSwift as a Static Library as a more advanced feature, and this could create a possible all-around solution for the ""common"" scenario (dynamic) and more advanced scenario (static). 

Hopefully Carthage will one day allow specifying these sorts of things inside the Cartfile or a similar mechanism.

Thoughts? @kzaher @tonyarnold @mfcollins3 @layoutSubviews",True,True,33,1843.75
ReactiveX_____RxSwift_____1960,2019-04-30T07:57:28Z,True,ReactiveX_____RxSwift_____1960_____279647192,"I believe you can safely delete the `MACH_O_TYPE` entries entirely. They'll default to Xcode's recommendation, which is `mh_dylib`.",True,True,33,1843.75
ReactiveX_____RxSwift_____1960,2019-04-30T07:58:43Z,True,ReactiveX_____RxSwift_____1960_____279647631,"True, but in a way I always prefer explicitness (not that the default will change or anything but still I don't see harm in that). The second thing this helps with is the above `sed` script works. Even though it could replace `MACH_O_TYPE =` as well. Don't have a huge preference to this :) ",True,True,33,1843.75
ReactiveX_____RxSwift_____1960,2019-04-30T08:00:34Z,True,ReactiveX_____RxSwift_____1960_____279648204,Actually removing it will leave no trace of it in the `project.pbxproj` so in a way I think leaving it explicit allows for better communication and also will allow this manual customization in the form of a bash script like the above,True,True,33,1843.75
ReactiveX_____RxSwift_____1960,2019-04-30T08:04:49Z,True,ReactiveX_____RxSwift_____1960_____487855008,Added possible README instructions. ,True,True,33,1843.75
ReactiveX_____RxSwift_____1960,2019-04-30T08:56:37Z,True,ReactiveX_____RxSwift_____1960_____487869969,"I'm not sure I understand, 

dynamic frameworks are bad because they increase your startup time. Cocoapods use static libs, Swift team added explicit support for static libs, Apple advises against large number of dynamic frameworks, Blaze uses static frameworks. What in the world is the argument for dynamic frameworks?
",True,True,33,1843.75
ReactiveX_____RxSwift_____1960,2019-04-30T09:01:47Z,True,ReactiveX_____RxSwift_____1960_____487871638,"I've opened it for discussion for this specific reason. I have no strong opinion on this as I prefer package managers that give developers a choice :P I'm mainly interested in a common ground that fits most of the developers. 

The main issue noticed here is the ""virality"" of static libraries - e.g. if you have many small frameworks that all consume RxSwift using Carthage, each of these contains an individual static copy of RxSwift. 

For example if you take in both RxOptional and RxSwiftExt and RxDataSources - at least to my understanding, they all depend on RxSwift which is now a Static Library. 

About CocoaPods - the default is still Dynamic. (When you `pod init` you get a Podfile with a dynamic library) and Apple's guidance is basically correct but is not ""basic knowledge"".

What companies usually do is similar to what @mfcollins3 suggested - a single Dynamic Framework containing many static libraries. But again, since I'm not a consumer of Carthage I'm not necessarily sure on how critical this is or isn't (that's why @tonyarnold and the others are tagged above)",True,True,33,1843.75
ReactiveX_____RxSwift_____1960,2019-04-30T09:12:39Z,True,ReactiveX_____RxSwift_____1960_____487874564,"> The main issue noticed here is the ""virality"" of static libraries - e.g. if you have many small frameworks that all consume RxSwift using Carthage, each of these contains an individual static copy of RxSwift.

Yes, we should change this for them to be also static. None of them will contain a copy of RxSwift as far as I can tell.

As far as I can tell nobody wants to use dynamic library. It was a crutch for the inadequacy of the Swift compiler, not a preferred solution.

If we are reverting this I would want to be sure is it because there are some good technical arguments. If we are going to do it because the ecosystem is lazy and doesn't want to transition in general to dynamic frameworks, I'm also fine if that's the case. 

If it is because some people are unhappy because they are using RxSwift in team environment and are now starting holy wars again how we are horrible and every change is just a fuel for the fire (in this case I'm not sure I care much).

But anyway, this is the place where people can voice their opinion and concerns. I don't stalk people on Twitter. Make up your mind and voice your reasons here. I'm fine with reverting if there are good technical arguments or people voice that the ecosystem doesn't want to do this.",True,True,33,1843.75
ReactiveX_____RxSwift_____1960,2019-04-30T09:16:58Z,True,ReactiveX_____RxSwift_____1960_____487875733,"> If we are reverting this I would want to be sure is it because there are some good technical arguments. If we are going to do it because the ecosystem is lazy and doesn't want to transition in general to dynamic frameworks, I'm also fine if that's the case.

Agreed - this PR was opened just to allow choosing either option whenever those technical arguments are made.

Care sharing your thoughts @tonyarnold @layoutSubviews ? ",True,True,33,1843.75
ReactiveX_____RxSwift_____1960,2019-04-30T09:21:19Z,True,ReactiveX_____RxSwift_____1960_____487876916,"The default for all of our existing Xcode-based tooling supports dynamic frameworks out of the box - more so for Carthage than others, as it is just reusing Xcode's project setup. Yes, Xcode also supports static archives, but that's not the default, nor how Apple themselves distribute library-based dependencies (frameworks!). 

> As far as I can tell nobody wants to use dynamic library. It was a crutch for the inadequacy of the Swift compiler, not a preferred solution.

I'm not sure where this comment is coming from at all. Dynamic frameworks are (and have been) the basis of all distributable frameworks on Apple's platforms since Mac OS X was first released. Limitations in iOS have meant that people have come up with workarounds like using static frameworks (which aren't a supported configuration).

You've both stated you don't use, nor particularly care about Carthage as a tool - that's fine, and reasonable - but as a user of Carthage, I'm telling you that the change you've made here negatively impacted my projects that use RxSwift. 

Look, it's your project, so do as you please, but you're asking a community of people who rely on your library to change the default setup of entire projects to support a change Apple themselves have said will be unnecessary in future (see the earlier comments in #1799 about the improvements to dyld in iOS 11 and later).

> because the ecosystem is lazy

Ouch. Definitely not it.",True,True,33,1843.75
ReactiveX_____RxSwift_____1960,2019-04-30T10:06:39Z,True,ReactiveX_____RxSwift_____1960_____487896762,"I would say the people advocating for `dynamic libs` have a point. Although `Static Libs` are my favourites, there seems to be a huge technical debt in configuration and setup when you have multiple frameworks that use `RxSwift` which could lead to bloating the entire App. However I am thinking of a solution with the [Scheme here is the hack I found for now but it is too geeky.. : ](https://github.com/Carthage/Carthage/issues/1227) ",True,True,33,1843.75
ReactiveX_____RxSwift_____1960,2019-04-30T10:18:44Z,True,ReactiveX_____RxSwift_____1960_____487899700,"> But anyway, this is the place where people can voice their opinion and concerns. I don't stalk people on Twitter. Make up your mind and voice your reasons here.

@kzaher I'm sorry if I've offended you in any way. Please note that I _did_ voice my opinion and concerns both here, and on Twitter (and continue to do so). 

I value the work that you and the team have done with RxSwift, regardless of my disagreement with the change that kicked this all off.

I've given my feedback on this issue, so unless you want more information from me I'm going to leave you folks to make up your minds about this issue and butt out.",True,True,33,1843.75
ReactiveX_____RxSwift_____1960,2019-04-30T10:46:03Z,True,ReactiveX_____RxSwift_____1960_____487906415,"I think that regardless of the written content we find, we also need to consider the ecosystem of other dependency developers.

Looking at other large iOS frameworks: ReactiveSwift, Alamofire, SnapKit, Kingfisher, CryptoSwift - are all **dynamic**.

Furthermore, the more I tried, I couldn't find a single known iOS dependency that sets MACH_O_TYPE to Static.

Also, When you remove the `MACH_O_TYPE` configuration in Xcode, the default you get is dynamic as well. 

Basically everything here makes me lean towards going back to dynamic - it seems to be the widespread used community standard (for Cocoa in general) and it's also the default in the tooling we have around Apple-related development (Xcode, CocoaPods, etc.)

Even if a Static Library could possibly be more optimized - it's something for advanced developers to pick and do on their own (perhaps with the aforementioned script I provided), and probably shouldn't be the default. It was definitely not something embraced by the Apple developer community, so it seems.",True,True,33,1843.75
ReactiveX_____RxSwift_____1960,2019-04-30T10:52:01Z,True,ReactiveX_____RxSwift_____1960_____487907812,"I personally feel if the discussion here is around performance it needs to be backed by numbers. Just saying static is better because it’s faster is not a convincing argument in any way. The counter point of reducing link time is increasing load time because we are bloating the executable. 

This is a huge inconvenience for non cocoapods users (not just carthage but manual integrators too) for no demonstrable gains. 

It will also affect the entire ecosystem that provides frameworks that depend on Rx (and not all Rx libraries live inside the RxCommunity repo). 

I think you guys might be underestimating the impact this will have on current usage and adoption of the framework and I am a strong NO for this change. ",True,True,33,1843.75
ReactiveX_____RxSwift_____1960,2019-04-30T11:24:25Z,True,ReactiveX_____RxSwift_____1960_____487915523,"> I personally feel if the discussion here is around performance it needs to be backed by numbers.

Agree.

> Just saying static is better because it’s faster is not a convincing argument in any way. 

Well it is faster, can't tell by how much since nobody on the internet hasn't published any recent meaningful benchmarks.

> The counter point of reducing link time is increasing load time because we are bloating the executable.

If you don't need something to run your app. Don't link it into your binary. Dynamic linking will still load all of those unused symbols in the memory as far as I can tell, the symbols just won't be resolved eagerly, so it should be as bad.

> This is a huge inconvenience for non cocoapods users (not just carthage but manual integrators too) for no demonstrable gains.

@tonyarnold Can you please provide links that show that Apple wants the entire ecosystem to move to dynamic libraries and the performance impact? I didn't get that from you.

2016
https://developer.apple.com/videos/play/wwdc2016/406/
Don't use dylibs.

2017
https://developer.apple.com/videos/play/wwdc2017/413
2:52 You should use fewer dylibs.

https://devstreaming-cdn.apple.com/videos/wwdc/2017/413fmx92zo14voet8/413/413_app_startup_time_past_present_and_future.pdf?dl=1
Slide 13:
Do less!
• Embed fewer dylibs

Why did Apple add official support for static libs in the Swift compiler?

Why did Carthage add support for static frameworks? https://github.com/Carthage/Carthage/releases/tag/0.30.1

Are there any benchmarks? Videos don't provide any data. Not even biased benchmarks made by the engineers working on this.

I can respect opinions, but I would appreciate links to the apple domain more.

Having said that, I personally don't care much. If Carthage users want to use dylibs, I can change it. I don't really care that much do Carthage users want to do it because it's easier, or they think that the performance/convenience tradeoff isn't worth it, or some other reason.

> Ouch. Definitely not it.

So far I haven't seen benchmarks or links telling otherwise, so it would seem to me that it is. Again, maybe it's not, just saying that you haven't provided any evidence for the opposite.

I think I've been thinking about this in the wrong way. If we leave static libraries, people will complain and we'll have to respond. For the dynamic one people didn't complain much, so let's go with the dynamic ones.",True,True,33,1843.75
ReactiveX_____RxSwift_____1960,2019-04-30T11:27:43Z,True,ReactiveX_____RxSwift_____1960_____487916425,I guess we'll have to cut a 5.0.1 ? (or reset 5.0.0 tag but I remember you prefer not doing that),True,True,33,1843.75
ReactiveX_____RxSwift_____1960,2019-04-30T12:01:32Z,True,ReactiveX_____RxSwift_____1960_____487924847,"Again, we shouldn't be changing tags.",True,True,33,1843.75
ReactiveX_____RxSwift_____1960,2019-04-30T12:02:28Z,True,ReactiveX_____RxSwift_____1960_____487925122,I'll make 5.0.1.,True,True,33,1843.75
ReactiveX_____RxSwift_____1960,2019-04-30T15:02:02Z,True,ReactiveX_____RxSwift_____1960_____487987886,"I have a little problem, I can't detect the tag 5.0.1
what happened ?

Cartfile -> 
github ""ReactiveX/RxSwift"" ~> 5.0

Terminal ->
*** Checking out RxSwift at ""3.0.0.alpha.1""",True,True,33,1843.75
ReactiveX_____RxSwift_____1960,2019-04-30T15:04:47Z,True,ReactiveX_____RxSwift_____1960_____487988964,"Are you running `carthage update`? It seems to work fine here
```
github ""ReactiveX/RxSwift"" ~> 5.0
```

```
$ carthage update RxSwift --platform ios          
*** Fetching RxSwift
*** Checking out RxSwift at ""5.0.1""
*** xcodebuild output can be found in /var/folders/73/lnfrs9hx1nn6khr3r3lzh5600000gp/T/carthage-xcodebuild.ADcoWR.log
*** Downloading RxSwift.framework binary at ""ShaiTheBravest""
```
",True,True,33,1843.75
ReactiveX_____RxSwift_____1960,2019-04-30T15:06:07Z,True,ReactiveX_____RxSwift_____1960_____487989496,"Yes 

```
$ carthage update
*** Fetching SwifterSwift
*** Fetching BkoolUtilitiesiOSLib
*** Fetching RxSwift
*** Fetching BkoolHTTPFetcher-IOS
*** Checking out RxSwift at ""3.0.0.alpha.1""
*** Checking out SwifterSwift at ""4.6.0""
*** Checking out BkoolHTTPFetcher-IOS at ""1.1.1""
*** Checking out BkoolUtilitiesiOSLib at ""1.2.1""
*** xcodebuild output can be found in /var/folders/sq/vzy_95nj6bl86k1rp_nghbqr0000gp/T/carthage-xcodebuild.fPHO04.log
^C
$ carthage version
0.33.0
```",True,True,33,1843.75
ReactiveX_____RxSwift_____1960,2019-04-30T15:09:16Z,True,ReactiveX_____RxSwift_____1960_____487990886,I will try to try erasing the carthage cache,True,True,33,1843.75
ReactiveX_____RxSwift_____1960,2019-04-30T15:26:32Z,True,ReactiveX_____RxSwift_____1960_____487997682,"Sorry I am very stupid, I had dependence on another personal liberty, that had not updated his Cartfile, then there was a conflict.

My deepest apologies. And above all, thank you very much for this great tool!",True,True,33,1843.75
ReactiveX_____RxSwift_____1960,2019-04-30T16:02:31Z,True,ReactiveX_____RxSwift_____1960_____488011804,"For future reference here's some solid data on how this affects app launch time https://blog.automatic.com/how-we-cut-our-ios-apps-launch-time-in-half-with-this-one-cool-trick-7aca2011e2ea

In our experience ours also dropped at least this much by switching entirely to static frameworks",True,True,33,1843.75
ReactiveX_____RxSwift_____1960,2019-04-30T17:42:42Z,True,ReactiveX_____RxSwift_____1960_____488046844,"@freak4pc + @kzaher IMO I don’t think we should be flip flopping like this. I would wait for at least 2 weeks to hear all the complains while searching for an optimal solution. There was an issue where we discussed the static libs and people should have brought up all their opinions there and not afterwards. All I am say is that let’s wait and find try find a solution first.. just like we did on the previous issue where it was long discussed. I know people will always complain but wait a moment before cutting 5.0.1 

<sub>Sent with <a href=""http://githawk.com"">GitHawk</a></sub>",True,True,33,1843.75
ReactiveX_____RxSwift_____1960,2019-04-30T18:30:09Z,True,ReactiveX_____RxSwift_____1960_____488063587,"@bobgodwinx Appreciate your opinion but I’ll have to respectfully disagree - it was sort of a mistake to switch cold turkey to a non-default build option, but it would’ve possibly been hard finding that error without the release. 

Right now there was reason to wait anymore. We’ve discussed plenty and reverting make sense while still offering a script to go static if needed - which takes care of both scenarios. ",True,True,33,1843.75
ReactiveX_____RxSwift_____1960,2019-04-30T23:06:00Z,True,ReactiveX_____RxSwift_____1960_____488146681,"Dynamic libraries (frameworks) have a variety of benefits over static frameworks.

- Reduction in memory usage: Static linking duplicates code in to code segments.
- Reduced disk space.
- Shared memory: The dynamic linker can share VM pages between apps that link a dynamic framework. Frameworks in /System and /Library do not get loaded more than once into memory. In user app space a framework in a app bundle can be shared between extensions or subprocesses too reducing memory usage.
- Guaranteed canonical type linkage: If your app has two dynamic frameworks that link against the same static framework you end up with 2 versions of that static code in your app’s memory space and type/symbol resolution is random and/can get over written as dyld loads further .frameworks. This causes all sorts of problems with ObjectiveC categories not sure how it affects swift exactly but I assume the ObjC bridged types will get buggered up. Dyld will fortunately bitch quite loudly when it notices this.

The canonical way of sharing code across processes on modern systems has always been dynamic libraries. Unix .so, Windows .dll, Mac .frameworks (actually .so’s with a custom container file structure).

Static libraries (basically just simple archives of .o files - static frameworks are no different) are a legacy of times before we had the *benefit* of dynamic linking.

One of the major reasons behind Swift’s push for ABI and module stability is to reap all the *benefits* of dynamic linking.

Yes there are some performance trade offs. Dynamic libraries are a space vs time trade off. But they also come with a bunch of other benefits too around tooling.

The reason behind preferencing static frameworks over dynamic in iOS are rapidly receding into the past (as Apple CPUs get faster and dyld is improved).

The idea of switching RxSwift to a static framework by default was an absolute unequivocal mistake.",True,True,33,1843.75
ReactiveX_____RxSwift_____1960,2019-04-30T23:16:58Z,True,ReactiveX_____RxSwift_____1960_____488148879,"> The idea of switching RxSwift to a static framework by default was an absolute unequivocal mistake.

As much as I enjoy a mocking post-mortem criticism from people who've never contributed code to this repo, never participated in a single discussion (even on the specific topic of static libraries that was discussed for over 2.5 weeks here before this release), etc ... maybe just ... don't ? 

People make mistakes, and that's fine. We're not employees of RxSwift but contributors who take **a lot** of time from their day to maintain this project. Please be respectful of that.

I still don't think it's a mistake like a preference, but the preference of a library should be the consensus of the community and not the preference of a few people. We've taken responsibility and reverted the code and pushed a new release in basically under 12 hours since the initial complaint (which was on Twitter, and not even on a GitHub issue). Can you show me an (even paid or commercial) project that does that so quickly? 

The rest of your post was very informative and interesting. Thanks for the information. 

I invite you to be an active member of this community, contribute to discussions, code, etc. and help steer the boat the next time a similar ""mistake"" could possibly happen, but providing such an aggressive sentence as an outsider is absolutely ridiculous and disrespectful in my eyes. ",True,True,33,1843.75
ReactiveX_____RxSwift_____1960,2019-04-30T23:46:45Z,True,ReactiveX_____RxSwift_____1960_____488154485,Sorry @freak4pc I wasn’t trying to mock. I unreservedly apologise if it was taken that way.  I very much appreciate the work of the RxSwift maintainers.,True,True,33,1843.75
ReactiveX_____RxSwift_____1960,2019-05-01T00:07:07Z,True,ReactiveX_____RxSwift_____1960_____488158197,"@freak4pc you are right that it can be a preference to use static linking, and in fact at times it would be the appropriate behaviour. For example if you were building a command line util that you don’t want to have any external dependencies (beyond the system frameworks) - the latest builds of Carthage appear to now statically link CarthageKit (and RecativeCocoa) for example. Or if you need a simplified deployment artefact (GoLang preferences static linking but it is easier in that community as all dependencies are sources).

And you could do this with macOS/iOS targets too but it would require build tooling support. Cocoapods provides this support somewhat. But not everyone uses that.",True,True,33,1843.75
crossplaneio/crossplane/397,2019-05-01T05:14:13Z,False,5cc92c576480fd9ef4bb4d2e,"# [Codecov](https://codecov.io/gh/crossplaneio/crossplane/pull/397?src=pr&el=h1) Report
> Merging [#397](https://codecov.io/gh/crossplaneio/crossplane/pull/397?src=pr&el=desc) into [master](https://codecov.io/gh/crossplaneio/crossplane/commit/9dc5505c9dc26ec922752eaec3acafe320f67164?src=pr&el=desc) will **decrease** coverage by `1.56%`.
> The diff coverage is `100%`.


```diff
@@            Coverage Diff            @@
##           master    #397      +/-   ##
=========================================
- Coverage   60.26%   58.7%   -1.57%     
=========================================
  Files         102      96       -6     
  Lines        5497    5373     -124     
=========================================
- Hits         3313    3154     -159     
- Misses       2050    2086      +36     
+ Partials      134     133       -1
```
",True,False,40,30597.416666666668
crossplaneio/crossplane/397,2019-05-01T05:21:17Z,False,5cc92e016480fda0dd4bb6ae,[![0% (0.0%) vs master 0%](https://jenkinsci.upbound.io/coverage-status-icon/?coverage=0.0&masterCoverage=0.0)](https://jenkinsci.upbound.io/job/crossplane/job/build/job/PR-397/9/),True,False,40,30597.416666666668
ReactiveX_____RxSwift_____1960,2019-05-01T06:20:33Z,True,ReactiveX_____RxSwift_____1960_____488218802,"Thanks for the clarification, I appreciate that. And yup I’m aware of that, this is one of the reasons Carthage frustrates me as a package manager so much. The amount of configurability without additional tooling or script hackery is close to none. 

Anyways I’m glad we were able to find a solution that fits all shoes (seemingly) :-) ",True,True,33,1843.75
UXAspects/UXAspects/1073,2019-05-01T09:23:16Z,False,5cc966b76480fd9d19330a5a,There appears to be Side Panel tests failing at the moment?,True,False,12,165.9
UXAspects/UXAspects/1073,2019-05-01T10:15:25Z,False,5cc972ef6480fda3b1a864fb,There's an error on the e2e site. Is there some extra dependency required for loading a component with animations?,True,False,12,165.9
UXAspects/UXAspects/1073,2019-05-01T10:16:14Z,False,5cc973236480fda67118e26f,"Ah, `BrowserAnimationsModule` will need imported in `AppModule`",True,False,12,165.9
UXAspects/UXAspects/1073,2019-05-01T10:18:05Z,False,5cc9738d6480fda61f84a80a,"Hmm, actually it looks like it is already there, I will take a look into it now",True,False,12,165.9
UXAspects/UXAspects/1073,2019-05-01T10:19:35Z,False,5cc973ea6480fd9cd60377ee,"It might be the enum, I just found this: https://github.com/angular/angular/issues/24047",True,False,12,165.9
UXAspects/UXAspects/1073,2019-05-01T10:21:22Z,False,5cc974536480fd9e7c63a94e,I see someone mentions there to add `export` to the enum and it should work?,True,False,12,165.9
UXAspects/UXAspects/1073,2019-05-01T10:40:57Z,False,5cc978ee6480fd9db5251e01,"Yeah, adding `export` seems to fix it for me",True,False,12,165.9
UXAspects/UXAspects/1073,2019-05-01T11:28:03Z,False,5cc983f26480fd9db52521e8,"For some reasons the animations don't apply to the subclass component ux-item-display-panel, could you take a look and let me know if you can see what's missing?",True,False,12,165.9
UXAspects/UXAspects/1073,2019-05-01T11:29:19Z,False,5cc984446480fd9e1f6a732d,Sure no problem,True,False,12,165.9
UXAspects/UXAspects/1073,2019-05-01T11:41:45Z,False,5cc9872b6480fda1a549abd7,"That should be it fixed, the `ItemDisplayPanelComponent` class had an `ngOnInit` function so the `ngOnInit` in the `SidePanelComponent` was never getting called which is where the animation state changes were setup.",True,False,12,165.9
UXAspects/UXAspects/1073,2019-05-01T11:42:49Z,False,5cc987686480fda24f6f110c,"Great catch, thank you very much!",True,False,12,165.9
UXAspects/UXAspects/1073,2019-05-01T12:09:10Z,False,5cc98d996480fda2871aac9a,Should be good for review again now.,True,False,12,165.9
ReactiveX_____RxSwift_____1960,2019-05-01T12:28:03Z,True,ReactiveX_____RxSwift_____1960_____488270337,"@orj WOW

> Reduction in memory usage: Static linking duplicates code in to code segments.

This is not true. If the linkers are dumb, sure, but they can't be. If this was true it would mean that singletons and static variables would be impossible, which isn't the case. I'm linking about 20000 static libraries in the current app, if that was the case, imagine how easy would it be to get a promo by just changing the linker to not be a complete idiot.

> Reduced disk space.

How on earth. If you have everything statically linked, then you can statically build graphs and remove unused symbols, which you can't do for dynamic libraries because anyone could use any entry point.

> Shared memory: The dynamic linker can share VM pages between apps that link a dynamic framework. Frameworks in /System and /Library do not get loaded more than once into memory. In user app space a framework in a app bundle can be shared between extensions or subprocesses too reducing memory usage.

You are not working on shared frameworks on the iOS level. You are misunderstanding the question. The question isn't should iOS use dynamic frameworks, but **should your app use dynamic frameworks**.

> Guaranteed canonical type linkage: If your app has two dynamic frameworks that link against the same static framework you end up with 2 versions of that static code in your app’s memory space and type/symbol resolution is random and/can get over written as dyld loads further .frameworks. This causes all sorts of problems with ObjectiveC categories not sure how it affects swift exactly but I assume the ObjC bridged types will get buggered up. Dyld will fortunately bitch quite loudly when it notices this.

You should not do this ever, otherwise your app will probably crash. This is the main reason why having a dumb package manager like Carthage is a bad idea. Consumer should decide how they want to consume the library not the library authors. Library authors should decide on the API and code only. Maybe I'm crazy, but hey. That's just me. All package managers except Carthage do this (CocoaPods, Swift Package Manager,  Blaze/Bazel).

> The canonical way of sharing code across processes on modern systems has always been dynamic libraries. Unix .so, Windows .dll, Mac .frameworks (actually .so’s with a custom container file structure).

**You are not working on iOS or Windows or any other OS level. Stop fantasizing.** And yes, that was a huge dumb idea in retrospect. Ever heard of dll hell? Docker? Containers? What problems do you think they are trying to solve?

> Static libraries (basically just simple archives of .o files - static frameworks are no different) are a legacy of times before we had the benefit of dynamic linking.

No, not true. Do you see any binaries shipping with thousands of dynamic libraries? Well why that might be... Is it because people do small projects only or they use static linking.

> One of the major reasons behind Swift’s push for ABI and module stability is to reap all the benefits of dynamic linking.

Well why did they add support for static libraries after x years then? Why did Carthage start supporting it? You would think they would be satisfied with just dynamic ones, wouldn't you say? Why are all unicorn companies in favor of static linking? Are they all delusional?

> Yes there are some performance trade offs. Dynamic libraries are a space vs time trade off. But they also come with a bunch of other benefits too around tooling.

No, it's not space time tradeoff, it's developer convenience vs time tradeoff.

> The reason behind preferencing static frameworks over dynamic in iOS are rapidly receding into the past (as Apple CPUs get faster and dyld is improved).

I'll trust that Apple is serious about linking when they optimize ld64 or at least publish an easily buildable open source version. That linker is couple of times slower than others. Yes, dynamic linkers should get better, but that doesn't mean it's 0 cost operation, or that static linking is somehow relic of the past.

> The idea of switching RxSwift to a static framework by default was an absolute unequivocal mistake.

Yes, it was, but it wasn't because of any of the reasons you are saying. It was dumb because Carthage consumers don't have any control over how the library is consumed without ugly hacks and the ecosystem is built around dynamic libraries and the network effects are preventing the change.

We have ~10 issues at any time in our repo. #1799 Was opened half a year ago and it was clear for a long time that we'll do this. I first thought that there might be some backslash, but didn't see anything like any kind of serious backslash. I was also prepared to migrate entire RxSwiftCommunity to static libs. **I didn't see a huge problem with migrating to static, and if somebody used RxSwift, they could just pack all of this into a single dynamic library and just do `import RxShared; import RxSwift`. That was basically all they had to do on their end. We have to migrate dozens of projects and change dozens of CI pipelines. I've already started to propagate the work on RxDataSources. Look at 5.0.0 release.**.

We've reverted the change because of the reason I've just said, not because any of the BS reasons you've mentioned. Indirectly we've helped you and your company, which is great. You are welcome.

We've first invested my time and @freak4pc 's time into supporting a package manager which non of us personally use. Then we've honestly tried to help that community using the project more efficiently. Then we've realized that the community wouldn't want to change, which is fine. I'm lazy, I don't treat laziness as something bad. I don't want to do some work if I don't really have to. **Then me and @freak4pc have again invested our time into helping out people using Carthage.**

So after all of this work, after we've maintained the project for you and had best intentions, after we've help you and your company, you come here with BS reasons and start pissing on us and basically claiming we are morons. 

Thanks a lot. Thanks for wasting my time on writing this response.

What is wrong with you people. Or better yet, what is wrong with me for getting into all of this shit. Yes, I was dumb for that, but I learn. Never again.",True,True,33,1843.75
ReactiveX_____RxSwift_____1960,2019-05-01T14:39:39Z,True,ReactiveX_____RxSwift_____1960_____488300552,"I think this is escalating beyond the scope of what we want to discuss in this repo for now. As I mentioned, I invite each and every one of you to become more involved in the ongoing discussions on the future of this library, if it's something you're curious about and interested in. 

Since the issue is resolved I'm gonna lock this for the time being. ",True,True,33,1843.75
developit/preact/1593,2019-05-02T16:39:41Z,False,5ccb1d4f6480fd3fb6e14ca6,"We could add a prop (e.g. `promise.Suspense = Symbol.for('Suspense')`) to the promises thrown by `lazy` and then skip user-land `componentDidCatch` for these errors

We should also investigate how React behaves as Suspense is catching promises in React too",True,False,88,9588.083333333334
developit/preact/1593,2019-05-02T16:40:24Z,False,5ccb1eb26480fd3d678f424c,"
[![Coverage Status](https://coveralls.io/builds/23153098/badge)](https://coveralls.io/builds/23153098)

Coverage decreased (-2.3%) to 97.653% when pulling **5b28ba5aa0766892a5089a755663746ece52f27d on sventschui:feature/suspense-lazy** into **e28e44c24ba1fbc81c513cecf0d7b74638429665 on developit:master**.
",True,False,88,9588.083333333334
developit/preact/1593,2019-05-02T21:46:51Z,False,5ccbc83a6480fd43ed33a4f0,"While writing the tests one thing came to my attention. When using Suspense in React the suspended component tree doesn't loose state. It isn't unmounted, just ""parked"". I'm not sure whether this is possible with the current solution. Do you have an idea how to handle this?",True,False,88,9588.083333333334
developit/preact/1593,2019-05-02T21:54:29Z,False,5ccb68446480fd4252ba44d3,"That would be something very specific to a two phase render cycle and is not possible at this time as far as I know.

I’m also not sure as to what point we want to support this in core since this adds a lot of bytes, it’s already adding 400 at this point.

Cc @developit @marvinhagemeister @andrewiggins",True,False,88,9588.083333333334
developit/preact/1593,2019-05-03T05:55:30Z,False,5ccbd9046480fd3d678f9d93,"I guess most of the bytes come from a huge error message I copied from React. We should replace this with a shorter one or even with just a short-link to a wiki/error description page. Do you have a strategy in place for things like this?

The state keeping thing is quite important as it breaks all the tests and compat to React currently.

When not having suspense in core we at least should try to make it possible in a user-land extension. That means having catchErrorInComponent extendable/replaceable and something to make the state keeping possible. Honestly the dirties hack that comes to my mind here is keeping it as display hidden in user-land code but that will definitely introduce other issues. 

For the state keeping we might want to try to flag the direct children of Suspend as suspended, keep them as a prop to Suspense and not call unmount on these. During the next render simply re-run render on these children. Thinking about this makes me think of implementing Suspense not as a component but as code in the core that gets triggered if a component is of type Symbol.for(""Suspense"")

Sorry for my thought flush on my phone. Will look into this a bit deeper today once I get my fingers to my macbook",True,False,88,9588.083333333334
developit/preact/1593,2019-05-03T06:25:51Z,False,5ccbe0266480fd3d678f9fb9,"Maybe we can move this section into `preact/debug`. A `Suspense` component without a fallback doesn't seem to make much sense, so we could just always warn on that. This would also keep core small and tiny :tada: ",True,False,88,9588.083333333334
developit/preact/1593,2019-05-03T06:33:41Z,False,5ccbe1f46480fd3e94b476eb,`setImmediate` is a [non-standard API](https://developer.mozilla.org/en-US/docs/Web/API/Window/setImmediate) and only supported in IE,True,False,88,9588.083333333334
developit/preact/1593,2019-05-03T06:34:32Z,False,5ccbe22d6480fd3d9e330399,Same here :slightly_smiling_face: ,True,False,88,9588.083333333334
developit/preact/1593,2019-05-03T06:34:55Z,False,5ccbe23e6480fd41609e4e65,nit: missing newline at the end of the file.,True,False,88,9588.083333333334
developit/preact/1593,2019-05-03T06:41:30Z,False,5ccbe3c96480fd43ed33b18c,"Storing the callback in a variable saves `5 B` :tada: 

```js
let done = () => this.setState({ l: false });
e.then(done, done);
```",True,False,88,9588.083333333334
developit/preact/1593,2019-05-03T06:44:14Z,False,5ccbe4726480fd3c72214af8,"This also allows the recheck of isSuspsend and suspendingComponent, so that will save a lot",True,False,88,9588.083333333334
developit/preact/1593,2019-05-03T06:44:30Z,False,5ccbe4826480fd42c2cca7c5,Idea: Maybe we can get away with just checking for the presence of a `then` property.,True,False,88,9588.083333333334
developit/preact/1593,2019-05-03T06:47:57Z,False,5ccbe54f6480fd43ed33b247,"Removing the symbol and replacing it with a simple `boolean` flag saves `27 B` :100: 

```js
this._suspense = true;
```",True,False,88,9588.083333333334
developit/preact/1593,2019-05-03T06:50:07Z,False,5ccbe5d76480fd44dbb1e820,"Using the method arguments (only available in Preact) saves another `6 B`.

```js
render(props, state) {
  return state.l ? props.fallback : props.children;
}
```",True,False,88,9588.083333333334
developit/preact/1593,2019-05-03T06:57:06Z,False,5ccbe7736480fd43019e19b3,I think it's safe to assume that our own `Suspense` component will always have `componentDidCatch` defined :+1: ,True,False,88,9588.083333333334
developit/preact/1593,2019-05-03T07:55:48Z,False,5ccbf5346480fd4476b8f032,"Thanks for these hints. Will definitely incorporate these once I get closer to a working implementation.

The thing that currently bothers me is keeping the state of the suspended component tree (as React does). I was thinking of doing the following:

- Not unmount (but remove DOM of) children of `Suspense` (here https://github.com/developit/preact/blob/master/src/diff/index.js#L29)
- Re-render the previous children of suspense here https://github.com/developit/preact/blob/master/src/diff/index.js#L143

Can't think of how to achieve the second point. One of you guys got an idea how to solve this?",True,False,88,9588.083333333334
developit/preact/1593,2019-05-03T16:15:44Z,False,5ccc6a6a6480fd436067632e,"I justed hacked a working solution together to keep state of suspended components 🎉 . 

Would be cool if you could look into this. I don't really feel confident with the current solution. I'll invest some more time when I get to it.",True,False,88,9588.083333333334
developit/preact/1593,2019-05-03T23:06:44Z,False,5ccccab76480fd404d6b7feb,might want to have a test with multiple suspended components in one suspense,True,False,88,9588.083333333334
developit/preact/1593,2019-05-04T10:13:12Z,False,5ccd66eb6480fd3f32b9adf4,"I still throw the `Missing Suspense` error on the `suspendingComponent`.

Would you want to save some bytes and just throw the error at the end of the function instead of the `suspendingComponent`?",True,False,88,9588.083333333334
developit/preact/1593,2019-05-04T10:14:28Z,False,5ccd67316480fd3d25bf4136,Replaced with `setTimeout`. Thx for the heads up :),True,False,88,9588.083333333334
developit/preact/1593,2019-05-04T10:15:48Z,False,5ccd67856480fd41a0dc55a9,Should I add an eslint rule for this?,True,False,88,9588.083333333334
developit/preact/1593,2019-05-04T10:15:56Z,False,5ccd678b6480fd3ed2c8f1eb,Done. Thx!,True,False,88,9588.083333333334
developit/preact/1593,2019-05-04T10:19:18Z,False,5ccd68576480fd3c8f3adc5a,Done,True,False,88,9588.083333333334
developit/preact/1593,2019-05-04T10:19:29Z,False,5ccd68666480fd3cbb37ecb2,What he's saying is to throw it in a hook from preact/debug since it doesn't really matter in production anyway. I also think that is the best approach to maintain our lightweight profile,True,False,88,9588.083333333334
developit/preact/1593,2019-05-04T10:19:50Z,False,5ccd68756480fd41d4ef713e,Done,True,False,88,9588.083333333334
developit/preact/1593,2019-05-04T10:41:01Z,False,5ccd6d6d6480fd3c3d2c6711,Can you please double check that this won't break anything?,True,False,88,9588.083333333334
developit/preact/1593,2019-05-04T10:41:52Z,False,5ccd73b96480fd3be488957c,"if (e.then) will suffice, no?",True,False,88,9588.083333333334
crossplaneio/crossplane/397,2019-05-04T14:40:16Z,False,5ccda5846480fd41a0dc6fd4,[![0% (0.0%) vs master 0%](https://jenkinsci.upbound.io/coverage-status-icon/?coverage=0.0&masterCoverage=0.0)](https://jenkinsci.upbound.io/job/crossplane/job/build/job/PR-397/10/),True,False,40,30597.416666666668
kognise_____water.css_____67,2019-05-04T16:41:30Z,True,kognise_____water.css_____67_____275933274,"As discussed on issue #52 
I have implemented the selection variable and used to call the selection pseudo class, we can use this as a base for selection colour, further on we can discuss and create specific colours for the same.

(will close #52 )

/cc: @kognise @kylejrp 

additional changes:
1. made my fork up-to-date with master
",True,True,3,8922.95
kognise_____water.css_____67,2019-05-04T17:00:26Z,True,kognise_____water.css_____67_____489344889,Thanks for your contribution @co16353sidak!  ,True,True,3,8922.95
developit/preact/1593,2019-05-04T17:05:56Z,False,5ccdc7bd6480fd40748ce664,"If we assume that there never is an object like `{ then: ""foo"" }` thrown it would. Do you think this is safe?",True,False,88,9588.083333333334
developit/preact/1593,2019-05-04T17:27:45Z,False,5ccdccc16480fd3dd2c03440,"Hmm, things I am scared of with this is suspense -> errorboundary -> comp so you’re right in that",True,False,88,9588.083333333334
developit/preact/1593,2019-05-05T01:13:22Z,False,5cce4ff76480fd3cf9437097,"Hmm instead of creating an intermediate component for Fragments, just pass `ancestorComponent` directly into `diffChildren` like so:
```js
diffChildren(parentDom, newVNode, oldVNode, context, isSvg, excessDomChildren, mounts, ancestorComponent, oldDom);
```

`Fragment`s will never be an error boundary so we can skip them in our upward climb to find error boundaries or Suspense components",True,False,88,9588.083333333334
developit/preact/1593,2019-05-05T01:14:39Z,False,5cce4ff86480fd3ef971d7d2,"This entire constructor isn't necessary. If you remove it, all tests still pass.",True,False,88,9588.083333333334
developit/preact/1593,2019-05-05T01:17:41Z,False,5cce4ff76480fd41609f4c9f,"Terser is going to rename this to whatever it wants anyway, so might as well give it a meaningful name. Perhaps `_handleSuspendedPromise`?

It has to start with an `_` though. We've configured the `_` to signal to terser to minify property names that being with them.",True,False,88,9588.083333333334
developit/preact/1593,2019-05-05T01:19:22Z,False,5cce4ff86480fd44aa3b73df,"Is this check even necessary? `catchErrorInComponent` already does it before calling this method and since it is an internal method I think its safe to make assumptions about arguments. No one outside of the Preact codebase should be calling it directly.

Perhaps give this method some JSDoc comments specifying the type of the parameter so it's at least documented what the expectation is.",True,False,88,9588.083333333334
developit/preact/1593,2019-05-05T01:26:58Z,False,5cce4ff76480fd43ed34b6d9,"Instead of manually minifying names, let Terser do that. Terser is has smarts to reuse names it's already used increasing the likelihood that gzip can compress more sequences using the same key. It saved 2 bytes for me when minifying.

So let's give this property a meaningful name, perhaps `_loading`? Since it is an object propery, be sure to preface it with an `_` to signal to Terser it is safe to mangle this property name.",True,False,88,9588.083333333334
developit/preact/1593,2019-05-05T01:31:40Z,False,5cce4ff86480fd404d6c0934,"Also, if `1` and `0` are meant to be `true` and `false`, let's just use the keywords. Terser will minify them to `!0` and `!1` for us. When I tried it our byte count stayed the same. I think I prefer using `true` and `false` directly as it more clearly communicates the intent without adding any bytes. Obviously, if that becomes untrue in the future we can undo them :)",True,False,88,9588.083333333334
developit/preact/1593,2019-05-05T01:44:28Z,False,5cce4ff76480fd3f32ba0ff8,"Could we just do `(exports) => { component = exports.default }`? I think transpilers will convert this to [something like this](https://buble.surge.sh/#let%20component%3B%0Afunction%20f%28%7B%20default%3A%20c%20%7D%29%20%7B%0A%20%20component%20%3D%20c%3B%0A%7D):

```js
var component;
function f(ref) {
  var c = ref.default;
  component = c;
}
```",True,False,88,9588.083333333334
developit/preact/1593,2019-05-05T01:48:22Z,False,5cce4ff76480fd3bcf837863,"Currently this get's transpiled to:
```js
function (e) {
    return error = e;
}
```

Do we need to return the `error` object here? If not we can remove the `return` keyword by doing `e => { error = e }`",True,False,88,9588.083333333334
developit/preact/1593,2019-05-05T01:56:26Z,False,5cce4ff76480fd3b7b273613,"Actually, relying on the default `class` transpilation brings in a lot of boilerplate:
```js
    function l() {
        n.apply(this, arguments);
    }
    return (
        n && (l.__proto__ = n),
        ((l.prototype = Object.create(n && n.prototype)).constructor = l),
```

And an extra function enclosure on top of this. Is there a way to can manually create our own class that is tighter and only does what we need it to do, instead of relying on the generic class transpliation? I think @marvinhagemeister did some work on this in `create-context.js`?",True,False,88,9588.083333333334
developit/preact/1593,2019-05-05T02:03:55Z,False,5cce50426480fd3e53e7342e,@marvinhagemeister does this function need a `displayName` to show up in devtools correctly? Similarly to `memo` and `forwardRef`?,True,False,88,9588.083333333334
developit/preact/1593,2019-05-05T02:15:28Z,False,5cce4ff76480fd40214ba5d3,"When will this `catch(e)` handle a suspend? I don't think any of the above code will ever invoke a synchronous render (`setState`, `enqueueRender`, etc. all trigger an async rerender), so the code this `catch` watches should never throw a promise.

If that's true then I think you can remove the `isSuspend` and `suspendingComponent` lines from this `catch`.",True,False,88,9588.083333333334
developit/preact/1593,2019-05-05T02:57:58Z,False,5cce58e66480fd3e28dc18c1,"Because `Suspense.__s` calls `setState` which queues a rerender.

In our UTs, we change the behavior of Preact to only process the rerender queue when we manually call `rerender` so we can better control the behavior under test, giving us better test reliability and its necessary for some tests we write.",True,False,88,9588.083333333334
developit/preact/1593,2019-05-05T03:00:59Z,False,5cce58e66480fd4252bb90d0,Can this component render a the children inside of a `div`? I'd like to validate that when suspending any intermediate DOM is removed and the fallback replaces all of it.,True,False,88,9588.083333333334
developit/preact/1593,2019-05-05T03:03:14Z,False,5cce58e66480fd3ed2c94de5,What's `t`? Can you give it a more legible name? Perhaps `error`?,True,False,88,9588.083333333334
developit/preact/1593,2019-05-05T05:25:41Z,False,5cce75086480fd3c3d2ccf9b,Good catch! Yes it does need the `displayName` property to be able to distinguish it from other components 👍,True,False,88,9588.083333333334
developit/preact/1593,2019-05-05T11:36:04Z,False,5ccecbd66480fd43ed34e0d0,"It is not only about error boundaries. The `ancestorComponent` is also used in `diffChildren`, `diff` and `unmount`. It is set to the diffed component as `_ ancestorComponent` prop. I need to look a bit deeper into this as I don't fully understand the possible side-effects of this change as of now",True,False,88,9588.083333333334
developit/preact/1593,2019-05-05T12:00:28Z,False,5cced18b6480fd3fb6e2c7a1,I did a rewrite with a prototype based approach. Saves ~50 bytes gzipped 👍 ,True,False,88,9588.083333333334
developit/preact/1593,2019-05-05T12:00:47Z,False,5cced1a76480fd3b8fa1b631,"Didn't know terser is doing this, renamed to `_childDidSuspend` 👍 ",True,False,88,9588.083333333334
developit/preact/1593,2019-05-05T12:05:13Z,False,5cced2a96480fd3f75a7f382,Done. Together with the `{ error = e }` this saved 2 bytes,True,False,88,9588.083333333334
developit/preact/1593,2019-05-05T12:05:22Z,False,5cced2b36480fd3be4891bea,Done,True,False,88,9588.083333333334
developit/preact/1593,2019-05-05T12:08:34Z,False,5cced3726480fd3e53e75eed,"Added a `displayName` that is set once the lazy loaded component is loaded. Will check whether this works once I got a demo together.

Adds 28B tough",True,False,88,9588.083333333334
developit/preact/1593,2019-05-05T12:17:48Z,False,5cced59d6480fd3dd2c08380,"Done, saved 5 bytes 🎉 . 

I kept `isSuspend = false` in the catch tough. Dropping this would save another 3B but errors thrown in `_childDidSuspend` would result in a `Missing Suspense` error. What do you think? Remove the `isSuspend = false` too?",True,False,88,9588.083333333334
developit/preact/1593,2019-05-05T12:21:29Z,False,5cced67d6480fd3e53e75ffc,Done. Also added a function component wrapper,True,False,88,9588.083333333334
developit/preact/1593,2019-05-05T12:32:19Z,False,5cced90b6480fd40214bd156,Done,True,False,88,9588.083333333334
developit/preact/1593,2019-05-05T12:43:08Z,False,5ccedb9c6480fd3f32ba3db4,That's a very good point. Haven't thought of it that way :+1: ,True,False,88,9588.083333333334
developit/preact/1593,2019-05-05T12:51:43Z,False,5ccedd8e6480fd43ed34e7f9,Passing `ancestorComponent` directly now. Saves 5 bytes,True,False,88,9588.083333333334
developit/preact/1593,2019-05-05T12:58:04Z,False,5ccedf106480fd451f7610bd,nit: missing newline,True,False,88,9588.083333333334
developit/preact/1593,2019-05-05T13:04:01Z,False,5ccee0746480fd3c7222767a,"Just checked against the experimental react-devtools to see how they detect both `Suspense` and `Lazy` components. Turns out that the `displayName` for `Lazy` doesn't need to be aware of the component it is rendering. It's printed like a standard component inside the tree.

```txt
<Suspense>
  <Lazy>
    <MyComponent>
```

With this in mind just doing `Lazy.displayName = 'Lazy'` is enough. That can happen outside the declaration itself.

In the long run we'll probably switch to just flagging any special components with a constant instead of a string. That way we could detect `Provider` and `Consumer` components too. The devtools render these slightly differently, but I haven't gotten around to implement that yet. This is out of scope for this PR though and the above solution is enough for now :+1: ",True,False,88,9588.083333333334
developit/preact/1593,2019-05-05T13:36:05Z,False,5ccee7f56480fd3c3d2cf9a9,"I just introduced a demo of suspense and found that the current implementation messes up the order of the DOM when `Suspense` is placed inside a `Fragment` (See screenshot, `I'm (fake) lazy loaded` is supposed to go under the `lazy()` headline. DevTools show correct order, DOM is messed up). 

I added a breaking test for this but can't currently figure out why this happens.

![image](https://user-images.githubusercontent.com/512692/57194799-5c1ac780-6f4b-11e9-89ac-662de33cbf30.png)",True,False,88,9588.083333333334
developit/preact/1593,2019-05-06T06:00:45Z,False,5ccfcec16480fd404d6c914b,Can you guys give me a hint on where I could add this to `preact/debug`. I did not find a proper place to add it,True,False,88,9588.083333333334
developit/preact/1593,2019-05-06T07:02:02Z,False,5ccfdd1d6480fd421dcab74c,The string name might be unsafe because minifiers always mangle the function names. We should check for `displayName` here :+1: ,True,False,88,9588.083333333334
developit/preact/1593,2019-05-06T07:03:59Z,False,5ccfdd8f6480fd41a0dd417e,Great work on the `preact/debug` integration :+1: ,True,False,88,9588.083333333334
developit/preact/1593,2019-05-06T15:30:31Z,False,5cd108a76480fd3c02d1f3f7,"@sventschui @marvinhagemeister can you check if this implementation works with Next?

I have setup a monorepo project that uses this branch with next and a next plugin similar to [@zeit/next-preact](https://github.com/zeit/next-plugins/tree/master/packages/next-preact). Basically I have copy and pasted their code and used it with this branch. Check it out here:

https://github.com/spring-media/preact-next-suspense

I have written a bit of a documentation to explain the repo in the README",True,False,88,9588.083333333334
developit/preact/1593,2019-05-06T16:39:08Z,False,5cd064606480fd3cf9445e84,@LukasBombach as mentioned in slack: The error is due to an old version of `preact-render-to-string`. You need to update to `>=5`,True,False,88,9588.083333333334
developit/preact/1593,2019-05-06T17:55:56Z,False,5cd0765f6480fd4252bc6d98,"Maybe move to here?

```suggestion
		return catchErrorInComponent(Error('Missing Suspense'), suspendingComponent);
```",True,False,88,9588.083333333334
developit/preact/1593,2019-05-06T17:58:15Z,False,5cd076ea6480fd4476bad384,"Question:  what's the reason for using `._childDidSuspend`?  It seems like the Suspense component could just implement componentDidCatch:

```js
class Suspense {
  componentDidCatch(e) {
    if (e && e.then) e.then(() => this.setState({}));
    else throw e;
  }
}
```

This would mean that folks don't pay for Suspense implementation details if they don't import Suspense.",True,False,88,9588.083333333334
developit/preact/1593,2019-05-06T18:05:56Z,False,5cd10b0b6480fd3c722392ce,The `continue` results in traversing up the tree. This would break the tree traversing AFAIK,True,False,88,9588.083333333334
developit/preact/1593,2019-05-06T18:07:26Z,False,5cd079146480fd413789f19e,Well the naming of the method is irrelevant. It just needs to take precedence over regular `componentDidCatch` when the error thrown is a promise (even if between the throwing component and `<Suspense>` is another error boundary),True,False,88,9588.083333333334
developit/preact/1593,2019-05-06T21:51:30Z,False,5cd0ad946480fd3d6791a77e,"> @LukasBombach as mentioned in slack: The error is due to an old version of `preact-render-to-string`. You need to update to `>=5`

👌 
",True,False,88,9588.083333333334
crossplaneio/crossplane/397,2019-05-07T00:28:20Z,False,5cd0da836480fd41378a25f7,"the wording is a little unclear, you're correct.  i'll update.",True,False,40,30597.416666666668
crossplaneio/crossplane/397,2019-05-07T00:34:18Z,False,5cd0da836480fd3cbb396ef2,"That's a good point, workloads aren't very useful without support for Kubernetes clusters as well.  I'm going back and forth on where the line of ""base functionality"" would be drawn.  It ""feels"" like it would be useful to be able to bring up k8s clusters and deploy workloads to them right out of the box without having to install any extensions to do that.  But I recognize that may be a bit arbitrary.",True,False,40,30597.416666666668
crossplaneio/crossplane/397,2019-05-07T00:39:30Z,False,5cd0da836480fd4561bc6089,"Yes, the `ExtensionRequest` has a `Source` field that can be pointed at any registry.  I've been testing so far by pointing it at `registry.hub.docker.com`.

The EM itself should have a default registry to fallback to if an `ExtensionRequest` does not specify a source registry of its own.",True,False,40,30597.416666666668
crossplaneio/crossplane/397,2019-05-07T00:46:45Z,False,5cd0da836480fd3ed2ca72cc,"More flexible usage.  Maybe the user knows the name of the package (application) that they want installed, maybe a controller knows the name of a CRD that it needs, I like being flexible to support both.",True,False,40,30597.416666666668
crossplaneio/crossplane/397,2019-05-07T00:51:35Z,False,5cd0da846480fd3d40e7bc46,"It should definitely support deletion of extensions to remove and clean up the extensions artifacts, and very likely updating an extension as well.  The updating path needs to be thought through more thoroughly on how it aligns with ""upgrading"" an extension, possibly by subscribing to a ""channel"".  I'm going to open issues to further track that work.",True,False,40,30597.416666666668
crossplaneio/crossplane/397,2019-05-07T00:52:15Z,False,5cd0da876480fd41a0ddc9d9,"Correct, added more clear language.",True,False,40,30597.416666666668
crossplaneio/crossplane/397,2019-05-07T00:54:31Z,False,5cd0da836480fd3d9e352e31,"Bassam mentioned this in an earlier Slack conversation on #dev, which I think I agree with.  Copied here:
> Developer convenience, it’s easier to package things like icons, crd yaml etc when in file system format.",True,False,40,30597.416666666668
crossplaneio/crossplane/397,2019-05-07T00:59:36Z,False,5cd0da836480fd404d6d38f7,"Yes, we'll need to support version constraints for dependency resolution as you have mentioned.  The packages will be versioned with image tags, e.g., `redis:v0.1.0` which will help the EM make dependency fulfillment decisions. Dependency resolution and upgrading flow will need to be thought through more completely in the next iteration of this design.  I'll open issues for that.",True,False,40,30597.416666666668
crossplaneio/crossplane/397,2019-05-07T01:07:49Z,False,5cd0db966480fd3c72237bf0,#434 ,True,False,40,30597.416666666668
crossplaneio/crossplane/397,2019-05-07T01:15:07Z,False,5cd0dd4f6480fd3f75a8fa20,#435,True,False,40,30597.416666666668
crossplaneio/crossplane/397,2019-05-07T02:19:44Z,False,5cd0ec7a6480fd40fefea958,@negz your feedback has been incorporated and/or addressed.  Please take another look so we can hopefully merge this initial design to master soon.  Outstanding issues have been captured and noted in the document that will be addressed in future PRs.,True,False,40,30597.416666666668
crossplaneio/crossplane/397,2019-05-07T02:22:38Z,False,5cd0ed206480fd40214cce35,[![0% (0.0%) vs master 0%](https://jenkinsci.upbound.io/coverage-status-icon/?coverage=0.0&masterCoverage=0.0)](https://jenkinsci.upbound.io/job/crossplane/job/build/job/PR-397/13/),True,False,40,30597.416666666668
crossplaneio/crossplane/397,2019-05-07T02:34:28Z,False,5cd0efe86480fd3d9e3537ee,"I'd like us to come back to this and work through it a little more concretely. I'm in favour of the general direction, but this design doesn't capture the potential interdependencies between resources that are scheduled (e.g. `KubernetesApplication`), resources that are scheduled to (e.g. `KubernetesCluster`) and resources that may influence scheduling (e.g. any managed resource?).",True,False,40,30597.416666666668
adventuregamestudio_____ags_____648,2019-05-07T02:59:25Z,True,adventuregamestudio_____ags_____648_____489888653,"Another thought to do with performance here. C++11 has move semantics, which we can implement ourselves or rely on the defaults (which works because std::string has move semantics). It ultimately means we wouldn't be copying on return. We could even delete the copy constructor and check all places we're not passing by reference.",True,True,19,115511.16666666667
crossplaneio/crossplane/397,2019-05-07T03:01:32Z,False,5cd0f6416480fd3b7b2872df,"My feeling is that the `ExtensionRequest` CRD is not the place to be flexible. We know we'll want to version extensions, and CRDs already capture versions (and namespaces).

I presume that if we wanted to support succinct names like `gitlab` we'd need to add code to intuit that `gitlab` actually means `gitlabcluster.gitlab.com/v1alpha`. I could imagine `ExtensionRequests` being used to determine what is installed (in which context we'd be more interested in knowing _exactly_ what was installed, including its version). This makes me feel that resolving a vague name like `gitlab` to a concrete CRD might be best suited to some higher layer (a CLI or the Upbound Cloud API).",True,False,40,30597.416666666668
crossplaneio/crossplane/397,2019-05-07T03:13:21Z,False,5cd0f9016480fd3bcf84b97d,I forgot about the separate `Extension` CRD mentioned later on in this document. Nevertheless my feeling is still that it's less surprising to just require the user ask for a specific CRD than a vague package name that gets resolved to a specific versioned CRD under the hood.,True,False,40,30597.416666666668
crossplaneio/crossplane/397,2019-05-07T03:25:10Z,False,5cd0fbc76480fd451f772389,"`Extension` feels close enough to the status of an `ExtensionRequest` that I question whether they should really be two different resources. I feels like the main driver for them being separate is that we may want users to to able to ""manually"" install something, then tell Crossplane it was installed?",True,False,40,30597.416666666668
crossplaneio/crossplane/397,2019-05-07T03:27:25Z,False,5cd0fc4e6480fd3ba22862f4,"I don't understand this sentiment. As best I can tell the ""filesystem format"" is a superset of the data that is captured in the `Extension` resource, so we're going to translate one to the other. It feels like there would be less code complexity and less cognitive overhead to make the ""filesystem format"" a copy of the `Extension` resource along with the CRD YAML and binary blobs that supplement it.",True,False,40,30597.416666666668
crossplaneio/crossplane/397,2019-05-07T04:56:57Z,False,5cd111976480fd40214ce192,"Any reason why we wouldn't want to use: `k8s.io/apimachinery/pkg/apis/meta/v1/types.go`
```go
type TypeMeta struct {
	// Kind is a string value representing the REST resource this object represents.
	// Servers may infer this from the endpoint the client submits requests to.
	// Cannot be updated.
	// In CamelCase.
	// More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
	// +optional
	Kind string `json:""kind,omitempty"" protobuf:""bytes,1,opt,name=kind""`

	// APIVersion defines the versioned schema of this representation of an object.
	// Servers should convert recognized schemas to the latest internal value, and
	// may reject unrecognized values.
	// More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
	// +optional
	APIVersion string `json:""apiVersion,omitempty"" protobuf:""bytes,2,opt,name=apiVersion""`
}
```
instead of this `CRDSpec`?",True,False,40,30597.416666666668
developit/preact/1593,2019-05-07T06:41:24Z,False,5cd129cd6480fd451f773af9,Good catch! This may also fix an issue I was having when working on the devtools where `Fragments` would break an upwards traversal :+1: ,True,False,88,9588.083333333334
developit/preact/1593,2019-05-07T08:54:38Z,False,5cd148fe6480fd3e94b6e596,"@sventschui @marvinhagemeister @JoviDeCroock I can confirm this PR works with Next 8.x using `preact-render-to-string@next` as @sventschui proposed:

https://github.com/spring-media/preact-next-suspense/commit/5a7de52dd39f6f8d231b1bf55e0e2ba24cb978b3",True,False,88,9588.083333333334
developit/preact/1593,2019-05-07T12:10:57Z,False,5cd177086480fd3cf944fc44,"Does this Todo need to be resolved ?
If it is unnecessary, I think it is better to remove it.",True,False,88,9588.083333333334
developit/preact/1593,2019-05-07T13:01:28Z,False,5cd182de6480fd3e53e8c13e,"Oh wait, there is still an issue with this and `Next.js` when you run [my repo](https://github.com/spring-media/preact-next-suspense/) and open http://localhost:3000, you'll get an error in node saying

```
[ error ] TypeError: component.props.handleStateChange is not a function
    at emitChange (preact-next-suspense/node_modules/next-server/dist/lib/side-effect.js:11:29)
    at new SideEffect (preact-next-suspense/node_modules/next-server/dist/lib/side-effect.js:26:17)
    at s (preact-next-suspense/node_modules/preact-render-to-string/dist/index.js:1:1371)
    at s (preact-next-suspense/node_modules/preact-render-to-string/dist/index.js:1:1683)
    at s (preact-next-suspense/node_modules/preact-render-to-string/dist/index.js:1:1683)
    at s (preact-next-suspense/node_modules/preact-render-to-string/dist/index.js:1:1683)
    at s (preact-next-suspense/node_modules/preact-render-to-string/dist/index.js:1:2849)
    at s (preact-next-suspense/node_modules/preact-render-to-string/dist/index.js:1:1683)
    at s (preact-next-suspense/node_modules/preact-render-to-string/dist/index.js:1:1683)
    at s (preact-next-suspense/node_modules/preact-render-to-string/dist/index.js:1:1683)
    at s (preact-next-suspense/node_modules/preact-render-to-string/dist/index.js:1:1683)
    at s (preact-next-suspense/node_modules/preact-render-to-string/dist/index.js:1:1683)
    at s (preact-next-suspense/node_modules/preact-render-to-string/dist/index.js:1:1683)
    at s (preact-next-suspense/node_modules/preact-render-to-string/dist/index.js:1:1683)
    at render (preact-next-suspense/node_modules/next-server/dist/server/render.js:86:16)
    at renderPage (preact-next-suspense/node_modules/next-server/dist/server/render.js:211:20)
```",True,False,88,9588.083333333334
developit/preact/1593,2019-05-07T13:48:46Z,False,5cd18df56480fd41d4f15b0d,@LukasBombach I once encountered this issue too. As far as I remember it was caused by context not being set correctly but this should be fixed. I can run your example without any issues,True,False,88,9588.083333333334
developit/preact/1593,2019-05-07T14:00:34Z,False,5cd190b66480fd3f75a9627d,@LukasBombach a new version for `preact-render-to-string` with support for `creeateContext` hasn't been published yet. The code is already in `master` but I was too busy the past days. The next release should be up by the end of the week.,True,False,88,9588.083333333334
developit/preact/1593,2019-05-07T14:08:04Z,False,5cd1927e6480fd3d9e359232, @sventschui have you checked your `node` console after loading the index page in your browser?,True,False,88,9588.083333333334
developit/preact/1593,2019-05-07T14:12:20Z,False,5cd193856480fd40214d2ccf,I'd like to tackle this (see TODO in PR description) but currently don't know how to do this without adding too many bytes to core,True,False,88,9588.083333333334
crossplaneio/crossplane/397,2019-05-07T21:21:06Z,False,5cd1f8036480fd3e28ddf23f,"correct, a user should be able to directly create an instance of the `Extension` CRD, without any need for the package downloading/extracting/etc that is done by `ExtensionRequests`.  The controller watching for the `Extension` type would then create the correct permissions and the start up the right controller so that the entity captured in the `Extension` instance is ready to start serving requests.",True,False,40,30597.416666666668
crossplaneio/crossplane/397,2019-05-07T21:29:03Z,False,5cd1f9df6480fd4283958ce3,"I think we could actually standardize on the `TypeMeta` upstream type, that captures everything we have individually defined here and there are helper methods upstream to parse into individual fields if we need.

So instead of our our `CRDSpec`:
```yaml
customresourcedefinitions:
   owns:
   - name: rediscluster.crossplane.redislabs.com
     kind: RedisCluster
     group: crossplane.redislabs.com
     version: v1alpha1
```

We'd have:
```yaml
customresourcedefinitions:
   owns:
   - kind: RedisCluster
     apiVersion: crossplane.redislabs.com/v1alpha1
```

Which is more inline with the information usually provided when creating an instance of a CRD.",True,False,40,30597.416666666668
crossplaneio/crossplane/397,2019-05-07T22:01:40Z,False,5cd201786480fd3d679262cd,[![0% (0.0%) vs master 0%](https://jenkinsci.upbound.io/coverage-status-icon/?coverage=0.0&masterCoverage=0.0)](https://jenkinsci.upbound.io/job/crossplane/job/build/job/PR-397/14/),True,False,40,30597.416666666668
developit/preact/1593,2019-05-08T09:37:13Z,False,5cd3b6956480fd44aa3e2e47,"> **EDIT:** published it 🎉

@marvinhagemeister @sventschui that update seems to have fixed the error 🎉 

PS: I have updated my repo for you to try out",True,False,88,9588.083333333334
developit/preact/1593,2019-05-08T20:06:37Z,False,5cd338006480fd41d4f23d2d,To get coveralls green again we just need to add a case when `Lazy` throws something random as long as it's not a promise :+1: ,True,False,88,9588.083333333334
developit/preact/1593,2019-05-08T20:37:00Z,False,5cd33f1e6480fd40fefff1fd,Is this the right path here? Assuming that the `loader` would always return a _default_ export? That means we won't support named exports with lazy?,True,False,88,9588.083333333334
developit/preact/1593,2019-05-08T20:40:35Z,False,5cd33ffa6480fd40748f9b96,"React doesn't support this either, we could probably support it by introducing a second string param that defaults to `default` but is it really needed? ",True,False,88,9588.083333333334
developit/preact/1593,2019-05-08T20:45:07Z,False,5cd3410c6480fd3cbb3ac84a,"This seems to be the preferred method (at least for [preact-async-route](https://github.com/prateekbh/preact-async-route#usage-example)). Possibly change `(exports) => { component = exports.default; },` to `(exports) => { component = exports; },`. Then the user would be able to specify what the export is?",True,False,88,9588.083333333334
developit/preact/1593,2019-05-08T20:48:53Z,False,5cd341e76480fd41a0df1963,"No, this does not return to the user so the user can't alter the used export only if it's specified at initialization time.",True,False,88,9588.083333333334
developit/preact/1593,2019-05-08T20:53:41Z,False,5cd3430b6480fd3bcf860169,"Right, that would lock in a pre-determined export.",True,False,88,9588.083333333334
developit/preact/1593,2019-05-08T21:06:53Z,False,5cd3461f6480fd44dbb57282,"Ha, wasn't aware that React does the `default` only thing. I guess keeping it on par with React is what we should be doing, when it makes sense. I was thinking that maybe this is allowed:

```js
const Foo = lazy(() => import('./Foo').then(mod => mod.Foo));
```

Then we could basically support both of them?
```js
exports => { component = exports.default || exports },
```

This would allow the usage of default with named:
```js
const Foo = lazy(() => import('./Foo').then(mod => mod.Foo));
const Baz = lazy(() => import('./FooBaz));
```
But, feels like I might not be that familiar with `React.lazy`",True,False,88,9588.083333333334
developit/preact/1593,2019-05-08T21:10:44Z,False,5cd347036480fd41378b7447,"https://reactjs.org/docs/code-splitting.html#named-exports

Is the docs entry for it",True,False,88,9588.083333333334
developit/preact/1593,2019-05-08T21:16:22Z,False,5cd3485d6480fd3c7224cbf7,This is a great point! I think we should explore ways to use named exports after this PR has landed :+1: ,True,False,88,9588.083333333334
developit/preact/1593,2019-05-09T04:35:04Z,False,5cd3af2f6480fd3f32bcb1c3,IIRC there are also some things to be covered in `diff/index.js`. Will check asap,True,False,88,9588.083333333334
developit/preact/1593,2019-05-09T08:27:46Z,False,5cd3e5bd6480fd3d679343cd,🎉 😍 ,True,False,88,9588.083333333334
pachyderm/pachyderm/3719,2019-05-10T18:22:51Z,False,5cd5c2ad6480fd3d25c3188f,"I would guess not, it's probably better for context to be passed down from whatever operation is calling the API. Since I think this struct is basically going to live for the lifetime of the program right?",True,False,2,110.76666666666667
pachyderm/pachyderm/3719,2019-05-10T20:13:37Z,False,5cd5dca26480fd40b0ebdbcd,Does prefix need to be public? I was kind of expecting it would be a private detail of this package.,True,False,2,110.76666666666667
kognise_____water.css_____67,2019-05-10T21:24:27Z,True,kognise_____water.css_____67_____491434609,"in the end you went with fucking gray for light.css?
how are you even a web designer?

you have 0 sense of coloring.
dark gray on hover looks ugly AF

instead of improving it you made it worse",True,True,3,8922.95
babel_____website_____2024,2019-05-13T12:44:36Z,True,babel_____website_____2024_____278257418,*** Edited by @nicolo-ribaudo ***,True,True,1,0.0
bcgov/cas-ggircs/59,2019-05-16T18:55:08Z,False,5cddb4c06480fd0d05f6e313,even though we're installing deps using `cpanminus` we still probably want to check our `sqitch` is the right version because someone might have already installed it via `cpan` to some other location that has `$PATH` priority over our install or they might not have set the include path correctly for perl and as a result the app might not load,True,False,7,283.3833333333333
bcgov/cas-ggircs/59,2019-05-16T18:57:27Z,False,5cddb4c06480fd10cce82ca0,`ggircs_test` will always be created and gets dropped/recreated repeatedly. Perhaps we should add a warning to that effect?,True,False,7,283.3833333333333
bcgov/cas-ggircs/59,2019-05-16T18:57:37Z,False,5cddb4c06480fd0f537d7c67,100%,True,False,7,283.3833333333333
bcgov/cas-ggircs/59,2019-05-16T22:07:58Z,False,5cdde0736480fd15e72a80af,"Oh, then there's no need for the user to create that db, I can just remove this step",True,False,7,283.3833333333333
bcgov/cas-ggircs/59,2019-05-16T22:12:23Z,False,5cdde17e6480fd11e7f71120,"We can only check that after install then. Because if there's another `sqitch` installed we have no (easy) way to tell if the one installed by `cpanminus` with have the priority beforehand, right?",True,False,7,283.3833333333333
bcgov/cas-ggircs/59,2019-05-16T23:37:41Z,False,5cddf5756480fd117c548d98,@wenzowski: I made a few extra changes and I am happy with what I have at this point. Let me know what you think.,True,False,7,283.3833333333333
bcgov/cas-ggircs/59,2019-05-16T23:38:31Z,False,5cddf5a96480fd1440a327e0,yessir,True,False,7,283.3833333333333
adventuregamestudio_____ags_____648,2019-05-18T05:25:33Z,True,adventuregamestudio_____ags_____648_____493649773,"> Of course this may be important or not important depending on which string operations we have in a program and how often they are used. What still annoys me that this proposed change does not aim any thought through string design, but rather to create a dummy std::string wrap.

That is exactly what it is. Rely on the behavior of the std::string. with default copy and move semantics. I ran this code with a profiler to see which functions were used a lot. The Split function was not one of them. :)",True,True,19,115511.16666666667
adventuregamestudio_____ags_____648,2019-05-18T08:19:43Z,True,adventuregamestudio_____ags_____648_____493658748,"My point being: why create a **wrapper** around std::string?

There's no immediate problem with String itself that would break anything or prevent from anything, so no urgent need to have std::string inside.

If you like to have std::string in the end, which is a reasonable wish, _I guess_, then why not work towards replacing String with std::string? I.e. `typedef std::string String;` if you want to keep old name.

This would ofcourse require to move various utility functions out, but this is something that would be beneficial anyway, I guess. I put a lot there, much of them could be replaced with more general algorithms accompanied by helper functions.

Again, my point is, AGS::String is a consistent class, std::string is a consistent class, but AGS::String wrapping std::string is a dumb solution made for some random reason. Why add an ugly code like that? Why such need to replace things with things?",True,True,19,115511.16666666667
spring-projects/spring-retry/168,2019-05-18T10:33:06Z,False,5cdfe0906480fd0fb5e829df,"@artembilan Hi, Artem! Looks like this just need to be merged",True,False,4,63253.55
adventuregamestudio_____ags_____648,2019-05-18T12:18:18Z,True,adventuregamestudio_____ags_____648_____493672878,"> My point being: why create a **wrapper** around std::string? Why add an ugly code like that? Why such need to replace things with things?

oh I didn't want to fight about this and I think we're in agreement. The wrapper was a step towards using just a plain std::string. I just wanted to start with a wrapper until we iron out any issues, then move to a typedef or rename everything to use std::string directly. I thought your main concern was performance with copying and I think the wrapper around std::string showed it wasn't an issue.",True,True,19,115511.16666666667
rust-lang/rust.vim/319,2019-05-19T14:46:38Z,False,5ce16d3c6480fd13fcc2055b,Thanks! It reminds me we should have some automated regression testing. At least the basic plugin functionality should work.,True,False,2,30293.333333333332
psiinon/pontoon/538,2019-05-20T13:22:15Z,False,5ce2ab446480fd146deabd3a,Closing this in favor of #539,True,False,1,0.0
jenkins-x/jx-tutorial/884,2019-05-20T15:03:12Z,False,5ce2c2e56480fd0f1194856e,"[UpdateBot](https://github.com/jenkins-x/updatebot) commands:

    updatebot push-version --regex JX_VERSION=(.*) --value 2.0.141 --exclude --previous-line install-jx.sh
",True,False,2,0.13333333333333333
jenkins-x/jx-tutorial/884,2019-05-20T15:03:20Z,False,5ce2c2e56480fd0f1194856f,"[APPROVALNOTIFIER] This PR is **NOT APPROVED**

This pull-request has been approved by:
To fully approve this pull request, please assign additional approvers.
We suggest the following additional approver: **jenkins-x-bot**

If they are not already assigned, you can assign the PR to them by writing `/assign @jenkins-x-bot` in a comment when ready.

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=jenkins-x%2Fjx-tutorial).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details open>
Needs approval from an approver in each of these files:

- **[OWNERS](https://github.com/jenkins-x/jx-tutorial/blob/master/OWNERS)**

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[""jenkins-x-bot""]} -->",True,False,2,0.13333333333333333
paulollivier/bureaucrate/148,2019-05-24T22:39:20Z,False,5ce873c96480fd0d314b82ff,Closing this in favor of #159,True,False,1,0.0
opensandiego/p2p-lending/37,2019-05-26T01:01:32Z,False,5ce9e69c6480fd117c5a41f3,I noticed a problem when resizing the window and will tweak it som more tomorrow.,True,False,4,2435.616666666667
opensandiego/p2p-lending/37,2019-05-27T16:19:26Z,False,5cec19876480fd1440a923b7,I think this function could be better used as it's own API. Meaning if we move this function to another folder we could potentially use it's functionality in different parts of the codebase.,True,False,4,2435.616666666667
opensandiego/p2p-lending/37,2019-05-27T17:23:56Z,False,5cec1e5e6480fd16b30f5712,"This line doesn't work, because it would put the period emoji in where the src is. ",True,False,4,2435.616666666667
opensandiego/p2p-lending/37,2019-05-27T17:37:09Z,False,5cec21756480fd0e50121610,"Additional note, I would suggest we make this a ""dict"" mapping, not a case statement. Being declarative makes it easier to use in different circumstances.

e.g. 
const LANGUAGE_ICONS = {
  ""ru"": `${emojiPath}1f1f7-1f1fa.png?`
}

then you can do in your getFlagEmoji function:

return LANGUAGE_ICONS[language_code];
",True,False,4,2435.616666666667
dirigeants_____klasa-vscode_____143,2019-05-27T19:17:48Z,True,dirigeants_____klasa-vscode_____143_____282597215,"🎉 Finally, klasa-vscode can include TypeScript! 🎉

- TypeScript snippets
- TypeScript-compatible Init command
- (not TS-related) Yarn or NPM chooser in Init command

Have fun :D",True,True,21,254.6
dirigeants_____klasa-vscode_____143,2019-05-27T19:21:10Z,True,dirigeants_____klasa-vscode_____143_____287868107,"You can refactor this by moving lines 28-29 and 34-35 in the line 27 (before `if (lang === 'JavaScript') {`), as both are identical.",True,True,21,254.6
dirigeants_____klasa-vscode_____143,2019-05-27T19:22:32Z,True,dirigeants_____klasa-vscode_____143_____287868294,This should use [`path.extname`](https://nodejs.org/dist/latest-v12.x/docs/api/path.html#path_path_extname_path),True,True,21,254.6
dirigeants_____klasa-vscode_____143,2019-05-27T19:22:49Z,True,dirigeants_____klasa-vscode_____143_____496290053,This goes way beyond the scope of adding typescript snippets and changes things this pr should not. Please do not make changes to the package.json beyond the typescript lang snippets.,True,True,21,254.6
dirigeants_____klasa-vscode_____143,2019-05-27T19:22:53Z,True,dirigeants_____klasa-vscode_____143_____287868334,You can use a ternary here for simplicity,True,True,21,254.6
dirigeants_____klasa-vscode_____143,2019-05-27T19:23:40Z,True,dirigeants_____klasa-vscode_____143_____496290193,"Ah, I totally forgot that it automatically adds commits... Okay, how can I remove that? XD",True,True,21,254.6
dirigeants_____klasa-vscode_____143,2019-05-27T19:23:46Z,True,dirigeants_____klasa-vscode_____143_____496290211,"👎 from me. I think this would be better of as it's own plugin - javascript users do not want to see typescript snippets popping up, and typescript users do not want to see javascript snippets pop up. This will just bloat the interface, doubling the amount of things we are faced with.

Also, as it's own plugin, imo the code will be cleaner. There is a lot of code dupe here (i.e. [this](https://github.com/dirigeants/klasa-vscode/pull/143/files#diff-03189079b1b3d77ef73e9e3fdb324d6dR30))

I'd personally recommend forking, and creating your own klasa-tscode plugin.",True,True,21,254.6
dirigeants_____klasa-vscode_____143,2019-05-27T19:24:06Z,True,dirigeants_____klasa-vscode_____143_____287868477,"Just FYI, `client` is gone in the alpha and settings branches, keeping this will make this outdated very quickly.",True,True,21,254.6
dirigeants_____klasa-vscode_____143,2019-05-27T19:24:52Z,True,dirigeants_____klasa-vscode_____143_____496290375,"@Tylertron1998 They don't show up to each other... That's the purpose of putting them in separating them. And also, this isn't just for me. Multiple people have said that these changes would be great for them, so...",True,True,21,254.6
dirigeants_____klasa-vscode_____143,2019-05-27T19:29:44Z,True,dirigeants_____klasa-vscode_____143_____496291141,"[this](https://github.com/dirigeants/klasa-vscode/pull/143/files#diff-03189079b1b3d77ef73e9e3fdb324d6dR15) seems to tell me different. I've never done vs-code plugin development, but it really seems like both ts and js are together in this one plugin - again, I personally feel that it'd be better of in it's own plugin. When I said ""I'd personally recommend forking, and creating your own klasa-tscode plugin."" I didn't quite mean that you should make it for you and just yourself. Open source, I'm sure it would be recommended and shown throughout dirigeants.

Even looking past the fact that it'd be nice for each language to have it's own plugin, I still think the code is a bit messy - and a fork, with ts snippets instead would really clean that up!",True,True,21,254.6
dirigeants_____klasa-vscode_____143,2019-05-27T19:30:57Z,True,dirigeants_____klasa-vscode_____143_____496291329,"@Tylertron1998 What I mean is that TS snippets will only show up on TS files, and JS on JS files. And the init script asks you which you want to use.",True,True,21,254.6
dirigeants_____klasa-vscode_____143,2019-05-27T19:31:43Z,True,dirigeants_____klasa-vscode_____143_____496291437,"Also, no quick-picks for ts vs js and npm vs yarn. Those need to be extension settings. You can make other commands to set the extension settings with a quick-pick sure, but it should be at its core a workspace setting, not something asked every time you try to make a piece.",True,True,21,254.6
dirigeants_____klasa-vscode_____143,2019-05-27T19:32:24Z,True,dirigeants_____klasa-vscode_____143_____496291546,"@bdistin Okay, I'll try and do that.",True,True,21,254.6
dirigeants_____klasa-vscode_____143,2019-05-27T19:37:00Z,True,dirigeants_____klasa-vscode_____143_____496292236,"my earlier comment includes versioning, you aren't responsible for dictating how and when new versions are making as a pr.",True,True,21,254.6
dirigeants_____klasa-vscode_____143,2019-05-27T19:39:37Z,True,dirigeants_____klasa-vscode_____143_____496292603,"snippits need to be written with tabs, so that the editor can hot switch the tabs with whatever the editor setting is. Right now your ts snippets are written with 4x space",True,True,21,254.6
dirigeants_____klasa-vscode_____143,2019-05-27T19:47:28Z,True,dirigeants_____klasa-vscode_____143_____496293797,"@bdistin Wouldn't it also be a good idea to default to `dirigeants/klasa` over `klasa` for the repo, with a setting like with the language and package manager settings I'm making?",True,True,21,254.6
dirigeants_____klasa-vscode_____143,2019-05-27T19:48:31Z,True,dirigeants_____klasa-vscode_____143_____496293948,"not for the init command, no. At that point, you are creating a new project, essentially.",True,True,21,254.6
dirigeants_____klasa-vscode_____143,2019-05-27T21:25:37Z,True,dirigeants_____klasa-vscode_____143_____496308303,@bdistin @kyranet There we go. I've tried to work at the requests you made. :),True,True,21,254.6
dirigeants_____klasa-vscode_____143,2019-05-27T23:19:33Z,True,dirigeants_____klasa-vscode_____143_____496319436,"Super buggy/hacky... Decided to get pissy with me in chat, and earned a ban. I have no expectations of this pr being finished.",True,True,21,254.6
dirigeants_____klasa-vscode_____143,2019-05-27T23:27:21Z,True,dirigeants_____klasa-vscode_____143_____496320116,"I had every intent of finishing it, actually. I made a point, gave evidence, and told you not to get rude with me when I said it just because ""_I wrote fs-nextra HAYDEN_"".",True,True,21,254.6
dirigeants_____klasa-vscode_____143,2019-05-27T23:32:24Z,True,dirigeants_____klasa-vscode_____143_____496320591,Don't forget you got pissy with me first.,True,True,21,254.6
statsmodels/statsmodels/5803,2019-05-29T01:54:42Z,False,5cede7976480fd0e36c41c86,"
[![Coverage Status](https://coveralls.io/builds/23661487/badge)](https://coveralls.io/builds/23661487)

Coverage decreased (-0.002%) to 84.988% when pulling **cc7b14a3bd23a0eeb98180fb460445a3610f0432 on kshedden:qif** into **321619e4b930b74696164b008b25344fd78fc98a on statsmodels:master**.
",True,False,6,884.1166666666667
statsmodels/statsmodels/5803,2019-05-29T06:28:35Z,False,5cee27c36480fd1565a68f58,"Not sure that __init__ returns anything here, other than the object. ",True,False,6,884.1166666666667
statsmodels/statsmodels/5803,2019-05-29T11:44:06Z,False,5cee71ba6480fd170b3fc299,"what is `mat`? Is there a more specific, descriptive name?",True,False,6,884.1166666666667
statsmodels/statsmodels/5803,2019-05-29T16:37:11Z,False,5ceeb6686480fd1565a6f1db,what kwargs are expected?  Can these be made explicit?,True,False,6,884.1166666666667
statsmodels/statsmodels/5803,2019-05-29T16:38:07Z,False,5ceeb6a76480fd0d1dd55bc2,"Never mind, didn't see this subclasses Model.",True,False,6,884.1166666666667
statsmodels/statsmodels/5803,2019-05-29T16:38:49Z,False,5ceeb6ce6480fd0fb5ef2fbf,can you collect 3rd party imports before statsmodels imports,True,False,6,884.1166666666667
dotnet/corefx/38076,2019-05-30T22:21:07Z,False,5cf057db6480fd0d1dd63ff7,I assume this is the same as #37733?,True,False,16,1092.15
dotnet/corefx/38076,2019-05-30T22:22:16Z,False,5cf057db6480fd0d1dd63ff8,"@davidsh yes, that PR wasn't updating when I pushed a new commit (for some reason), so I just closed it & reopened this PR against the same branch.",True,False,16,1092.15
dotnet/corefx/38076,2019-05-30T22:25:17Z,False,5cf059816480fd0dc1c8ba6c,Please run all Outerloop tests as well.,True,False,16,1092.15
dotnet/corefx/38076,2019-05-30T22:27:26Z,False,5cf05a066480fd0fe09bc85c,"/apz run corefx-outerloop-windows
/apz run corefx-outerloop-linux
/apz run corefx-outerloop-osx",True,False,16,1092.15
dotnet/corefx/38076,2019-05-30T22:28:24Z,False,5cf05a3b6480fd0e84ffb8f4,/azp run corefx-outerloop ,True,False,16,1092.15
dotnet/corefx/38076,2019-05-30T22:28:29Z,False,5cf05a3b6480fd170b40cd1f,"<samp>
No pipelines are associated with this pull request.<br>

</samp>",True,False,16,1092.15
dotnet/corefx/38076,2019-05-30T22:30:42Z,False,5cf05ac66480fd0d1dd64126,/azp run corefx-outerloop,True,False,16,1092.15
dotnet/corefx/38076,2019-05-30T22:30:47Z,False,5cf05acc6480fd12303bb2a5,"<samp>
No pipelines are associated with this pull request.<br>

</samp>",True,False,16,1092.15
dotnet/corefx/38076,2019-05-30T22:31:11Z,False,5cf05ae46480fd150a986149,/azp run,True,False,16,1092.15
dotnet/corefx/38076,2019-05-30T22:31:49Z,False,5cf05b086480fd14c140e320,"<samp>
Azure Pipelines successfully started running 4 pipeline(s).<br>

</samp>",True,False,16,1092.15
dotnet/corefx/38076,2019-05-30T22:32:46Z,False,5cf05b3e6480fd12303bb2ce,"@wtgodbe You can't put all 3 azp commands in one comment, https://github.com/dotnet/corefx/pull/38076#issuecomment-497507984

You need to do each one at a time.  Or do ""/azp run"" which runs all inner and outerloop",True,False,16,1092.15
dotnet/corefx/38076,2019-05-31T00:51:03Z,False,5cf07bab6480fd11120a9e34,/azp run,True,False,16,1092.15
dotnet/corefx/38076,2019-05-31T00:51:23Z,False,5cf07bbb6480fd170b40db88,"<samp>
Azure Pipelines successfully started running 1 pipeline(s), but failed to run 3 pipeline(s).<br>

</samp>",True,False,16,1092.15
dotnet/corefx/38076,2019-05-31T00:52:00Z,False,5cf07be76480fd0d91d7c3da,/azp run,True,False,16,1092.15
dotnet/corefx/38076,2019-05-31T00:52:31Z,False,5cf07c036480fd0d47abaff8,"<samp>
Azure Pipelines successfully started running 3 pipeline(s), but failed to run 1 pipeline(s).<br>

</samp>",True,False,16,1092.15
dotnet/corefx/38076,2019-05-31T16:33:16Z,False,5cf1587e6480fd117c5dff58,"Outerloop failures are unrelated, merging",True,False,16,1092.15
kubernetes/kubernetes/78641,2019-06-02T18:35:52Z,False,5cf417e26480fd1440acbbc7,"[APPROVALNOTIFIER] This PR is **NOT APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/kubernetes/kubernetes/pull/78641#"" title=""Author self-approved"">tedyu</a>*
To fully approve this pull request, please assign additional approvers.
We suggest the following additional approver: **lavalamp**

If they are not already assigned, you can assign the PR to them by writing `/assign @lavalamp` in a comment when ready.

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=kubernetes%2Fkubernetes).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details open>
Needs approval from an approver in each of these files:

- **[staging/src/k8s.io/apimachinery/pkg/OWNERS](https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/OWNERS)**

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[""lavalamp""]} -->",True,False,11,625.1333333333333
kubernetes/kubernetes/78641,2019-06-02T18:45:58Z,False,5cf41a986480fd146df317a2,"@tedyu: The following tests **failed**, say `/retest` to rerun them all:

Test name | Commit | Details | Rerun command
--- | --- | --- | ---
pull-kubernetes-node-e2e-containerd | 5bdae25cfcafe0df0cfabe85a2b6789e0a6faf4d | [link](https://prow.k8s.io/view/gcs/kubernetes-jenkins/pr-logs/pull/78641/pull-kubernetes-node-e2e-containerd/1135253481637023744/) | `/test pull-kubernetes-node-e2e-containerd`
pull-kubernetes-e2e-gce-device-plugin-gpu | 5bdae25cfcafe0df0cfabe85a2b6789e0a6faf4d | [link](https://prow.k8s.io/view/gcs/kubernetes-jenkins/pr-logs/pull/78641/pull-kubernetes-e2e-gce-device-plugin-gpu/1135253481620246528/) | `/test pull-kubernetes-e2e-gce-device-plugin-gpu`
pull-kubernetes-node-e2e | 5bdae25cfcafe0df0cfabe85a2b6789e0a6faf4d | [link](https://prow.k8s.io/view/gcs/kubernetes-jenkins/pr-logs/pull/78641/pull-kubernetes-node-e2e/1135253481649606656/) | `/test pull-kubernetes-node-e2e`

[Full PR test history](https://prow.k8s.io/pr-history?org=kubernetes&repo=kubernetes&pr=78641). [Your PR dashboard](https://gubernator.k8s.io/pr/tedyu). Please help us cut down on flakes by [linking to](https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md#filing-issues-for-flaky-tests) an [open issue](https://github.com/kubernetes/kubernetes/issues?q=is:issue+is:open) when you hit one in your PR.

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository. I understand the commands that are listed [here](https://go.k8s.io/bot-commands).
</details>
<!-- test report -->",True,False,11,625.1333333333333
kubernetes/kubernetes/78641,2019-06-02T18:53:57Z,False,5cf41c786480fd0f119cc8c8,"@tedyu: The following tests **failed**, say `/retest` to rerun them all:

Test name | Commit | Details | Rerun command
--- | --- | --- | ---
pull-kubernetes-node-e2e-containerd | 5bdae25cfcafe0df0cfabe85a2b6789e0a6faf4d | [link](https://prow.k8s.io/view/gcs/kubernetes-jenkins/pr-logs/pull/78641/pull-kubernetes-node-e2e-containerd/1135253481637023744/) | `/test pull-kubernetes-node-e2e-containerd`
pull-kubernetes-e2e-gce-device-plugin-gpu | 5bdae25cfcafe0df0cfabe85a2b6789e0a6faf4d | [link](https://prow.k8s.io/view/gcs/kubernetes-jenkins/pr-logs/pull/78641/pull-kubernetes-e2e-gce-device-plugin-gpu/1135253481620246528/) | `/test pull-kubernetes-e2e-gce-device-plugin-gpu`
pull-kubernetes-node-e2e | 5bdae25cfcafe0df0cfabe85a2b6789e0a6faf4d | [link](https://prow.k8s.io/view/gcs/kubernetes-jenkins/pr-logs/pull/78641/pull-kubernetes-node-e2e/1135253481649606656/) | `/test pull-kubernetes-node-e2e`
pull-kubernetes-bazel-test | 5bdae25cfcafe0df0cfabe85a2b6789e0a6faf4d | [link](https://prow.k8s.io/view/gcs/kubernetes-jenkins/pr-logs/pull/78641/pull-kubernetes-bazel-test/1135253481603469317) | `/test pull-kubernetes-bazel-test`

[Full PR test history](https://prow.k8s.io/pr-history?org=kubernetes&repo=kubernetes&pr=78641). [Your PR dashboard](https://gubernator.k8s.io/pr/tedyu). Please help us cut down on flakes by [linking to](https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md#filing-issues-for-flaky-tests) an [open issue](https://github.com/kubernetes/kubernetes/issues?q=is:issue+is:open) when you hit one in your PR.

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository. I understand the commands that are listed [here](https://go.k8s.io/bot-commands).
</details>
<!-- test report -->",True,False,11,625.1333333333333
kubernetes/kubernetes/78641,2019-06-02T19:36:30Z,False,5cf4266e6480fd16b31331e1,"@tedyu: The following tests **failed**, say `/retest` to rerun them all:

Test name | Commit | Details | Rerun command
--- | --- | --- | ---
pull-kubernetes-e2e-gce-device-plugin-gpu | 5bdae25cfcafe0df0cfabe85a2b6789e0a6faf4d | [link](https://prow.k8s.io/view/gcs/kubernetes-jenkins/pr-logs/pull/78641/pull-kubernetes-e2e-gce-device-plugin-gpu/1135253481620246528/) | `/test pull-kubernetes-e2e-gce-device-plugin-gpu`
pull-kubernetes-bazel-build | 77bad2f6977a0973d8bb2ed04cb3df27fdd54988 | [link](https://prow.k8s.io/view/gcs/kubernetes-jenkins/pr-logs/pull/78641/pull-kubernetes-bazel-build/1135262038071709702) | `/test pull-kubernetes-bazel-build`
pull-kubernetes-bazel-test | 77bad2f6977a0973d8bb2ed04cb3df27fdd54988 | [link](https://prow.k8s.io/view/gcs/kubernetes-jenkins/pr-logs/pull/78641/pull-kubernetes-bazel-test/1135262038075904000) | `/test pull-kubernetes-bazel-test`

[Full PR test history](https://prow.k8s.io/pr-history?org=kubernetes&repo=kubernetes&pr=78641). [Your PR dashboard](https://gubernator.k8s.io/pr/tedyu). Please help us cut down on flakes by [linking to](https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md#filing-issues-for-flaky-tests) an [open issue](https://github.com/kubernetes/kubernetes/issues?q=is:issue+is:open) when you hit one in your PR.

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository. I understand the commands that are listed [here](https://go.k8s.io/bot-commands).
</details>
<!-- test report -->",True,False,11,625.1333333333333
kubernetes/kubernetes/78641,2019-06-02T19:44:58Z,False,5cf428696480fd165f6449d5,"@tedyu: The following tests **failed**, say `/retest` to rerun them all:

Test name | Commit | Details | Rerun command
--- | --- | --- | ---
pull-kubernetes-e2e-gce-device-plugin-gpu | 5bdae25cfcafe0df0cfabe85a2b6789e0a6faf4d | [link](https://prow.k8s.io/view/gcs/kubernetes-jenkins/pr-logs/pull/78641/pull-kubernetes-e2e-gce-device-plugin-gpu/1135253481620246528/) | `/test pull-kubernetes-e2e-gce-device-plugin-gpu`
pull-kubernetes-bazel-build | 77bad2f6977a0973d8bb2ed04cb3df27fdd54988 | [link](https://prow.k8s.io/view/gcs/kubernetes-jenkins/pr-logs/pull/78641/pull-kubernetes-bazel-build/1135262038071709702) | `/test pull-kubernetes-bazel-build`
pull-kubernetes-bazel-test | 77bad2f6977a0973d8bb2ed04cb3df27fdd54988 | [link](https://prow.k8s.io/view/gcs/kubernetes-jenkins/pr-logs/pull/78641/pull-kubernetes-bazel-test/1135262038075904000) | `/test pull-kubernetes-bazel-test`
pull-kubernetes-e2e-gce-100-performance | 77bad2f6977a0973d8bb2ed04cb3df27fdd54988 | [link](https://prow.k8s.io/view/gcs/kubernetes-jenkins/pr-logs/pull/78641/pull-kubernetes-e2e-gce-100-performance/1135262164504809472/) | `/test pull-kubernetes-e2e-gce-100-performance`

[Full PR test history](https://prow.k8s.io/pr-history?org=kubernetes&repo=kubernetes&pr=78641). [Your PR dashboard](https://gubernator.k8s.io/pr/tedyu). Please help us cut down on flakes by [linking to](https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md#filing-issues-for-flaky-tests) an [open issue](https://github.com/kubernetes/kubernetes/issues?q=is:issue+is:open) when you hit one in your PR.

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository. I understand the commands that are listed [here](https://go.k8s.io/bot-commands).
</details>
<!-- test report -->",True,False,11,625.1333333333333
kubernetes/kubernetes/78641,2019-06-02T20:07:59Z,False,5cf42dd16480fd0cf41d4908,/test pull-kubernetes-bazel-build,True,False,11,625.1333333333333
kubernetes/kubernetes/78641,2019-06-02T20:25:57Z,False,5cf432056480fd0dc1ca479e,"@tedyu: The following tests **failed**, say `/retest` to rerun them all:

Test name | Commit | Details | Rerun command
--- | --- | --- | ---
pull-kubernetes-bazel-test | 77bad2f6977a0973d8bb2ed04cb3df27fdd54988 | [link](https://prow.k8s.io/view/gcs/kubernetes-jenkins/pr-logs/pull/78641/pull-kubernetes-bazel-test/1135262038075904000) | `/test pull-kubernetes-bazel-test`
pull-kubernetes-e2e-gce-100-performance | 77bad2f6977a0973d8bb2ed04cb3df27fdd54988 | [link](https://prow.k8s.io/view/gcs/kubernetes-jenkins/pr-logs/pull/78641/pull-kubernetes-e2e-gce-100-performance/1135262164504809472/) | `/test pull-kubernetes-e2e-gce-100-performance`
pull-kubernetes-e2e-gce-device-plugin-gpu | 77bad2f6977a0973d8bb2ed04cb3df27fdd54988 | [link](https://prow.k8s.io/view/gcs/kubernetes-jenkins/pr-logs/pull/78641/pull-kubernetes-e2e-gce-device-plugin-gpu/1135262038088486912/) | `/test pull-kubernetes-e2e-gce-device-plugin-gpu`
pull-kubernetes-bazel-build | 77bad2f6977a0973d8bb2ed04cb3df27fdd54988 | [link](https://prow.k8s.io/view/gcs/kubernetes-jenkins/pr-logs/pull/78641/pull-kubernetes-bazel-build/1135277011393056768) | `/test pull-kubernetes-bazel-build`

[Full PR test history](https://prow.k8s.io/pr-history?org=kubernetes&repo=kubernetes&pr=78641). [Your PR dashboard](https://gubernator.k8s.io/pr/tedyu). Please help us cut down on flakes by [linking to](https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md#filing-issues-for-flaky-tests) an [open issue](https://github.com/kubernetes/kubernetes/issues?q=is:issue+is:open) when you hit one in your PR.

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository. I understand the commands that are listed [here](https://go.k8s.io/bot-commands).
</details>
<!-- test report -->",True,False,11,625.1333333333333
kubernetes/kubernetes/78641,2019-06-02T20:41:27Z,False,5cf435aa6480fd0f8952d128,"@tedyu: The following tests **failed**, say `/retest` to rerun them all:

Test name | Commit | Details | Rerun command
--- | --- | --- | ---
pull-kubernetes-bazel-test | 77bad2f6977a0973d8bb2ed04cb3df27fdd54988 | [link](https://prow.k8s.io/view/gcs/kubernetes-jenkins/pr-logs/pull/78641/pull-kubernetes-bazel-test/1135262038075904000) | `/test pull-kubernetes-bazel-test`
pull-kubernetes-e2e-gce-100-performance | 77bad2f6977a0973d8bb2ed04cb3df27fdd54988 | [link](https://prow.k8s.io/view/gcs/kubernetes-jenkins/pr-logs/pull/78641/pull-kubernetes-e2e-gce-100-performance/1135262164504809472/) | `/test pull-kubernetes-e2e-gce-100-performance`
pull-kubernetes-e2e-gce-device-plugin-gpu | 77bad2f6977a0973d8bb2ed04cb3df27fdd54988 | [link](https://prow.k8s.io/view/gcs/kubernetes-jenkins/pr-logs/pull/78641/pull-kubernetes-e2e-gce-device-plugin-gpu/1135262038088486912/) | `/test pull-kubernetes-e2e-gce-device-plugin-gpu`
pull-kubernetes-bazel-build | 77bad2f6977a0973d8bb2ed04cb3df27fdd54988 | [link](https://prow.k8s.io/view/gcs/kubernetes-jenkins/pr-logs/pull/78641/pull-kubernetes-bazel-build/1135277011393056768) | `/test pull-kubernetes-bazel-build`
pull-kubernetes-kubemark-e2e-gce-big | 77bad2f6977a0973d8bb2ed04cb3df27fdd54988 | [link](https://prow.k8s.io/view/gcs/kubernetes-jenkins/pr-logs/pull/78641/pull-kubernetes-kubemark-e2e-gce-big/1135262164517392384/) | `/test pull-kubernetes-kubemark-e2e-gce-big`

[Full PR test history](https://prow.k8s.io/pr-history?org=kubernetes&repo=kubernetes&pr=78641). [Your PR dashboard](https://gubernator.k8s.io/pr/tedyu). Please help us cut down on flakes by [linking to](https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md#filing-issues-for-flaky-tests) an [open issue](https://github.com/kubernetes/kubernetes/issues?q=is:issue+is:open) when you hit one in your PR.

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository. I understand the commands that are listed [here](https://go.k8s.io/bot-commands).
</details>
<!-- test report -->",True,False,11,625.1333333333333
kubernetes/kubernetes/78641,2019-06-02T20:48:46Z,False,5cf437616480fd0d3150a8d1,/test pull-kubernetes-kubemark-e2e-gce-big,True,False,11,625.1333333333333
kubernetes/kubernetes/78641,2019-06-02T22:31:27Z,False,5cf44f706480fd0e065355b2,"@tedyu: The following tests **failed**, say `/retest` to rerun them all:

Test name | Commit | Details | Rerun command
--- | --- | --- | ---
pull-kubernetes-bazel-test | 77bad2f6977a0973d8bb2ed04cb3df27fdd54988 | [link](https://prow.k8s.io/view/gcs/kubernetes-jenkins/pr-logs/pull/78641/pull-kubernetes-bazel-test/1135262038075904000) | `/test pull-kubernetes-bazel-test`
pull-kubernetes-e2e-gce-100-performance | 77bad2f6977a0973d8bb2ed04cb3df27fdd54988 | [link](https://prow.k8s.io/view/gcs/kubernetes-jenkins/pr-logs/pull/78641/pull-kubernetes-e2e-gce-100-performance/1135262164504809472/) | `/test pull-kubernetes-e2e-gce-100-performance`
pull-kubernetes-e2e-gce-device-plugin-gpu | 77bad2f6977a0973d8bb2ed04cb3df27fdd54988 | [link](https://prow.k8s.io/view/gcs/kubernetes-jenkins/pr-logs/pull/78641/pull-kubernetes-e2e-gce-device-plugin-gpu/1135262038088486912/) | `/test pull-kubernetes-e2e-gce-device-plugin-gpu`
pull-kubernetes-bazel-build | 77bad2f6977a0973d8bb2ed04cb3df27fdd54988 | [link](https://prow.k8s.io/view/gcs/kubernetes-jenkins/pr-logs/pull/78641/pull-kubernetes-bazel-build/1135277011393056768) | `/test pull-kubernetes-bazel-build`
pull-kubernetes-kubemark-e2e-gce-big | 77bad2f6977a0973d8bb2ed04cb3df27fdd54988 | [link](https://prow.k8s.io/view/gcs/kubernetes-jenkins/pr-logs/pull/78641/pull-kubernetes-kubemark-e2e-gce-big/1135287327002726400/) | `/test pull-kubernetes-kubemark-e2e-gce-big`

[Full PR test history](https://prow.k8s.io/pr-history?org=kubernetes&repo=kubernetes&pr=78641). [Your PR dashboard](https://gubernator.k8s.io/pr/tedyu). Please help us cut down on flakes by [linking to](https://git.k8s.io/community/contributors/devel/sig-testing/flaky-tests.md#filing-issues-for-flaky-tests) an [open issue](https://github.com/kubernetes/kubernetes/issues?q=is:issue+is:open) when you hit one in your PR.

<details>

Instructions for interacting with me using PR comments are available [here](https://git.k8s.io/community/contributors/guide/pull-requests.md).  If you have questions or suggestions related to my behavior, please file an issue against the [kubernetes/test-infra](https://github.com/kubernetes/test-infra/issues/new?title=Prow%20issue:) repository. I understand the commands that are listed [here](https://go.k8s.io/bot-commands).
</details>
<!-- test report -->",True,False,11,625.1333333333333
dsteinberger/scrapimdb/118,2019-06-03T00:43:48Z,False,5cf46e766480fd0eaaf050a2,Closing this in favor of #119,True,False,1,0.0
kubernetes/kubernetes/78641,2019-06-03T05:01:00Z,False,5cf4aac26480fd0dc1ca716d,"it's always a struct, in'it? ",True,False,11,625.1333333333333
infOpen/ansible-role-logrotate/81,2019-06-04T04:00:53Z,False,5cf5ee266480fd170b432b28,Closing this in favor of #82,True,False,1,0.0
wtrumler/release-based-workflow/7,2019-06-05T06:49:28Z,False,5cf767286480fd15e7369365,"Release branches are long lived, and we opened a pull request for another feature change. This will give our release a more detailed history. We changed the default text to green instead of white.

Several changes might be included in release branches. This is a common practice, and allows you to continue to ship code quickly without blockers.

<hr>
<h3 align=""center"">Head over to the <a href=""https://github.com/wtrumler/release-based-workflow/pull/8"">next pull request</a> for your next steps.</h3>
",True,False,3,10.683333333333334
wtrumler/release-based-workflow/7,2019-06-05T06:54:23Z,False,5cf767286480fd15e7369366,"## Automating releases

Now that our release branch is ready to be merged, we have two more steps to take.

First, let's make sure that we're set up to document the version changes for the users.

## Step 8: Install and configure a GitHub app

We'll be using the Release Drafter GitHub app to draft our release notes as pull requests are merged.

The Release Drafter updates releases, so it requires write access to this repository. When you install the app, you **don't need to add it to your entire GitHub account. Only install it on this repository.** [Release Drafter](https://github.com/apps/release-drafter) doesn't work just out of the box. If you use this in the future, you'll need to add `.github/release-drafter.yml` to your repository. We'll take care of adding this in a separate PR.

### :keyboard: Activity: Install the Release Drafter GitHub app

1. Install the <a href=""https://probot.github.io/apps/release-drafter/"" target=""_blank"">Release Drafter GitHub app</a> to this repository **only**.
1. Open a [new pull request](https://github.com/wtrumler/release-based-workflow/compare/release-v1.0...config-release-drafter?expand=1) with `base: release-v1.0` and `compare: config-release-drafter`. This will add the configuration file for Release Drafter to this repository. 

Note: For privacy reasons, we can't see what other apps have access to this repository, so we'll take your word for it.

<hr>
<h3 align=""center"">I'll respond in your new pull request.</h3>

> _Sometimes I respond too fast for the page to update! If you don't see a response from me, wait a few seconds and refresh the page for your next steps._
",True,False,3,10.683333333333334
wtrumler/release-based-workflow/7,2019-06-05T07:00:09Z,False,5cf769ad6480fd1008700691,"Thanks for the merge. Notice that I didn't delete the branch? That's intentional.

Sometimes mistakes can happen with releases, and we'll want to be able to correct them on the same branch. Before we worry about any of that, let's finalize our first release!

Look for instructions in [this issue](https://github.com/wtrumler/release-based-workflow/issues/10).
",True,False,3,10.683333333333334
iNavFlight_____inav_____4798,2019-06-05T19:16:51Z,True,iNavFlight_____inav_____4798_____285514383,"This PR enables the definition of a cylindrical geofence with both horizontal (distance from home) and vertical (altitude from home) boundaries, partially implementing #62.

New settings:
+ `geofence_radius`
+ `geofence_height`
+ `geofence_buffer`

Behavior:
1. Aircraft exceeds horizontal (`geofence_radius`, _red line below)_, vertical (`geofence_height`) or both boundaries.
2. RTH is engaged.
    - Pilot lets the aircraft fly home.
      + Usual RTH behavior.
    - Pilot moves the sticks and disengages RTH, thus proceeding outside the geofence.
      + Geofence gets disabled until the aircraft comes back inside the boundaries plus `geofence_buffer` meters _(blue line below is the buffer size, green the resulting boundary)_. This gives some more room to disengage RTH and get back on track, especially with MRs.

![geofence](https://user-images.githubusercontent.com/3594528/58982855-ba9ac600-87d5-11e9-8b54-8a8e082a7d6c.png)

---

+ [ ] Field tested
+ [X] ~~Configurator PR~~ Should this feature be configurable via CLI only?
",True,True,12,344352.6666666667
iNavFlight_____inav_____4798,2019-06-05T19:19:31Z,True,iNavFlight_____inav_____4798_____290895191,"Which is the right way to trigger RTH and/or check if it's already active? `activateForcedRTH()`, `failsafeActivate(FAILSAFE_RETURN_TO_HOME)`, or both? The functionality of `activateForcedRTH()` looks controversial to me.",True,True,12,344352.6666666667
PhoenicisOrg_____scripts_____984,2019-06-07T15:56:38Z,True,PhoenicisOrg_____scripts_____984_____499940869,Please check Travis. There's an issue with json-align. See the [docs](https://phoenicisorg.github.io/scripts/General/tools/#json-align). Note: this requirement is described in the pull request how-to in the README.,True,True,5,1377.95
PhoenicisOrg_____scripts_____984,2019-06-08T00:35:33Z,True,PhoenicisOrg_____scripts_____984_____291787150,Blame @ImperatorS79 !,True,True,5,1377.95
PhoenicisOrg_____scripts_____984,2019-06-08T11:20:49Z,True,PhoenicisOrg_____scripts_____984_____291803689,No reason to blame people who try to help you!,True,True,5,1377.95
PhoenicisOrg_____scripts_____984,2019-06-08T14:51:43Z,True,PhoenicisOrg_____scripts_____984_____291809134,@plata You blame ppl in linux if they do something wrong so that they know about it.. it's the way we QA each other and i encourage you to do the same.,True,True,5,1377.95
PhoenicisOrg_____scripts_____984,2019-06-08T14:54:35Z,True,PhoenicisOrg_____scripts_____984_____291809213,@Kreyren There is a big difference between destructive / personal attack and code review / constructive remarks and quality assurance. Please beware of it. ,True,True,5,1377.95
zio/zio/993,2019-06-09T17:06:56Z,False,5cfd3e616480fd0f538c48cd,Shouldn't these be from the `zio` org ?,True,False,30,24228.8
zio/zio/993,2019-06-09T17:29:35Z,False,5cfd43386480fd12f8840ba8,Very good. I'm in favor,True,False,30,24228.8
zio/zio/993,2019-06-09T17:38:20Z,False,5cfd453c6480fd0eeb8b59fb,"I'm strongly in favor of monorepos. Splitting will no doubt reduce velocity and make development harder, but whatever :\",True,False,30,24228.8
zio/zio/993,2019-06-09T17:48:49Z,False,5cfd47b76480fd12f8840d9d,@NeQuissimus can you detail the motivation for the change?,True,False,30,24228.8
zio/zio/993,2019-06-09T17:53:24Z,False,5cfd48cc6480fd11499f12f7,@softinio Migration in progress :),True,False,30,24228.8
zio/zio/993,2019-06-09T18:48:55Z,False,5cfd55c76480fd1565adaec1,"The motivation here is multi-faceted:

- Accelerate zio-core adoption of 2.13
- Allow interop modules to issue updates for their non-ZIO dependencies (we don't want a new ZIO version when cats has an update)
- Improve build times
",True,False,30,24228.8
zio/zio/993,2019-06-09T21:15:46Z,False,5cfd78316480fd170b4699b5,"@NeQuissimus 
> Accelerate zio-core adoption of 2.13

zio-core may get to 2.13 faster, but updating the countless interop repositories will be no fun at all, they may eventually start lagging behind in updates.

My biggest concern is with diffusion of momentum, issue tracking and API-breaking changes across separate repositories. If we expect the API to freeze and maintenance effort to move out of core ZIO into the ecosystem, then maybe we're ready for that, otherwise splitting puts more work on the maintainers. I'm just putting it out there because I have a bad feeling about this :o
",True,False,30,24228.8
zio/zio/993,2019-06-09T21:20:38Z,False,5cfd79536480fd12674176df,@jdegoes ,True,False,30,24228.8
zio/zio/993,2019-06-09T22:17:09Z,False,5cfd869c6480fd0f538c6341,"I think we can defer this momentarily, but it's probably going to have to happen very soon.

The main reason is that a change to Cats Effect, Scalaz, or other interop package cannot result in us bumping the ZIO versioning. That means every interop module needs to be versioned independently.

Now, an alternative to splitting out the modules would be to independently version them inside the same (mono) repo. That would require more work around release process.",True,False,30,24228.8
zio/zio/993,2019-06-09T22:23:23Z,False,5cfd880e6480fd1083ea43d8,"@mijicd ^^^

I don't have a strong opinion here but I would prefer moving out the interops. For the aforementioned versioning issues.

There is no way we are going to have a smooth versioning setup with independent versions for the sub-modules.",True,False,30,24228.8
iNavFlight_____inav_____4798,2019-06-10T10:12:13Z,True,iNavFlight_____inav_____4798_____500364896,"Nice picture man! But I do not understand this part:(about the Buffer)

""This gives some more room to disengage RTH and get back on track, especially with MRs.""

Hmm can you explain real use case? I'm not sure if I understood it right, because currently i don't think that buffer is necessary.. Will look into the code..",True,True,12,344352.6666666667
iNavFlight_____inav_____4798,2019-06-10T10:38:58Z,True,iNavFlight_____inav_____4798_____500371626,"@junwoo091400 I didn't find a better way to explain it, but the buffer is needed to avoid hysteresis on the fringe of the geofence. [This](https://github.com/iNavFlight/inav/pull/4798/files#diff-b8166c625b87a27809555a2f13ba9c6bR3117) part of the code handles that feature, and here are two practical examples.

### Without buffer:
+ `geofence_radius` is set to 200m.
+ You fly out to 200m, RTH triggers.
+ As your craft is flying back, you move the sticks and disengage RTH. But your craft is now already less than 200m from home, so it's back inside the geofence.
+ You head back out to 200m, the cycle repeats because you keep bumping into RTH unless you ""power through"" the geofence boundary with enough speed to gain some extra distance before RTH engages and you manage to get out of it while still being >200m from home.

### With buffer:
+ `geofence_radius` is set to 200m, `geofence_buffer` to 50m.
+ You fly out to 200m, RTH triggers.
+ As your craft is flying back, you move the sticks and disengage RTH. If your craft is at least at `geofence_radius - geofence_buffer` meters from home (and thus 150m with this example config), it will still be considered outside the geofence. _So, in this case, you'll have 50m to safely disengage RTH._
+ You head back out to 200m and this time RTH won't engage, letting you go outside of the geofence.
+ As soon as you get back in a `geofence_radius - geofence_buffer` meters radius from home, the geofence is set back in place and the cycle repeats.",True,True,12,344352.6666666667
iNavFlight_____inav_____4798,2019-06-10T12:28:24Z,True,iNavFlight_____inav_____4798_____500398710,"> * You head back out to 200m, the cycle repeats because you keep bumping into RTH unless you ""power through"" the geofence boundary with enough speed to gain some extra distance before RTH engages and you manage to get out of it while still being >200m from home.

Ah, that makes a lot of sense. I see what you mean :) Thanks for the detailed explanation!",True,True,12,344352.6666666667
zio/zio/993,2019-06-10T15:12:27Z,False,5cfe749c6480fd11499f9d94,"Must admit I am 100% for moving out the interops. 

Let me know how I can help with this initiative. 
",True,False,30,24228.8
iNavFlight_____inav_____4798,2019-06-10T20:30:30Z,True,iNavFlight_____inav_____4798_____500582327,Perhaps I am misunderstanding your logic but I think a much simpler and less error prone geofence algorithm would force RTH against the user's wishes until the machine is well within the geofence boundary. Only then is the ability to manually disable RTH allowed. The geofence itself should be toggled by a switch to take complete control of the machine as a last resort. Especially if the geofence is misconfigured such as if the diameter is impossibly small.,True,True,12,344352.6666666667
iNavFlight_____inav_____4798,2019-06-10T21:32:59Z,True,iNavFlight_____inav_____4798_____500603387,"@nszceta User misconfiguration can never be completely avoided, it's up to the pilot to set coherent parameters - **just like any other feature.** In my opinion _forcing_ RTH to be enabled for any any amount of time while the RX is still active is too dangerous, human judgment is fundamental in the use of this feature and placing it under a switch is not needed thanks to the buffer logic. Also do remember that RTH (F/S, in this case) will stay active until the pilot moves the sticks, so your suggestion pretty much matches the already implemented behavior if the pilot does nothing.",True,True,12,344352.6666666667
zio/zio/993,2019-06-11T11:46:40Z,False,5cff95d06480fd100873d065,"@softinio as I started this pr, @mijicd worked on the new repos. Try syncing up with him. We need the new interops published before the docs here will build. ",True,False,30,24228.8
zio/zio/993,2019-06-11T11:58:10Z,False,5cff988b6480fd100873d1da,"@NeQuissimus @softinio all of the interops are on their repositories, but, as wrote in Gitter channel, we have different problem with some of them. 

To be more specific, `interop-cats`, `interop-monix`, `interop-scalaz` and `interop-twitter` depend on `TestRuntime` which is, unfortunately, present only in ZIO's core. There are two ways to resolve this: publish ZIO's test as part of the artifact, or move `TestRuntime` to `testkit`. I would prefer to do the latter, and I will need some help with ZIO release and version upgrades. 

Reach out on Gitter and we can tackle it together.",True,False,30,24228.8
TankerHQ/identity-python/11,2019-06-11T12:43:00Z,False,5cffa3096480fd0e501b72ff,"# [Codecov](https://codecov.io/gh/TankerHQ/identity-python/pull/11?src=pr&el=h1) Report
> Merging [#11](https://codecov.io/gh/TankerHQ/identity-python/pull/11?src=pr&el=desc) into [master](https://codecov.io/gh/TankerHQ/identity-python/commit/61fce585a7bb98a9ba61fc837053b841477f4d6c?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/TankerHQ/identity-python/pull/11/graphs/tree.svg?width=650&token=qHeoWph8nq&height=150&src=pr)](https://codecov.io/gh/TankerHQ/identity-python/pull/11?src=pr&el=tree)

```diff
@@          Coverage Diff          @@
##           master    #11   +/-   ##
=====================================
  Coverage     100%   100%           
=====================================
  Files           2      2           
  Lines          94     94           
=====================================
  Hits           94     94
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/TankerHQ/identity-python/pull/11?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/TankerHQ/identity-python/pull/11?src=pr&el=footer). Last update [61fce58...dbf9150](https://codecov.io/gh/TankerHQ/identity-python/pull/11?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",True,False,1,0.0
tenshiAMD/profiler/5,2019-06-11T15:46:58Z,False,5f18f90bbd3543444fefe854,"## Pull Request Test Coverage Report for [Build 76](https://coveralls.io/builds/23935634)

* **0** of **0**   changed or added relevant lines in **0** files are covered.
* No unchanged relevant lines lost coverage.
* Overall coverage decreased (**-3.5%**) to **94.749%**

---



|  Totals | [![Coverage Status](https://coveralls.io/builds/23935634/badge)](https://coveralls.io/builds/23935634) |
| :-- | --: |
| Change from base [Build 94](https://coveralls.io/builds/22179776): |  -3.5% |
| Covered Lines: | 397 |
| Relevant Lines: | 419 |

---
##### 💛  - [Coveralls](https://coveralls.io)
",True,False,2,0.0
tenshiAMD/profiler/5,2019-06-11T15:46:58Z,False,5f18f90bbd3543444fefe855,"## Pull Request Test Coverage Report for [Build 76](https://coveralls.io/builds/23935634)

* **0** of **0**   changed or added relevant lines in **0** files are covered.
* No unchanged relevant lines lost coverage.
* Overall coverage decreased (**-3.5%**) to **94.749%**

---



|  Totals | [![Coverage Status](https://coveralls.io/builds/23935634/badge)](https://coveralls.io/builds/23935634) |
| :-- | --: |
| Change from base [Build 94](https://coveralls.io/builds/22179776): |  -3.5% |
| Covered Lines: | 397 |
| Relevant Lines: | 419 |

---
##### 💛  - [Coveralls](https://coveralls.io)
",True,False,2,0.0
nestjs_____typeorm_____27,2019-06-12T16:25:29Z,True,nestjs_____typeorm_____27_____501350601,"I'm having some strange behavior with this. It works fine when I use this with some services, however with some others the subscriber stops listening to the events. The last time I found this issue was trying to inject the request.

```
@Injectable({ scope: Scope.REQUEST })
@EventSubscriber()
export class ExampleSubscriber implements EntitySubscriberInterface<Example> {
  
  constructor(@InjectConnection() private readonly connection: Connection, @Inject(REQUEST) private readonly request) {
    connection.subscribers.push(this);
  }
  listenTo() {
    return Example;
  }

  afterInsert(event: InsertEvent){
    console.log(event);
  }

}
```

any ideas?",True,True,25,905236.35
google_____shaderc_____708,2019-06-14T14:42:56Z,True,google_____shaderc_____708_____288360179,"
https://github.com/google/re2.git
/compare/0c95bcce2f1f..848dfb7e1d7b

git log 0c95bcce2f1f0f071a786ca2c42384b211b8caba..848dfb7e1d7ba641d598cb66f81590f3999a555a --date=short --no-merges --format=%ad %ae %s
2019-06-13 junyer@google.com Don&#39;t let DFA execution bail when slow for RE2::Set.
2019-06-13 junyer@google.com Expose FilteredRE2::GetRE2() as public.

The AutoRoll server is located here: https://autoroll.skia.org/r/re2-shaderc-autoroll

Documentation for the AutoRoller is here:
https://skia.googlesource.com/buildbot/+/master/autoroll/README.md

If the roll is causing failures, please contact the current sheriff (radial-bots&#43;shaderc-roll@google.com), and stop
the roller if necessary.

",True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T20:00:48Z,True,google_____shaderc_____708_____502244291,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T20:01:47Z,True,google_____shaderc_____708_____502244589,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T20:03:47Z,True,google_____shaderc_____708_____502245193,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T20:04:47Z,True,google_____shaderc_____708_____502245504,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T20:05:47Z,True,google_____shaderc_____708_____502245783,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T20:06:47Z,True,google_____shaderc_____708_____502246064,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T20:07:48Z,True,google_____shaderc_____708_____502246356,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T20:08:47Z,True,google_____shaderc_____708_____502246635,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T20:09:47Z,True,google_____shaderc_____708_____502246915,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T20:10:47Z,True,google_____shaderc_____708_____502247200,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T20:11:47Z,True,google_____shaderc_____708_____502247462,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T20:12:47Z,True,google_____shaderc_____708_____502247769,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T20:13:47Z,True,google_____shaderc_____708_____502248076,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T20:14:47Z,True,google_____shaderc_____708_____502248375,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T20:15:47Z,True,google_____shaderc_____708_____502248660,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T20:16:47Z,True,google_____shaderc_____708_____502248939,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T20:17:47Z,True,google_____shaderc_____708_____502249253,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T20:18:47Z,True,google_____shaderc_____708_____502249573,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T20:19:47Z,True,google_____shaderc_____708_____502249889,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T20:20:47Z,True,google_____shaderc_____708_____502250187,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T20:21:47Z,True,google_____shaderc_____708_____502250440,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T20:22:47Z,True,google_____shaderc_____708_____502250722,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T20:23:47Z,True,google_____shaderc_____708_____502251017,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T20:24:47Z,True,google_____shaderc_____708_____502251327,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T20:25:47Z,True,google_____shaderc_____708_____502251610,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T20:26:47Z,True,google_____shaderc_____708_____502251966,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T20:27:47Z,True,google_____shaderc_____708_____502252307,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T20:28:48Z,True,google_____shaderc_____708_____502252609,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T20:29:48Z,True,google_____shaderc_____708_____502252922,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T20:30:48Z,True,google_____shaderc_____708_____502253245,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T20:31:47Z,True,google_____shaderc_____708_____502253552,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T20:32:47Z,True,google_____shaderc_____708_____502253866,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T20:33:47Z,True,google_____shaderc_____708_____502254141,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T20:34:47Z,True,google_____shaderc_____708_____502254418,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T20:35:47Z,True,google_____shaderc_____708_____502254678,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T20:36:51Z,True,google_____shaderc_____708_____502254968,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T20:37:47Z,True,google_____shaderc_____708_____502255255,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T20:38:49Z,True,google_____shaderc_____708_____502255549,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T20:39:47Z,True,google_____shaderc_____708_____502255792,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T20:40:47Z,True,google_____shaderc_____708_____502256094,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T20:41:47Z,True,google_____shaderc_____708_____502256389,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T20:42:47Z,True,google_____shaderc_____708_____502256641,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T20:43:47Z,True,google_____shaderc_____708_____502256904,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T20:44:47Z,True,google_____shaderc_____708_____502257213,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T20:45:47Z,True,google_____shaderc_____708_____502257498,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T20:46:47Z,True,google_____shaderc_____708_____502257766,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T20:47:47Z,True,google_____shaderc_____708_____502258049,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T20:48:47Z,True,google_____shaderc_____708_____502258321,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T20:49:47Z,True,google_____shaderc_____708_____502258646,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T20:50:47Z,True,google_____shaderc_____708_____502258941,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T20:51:47Z,True,google_____shaderc_____708_____502259246,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T20:52:47Z,True,google_____shaderc_____708_____502259517,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T20:53:47Z,True,google_____shaderc_____708_____502259788,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T20:54:47Z,True,google_____shaderc_____708_____502260065,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T20:55:47Z,True,google_____shaderc_____708_____502260331,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T20:56:47Z,True,google_____shaderc_____708_____502260604,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T20:57:47Z,True,google_____shaderc_____708_____502260878,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T20:58:47Z,True,google_____shaderc_____708_____502261160,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T20:59:47Z,True,google_____shaderc_____708_____502261445,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T21:00:47Z,True,google_____shaderc_____708_____502261753,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T21:01:47Z,True,google_____shaderc_____708_____502262024,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T21:02:47Z,True,google_____shaderc_____708_____502262296,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T21:05:47Z,True,google_____shaderc_____708_____502263129,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T21:06:47Z,True,google_____shaderc_____708_____502263413,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T21:07:47Z,True,google_____shaderc_____708_____502263688,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T21:08:47Z,True,google_____shaderc_____708_____502263972,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T21:09:47Z,True,google_____shaderc_____708_____502264230,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T21:10:48Z,True,google_____shaderc_____708_____502264499,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T21:11:47Z,True,google_____shaderc_____708_____502264745,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T21:12:47Z,True,google_____shaderc_____708_____502265002,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T21:13:47Z,True,google_____shaderc_____708_____502265294,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T21:14:48Z,True,google_____shaderc_____708_____502265540,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T21:15:47Z,True,google_____shaderc_____708_____502265779,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T21:16:47Z,True,google_____shaderc_____708_____502266025,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T21:18:47Z,True,google_____shaderc_____708_____502266501,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T21:19:47Z,True,google_____shaderc_____708_____502266760,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T21:20:47Z,True,google_____shaderc_____708_____502267030,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T21:21:47Z,True,google_____shaderc_____708_____502267277,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T21:22:47Z,True,google_____shaderc_____708_____502267520,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T21:23:47Z,True,google_____shaderc_____708_____502267766,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T21:24:47Z,True,google_____shaderc_____708_____502268005,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T21:25:47Z,True,google_____shaderc_____708_____502268256,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T21:26:47Z,True,google_____shaderc_____708_____502268507,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-14T21:27:47Z,True,google_____shaderc_____708_____502268760,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
zio/zio/993,2019-06-15T00:42:53Z,False,5d04403c6480fd150aa1fd13,@mijicd I think the test artifacts have now been released,True,False,30,24228.8
zio/zio/993,2019-06-15T02:13:27Z,False,5d0455796480fd126743bf1e,"@NeQuissimus When we did that last release so that the test artifacts are included for some reason `2.11` ones where never propogated to maven. Thats the current blocker. 

As an attempt to overcome it without have to do another release I just tried to do a 2.11 release only via laptop as opposed to CI and got this error:

```
[error] java.lang.RuntimeException: The release task was not run inside the CI.
[error] 	at scala.sys.package$.error(package.scala:26)
[error] 	at ch.epfl.scala.sbt.release.ReleaseEarly$Defaults$.$anonfun$releaseEarly$2(ReleaseEarlyPlugin.scala:308)
[error] 	at sbt.std.Transform$$anon$3.$anonfun$apply$2(System.scala:46)
[error] 	at sbt.std.Transform$$anon$4.work(System.scala:67)
[error] 	at sbt.Execute.$anonfun$submit$2(Execute.scala:269)
[error] 	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
[error] 	at sbt.Execute.work(Execute.scala:278)
[error] 	at sbt.Execute.$anonfun$submit$1(Execute.scala:269)
[error] 	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:178)
[error] 	at sbt.CompletionService$$anon$2.call(CompletionService.scala:37)
[error] 	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
[error] 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
[error] 	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
[error] 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
[error] 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
[error] 	at java.lang.Thread.run(Thread.java:745)
[error] (releaseEarly) The release task was not run inside the CI.
[error] Total time: 0 s, completed Jun 14, 2019 7:02:06 PM
```

Currently looking into how I can pretend to be running in CI :-) 

Unless you know a way around this or a better way to release 2.11 only we may have to do another release to proceed. 

Let me know your thoughts. 
",True,False,30,24228.8
zio/zio/993,2019-06-15T02:18:16Z,False,5d0456976480fd103ff5235b,"`export CI=""""` does the trick",True,False,30,24228.8
zio/zio/993,2019-06-15T05:53:36Z,False,5d0489116480fd0d5eea1ade,"> `export CI=""""` does the trick

That did it but now I am getting:

```
[error] Unable to find credentials for [Sonatype Nexus Repository Manager @ oss.sonatype.org].
[warn] CLIENT ERROR: 401 Unauthorized. Check your resolvers username and password.
```

@NeQuissimus Are the sonatype creds you have on our github team page still valid? 
",True,False,30,24228.8
zio/zio/993,2019-06-15T06:06:12Z,False,5d048c046480fd0e501e004e,Credentials look fine to me comparing it whats not hashed in circle settings,True,False,30,24228.8
google_____shaderc_____708,2019-06-15T11:58:47Z,True,google_____shaderc_____708_____502360443,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-15T11:59:47Z,True,google_____shaderc_____708_____502360536,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-15T12:00:47Z,True,google_____shaderc_____708_____502360629,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-15T12:01:47Z,True,google_____shaderc_____708_____502360754,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-15T12:02:47Z,True,google_____shaderc_____708_____502360878,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-15T12:03:47Z,True,google_____shaderc_____708_____502360944,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-15T12:04:47Z,True,google_____shaderc_____708_____502361030,AutoRoller is stopped; closing the active roll.,True,True,93,1281.8666666666666
google_____shaderc_____708,2019-06-15T12:04:48Z,True,google_____shaderc_____708_____502361032,PullRequest is not longer mergeable. Closing it.,True,True,93,1281.8666666666666
zio/zio/993,2019-06-15T17:29:31Z,False,5d052c2f6480fd0eeb8f63c0,The creds should not have changed ,True,False,30,24228.8
zio/zio/993,2019-06-20T02:45:11Z,False,5d0af4696480fd1230484609,@NeQuissimus What remains to get this one through?,True,False,30,24228.8
zio/zio/993,2019-06-20T06:04:24Z,False,5d0b23186480fd1565b484ef,"@jdegoes build for 2.11 is failing, thus preventing release of interops.",True,False,30,24228.8
ethereum_____web3.js_____2905,2019-06-20T11:37:31Z,True,ethereum_____web3.js_____2905_____290178150,"## Description

This is the stable release of v1.0.


### Compare View

[v1.0.0-beta.37 -> v1.0.0](https://github.com/ethereum/web3.js/compare/v1.0.0-beta.37...7e90479)


## Type of change

- [X] Release


## Checklist:

- [ ] I have selected the correct base branch.
- [ ] I have performed a self-review of my own code. 
- [ ] I have commented my code, particularly in hard-to-understand areas.
- [ ] I have made corresponding changes to the documentation.
- [ ] My changes generate no warnings.
- [ ] I have updated or added types for all modules I've changed
- [ ] Any dependent changes have been merged and published in downstream modules.
- [ ] I ran ```npm run lint``` in the root folder with success and pushed the changes.
- [ ] I ran ```npm run test``` in the root folder with success and extended the tests to cover all changes.
- [ ] I ran ```npm run build``` in the root folder and tested it in the browser and with node.
- [ ] I ran ```npm run dtslint``` in the root folder and tested that all my types are correct
- [ ] I have tested my code on an ethereum test network.",True,True,8,7025.6
ethereum_____web3.js_____2905,2019-06-20T14:31:51Z,True,ethereum_____web3.js_____2905_____504049296,"
[![Coverage Status](https://coveralls.io/builds/24109247/badge)](https://coveralls.io/builds/24109247)

Coverage remained the same at 83.071% when pulling **c77ccf85628064fddd1df753336ad923d0f712c9 on release/1.0** into **7655fe88a6bdee2a501e669aafe8070443d24d19 on 1.x**.
",True,True,8,7025.6
zio/zio/993,2019-06-20T15:28:00Z,False,5d0ba73a6480fd0e5021639a,"@mijicd 

So it looks like we have to:

1. Release 2.11
2. Release interop
3. Update docs to point to released interop
4. Finally, merge in this PR which will delete the interop modules

Sound about right?",True,False,30,24228.8
zio/zio/993,2019-06-20T15:53:02Z,False,5d0bad1c6480fd0cf428fa21,"@jdegoes Exactly, even the order is right. 

I'd suggest to push the 2.11 asap, as there has been some release-related work in the meantime. Interops require minimal work, basically version bump and docs syncing for cats afaik. I'm not sure how much effort is required to migrate ZIO docs.",True,False,30,24228.8
zio/zio/993,2019-06-20T15:54:59Z,False,5d0bad876480fd103ff88902,"@mijicd Is the ordinary release process working, i.e. if I cut a new RC, will 2.11 get built along with everyone else? Or do we still have problems with 2.11 releasing?",True,False,30,24228.8
zio/zio/993,2019-06-20T15:57:53Z,False,5d0bae456480fd0d1de3515f,"@jdegoes It doesn't seem to be released anymore. At this point, 2.11 is stucked at `1.0.0-RC8-4`. Maybe @NeQuissimus knows more details. As far as I know, he and @softinio are working on fixing the issue.",True,False,30,24228.8
zio/zio/993,2019-06-20T17:18:59Z,False,5d0bc1986480fd162d52744a,I know nothing :D,True,False,30,24228.8
zio/zio/993,2019-06-20T21:27:19Z,False,5d0bfb716480fd0f11a85d1e,@NeQuissimus any chance you can have a look at https://github.com/zio/zio/issues/1011 ? It seems we need a new SSH key to fix the docs deployment ,True,False,30,24228.8
ethereum_____web3.js_____2905,2019-06-21T15:09:16Z,True,ethereum_____web3.js_____2905_____296277439,"The only addition of the `browserifyCompatible` branch in frozeman's fork seems to be [this change](https://github.com/frozeman/WebSocket-Node/commit/7004c39c42ac98875ab61126e5b4a925430f592c). I'm not sure why it was made in the first place, but are we sure that it is no longer needed?",True,True,8,7025.6
ethereum_____web3.js_____2905,2019-06-21T15:11:49Z,True,ethereum_____web3.js_____2905_____296278536,"I'm a bit worried about bumping a major version on a dependency, as it could introduce potential incompatibilities in something as critical as the promievent. Why was this needed?",True,True,8,7025.6
ethereum_____web3.js_____2905,2019-06-21T19:38:21Z,True,ethereum_____web3.js_____2905_____504548928,"I'm surprised by the number of dependencies upgrades to new major versions of this PR, especially because none of their uses has changed.

Does this version of the library have enough tests to do these upgrades with enough confidence that nothing breaks, @nivida? I'm not familiar enough with this codebase yet.

I agree with @spalladino that the `eventemitter3` is a special case, as it's exposed through promievents.",True,True,8,7025.6
zio/zio/993,2019-06-22T00:03:01Z,False,5d0d71656480fd162d533fb7,2.11 is now published without issue. I'm still working on the microsite deployment failing.,True,False,30,24228.8
ethereum_____web3.js_____2905,2019-06-23T22:04:37Z,True,ethereum_____web3.js_____2905_____504791331,"Great to see the progress here @nivida! I'm curious what the 2.x branch/release is, as that seems to be a recent development.
> As for websockets, I'm glad we are moving away from the github version since it was incorrectly packed and was giving a lot of headaches to many developers when installing it.

+1 @spalladino. Can't wait to remove my preinstall scripts removing websocket git folders.",True,True,8,7025.6
PolarisSS13_____Polaris_____6229,2019-06-23T23:43:54Z,True,PolarisSS13_____Polaris_____6229_____290926911,"Here we go! Told y'all there'd be something good coming.

First up- you can now construct and deconstruct teleporters. You'll need certain subspace parts from telecomms storage or R&D, as well as high bluespace levels for the circuits. The hub uses a treatment disk, and the station uses an ansible and filter. 

Next, teleporter stations can now be locked and unlocked with a teleporter-access ID. A locked teleporter cannot be changed from its current state (if it's disabled, it stays disabled; if it's enabled, it stays enabled). Teleporters start locked- so you can only use them if you have the right access on your ID. Stationbound units (AIs/borgs) are able to bypass this restriction and toggle a teleporter on or off regardless of its lock state (unless the wires have been tampered with).
 
 Next, teleporter stations now have six wires- two dummy wires, one that controls the lock, one that enables and disables it, one that test-fires it, and one that can be pulsed to randomise the chances of someone being spaced. (Don't pulse that one.)

The dummy wires do nothing.
The lock wire will toggle the lock on/off when pulsed, or fix the lock in that position when cut- so if you lock it and cut the lock wire, it cannot be unlocked, and vice versa.
The enable/disable wire will turn the teleporter on and off when pulsed, or completely disable the teleporter when cut.
The testfire wire will testfire the teleporter when pulsed, or disable testfiring when cut- you can still testfire it, you just won't gain any benefit from it. Deadly when combined with...
... the randomise wire, which randomises the chance of someone being spaced when pulsed. (Cutting it and mending it restores it to the base 5%.) Teleporters won't space you if they're testfired, though- unless, of course, you also cut the testfire wire!

Sound complicated? Good. You shouldn't be tinkering with teleporter wires unless you're willing to get spaced. If someone's tampered with it in advance, you're probably going to want an engineer or scientist to take a look at it and fix it... or, y'know, just take it apart and put it back together again. That works too.

Finally, because the teleporters are now secure on their own, NanoTrasen has removed the turrets from the teleporter rooms. We don't need them any more, since the teleporters start out ID-locked, and it's a lot less immersion-breaking to have a simple ID lock than it is to shoot people who don't have authorisation.",True,True,4,1610.8166666666666
PolarisSS13_____Polaris_____6229,2019-06-24T00:40:27Z,True,PolarisSS13_____Polaris_____6229_____504803245,I'm preemptively locking the conversation on this PR before it becomes contentious or heated. It will be discussed at the next Staff Meeting.,True,True,4,1610.8166666666666
vimc/orderly/110,2019-06-24T14:39:38Z,False,5d10e1ec6480fd13fcd8a372,"# [Codecov](https://codecov.io/gh/vimc/orderly/pull/110?src=pr&el=h1) Report
> Merging [#110](https://codecov.io/gh/vimc/orderly/pull/110?src=pr&el=desc) into [master](https://codecov.io/gh/vimc/orderly/commit/ed2bfcb810b8336c3f11d7edcf6e111119cd519f?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/vimc/orderly/pull/110/graphs/tree.svg?width=650&token=stpTTmBmi9&height=150&src=pr)](https://codecov.io/gh/vimc/orderly/pull/110?src=pr&el=tree)

```diff
@@          Coverage Diff          @@
##           master   #110   +/-   ##
=====================================
  Coverage     100%   100%           
=====================================
  Files          30     30           
  Lines        2997   2997           
=====================================
  Hits         2997   2997
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/vimc/orderly/pull/110?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/vimc/orderly/pull/110?src=pr&el=footer). Last update [ed2bfcb...92c6a91](https://codecov.io/gh/vimc/orderly/pull/110?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",True,False,1,0.0
hyperledger/indy-node/1355,2019-06-24T17:20:18Z,False,5d1107876480fd134349738a,Can one of the admins verify this patch?,True,False,7,4260.1
hyperledger/indy-node/1355,2019-06-24T17:20:20Z,False,5d1107876480fd134349738b,Could one of the committers please verify this patch?,True,False,7,4260.1
hyperledger/indy-node/1355,2019-06-24T21:22:51Z,False,5d11405a6480fd12a2904c26,(CI) test this please,True,False,7,4260.1
PolarisSS13_____Polaris_____6229,2019-06-25T02:31:13Z,True,PolarisSS13_____Polaris_____6229_____296984412,"Considering tickrate is configurable, I'd use `5 MINUTES` instead.",True,True,4,1610.8166666666666
PolarisSS13_____Polaris_____6229,2019-06-25T02:34:43Z,True,PolarisSS13_____Polaris_____6229_____296985033,"This should probably have a check for if `testfire_broken` is true or false.
I.E. `(prob(failprob) && (!accurate || testfire_broken))`
So that if the wire is cut, OR it's inaccurate, it will have a fail chance.",True,True,4,1610.8166666666666
ethereum_____web3.js_____2905,2019-06-25T08:38:17Z,True,ethereum_____web3.js_____2905_____297070527,I'm using the ``websocket`` package in the new architecture directly but will definitely do some additional tests. (There was an issue in the past with getting the global object with Firefox),True,True,8,7025.6
ethereum_____web3.js_____2905,2019-06-25T08:43:07Z,True,ethereum_____web3.js_____2905_____505348407,"> Does this version of the library have enough tests to do these upgrades with enough confidence that nothing breaks, @nivida? I'm not familiar enough with this codebase yet.

Yes, I've downgraded the packages if the tests were failing. 

> I agree with @spalladino that the eventemitter3 is a special case, as it's exposed through promievents. 

Upgrading of the EventEmitter package doesn't have an impact on the functionality of Web3.js but I will definitely do some additional tests here too.

@sethfork I will publish an announcement which will explain anything :-)",True,True,8,7025.6
bcgov/lear/119,2019-06-25T17:20:36Z,False,5d1259146480fd12304ba7db,"Looks good and tests pass, but I get 3 pylint + many flake8 errors",True,False,1,0.0
hyperledger/indy-node/1355,2019-06-25T19:33:08Z,False,5d12782e6480fd13fcd99f9d,This is a doc only change. It should have no implications to CI.,True,False,7,4260.1
zio/zio/993,2019-06-26T12:34:09Z,False,5d13677b6480fd10cc01c6f6,This is ready to go :tada: ,True,False,30,24228.8
zio/zio/993,2019-06-26T12:55:44Z,False,5d136c886480fd0dc1d9452d,@NeQuissimus @mijicd @softinio Thank you all for your help in getting us to this point!,True,False,30,24228.8
aws-cloudformation/cfn-python-lint/985,2019-06-27T01:28:04Z,False,5d141cd76480fd1440bb3434,"# [Codecov](https://codecov.io/gh/aws-cloudformation/cfn-python-lint/pull/985?src=pr&el=h1) Report
> Merging [#985](https://codecov.io/gh/aws-cloudformation/cfn-python-lint/pull/985?src=pr&el=desc) into [master](https://codecov.io/gh/aws-cloudformation/cfn-python-lint/commit/58568ca1cbab3a6cb810564e3af72162cb13b48f?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/aws-cloudformation/cfn-python-lint/pull/985/graphs/tree.svg?width=650&token=MtiYFwfmh9&height=150&src=pr)](https://codecov.io/gh/aws-cloudformation/cfn-python-lint/pull/985?src=pr&el=tree)

```diff
@@           Coverage Diff           @@
##           master     #985   +/-   ##
=======================================
  Coverage   86.85%   86.85%           
=======================================
  Files         133      133           
  Lines        7874     7874           
  Branches     1935     1935           
=======================================
  Hits         6839     6839           
+ Misses        638      637    -1     
- Partials      397      398    +1
```


| [Impacted Files](https://codecov.io/gh/aws-cloudformation/cfn-python-lint/pull/985?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [src/cfnlint/\_\_init\_\_.py](https://codecov.io/gh/aws-cloudformation/cfn-python-lint/pull/985/diff?src=pr&el=tree#diff-c3JjL2NmbmxpbnQvX19pbml0X18ucHk=) | `88.61% <0%> (ø)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/aws-cloudformation/cfn-python-lint/pull/985?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/aws-cloudformation/cfn-python-lint/pull/985?src=pr&el=footer). Last update [58568ca...3b02761](https://codecov.io/gh/aws-cloudformation/cfn-python-lint/pull/985?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",True,False,2,12.833333333333334
aws-cloudformation/cfn-python-lint/985,2019-06-27T01:40:54Z,False,5d141fd66480fd11e710d756,The last force push is for fixing a typo in the commit message.,True,False,2,12.833333333333334
iNavFlight_____inav_____4798,2019-06-27T06:04:45Z,True,iNavFlight_____inav_____4798_____506204466,"Hi !
Any chance that this will be included in INAV 2.3? 
This is an awesome feature for RC Training. No more fly away planes from the students :-)
",True,True,12,344352.6666666667
1905-soundg/sound-g/139,2019-06-27T07:26:50Z,False,5d1470dc6480fd138fa8bf65,ok,True,False,2,0.55
1905-soundg/sound-g/139,2019-06-27T07:27:23Z,False,5d1470dc6480fd138fa8bf66,おk,True,False,2,0.55
hyperledger/indy-node/1355,2019-06-27T12:46:32Z,False,5d14bbdd6480fd170b51f12c,"@ken-ebert Sure. But CI's status is required for merge. Failed tests don't relate to the changes, it's a kind of intermittent issues that will be explored.",True,False,7,4260.1
hyperledger/indy-node/1355,2019-06-27T14:57:20Z,False,5d14da836480fd1565b932b2,test this please,True,False,7,4260.1
hyperledger/indy-node/1355,2019-06-27T16:20:24Z,False,5d14edfe6480fd0e06634442,@andkononykhin Thanks for the clarification.,True,False,7,4260.1
vitessio/vitess/4722,2019-08-17T02:54:05Z,False,5f851436bd35435e7341726e,@dweitzman we should rework this PR into the newer vreplication. Disable FK checks during vrepl and enable it just before accepting writes in `MigrateWrites`.,True,False,11,824898.4333333333
Exiv2_____exiv2_____1009,2019-09-29T07:49:02Z,True,Exiv2_____exiv2_____1009_____322481467,"@sridharb1 and I are collaborating on this.  For the moment, it's Work-in-progress.",True,True,43,262527.48333333334
Exiv2_____exiv2_____1009,2019-09-29T12:46:08Z,True,Exiv2_____exiv2_____1009_____536296831,"# [Codecov](https://codecov.io/gh/Exiv2/exiv2/pull/1009?src=pr&el=h1) Report
> Merging [#1009](https://codecov.io/gh/Exiv2/exiv2/pull/1009?src=pr&el=desc) into [0.27-maintenance](https://codecov.io/gh/Exiv2/exiv2/commit/a30027c64a692c5f1734e26a7919a122c833f941?src=pr&el=desc) will **decrease** coverage by `0.12%`.
> The diff coverage is `89.47%`.

[![Impacted file tree graph](https://codecov.io/gh/Exiv2/exiv2/pull/1009/graphs/tree.svg?width=650&token=O9G7Iswx26&height=150&src=pr)](https://codecov.io/gh/Exiv2/exiv2/pull/1009?src=pr&el=tree)

```diff
@@                 Coverage Diff                  @@
##           0.27-maintenance    #1009      +/-   ##
====================================================
- Coverage             63.36%   63.24%   -0.13%     
====================================================
  Files                   158      157       -1     
  Lines                 21730    21677      -53     
====================================================
- Hits                  13769    13709      -60     
- Misses                 7961     7968       +7
```


| [Impacted Files](https://codecov.io/gh/Exiv2/exiv2/pull/1009?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [src/tiffimage\_int.cpp](https://codecov.io/gh/Exiv2/exiv2/pull/1009/diff?src=pr&el=tree#diff-c3JjL3RpZmZpbWFnZV9pbnQuY3Bw) | `91.76% <ø> (ø)` | :arrow_up: |
| [src/makernote\_int.hpp](https://codecov.io/gh/Exiv2/exiv2/pull/1009/diff?src=pr&el=tree#diff-c3JjL21ha2Vybm90ZV9pbnQuaHBw) | `50% <ø> (ø)` | :arrow_up: |
| [src/tags\_int.cpp](https://codecov.io/gh/Exiv2/exiv2/pull/1009/diff?src=pr&el=tree#diff-c3JjL3RhZ3NfaW50LmNwcA==) | `87.59% <ø> (-1.74%)` | :arrow_down: |
| [src/tags\_int.hpp](https://codecov.io/gh/Exiv2/exiv2/pull/1009/diff?src=pr&el=tree#diff-c3JjL3RhZ3NfaW50LmhwcA==) | `76.92% <ø> (ø)` | :arrow_up: |
| [src/sonymn\_int.cpp](https://codecov.io/gh/Exiv2/exiv2/pull/1009/diff?src=pr&el=tree#diff-c3JjL3Nvbnltbl9pbnQuY3Bw) | `86.53% <100%> (+33.47%)` | :arrow_up: |
| [src/makernote\_int.cpp](https://codecov.io/gh/Exiv2/exiv2/pull/1009/diff?src=pr&el=tree#diff-c3JjL21ha2Vybm90ZV9pbnQuY3Bw) | `74.77% <100%> (+1.94%)` | :arrow_up: |
| [src/image.cpp](https://codecov.io/gh/Exiv2/exiv2/pull/1009/diff?src=pr&el=tree#diff-c3JjL2ltYWdlLmNwcA==) | `77.69% <60%> (-0.33%)` | :arrow_down: |
| [src/tags.cpp](https://codecov.io/gh/Exiv2/exiv2/pull/1009/diff?src=pr&el=tree#diff-c3JjL3RhZ3MuY3Bw) | `57.96% <0%> (-21.02%)` | :arrow_down: |
| [src/samsungmn\_int.cpp](https://codecov.io/gh/Exiv2/exiv2/pull/1009/diff?src=pr&el=tree#diff-c3JjL3NhbXN1bmdtbl9pbnQuY3Bw) | `17.14% <0%> (-5.72%)` | :arrow_down: |
| [src/olympusmn\_int.cpp](https://codecov.io/gh/Exiv2/exiv2/pull/1009/diff?src=pr&el=tree#diff-c3JjL29seW1wdXNtbl9pbnQuY3Bw) | `19.23% <0%> (-4.28%)` | :arrow_down: |
| ... and [8 more](https://codecov.io/gh/Exiv2/exiv2/pull/1009/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/Exiv2/exiv2/pull/1009?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/Exiv2/exiv2/pull/1009?src=pr&el=footer). Last update [a30027c...4650d8b](https://codecov.io/gh/Exiv2/exiv2/pull/1009?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",True,True,43,262527.48333333334
Exiv2_____exiv2_____1009,2019-09-30T10:17:18Z,True,Exiv2_____exiv2_____1009_____536498550,"Could you please fix the diffs for some of the `_int.cpp` files? It is quite impossible to find out what you changed, because the whole file got mangled.",True,True,43,262527.48333333334
Exiv2_____exiv2_____1009,2019-09-30T10:50:38Z,True,Exiv2_____exiv2_____1009_____536508925,"It's been mangled by the line-endings.

The code provided by @sridharb1 has Windows CR/LF line endings which SmartGit hid from me.  I think I can put this right after @sridharb1 has finished what he's doing at the moment.

SVN has a file property to say ""This file is to use EOL: NL"" to prevent this kind of clobbering.  Do you know if there's something similar in Git? ",True,True,43,262527.48333333334
Exiv2_____exiv2_____1009,2019-09-30T11:08:09Z,True,Exiv2_____exiv2_____1009_____536514343,"```
562 rmills@rmillsmbp:~/gnu/github/exiv2/0.27-maintenance $ git diff -b fix1008_Sony2010e 0.27-maintenance > ~/temp/dc5523f6.diff
563 rmills@rmillsmbp:~/gnu/github/exiv2/0.27-maintenance $ (cd ~/temp ; tar czf dc5523f6.tar.gz dc5523f6.diff) 
564 rmills@rmillsmbp:~/gnu/github/exiv2/0.27-maintenance $ ls -l ~/temp/dc5523f6.tar.gz 
-rw-r--r--  1 rmills  staff  9397 30 Sep 12:06 /Users/rmills/temp/dc5523f6.tar.gz
565 rmills@rmillsmbp:~/gnu/github/exiv2/0.27-maintenance $ 
```
[dc5523f6.tar.gz](https://github.com/Exiv2/exiv2/files/3670556/dc5523f6.tar.gz)
",True,True,43,262527.48333333334
Exiv2_____exiv2_____1009,2019-09-30T11:15:15Z,True,Exiv2_____exiv2_____1009_____536516379,"https://github.com/Exiv2/exiv2/pull/1009#issuecomment-536508925
",True,True,43,262527.48333333334
Exiv2_____exiv2_____1009,2019-09-30T11:17:39Z,True,Exiv2_____exiv2_____1009_____536517052," I am done with pushing it into fix1008_Sony2010e

Line endings should not be a problem. They should be translated automatically by git to the line ending you use locally.

BTW, the line endings in the test folder for the .sh and functions.source is wrong. They are checked in as text files and thus come with a crlf for me, but it needs just lf as I am executing them in a bash shell. I deal with this locally after every update.",True,True,43,262527.48333333334
Exiv2_____exiv2_____1009,2019-09-30T11:29:55Z,True,Exiv2_____exiv2_____1009_____536520757," This is not the problem. core.autocrlf is true for me.
This means that it should get converted to lf upon checkin.",True,True,43,262527.48333333334
Exiv2_____exiv2_____1009,2019-09-30T13:14:18Z,True,Exiv2_____exiv2_____1009_____329568703,"Huh, why is this suddenly necessary? Also, we shouldn't touch the xmpsdk's source unless absolutely required.",True,True,43,262527.48333333334
Exiv2_____exiv2_____1009,2019-09-30T15:04:08Z,True,Exiv2_____exiv2_____1009_____536604297,"@sridharb1  I've ""tweaked"" the line endings (with dos2unix) and that's much better.  A couple of matters to be resolved:

1) There are a great many changes in canonmn_int.cpp from the original.

My impression is that you generated that file with a script that reads code in ExifTool.  It's added/modified new/changed lens definitions.  It has also modified unchanged definitions.  And while this is cosmetic, if it's possible to avoid changing existing code, this is desirable.

2) FAIL: test_run (bugfixes.github.test_issue_981.CanonAfInfoTest)

Because this branch is from 0.27-maintenance, you don't have my fix for #981.  It's on a branch waiting to be approved/merged into 0.27-maintenance.  I've invited @derselbst  to approve the changes for #981 (and #1001 and #1010).  I would expect you to have both the code AND the test harness changes (or neither).  Let's get everything up-to-date and we'll fix it from there.  I'll deal with this and you can ignore this at the moment.

",True,True,43,262527.48333333334
Exiv2_____exiv2_____1009,2019-09-30T15:21:21Z,True,Exiv2_____exiv2_____1009_____536612420,"I've removed WIP from title.  This PR is ready for review.

I've modified test_issue_981.CanonAfInfoTest to pass and this PR should pass the CI.  I will be dealing with #981 (and his descendants) for v0.27.3.  I'm puzzled that test code for #981 is on branch 0.27-maintenance. ",True,True,43,262527.48333333334
Exiv2_____exiv2_____1009,2019-09-30T15:42:10Z,True,Exiv2_____exiv2_____1009_____536622207, This is by design. It is best if canonmn_int.cpp is in sync with the naming conventions of exiftool (which I consider the reference standard) and not other names that was added in an adhoc manner over the years. This would also improve future maintability to add just the differences and not search through the mountain of spurious differences to arrive at the meaningful changes.,True,True,43,262527.48333333334
Exiv2_____exiv2_____1009,2019-09-30T16:43:10Z,True,Exiv2_____exiv2_____1009_____536647120,"Thanks for the explanation.  If you have a script to generate this code, could you share it with us please.

I agree that ExifTool is the ""reference standard"".  Neils worked on Exiv2 for 3 or 4 years and made many changes concerning Exiv2/Exiftool compatibility.  As I was quite new to the project (and dealing with cross-platform build/test), I didn't really know anything about his work.  

Since Neils left the project (to return to college), I introduced the ~/.exiv2 file to enable users to define lenses.  @nkbj You're welcome back whenever you'd like to join us.",True,True,43,262527.48333333334
Exiv2_____exiv2_____1009,2019-09-30T16:44:19Z,True,Exiv2_____exiv2_____1009_____329678196,"@sridharb1 replied _On, windows there is a problem if you don't have it._",True,True,43,262527.48333333334
Exiv2_____exiv2_____1009,2019-09-30T17:06:44Z,True,Exiv2_____exiv2_____1009_____536656469,"To avoid changing the XMPSDK code, perhaps it should go into the Windows 
CMake code

Arnold
",True,True,43,262527.48333333334
Exiv2_____exiv2_____1009,2019-09-30T18:14:42Z,True,Exiv2_____exiv2_____1009_____536684828,"Interesting idea @tester0077 I believe @sridharb1 is using his own vcxproj/sln files (derived from the now removed msvc/ build environment), so he's not using CMake.

The principle that this can be defined in the project (and not explicitly in the code) sounds good.  It's rather strange that this seems to be required at all, as I don't require this and we've built Exiv2 with all versions of Visual Studio from 2003 onwards.  

On the other hand, this is a minor matter and if it's needed to build the code, so be it.  @D4N is correct to say that Team Exiv2 endeavours to avoid changing xmp/ code. ",True,True,43,262527.48333333334
Exiv2_____exiv2_____1009,2019-10-01T02:33:57Z,True,Exiv2_____exiv2_____1009_____536833326,"I use an excel macro to generate the lens and camera list. This is not very sophisticated, as in, it needs manual input and cleanup afterwards, but it does ~99% of the work which saves a ton of time that would be spent in otherwise changing the format from exiftool/perl to exiv2/c. If interested, I can share it. This may be used to get other ""big"" systems like Nikon in sync, but I didn't venture there because of other priorities.",True,True,43,262527.48333333334
Exiv2_____exiv2_____1009,2019-10-01T03:38:40Z,True,Exiv2_____exiv2_____1009_____536847135,"This is strange. Regarding dos2unix, this is not the correct practice to do dos2unix before checking things in. Modern scm systems should handle these things transparently. If the repository thinks that this file should always have unix line endings (even on Windows), then the file is incorrectly checked in.

I think it is a mystery to even you looking at your other comment.",True,True,43,262527.48333333334
Exiv2_____exiv2_____1009,2019-10-01T03:51:47Z,True,Exiv2_____exiv2_____1009_____536849924,"There are many mysteries in life that I can't explain.  For sure the popularity of **git** is one of them.

Anyway, this PR is looking much better and almost passing the CI.  There's at least one more ""mystery"" and that's CentOS is failing to build and reports:
```
/usr/bin/bash: line 97: python3: command not found
```
It's being doing this for months and blocking everything.  However, @D4N fixed that yesterday on the 0.27-maintenance branch and @piponazo approved/merged it and that's a welcome step forward.

Next mystery is how to get the outstanding PRs (including this) approved and merged onto 0.27-maintenance.  After that, I still have about 3 issues to fix and then Exiv2 v0.27.3-RC1 can be published.",True,True,43,262527.48333333334
Exiv2_____exiv2_____1009,2019-10-01T06:11:24Z,True,Exiv2_____exiv2_____1009_____536882998,"I have the answer for why the line endings are messed up. You run a Mac-based environment and I use Windows. When you extracted the files from the zip file, the files ended up being crlf in an lf world. When you checked them in, git thought it doesn't need to translate anything (because the source is an lf world) and thus, they ended up in the repository with crlf and caused problems thereafter.",True,True,43,262527.48333333334
Exiv2_____exiv2_____1009,2019-10-01T08:21:44Z,True,Exiv2_____exiv2_____1009_____536925665,"Yes.  I thought I explained that yesterday!  It impacted the 3 files which you send in the zip.

I use SmartGit as my GUI on Git (although I also use the command-line git) and it's strange that informed me of the changes I made in your code for the selector() and `#include <math.h>` and yet it was silent about line-endings.

Anyway, the sun's shining this morning and all is well with this PR, except the CentOS/python3 issue.",True,True,43,262527.48333333334
Exiv2_____exiv2_____1009,2019-10-02T05:19:37Z,True,Exiv2_____exiv2_____1009_____537339860,I don't have the git skills to back out something.,True,True,43,262527.48333333334
Exiv2_____exiv2_____1009,2019-10-02T05:57:48Z,True,Exiv2_____exiv2_____1009_____330381319,Why the sudden whitespace changes now?,True,True,43,262527.48333333334
Exiv2_____exiv2_____1009,2019-10-02T05:59:00Z,True,Exiv2_____exiv2_____1009_____330381544,Why are these tests dropped?,True,True,43,262527.48333333334
Exiv2_____exiv2_____1009,2019-10-02T06:00:10Z,True,Exiv2_____exiv2_____1009_____330381771,Then this define should be added via cmake.,True,True,43,262527.48333333334
Exiv2_____exiv2_____1009,2019-10-02T06:02:10Z,True,Exiv2_____exiv2_____1009_____330382121,"The diff of the following array looks like everything got changed, but when glancing over it I have a hard time to actually spot the changes. What happened here?

EDIT: ah, there's a whole lot of whitespace changes. Please don't add these or add them into a separate commit.",True,True,43,262527.48333333334
Exiv2_____exiv2_____1009,2019-10-02T06:02:14Z,True,Exiv2_____exiv2_____1009_____330382138,I had to remove them to get the test to pass.  I will have to restore them when all the open PRs are eventually merged.  I'm totally frustrated by having about 12 different PRs open and unreviewed.,True,True,43,262527.48333333334
Exiv2_____exiv2_____1009,2019-10-02T06:03:11Z,True,Exiv2_____exiv2_____1009_____330382328,"What whitespace changes?  In the code, in the output?",True,True,43,262527.48333333334
Exiv2_____exiv2_____1009,2019-10-02T06:07:42Z,True,Exiv2_____exiv2_____1009_____537350605,"I don't know what to do about the dos2unix matter.  I can think of two possibilities:

1) Replace this PR
Find the resulting patch implied by this PR (with git diff)
Open a new branch and apply the patch
Close this PR
Review/approve/merge the new branch

2) I give up and retire.  I am exhausted, frustrated and totally browned off.
 ",True,True,43,262527.48333333334
Exiv2_____exiv2_____1009,2019-10-02T07:31:21Z,True,Exiv2_____exiv2_____1009_____330404768,"Whitespace changes were done by VS, regrettably. It changed the spaces to tabs. I have changed the setting that prevents this from happening again. ",True,True,43,262527.48333333334
Exiv2_____exiv2_____1009,2019-10-02T07:35:12Z,True,Exiv2_____exiv2_____1009_____330405967,"The original code was pretty-formatted to align with lenses that have 4 spaces. Unfortunately, there came along lens #10001 and thus not aligned. I just gave ourselves more breathing room by using 5 spaces throughout.",True,True,43,262527.48333333334
Exiv2_____exiv2_____1009,2019-10-02T07:41:54Z,True,Exiv2_____exiv2_____1009_____537376224,"> 
> 
> There is still files with a huge diff left, please fix that.
> 
> Also, I am not sure if this belongs into a maintenance branch to be honest, as it changes the output of exiv2 by quite a bit.

Yes, it aligns exiv2 and exiftool, at least for Canon lenses and cameras. There may be people who look for the old output, they will need to update their scripts. The advantages of aligning with exiftool, I believe, outweighs the potential incidents that may arise, even with a maintenance release patch.",True,True,43,262527.48333333334
Exiv2_____exiv2_____1009,2019-10-04T14:56:23Z,True,Exiv2_____exiv2_____1009_____331545219,The CMake code is in fact already including that definition. Take a look at `cmake/compilerFlags.cmake`,True,True,43,262527.48333333334
Exiv2_____exiv2_____1009,2019-10-04T15:12:03Z,True,Exiv2_____exiv2_____1009_____538439152,"Luis Díaz Más <notifications@github.com> writes:

> piponazo commented on this pull request.
>
>
>
>> @@ -5,7 +5,7 @@
>  // NOTICE:	Adobe permits you to use, modify, and distribute this file in accordance with the terms
>  // of the Adobe license agreement accompanying it.
>  // =================================================================================================
> -
> +#define NOMINMAX
>
> The CMake code is in fact already including that definition. Take a look at `cmake/compilerFlags.cmake`
>

I've dropped the respective commit now.
",True,True,43,262527.48333333334
Exiv2_____exiv2_____1009,2019-10-04T16:58:19Z,True,Exiv2_____exiv2_____1009_____538478987,"Ok


Sent from Yahoo Mail for iPhone


On Friday, October 4, 2019, 20:42, D4N <notifications@github.com> wrote:

Luis Díaz Más <notifications@github.com> writes:

> piponazo commented on this pull request.
>
>
>
>> @@ -5,7 +5,7 @@
> // NOTICE: Adobe permits you to use, modify, and distribute this file in accordance with the terms
> // of the Adobe license agreement accompanying it.
> // =================================================================================================
> -
> +#define NOMINMAX
>
> The CMake code is in fact already including that definition. Take a look at `cmake/compilerFlags.cmake`
>

I've dropped the respective commit now.


—
You are receiving this because you were mentioned.
Reply to this email directly, view it on GitHub, or mute the thread.


",True,True,43,262527.48333333334
expressjs_____session_____708,2019-11-04T09:18:49Z,True,expressjs_____session_____708_____336177883,"Add debug statement (enabled only in debug mode) at vital session life cycle control flow points

Refs: https://github.com/expressjs/session/issues/633#issuecomment-471110093

Generally improves ability to diagnose issues.

(from a high level view on the outstanding issues in this repo, it is evident that the most prominent type is diagnosing session persistence across client requests, so this is a small step towards helping there)",True,True,29,358951.0333333333
jbmagination_____GDBrowser_____1,2019-12-08T21:49:45Z,True,jbmagination_____GDBrowser_____1_____534607873,"Beep boop. Optimizing your images is my life. https://imgbot.net/ for more information.

",True,True,2,51371.066666666666
openstreetmap_____iD_____7162,2019-12-24T13:05:42Z,True,openstreetmap_____iD_____7162_____568744868,"Sorry @rory but I strongly disagree.. I'm not comfortable intentionally breaking features in our software that provide value - and we have all previously agreed that letting users opt out of them is fine.  We put a lot of work and thought into the NSI feature, and while I'm not surprised, I'm seriously disappointed in you dropping your PR in here like this one day after the 2.17 release.  **Shame on you.** Please don't perform stunts like this or troll our repository in this way - it's not welcome. 

Taken to the extreme, we'd also need to opt-out the user from seeing satellite imagery, and force them to go looking through menus to figure out how to turn it on. They wouldn't even be able to use the tutorial!

Also, we can't accept PRs that touch the Privacy policy like this. 
",True,True,3,63351.65
HippieStation_____PRMirror_____16,2019-12-26T10:08:07Z,True,HippieStation_____PRMirror_____16_____542507880,I literally learnt go just to fix this shit.,True,True,19,209551.81666666668
HippieStation_____PRMirror_____16,2019-12-26T10:11:22Z,True,HippieStation_____PRMirror_____16_____569030364,worth noting that I moved labeling the PR to a webhook and added a force push to the script to remirror properly,True,True,19,209551.81666666668
instagrambot_____instabot_____1206,2020-01-07T15:13:54Z,True,instagrambot_____instabot_____1206_____571628813,"Please stop cotacting me, I am not doing anything wrong.. What you are doing now isharrasment and illegal. 

Here are danii begging me to move my repo to his organisation because 10% of my code is instabot haha..
<img alt=""Screenshot 2020-01-06 at 15 30 27"" width=""760"" src=""https://i.imgur.com/jDR1J9x.png"">

stop harrasing me, saying i did stuff wrong while you did it.. is bad style

I would have no issues with helping others out, i have an issue because it's you danii.. 
1. I don't want to hear from you.
2. I don't want to hear your crazy demands.
3. I don't want my work under your name.

So now that both github and me have told you, you don't have a case. Can you please stop pushing this.. this has been going on for seven months now.. I really don't have time for small stuff like this. ",True,True,4,431.6
ops-school_____opsschool5-coding_____14,2020-01-07T16:39:03Z,True,ops-school_____opsschool5-coding_____14_____546386152,@mickeysh ,True,True,2,0.55
ops-school_____opsschool5-coding_____14,2020-01-07T16:39:36Z,True,ops-school_____opsschool5-coding_____14_____571668195,really bad coding !!!!! ,True,True,2,0.55
instagrambot_____instabot_____1206,2020-01-07T17:02:59Z,True,instagrambot_____instabot_____1206_____571678068,lol,True,True,4,431.6
instagrambot_____instabot_____1206,2020-01-07T17:03:59Z,True,instagrambot_____instabot_____1206_____571678470,kk i will contact github have a nice day.,True,True,4,431.6
3DStris_____3DStris_____36,2020-01-07T18:34:29Z,True,3DStris_____3DStris_____36_____546441132,"use top left instead of center left
also use better text positioning (good job geni)",True,True,2,0.55
3DStris_____3DStris_____36,2020-01-07T18:35:02Z,True,3DStris_____3DStris_____36_____571714147,no no shut up Shut the fuck uop,True,True,2,0.55
instagrambot_____instabot_____1206,2020-01-07T22:25:30Z,True,instagrambot_____instabot_____1206_____571801544,"@bruvv This is not a mistake - ""instabotai"" project was in ""instagrambot"" organization a while ago. Since this project was started and maintained by @reliefs, he decided to create his own organization and transfer the repo to it.

Thank you @bruvv for your support, I really appreciate that. But please, don't try to be rude. As for me, this looks unprofessional. I truly believe that @reliefs understand the whole situation and will do the right thing soon.",True,True,4,431.6
NabuCasa_____hass-nabucasa_____119,2020-01-08T12:50:06Z,True,NabuCasa_____hass-nabucasa_____119_____572033883,"I close now the PR. @flokli, thanks for you contribution. I hope you don't take that personal.",True,True,1,0.0
xbmc_____xbmc_____17106,2020-01-12T07:07:19Z,True,xbmc_____xbmc_____17106_____573388880,"Ok I have been thinking about this a lot over the last week and my current opinion is that we should focus on the HDR playback for now and drop the HDR os switching.

The HDR os switching is questionable if it's a good idea. There's a reason that Microsoft chose to not offer an easy API for the HDR toggle and leaves it up to the user. This is a global setting that affects other software as well and if several apps try to toggle this on/off things might end up in all sorts of broken states.
There's also the fact that we can't do this for UWP and it makes sense to keep the behavior consistent to make it easier for users and support.

The deciding factor for me is that the HDR os switching can be implemented as a python addon so by not having it in Kodi core we aren't blocking this possibility but we keep core simple and more consistent across platforms.

We should be able to use [this](https://github.com/microsoft/DirectX-Graphics-Samples/blob/29fb35649a449da30adcbfefee5d2e1a8258c718/Samples/Desktop/D3D12HDR/src/D3D12HDR.cpp#L1114) method to check if the system is HDR capable, and put that in some method we already have that reacts to changes in the window system like `DX::DeviceResources::HandleOutputChange`. I haven't been able to test that this method works for all scenarios so there could be a better way to handle it.

I think we should set static HDR metadata if we don't find any dynamic metadata in the stream, maybe set this directly at start as it would be overwritten later by dynamic metadata anyway?

@fandangos mentioned on slack that refresh rate switching doesn't work when HDR is enabled so this is something that needs to be investigated so we don't lose that functionality.

In summary
1. Remove everything for OS HDR switching, win32util, skin, powermenu etc
2. Do the HDR capability check in an event such as `HandleOutputChanged`
3. Make sure that refresh rate is switched correctly to match the video frame rate.
4. optional, use static metadata by default or if no dynamic metadata is found.

Thank you for all your work. With the above changes I'm fairly confident that we can get this merged and have HDR support in v19.

",True,True,28,21734.916666666668
KeplerStation_____KeplerStation_____1549,2020-01-12T08:50:19Z,True,KeplerStation_____KeplerStation_____1549_____548540783,"Original PR: https://github.com/Citadel-Station-13/Citadel-Station-13/pull/10492
--------------------
## About The Pull Request
Glitter can now be made by grinding plastic sheets
And then coloured by crayon dust

## Why It's Good For The Game
Gives more uses to crayons and plastic to make a harmless dust to spread around for enjoyment
## Changelog
:cl:
add: Glitter is now makeable with ground plastic and some crayons
/:cl:
",True,True,2,239.0
xbmc_____xbmc_____17106,2020-01-12T10:54:12Z,True,xbmc_____xbmc_____17106_____573403012,"Ok but people won't use it.

People complain even because they have to manual switch with the button... they want it to be fully automatic.

They will continue to use the fork because it is more practical.


> @fandangos mentioned on slack that refresh rate switching doesn't work when HDR is enabled so this is something that needs to be investigated so we don't lose that functionality.

This happens on his fork. In mine it doesn't happen. The current manual switch option does not interfere with refresh rate match.

> I think we should set static HDR metadata if we don't find any dynamic metadata in the stream, maybe set this directly at start as it would be overwritten later by dynamic metadata anyway?

This already works like this.",True,True,28,21734.916666666668
xbmc_____xbmc_____17106,2020-01-12T11:05:24Z,True,xbmc_____xbmc_____17106_____573403904,"I just mentioned with Paxxi that I poorly explained it to him. 

If the function to turn hdr on/off is in CRenderBase::Configure it will break refresh rate switching. That's one of the reasons why I deleted my entire second fork of this.

For an automatic solution we are kinda of screwed:
1. Automatic method before video starts: doesn't have the metadata to check and be started or not.
2. Automatic method during Configure: breaks refresh rate switching.
3. Automatic method after video started: wrong metadata.

The idea of autohdr is good for nvidia and amd gpus but as we discussed on the forum doesn't work for ryzen and Intel.
Since the code to switch hdr on uses unlisted and private microsoft apis that are not documented (as far as I know) it would remove a burden of the code if this was dropped and it could surface as an independent addon in the future.

This would make it safer.
Also people will stop using my fork (not sure about yours) because as I explained in the thread, I won't be updating it any further since this will probably get merged.


Just my thoughts on this.
Thank you for all your work, Jogal. ",True,True,28,21734.916666666668
xbmc_____xbmc_____17106,2020-01-12T11:07:07Z,True,xbmc_____xbmc_____17106_____573404057,"> We should be able to use this method to check if the system is HDR capable,

`ComPtr<IDXGIOutput6> output6;`   needs to be compiled with  `<dxgi1_6.h>`  this breaks runtime compatibility with Windows 7

In fact, before I used it:
https://github.com/thexai/xbmc/commit/c12b0fb938c14673c63f705e6705855a3c5ac997#diff-59b7a66ddf0bcc466e36501cd9739d85R1289
I removed it as an ""improvement"".",True,True,28,21734.916666666668
xbmc_____xbmc_____17106,2020-01-12T12:29:49Z,True,xbmc_____xbmc_____17106_____573410536,Why not stop supporting Windows 7 if it is Holding us back? Like Python 2 it is time to move on. I would really love to see the full potential of HDR in kodi on Windows 10. Microsoft is soon to stop releasing Security updates for Win 7.,True,True,28,21734.916666666668
xbmc_____xbmc_____17106,2020-01-12T12:42:20Z,True,xbmc_____xbmc_____17106_____573411512,"I thought that it would still run on windows 7 but the `As` call would fail and return nullptr when used like the example

@dvidebaek I agree that it's about time to drop support for Windows 7 now that it's out of support but that's a larger decision and if we can keep support with minimal effort it's worth it for v19.",True,True,28,21734.916666666668
KeplerStation_____KeplerStation_____1549,2020-01-12T12:49:19Z,True,KeplerStation_____KeplerStation_____1549_____573412183,This PR is fucked,True,True,2,239.0
xbmc_____xbmc_____17106,2020-01-12T12:51:53Z,True,xbmc_____xbmc_____17106_____573412393,Kodi is in need of more Windows developers. Why not say that Leia 18.x will be the last officially supported Kodi for Windows 7. Then the few Windows developers could use there free spare time on implementing new features insted of supporting a legacy OS... HDR is the future not Windows 7. Windows 7 is a waste of time supporting time wise,True,True,28,21734.916666666668
xbmc_____xbmc_____17106,2020-01-12T13:34:03Z,True,xbmc_____xbmc_____17106_____573415897,"We are making it very very difficult for me. If I close this PR I will not open any more...

- As it is now it works.
- It does not break compatibility with Windows 7.
- The auto refresh rate match works.
- Gives the possibility of activating the HDR mode without leaving to OS control panel. Remove this is not permissible if Kodi is used with remote control.
- Image quality and HDR metadata passthrough is perfect.
- Works in UWP with some limitations due UWP API  but works with same image quality.

I can't be forever changing everything over and over again... believe it or not it is a lot of work to test and make sure it doesn't have important bugs.",True,True,28,21734.916666666668
xbmc_____xbmc_____17106,2020-01-12T15:24:10Z,True,xbmc_____xbmc_____17106_____573425592,"> Since the code to switch hdr on uses unlisted and private microsoft apis that are not documented (as far as I know) it would remove a burden of the code if this was dropped and it could surface as an independent addon in the future.

I'm sorry but this is not true.
Of everything that is said in the forums there are many things that are not true.

![Anotación 2020-01-12 162004](https://user-images.githubusercontent.com/58434170/72221119-cadb0680-3557-11ea-9c86-65f14c00ccc8.png)

![Anotación 2020-01-12 161915](https://user-images.githubusercontent.com/58434170/72221123-cf9fba80-3557-11ea-8450-65b974df6521.png)

https://docs.microsoft.com/en-us/windows/win32/api/wingdi/ne-wingdi-displayconfig_device_info_type

https://docs.microsoft.com/es-es/windows/win32/api/wingdi/ns-wingdi-displayconfig_device_info_header

Also 0x18 = packet length = 24 bytes in decimal
same 0x20 = packet length = 32 bytes in decimal

In addition, this can also be implemented in UWP, but more work hours are needed...",True,True,28,21734.916666666668
xbmc_____xbmc_____17106,2020-01-12T15:37:26Z,True,xbmc_____xbmc_____17106_____573426751,"As I've said, as far as I know. 

I have worked with private APIs for HDR, not windows api. 

When I'm not sure I add the 'as far as I know' before commenting since, as I've said many times before, I'm still learning.

Also I base myself on the readme that came along with that code that you and I copied. Have you read it? It explains some of that function.

The author, 'AppWizard', claimed it was undocumented function calls. You can find the original files in the hdr thread, _DMU_ was the one offering those in a google drive link.

So who am I to contradict a readme from a code that I partially understand? :)

And finally this is not my call, it's team kodi's. All of them have it very clear I'm just a beginner in this.
So if I say something that is incorrect, please, feel free to correct it, as you are the more experienced one. ",True,True,28,21734.916666666668
xbmc_____xbmc_____17106,2020-01-12T15:41:30Z,True,xbmc_____xbmc_____17106_____573427226,"I agree but. ""It's undocumented"" or ""not understand it"" is not a valid reason to remove it.",True,True,28,21734.916666666668
xbmc_____xbmc_____17106,2020-01-12T15:47:09Z,True,xbmc_____xbmc_____17106_____573427871,Dont stop @thexai you are the Windows communities only hope for bringing HDR to Windows. I know you can figure out how to implement automatic HDR on/off. Keep going. I have a feeling TK only will work on HDR when the Linux Kernel is ready. It could take months!!! ,True,True,28,21734.916666666668
ocbtec_____creatives_____3,2020-01-13T11:00:07Z,True,ocbtec_____creatives_____3_____548853960,,True,True,2,1.0666666666666667
ocbtec_____creatives_____3,2020-01-13T11:01:11Z,True,ocbtec_____creatives_____3_____573609056,WTF??? Are you serious?,True,True,2,1.0666666666666667
timocapa_____android_frameworks_base_____1,2020-01-13T11:57:56Z,True,timocapa_____android_frameworks_base_____1_____548883740,kek bye,True,True,2,0.6333333333333333
timocapa_____android_frameworks_base_____1,2020-01-13T11:58:34Z,True,timocapa_____android_frameworks_base_____1_____573629532,"fucking timo
why you force push
",True,True,2,0.6333333333333333
iNavFlight_____inav_____4798,2020-01-13T13:07:33Z,True,iNavFlight_____inav_____4798_____573654198,"@mmagioni have you resolved the implementation of the vertical boundaries? I think there might be few problems, since vertical speed for normal FW is way lower than horizontal speed the vertical buffer should be a fraction of the horizontal buffer, maybe proportional to the horizontal buffer/horizontal speed. 
But the question is what will the aircraft do on hitting the vertical boundary? Will it keep descending to the ground in case RTH is not desabled. And if it enters RTH and is just above or close to home position I guess loitering will follow but should it descend to ground level or just maintain the altitude once its inside the ""green"" vertical sector?",True,True,12,344352.6666666667
jbmagination_____GDBrowser_____1,2020-01-13T14:00:49Z,True,jbmagination_____GDBrowser_____1_____573676364,Screw you,True,True,2,51371.066666666666
theforeman_____smart-proxy_____690,2020-01-13T15:15:47Z,True,theforeman_____smart-proxy_____690_____548996429,"I vote for introducing a cop for this and enforcing us not to use this shit. Full disclosure: I wrote that code :-)

@mmoll",True,True,2,7.166666666666667
theforeman_____smart-proxy_____690,2020-01-13T15:22:57Z,True,theforeman_____smart-proxy_____690_____573716284,"@lzap 

Try this:
```diff
diff --git a/.rubocop.yml b/.rubocop.yml
index 31d1265..7ab21b8 100644
--- a/.rubocop.yml
+++ b/.rubocop.yml
@@ -29,9 +29,6 @@ Metrics:
 Lint/AmbiguousRegexpLiteral:
   Enabled: false
 
-Lint/AssignmentInCondition:
-  Enabled: false
-
 Security/Eval:
```
",True,True,2,7.166666666666667
iNavFlight_____inav_____4798,2020-01-13T17:44:58Z,True,iNavFlight_____inav_____4798_____573784549,"@Mateyhv A single buffer dimension is enough in my opinion, you'll still need some vertical space to maneuver to disable the RTH and obstacles might be in your way, so extra vertical space is crucial to avoid unwanted control interferences. Regarding the behavior: since at the geofence's boundary RTH will be enabled, it will behave just like you turned it on yourself.

Anyway, I encourage everyone to wait for an initial cut of this feature to be finalized, tested and merged before suggesting improvements.",True,True,12,344352.6666666667
xbmc_____xbmc_____17106,2020-01-13T18:55:51Z,True,xbmc_____xbmc_____17106_____573815783,"> The idea of autohdr is good for nvidia and amd gpus

This is also not true:

It's causing issues with refresh rate match beacause:

AUTOHDR.exe switch display to HDR mode and NOT waits (safe) 2 seconds to complete.

Due this Kodi opens in an indeterminate state in SDR swapchain mode but display in HDR mode.

When playback begins and calls ResizeBuffers causes issues with refresh rate match because swapchain configuration changes from SDR to HDR in an uncontrolled way.

These issues are NOT PRESENT if is not used AUTOHDR.exe

People uses AUTOHDR.exe because YouTube video is cool……....

People complain about refresh rate issues with HDR........

",True,True,28,21734.916666666668
xbmc_____xbmc_____17106,2020-01-13T19:09:09Z,True,xbmc_____xbmc_____17106_____573821426,"No issues for me and some others who used it. 

I made it before you added the advancedsettings function to your fork and I even added on the first post that no one would need to use it. It was just an option.

If adding a Sleep(2000); to it fix the problem I can do it when I get home, no problem. Thanks for reporting it.

And the youtube video was really cool, glad you liked it. Thank you. :))

Well, either way, if you feel like I'm interfering or causing any problems to your work I'll ask the kodi mods to delete the autohdr thread.
I already stopped working on my fork, no big deal deleting autohdr. I really don't want to get in the way.
Just let me know.",True,True,28,21734.916666666668
iNavFlight_____inav_____4798,2020-01-13T20:36:23Z,True,iNavFlight_____inav_____4798_____573858206,"The single verical boundary makes things easier. Regarding RTH I am not sure how it behaves if uav is just above home position when it enables.

The only suggestion I have is to add a clear message for tue pilot to be aware that its not some malfunctionig that triggered RTH. Kind of a system message when crossing the geofence ""GEOFENCE RTH enabled in.."" five, four, three... Or anything similar.

Very interesting feature! Would like to see it soon ;-)",True,True,12,344352.6666666667
evilsocket_____pwnagotchi_____747,2020-01-14T10:59:27Z,True,evilsocket_____pwnagotchi_____747_____574119902,"https://github.com/evilsocket/www.pwnagotchi.ai/blob/master/content/configuration/_index.md

Do not forget to update the site too.",True,True,2,6.933333333333334
evilsocket_____pwnagotchi_____747,2020-01-14T11:06:23Z,True,evilsocket_____pwnagotchi_____747_____574122736,"I'm not sure if i'm more annoyed by the fact that the sentence doesn't even end with ""please"", or that anybody could just send a pull request to the other repository instead of demanding it to be updated, without even bothering being polite.",True,True,2,6.933333333333334
MinecraftForge_____MinecraftForge_____6443,2020-01-15T08:18:41Z,True,MinecraftForge_____MinecraftForge_____6443_____574547217,"There is both a ServerChatEvent and a ClientChatEvent, they should address the bulk of what you need.
A 10 second look would of shown you that.
And do not readd links in which I have removed, do it again and you'll be blocked.
I have instructed you on two paths on how to achieve your goal now.

Also this PR would never be accepted because we do not encourage people to directly screw with packets at the  raw level like this.
IF it was to EVER be entertained it would have to be hooked in the correct places where the data is actually sent like ServerChatEvent is and have the proper context.
If you're just going to hack around with low level packets, then just use netty and don't bother us when things break.",True,True,1,0.0
tkf/BenchmarkCI.jl/9,2020-01-19T15:41:21Z,False,5e2479d3bd35431fadee000a,"# [Codecov](https://codecov.io/gh/tkf/BenchmarkCI.jl/pull/9?src=pr&el=h1) Report
> Merging [#9](https://codecov.io/gh/tkf/BenchmarkCI.jl/pull/9?src=pr&el=desc) into [master](https://codecov.io/gh/tkf/BenchmarkCI.jl/commit/31fc0ec988f62340d0b1d8cbe01c3f5c887d30bd?src=pr&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/tkf/BenchmarkCI.jl/pull/9/graphs/tree.svg?width=650&token=CtisLbPwwt&height=150&src=pr)](https://codecov.io/gh/tkf/BenchmarkCI.jl/pull/9?src=pr&el=tree)

```diff
@@           Coverage Diff           @@
##           master       #9   +/-   ##
=======================================
  Coverage   66.37%   66.37%           
=======================================
  Files           2        2           
  Lines         113      113           
=======================================
  Hits           75       75           
  Misses         38       38
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/tkf/BenchmarkCI.jl/pull/9?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/tkf/BenchmarkCI.jl/pull/9?src=pr&el=footer). Last update [31fc0ec...c3f367b](https://codecov.io/gh/tkf/BenchmarkCI.jl/pull/9?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",True,False,1,0.0
xbmc_____xbmc_____17106,2020-01-24T14:28:21Z,True,xbmc_____xbmc_____17106_____578152390,"> I do not want to remove the code for manual HDR / SDR switch because this removes important functionality and usability.

@thexai we get that this is an important feature to improve usability, but you admitted yourself that this can only be a temporary solution. And it our eyes it is quite a hack and moved to a place where it a) doesn't really belong and b) is up to the skin to actually add it there, which again is not ideal for a feature you consider essential.

The suggestion of paxxi (and the preference of the team) was, and still is, to move the trigger for this feature to an add-on, making use of some utility `exe` (like the one of @fandangos) that performs the switch of the HDR mode in the OS.

The benefit of moving the trigger logic into an add-on would be that users have most flexibility on when it should be triggered. It could be on startup of KODI, via context menu entry on HDR movies in the library, as soon as one enters the video section of his library, on click of a remote button and what not. So it would be much more configurable and adjustable to the users needs/wishes and in addition would keep the core clean for now and give us more time to find a better solution.

So I'm sorry to say, if you want this PR to get merged, the HDR switching logic has to be moved to an add-on for the time being.

PS: if it helps in some way, since Win7 is EOL now, we will also drop Win7 support soon. For now it's planned to happen with v20, but if HDR would benefit of APIs that would break backwards compatibility to v7, we would consider dropping it for v19 already. We are still discussing this ofc - so decision is not final yet.

edit: just to be clear - from what I gathered from our Windows devs, the HDR switch is currently the only blocker in this PR preventing a merge (apart from Jenkins currently not being happy)
",True,True,28,21734.916666666668
rust-lang_____rfcs_____2544,2020-01-24T22:01:09Z,True,rust-lang_____rfcs_____2544_____578318988,"So a little over a year ago, @withoutboats [wrote](https://github.com/rust-lang/rfcs/pull/2544#issuecomment-453796456):

> I'm not sure what to do about this in the long term, but in an immediate sense I'm calling a cool down on this thread. I'm locking discussion for a couple of days or so and when it gets unlocked I hope it will be conducted with a decorum appropriate to a professional open source project.

Obviously, it's been more than a few days! Over the course of several lang team meetings, we've been discussing what to do about this RFC, and I've also spoken with @varkor. The truth is that it's quite complicated. But one thing is clear: **Whatever we do, it won't happen on this particular pull request.** If nothing else, this thread history is far too large for any reasonable human to catch up on. Therefore, the only action I am taking for the moment is to close this RFC.

In terms of next steps:

* Most of us on the lang team continues to feel that, all things considered, this would be a positive change for the language. However, we also recognize that there is a very sizable set of people who feel otherwise, and this alone is definitely reason to give pause and be triple sure.
* If we were to reconsider this proposal, we would want to begin with a thorough review of the concerns raised here, to ensure that the they are not lost and that we have considered them carefully. These would be combined with the [summary that @Centril already made](https://github.com/rust-lang/rfcs/pull/2544#issuecomment-453653184). (Exactly what form this review takes I'm not sure, but I *personally* would consider trying a [collaborative summary document](http://smallcultfollowing.com/babysteps/blog/2019/04/22/aic-collaborative-summary-documents/). --nikomatsakis)
* Some portion of the concerns had to do with the practical impact of making this change: i.e., making it harder for editors and other sorts of tooling to parse Rust. This at least can be evaluated by landing the change on nightly and actively updating the various bits of tooling we have, as well as allowing the change to ""sit"" for some time in an unstable state so that we accumulate experience.",True,True,268,711818.1666666666
rust-lang_____rfcs_____2544,2020-01-24T22:13:52Z,True,rust-lang_____rfcs_____2544_____578322984,"For historical purposes, [the current output for the example shown in the description](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=d155ca3a07603fed35101bdde2219907) is:

```
error: comparison operators cannot be chained
  --> src/main.rs:12:7
   |
12 |     id<u32>(0u32); // ok
   |       ^^^^^
   |
help: use `::<...>` instead of `<...>` to specify type arguments
   |
12 |     id::<u32>(0u32); // ok
   |       ^^

error: comparison operators cannot be chained
  --> src/main.rs:13:19
   |
13 |     let n = Nooper<&str>("":)""); // ok
   |                   ^^^^^^
   |
help: use `::<...>` instead of `<...>` to specify type arguments
   |
13 |     let n = Nooper::<&str>("":)""); // ok
   |                   ^^

error: comparison operators cannot be chained
  --> src/main.rs:14:11
   |
14 |     n.noop<()>(()); // ok
   |           ^^^^
   |
help: use `::<...>` instead of `<...>` to specify type arguments
   |
14 |     n.noop::<()>(()); // ok
   |           ^^
```

whereas the output when this RFC was created was:

```
error: chained comparison operators require parentheses
  --> <source>:12:7
   |
12 |     id<u32>(0u32); // ok
   |       ^^^^^^
   |
   = help: use `::<...>` instead of `<...>` if you meant to specify type arguments
   = help: or use `(...)` if you meant to specify fn arguments

error: chained comparison operators require parentheses
  --> <source>:13:19
   |
13 |     let n = Nooper<&str>("":)""); // ok
   |                   ^^^^^^^
   |
   = help: use `::<...>` instead of `<...>` if you meant to specify type arguments
   = help: or use `(...)` if you meant to specify fn arguments

error: chained comparison operators require parentheses
  --> <source>:14:11
   |
14 |     n.noop<()>(()); // ok
   |           ^^^^^
   |
   = help: use `::<...>` instead of `<...>` if you meant to specify type arguments
   = help: or use `(...)` if you meant to specify fn arguments

error[E0423]: expected value, found builtin type `u32`
  --> <source>:12:8
   |
12 |     id<u32>(0u32); // ok
   |        ^^^ not a value

error[E0423]: expected value, found builtin type `str`
  --> <source>:13:21
   |
13 |     let n = Nooper<&str>("":)""); // ok
   |                     ^^^ did you mean `std`?

error[E0369]: binary operation `<` cannot be applied to type `fn(_) -> _ {id::<_>}`
  --> <source>:12:5
   |
12 |     id<u32>(0u32); // ok
   |     ^^^^^^
   |
   = note: an implementation of `std::cmp::PartialOrd` might be missing for `fn(_) -> _ {id::<_>}`

error[E0369]: binary operation `<` cannot be applied to type `fn(_) -> Nooper<_> {Nooper<_>::{{constructor}}}`
  --> <source>:13:13
   |
13 |     let n = Nooper<&str>("":)""); // ok
   |             ^^^^^^^^^^^
   |
   = note: an implementation of `std::cmp::PartialOrd` might be missing for `fn(_) -> Nooper<_> {Nooper<_>::{{constructor}}}`

error[E0610]: `bool` is a primitive type and therefore doesn't have fields
  --> <source>:14:7
   |
14 |     n.noop<()>(()); // ok
   |       ^^^^

error[E0308]: mismatched types
  --> <source>:14:15
   |
14 |     n.noop<()>(()); // ok
   |               ^^^^ expected bool, found ()
   |
   = note: expected type `bool`
              found type `()`
```",True,True,268,711818.1666666666
xbmc_____xbmc_____17106,2020-01-25T17:51:43Z,True,xbmc_____xbmc_____17106_____578427213,"> to move the trigger for this feature to an add-on, making use of some utility exe (like the one of @fandangos) that performs the switch of the HDR mode in the OS.
> 
> The benefit of moving the trigger logic into an add-on would be that users have most flexibility on when it should be triggered. It could be on startup of KODI, via context menu entry on HDR movies in the library, as soon as one enters the video section of his library, on click of a remote button and what not. So it would be much more configurable and adjustable to the users needs/wishes and in addition would keep the core clean for now and give us more time to find a better solution.
> 
> So I'm sorry to say, if you want this PR to get merged, the HDR switching logic has to be moved to an add-on for the time being.

I'm sorry but it's a very stupid idea. I will not waste my time explaining why.

Some clue:

- Python needs to call a Win32 API code ""tool.exe"" that is already in Kodi.exe
- Kodi GUI needs know if it should show the button for HDR switch (needs know if the system is HDR capable), then needs part of the code that is supposed to be implemented outside.
- ""Current GUI settings / Player / Use HDR display capabilities"" needs know if system supports HDR to shown setting.
- Windows HDR switch from outside OK..... but swapchain is reconfigured by Python hahahhah


EDIT:  Is possible remove toggle button from power menu but  IS NOT POSSIBLE remove code related to HDR detection / switch from kodi.exe

AND IS NOT UNDOCUMENTED CODE     IS    **WIN32 API**    CODE   

AND CAN STAY  IN WIN32UTIL  FOREVER",True,True,28,21734.916666666668
xbmc_____xbmc_____17106,2020-01-25T19:09:05Z,True,xbmc_____xbmc_____17106_____578434174,"We have tried to be accommodating and clearly stated which parts we find troublesome currently and given you a path to get this merged .

Nobody said the swapchain would be configured by python, only that the code in Win32Util can be in an addon if it's needed.

Neither me nor @da-anda said that you used undocumented apis. I have some concerns over the usage of the DisplayConfiguration apis because the documentationen around them is very sparse compared to what win32 apis usually have available. I'm not an expert in the area so I gave you the option to remove that part to get your work merged.

You continue to be arrogant and belittling despite our efforts trying to work with you in good faith. You're very capable technically as shown by the work you've done here but the way you treat people is not acceptable.

This PR is done and it won't get approved. You're welcome to try again in the future if you can learn to behave better.",True,True,28,21734.916666666668
xbmc_____xbmc_____17106,2020-01-26T05:03:04Z,True,xbmc_____xbmc_____17106_____578468993,"Sad to see this. Thanks for the effort @thexai. Hope you will continue improving HDR on Windows. Maybe your own fork of kodi? When TK is closing this PR, do They have alternatives or is HDR a no go in kodi??",True,True,28,21734.916666666668
xbmc_____xbmc_____17106,2020-01-26T12:39:12Z,True,xbmc_____xbmc_____17106_____578498118,"@thexai 

>    Kodi GUI needs know if it should show the button for HDR switch (needs know if the system is HDR capable), then needs part of the code that is supposed to be implemented outside.

no, KODI does not have to know if this button has to be shown. Since the add-on is responsible for switching the OS HDR mode, it is also responsible to inject the button or toggle it automatically. The possibilities are almost endless and up to the add-on logic where to inject a context menu item or toggle automatically.

>    ""Current GUI settings / Player / Use HDR display capabilities"" needs know if system supports HDR to shown setting.

And it still can. Nobody said that you have to remove display capability enumeration in KODI etc. - just the power menu button and the logic to change the system setting.

> Windows HDR switch from outside OK..... but swapchain is reconfigured by Python hahahhah

nobody said that everything had to move into an add-on - only the logic to flip the HDR switch in the OS. Yes, that would mean that some logic might have to be duplicated in the tool (HDR capability detection) or that add-ons might have to be able to read some system information via APIs from KODI. In fact, there are already ways to get system info from within the Python API or JSON-RPC API. Those APIs could be extended to provide additional info and maybe even a method to enable/disable KODIs HDR mode if this would be needed (like it's possible to trigger the stereoscopic 3D mode from python and JSON-RPC).
So there would be ways to do what we asked for, but you completely shut down and don't seem to be open to compromise. That's really sad to see.

@dvidebaek we do want HDR, just not the power menu switch and the logic to change the OS setting. Everything else was fine (with room for later improvement), but thexai unfortunately does not seem to be willing to find a compromise to outsource this settings toggle or communicate with us in a cooperative way.",True,True,28,21734.916666666668
xbmc_____xbmc_____17106,2020-01-26T12:46:45Z,True,xbmc_____xbmc_____17106_____578498681,"> @thexai
> 
> > Kodi GUI needs know if it should show the button for HDR switch (needs know if the system is HDR capable), then needs part of the code that is supposed to be implemented outside.
> 
> no, KODI does not have to know if this button has to be shown. Since the add-on is responsible for switching the OS HDR mode, it is also responsible to inject the button or toggle it automatically. The possibilities are almost endless and up to the add-on logic where to inject a context menu item or toggle automatically.
> 
> > ""Current GUI settings / Player / Use HDR display capabilities"" needs know if system supports HDR to shown setting.
> 
> And it still can. Nobody said that you have to remove display capability enumeration in KODI etc. - just the power menu button and the logic to change the system setting.
> 
> > Windows HDR switch from outside OK..... but swapchain is reconfigured by Python hahahhah
> 
> nobody said that everything had to move into an add-on - only the logic to flip the HDR switch in the OS. Yes, that would mean that some logic might have to be duplicated in the tool (HDR capability detection) or that add-ons might have to be able to read some system information via APIs from KODI. In fact, there are already ways to get system info from within the Python API or JSON-RPC API. Those APIs could be extended to provide additional info and maybe even a method to enable/disable KODIs HDR mode if this would be needed (like it's possible to trigger the stereoscopic 3D mode from python and JSON-RPC).
> So there would be ways to do what we asked for, but you completely shut down and don't seem to be open to compromise. That's really sad to see.
> 
> @dvidebaek we do want HDR, just not the power menu switch and the logic to change the OS setting. Everything else was fine (with room for later improvement), but thexai unfortunately does not seem to be willing to find a compromise to outsource this settings toggle or communicate with us in a cooperative way.

You are Right. Cooperation is the way forward. This should not be a one man show. Have you reached out to @thexai in private? Maybe TK and thexai can reach an mutual understading??",True,True,28,21734.916666666668
xbmc_____xbmc_____17106,2020-01-26T13:29:30Z,True,xbmc_____xbmc_____17106_____578502033,"I'm unable to comment on the PR content (not a Windows dev, can't spell SDK) but I'd observe that developers and maintainers have similar but different goals. Developers like to merge a new feature early then iterate it until everything is good. Maintainers prefer the development and iteration to be done first, then a finished feature gets merged. Release Managers are always balancing the needs of those two personalities. Early in a development cycle we can be gung-ho and many times we've borked Kodi for a while as something disruptive got merged, but as the release cycle evolves to public releases we need to behave more like maintainers. 

RIght now we're already overdue for shipping K19 Alpha1, so we're definitely in maintainer mode and will want things to be fully-baked before we let code merge. Also, and this is a critical point, requiring code to be effectively feature-complete before merge is the only sensible option when a contributor attempts to blackmail us with threats of stopping work. As maintainers, why would we risk incomplete features being merged? It's always sad that people attempt this behaviour as it's counter-productive and triggers the team's sense of responsibility for the codebase. Kodi is far from perfect (way too many chefs in the kitchen over too many years for that) but we know that, and from experience we know we need to be careful with it.

Anyway.. the door is never closed to any developer having a change of heart and making the effort to submit code. HDR for Windows is definitely a desired feature, so even if @thexai is not the right person some positive progress was made here and someone else can pick up the batton. At this stage it looks pretty unlikely that anything can/will be done for K19, but it's often best to let larger features land without being forced. It looks like we have decided K19 is the last release to support Win7, so K20 will avoid some issues there. K20 is also the target for several other platforms to have HDR support squared away. Again, the door is never closed.",True,True,28,21734.916666666668
xbmc_____xbmc_____17106,2020-01-26T18:41:25Z,True,xbmc_____xbmc_____17106_____578530293,what is TK's stance on someone taking this exact PR's source code (well its GPLv2 after all) and resubmitting it with modifications at a later date?,True,True,28,21734.916666666668
xbmc_____xbmc_____17106,2020-01-27T05:23:06Z,True,xbmc_____xbmc_____17106_____578596232,"No objections as long as the original commit attribution is retained where possible/sensible in the revised submission. It's always preferable for the original contributor to finish the task, but if that's not to be - the beauty of open-source is - someone else can always continue the work.",True,True,28,21734.916666666668
pure-css/pure-site/454,2020-01-27T07:46:55Z,False,5e307f4abd35435445cbfc60,"This pull request is being automatically deployed with ZEIT Now ([learn more](https://zeit.co/docs/v2/integrations/now-for-github?utm_source=automated&utm_medium=github&utm_campaign=now_bot)).
To see the status of your deployment, click below or on the icon next to each commit.

",True,False,2,468.31666666666666
xbmc_____xbmc_____17106,2020-01-27T08:47:44Z,True,xbmc_____xbmc_____17106_____578647223,"I really don't understand how a simple button on a site that don't like makes life so complicated.

Collaboration is:

- Gets merged as is.
- Someone with skinning skills takes master branch and changes the toggle button from site/appearance.
- END

Why is need move HDR detection/toggle logic to external .exe   (trojan)  ??
Why is need a Python 3 addon to switch HDR?
Why?


I just protect myself (my job) to prevent it from ruining completely.",True,True,28,21734.916666666668
xbmc_____xbmc_____17106,2020-01-27T09:01:45Z,True,xbmc_____xbmc_____17106_____578651897,"I have also made a great effort to improve Win32 API detection/toggle code.

Even others have helped me in it.

There are no ""magic bytes"" anymore https://github.com/xbmc/xbmc/pull/17106/commits/0e0d098eec22eec62c308cea26c6c17aa70cf227


`if (ERROR_SUCCESS == GetDisplayConfigBufferSizes(QDC_ONLY_ACTIVE_PATHS, &pathCount, &modeCount))
  {
    std::vector<DISPLAYCONFIG_PATH_INFO> paths(pathCount);
    std::vector<DISPLAYCONFIG_MODE_INFO> modes(modeCount);

    if (ERROR_SUCCESS == QueryDisplayConfig(QDC_ONLY_ACTIVE_PATHS, &pathCount, paths.data(),
                                            &modeCount, modes.data(), 0))
    {
      DISPLAYCONFIG_GET_ADVANCED_COLOR_INFO getColorInfo = {};
      getColorInfo.header.type = DISPLAYCONFIG_DEVICE_INFO_GET_ADVANCED_COLOR_INFO;
      getColorInfo.header.size = sizeof(getColorInfo);

      for (const auto& mode : modes)
      {
        if (mode.infoType == DISPLAYCONFIG_MODE_INFO_TYPE_TARGET)
        {
          getColorInfo.header.adapterId.HighPart = mode.adapterId.HighPart;
          getColorInfo.header.adapterId.LowPart = mode.adapterId.LowPart;
          getColorInfo.header.id = mode.id;
          if (ERROR_SUCCESS == DisplayConfigGetDeviceInfo(&getColorInfo.header))
          {
            if (getColorInfo.advancedColorEnabled)
              advancedColorEnabled = true;

            if (getColorInfo.advancedColorSupported)
              advancedColorSupported = true;
          }
        }
      }

      std::string txStatus;

      if (!advancedColorSupported)
      {
        status = 0;
        txStatus = ""Display not HDR capable"";
      }
      else if (advancedColorSupported && !advancedColorEnabled)
      {
        status = 1;
        txStatus = ""Display HDR capable and current HDR status is disabled"";
      }
      else if (advancedColorSupported && advancedColorEnabled)
      {
        status = 2;
        txStatus = ""Display HDR capable and current HDR status is enabled"";
      }

      // Prevents logging at application start before LOGLEVEL gets configured
      if (CServiceBroker::IsServiceManagerUp())
      {
        CLog::Log(LOGDEBUG, ""{0:s} (status = {1:d})"", txStatus, status);
      }
    }
  }

  return status;


Why is this code bad?
Why?",True,True,28,21734.916666666668
xbmc_____xbmc_____17106,2020-01-27T09:09:36Z,True,xbmc_____xbmc_____17106_____578654541,"And yes, if in the end are going to do things wrong I prefer someone else to do it. 
(and stay out)",True,True,28,21734.916666666668
xbmc_____xbmc_____17106,2020-01-27T09:16:21Z,True,xbmc_____xbmc_____17106_____578657030,"Locking this now. I wanted to give thexai a chance to respond before doing so.

Further discussion here will by the looks of it not improve things and is likely detrimental.",True,True,28,21734.916666666668
xbmc_____xbmc_____17106,2020-01-27T09:22:14Z,True,xbmc_____xbmc_____17106_____578659347,"I am not a Windows dev thexai, but the only thing I personally can spot that is ""wrong"" with your code above is that it uses integers instead of ENUMs as state values. We prefer ENUMs since they improve readability of the code, especially for devs not familiar with it, and the code is ofc a little less error prone.",True,True,28,21734.916666666668
pure-css/pure-site/454,2020-01-27T15:35:14Z,False,5e30a49dbd354327f031728c,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`.

If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",True,False,2,468.31666666666666
nestjs_____typeorm_____27,2020-01-27T15:59:33Z,True,nestjs_____typeorm_____27_____578816714,"The same issue.
And I noticed a very interesting behavior of DI.
If I call console.log(service) in the constructor when the application is building I can see that the service was injected. But after when I try to call some method I get an error that the service is undefined.",True,True,25,905236.35
brianchandotcom/liferay-portal/83825,2020-01-28T02:35:29Z,False,5e32163fbd35430f28b5ae09,"CI is automatically triggering &quot;ci:test:sf&quot; and &quot;ci:test:relevant&quot; for this pull to run Source Formatter and relevant tests.

Comment &quot;ci:test&quot; to run the full PR Tester for this pull.",True,False,4,138.55
brianchandotcom/liferay-portal/83825,2020-01-28T02:38:16Z,False,5e30db7cbd3543133b7aaa43,"<html><h3>:heavy_check_mark: ci:test:sf - 1 out of 1 jobs passed in 2 minutes 33 seconds 105 ms</h3><details><summary>Click here for more details.</summary><h4>Base Branch:</h4><p>Branch Name: <a href=""https://github.com/liferay/liferay-portal/tree/master"">master</a><br/>Branch GIT ID: <a href=""https://github.com/liferay/liferay-portal/commit/b9279a99b18ccae353cd1dab63d5ebf9f729f09e"">b9279a99b18ccae353cd1dab63d5ebf9f729f09e</a></p><h4>Sender Branch:</h4><p>Branch Name: <a href=""https://github.com/michaelhashimoto/liferay-portal/tree/master-ci-979-analytics-cloud"">master-ci-979-analytics-cloud</a><br/>Branch GIT ID: <a href=""https://github.com/michaelhashimoto/liferay-portal/commit/419cb8f69c449b1f24d9b51aaffb3fb57e4ebd2a"">419cb8f69c449b1f24d9b51aaffb3fb57e4ebd2a</a></p>1 out of 1jobs PASSED<details><summary><strong>1 Successful Jobs:</strong></summary><ul><li><a href=""https://test-1-8.liferay.com/job/test-portal-source-format/2243/"">test-portal-source-format</a></li></ul></details><h5>For more details click <a href=""https://test-1-8.liferay.com/userContent/jobs/test-portal-source-format/builds/2243/jenkins-report.html"">here</a>.</h5></details></html>",True,False,4,138.55
brianchandotcom/liferay-portal/83825,2020-01-28T04:03:08Z,False,5e3231edbd354329370aaf8e,"<html><h3>:x: ci:test:stable - 8 out of 9 jobs passed</h3><h3>:x: ci:test:relevant - 15 out of 18 jobs passed in 1 hour 27 minutes 404 ms</h3><details><summary>Click here for more details.</summary><h4>Base Branch:</h4><p>Branch Name: <a href=""https://github.com/liferay/liferay-portal/tree/master"">master</a><br/>Branch GIT ID: <a href=""https://github.com/liferay/liferay-portal/commit/b9279a99b18ccae353cd1dab63d5ebf9f729f09e"">b9279a99b18ccae353cd1dab63d5ebf9f729f09e</a></p><h4>Copied in Private Modules Branch:</h4><p>Branch Name: <a href=""https://github.com/liferay/liferay-portal-ee/tree/master-private"">master-private</a><br/>Branch GIT ID: <a href=""https://github.com/liferay/liferay-portal-ee/commit/675fd6f1716b42f77cc332cad8893e473d800091"">675fd6f1716b42f77cc332cad8893e473d800091</a></p><details><summary><strong>ci:test:stable - 8 out of 9 jobs PASSED</strong></summary><div><h4>1 Failed Jobs:</h4><ul><li><a href=""https://test-1-23.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/223401/""><strike><strong>test-portal-acceptance-pullrequest-batch(master)/functional-upgrade-tomcat90-mysql57-jdk8/3</strong></strike></a></li></ul></div><details><summary><strong>8 Successful Jobs:</strong></summary><ul><li><a href=""https://test-1-8.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/315917/"">test-portal-acceptance-pullrequest-batch(master)/functional-smoke-tomcat90-mysql57-jdk8/0</a></li><li><a href=""https://test-1-18.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/109673/"">test-portal-acceptance-pullrequest-batch(master)/functional-upgrade-tomcat90-mysql57-jdk8/0</a></li><li><a href=""https://test-1-23.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/223400/"">test-portal-acceptance-pullrequest-batch(master)/functional-upgrade-tomcat90-mysql57-jdk8/1</a></li><li><a href=""https://test-1-3.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/375373/"">test-portal-acceptance-pullrequest-batch(master)/functional-upgrade-tomcat90-mysql57-jdk8/2</a></li><li><a href=""https://test-1-8.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/315919/"">test-portal-acceptance-pullrequest-batch(master)/functional-upgrade-tomcat90-mysql57-jdk8/4</a></li><li><a href=""https://test-1-3.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/375374/"">test-portal-acceptance-pullrequest-batch(master)/modules-integration-mysql57-jdk8</a></li><li><a href=""https://test-1-8.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/315915/"">test-portal-acceptance-pullrequest-batch(master)/modules-unit-jdk8</a></li><li><a href=""https://test-1-8.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/315918/"">test-portal-acceptance-pullrequest-batch(master)/unit-jdk8</a></li></ul></details></details><details><summary><strong>ci:test:relevant - 15 out of 18 jobs PASSED</strong></summary><div><h4>3 Failed Jobs:</h4><ul><li><a href=""https://test-1-14.liferay.com/job/test-portal-acceptance-pullrequest(master)/5413/""><strike><strong>test-portal-acceptance-pullrequest(master)</strong></strike></a></li><li><a href=""https://test-1-23.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/223401/""><strike><strong>test-portal-acceptance-pullrequest-batch(master)/functional-upgrade-tomcat90-mysql57-jdk8/3</strong></strike></a></li><li><a href=""https://test-1-18.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/109671/""><strike><strong>test-portal-acceptance-pullrequest-batch(master)/js-unit-jdk8</strong></strike></a></li></ul></div><details><summary><strong>15 Successful Jobs:</strong></summary><ul><li><a href=""https://test-1-22.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/231980/"">test-portal-acceptance-pullrequest-batch(master)/central-requirements-jdk8</a></li><li><a href=""https://test-1-3.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/375372/"">test-portal-acceptance-pullrequest-batch(master)/functional-smoke-tomcat90-mysql57-jdk11_open/0</a></li><li><a href=""https://test-1-8.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/315917/"">test-portal-acceptance-pullrequest-batch(master)/functional-smoke-tomcat90-mysql57-jdk8/0</a></li><li><a href=""https://test-1-18.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/109673/"">test-portal-acceptance-pullrequest-batch(master)/functional-upgrade-tomcat90-mysql57-jdk8/0</a></li><li><a href=""https://test-1-23.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/223400/"">test-portal-acceptance-pullrequest-batch(master)/functional-upgrade-tomcat90-mysql57-jdk8/1</a></li><li><a href=""https://test-1-3.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/375373/"">test-portal-acceptance-pullrequest-batch(master)/functional-upgrade-tomcat90-mysql57-jdk8/2</a></li><li><a href=""https://test-1-8.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/315919/"">test-portal-acceptance-pullrequest-batch(master)/functional-upgrade-tomcat90-mysql57-jdk8/4</a></li><li><a href=""https://test-1-18.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/109672/"">test-portal-acceptance-pullrequest-batch(master)/lpkg-base-jdk8</a></li><li><a href=""https://test-1-18.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/109670/"">test-portal-acceptance-pullrequest-batch(master)/lpkg-controller-jdk8</a></li><li><a href=""https://test-1-3.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/375374/"">test-portal-acceptance-pullrequest-batch(master)/modules-integration-mysql57-jdk8</a></li><li><a href=""https://test-1-8.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/315915/"">test-portal-acceptance-pullrequest-batch(master)/modules-unit-jdk8</a></li><li><a href=""https://test-1-8.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/315916/"">test-portal-acceptance-pullrequest-batch(master)/modules-unit-project-templates-jdk8</a></li><li><a href=""https://test-1-6.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/347860/"">test-portal-acceptance-pullrequest-batch(master)/pmd-jdk8</a></li><li><a href=""https://test-1-22.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/231981/"">test-portal-acceptance-pullrequest-batch(master)/semantic-versioning-jdk8</a></li><li><a href=""https://test-1-8.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/315918/"">test-portal-acceptance-pullrequest-batch(master)/unit-jdk8</a></li></ul></details></details><h5>For more details click <a href=""https://test-1-14.liferay.com/userContent/jobs/test-portal-acceptance-pullrequest(master)/builds/5413/jenkins-report.html"">here</a>.</h5><hr/><h4>Failures unique to this pull:</h4><ol><li><div><h5><a href=""https://test-1-23.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/223401/"">test-portal-acceptance-pullrequest-batch(master)/functional-upgrade-tomcat90-mysql57-jdk8/3</a></h5><div><h6>Job Results:</h6><p>0 Tests Passed.<br/>1 Test Failed.</p></div><ol><li><div><a href=""https://test-1-23.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/AXIS_VARIABLE=0,label_exp=!master/223401//consoleText"">AXIS_VARIABLE=0,label_exp=!master #223401</a><pre><code>     [echo] run.batch.test.action.start.timestamp: 01-27-2020 19:36:55:980 PST
     [echo] 
     [echo] ##
     [echo] ## sql/sql.cloud-10-0-10-169.lax.liferay.com.properties
     [echo] ##
     [echo] 
     [echo] db2.executable=db2
     [echo] mariadb.executable=mariadb
     [echo] mysql.arg.line=-u root
     [echo] oracle.admin.password=********
     [echo] sqlserver.executable=sqlcmd
     [echo] sybase.executable=/opt/sybase/OCS-16_0/bin/isql
     [echo] mysql.executable=mysql57
     [echo] Using Docker for mysql.
     [exec] df6c99d51206
     [exec] Error response from daemon: You cannot remove a running container df6c99d512062715dd99cf6e87fc1fcde526d6468e418c28190f0f9dd6046759. Stop the container before attempting removal or force remove
     [exec] Result: 1
   [delete] Deleting: /opt/dev/projects/github/liferay-portal/docker_stop.sh
     [exec] docker: Error response from daemon: Conflict. The container name ""/cloud-10-0-10-169.lax.liferay.com_mysql"" is already in use by container ""df6c99d512062715dd99cf6e87fc1fcde526d6468e418c28190f0f9dd6046759"". You have to remove (or rename) that container to be able to reuse that name.
     [exec] See 'docker run --help'.
     [exec] Result: 125
   [delete] Deleting: /opt/dev/projects/github/liferay-portal/docker_start.sh
     [exec] cannot exec in a stopped state: unknown
[stopwatch] [run.batch.test.action: 10.529 sec]
     [echo] The following error occurred while executing this line:
     [echo] /opt/dev/projects/github/liferay-portal/build-test-batch.xml:361: The following error occurred while executing this line:
     [echo] /opt/dev/projects/github/liferay-portal/build-test-batch.xml:375: The following error occurred while executing this line:
     [echo] /opt/dev/projects/github/liferay-portal/build-test.xml:4071: The following error occurred while executing this line:
     [echo] /opt/dev/projects/github/liferay-portal/build-common.xml:525: The following error occurred while executing this line:
     [echo] /opt/dev/projects/github/liferay-portal/build-common.xml:644: exec returned: 126
      [get] Getting: http://test-1-23/job/test-portal-acceptance-pullrequest-batch(master)/AXIS_VARIABLE=0,label_exp=!master/223401//consoleText
      [get] To: /opt/dev/projects/github/liferay-portal/20200127193706509.txt
   [delete] Deleting: /opt/dev/projects/github/liferay-portal/20200127193706509.txt
   [delete] Deleting: /opt/dev/projects/github/liferay-portal/null577782038.properties</code></pre></div></li></ol></div></li></ol><hr/><details><summary><strong>Failures in common with <a href=""https://test-1-1.liferay.com/job/test-portal-acceptance-upstream(master)"">acceptance upstream results</a> at b072f5df5544a28677824835b490ce8a867bf133:</strong></summary><ol><li><div><h5><a href=""https://test-1-18.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/109671/"">test-portal-acceptance-pullrequest-batch(master)/js-unit-jdk8</a></h5><div><h6>Job Results:</h6><p>0 Tests Passed.<br/>1 Test Failed.</p></div><ol><li><div><a href=""https://test-1-18.liferay.com/job/test-portal-acceptance-pullrequest-batch(master)/AXIS_VARIABLE=0,label_exp=!master/109671//consoleText"">AXIS_VARIABLE=0,label_exp=!master #109671</a><pre><code>     [exec] * What went wrong:
     [exec] Execution failed for task ':apps:app-builder:app-builder-web:packageRunTest'.
     [exec] &gt; java.io.IOException: Process '[/opt/dev/projects/github/liferay-portal/build/node/bin/node, /opt/dev/projects/github/liferay-portal/modules/yarn-1.13.0.js, --production, false, --registry, http://mirrors.lax.liferay.com:4873, run, test]' finished with non-zero exit value 1
     [exec] 
     [exec] * Try:
     [exec] Run with --info or --debug option to get more log output. Run with --scan to get full insights.
     [exec] 
     [exec] * Exception is:
     [exec] org.gradle.api.tasks.TaskExecutionException: Execution failed for task ':apps:app-builder:app-builder-web:packageRunTest'.
     [exec] 	at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter$3.accept(ExecuteActionsTaskExecuter.java:166)
     [exec] 	at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter$3.accept(ExecuteActionsTaskExecuter.java:163)
     [exec] 	at org.gradle.internal.Try$Failure.ifSuccessfulOrElse(Try.java:191)
     [exec] 	at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:156)
     [exec] 	at org.gradle.api.internal.tasks.execution.ValidatingTaskExecuter.execute(ValidatingTaskExecuter.java:62)
     [exec] 	at org.gradle.api.internal.tasks.execution.SkipEmptySourceFilesTaskExecuter.execute(SkipEmptySourceFilesTaskExecuter.java:108)
     [exec] 	at org.gradle.api.internal.tasks.execution.ResolveBeforeExecutionOutputsTaskExecuter.execute(ResolveBeforeExecutionOutputsTaskExecuter.java:67)
     [exec] 	at org.gradle.api.internal.tasks.execution.ResolveAfterPreviousExecutionStateTaskExecuter.execute(ResolveAfterPreviousExecutionStateTaskExecuter.java:46)
     [exec] 	at org.gradle.api.internal.tasks.execution.CleanupStaleOutputsExecuter.execute(CleanupStaleOutputsExecuter.java:94)
     [exec] 	at org.gradle.api.internal.tasks.execution.FinalizePropertiesTaskExecuter.execute(FinalizePropertiesTaskExecuter.java:46)
     [exec] 	at org.gradle.api.internal.tasks.execution.ResolveTaskExecutionModeExecuter.execute(ResolveTaskExecutionModeExecuter.java:95)
     [exec] 	at org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute(SkipTaskWithNoActionsExecuter.java:57)
     [exec] 	at org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskExecuter.execute(SkipOnlyIfTaskExecuter.java:56)</code></pre></div></li></ol></div></li></ol></details></details></html>",True,False,4,138.55
brianchandotcom/liferay-portal/83825,2020-01-28T04:54:02Z,False,5e3113d5bd3543053d550ddd,"Merged. Thank you.
View total diff: https://github.com/brianchandotcom/liferay-portal/compare/94afb0d7b5...d198ab0109",True,False,4,138.55
bruceadams/query-rds-data/37,2020-01-28T10:23:22Z,False,5e3029cbbd354301fad5e6c0,Superseded by #39.,True,False,2,0.0
bruceadams/query-rds-data/37,2020-01-28T10:23:22Z,False,5e3029cbbd354301fad5e6bf,Superseded by #39.,True,False,2,0.0
iNavFlight_____inav_____4798,2020-01-30T22:29:31Z,True,iNavFlight_____inav_____4798_____580492455,"Fyi, Cylindrical geofence implementation in Arducopter:
https://ardupilot.org/copter/docs/common-ac2_simple_geofence.html",True,True,12,344352.6666666667
wordpress-mobile/WordPress-Android/11224,2020-02-03T11:18:01Z,False,5e3ae028bd354331e7f7c26e,"<!--- Installable Build Comment --->
You can test the changes on this Pull Request by downloading the APK [here](https://35644-9306568-gh.circle-artifacts.com/0/Artifacts/WordPress-pr-11224-build-35644.apk).",True,False,3,4649.033333333334
rack_____rack_____1272,2020-02-05T07:15:11Z,True,rack_____rack_____1272_____582273156,"There has been some great discussion here. Thanks everyone for their effort and passion. I am going to close this issue, because I don't think we reached a consensus.

That being said, further discussion is required, backed by concrete implementations. Specifically, I think more emphasis should be placed on HTTP/2 (and HTTP/3) and union of the semantic model when HTTP/1 is also included in the mix.

We welcome proposals for a better stream model for Rack 3.0 and we are currently considering how to make `rack.hijack` a first class citizen: https://github.com/rack/rack/issues/1550",True,True,128,932194.1166666667
nestjs_____typeorm_____27,2020-02-05T22:24:55Z,True,nestjs_____typeorm_____27_____582642980,"I'm having issues injecting services into the Artwork `EventSubscriber`. 

Here is my module, where I import and configure a MYSQL connection and setup the subscribers.

```ts
@Module({
  imports: [
    ConfigModule.forRoot({
      isGlobal: true
    }),
    ArtworksModule,
    TypeOrmModule.forRootAsync({
      imports: [ConfigModule],
      inject: [ConfigService],
      useFactory: async (configService: ConfigService) => {
        return <MysqlConnectionOptions>{
          type: ""mysql"",
          host: configService.get(""MYSQL_HOST""),
          port: configService.get(""MYSQL_PORT""),
          username: configService.get(""MYSQL_USERNAME""),
          password: configService.get(""MYSQL_PASSWORD""),
          database: configService.get(""MYSQL_DB""),
          entities: [Artwork],
          subscribers: [ArtworkSubscriber],
          synchronize: true
        };
      }
    })
  ],
  controllers: [AppController],
  providers: [AppService]
})
export class AppModule {}
```

Here the EventSubscriber that I created however I'm not able to inject the `ConfigService` into it. 

```ts
@Injectable()
@EventSubscriber()
export class ArtworkSubscriber implements EntitySubscriberInterface<Artwork> {

  constructor(
    @Inject(ConfigService)
    private readonly configService: ConfigService
  ) {
    console.log(configService) // undefined
  }

  listenTo() {
    return Artwork;
  }

  async afterInsert(event: InsertEvent<Artwork>) {
    console.log(this.configService.get('NODE_ENV')); // undefined
  }
}
```",True,True,25,905236.35
openstreetmap_____iD_____7162,2020-02-06T07:29:50Z,True,openstreetmap_____iD_____7162_____582773285,"Dear @bhousel, please avoid personal attacks. It's against [Code of Conduct](https://github.com/openstreetmap/iD/blob/2.x/CODE_OF_CONDUCT.md). Thanks.",True,True,3,63351.65
nestjs_____typeorm_____27,2020-02-06T07:56:08Z,True,nestjs_____typeorm_____27_____582780800,"@mogwai (and anyone else facing this issue), please, use this approach https://github.com/nestjs/typeorm/pull/27#issuecomment-431296683",True,True,25,905236.35
wordpress-mobile/WordPress-Android/11224,2020-02-06T11:10:17Z,False,5e3c3ce4bd354332d1e8b02f,"Tested 4a1e261:

Legend: 
🤷‍♂️ : not exposed to the apps yet
⏳ : in progress
❌ : failed
✅ : passes
⚠️ : passes but there are notes

⏳ Smoke test
❌ [gb-mobile-1686](http://github.com/wordpress-mobile/gutenberg-mobile/pull/1686) Adding retry feature to mobile apiFetch handler. **The image block remains empty even after resuming connectivity**
✅ [gb-mobile-1817](http://github.com/wordpress-mobile/gutenberg-mobile/pull/1817) External media links from another app will not work if the block editor is enabled
✅ [gb-mobile-1835](http://github.com/wordpress-mobile/gutenberg-mobile/pull/1835) Make inserter to show options on long-press to add before/after
⏳ [gb-mobile-1450](http://github.com/wordpress-mobile/gutenberg-mobile/pull/1450) Update React Native to 0.61.5
✅ [gb-mobile-1799](http://github.com/wordpress-mobile/gutenberg-mobile/pull/1799) Adjust to Gutenberg master to fix issues with icons, the primitives package and a new dependency for data
⏳ [gb-mobile-1786](http://github.com/wordpress-mobile/gutenberg-mobile/pull/1786) Hardcode Android RN version in bridge and aztec
⏳ [gb-mobile-1856](https://github.com/wordpress-mobile/gutenberg-mobile/pull/1856) Fix gallery size labels

---

🤷‍♂️ [gb-mobile-1830](http://github.com/wordpress-mobile/gutenberg-mobile/pull/1830) (DEV only) Fix gallery upload sync
🤷‍♂️ [gb-mobile-1825](http://github.com/wordpress-mobile/gutenberg-mobile/pull/1825) (DEV only) Fix: fix appender style
🤷‍♂️ [gb-mobile-1776](http://github.com/wordpress-mobile/gutenberg-mobile/pull/1776) (DEV only) Allow configuration of selection/caret color on Aztec view
🤷‍♂️ [gb-mobile-1785](http://github.com/wordpress-mobile/gutenberg-mobile/pull/1785) (DEV only) Style improvements for template previews
🤷‍♂️ [gb-mobile-1762](http://github.com/wordpress-mobile/gutenberg-mobile/pull/1762) (DEV only) Use patch-package to fix max-depth issue in react-native (temporary)
🤷‍♂️ [gb_mobile_1821](http://github.com/wordpress-mobile/gutenberg-mobile/pull/1821) (DEV only) Fix: AppenderButton and Separator in InnerBlock

---

~⏳ [gb-mobile-1827](http://github.com/wordpress-mobile/gutenberg-mobile/pull/1827) Fixes the Image's media button not displaying the Picker~ **available only on WPiOS for now**
~⏳ [gb-mobile-1841](http://github.com/wordpress-mobile/gutenberg-mobile/pull/1841) Show the media edit icon only if the block is selected~ **available only on WPiOS for now**
~⏳ [gb-mobile-1847](http://github.com/wordpress-mobile/gutenberg-mobile/pull/1847) Remove DEV flag from Media Editor button~ **available only on WPiOS for now**
~⏳ [gb-mobile-1872](http://github.com/wordpress-mobile/gutenberg-mobile/pull/1782) Add media edit icon to image block~ **available only on WPiOS for now**
",True,False,3,4649.033333333334
openstreetmap_____iD_____7162,2020-02-06T12:57:21Z,True,openstreetmap_____iD_____7162_____582893781,"> Dear @bhousel, please avoid personal attacks. It's against [Code of Conduct](https://github.com/openstreetmap/iD/blob/2.x/CODE_OF_CONDUCT.md). Thanks.

@qeef If you really feel like I've made a personal attack and want to open a report, please email the OSM-US CoC team - [details here](https://www.openstreetmap.us/2019/12/osmus-code-of-conduct-committee).
",True,True,3,63351.65
wordpress-mobile/WordPress-Android/11224,2020-02-06T16:47:03Z,False,5e3ceb1ebd3543225ac46db5,"Issues found so far:

1. Typing ""Enter"" to create a new paragraph block causes the blocks list to jump to the top and scroll down to the new block.
2. Merging blocks by hitting ""backspace"" doesn't work if you first edit one or more chars from the start of the block.
3. Quote block ""jumping/quirk"" trying to add a newline. This seems to already exist in the production app as well.
4. Keyboard doesn't hide when hitting the ""close keyboard"" button on the toolbar while being in the shortcode block and the Image _caption_ (same on Code block but that block is behind ""DEV"" flag).",True,False,3,4649.033333333334
CelestiaProject_____Celestia_____600,2020-02-07T22:23:46Z,True,CelestiaProject_____Celestia_____600_____372626509,"Closing #554

Code of conduct and issue templates are standard files. CONTRIBUTING.md placeholder copied from README.md. No pull request template yet.",True,True,21,5755.3
CelestiaProject_____Celestia_____600,2020-02-10T21:33:11Z,True,CelestiaProject_____Celestia_____600_____377328982,"please remove useless browser and add fields for ui (qt5, gtk2, glut, native win, native macos)",True,False,21,5755.3
CelestiaProject_____Celestia_____600,2020-02-10T21:34:12Z,True,CelestiaProject_____Celestia_____600_____377329507,"please provide values which correspond celestia, e.g. gnu/linux, win, macos, etc",True,False,21,5755.3
CelestiaProject_____Celestia_____600,2020-02-10T21:34:37Z,True,CelestiaProject_____Celestia_____600_____377329724,"use real version here: 1.6.1, 1.6.2, 1.7",True,False,21,5755.3
CelestiaProject_____Celestia_____600,2020-02-10T21:34:47Z,True,CelestiaProject_____Celestia_____600_____377329797,please remove this block,True,False,21,5755.3
CelestiaProject_____Celestia_____600,2020-02-10T21:35:15Z,True,CelestiaProject_____Celestia_____600_____377330072,this file should be removed,True,False,21,5755.3
CelestiaProject_____Celestia_____600,2020-02-10T22:04:40Z,True,CelestiaProject_____Celestia_____600_____377344400,Why? It's a standard file that's in many repositories (actually I copied it from the Archive Repository).,True,False,21,5755.3
CelestiaProject_____Celestia_____600,2020-02-10T23:06:53Z,True,CelestiaProject_____Celestia_____600_____377371063,done,True,False,21,5755.3
CelestiaProject_____Celestia_____600,2020-02-10T23:06:59Z,True,CelestiaProject_____Celestia_____600_____377371089,done,True,False,21,5755.3
CelestiaProject_____Celestia_____600,2020-02-10T23:07:05Z,True,CelestiaProject_____Celestia_____600_____377371118,done,True,False,21,5755.3
CelestiaProject_____Celestia_____600,2020-02-10T23:07:13Z,True,CelestiaProject_____Celestia_____600_____377371156,done,True,False,21,5755.3
CelestiaProject_____Celestia_____600,2020-02-10T23:09:42Z,True,CelestiaProject_____Celestia_____600_____584403294,I fixed the bug report template and also added a basic pull request template.,True,True,21,5755.3
CelestiaProject_____Celestia_____600,2020-02-11T03:17:35Z,True,CelestiaProject_____Celestia_____600_____377431176,at ...?,True,False,21,5755.3
CelestiaProject_____Celestia_____600,2020-02-11T03:19:03Z,True,CelestiaProject_____Celestia_____600_____377431445,should be macOS,True,False,21,5755.3
CelestiaProject_____Celestia_____600,2020-02-11T17:51:42Z,True,CelestiaProject_____Celestia_____600_____377797908,Because the idea of CoC is stupid. I don't understand the fashion of the recent years to add it.,True,True,21,5755.3
CelestiaProject_____Celestia_____600,2020-02-11T17:52:02Z,True,CelestiaProject_____Celestia_____600_____377798086,"And GNU/Linux, not just Linux",True,False,21,5755.3
CelestiaProject_____Celestia_____600,2020-02-11T17:52:42Z,True,CelestiaProject_____Celestia_____600_____377798422,"Qt, not QT. QT is apple's video codec, Quick Time",True,False,21,5755.3
CelestiaProject_____Celestia_____600,2020-02-11T22:18:31Z,True,CelestiaProject_____Celestia_____600_____377933478,"Fine, removed.",True,False,21,5755.3
CelestiaProject_____Celestia_____600,2020-02-11T22:18:43Z,True,CelestiaProject_____Celestia_____600_____377933584,File has been removed.,True,False,21,5755.3
CelestiaProject_____Celestia_____600,2020-02-11T22:18:56Z,True,CelestiaProject_____Celestia_____600_____377933669,fixed,True,False,21,5755.3
CelestiaProject_____Celestia_____600,2020-02-11T22:19:04Z,True,CelestiaProject_____Celestia_____600_____377933735,fixed,True,False,21,5755.3
fartts/fartts/701,2020-02-23T17:50:42Z,False,5e535efdbd354332d1f86ea5,":tada: This PR is included in version 1.25.0 :tada:

The release is available on [GitHub release](https://github.com/fartts/fartts/releases/tag/v1.25.0)

Your **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",True,False,1,0.0
jparams/object-builder/22,2020-02-27T06:55:33Z,False,5e5c9ce9bd35432d2370f3cc,Superseded by #23.,True,False,1,0.0
esp8266_____Arduino_____7121,2020-02-28T00:39:52Z,True,esp8266_____Arduino_____7121_____572447828,"fixes https://github.com/esp8266/Arduino/commit/2c435b1f427dfdc1567bd52ca6d966d5640d6bb9#commitcomment-37529995

Sorry for that @progtronix",True,True,22,5379.366666666667
esp8266_____Arduino_____7121,2020-02-28T00:39:52Z,True,esp8266_____Arduino_____7121_____381143531,"fixes https://github.com/esp8266/Arduino/commit/2c435b1f427dfdc1567bd52ca6d966d5640d6bb9#commitcomment-37529995

Sorry for that @progtronix",True,True,22,5379.366666666667
stemlaur/anki/73,2020-02-28T07:30:24Z,False,5e5f4bb7bd3543229fdcd3db,Superseded by #75.,True,False,2,0.0
stemlaur/anki/73,2020-02-28T07:30:24Z,False,5e5f4bb6bd35433771759876,Superseded by #75.,True,False,2,0.0
php_____php-src_____4934,2020-02-28T07:51:54Z,True,php_____php-src_____4934_____592393568,"Fractions are part of the original RFC3339, and are optional. Why does there need to be a separate constant for this?

Also, see [bug report][bug-79305].

[bug-79305]: https://bugs.php.net/bug.php?id=79305",True,True,11,124.9
php_____php-src_____4934,2020-02-28T08:00:35Z,True,php_____php-src_____4934_____592396357,"@XedinUnknown because the new constants will provide the greatest datetime precision that's possible with ISO 8601. The current ones lack fractions. The new constant's value is one that's used regularly in, for example, api responses with datetime values.",True,True,11,124.9
php_____php-src_____4934,2020-02-28T08:03:41Z,True,php_____php-src_____4934_____592397349,@XedinUnknown Because otherwise it will be a BC break.,True,True,11,124.9
php_____php-src_____4934,2020-02-28T08:42:39Z,True,php_____php-src_____4934_____592410624,What's breaking about fixing support broken support for a format?,True,True,11,124.9
php_____php-src_____4934,2020-02-28T09:33:25Z,True,php_____php-src_____4934_____592429720,@XedinUnknown an API may extract the result produced by your constant with some RegExp: `^\d+-\d+-\d+ \d+:\d+:\d+$` add the fraction and this extraction suddenly stop working. That's why it's safer to require the user to explicitly add the fraction by selecting the new constant.,True,True,11,124.9
php_____php-src_____4934,2020-02-28T09:37:31Z,True,php_____php-src_____4934_____592431315,"You won't believe it but people are using those constants for some time now and wrote code that expects the output to be of a certain format. By modifying the existing constant this expectation is broken and therefore the code is not working anymore. So changing that constant is breaking backward compatibility.

That the current constant is not doing what you expect might be due to the fact that you expect something from the constant that is not even described by the standard. The ISO standard says that you *can* add fractions, but you do not *have* to add them. So the current constant does exactly that. And if you want to use fractions you can use the new constant.  ",True,True,11,124.9
php_____php-src_____4934,2020-02-28T09:46:36Z,True,php_____php-src_____4934_____592434382,"The fact that you _can_ add fractions means that the standard supports fractions. And PHP claims to support the standard. In practice, however, an RFC3339-compliant timestamp that contains a fraction (i.e. is standards-compliant) cannot be parsed by PHP using the `DATE_ATOM` format, which means that support for it is broken. Fixing something that is broken does not constitute a BC break, because the specification does not change. If somebody has depended on _implementation_, instead of the specification, then they had made a mistake, and it is up to them to fix it. RFC3339 supports optional fraction, and if I made an expression that does not cater for that, then my expression does not support the RFC3339 standard. Same for the PHP `DateTime` implementation: if it does not cater for the optional fraction, then it does not support the standard. Adding support for the standard would simply fix that. It is not a BC break.",True,True,11,124.9
php_____php-src_____4934,2020-02-28T09:51:11Z,True,php_____php-src_____4934_____592436434,"It means your implementation is broken if you relly on the DATE_ATOM constant.  Passing an ATOM-Timestamp with fractions into `new DateTimeImmutable` works fairly well so the PHP-Implementation is not broken. But as a Constant can only hold **one** format and not contain an *either/or* along with the fact that PHP, until a certain version didn't support fractions at all, leads to the fact that we have a fraction-less Constant and (hopefully soon) a constant that contains fractions",True,True,11,124.9
php_____php-src_____4934,2020-02-28T09:53:38Z,True,php_____php-src_____4934_____592437443,@XedinUnknown the fact it fixes a bug (which I disagree anyway) does not mean it's not a breaking change. Applications that properly work relying the current constant format will stop working on update. That's an obvious BC.,True,True,11,124.9
php_____php-src_____4934,2020-02-28T09:54:43Z,True,php_____php-src_____4934_____592437901,"> Passing an ATOM-Timestamp with fractions into new DateTimeImmutable works fairly well so the PHP-Implementation is not broken

It does not, as I demonstrated in the bug report.

> But as a Constant can only hold one format and not contain an either/or

An RFC3339 timestamp with a fraction and without a fraction is _the same format_: the RFC3339 format.",True,True,11,124.9
php_____php-src_____4934,2020-02-28T09:56:48Z,True,php_____php-src_____4934_____592438669,"Thanks everyone, further input will not be needed at this point in time. Please let @derickr review this change.",True,True,11,124.9
ivysaur92/rails_bank_summer_19/3,2020-02-29T02:20:53Z,False,5e61d8d6bd35431d491fb7ab,Superseded by #6.,True,False,1,0.0
jacorea/Recipes/1,2020-02-29T06:04:18Z,False,5e662235bd354325d6a4bf3d,Superseded by #3.,True,False,2,0.0
jacorea/Recipes/1,2020-02-29T06:04:18Z,False,5e662235bd354325d6a4bf3c,Superseded by #3.,True,False,2,0.0
esp8266_____Arduino_____7121,2020-03-01T11:22:31Z,True,esp8266_____Arduino_____7121_____593085731,"@devyte @d-a-v Please revert this commit ASAP, waveform testing has unstable timings (servo jitters audibly) and WDT hits periodically.",True,True,22,5379.366666666667
esp8266_____Arduino_____7121,2020-03-01T11:47:03Z,True,esp8266_____Arduino_____7121_____593087906,"@dok-net This commit is only the recompilation of lwIP precompiled libraries.
You can first [recompile them yourself](https://github.com/esp8266/Arduino/tree/master/tools/sdk/lwip2) and check whether timings are modified.",True,True,22,5379.366666666667
esp8266_____Arduino_____7121,2020-03-01T13:11:04Z,True,esp8266_____Arduino_____7121_____593095473,"Why are you telling me this? The simple fact of the matter is that 0554d39c6c054ebfe8ee7fe45fc838368519a827 works just fine, but c61b70de865531f62218541fa0f32715c153a449 doesn't. The binary diff between these commits is huge. I can't fix and verify everything, but I can manage to point out if something breaks, what's broken it. Forget about the timings in my waveform PR, but WDT'ing is serious.",True,True,22,5379.366666666667
esp8266_____Arduino_____7121,2020-03-01T15:07:33Z,True,esp8266_____Arduino_____7121_____593107495,"By the words I'm telling you, it is meant that
- only lwIP binaries are recompiled,
- there is no source file change,
- if you don't start network in your test,
  these binaries are not used,
- if there is a side effect on pwm or core interrupts, or anything not related with network with this commit, I have no idea why right now,
- It is a binary commit, resulting from lwIP's `make install`.
  Simply reverting such commit without understanding will bring the issue back on next lwIP's update.

Please try the `make install` yourself from https://github.com/esp8266/Arduino/commit/0554d39c6c054ebfe8ee7fe45fc838368519a827 and report if this is changing anything
  - if it's still working, then I'll have to remake them from a clean install, maybe,
  - if it does not work anymore but working again by checking out the binary files, then I'd have to be able to reproduce the issue and I'd need your help for that.",True,True,22,5379.366666666667
esp8266_____Arduino_____7121,2020-03-01T18:09:31Z,True,esp8266_____Arduino_____7121_____593126602,"I can't just make install, it's not working on my system. I can only repeat, I've now retested, the commit with ""blob"" doesn't WDT reset, but master HEAD as of now resets every few seconds.
",True,True,22,5379.366666666667
esp8266_____Arduino_____7121,2020-03-01T19:48:53Z,True,esp8266_____Arduino_____7121_____593137322,"Here's an MCVE. Download to target and hit the webserver at least once, it starts WDT resetting:
```c++
#include <ESP8266WebServer.h>
#include <core_esp8266_waveform.h>
#include <ArduinoOTA.h>
#include <Servo.h>

//const char* ssid = """";
//const char* password = """";

// Create an instance of the server
// specify the port to listen on as an argument
ESP8266WebServer server(80);

Servo servo;

// 25kHz cycle == 40µs cycle time
const uint32_t TCYCLE = 40;

uint32_t fanspeed0 = 0;
uint32_t fanspeed1 = 0;

bool ota_started = false;

void StartOTAIfRequired()
{
    if (ota_started)
        return;
    // Port defaults to 8266
    // ArduinoOTA.setPort(8266);
    // Hostname defaults to esp8266-[ChipID]
    //if (ArduinoOTA.getHostname() && ArduinoOTA.getHostname().length())

    // No authentication by default
    ArduinoOTA.setPassword(""abc"");
    ArduinoOTA.onStart([]() {
        Serial.println(""OTA Start"");
        });
    ArduinoOTA.onEnd([]() {
        Serial.println(""\nOTA End"");
        });
    ArduinoOTA.onProgress([](unsigned int progress, unsigned int total) {
        Serial.printf(""Progress: %u%%\r\n"", (progress / (total / 100)));
        });
    ArduinoOTA.onError([](ota_error_t error) {
        Serial.printf(""Error[%u]: "", error);
        if (error == OTA_AUTH_ERROR) Serial.println(""Auth Failed"");
        else if (error == OTA_BEGIN_ERROR) Serial.println(""Begin Failed"");
        else if (error == OTA_CONNECT_ERROR) Serial.println(""Connect Failed"");
        else if (error == OTA_RECEIVE_ERROR) Serial.println(""Receive Failed"");
        else if (error == OTA_END_ERROR) Serial.println(""End Failed"");
        });
    ArduinoOTA.begin();
    ota_started = true;
    delay(500);
}

void HandleOTA()
{
    StartOTAIfRequired();
    ArduinoOTA.handle();
}

// The setup() function runs once each time the micro-controller starts
void setup()
{
    Serial.begin(115200);

    WiFi.mode(WIFI_STA);
    WiFi.begin();
    Serial.println("""");

    // Wait for connection
    while (WiFi.status() != WL_CONNECTED) {
        delay(500);
        Serial.print(""."");
    }

    Serial.println("""");
    Serial.print(""IP address: "");
    Serial.println(WiFi.localIP());

    StartOTAIfRequired();

    pinMode(D3, OUTPUT_OPEN_DRAIN);
    digitalWrite(D3, HIGH);
    pinMode(D7, OUTPUT_OPEN_DRAIN);
    digitalWrite(D7, HIGH);

    servo.attach(D8, 1000, 2000);

    uint32_t duty = 1 + (TCYCLE - 2) * fanspeed0 / 100;
    startWaveform(D3, duty, TCYCLE - duty, 0);
    duty = 1 + (TCYCLE - 2) * fanspeed1 / 100;
    startWaveform(D7, duty, TCYCLE - duty, 0);
    servo.write(90);

    server.on(""/"", []() {
        String content = """";
        content += ""<html><body>\
            Hello</body></html>"";
        server.send(200, ""text/html"", content.c_str());
        delay(100);
        });

    server.begin();
    Serial.println(""HTTP server started"");

    tone(D5, 440, 500);
}

// Add the main program code into the continuous loop() function
void loop()
{
    HandleOTA();
    // Listen for http requests
    server.handleClient();
}
````",True,True,22,5379.366666666667
esp8266_____Arduino_____7121,2020-03-01T20:20:24Z,True,esp8266_____Arduino_____7121_____593140465,"Note that I had to `WiFi.begin(STASSID, STAPSK)` for wifi to connect, then I got this:
```shell
$ while true; do curl 10.0.1.101; echo;echo ""another request:""; done
<html><body>            Hello</body></html>
another request:
<html><body>            Hello</body></html>
another request:
<html><body>            Hello</body></html>
another request:
<html><body>            Hello</body></html>
another request:
<html><body>            Hello</body></html>
another request:
<html><body>            Hello</body></html>
another request:
<html><body>            Hello</body></html>
another request:
<html><body>            Hello</body></html>
another request:
<html><body>            Hello</body></html>
another request:
<html><body>            Hello</body></html>
another request:
<html><body>            Hello</body></html>
another request:
<html><body>            Hello</body></html>
another request:
<html><body>            Hello</body></html>
another request:
<html><body>            Hello</body></html>
another request:
<html><body>            Hello</body></html>
another request:
<html><body>            Hello</body></html>
another request:
<html><body>            Hello</body></html>
another request:
<html><body>            Hello</body></html>
another request:
<html><body>            Hello</body></html>
another request:
<html><body>            Hello</body></html>
another request:
<html><body>            Hello</body></html>
another request:
<html><body>            Hello</body></html>
another request:
<html><body>            Hello</body></html>
another request:
<html><body>            Hello</body></html>
...
```
ESP is still running fine:
```
21:10:56.697 -> SDK:2.2.2-dev(38a443e)/Core:2.6.3-86-gc61b70de=20603086/lwIP:STABLE-2_1_2_RELEASE/glue:1.2-30-g92add50/BearSSL:5c771be
21:10:56.697 -> scandone
21:10:56.697 -> 
21:10:56.829 -> scandone
21:10:56.829 -> state: 0 -> 2 (b0)
21:10:56.829 -> state: 2 -> 3 (0)
21:10:56.829 -> state: 3 -> 5 (10)
21:10:56.829 -> add 0
21:10:56.829 -> aid 1
21:10:56.829 -> cnt 
21:10:56.862 -> 
21:10:56.862 -> connected with xx, channel nn
21:10:56.862 -> dhcp client start...
21:10:56.862 -> ip:10.0.1.101,mask:255.255.255.0,gw:10.0.1.254
21:10:57.194 -> .
21:10:57.194 -> IP address: 10.0.1.101
21:10:57.724 -> HTTP server started
21:11:06.843 -> pm open,type:2 0
```

That being weird, I suggest you try with another git master cloned from scratch.
May I suggest you to try [beta releases](https://d-a-v.github.io) ?",True,True,22,5379.366666666667
ServiceInnovationLab/PresenceChecker/411,2020-03-01T22:59:39Z,False,5e669caebd35432c626a770a,"Dependabot tried to add `@br3nda` and `@dlouise64` as reviewers to this PR, but received the following error from GitHub:

```
POST https://api.github.com/repos/ServiceInnovationLab/PresenceChecker/pulls/411/requested_reviewers: 422 - Reviews may only be requested from collaborators. One or more of the users or teams you specified is not a collaborator of the ServiceInnovationLab/PresenceChecker repository. // See: https://developer.github.com/v3/pulls/review_requests/#create-a-review-request
```",True,False,1,0.0
esp8266_____Arduino_____7121,2020-03-02T15:41:39Z,True,esp8266_____Arduino_____7121_____593465400,"An `rm -rf *; git checkout -- .` shall suffice.
About the diagnostic output you pasted, that's not on USB serial, right?",True,True,22,5379.366666666667
esp8266_____Arduino_____7121,2020-03-02T15:44:32Z,True,esp8266_____Arduino_____7121_____593466913,"Glad you sorted this out.
The above output is the arduino console on USB serial (wemos d1), with timestamp enabled.",True,True,22,5379.366666666667
esp8266_____Arduino_____7121,2020-03-02T15:54:26Z,True,esp8266_____Arduino_____7121_____593472141,"No idea what ""with timestamp enabled"" means :-(
I think there's a misunderstand, I was just reporting my latest step, I didn't imply that the WDT problem is gone. In fact, right now, my MCVE without the latest master commit works, but with the lwip2 commits, it keeps crashing. It's definitely something in those lib binaries.",True,True,22,5379.366666666667
esp8266_____Arduino_____7121,2020-03-02T16:03:13Z,True,esp8266_____Arduino_____7121_____593476672,"All it takes to make my MCVE work well s to revert the *.a, tcp_priv.h, and lwip-git-hash.h files.",True,True,22,5379.366666666667
esp8266_____Arduino_____7121,2020-03-02T16:10:49Z,True,esp8266_____Arduino_____7121_____593480639,"> > About the diagnostic output you pasted, that's not on USB serial, right?

> No idea what ""with timestamp enabled"" means :-(

That was USB Serial. Timestamp is added by arduino console. The output is your sketch's.
(*edit*: with debug on serial enabled, if that's worth to be mentioned)

> > An rm -rf *; git checkout -- . shall suffice.

> I think there's a misunderstand, I was just reporting my latest step, I didn't imply that the WDT problem is gone.

Sorry for the misunderstanding. 
I hereby ask someone else to try your MCVE to confirm in either way.
The beta release has the same library as git master and the one I have on my PC
```shell
$ md5sum liblwip2-536-feat.a
f27b0c56379610ffc24a92a0e3f8aad7  liblwip2-536-feat.a
```

> All it takes to make my MCVE work well s to revert the *.a, tcp_priv.h, and lwip-git-hash.h files.

I understand that.
That's why I wonder whether I am alone to be able to make git master working with lwIP.",True,True,22,5379.366666666667
esp8266_____Arduino_____7121,2020-03-02T17:27:59Z,True,esp8266_____Arduino_____7121_____593519012,"@dok-net 
Which version of lwIP do you select ?
I may not have tested with the same version as the one you're using.
The one above is ""v2 / lower memory / with features / no IPv6"".",True,True,22,5379.366666666667
esp8266_____Arduino_____7121,2020-03-02T17:42:04Z,True,esp8266_____Arduino_____7121_____593525535,"`lwIP Variant: v2 Lower Memory`
",True,True,22,5379.366666666667
esp8266_____Arduino_____7121,2020-03-02T17:51:28Z,True,esp8266_____Arduino_____7121_____593529916,"Just very short test durations (1-2min), the one with IPv6 seems to be better.",True,True,22,5379.366666666667
esp8266_____Arduino_____7121,2020-03-02T17:58:46Z,True,esp8266_____Arduino_____7121_____593533358,"Also tested `v2 Lower Memory (no features)`, no WDT resets within 1-2min after flashing.
But, `v2 Higher Bandwidth`, and  `v2 Lower Memory` (the default?):
```
ets Jan  8 2013,rst cause:4, boot mode:(3,6)

wdt reset
load 0x4010f000, len 3456, room 16 
tail 0
chksum 0x84
csum 0x84
v3e56b42b
~ld
```",True,True,22,5379.366666666667
esp8266_____Arduino_____7121,2020-03-02T18:01:46Z,True,esp8266_____Arduino_____7121_____593534764,"Can you give the md5 sum of your liblwip2-536-feat.a ? 
It is ""v2 Lower Memory (the default)"".",True,True,22,5379.366666666667
esp8266_____Arduino_____7121,2020-03-02T18:05:44Z,True,esp8266_____Arduino_____7121_____593536769,"For the `liblwip2-536-feat.a`, same as yours above.
Please remember, I am reporting a regression against my waveform branch here - merging with master - latest commit stuff works, if I merge the HEAD commit of master, the WDT resets occur. You will likely not see the issue without the whatever extra stress the waveform lib produces.
One thing that seems unrelated, I cannot OTA update currently with master.",True,True,22,5379.366666666667
esp8266_____Arduino_____7121,2020-03-02T18:09:47Z,True,esp8266_____Arduino_____7121_____593538848,"For what it's worth, these are the options:
Upload Speed: 921600
CPU Frequency: 80 MHz
Flash Size: 4MB (FS:1MB OTA:~1019KB)
Debug port: Disabled
Debug Level: None
lwIP Variant: v2 Lower Memory
VTables: Flash
Exceptions: Legacy (new can return nullptr)
Erase Flash: Only Sketch
SSL Support: All SSL ciphers (most compatible)",True,True,22,5379.366666666667
esp8266_____Arduino_____7121,2020-03-02T18:19:14Z,True,esp8266_____Arduino_____7121_____593543459,"> You will likely not see the issue without the whatever extra stress the waveform lib produces.

This is the +19th message after your first one to learn that
- you did ***not*** test your MCVE against master
- you have issues with an unmerged PR
- you never insisted on that information after ***I*** successfully tested your MCVE on master and tried to understand ***your*** concern that nobody else has.

I would be glad to know where I missed this capital information in the above messages.

This is a merged PR.
Please open a new issue with ***all*** the needed informations to understand ***your*** specifics.

",True,True,22,5379.366666666667
JonL12345/alpha-blog/1,2020-03-03T21:38:24Z,False,5e6cf2e1bd35431fc2c0d41d,Superseded by #4.,True,False,1,0.0
xobotyi/await-of/12,2020-03-04T07:33:00Z,False,5e70b323bd354337717ed492,":tada: This PR is included in version 1.3.0 :tada:

The release is available on:
- [npm package (@latest dist-tag)](https://www.npmjs.com/package/await-of/v/1.3.0)
- [GitHub release](https://github.com/xobotyi/await-of/releases/tag/v1.3.0)

Your **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",True,False,1,0.0
nicoproto/rails-longest-word-game/6,2020-03-04T17:02:33Z,False,5e65ba4dbd35431d49221219,Superseded by #7.,True,False,2,0.0
nicoproto/rails-longest-word-game/6,2020-03-04T17:02:33Z,False,5e65ba4dbd35431d4922121a,Superseded by #7.,True,False,2,0.0
suisankanatoriumu/git-app/7,2020-03-04T19:10:59Z,False,5e66170cbd35432d2378a36c,Superseded by #8.,True,False,1,0.0
HippieStation_____PRMirror_____16,2020-03-05T08:17:32Z,True,HippieStation_____PRMirror_____16_____595089748,hurry up you dumbass :b:ippie maintainers,True,True,19,209551.81666666668
HippieStation_____PRMirror_____16,2020-03-05T15:46:42Z,True,HippieStation_____PRMirror_____16_____595298650,I don't do anything for Hippie anymore or play SS13 but I've asked them to add me back to the repo so I can review and merge this,True,True,19,209551.81666666668
HippieStation_____PRMirror_____16,2020-03-05T22:30:39Z,True,HippieStation_____PRMirror_____16_____388605018,I'm not sure if these IDs are the same kind of ID for both PullRequestEvents and CommentEvents are they? If they're the same ID then this is fine but if not you're going to need to prepend `pr` and `comment` to the IDs to stop collisions between IDs and PRs,True,False,19,209551.81666666668
HippieStation_____PRMirror_____16,2020-03-05T22:30:57Z,True,HippieStation_____PRMirror_____16_____388605163,How come you're removing this?,True,False,19,209551.81666666668
HippieStation_____PRMirror_____16,2020-03-05T22:31:54Z,True,HippieStation_____PRMirror_____16_____388605497,what is this even doing. It looks like you're getting the upstream PullRequest ID from the downstream PR maybe? If so there's definitely a better way of doing that,True,False,19,209551.81666666668
HippieStation_____PRMirror_____16,2020-03-05T22:34:33Z,True,HippieStation_____PRMirror_____16_____388606535,Looks like we store a map of Upstream/Downstream using `StoreMirror` - you can probably implement a way to get the Upstream PR ID from the Downstream PR ID using that,True,False,19,209551.81666666668
cabaletta_____baritone_____1369,2020-03-07T23:12:29Z,True,cabaletta_____baritone_____1369_____577414893,"Problem arises from the use of `valid()` with this setting enabled when trying to find something valid to place. Since all non-air blocks are okay, it will deem incorrect blocks okay to place with the setting enabled. This is not an ideal fix, but at least now it works.",True,True,13,149.43333333333334
cabaletta_____baritone_____1369,2020-03-07T23:12:29Z,True,cabaletta_____baritone_____1369_____385203603,"Problem arises from the use of `valid()` with this setting enabled when trying to find something valid to place. Since all non-air blocks are okay, it will deem incorrect blocks okay to place with the setting enabled. This is not an ideal fix, but at least now it works.",True,True,13,149.43333333333334
cabaletta_____baritone_____1369,2020-03-07T23:20:25Z,True,cabaletta_____baritone_____1369_____596147427,https://github.com/cabaletta/baritone/issues/1250#issuecomment-596147419,True,True,13,149.43333333333334
cabaletta_____baritone_____1369,2020-03-07T23:23:49Z,True,cabaletta_____baritone_____1369_____596147665,nvm,True,True,13,149.43333333333334
cabaletta_____baritone_____1369,2020-03-07T23:25:01Z,True,cabaletta_____baritone_____1369_____389319764,fix formatting,True,False,13,149.43333333333334
cabaletta_____baritone_____1369,2020-03-07T23:25:14Z,True,cabaletta_____baritone_____1369_____389319773,fix your formatting here as well,True,False,13,149.43333333333334
cabaletta_____baritone_____1369,2020-03-07T23:25:20Z,True,cabaletta_____baritone_____1369_____389319787,and here,True,False,13,149.43333333333334
cabaletta_____baritone_____1369,2020-03-07T23:25:27Z,True,cabaletta_____baritone_____1369_____389319789,here too,True,False,13,149.43333333333334
cabaletta_____baritone_____1369,2020-03-07T23:25:37Z,True,cabaletta_____baritone_____1369_____389319795,also need to fix your formatting here,True,False,13,149.43333333333334
cabaletta_____baritone_____1369,2020-03-07T23:25:55Z,True,cabaletta_____baritone_____1369_____389319818,do coding standards just not exist?,True,True,13,149.43333333333334
cabaletta_____baritone_____1369,2020-03-07T23:26:04Z,True,cabaletta_____baritone_____1369_____389319836,bruh the fucking spaces dude,True,True,13,149.43333333333334
cabaletta_____baritone_____1369,2020-03-07T23:26:49Z,True,cabaletta_____baritone_____1369_____596147850,"Despite this fixing the issue, the solution is scuffed. I'm closing this and fixing it myself.",True,True,13,149.43333333333334
cabaletta_____baritone_____1369,2020-03-08T01:41:55Z,True,cabaletta_____baritone_____1369_____389326668,"I used notepad for this, and it shoved tabs in there instead of whitespaces. Sorry.",True,False,13,149.43333333333334
eagletmt/arch.wanko.cc/2,2020-03-14T16:12:36Z,False,5e840bd2bd35437120269ea9,"Looks like nokogiri is up-to-date now, so this is no longer needed.",True,False,1,0.0
coreybobco/textvomit-markov-texteditor/2,2020-03-19T00:46:10Z,False,5e85d8e1bd3543766d692a7d,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`.

If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",True,False,2,0.0
coreybobco/textvomit-markov-texteditor/2,2020-03-19T00:46:10Z,False,5e85d8e0bd3543766d692a7c,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`.

If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",True,False,2,0.0
HippieStation_____PRMirror_____16,2020-03-23T10:32:24Z,True,HippieStation_____PRMirror_____16_____602511189,"oh wow someone answered, okay I'll address the reviews when I get some time",True,True,19,209551.81666666668
HippieStation_____PRMirror_____16,2020-03-23T10:35:06Z,True,HippieStation_____PRMirror_____16_____396352714,"That's my bad, I removed it because it's handled by our webhook system. If it's an issue it can be added back.",True,False,19,209551.81666666668
HippieStation_____PRMirror_____16,2020-03-23T10:36:07Z,True,HippieStation_____PRMirror_____16_____396353314,"literally no experience in go other than what I found online in brief tutorials, so that's really beyond my scope I'm afraid",True,False,19,209551.81666666668
HippieStation_____PRMirror_____16,2020-03-23T10:37:12Z,True,HippieStation_____PRMirror_____16_____396353984,"hmm, I can do that, shouldn't be too hard to alter the method",True,False,19,209551.81666666668
lanelps/EDAMAME/25,2020-03-24T07:12:01Z,False,5e8de53abd3543154893099a,Superseded by #28.,True,False,1,0.0
tryber/sd-04-block3-project-html-css/22,2020-03-25T18:40:59Z,False,5e8f05adbd35431e2a64e594,"## Resultado no projeto
*Item* | |
--- | :---:
Desempenho | Insuficiente
Critério de Avaliação | Padrão
Percentual de cumprimento de requisitos obrigatórios | 12.50%
Percentual de cumprimento de requisitos totais | 8.33%
### Resultado por requisito
*Nome* | *Avaliação*
--- | :---:
O corpo da página deve possuir uma cor (diferente da cor branca) como cor de fundo | :heavy_check_mark:
A página deve possuir uma barra superior fixa com o ID ""cabecalho"" | :heavy_multiplication_x:
A página deve possuir um rodapé com o ID ""rodape"" | :heavy_multiplication_x:
A página deve possuir pelo menos uma imagem criada com a tag ""img"" | :heavy_multiplication_x:
A página deve possuir duas listas, uma ordenada e a outra não | :heavy_multiplication_x:
A página deve possuir pelo menos um link externo (não se esqueça de configurar a abertura desse link em uma nova aba) | :heavy_multiplication_x:
Torne o seu site mais acessível e melhore seu ranqueamento em mecanismos de busca na Web aplicando os elementos HTML de acordo com o sentido e propósito de cada um deles | :heavy_multiplication_x:
Seu site deve passar sem problemas na verificação de semântica do site achecker | :heavy_multiplication_x:
Adicione uma tabela à página | :heavy_multiplication_x:
Altere margin, padding e border dos elementos para ver, na prática, como esses atributos influenciam e melhoram a visualização dos componentes | :heavy_multiplication_x:
Altere atributos relacionados as fontes, como por exemplo, tamanho, cor, alinhamento, decoração (itálico, negrito, sublinhado etc) | :heavy_multiplication_x:
Organize componentes para ficarem dispostos lado a lado na página com as classes ""lado-esquerdo"" e ""lado-direito"" respectivamente | :heavy_multiplication_x:",True,False,29,276.15
tryber/sd-04-block3-project-html-css/22,2020-03-25T18:44:41Z,False,5e8f05d4bd354321cb5862a9,"## Resultado no projeto
*Item* | |
--- | :---:
Desempenho | Insuficiente
Critério de Avaliação | Padrão
Percentual de cumprimento de requisitos obrigatórios | 12.50%
Percentual de cumprimento de requisitos totais | 8.33%
### Resultado por requisito
*Nome* | *Avaliação*
--- | :---:
O corpo da página deve possuir uma cor (diferente da cor branca) como cor de fundo | :heavy_check_mark:
A página deve possuir uma barra superior fixa com o ID ""cabecalho"" | :heavy_multiplication_x:
A página deve possuir um rodapé com o ID ""rodape"" | :heavy_multiplication_x:
A página deve possuir pelo menos uma imagem criada com a tag ""img"" | :heavy_multiplication_x:
A página deve possuir duas listas, uma ordenada e a outra não | :heavy_multiplication_x:
A página deve possuir pelo menos um link externo (não se esqueça de configurar a abertura desse link em uma nova aba) | :heavy_multiplication_x:
Torne o seu site mais acessível e melhore seu ranqueamento em mecanismos de busca na Web aplicando os elementos HTML de acordo com o sentido e propósito de cada um deles | :heavy_multiplication_x:
Seu site deve passar sem problemas na verificação de semântica do site achecker | :heavy_multiplication_x:
Adicione uma tabela à página | :heavy_multiplication_x:
Altere margin, padding e border dos elementos para ver, na prática, como esses atributos influenciam e melhoram a visualização dos componentes | :heavy_multiplication_x:
Altere atributos relacionados as fontes, como por exemplo, tamanho, cor, alinhamento, decoração (itálico, negrito, sublinhado etc) | :heavy_multiplication_x:
Organize componentes para ficarem dispostos lado a lado na página com as classes ""lado-esquerdo"" e ""lado-direito"" respectivamente | :heavy_multiplication_x:",True,False,29,276.15
tryber/sd-04-block3-project-html-css/22,2020-03-25T18:53:09Z,False,5e8f53b0bd354316c0483415,"## Resultado no projeto
*Item* | |
--- | :---:
Desempenho | Insuficiente
Critério de Avaliação | Padrão
Percentual de cumprimento de requisitos obrigatórios | 37.50%
Percentual de cumprimento de requisitos totais | 25.00%
### Resultado por requisito
*Nome* | *Avaliação*
--- | :---:
O corpo da página deve possuir uma cor (diferente da cor branca) como cor de fundo | :heavy_check_mark:
A página deve possuir uma barra superior fixa com o ID ""cabecalho"" | :heavy_check_mark:
A página deve possuir um rodapé com o ID ""rodape"" | :heavy_multiplication_x:
A página deve possuir pelo menos uma imagem criada com a tag ""img"" | :heavy_multiplication_x:
A página deve possuir duas listas, uma ordenada e a outra não | :heavy_multiplication_x:
A página deve possuir pelo menos um link externo (não se esqueça de configurar a abertura desse link em uma nova aba) | :heavy_multiplication_x:
Torne o seu site mais acessível e melhore seu ranqueamento em mecanismos de busca na Web aplicando os elementos HTML de acordo com o sentido e propósito de cada um deles | :heavy_multiplication_x:
Seu site deve passar sem problemas na verificação de semântica do site achecker | :heavy_check_mark:
Adicione uma tabela à página | :heavy_multiplication_x:
Altere margin, padding e border dos elementos para ver, na prática, como esses atributos influenciam e melhoram a visualização dos componentes | :heavy_multiplication_x:
Altere atributos relacionados as fontes, como por exemplo, tamanho, cor, alinhamento, decoração (itálico, negrito, sublinhado etc) | :heavy_multiplication_x:
Organize componentes para ficarem dispostos lado a lado na página com as classes ""lado-esquerdo"" e ""lado-direito"" respectivamente | :heavy_multiplication_x:",True,False,29,276.15
tryber/sd-04-block3-project-html-css/22,2020-03-25T18:54:28Z,False,5e8f53c6bd354324cea9c1e5,"## Resultado no projeto
*Item* | |
--- | :---:
Desempenho | Insuficiente
Critério de Avaliação | Padrão
Percentual de cumprimento de requisitos obrigatórios | 37.50%
Percentual de cumprimento de requisitos totais | 25.00%
### Resultado por requisito
*Nome* | *Avaliação*
--- | :---:
O corpo da página deve possuir uma cor (diferente da cor branca) como cor de fundo | :heavy_check_mark:
A página deve possuir uma barra superior fixa com o ID ""cabecalho"" | :heavy_check_mark:
A página deve possuir um rodapé com o ID ""rodape"" | :heavy_multiplication_x:
A página deve possuir pelo menos uma imagem criada com a tag ""img"" | :heavy_multiplication_x:
A página deve possuir duas listas, uma ordenada e a outra não | :heavy_multiplication_x:
A página deve possuir pelo menos um link externo (não se esqueça de configurar a abertura desse link em uma nova aba) | :heavy_multiplication_x:
Torne o seu site mais acessível e melhore seu ranqueamento em mecanismos de busca na Web aplicando os elementos HTML de acordo com o sentido e propósito de cada um deles | :heavy_multiplication_x:
Seu site deve passar sem problemas na verificação de semântica do site achecker | :heavy_check_mark:
Adicione uma tabela à página | :heavy_multiplication_x:
Altere margin, padding e border dos elementos para ver, na prática, como esses atributos influenciam e melhoram a visualização dos componentes | :heavy_multiplication_x:
Altere atributos relacionados as fontes, como por exemplo, tamanho, cor, alinhamento, decoração (itálico, negrito, sublinhado etc) | :heavy_multiplication_x:
Organize componentes para ficarem dispostos lado a lado na página com as classes ""lado-esquerdo"" e ""lado-direito"" respectivamente | :heavy_multiplication_x:",True,False,29,276.15
tryber/sd-04-block3-project-html-css/22,2020-03-25T18:58:08Z,False,5e8f540ebd354316c0483476,"## Resultado no projeto
*Item* | |
--- | :---:
Desempenho | Insuficiente
Critério de Avaliação | Padrão
Percentual de cumprimento de requisitos obrigatórios | 50.00%
Percentual de cumprimento de requisitos totais | 33.33%
### Resultado por requisito
*Nome* | *Avaliação*
--- | :---:
O corpo da página deve possuir uma cor (diferente da cor branca) como cor de fundo | :heavy_check_mark:
A página deve possuir uma barra superior fixa com o ID ""cabecalho"" | :heavy_check_mark:
A página deve possuir um rodapé com o ID ""rodape"" | :heavy_check_mark:
A página deve possuir pelo menos uma imagem criada com a tag ""img"" | :heavy_multiplication_x:
A página deve possuir duas listas, uma ordenada e a outra não | :heavy_multiplication_x:
A página deve possuir pelo menos um link externo (não se esqueça de configurar a abertura desse link em uma nova aba) | :heavy_multiplication_x:
Torne o seu site mais acessível e melhore seu ranqueamento em mecanismos de busca na Web aplicando os elementos HTML de acordo com o sentido e propósito de cada um deles | :heavy_multiplication_x:
Seu site deve passar sem problemas na verificação de semântica do site achecker | :heavy_check_mark:
Adicione uma tabela à página | :heavy_multiplication_x:
Altere margin, padding e border dos elementos para ver, na prática, como esses atributos influenciam e melhoram a visualização dos componentes | :heavy_multiplication_x:
Altere atributos relacionados as fontes, como por exemplo, tamanho, cor, alinhamento, decoração (itálico, negrito, sublinhado etc) | :heavy_multiplication_x:
Organize componentes para ficarem dispostos lado a lado na página com as classes ""lado-esquerdo"" e ""lado-direito"" respectivamente | :heavy_multiplication_x:",True,False,29,276.15
tryber/sd-04-block3-project-html-css/22,2020-03-25T19:04:19Z,False,5e8f548dbd35431499b0bb79,"## Resultado no projeto
*Item* | |
--- | :---:
Desempenho | Insuficiente
Critério de Avaliação | Padrão
Percentual de cumprimento de requisitos obrigatórios | 62.50%
Percentual de cumprimento de requisitos totais | 41.67%
### Resultado por requisito
*Nome* | *Avaliação*
--- | :---:
O corpo da página deve possuir uma cor (diferente da cor branca) como cor de fundo | :heavy_check_mark:
A página deve possuir uma barra superior fixa com o ID ""cabecalho"" | :heavy_check_mark:
A página deve possuir um rodapé com o ID ""rodape"" | :heavy_check_mark:
A página deve possuir pelo menos uma imagem criada com a tag ""img"" | :heavy_check_mark:
A página deve possuir duas listas, uma ordenada e a outra não | :heavy_multiplication_x:
A página deve possuir pelo menos um link externo (não se esqueça de configurar a abertura desse link em uma nova aba) | :heavy_multiplication_x:
Torne o seu site mais acessível e melhore seu ranqueamento em mecanismos de busca na Web aplicando os elementos HTML de acordo com o sentido e propósito de cada um deles | :heavy_multiplication_x:
Seu site deve passar sem problemas na verificação de semântica do site achecker | :heavy_check_mark:
Adicione uma tabela à página | :heavy_multiplication_x:
Altere margin, padding e border dos elementos para ver, na prática, como esses atributos influenciam e melhoram a visualização dos componentes | :heavy_multiplication_x:
Altere atributos relacionados as fontes, como por exemplo, tamanho, cor, alinhamento, decoração (itálico, negrito, sublinhado etc) | :heavy_multiplication_x:
Organize componentes para ficarem dispostos lado a lado na página com as classes ""lado-esquerdo"" e ""lado-direito"" respectivamente | :heavy_multiplication_x:",True,False,29,276.15
tryber/sd-04-block3-project-html-css/22,2020-03-25T19:06:52Z,False,5e8f54d7bd35431d0afebdee,"## Resultado no projeto
*Item* | |
--- | :---:
Desempenho | Insuficiente
Critério de Avaliação | Padrão
Percentual de cumprimento de requisitos obrigatórios | 75.00%
Percentual de cumprimento de requisitos totais | 50.00%
### Resultado por requisito
*Nome* | *Avaliação*
--- | :---:
O corpo da página deve possuir uma cor (diferente da cor branca) como cor de fundo | :heavy_check_mark:
A página deve possuir uma barra superior fixa com o ID ""cabecalho"" | :heavy_check_mark:
A página deve possuir um rodapé com o ID ""rodape"" | :heavy_check_mark:
A página deve possuir pelo menos uma imagem criada com a tag ""img"" | :heavy_check_mark:
A página deve possuir duas listas, uma ordenada e a outra não | :heavy_check_mark:
A página deve possuir pelo menos um link externo (não se esqueça de configurar a abertura desse link em uma nova aba) | :heavy_multiplication_x:
Torne o seu site mais acessível e melhore seu ranqueamento em mecanismos de busca na Web aplicando os elementos HTML de acordo com o sentido e propósito de cada um deles | :heavy_multiplication_x:
Seu site deve passar sem problemas na verificação de semântica do site achecker | :heavy_check_mark:
Adicione uma tabela à página | :heavy_multiplication_x:
Altere margin, padding e border dos elementos para ver, na prática, como esses atributos influenciam e melhoram a visualização dos componentes | :heavy_multiplication_x:
Altere atributos relacionados as fontes, como por exemplo, tamanho, cor, alinhamento, decoração (itálico, negrito, sublinhado etc) | :heavy_multiplication_x:
Organize componentes para ficarem dispostos lado a lado na página com as classes ""lado-esquerdo"" e ""lado-direito"" respectivamente | :heavy_multiplication_x:",True,False,29,276.15
tryber/sd-04-block3-project-html-css/22,2020-03-25T19:11:31Z,False,5e8f555abd3543151c1c694b,"## Resultado no projeto
*Item* | |
--- | :---:
Desempenho | Suficiente
Critério de Avaliação | Padrão
Percentual de cumprimento de requisitos obrigatórios | 87.50%
Percentual de cumprimento de requisitos totais | 58.33%
### Resultado por requisito
*Nome* | *Avaliação*
--- | :---:
O corpo da página deve possuir uma cor (diferente da cor branca) como cor de fundo | :heavy_check_mark:
A página deve possuir uma barra superior fixa com o ID ""cabecalho"" | :heavy_check_mark:
A página deve possuir um rodapé com o ID ""rodape"" | :heavy_check_mark:
A página deve possuir pelo menos uma imagem criada com a tag ""img"" | :heavy_check_mark:
A página deve possuir duas listas, uma ordenada e a outra não | :heavy_check_mark:
A página deve possuir pelo menos um link externo (não se esqueça de configurar a abertura desse link em uma nova aba) | :heavy_check_mark:
Torne o seu site mais acessível e melhore seu ranqueamento em mecanismos de busca na Web aplicando os elementos HTML de acordo com o sentido e propósito de cada um deles | :heavy_multiplication_x:
Seu site deve passar sem problemas na verificação de semântica do site achecker | :heavy_check_mark:
Adicione uma tabela à página | :heavy_multiplication_x:
Altere margin, padding e border dos elementos para ver, na prática, como esses atributos influenciam e melhoram a visualização dos componentes | :heavy_multiplication_x:
Altere atributos relacionados as fontes, como por exemplo, tamanho, cor, alinhamento, decoração (itálico, negrito, sublinhado etc) | :heavy_multiplication_x:
Organize componentes para ficarem dispostos lado a lado na página com as classes ""lado-esquerdo"" e ""lado-direito"" respectivamente | :heavy_multiplication_x:",True,False,29,276.15
tryber/sd-04-block3-project-html-css/22,2020-03-25T19:15:09Z,False,5e8f55d7bd35432488417e63,"## Resultado no projeto
*Item* | |
--- | :---:
Desempenho | Suficiente
Critério de Avaliação | Padrão
Percentual de cumprimento de requisitos obrigatórios | 87.50%
Percentual de cumprimento de requisitos totais | 58.33%
### Resultado por requisito
*Nome* | *Avaliação*
--- | :---:
O corpo da página deve possuir uma cor (diferente da cor branca) como cor de fundo | :heavy_check_mark:
A página deve possuir uma barra superior fixa com o ID ""cabecalho"" | :heavy_check_mark:
A página deve possuir um rodapé com o ID ""rodape"" | :heavy_check_mark:
A página deve possuir pelo menos uma imagem criada com a tag ""img"" | :heavy_check_mark:
A página deve possuir duas listas, uma ordenada e a outra não | :heavy_check_mark:
A página deve possuir pelo menos um link externo (não se esqueça de configurar a abertura desse link em uma nova aba) | :heavy_check_mark:
Torne o seu site mais acessível e melhore seu ranqueamento em mecanismos de busca na Web aplicando os elementos HTML de acordo com o sentido e propósito de cada um deles | :heavy_multiplication_x:
Seu site deve passar sem problemas na verificação de semântica do site achecker | :heavy_check_mark:
Adicione uma tabela à página | :heavy_multiplication_x:
Altere margin, padding e border dos elementos para ver, na prática, como esses atributos influenciam e melhoram a visualização dos componentes | :heavy_multiplication_x:
Altere atributos relacionados as fontes, como por exemplo, tamanho, cor, alinhamento, decoração (itálico, negrito, sublinhado etc) | :heavy_multiplication_x:
Organize componentes para ficarem dispostos lado a lado na página com as classes ""lado-esquerdo"" e ""lado-direito"" respectivamente | :heavy_multiplication_x:",True,False,29,276.15
tryber/sd-04-block3-project-html-css/22,2020-03-25T19:19:25Z,False,5e8f077abd354324021a1527,"## Resultado no projeto
*Item* | |
--- | :---:
Desempenho | Suficiente
Critério de Avaliação | Padrão
Percentual de cumprimento de requisitos obrigatórios | 87.50%
Percentual de cumprimento de requisitos totais | 58.33%
### Resultado por requisito
*Nome* | *Avaliação*
--- | :---:
O corpo da página deve possuir uma cor (diferente da cor branca) como cor de fundo | :heavy_check_mark:
A página deve possuir uma barra superior fixa com o ID ""cabecalho"" | :heavy_check_mark:
A página deve possuir um rodapé com o ID ""rodape"" | :heavy_check_mark:
A página deve possuir pelo menos uma imagem criada com a tag ""img"" | :heavy_check_mark:
A página deve possuir duas listas, uma ordenada e a outra não | :heavy_check_mark:
A página deve possuir pelo menos um link externo (não se esqueça de configurar a abertura desse link em uma nova aba) | :heavy_check_mark:
Torne o seu site mais acessível e melhore seu ranqueamento em mecanismos de busca na Web aplicando os elementos HTML de acordo com o sentido e propósito de cada um deles | :heavy_multiplication_x:
Seu site deve passar sem problemas na verificação de semântica do site achecker | :heavy_check_mark:
Adicione uma tabela à página | :heavy_multiplication_x:
Altere margin, padding e border dos elementos para ver, na prática, como esses atributos influenciam e melhoram a visualização dos componentes | :heavy_multiplication_x:
Altere atributos relacionados as fontes, como por exemplo, tamanho, cor, alinhamento, decoração (itálico, negrito, sublinhado etc) | :heavy_multiplication_x:
Organize componentes para ficarem dispostos lado a lado na página com as classes ""lado-esquerdo"" e ""lado-direito"" respectivamente | :heavy_multiplication_x:",True,False,29,276.15
tryber/sd-04-block3-project-html-css/22,2020-03-25T19:21:44Z,False,5e8f07b3bd3543254de57258,"## Resultado no projeto
*Item* | |
--- | :---:
Desempenho | Suficiente
Critério de Avaliação | Padrão
Percentual de cumprimento de requisitos obrigatórios | 87.50%
Percentual de cumprimento de requisitos totais | 66.67%
### Resultado por requisito
*Nome* | *Avaliação*
--- | :---:
O corpo da página deve possuir uma cor (diferente da cor branca) como cor de fundo | :heavy_check_mark:
A página deve possuir uma barra superior fixa com o ID ""cabecalho"" | :heavy_check_mark:
A página deve possuir um rodapé com o ID ""rodape"" | :heavy_check_mark:
A página deve possuir pelo menos uma imagem criada com a tag ""img"" | :heavy_check_mark:
A página deve possuir duas listas, uma ordenada e a outra não | :heavy_check_mark:
A página deve possuir pelo menos um link externo (não se esqueça de configurar a abertura desse link em uma nova aba) | :heavy_check_mark:
Torne o seu site mais acessível e melhore seu ranqueamento em mecanismos de busca na Web aplicando os elementos HTML de acordo com o sentido e propósito de cada um deles | :heavy_multiplication_x:
Seu site deve passar sem problemas na verificação de semântica do site achecker | :heavy_check_mark:
Adicione uma tabela à página | :heavy_check_mark:
Altere margin, padding e border dos elementos para ver, na prática, como esses atributos influenciam e melhoram a visualização dos componentes | :heavy_multiplication_x:
Altere atributos relacionados as fontes, como por exemplo, tamanho, cor, alinhamento, decoração (itálico, negrito, sublinhado etc) | :heavy_multiplication_x:
Organize componentes para ficarem dispostos lado a lado na página com as classes ""lado-esquerdo"" e ""lado-direito"" respectivamente | :heavy_multiplication_x:",True,False,29,276.15
tryber/sd-04-block3-project-html-css/22,2020-03-25T19:28:04Z,False,5e8f0821bd35431b1f689014,"## Resultado no projeto
*Item* | |
--- | :---:
Desempenho | Suficiente
Critério de Avaliação | Padrão
Percentual de cumprimento de requisitos obrigatórios | 87.50%
Percentual de cumprimento de requisitos totais | 75.00%
### Resultado por requisito
*Nome* | *Avaliação*
--- | :---:
O corpo da página deve possuir uma cor (diferente da cor branca) como cor de fundo | :heavy_check_mark:
A página deve possuir uma barra superior fixa com o ID ""cabecalho"" | :heavy_check_mark:
A página deve possuir um rodapé com o ID ""rodape"" | :heavy_check_mark:
A página deve possuir pelo menos uma imagem criada com a tag ""img"" | :heavy_check_mark:
A página deve possuir duas listas, uma ordenada e a outra não | :heavy_check_mark:
A página deve possuir pelo menos um link externo (não se esqueça de configurar a abertura desse link em uma nova aba) | :heavy_check_mark:
Torne o seu site mais acessível e melhore seu ranqueamento em mecanismos de busca na Web aplicando os elementos HTML de acordo com o sentido e propósito de cada um deles | :heavy_multiplication_x:
Seu site deve passar sem problemas na verificação de semântica do site achecker | :heavy_check_mark:
Adicione uma tabela à página | :heavy_check_mark:
Altere margin, padding e border dos elementos para ver, na prática, como esses atributos influenciam e melhoram a visualização dos componentes | :heavy_check_mark:
Altere atributos relacionados as fontes, como por exemplo, tamanho, cor, alinhamento, decoração (itálico, negrito, sublinhado etc) | :heavy_multiplication_x:
Organize componentes para ficarem dispostos lado a lado na página com as classes ""lado-esquerdo"" e ""lado-direito"" respectivamente | :heavy_multiplication_x:",True,False,29,276.15
tryber/sd-04-block3-project-html-css/22,2020-03-25T19:48:30Z,False,5e8f5929bd354314f0a9fb69,"## Resultado no projeto
*Item* | |
--- | :---:
Desempenho | Suficiente
Critério de Avaliação | Padrão
Percentual de cumprimento de requisitos obrigatórios | 87.50%
Percentual de cumprimento de requisitos totais | 83.33%
### Resultado por requisito
*Nome* | *Avaliação*
--- | :---:
O corpo da página deve possuir uma cor (diferente da cor branca) como cor de fundo | :heavy_check_mark:
A página deve possuir uma barra superior fixa com o ID ""cabecalho"" | :heavy_check_mark:
A página deve possuir um rodapé com o ID ""rodape"" | :heavy_check_mark:
A página deve possuir pelo menos uma imagem criada com a tag ""img"" | :heavy_check_mark:
A página deve possuir duas listas, uma ordenada e a outra não | :heavy_check_mark:
A página deve possuir pelo menos um link externo (não se esqueça de configurar a abertura desse link em uma nova aba) | :heavy_check_mark:
Torne o seu site mais acessível e melhore seu ranqueamento em mecanismos de busca na Web aplicando os elementos HTML de acordo com o sentido e propósito de cada um deles | :heavy_multiplication_x:
Seu site deve passar sem problemas na verificação de semântica do site achecker | :heavy_check_mark:
Adicione uma tabela à página | :heavy_check_mark:
Altere margin, padding e border dos elementos para ver, na prática, como esses atributos influenciam e melhoram a visualização dos componentes | :heavy_check_mark:
Altere atributos relacionados as fontes, como por exemplo, tamanho, cor, alinhamento, decoração (itálico, negrito, sublinhado etc) | :heavy_check_mark:
Organize componentes para ficarem dispostos lado a lado na página com as classes ""lado-esquerdo"" e ""lado-direito"" respectivamente | :heavy_multiplication_x:",True,False,29,276.15
tryber/sd-04-block3-project-html-css/22,2020-03-25T20:21:02Z,False,5e8f0ae3bd354316a17e4fd1,"## Resultado no projeto
*Item* | |
--- | :---:
Desempenho | Suficiente
Critério de Avaliação | Padrão
Percentual de cumprimento de requisitos obrigatórios | 87.50%
Percentual de cumprimento de requisitos totais | 83.33%
### Resultado por requisito
*Nome* | *Avaliação*
--- | :---:
O corpo da página deve possuir uma cor (diferente da cor branca) como cor de fundo | :heavy_check_mark:
A página deve possuir uma barra superior fixa com o ID ""cabecalho"" | :heavy_check_mark:
A página deve possuir um rodapé com o ID ""rodape"" | :heavy_check_mark:
A página deve possuir pelo menos uma imagem criada com a tag ""img"" | :heavy_check_mark:
A página deve possuir duas listas, uma ordenada e a outra não | :heavy_check_mark:
A página deve possuir pelo menos um link externo (não se esqueça de configurar a abertura desse link em uma nova aba) | :heavy_check_mark:
Torne o seu site mais acessível e melhore seu ranqueamento em mecanismos de busca na Web aplicando os elementos HTML de acordo com o sentido e propósito de cada um deles | :heavy_multiplication_x:
Seu site deve passar sem problemas na verificação de semântica do site achecker | :heavy_check_mark:
Adicione uma tabela à página | :heavy_check_mark:
Altere margin, padding e border dos elementos para ver, na prática, como esses atributos influenciam e melhoram a visualização dos componentes | :heavy_check_mark:
Altere atributos relacionados as fontes, como por exemplo, tamanho, cor, alinhamento, decoração (itálico, negrito, sublinhado etc) | :heavy_check_mark:
Organize componentes para ficarem dispostos lado a lado na página com as classes ""lado-esquerdo"" e ""lado-direito"" respectivamente | :heavy_multiplication_x:",True,False,29,276.15
tryber/sd-04-block3-project-html-css/22,2020-03-25T20:41:32Z,False,5e8f0c85bd3543167bbbb55c,"## Resultado no projeto
*Item* | |
--- | :---:
Desempenho | Suficiente
Critério de Avaliação | Padrão
Percentual de cumprimento de requisitos obrigatórios | 87.50%
Percentual de cumprimento de requisitos totais | 83.33%
### Resultado por requisito
*Nome* | *Avaliação*
--- | :---:
O corpo da página deve possuir uma cor (diferente da cor branca) como cor de fundo | :heavy_check_mark:
A página deve possuir uma barra superior fixa com o ID ""cabecalho"" | :heavy_check_mark:
A página deve possuir um rodapé com o ID ""rodape"" | :heavy_check_mark:
A página deve possuir pelo menos uma imagem criada com a tag ""img"" | :heavy_check_mark:
A página deve possuir duas listas, uma ordenada e a outra não | :heavy_check_mark:
A página deve possuir pelo menos um link externo (não se esqueça de configurar a abertura desse link em uma nova aba) | :heavy_check_mark:
Torne o seu site mais acessível e melhore seu ranqueamento em mecanismos de busca na Web aplicando os elementos HTML de acordo com o sentido e propósito de cada um deles | :heavy_multiplication_x:
Seu site deve passar sem problemas na verificação de semântica do site achecker | :heavy_check_mark:
Adicione uma tabela à página | :heavy_check_mark:
Altere margin, padding e border dos elementos para ver, na prática, como esses atributos influenciam e melhoram a visualização dos componentes | :heavy_check_mark:
Altere atributos relacionados as fontes, como por exemplo, tamanho, cor, alinhamento, decoração (itálico, negrito, sublinhado etc) | :heavy_check_mark:
Organize componentes para ficarem dispostos lado a lado na página com as classes ""lado-esquerdo"" e ""lado-direito"" respectivamente | :heavy_multiplication_x:",True,False,29,276.15
tryber/sd-04-block3-project-html-css/22,2020-03-25T20:55:10Z,False,5e8f0d52bd35431e73fada41,"## Resultado no projeto
*Item* | |
--- | :---:
Desempenho | Suficiente
Critério de Avaliação | Padrão
Percentual de cumprimento de requisitos obrigatórios | 87.50%
Percentual de cumprimento de requisitos totais | 83.33%
### Resultado por requisito
*Nome* | *Avaliação*
--- | :---:
O corpo da página deve possuir uma cor (diferente da cor branca) como cor de fundo | :heavy_check_mark:
A página deve possuir uma barra superior fixa com o ID ""cabecalho"" | :heavy_check_mark:
A página deve possuir um rodapé com o ID ""rodape"" | :heavy_check_mark:
A página deve possuir pelo menos uma imagem criada com a tag ""img"" | :heavy_check_mark:
A página deve possuir duas listas, uma ordenada e a outra não | :heavy_check_mark:
A página deve possuir pelo menos um link externo (não se esqueça de configurar a abertura desse link em uma nova aba) | :heavy_check_mark:
Torne o seu site mais acessível e melhore seu ranqueamento em mecanismos de busca na Web aplicando os elementos HTML de acordo com o sentido e propósito de cada um deles | :heavy_multiplication_x:
Seu site deve passar sem problemas na verificação de semântica do site achecker | :heavy_check_mark:
Adicione uma tabela à página | :heavy_check_mark:
Altere margin, padding e border dos elementos para ver, na prática, como esses atributos influenciam e melhoram a visualização dos componentes | :heavy_check_mark:
Altere atributos relacionados as fontes, como por exemplo, tamanho, cor, alinhamento, decoração (itálico, negrito, sublinhado etc) | :heavy_check_mark:
Organize componentes para ficarem dispostos lado a lado na página com as classes ""lado-esquerdo"" e ""lado-direito"" respectivamente | :heavy_multiplication_x:",True,False,29,276.15
tryber/sd-04-block3-project-html-css/22,2020-03-25T21:10:47Z,False,5e8f6077bd3543219db4c835,"## Resultado no projeto
*Item* | |
--- | :---:
Desempenho | Suficiente
Critério de Avaliação | Padrão
Percentual de cumprimento de requisitos obrigatórios | 87.50%
Percentual de cumprimento de requisitos totais | 83.33%
### Resultado por requisito
*Nome* | *Avaliação*
--- | :---:
O corpo da página deve possuir uma cor (diferente da cor branca) como cor de fundo | :heavy_check_mark:
A página deve possuir uma barra superior fixa com o ID ""cabecalho"" | :heavy_check_mark:
A página deve possuir um rodapé com o ID ""rodape"" | :heavy_check_mark:
A página deve possuir pelo menos uma imagem criada com a tag ""img"" | :heavy_check_mark:
A página deve possuir duas listas, uma ordenada e a outra não | :heavy_check_mark:
A página deve possuir pelo menos um link externo (não se esqueça de configurar a abertura desse link em uma nova aba) | :heavy_check_mark:
Torne o seu site mais acessível e melhore seu ranqueamento em mecanismos de busca na Web aplicando os elementos HTML de acordo com o sentido e propósito de cada um deles | :heavy_multiplication_x:
Seu site deve passar sem problemas na verificação de semântica do site achecker | :heavy_check_mark:
Adicione uma tabela à página | :heavy_check_mark:
Altere margin, padding e border dos elementos para ver, na prática, como esses atributos influenciam e melhoram a visualização dos componentes | :heavy_check_mark:
Altere atributos relacionados as fontes, como por exemplo, tamanho, cor, alinhamento, decoração (itálico, negrito, sublinhado etc) | :heavy_check_mark:
Organize componentes para ficarem dispostos lado a lado na página com as classes ""lado-esquerdo"" e ""lado-direito"" respectivamente | :heavy_multiplication_x:",True,False,29,276.15
tryber/sd-04-block3-project-html-css/22,2020-03-25T21:19:53Z,False,5e8f6105bd3543167bbbee7e,"## Resultado no projeto
*Item* | |
--- | :---:
Desempenho | Suficiente
Critério de Avaliação | Padrão
Percentual de cumprimento de requisitos obrigatórios | 100.00%
Percentual de cumprimento de requisitos totais | 91.67%
### Resultado por requisito
*Nome* | *Avaliação*
--- | :---:
O corpo da página deve possuir uma cor (diferente da cor branca) como cor de fundo | :heavy_check_mark:
A página deve possuir uma barra superior fixa com o ID ""cabecalho"" | :heavy_check_mark:
A página deve possuir um rodapé com o ID ""rodape"" | :heavy_check_mark:
A página deve possuir pelo menos uma imagem criada com a tag ""img"" | :heavy_check_mark:
A página deve possuir duas listas, uma ordenada e a outra não | :heavy_check_mark:
A página deve possuir pelo menos um link externo (não se esqueça de configurar a abertura desse link em uma nova aba) | :heavy_check_mark:
Torne o seu site mais acessível e melhore seu ranqueamento em mecanismos de busca na Web aplicando os elementos HTML de acordo com o sentido e propósito de cada um deles | :heavy_check_mark:
Seu site deve passar sem problemas na verificação de semântica do site achecker | :heavy_check_mark:
Adicione uma tabela à página | :heavy_check_mark:
Altere margin, padding e border dos elementos para ver, na prática, como esses atributos influenciam e melhoram a visualização dos componentes | :heavy_check_mark:
Altere atributos relacionados as fontes, como por exemplo, tamanho, cor, alinhamento, decoração (itálico, negrito, sublinhado etc) | :heavy_check_mark:
Organize componentes para ficarem dispostos lado a lado na página com as classes ""lado-esquerdo"" e ""lado-direito"" respectivamente | :heavy_multiplication_x:",True,False,29,276.15
tryber/sd-04-block3-project-html-css/22,2020-03-25T21:28:02Z,False,5e8f0f26bd35431d0afe90ad,"## Resultado no projeto
*Item* | |
--- | :---:
Desempenho | Suficiente
Critério de Avaliação | Padrão
Percentual de cumprimento de requisitos obrigatórios | 100.00%
Percentual de cumprimento de requisitos totais | 100.00%
### Resultado por requisito
*Nome* | *Avaliação*
--- | :---:
O corpo da página deve possuir uma cor (diferente da cor branca) como cor de fundo | :heavy_check_mark:
A página deve possuir uma barra superior fixa com o ID ""cabecalho"" | :heavy_check_mark:
A página deve possuir um rodapé com o ID ""rodape"" | :heavy_check_mark:
A página deve possuir pelo menos uma imagem criada com a tag ""img"" | :heavy_check_mark:
A página deve possuir duas listas, uma ordenada e a outra não | :heavy_check_mark:
A página deve possuir pelo menos um link externo (não se esqueça de configurar a abertura desse link em uma nova aba) | :heavy_check_mark:
Torne o seu site mais acessível e melhore seu ranqueamento em mecanismos de busca na Web aplicando os elementos HTML de acordo com o sentido e propósito de cada um deles | :heavy_check_mark:
Seu site deve passar sem problemas na verificação de semântica do site achecker | :heavy_check_mark:
Adicione uma tabela à página | :heavy_check_mark:
Altere margin, padding e border dos elementos para ver, na prática, como esses atributos influenciam e melhoram a visualização dos componentes | :heavy_check_mark:
Altere atributos relacionados as fontes, como por exemplo, tamanho, cor, alinhamento, decoração (itálico, negrito, sublinhado etc) | :heavy_check_mark:
Organize componentes para ficarem dispostos lado a lado na página com as classes ""lado-esquerdo"" e ""lado-direito"" respectivamente | :heavy_check_mark:",True,False,29,276.15
tryber/sd-04-block3-project-html-css/22,2020-03-25T22:12:10Z,False,5e8f6497bd354314f0aa011f,"## Resultado no projeto
*Item* | |
--- | :---:
Desempenho | Insuficiente
Critério de Avaliação | Padrão
Percentual de cumprimento de requisitos obrigatórios | 0.00%
Percentual de cumprimento de requisitos totais | 0.00%
### Resultado por requisito
*Nome* | *Avaliação*
--- | :---:
O corpo da página deve possuir uma cor (diferente da cor branca) como cor de fundo | :heavy_multiplication_x:
A página deve possuir uma barra superior fixa com o ID ""cabecalho"" | :heavy_multiplication_x:
A página deve possuir um rodapé com o ID ""rodape"" | :heavy_multiplication_x:
A página deve possuir pelo menos uma imagem criada com a tag ""img"" | :heavy_multiplication_x:
A página deve possuir duas listas, uma ordenada e a outra não | :heavy_multiplication_x:
A página deve possuir pelo menos um link externo (não se esqueça de configurar a abertura desse link em uma nova aba) | :heavy_multiplication_x:
Torne o seu site mais acessível e melhore seu ranqueamento em mecanismos de busca na Web aplicando os elementos HTML de acordo com o sentido e propósito de cada um deles | :heavy_multiplication_x:
Seu site deve passar sem problemas na verificação de semântica do site achecker | :heavy_multiplication_x:
Adicione uma tabela à página | :heavy_multiplication_x:
Altere margin, padding e border dos elementos para ver, na prática, como esses atributos influenciam e melhoram a visualização dos componentes | :heavy_multiplication_x:
Altere atributos relacionados as fontes, como por exemplo, tamanho, cor, alinhamento, decoração (itálico, negrito, sublinhado etc) | :heavy_multiplication_x:
Organize componentes para ficarem dispostos lado a lado na página com as classes ""lado-esquerdo"" e ""lado-direito"" respectivamente | :heavy_multiplication_x:",True,False,29,276.15
tryber/sd-04-block3-project-html-css/22,2020-03-25T22:30:16Z,False,5e8f6647bd354318dbcc05ce,"## Resultado no projeto
*Item* | |
--- | :---:
Desempenho | Suficiente
Critério de Avaliação | Padrão
Percentual de cumprimento de requisitos obrigatórios | 100.00%
Percentual de cumprimento de requisitos totais | 100.00%
### Resultado por requisito
*Nome* | *Avaliação*
--- | :---:
O corpo da página deve possuir uma cor (diferente da cor branca) como cor de fundo | :heavy_check_mark:
A página deve possuir uma barra superior fixa com o ID ""cabecalho"" | :heavy_check_mark:
A página deve possuir um rodapé com o ID ""rodape"" | :heavy_check_mark:
A página deve possuir pelo menos uma imagem criada com a tag ""img"" | :heavy_check_mark:
A página deve possuir duas listas, uma ordenada e a outra não | :heavy_check_mark:
A página deve possuir pelo menos um link externo (não se esqueça de configurar a abertura desse link em uma nova aba) | :heavy_check_mark:
Torne o seu site mais acessível e melhore seu ranqueamento em mecanismos de busca na Web aplicando os elementos HTML de acordo com o sentido e propósito de cada um deles | :heavy_check_mark:
Seu site deve passar sem problemas na verificação de semântica do site achecker | :heavy_check_mark:
Adicione uma tabela à página | :heavy_check_mark:
Altere margin, padding e border dos elementos para ver, na prática, como esses atributos influenciam e melhoram a visualização dos componentes | :heavy_check_mark:
Altere atributos relacionados as fontes, como por exemplo, tamanho, cor, alinhamento, decoração (itálico, negrito, sublinhado etc) | :heavy_check_mark:
Organize componentes para ficarem dispostos lado a lado na página com as classes ""lado-esquerdo"" e ""lado-direito"" respectivamente | :heavy_check_mark:",True,False,29,276.15
tryber/sd-04-block3-project-html-css/22,2020-03-25T22:39:59Z,False,5e8f66ebbd3543151c1c7799,"## Resultado no projeto
*Item* | |
--- | :---:
Desempenho | Suficiente
Critério de Avaliação | Padrão
Percentual de cumprimento de requisitos obrigatórios | 100.00%
Percentual de cumprimento de requisitos totais | 100.00%
### Resultado por requisito
*Nome* | *Avaliação*
--- | :---:
O corpo da página deve possuir uma cor (diferente da cor branca) como cor de fundo | :heavy_check_mark:
A página deve possuir uma barra superior fixa com o ID ""cabecalho"" | :heavy_check_mark:
A página deve possuir um rodapé com o ID ""rodape"" | :heavy_check_mark:
A página deve possuir pelo menos uma imagem criada com a tag ""img"" | :heavy_check_mark:
A página deve possuir duas listas, uma ordenada e a outra não | :heavy_check_mark:
A página deve possuir pelo menos um link externo (não se esqueça de configurar a abertura desse link em uma nova aba) | :heavy_check_mark:
Torne o seu site mais acessível e melhore seu ranqueamento em mecanismos de busca na Web aplicando os elementos HTML de acordo com o sentido e propósito de cada um deles | :heavy_check_mark:
Seu site deve passar sem problemas na verificação de semântica do site achecker | :heavy_check_mark:
Adicione uma tabela à página | :heavy_check_mark:
Altere margin, padding e border dos elementos para ver, na prática, como esses atributos influenciam e melhoram a visualização dos componentes | :heavy_check_mark:
Altere atributos relacionados as fontes, como por exemplo, tamanho, cor, alinhamento, decoração (itálico, negrito, sublinhado etc) | :heavy_check_mark:
Organize componentes para ficarem dispostos lado a lado na página com as classes ""lado-esquerdo"" e ""lado-direito"" respectivamente | :heavy_check_mark:",True,False,29,276.15
tryber/sd-04-block3-project-html-css/22,2020-03-25T22:48:12Z,False,5e8f15febd35431d6c04b3a8,"## Resultado no projeto
*Item* | |
--- | :---:
Desempenho | Suficiente
Critério de Avaliação | Padrão
Percentual de cumprimento de requisitos obrigatórios | 100.00%
Percentual de cumprimento de requisitos totais | 100.00%
### Resultado por requisito
*Nome* | *Avaliação*
--- | :---:
O corpo da página deve possuir uma cor (diferente da cor branca) como cor de fundo | :heavy_check_mark:
A página deve possuir uma barra superior fixa com o ID ""cabecalho"" | :heavy_check_mark:
A página deve possuir um rodapé com o ID ""rodape"" | :heavy_check_mark:
A página deve possuir pelo menos uma imagem criada com a tag ""img"" | :heavy_check_mark:
A página deve possuir duas listas, uma ordenada e a outra não | :heavy_check_mark:
A página deve possuir pelo menos um link externo (não se esqueça de configurar a abertura desse link em uma nova aba) | :heavy_check_mark:
Torne o seu site mais acessível e melhore seu ranqueamento em mecanismos de busca na Web aplicando os elementos HTML de acordo com o sentido e propósito de cada um deles | :heavy_check_mark:
Seu site deve passar sem problemas na verificação de semântica do site achecker | :heavy_check_mark:
Adicione uma tabela à página | :heavy_check_mark:
Altere margin, padding e border dos elementos para ver, na prática, como esses atributos influenciam e melhoram a visualização dos componentes | :heavy_check_mark:
Altere atributos relacionados as fontes, como por exemplo, tamanho, cor, alinhamento, decoração (itálico, negrito, sublinhado etc) | :heavy_check_mark:
Organize componentes para ficarem dispostos lado a lado na página com as classes ""lado-esquerdo"" e ""lado-direito"" respectivamente | :heavy_check_mark:",True,False,29,276.15
tryber/sd-04-block3-project-html-css/22,2020-03-25T22:55:14Z,False,5e8f6797bd354320abe59b33,"## Resultado no projeto
*Item* | |
--- | :---:
Desempenho | Suficiente
Critério de Avaliação | Padrão
Percentual de cumprimento de requisitos obrigatórios | 100.00%
Percentual de cumprimento de requisitos totais | 100.00%
### Resultado por requisito
*Nome* | *Avaliação*
--- | :---:
O corpo da página deve possuir uma cor (diferente da cor branca) como cor de fundo | :heavy_check_mark:
A página deve possuir uma barra superior fixa com o ID ""cabecalho"" | :heavy_check_mark:
A página deve possuir um rodapé com o ID ""rodape"" | :heavy_check_mark:
A página deve possuir pelo menos uma imagem criada com a tag ""img"" | :heavy_check_mark:
A página deve possuir duas listas, uma ordenada e a outra não | :heavy_check_mark:
A página deve possuir pelo menos um link externo (não se esqueça de configurar a abertura desse link em uma nova aba) | :heavy_check_mark:
Torne o seu site mais acessível e melhore seu ranqueamento em mecanismos de busca na Web aplicando os elementos HTML de acordo com o sentido e propósito de cada um deles | :heavy_check_mark:
Seu site deve passar sem problemas na verificação de semântica do site achecker | :heavy_check_mark:
Adicione uma tabela à página | :heavy_check_mark:
Altere margin, padding e border dos elementos para ver, na prática, como esses atributos influenciam e melhoram a visualização dos componentes | :heavy_check_mark:
Altere atributos relacionados as fontes, como por exemplo, tamanho, cor, alinhamento, decoração (itálico, negrito, sublinhado etc) | :heavy_check_mark:
Organize componentes para ficarem dispostos lado a lado na página com as classes ""lado-esquerdo"" e ""lado-direito"" respectivamente | :heavy_check_mark:",True,False,29,276.15
tryber/sd-04-block3-project-html-css/22,2020-03-25T23:04:08Z,False,5e8f16adbd35431c3df59804,"## Resultado no projeto
*Item* | |
--- | :---:
Desempenho | Suficiente
Critério de Avaliação | Padrão
Percentual de cumprimento de requisitos obrigatórios | 100.00%
Percentual de cumprimento de requisitos totais | 100.00%
### Resultado por requisito
*Nome* | *Avaliação*
--- | :---:
O corpo da página deve possuir uma cor (diferente da cor branca) como cor de fundo | :heavy_check_mark:
A página deve possuir uma barra superior fixa com o ID ""cabecalho"" | :heavy_check_mark:
A página deve possuir um rodapé com o ID ""rodape"" | :heavy_check_mark:
A página deve possuir pelo menos uma imagem criada com a tag ""img"" | :heavy_check_mark:
A página deve possuir duas listas, uma ordenada e a outra não | :heavy_check_mark:
A página deve possuir pelo menos um link externo (não se esqueça de configurar a abertura desse link em uma nova aba) | :heavy_check_mark:
Torne o seu site mais acessível e melhore seu ranqueamento em mecanismos de busca na Web aplicando os elementos HTML de acordo com o sentido e propósito de cada um deles | :heavy_check_mark:
Seu site deve passar sem problemas na verificação de semântica do site achecker | :heavy_check_mark:
Adicione uma tabela à página | :heavy_check_mark:
Altere margin, padding e border dos elementos para ver, na prática, como esses atributos influenciam e melhoram a visualização dos componentes | :heavy_check_mark:
Altere atributos relacionados as fontes, como por exemplo, tamanho, cor, alinhamento, decoração (itálico, negrito, sublinhado etc) | :heavy_check_mark:
Organize componentes para ficarem dispostos lado a lado na página com as classes ""lado-esquerdo"" e ""lado-direito"" respectivamente | :heavy_check_mark:",True,False,29,276.15
tryber/sd-04-block3-project-html-css/22,2020-03-25T23:06:54Z,False,5e8f16cdbd35432157a94e2f,"## Resultado no projeto
*Item* | |
--- | :---:
Desempenho | Suficiente
Critério de Avaliação | Padrão
Percentual de cumprimento de requisitos obrigatórios | 100.00%
Percentual de cumprimento de requisitos totais | 100.00%
### Resultado por requisito
*Nome* | *Avaliação*
--- | :---:
O corpo da página deve possuir uma cor (diferente da cor branca) como cor de fundo | :heavy_check_mark:
A página deve possuir uma barra superior fixa com o ID ""cabecalho"" | :heavy_check_mark:
A página deve possuir um rodapé com o ID ""rodape"" | :heavy_check_mark:
A página deve possuir pelo menos uma imagem criada com a tag ""img"" | :heavy_check_mark:
A página deve possuir duas listas, uma ordenada e a outra não | :heavy_check_mark:
A página deve possuir pelo menos um link externo (não se esqueça de configurar a abertura desse link em uma nova aba) | :heavy_check_mark:
Torne o seu site mais acessível e melhore seu ranqueamento em mecanismos de busca na Web aplicando os elementos HTML de acordo com o sentido e propósito de cada um deles | :heavy_check_mark:
Seu site deve passar sem problemas na verificação de semântica do site achecker | :heavy_check_mark:
Adicione uma tabela à página | :heavy_check_mark:
Altere margin, padding e border dos elementos para ver, na prática, como esses atributos influenciam e melhoram a visualização dos componentes | :heavy_check_mark:
Altere atributos relacionados as fontes, como por exemplo, tamanho, cor, alinhamento, decoração (itálico, negrito, sublinhado etc) | :heavy_check_mark:
Organize componentes para ficarem dispostos lado a lado na página com as classes ""lado-esquerdo"" e ""lado-direito"" respectivamente | :heavy_check_mark:",True,False,29,276.15
tryber/sd-04-block3-project-html-css/22,2020-03-25T23:11:15Z,False,5e8f6831bd354322dac9e6de,"## Resultado no projeto
*Item* | |
--- | :---:
Desempenho | Suficiente
Critério de Avaliação | Padrão
Percentual de cumprimento de requisitos obrigatórios | 100.00%
Percentual de cumprimento de requisitos totais | 100.00%
### Resultado por requisito
*Nome* | *Avaliação*
--- | :---:
O corpo da página deve possuir uma cor (diferente da cor branca) como cor de fundo | :heavy_check_mark:
A página deve possuir uma barra superior fixa com o ID ""cabecalho"" | :heavy_check_mark:
A página deve possuir um rodapé com o ID ""rodape"" | :heavy_check_mark:
A página deve possuir pelo menos uma imagem criada com a tag ""img"" | :heavy_check_mark:
A página deve possuir duas listas, uma ordenada e a outra não | :heavy_check_mark:
A página deve possuir pelo menos um link externo (não se esqueça de configurar a abertura desse link em uma nova aba) | :heavy_check_mark:
Torne o seu site mais acessível e melhore seu ranqueamento em mecanismos de busca na Web aplicando os elementos HTML de acordo com o sentido e propósito de cada um deles | :heavy_check_mark:
Seu site deve passar sem problemas na verificação de semântica do site achecker | :heavy_check_mark:
Adicione uma tabela à página | :heavy_check_mark:
Altere margin, padding e border dos elementos para ver, na prática, como esses atributos influenciam e melhoram a visualização dos componentes | :heavy_check_mark:
Altere atributos relacionados as fontes, como por exemplo, tamanho, cor, alinhamento, decoração (itálico, negrito, sublinhado etc) | :heavy_check_mark:
Organize componentes para ficarem dispostos lado a lado na página com as classes ""lado-esquerdo"" e ""lado-direito"" respectivamente | :heavy_check_mark:",True,False,29,276.15
tryber/sd-04-block3-project-html-css/22,2020-03-25T23:12:45Z,False,5e8f1730bd354324021a1e7a,"Code Climate has analyzed commit 1918eb47 and detected **0 issues** on this pull request.

View more on [Code Climate](https://codeclimate.com/github/tryber/sd-04-block3-project-html-css/pull/22).
",True,False,29,276.15
tryber/sd-04-block3-project-html-css/22,2020-03-25T23:17:08Z,False,5e8f6873bd354324cea9cc7b,"## Resultado no projeto
*Item* | |
--- | :---:
Desempenho | Suficiente
Critério de Avaliação | Padrão
Percentual de cumprimento de requisitos obrigatórios | 100.00%
Percentual de cumprimento de requisitos totais | 100.00%
### Resultado por requisito
*Nome* | *Avaliação*
--- | :---:
O corpo da página deve possuir uma cor (diferente da cor branca) como cor de fundo | :heavy_check_mark:
A página deve possuir uma barra superior fixa com o ID ""cabecalho"" | :heavy_check_mark:
A página deve possuir um rodapé com o ID ""rodape"" | :heavy_check_mark:
A página deve possuir pelo menos uma imagem criada com a tag ""img"" | :heavy_check_mark:
A página deve possuir duas listas, uma ordenada e a outra não | :heavy_check_mark:
A página deve possuir pelo menos um link externo (não se esqueça de configurar a abertura desse link em uma nova aba) | :heavy_check_mark:
Torne o seu site mais acessível e melhore seu ranqueamento em mecanismos de busca na Web aplicando os elementos HTML de acordo com o sentido e propósito de cada um deles | :heavy_check_mark:
Seu site deve passar sem problemas na verificação de semântica do site achecker | :heavy_check_mark:
Adicione uma tabela à página | :heavy_check_mark:
Altere margin, padding e border dos elementos para ver, na prática, como esses atributos influenciam e melhoram a visualização dos componentes | :heavy_check_mark:
Altere atributos relacionados as fontes, como por exemplo, tamanho, cor, alinhamento, decoração (itálico, negrito, sublinhado etc) | :heavy_check_mark:
Organize componentes para ficarem dispostos lado a lado na página com as classes ""lado-esquerdo"" e ""lado-direito"" respectivamente | :heavy_check_mark:",True,False,29,276.15
GTNewHorizons_____GT5-Unofficial_____256,2020-03-26T12:11:38Z,True,GTNewHorizons_____GT5-Unofficial_____256_____588374039,"need write in class MultiBlock  ""checkRecipe""

` if (tRecipe.mSpecialValue == -200 && (mCleanroom == null || mCleanroom.mEfficiency == 0)) return false;`",True,True,1,0.0
ironhack-datalabs/datamad0320/85,2020-03-27T09:29:04Z,False,5e906efcbd35430844621585,"Hola, perdón!!! Al final ayer me fue imposible terminar de corregir!!! 

Te comento un par de cositas de tu lab :rocket: 

- El primer ejercicio no está bien resuelto, es más fácil de lo que crees, pero dale una vueltecita... quieres sumar todos los números que hay entre 1 y 6. En este caso, debería darte como solución: 15.

- En el último ejercicio, la aproximación al resultado está muy bien pero te fallan algunas cositas. Ten cuidado porque en el `return` estableces un `print(par)` pero cuando llamas a la función te genera una lista con todo el `range`. Revisa este código si tienes tiempo y sino, no te preocupes, vas a seguir practicando este punto durante todo el bootcamp. 

Del resto del Lab solo puedo decirte que está **perfecto**



![image](https://user-images.githubusercontent.com/55156332/77740847-3d666900-7014-11ea-97a5-d0e3181be174.png)
",True,False,1,0.0
PX4/PX4-Autopilot/14502,2020-03-27T15:43:04Z,False,600fa94ebd35434ea685bb42,"Where is `PX4_NO_OPTIMIZATION` even being used?

Higher level what's the actual goal? I'd rather directly use cmake mechanisms to set desired debug levels. The workflow with environment variables is too easy to screw up and not obvious if the build system configuration picked it up or not.",True,False,4,437748.98333333334
PX4/PX4-Autopilot/14502,2020-03-27T16:21:30Z,False,600fa94ebd35434ea685bb43,"> Where is `PX4_NO_OPTIMIZATION` even being used?

https://dev.px4.io/master/en/debug/simulation_debugging.html

so use the config in vscode instead of environment variable or modify the CMakeLists.txt is better?",True,False,4,437748.98333333334
Exiv2_____exiv2_____1009,2020-03-28T16:39:20Z,True,Exiv2_____exiv2_____1009_____605486039,"@sridharb1 I've totally lost the plot on this.  This PR is conflicted with the current state of branch `0.27-maintenance` due to changes in `src/canonmn_int.cpp`.  It is also likely that this PR (and associate branch  `fix1008_Sony2010e `) could ""bloat"" the repository with the file with the CRLF conflicts.

Can we start again, please?  Can you open a new issue with the changes and I will submit a new PR.  I am closing this PR.  I would also like to delete the branch `fix1008_Sony2010e`",True,True,43,262527.48333333334
ppy_____osu_____8483,2020-03-28T16:42:50Z,True,ppy_____osu_____8483_____395120971,"This proposal suggests adding pp to maps that contains high movement velocity variance stream section because, it is harder to adjust both the speed to the aiming part and the tapping part to synchronize with the map.

**Current code repo:** https://github.com/kornkaobat/osu

**Original issue on pp git:** https://github.com/ppy/osu-performance/issues/108

**Some examples pp log ( Will do more in the upcoming days );**

[Idke's pp log](https://github.com/ppy/osu/files/4397455/message.32.txt)

[Karthy's pp log](https://github.com/ppy/osu/files/4397456/message.33.txt)

",True,True,46,1404.4
ppy_____osu_____8483,2020-03-28T16:46:11Z,True,ppy_____osu_____8483_____605486894,Codefactor's _Complex method_ is not fixable so I'll be ignoring that.,True,True,46,1404.4
ppy_____osu_____8483,2020-03-28T16:47:03Z,True,ppy_____osu_____8483_____399683203,We do not put spaces before parentheses. Please adhere to our code style and run style inspection using the provided `InspectCode.ps1` script.,True,False,46,1404.4
ppy_____osu_____8483,2020-03-28T16:47:31Z,True,ppy_____osu_____8483_____399683240,what are these magic constants? any explanation whatsoever?,True,False,46,1404.4
ppy_____osu_____8483,2020-03-28T16:48:35Z,True,ppy_____osu_____8483_____399683372,Commented code is not permitted. It should be uncommented or removed.,True,False,46,1404.4
ppy_____osu_____8483,2020-03-28T16:49:54Z,True,ppy_____osu_____8483_____399683547,[This is literally still copied from stackoverflow](https://stackoverflow.com/a/3141731/6817321) (_literally_ the first result when googling the comments). Using online resources is fine but at least trim the comments since they have no value here. The mathematical concept of standard deviation is pretty widely known.,True,False,46,1404.4
ppy_____osu_____8483,2020-03-28T16:50:22Z,True,ppy_____osu_____8483_____399683585,This conditional is way too complex to remain in its current state.,True,False,46,1404.4
ppy_____osu_____8483,2020-03-28T16:51:06Z,True,ppy_____osu_____8483_____399683659,Why is there `JumpDistances` and `JumpDistances2`? Why are they public? xmldoc please.,True,False,46,1404.4
ppy_____osu_____8483,2020-03-28T16:56:51Z,True,ppy_____osu_____8483_____399684290,Can you suggest another way to condition that?,True,False,46,1404.4
ppy_____osu_____8483,2020-03-28T16:57:23Z,True,ppy_____osu_____8483_____399684329,"Ok, will remove comments.",True,False,46,1404.4
ppy_____osu_____8483,2020-03-28T16:59:17Z,True,ppy_____osu_____8483_____399684570,"I don't really even have the slightest clue what this is *attempting* to do without a proper explanation, so not currently, no. Factoring out a separate method might be good to start with.",True,False,46,1404.4
ppy_____osu_____8483,2020-03-28T17:01:41Z,True,ppy_____osu_____8483_____399684800,"Will change to private, were public because I need to move variable across files but now it is unnecessary. I'll also explain using comments too.",True,False,46,1404.4
ppy_____osu_____8483,2020-03-28T17:10:55Z,True,ppy_____osu_____8483_____605490263,"Oh, and to be entirely clear: I did not even *begin* to consider the *gameplay* implications of this diffcalc change as I'm not fit to do so (not a high-level player, no knowledge or strong opinions about ""what's good"" and what isn't). Resolving the *code* issues above does not guarantee this will get merged, it's just a bare minimum so that it can be even *considered* for merge.

From what I can see from the diffcalc discord and reddit threads linked there this will probably not be met with the approval of the community at large.",True,True,46,1404.4
ppy_____osu_____8483,2020-03-28T17:12:34Z,True,ppy_____osu_____8483_____605490490,I'll fix code structural problems first. Community approval will need a lot of explaining.,True,True,46,1404.4
ppy_____osu_____8483,2020-03-28T17:29:44Z,True,ppy_____osu_____8483_____399687734,Fixed in e11de4b.,True,False,46,1404.4
ppy_____osu_____8483,2020-03-28T17:30:02Z,True,ppy_____osu_____8483_____399687765,Fixed in e11de4b.,True,False,46,1404.4
ppy_____osu_____8483,2020-03-28T17:38:20Z,True,ppy_____osu_____8483_____399688650,Not entirely. [I still see some commented code.](https://github.com/ppy/osu/blob/e11de4b2f373c6a85910c2d289a64d1b76f7f78a/osu.Game.Rulesets.Osu/Difficulty/Skills/Speed.cs#L90-L96),True,False,46,1404.4
devkitPro_____pacman-packages_____131,2020-03-29T00:10:51Z,True,devkitPro_____pacman-packages_____131_____589685478,This will make libcurl work with ftp urls,True,True,1,0.0
ppy_____osu_____8483,2020-03-29T05:17:55Z,True,ppy_____osu_____8483_____399747116,Fixed in 0cb6464.,True,False,46,1404.4
ppy_____osu_____8483,2020-03-29T05:18:24Z,True,ppy_____osu_____8483_____399747146,Fixed in 0cb6464.,True,False,46,1404.4
ppy_____osu_____8483,2020-03-29T05:22:44Z,True,ppy_____osu_____8483_____605561117,3 green.,True,True,46,1404.4
ppy_____osu_____8483,2020-03-29T05:46:42Z,True,ppy_____osu_____8483_____399749440,"On this particular file it is not needed, already removed in 0cb6464.",True,False,46,1404.4
ppy_____osu_____8483,2020-03-29T05:49:16Z,True,ppy_____osu_____8483_____605573701,I can't run the code right now due to repo conflict. Will test-run once it is fixed.,True,True,46,1404.4
ppy_____osu_____8483,2020-03-29T05:59:33Z,True,ppy_____osu_____8483_____605587882,"Fixed repo confilct, everything is greenlit and ready for merge.",True,True,46,1404.4
Exiv2_____exiv2_____1009,2020-03-29T06:16:34Z,True,Exiv2_____exiv2_____1009_____605589038,"Ok, we will start again. I will hunt down those fixes for sony2010e (remember that there is 2010a-f, I think and I implemented only 2010e because I had an NEX-6 that identified itself as this subset). I say this to just note that the catching up to exiftool is significantly inadequate. But, at least, we are better off than before.

I am going to make these fixes in my fork of 0.27-maintenance. I am hoping that you can pull these into the main branch.",True,True,43,262527.48333333334
Exiv2_____exiv2_____1009,2020-03-29T07:29:05Z,True,Exiv2_____exiv2_____1009_____605597660,I have pushed my sony2010e changes to my 0.27-maintenance branch. Could you please pick them up?,True,True,43,262527.48333333334
ppy_____osu_____8483,2020-03-29T09:59:24Z,True,ppy_____osu_____8483_____399774009,Fixed in 55eaa82.,True,False,46,1404.4
ppy_____osu_____8483,2020-03-29T10:10:06Z,True,ppy_____osu_____8483_____399775174,It is designed to seperate jumps from streams overall (the sectionvelocity > 0.9 part is for seperating streams into really hard streams) for further calculation.,True,False,46,1404.4
Exiv2_____exiv2_____1009,2020-03-29T12:06:50Z,True,Exiv2_____exiv2_____1009_____605626127,"@sridharb1 I don't have the git skills to know how to ""pick them up"".  I believe it's possible for you to submit a PR from https://github.com/sridharb1/exiv2 to https://github.com/exiv2/exiv2

Team: Could one of you help @sridharb1 to get this done, please? 

This card keeps me out of git hell and is my my total knowledge of git:
![GitIdiotCard](https://user-images.githubusercontent.com/529982/77848618-f1572800-71bd-11ea-84ae-4d799c55e76c.jpg)
",True,True,43,262527.48333333334
ppy_____osu_____8483,2020-03-29T13:12:21Z,True,ppy_____osu_____8483_____399795984,"Okay, so here's probably one of the core issues of this whole rework. You choose an arbitrary constant based on *one* beatmap. Why this one? What does it have to do with difficulty in particular? Why are other maps not taken into account?

What you seem to want to do is to monkey-patch the existing system to get pp to be more in line with what you consider best. I think a more holistic approach to the *entire* difficulty system might be better.",True,False,46,1404.4
ppy_____osu_____8483,2020-03-29T13:13:12Z,True,ppy_____osu_____8483_____399796114,"These xmldocs are useless, they tell me nothing more than the variable name itself. Don't restate things in xmldoc.",True,True,46,1404.4
ppy_____osu_____8483,2020-03-29T13:13:47Z,True,ppy_____osu_____8483_____399796191,I don't understand what this is trying to say. It's still inscrutable.,True,True,46,1404.4
ppy_____osu_____8483,2020-03-29T13:14:28Z,True,ppy_____osu_____8483_____399796298,"This xmldoc both restates the variable name, is entirely unreadable, and does not explain the simultaneous existence of `jumpDistances` and `jumpDistances2`.",True,False,46,1404.4
ppy_____osu_____8483,2020-03-29T13:15:37Z,True,ppy_____osu_____8483_____399796415,"So many questions here. *How* does it separate? What's the methodology here? Why were the thresholds chosen the way they were?

In other words, how is anyone supposed to change this code in a month or a year, without reverse engineering it all themselves?",True,False,46,1404.4
Exiv2_____exiv2_____1009,2020-03-29T13:37:20Z,True,Exiv2_____exiv2_____1009_____605636873,"[As a preface, it is best to note that my git skills are pretty limited as well.]

I think it is best if you keep this PR closed as this conflates two changes that I did during that period.

One was the sony2010e, which we are trying to merge now. The other was the canon lens and camera sync with exiftool. The latter caused the unfortunate line-ending issues. I would keep the latter separate.

I tried merging my fork with the base, but unfortunately, it pulls in some changes that I had to do to get CMake past some hurdles in my machine, which are probably inappropriate for distribution. Realistically, these are the types of problems that I face with CMake, but they will not be acknowledged because some platforms and ways of doing things are irrelevant.

So, I will create a branch that has only those (sony2010e) and create a clean pull request for you.",True,True,43,262527.48333333334
Exiv2_____exiv2_____1009,2020-03-29T14:20:07Z,True,Exiv2_____exiv2_____1009_____605643670,"OK.  I'm going to close this and delete the branch from GitHub.

I'm sorry to hear that CMake is causing you distress.  How about you get your code changes ready on your machine and we work together using your `contrib/msvc` build environment.

Please get a clean/fresh copy of the code.  Don't mix your current ball of stuff with ours.
I suggest that you work in the repos https://github.com/exiv2/exiv2 and sync up to the latest 0.27-maintenance code which includes `contrib/msvc`.  Then create a branch on your machine.

```
$ cd ..../where/you/work
$ git clone https://github.com/exiv2/exiv2 --branch 0.27-maintenance 0.27-maintenance --depth 1
$ cd 0.27-maintenance
$ git fetch --unshallow
$ git checkout -b sridharb1_sony2010e_0.27   # or CanonExifToolLensChanges (or something)
```

Build it with contrib/msvc/exiv2.sln.  Then we'll talk again.

Let's start with the smallest/simplest patch you'd like to prepare.  Together, we can do this.

------------------

For my own information, I've looked at the changes in #1009:
```
$ curl https://patch-diff.githubusercontent.com/raw/Exiv2/exiv2/pull/1009.patch > ~/temp/1009.patch
583 rmills@rmillsmbp:~/gnu/github/exiv2/0.27-maintenance $ git apply ~/temp/1009.patch 
/Users/rmills/temp/1009.patch:99: trailing whitespace.
	
/Users/rmills/temp/1009.patch:2348: trailing whitespace.
// ***************************************************************** -*- C++ -*-
/Users/rmills/temp/1009.patch:2349: trailing whitespace.
/*
/Users/rmills/temp/1009.patch:2350: trailing whitespace.
 * Copyright (C) 2004-2018 Exiv2 authors
/Users/rmills/temp/1009.patch:2351: trailing whitespace.
 * This program is part of the Exiv2 distribution.
error: patch failed: test/data/exiv2-test.out:1890
error: test/data/exiv2-test.out: patch does not apply
error: patch failed: tests/bugfixes/redmine/test_issue_1252.py:16
error: tests/bugfixes/redmine/test_issue_1252.py: patch does not apply
error: patch failed: src/canonmn_int.cpp:118
error: src/canonmn_int.cpp: patch does not apply
error: patch failed: tests/bugfixes/github/test_issue_981.py:6
error: tests/bugfixes/github/test_issue_981.py: patch does not apply
584 rmills@rmillsmbp:~/gnu/github/exiv2/0.27-maintenance $ 
```
Inside the patch, there are changes to 20 files.
```
$ grep -e ""--- a/"" ~/temp/1009.patch 
--- a/src/image.cpp
--- a/src/makernote_int.cpp
...
--- a/tests/bugfixes/github/test_issue_981.py
$
```
",True,True,43,262527.48333333334
Exiv2_____exiv2_____1009,2020-03-29T14:36:53Z,True,Exiv2_____exiv2_____1009_____605646436,"That's fine.

However, there is no need to mix two things here. My changes for compiling with VS can be kept separate from my feature of supporting the sony2010 tag.

I am currently working on getting you a clean pull request for sony2010.

I will look into the VS project files afterward.",True,True,43,262527.48333333334
ppy_____osu_____8483,2020-03-29T15:00:50Z,True,ppy_____osu_____8483_____399809541,Do you want a white paper like Bitcoin White Paper?,True,False,46,1404.4
ppy_____osu_____8483,2020-03-29T15:02:28Z,True,ppy_____osu_____8483_____399809718,"I think someone might confuse the 1,2 number iterations trust me, I'll leave it there.",True,False,46,1404.4
ppy_____osu_____8483,2020-03-29T15:05:00Z,True,ppy_____osu_____8483_____399810062,"Okay, that is the ceiling value for the speed which seperates spaced streams from jumps. Excors last stream section has the fastest spaced stream section near the end so I based this value on that. If you've seen faster spaced stream tell me so that I can fix it.",True,False,46,1404.4
ppy_____osu_____8483,2020-03-29T15:05:48Z,True,ppy_____osu_____8483_____399810158,I'll only buff fast velocity with positive acceleration streams.,True,False,46,1404.4
ppy_____osu_____8483,2020-03-29T15:06:22Z,True,ppy_____osu_____8483_____399810197,"> I'll only buff fast velocity with positive acceleration streams.

That is the reason for code complexity as well.",True,False,46,1404.4
ppy_____osu_____8483,2020-03-29T15:07:26Z,True,ppy_____osu_____8483_____399810329,Do you want me to change the names?,True,False,46,1404.4
ppy_____osu_____8483,2020-03-29T15:12:19Z,True,ppy_____osu_____8483_____399810985,"```
return ((1 + (speedBonus - 1) * 0.75) * angleBonus * (0.95 + speedBonus * Math.Pow(distance / single_spacing_threshold, 3.5)) / osuCurrent.StrainTime) + Math.Max(0, sdstrainmult);
```
... **+ Math.Max(0, sdstrainmult);**",True,False,46,1404.4
Exiv2_____exiv2_____1009,2020-03-29T15:16:31Z,True,Exiv2_____exiv2_____1009_____605652450,I have done this now. Please see #1126 and bring it into 0.27-maintenance. This does have two small fixes to image.cpp that are good for the distribution as well.,True,True,43,262527.48333333334
ppy_____osu_____8483,2020-03-29T15:19:51Z,True,ppy_____osu_____8483_____399811992,"...How is your comment helping? You've pasted in a long formula without explanation. I'd like to know *specific details of why this formula was chosen*. In a *human-readable* and *human-understandable* manner.

Please understand that this code has **zero** chance of getting merged if nobody else will be able to understand it afterwards.",True,False,46,1404.4
ppy_____osu_____8483,2020-03-29T15:21:43Z,True,ppy_____osu_____8483_____399812233,"That'd be a good first step, yes. Having names of the sort `variable` and `variable2` is one of the very basic examples of bad programming practice. Variable naming should be as descriptive as possible.",True,False,46,1404.4
ppy_____osu_____8483,2020-03-29T15:27:12Z,True,ppy_____osu_____8483_____399812940,"- osuCurrent.JumpDistance < 150 **=> Excors 9 star(s) Last stream**

- sectionvelocity < streamaimconst **=> Excors 9 star(s) Last stream**

- sectionvelocity > 0.9 **=> Packet Hero [Ruthless] nerf on slow acceleration changing stream**

- Previous.Count > 0 && osuCurrent.Angle != null **=> Initial checks if angle measurement possible or not.**

- osuCurrent.Angle.Value >= Math.PI / 2 **=> Streams must have angle greater that 90 degrees. ( Suggested by abraker )**

- osuCurrent.StrainTime < 100 ( Equivalent to 150 bpm streams-ish (Not exact due to Beat Snap Divisor ) **=> Consensus threshold for stream and jump seperation**

The full methodology and my work history is on Discord.",True,False,46,1404.4
ppy_____osu_____8483,2020-03-29T15:29:45Z,True,ppy_____osu_____8483_____399813267,"> Excors last stream section has the fastest spaced stream section near the end so I based this value on that.

And this is the whole issue - you're not supposed to rework the whole system based on what happens in *one* specific map. What happens if someone ranks a map with much more spaced streams? Do we have to change this value every single time the 'fastest ranked stream' changes?

A proper PP rework needs to be based on explainable formulas, with their potential effects on PP changes carefully studied for all kinds of maps.

Seeing the discussion which took place in the #difficulty-osu Discord channel, these changes were developed by taking a few hard maps from top ranks of high-level players and throwing around random solutions that happened to work on those specific maps. 

There were situations where values had to be adjusted to fit expectations on *one* specific map (or even play) and I think that shows best why it's a fundamentally flawed approach - you have to take *all* kinds of maps and plays into account, both very easy and very hard, plus everything inbetween, having a reason for every single change and making sure that it will work universally, not just for a very specific set of beatmaps.",True,False,46,1404.4
ppy_____osu_____8483,2020-03-29T15:30:43Z,True,ppy_____osu_____8483_____399813411,Yeah this explanation makes me opposed to this being merged at all ever. It's mostly based on seemingly random examples to nerf/buff specific maps as you see fit.,True,False,46,1404.4
ppy_____osu_____8483,2020-03-29T15:36:16Z,True,ppy_____osu_____8483_____399814136,"Pay for my cellular data, **tell me how to use osu-tools to aggregate data from data.ppy.sh** and I'll do that for you.",True,False,46,1404.4
ppy_____osu_____8483,2020-03-29T15:37:47Z,True,ppy_____osu_____8483_____399814335,$2.31/4GB of data,True,False,46,1404.4
ppy_____osu_____8483,2020-03-29T15:47:19Z,True,ppy_____osu_____8483_____399815564,"And no, I'm not being salty or sarcastic here, I've literally paid about $50 for data due to development reasons.",True,False,46,1404.4
ppy_____osu_____8483,2020-03-29T16:07:14Z,True,ppy_____osu_____8483_____399818146,"So let me get this straight, you made a proposal (unlike the already increasing amount of ideas) which uses arbitrary values, that would be alright if not for some evaluation and a lot of evidence. You used one [specific beatmap](https://osu.ppy.sh/beatmapsets/375201#osu/821785) just for spaced streams, which is loved and, yes there are other beatmaps that could have larger spaced streams. 
Also, your comeback to WildTree is a bit absurd, you requested the contributors to pay you $183 for a download of all of the osu tar files? That does sound like you were expecting everyone to help you out? They are just here to check over and see if it's good enough quality to be in the game. Well about that..

After checking the issues that are brought up, I'm guessing you're just a beginner at developing with osu! and tried your way to merge it into osu!lazer? (You were supposed to pull request on osu-performance), The whole system developed right now is supposed to be complicated, it has to have a flexible threshold just in case you have out-there maps that you didn't account for. 
You could have used a distance spacing threshold that depended on the bpm or density of the entire song/section.  Or a more complex method that I wouldn't have thought of. But right now, the tree is nowhere NEAR merge-able due to the incoherent equations/code (otherwise known as spaghetti code which is not a good thing), inadequate evidence to show your proposal actually working, multiple rookie mistakes along the way and some others. ",True,True,46,1404.4
ashuradev/ignitor/1,2020-03-31T14:48:44Z,False,5ea10b07bd354302fe2c83ab,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`.

If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",True,False,1,0.0
helpsupply/helpsupply/133,2020-03-31T18:14:16Z,False,5e8424aebd354365c371b37f,Looks like we can remove `Routes`,True,False,5,37.4
helpsupply/helpsupply/133,2020-03-31T18:15:15Z,False,5e8424abbd354364c2825f31,Is this `4` a placeholder?,True,False,5,37.4
helpsupply/helpsupply/133,2020-03-31T18:18:43Z,False,5e84249cbd35436624afb300,Does this need to be spread?,True,False,5,37.4
helpsupply/helpsupply/133,2020-03-31T18:49:11Z,False,5e842628bd354371dfa635c5,good catch 🕵  should be the request count,True,False,5,37.4
helpsupply/helpsupply/133,2020-03-31T18:51:40Z,False,5e84265abd354366785ee9a8,"it doesn't but i tend to do this with components that have the same keys as props as it doesn't look so redundant versus
```
dropSite={dropSite}
requests={requests}
...
```
and so on if it wasn't spread. for props that have different keys i don't usually put them in this object as I did with onDelete but would move it out as normal props are defined. so I could just pull that one out as `onDelete={deleteRequest}`

do we have a preference? i don't mind either way.",True,False,5,37.4
hashicorp/terraform/19178,2020-04-01T02:22:31Z,False,5e93dad2bd3543219db75431,"I'm going to lock this issue because it has been closed for _30 days_ ⏳. This helps our maintainers find and focus on the active issues.

If you have found a problem that seems similar to this, please open a new issue and complete the issue template so we can capture all the details necessary to investigate further.
",True,False,2,756413.7833333333
ppy_____osu_____8542,2020-04-01T11:46:26Z,True,ppy_____osu_____8542_____591853058,Fixes #7607.,True,True,1,0.0
tgstation_____tgstation_____50383,2020-04-04T09:17:57Z,True,tgstation_____tgstation_____50383_____593782141,"<!-- Write **BELOW** The Headers and **ABOVE** The comments else it may not be viewable. -->
<!-- You can view Contributing.MD for a detailed description of the pull request process. -->

## About The Pull Request

Adds radial menus to the RSF.
Makes RSF's modular to allow for better use. I may apply this to RCD's and the like at a later date.
Makes RCF's a subtype of RSF's, because that's dumb.
Allows for RSF's to radial menu into sublists. Code docs to come when I'm not nightcoding.

## Why It's Good For The Game

Makes code better(?), allows for modular expansion on the tool.

## Changelog
:cl:
add: RSF's now have a radial menu
balance: You can now kill yourself by dispensing cookies
refactor: RSF's are now modular
/:cl:

<!-- Both :cl:'s are required for the changelog to work! You can put your name to the right of the first :cl: if you want to overwrite your GitHub username as author ingame. -->
<!-- You can use multiple of the same prefix (they're only used for the icon ingame) and delete the unneeded ones. Despite some of the tags, changelogs should generally represent how a player might be affected by the changes rather than a summary of the PR's contents. -->
",True,True,38,28258.133333333335
tgstation_____tgstation_____50383,2020-04-06T06:10:13Z,True,tgstation_____tgstation_____50383_____609584927,Now I'm gonna have to change https://github.com/tgstation/tgstation/pull/50079 more nooooooooooooooooooooooooooooooooooooooooooooooooooooooooo,True,True,38,28258.133333333335
tgstation_____tgstation_____50383,2020-04-06T08:59:01Z,True,tgstation_____tgstation_____50383_____403932942,"```suggestion
		if((matter+matter_by_item[W.type]) > max_matter)
```
I think need check that we can fully add charge in. Or we can waste full 10 charge to one point.",True,False,38,28258.133333333335
tgstation_____tgstation_____50383,2020-04-06T09:07:00Z,True,tgstation_____tgstation_____50383_____403937971,"Very interesting way to create `item_list`
but why not make it global with one time populating?
And why not make this way of populating `item_list` for radal menu is `proc`?",True,False,38,28258.133333333335
tgstation_____tgstation_____50383,2020-04-06T09:10:59Z,True,tgstation_____tgstation_____50383_____403940446,"I think here need something like 
```suggestion
	else
		to_chat(user, ""<span class='warning'>Not enough [discriptor]!</span>"")

```",True,False,38,28258.133333333335
tgstation_____tgstation_____50383,2020-04-06T09:18:22Z,True,tgstation_____tgstation_____50383_____403944987,"Why not change it to 
```suggestion
	matter=min(matter+1, max_matter)
```",True,False,38,28258.133333333335
tgstation_____tgstation_____50383,2020-04-06T09:19:06Z,True,tgstation_____tgstation_____50383_____403945477,why d**E**spense ?,True,False,38,28258.133333333335
tgstation_____tgstation_____50383,2020-04-06T11:45:51Z,True,tgstation_____tgstation_____50383_____404027824,"typo
`var/to_dispense`
fix this for all other instances of this var",True,False,38,28258.133333333335
tgstation_____tgstation_____50383,2020-04-06T16:18:47Z,True,tgstation_____tgstation_____50383_____404219162,and in dmdoc,True,False,38,28258.133333333335
tgstation_____tgstation_____50383,2020-04-07T07:36:30Z,True,tgstation_____tgstation_____50383_____404598330,"yeah sure, I though the behavior was a bit odd, but I can understand why it's there.",True,False,38,28258.133333333335
tgstation_____tgstation_____50383,2020-04-07T07:37:41Z,True,tgstation_____tgstation_____50383_____404599059,"I'd prefer to not make it global because it doesn't allow for changes to be made. DItto on the one time populating, that would break sublists as well.

I will make it a proc though, thank you for the advice.",True,False,38,28258.133333333335
tgstation_____tgstation_____50383,2020-04-07T07:38:17Z,True,tgstation_____tgstation_____50383_____404599411,"use_matter() handles the text cues, maybe I should move that...",True,False,38,28258.133333333335
tgstation_____tgstation_____50383,2020-04-07T07:38:30Z,True,tgstation_____tgstation_____50383_____404599548,thank you. will do :),True,False,38,28258.133333333335
tgstation_____tgstation_____50383,2020-04-07T07:38:51Z,True,tgstation_____tgstation_____50383_____404599774,"I'm a dumbass, I'll fix it when I get to the rest of the issues here.",True,False,38,28258.133333333335
tgstation_____tgstation_____50383,2020-04-07T13:23:57Z,True,tgstation_____tgstation_____50383_____610384255,whoever decided that typing out rapid_service_fab was too long so they decided to just use rsf is really cringe.,True,True,38,28258.133333333335
scikit-build/cmake-python-distributions/50,2020-04-07T18:09:29Z,False,5e9c21c1bd35437196f4aa5c,Closing. This PR is obsolete.,True,False,2,848552.7333333333
tgstation_____tgstation_____50383,2020-04-09T06:53:23Z,True,tgstation_____tgstation_____50383_____611362628,Thank ya dennok :),True,True,38,28258.133333333335
HippieStation_____PRMirror_____16,2020-04-09T09:58:00Z,True,HippieStation_____PRMirror_____16_____406092990,made it into a config option,True,False,19,209551.81666666668
HippieStation_____PRMirror_____16,2020-04-09T09:58:09Z,True,HippieStation_____PRMirror_____16_____406093092,done,True,False,19,209551.81666666668
HippieStation_____PRMirror_____16,2020-04-09T09:58:49Z,True,HippieStation_____PRMirror_____16_____406093491,"I added some more error handling for this, other than that I don't really know how to improve it further, given my experience with go. ",True,False,19,209551.81666666668
BeeStation_____BeeStation-Hornet_____1509,2020-04-09T23:15:13Z,True,BeeStation_____BeeStation-Hornet_____1509_____597606073,"Fixed some garbage spiked code stuff and added auto brewery symptom that is now much less rng based

good for game, viro needs more random shit, maybe auto brew is a good random medical condition kinda like how appendicitis is treated but someone else can decide that. 

## Changelog
:cl:
add auto brew
fix spiked
/:cl:

<!-- Both :cl:'s are required for the changelog to work! You can put your name to the right of the first :cl: if you want to overwrite your GitHub username as author ingame. -->
<!-- You can use multiple of the same prefix (they're only used for the icon ingame) and delete the unneeded ones. Despite some of the tags, changelogs should generally represent how a player might be affected by the changes rather than a summary of the PR's contents. -->
",True,True,13,7189.2
BeeStation_____BeeStation-Hornet_____1509,2020-04-09T23:15:13Z,True,BeeStation_____BeeStation-Hornet_____1509_____401687718,"Fixed some garbage spiked code stuff and added auto brewery symptom that is now much less rng based

good for game, viro needs more random shit, maybe auto brew is a good random medical condition kinda like how appendicitis is treated but someone else can decide that. 

## Changelog
:cl:
add auto brew
fix spiked
/:cl:

<!-- Both :cl:'s are required for the changelog to work! You can put your name to the right of the first :cl: if you want to overwrite your GitHub username as author ingame. -->
<!-- You can use multiple of the same prefix (they're only used for the icon ingame) and delete the unneeded ones. Despite some of the tags, changelogs should generally represent how a player might be affected by the changes rather than a summary of the PR's contents. -->
",True,True,13,7189.2
BeeStation_____BeeStation-Hornet_____1509,2020-04-10T01:28:34Z,True,BeeStation_____BeeStation-Hornet_____1509_____406560218,"diseases have a power var at default, which is,  at base, 1",True,False,13,7189.2
BeeStation_____BeeStation-Hornet_____1509,2020-04-10T01:28:53Z,True,BeeStation_____BeeStation-Hornet_____1509_____406560308,bring base severity down to 2,True,False,13,7189.2
BeeStation_____BeeStation-Hornet_____1509,2020-04-10T01:29:35Z,True,BeeStation_____BeeStation-Hornet_____1509_____406560479,"add a severitystart proc for the dynamic severity refactor, with +1 severity for each threshold",True,False,13,7189.2
BeeStation_____BeeStation-Hornet_____1509,2020-04-10T01:34:36Z,True,BeeStation_____BeeStation-Hornet_____1509_____406561487,"check Fever code and how the proc is done: the Power var measures intensity, and the dangerous var allows it to go lethal. ",True,False,13,7189.2
BeeStation_____BeeStation-Hornet_____1509,2020-04-10T02:41:29Z,True,BeeStation_____BeeStation-Hornet_____1509_____406576740,"i'd totally change this up honestly. As i said before, make it not synthesize alcohol above a certain threshold
(both Volume and Alcohol power influence drunkness and alcohol damage. drunkenness per second is calculated this way: square root of volume * booze_power * [0.005], and liver damage per tick is calculated this way: (square root of volume * (boozepwr ** [1.6]) * [0.005])/150. I'd suggest making the disease ONLY modify drunkness unless lethal, and cap it similarly.",True,False,13,7189.2
BeeStation_____BeeStation-Hornet_____1509,2020-04-10T02:41:59Z,True,BeeStation_____BeeStation-Hornet_____1509_____406576842,why are you removing these,True,False,13,7189.2
BeeStation_____BeeStation-Hornet_____1509,2020-04-10T19:36:19Z,True,BeeStation_____BeeStation-Hornet_____1509_____406910375,because A.affected_mob is already declared so not point in writing it again?,True,False,13,7189.2
BeeStation_____BeeStation-Hornet_____1509,2020-04-10T20:00:44Z,True,BeeStation_____BeeStation-Hornet_____1509_____612193749,"im gonna leave it as it is because it works well and has no real issues anyone can feel free to change it tho but i like how it is
",True,True,13,7189.2
BeeStation_____BeeStation-Hornet_____1509,2020-04-10T20:56:30Z,True,BeeStation_____BeeStation-Hornet_____1509_____406940608,"...this line makes A.affected_mob M. shorthand to make shit easier, there's a reason almost eveyrthing uses this shit",True,True,13,7189.2
BeeStation_____BeeStation-Hornet_____1509,2020-04-10T20:57:01Z,True,BeeStation_____BeeStation-Hornet_____1509_____612213479,"> im gonna leave it as it is because it works well and has no real issues anyone can feel free to change it tho but i like how it is

as it stands, i'm not gonna put this up to vote, it's simply not in a suitable state",True,True,13,7189.2
BeeStation_____BeeStation-Hornet_____1509,2020-04-14T23:04:25Z,True,BeeStation_____BeeStation-Hornet_____1509_____613723419,"> im gonna leave it as it is because it works well and has no real issues anyone can feel free to change it tho but i like how it is

Yeah that's not how it works.",True,True,13,7189.2
bcgov/cas-shipit/57,2020-04-15T11:15:01Z,False,5e9fb8f6bd354336ede41897,"Kudos, SonarCloud Quality Gate passed!

[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug.png' alt='Bug' width='16' height='16' />](https://sonarcloud.io/project/issues?id=bcgov_cas-shipit&pullRequest=57&resolved=false&types=BUG) [<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A.png' alt='A' width='16' height='16' />](https://sonarcloud.io/project/issues?id=bcgov_cas-shipit&pullRequest=57&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=bcgov_cas-shipit&pullRequest=57&resolved=false&types=BUG)  
[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability.png' alt='Vulnerability' width='16' height='16' />](https://sonarcloud.io/project/issues?id=bcgov_cas-shipit&pullRequest=57&resolved=false&types=VULNERABILITY) [<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A.png' alt='A' width='16' height='16' />](https://sonarcloud.io/project/issues?id=bcgov_cas-shipit&pullRequest=57&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=bcgov_cas-shipit&pullRequest=57&resolved=false&types=VULNERABILITY) (and [<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot.png' alt='Security Hotspot' width='16' height='16' />](https://sonarcloud.io/project/issues?id=bcgov_cas-shipit&pullRequest=57&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/issues?id=bcgov_cas-shipit&pullRequest=57&resolved=false&types=SECURITY_HOTSPOT) to review)  
[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell.png' alt='Code Smell' width='16' height='16' />](https://sonarcloud.io/project/issues?id=bcgov_cas-shipit&pullRequest=57&resolved=false&types=CODE_SMELL) [<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A.png' alt='A' width='16' height='16' />](https://sonarcloud.io/project/issues?id=bcgov_cas-shipit&pullRequest=57&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=bcgov_cas-shipit&pullRequest=57&resolved=false&types=CODE_SMELL)

[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo.png' alt='No Coverage information' width='16' height='16' />](https://sonarcloud.io/component_measures?id=bcgov_cas-shipit&pullRequest=57) No Coverage information  
[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo.png' alt='No Duplication information' width='16' height='16' />](https://sonarcloud.io/component_measures?id=bcgov_cas-shipit&pullRequest=57&metric=duplicated_lines_density&view=list) No Duplication information

",True,False,3,141686.45
raplima/udacity_drln-p1_navigation/1,2020-04-16T13:59:01Z,False,5ea04219bd35434387ea9fb0,"Looks like tensorflow is up-to-date now, so this is no longer needed.",True,False,1,0.0
expressjs_____session_____708,2020-04-17T00:26:15Z,True,expressjs_____session_____708_____409923719,"This is destroying the session, not the session store",True,True,29,358951.0333333333
expressjs_____session_____708,2020-04-17T00:26:33Z,True,expressjs_____session_____708_____409923772,"this destroys the session, not the store",True,True,29,358951.0333333333
expressjs_____session_____708,2020-04-17T00:27:49Z,True,expressjs_____session_____708_____409924176,"this should probably be placed in conjunction with the saving log, as the session can be saved from many different places",True,True,29,358951.0333333333
Rtogoev/OtusSpring/6,2020-04-17T04:40:08Z,False,5e9a0046bd3543073ad0fd13,"Совсем забыл сказать, что лучше, конечно, назвать author - так более естественнее, когда будет написано `author.id`",True,False,16,82.16666666666667
Rtogoev/OtusSpring/6,2020-04-17T04:48:46Z,False,5e9a0046bd354375342d3876,"Вот `@Column` на `name` поставили, а на это поле - нет)",True,False,16,82.16666666666667
Rtogoev/OtusSpring/6,2020-04-17T04:49:03Z,False,5e9a006fbd35437ddc472d4d,"Если уж ставить, то везде)",True,False,16,82.16666666666667
Rtogoev/OtusSpring/6,2020-04-17T04:51:55Z,False,5e9a0043bd35430192e0cbe4,"Ох, вот лучше по возможности Lazy использовать, там где возможно.",True,False,16,82.16666666666667
Rtogoev/OtusSpring/6,2020-04-17T04:56:04Z,False,5e9a003cbd35437fcc0b1b06,"Ага) Можно последовать заветам Александра - ""Открываю книгу - вижу автора, а комментария не вижу"")",True,False,16,82.16666666666667
Rtogoev/OtusSpring/6,2020-04-17T04:56:13Z,False,5e9a0044bd35437d08dbb2d7,Круто!,True,False,16,82.16666666666667
Rtogoev/OtusSpring/6,2020-04-17T04:57:30Z,False,5e9a0055bd35437cc3e37366,Тогда уж areAutorsAreEqual),True,False,16,82.16666666666667
Rtogoev/OtusSpring/6,2020-04-17T05:29:08Z,False,5e9a004ebd354375c2e91e77,"Ага, вот поэтому и понадобился и EAGER.
1. Рекомендуется ставить на сервис - тогда транзакция откроется в сервисе и не придётся ставить EAGER в Entity.
2. Рекомендуется ставить на каждый метод, а не на на класс целиком. Так и проще сделать readonly-транзакции для методов чтения.",True,False,16,82.16666666666667
Rtogoev/OtusSpring/6,2020-04-17T05:38:30Z,False,5e9a0053bd3543762627967c,"1. Предлагаю называть дальше метод findByName - это в любом случае в следующем ДЗ понадобится)
2. Да, и в будущем здесь будет коллекция)",True,False,16,82.16666666666667
Rtogoev/OtusSpring/6,2020-04-17T05:39:46Z,False,5e9a0048bd3543031c3a04f4,"И вот тогда уж Optional или пустую коллекцию.
Нужно стараться не возвращать null",True,False,16,82.16666666666667
Rtogoev/OtusSpring/6,2020-04-17T05:41:32Z,False,5e9a0046bd354308d40f7855,"Да, и select лучше уж тогда пометить `@Transactional(readonly=true)` ",True,False,16,82.16666666666667
Rtogoev/OtusSpring/6,2020-04-17T05:59:00Z,False,5e9a0049bd35437827f14ee0,"Вот, кстати, можно создание коллекции перенести в поле класса Book.
И тогда не придётся создавать.",True,False,16,82.16666666666667
Rtogoev/OtusSpring/6,2020-04-17T05:59:10Z,False,5e9a005cbd354301c2210eef,Отлично!,True,False,16,82.16666666666667
Rtogoev/OtusSpring/6,2020-04-17T06:00:42Z,False,5e9a004abd35437e50f7390f,"Ну, кстати, ещё и нужно нужно отключить трнзакции - это произойдёт в рамках транзакции, которую откатят.",True,False,16,82.16666666666667
Rtogoev/OtusSpring/6,2020-04-17T06:01:56Z,False,5e9a004bbd354302115f3efe,"Вот это интеграционный тест - мне кажется, проще его сделать через `@SpringBootTest`",True,False,16,82.16666666666667
Rtogoev/OtusSpring/6,2020-04-17T06:02:18Z,False,5e9a0041bd354379729733d0,или протестировать через `MockitoExtension`,True,False,16,82.16666666666667
tgstation_____tgstation_____50383,2020-04-18T00:09:30Z,True,tgstation_____tgstation_____50383_____615517687,"This PR has been inactive for long enough to be automatically marked as stale. This means it is at risk of being auto closed in ~ 7 days, please address any outstanding review items and ensure your PR is finished, if these are all true and you are auto-staled anyway, you need to actively ask maintainers if your PR will be merged. Once you have done any of the previous actions then you should request a maintainer remove the stale label on your PR, to reset the stale timer. If you feel no maintainer will respond in that time, you may wish to close this PR youself, while you seek maintainer comment, as you will then be able to reopen the PR yourself",True,True,38,28258.133333333335
simdjson_____simdjson_____740,2020-04-19T23:29:37Z,True,simdjson_____simdjson_____740_____602850840,"1) **Amalgamate src/simdjson.cpp as-is**

amalgamation.sh shouldn't change contents of src/simdjson.cpp by forcing dmalloc.h that didn't exist in non-amalgamated version and shouldn't change order of includes by placing simdjson.h at the top

2) **Do not modify amalgamation_demo.cpp from amalgamation.sh**

and update amalgamated headers",True,True,30,9588.316666666668
simdjson_____simdjson_____740,2020-04-20T08:50:45Z,True,simdjson_____simdjson_____740_____616405907,"as a side note, if anybody checks out with crlf and tries to run  amalgamation.sh from [msys2](https://www.msys2.org/), the result will be quite messed up",True,True,30,9588.316666666668
simdjson_____simdjson_____740,2020-04-20T11:51:15Z,True,simdjson_____simdjson_____740_____616502303,">amalgamation.sh shouldn't change contents of src/simdjson.cpp by forcing dmalloc.h that didn't exist in non-amalgamated version and shouldn't change order of includes by placing simdjson.h at the top

That's feels sensible. The amalgamation script should change as little as possible from the input code.

> Do not modify amalgamation_demo.cpp from amalgamation.sh

Why not?

The rationale for the current setup is that everything in the singleheader repository is a generated artefact. With your proposal, we would have a mix of files which are automatically generated and files that are hand-written.

This mix of automatically generated and hand-coded files in the same directory is something you feel is desirable?",True,True,30,9588.316666666668
simdjson_____simdjson_____740,2020-04-20T16:20:03Z,True,simdjson_____simdjson_____740_____411512513,typo inlcude -> include,True,False,30,9588.316666666668
simdjson_____simdjson_____740,2020-04-20T16:24:44Z,True,simdjson_____simdjson_____740_____411515949,"Oh, this is so that #include ""simdjson.h"" happens at the beginning of simdjson.cpp, in all cases?

How did anything ever work?? I assume it's because each of the .cpp files includes their own header files?

If that's the case, perhaps the right thing to do is remove #include ""simdjson.h"" from the top of simdjson.cpp?

Either way, this is a super good catch!",True,False,30,9588.316666666668
simdjson_____simdjson_____740,2020-04-20T16:26:58Z,True,simdjson_____simdjson_____740_____411517570,"I'm actually super OK with this, I just blithely kept the copy out of momentum. @lemire are we OK with not putting amalgamation_demo into the produced library anymore?

We should remove the amalgamation_demo.cpp from singleheader as well, if so.",True,False,30,9588.316666666668
simdjson_____simdjson_____740,2020-04-20T16:46:03Z,True,simdjson_____simdjson_____740_____411531142,"> We should remove the amalgamation_demo.cpp from singleheader as well, if so.


I don't understand. This makes it so that the script does not create the demo program. If we do not include it, how are we going to run checks on the single-header code? Of course, we could compile some other piece of code.",True,False,30,9588.316666666668
monowai/beancounter/223,2020-04-20T21:32:58Z,False,5ea1e3dbbd354374c0cfd7e1,"# [Codecov](https://codecov.io/gh/monowai/beancounter/pull/223?src=pr&el=h1) Report
> Merging [#223](https://codecov.io/gh/monowai/beancounter/pull/223?src=pr&el=desc) into [master](https://codecov.io/gh/monowai/beancounter/commit/912beee26807b2fb09897d64ae964981308ed10b&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/monowai/beancounter/pull/223/graphs/tree.svg?width=650&height=150&src=pr&token=hpY2LfQWnX)](https://codecov.io/gh/monowai/beancounter/pull/223?src=pr&el=tree)

```diff
@@            Coverage Diff            @@
##             master     #223   +/-   ##
=========================================
  Coverage     90.31%   90.31%           
  Complexity      691      691           
=========================================
  Files           119      119           
  Lines          2147     2147           
  Branches        194      194           
=========================================
  Hits           1939     1939           
  Misses          123      123           
  Partials         85       85           
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/monowai/beancounter/pull/223?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/monowai/beancounter/pull/223?src=pr&el=footer). Last update [912beee...514a5c0](https://codecov.io/gh/monowai/beancounter/pull/223?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",True,False,2,2110.516666666667
simdjson_____simdjson_____740,2020-04-20T23:13:38Z,True,simdjson_____simdjson_____740_____616858775,"Ok. I think that the issue to resolve is whether we want to continue having the script generate amalgamation_demo.cpp or not.

The options are...

1. We keep things as they are. If it ain't broken, don't fix it.

2. We remove amalgamation_demo.cpp entirely. We do not really need it. Instructions need to change, but that's a small thing.

3. We keep amalgamation_demo.cpp in some form. The current form won't do... have a look at it, it says that it is automatically generated.


I think that what does this PR (which we want to merge) is not quite correct. It does not fit into 1, 2, 3. Rather it is ...

4. Keep amalgamation_demo.cpp as it is, as a file that is labeled as automatically generated.



I am not exactly sure why ""1"" is not the best option here. 

Again: I openly discourage changes without identifiable benefits. We don't want to change things on a whim. ",True,True,30,9588.316666666668
simdjson_____simdjson_____740,2020-04-21T05:02:59Z,True,simdjson_____simdjson_____740_____411871065,"The demo program is always constant. script shouldn't generate it from the start. In this PR there are two commits, one removes that generation of amalgamation_demo.cpp, perhaps, it should later be moved to examples or some other folder out of singleheader dir",True,False,30,9588.316666666668
simdjson_____simdjson_____740,2020-04-21T05:07:38Z,True,simdjson_____simdjson_____740_____411872536,"So, the reason it all works: 
amalgamation first builds simdjson.h, and adds all the headers to the list of processed headers, and then when simdjson.cpp is built, all these headers from list of processed are skipped including simdjson.h. As, I've mentioned in [Do not inline file IO functions](https://github.com/simdjson/simdjson/pull/741) PR, I wanted to add `_CRT_SECURE_NO_WARNINGS`, which must be at the top of simdjson.cpp before any other headers, and because of the way amalgamation was done, it forces simdjson.h to be at the top. This PR addresses it, and makes sure that amalgamated simdjson.cpp is identical to the original.

",True,False,30,9588.316666666668
simdjson_____simdjson_____740,2020-04-21T05:12:50Z,True,simdjson_____simdjson_____740_____616956145,"> 2. We remove amalgamation_demo.cpp entirely. We do not really need it. Instructions need to change, but that's a small thing.

IMO, amalgamated or not, it shouldn't matter to the users. Results must be identical. That is, any other demo should work effectively the same well regardless if the source was amalgamated or not.
The only difference, is that it include simdjson.cpp to avoid compiling simdjson.cpp separately. Test one-liner cmd to build demo could instead list two cpp files to generate test executable.

",True,True,30,9588.316666666668
simdjson_____simdjson_____740,2020-04-21T18:02:42Z,True,simdjson_____simdjson_____740_____617322762,"@lemire note that you can presently do this to run *all* tests against the amalgamated headers:

```
SIMDJSON_TEST_AMALGAMATED_HEADERS=1 make test
```

I'd be sympathetic to a change that removed amalgamation_demo and added the above to CI, for that reason.

One concrete reason amalgamation_demo sometimes causes me issues is when I change the base DOM API, add deprecations, etc., the amalgamation script doesn't show up when I do a ""Find In Files"" .cpp / .h. Having all our C++ code in .cpp and .h files is nice for editors. It's not big enough that I'd feel like making a fuss about it, though.

The primary reason we'd *want* amalgamation_demo.cpp is if we wanted to *ship* it with the header files as a sort of quickstart. I'm on board with that!",True,True,30,9588.316666666668
monowai/beancounter/223,2020-04-22T08:43:29Z,False,5ea37e6cbd35430b06f36af6,"Looks like pretty-format is up-to-date now, so this is no longer needed.",True,False,2,2110.516666666667
tgstation_____tgstation_____50383,2020-04-22T19:46:53Z,True,tgstation_____tgstation_____50383_____413273180,"When would this proc be called without a `user`?
Add a `CRASH` instead of a `return` if you think this could ever happen, else you are making it silently error.",True,False,38,28258.133333333335
tgstation_____tgstation_____50383,2020-04-22T19:54:22Z,True,tgstation_____tgstation_____50383_____413280955,"Why do you have this `while` loop here?
`show_radial_menu` will already pause the proc on its own",True,False,38,28258.133333333335
tgstation_____tgstation_____50383,2020-04-22T19:55:32Z,True,tgstation_____tgstation_____50383_____413282134,"```suggestion
	if(islist(input))
```",True,False,38,28258.133333333335
tgstation_____tgstation_____50383,2020-04-22T19:56:16Z,True,tgstation_____tgstation_____50383_____413282740,"```suggestion
		return new temp()
```",True,False,38,28258.133333333335
tgstation_____tgstation_____50383,2020-04-22T19:57:11Z,True,tgstation_____tgstation_____50383_____413283322,"```suggestion
	return new input()
```",True,False,38,28258.133333333335
tgstation_____tgstation_____50383,2020-04-22T19:57:31Z,True,tgstation_____tgstation_____50383_____413283527,"```suggestion
```",True,False,38,28258.133333333335
tgstation_____tgstation_____50383,2020-04-22T19:58:35Z,True,tgstation_____tgstation_____50383_____413284203,Can this realistically happen? Make it `CRASH` if so.,True,False,38,28258.133333333335
tgstation_____tgstation_____50383,2020-04-22T19:58:58Z,True,tgstation_____tgstation_____50383_____413284498,"```suggestion
		playsound(loc, 'sound/machines/click.ogg', 10, TRUE)
```",True,False,38,28258.133333333335
tgstation_____tgstation_____50383,2020-04-22T19:59:44Z,True,tgstation_____tgstation_____50383_____413285471,Early return.,True,False,38,28258.133333333335
tgstation_____tgstation_____50383,2020-04-22T20:00:56Z,True,tgstation_____tgstation_____50383_____413286290,"Could you make it stop processing once it reaches max capacity, and restart when it goes under max?",True,False,38,28258.133333333335
tgstation_____tgstation_____50383,2020-04-22T20:50:42Z,True,tgstation_____tgstation_____50383_____413323261,"So, what is this cooldown used for now?",True,False,38,28258.133333333335
simdjson_____simdjson_____740,2020-04-23T02:02:19Z,True,simdjson_____simdjson_____740_____618132735,Note that this PR looks to be obsolete given @jkeiser's recent work.,True,True,30,9588.316666666668
simdjson_____simdjson_____740,2020-04-23T03:55:49Z,True,simdjson_____simdjson_____740_____618162054,"> Note that this PR looks to be obsolete given @jkeiser's recent work.

In what way? The problem was not addressed in any way, lots of changes were done to conflict with the PR, and all these changes likely were happening after the PR was started. The main point of the PR: ""Make amalgamated functionally equivalent to src/simdjson.cpp"" - this problem exists, was not taken care of in any way. Why other changes to move it, and related to amalgamation_demo.cpp were done before taking a fix to amalgamation.sh?

The point of PRs  and contributions, as I see it, is to accept them, or ask for changes and accept them. Not to start doing the same/similar/conflicting work on raised subjects.
",True,True,30,9588.316666666668
simdjson_____simdjson_____740,2020-04-23T05:02:43Z,True,simdjson_____simdjson_____740_____618179399,"The relevant PR was done 5 days ago (before this PR) and just took a while to review. It doesn't attempt to address the problems herein,",True,True,30,9588.316666666668
simdjson_____simdjson_____740,2020-04-23T05:03:45Z,True,simdjson_____simdjson_____740_____618179659,"#729.

Sorry about the conflict.",True,True,30,9588.316666666668
bisq-network_____bisq_____4191,2020-04-23T07:38:07Z,True,bisq-network_____bisq_____4191_____605310703,"Official project URL: https://an.gold
Official block explorer URL: https://etherscan.io/token/0x130914E1B240a7F4c5D460B7d3a2Fd3846b576fa",True,True,1,0.0
tgstation_____tgstation_____50383,2020-04-23T23:48:01Z,True,tgstation_____tgstation_____50383_____414197787,I'll get rid of it. I think it's either a legacy of the rsf or of the rcd. Not sure what it was put in to prevent.,True,False,38,28258.133333333335
tgstation_____tgstation_____50383,2020-04-23T23:52:47Z,True,tgstation_____tgstation_____50383_____414199508,"it's a limiter on the cookie output of the thing. It's actually a bit too long, as it outstrips the process, and makes the whole recharging bit moot.",True,False,38,28258.133333333335
tgstation_____tgstation_____50383,2020-04-23T23:52:58Z,True,tgstation_____tgstation_____50383_____414199549,Sure,True,False,38,28258.133333333335
tgstation_____tgstation_____50383,2020-04-23T23:56:58Z,True,tgstation_____tgstation_____50383_____414201057,I thought I was. Do you want me to move the bit at the end into each if/else block or something?,True,False,38,28258.133333333335
tgstation_____tgstation_____50383,2020-04-23T23:58:12Z,True,tgstation_____tgstation_____50383_____414201503,See the other discussion about CRASH. It's a holdover from the RCD radial code.,True,False,38,28258.133333333335
tgstation_____tgstation_____50383,2020-04-23T23:58:52Z,True,tgstation_____tgstation_____50383_____414201739,yep,True,False,38,28258.133333333335
tgstation_____tgstation_____50383,2020-04-23T23:58:55Z,True,tgstation_____tgstation_____50383_____414201763,yep,True,False,38,28258.133333333335
tgstation_____tgstation_____50383,2020-04-24T00:00:52Z,True,tgstation_____tgstation_____50383_____414202368,"It's to allow for sublists. If the entry we find in the list is a list, we do the whole process again until the user finds an object to print.",True,False,38,28258.133333333335
tgstation_____tgstation_____50383,2020-04-24T00:02:48Z,True,tgstation_____tgstation_____50383_____414203048,yep,True,False,38,28258.133333333335
tgstation_____tgstation_____50383,2020-04-24T00:16:05Z,True,tgstation_____tgstation_____50383_____618734577,"Ok fucking hell github. I'm reopening this pr so I can actually push some changes
",True,True,38,28258.133333333335
google/intermock/28,2020-04-24T14:27:11Z,False,5ea491f7bd35436eb2402e33,"
Thanks for your pull request. It looks like this may be your first contribution to a Google open source project (if not, look below for help). Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).

:memo: **Please visit <https://cla.developers.google.com/> to sign.**

Once you've signed (or fixed any issues), please reply here with `@googlebot I signed it!` and we'll verify it.

----

#### What to do if you already signed the CLA

##### Individual signers

*   It's possible we don't have your GitHub username or you're using a different email address on your commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).

##### Corporate signers

*   Your company has a Point of Contact who decides which employees are authorized to participate. Ask your POC to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the Google project maintainer to [go/cla#troubleshoot](http://go/cla#troubleshoot) ([Public version](https://opensource.google/docs/cla/#troubleshoot)).
*   The email used to register you as an authorized contributor must be the email used for the Git commit. Check [your existing CLA data](https://cla.developers.google.com/clas) and verify that your [email is set on your git commits](https://help.github.com/articles/setting-your-email-in-git/).
*   The email used to register you as an authorized contributor must also be [attached to your GitHub account](https://github.com/settings/emails).
		

ℹ️ **Googlers: [Go here](https://goto.google.com/prinfo/https%3A%2F%2Fgithub.com%2Fgoogle%2Fintermock%2Fpull%2F28) for more info**.

<!-- need_sender_cla -->",True,False,5,228.53333333333333
google/intermock/28,2020-04-24T14:28:14Z,False,5ea49202bd354363320c83dc,@googlebot I signed it!,True,False,5,228.53333333333333
google/intermock/28,2020-04-24T14:28:19Z,False,5ea45857bd3543080f948f87,"CLAs look good, thanks!

ℹ️ **Googlers: [Go here](https://goto.google.com/prinfo/https%3A%2F%2Fgithub.com%2Fgoogle%2Fintermock%2Fpull%2F28) for more info**.

<!-- ok -->",True,False,5,228.53333333333333
simdjson_____simdjson_____740,2020-04-24T15:18:24Z,True,simdjson_____simdjson_____740_____619074831,"So. I think we can find a way to *remove* amalgamate_demo.cpp now, if you're into that. We could compile quickstart with it instead of amalgamate_demo.cpp. That sidesteps any questions of whether all the files should be generated or not, and resolves the concern that unchanging source should be in .cpp files in the repository. I don't think we have any reason to keep it around at that point (@lemire might have a reason, I am just now bringing this up and am not speaking for him on this :))

@pps83 I still don't understand the dmalloc.h thing. Why are we adding that? I don't see it anywhere else in the repository, so it doesn't seem to be a parity thing to make amalgamation the same as the src/ files?",True,True,30,9588.316666666668
sveltejs_____community_____178,2020-04-24T17:03:40Z,True,sveltejs_____community_____178_____606457358,Adds a folder to gather links and logos for a _Who's using Sapper_ section as described in https://github.com/sveltejs/sapper/issues/1113,True,True,1,0.0
google/intermock/28,2020-04-24T18:14:55Z,False,5ea49cefbd354357941c021f,"This looks great, thank you so much! ",True,False,5,228.53333333333333
google/intermock/28,2020-04-24T18:15:43Z,False,5ea49cddbd354361ebfd5ab0,"Because of COVID-19, I'm not able to upload new releases to NPM because I'm not in the office. I'll do this as soon as I'm back there.",True,False,5,228.53333333333333
simdjson_____simdjson_____740,2020-04-24T23:23:48Z,True,simdjson_____simdjson_____740_____619278316,"1. I do not give a damn about the DMALLOC thing. This was added because someone on Twitter was insistent that simdjson was broken since it could not work with custom memory allocators.

2. I don't care about  amalgamate_demo.cpp. Burn it.",True,True,30,9588.316666666668
simdjson_____simdjson_____740,2020-04-25T07:29:21Z,True,simdjson_____simdjson_____740_____619335514,"> 1. I do not give a damn about the DMALLOC thing. This was added because someone on Twitter was insistant that simdjson was broken since it could not work with custom memory allocators.
> 2. I don't care about  amalgamate_demo.cpp. Burn it.

I agree on both.

DMALLOC most likely won't even work. simdjson.h itself doesn't use it. I guess that someone had no clue what they were doing. When I saw it, I was wondering how possibly it could work if it only affects simdjson.cpp. Perhaps, they had to add dmalloc always before the headers and in all impl files, otherwise it would try to allocate/deallocate with different allocators :)

amalgamate_demo shouldn't be specific to amalgamate. Regular demo should work the same with alamgamated or not version of simdjson.",True,True,30,9588.316666666668
simdjson_____simdjson_____740,2020-04-25T17:39:43Z,True,simdjson_____simdjson_____740_____619415264,"My impression of where we are:

- Keeping #include ""simdjson.h"" in simdjson.cpp is a positive change.
- Moving #include ""dmalloc.h"" to src/simdjson.cpp is necessary for compatibility, Thanks! I'm worried about removing it but also not opposed, if both of you think it's fine. Not for this, but if we support DMALLOC we should test it :) I honestly hadn't noticed it until now.
- Let's not move amalgamation_demo.cpp into the source tree with this change. The right change is to eliminate it altogether and compile quickstart against the amalgamated headers, but we shouldn't feel like we have to hold up this patch until it's done.",True,True,30,9588.316666666668
simdjson_____simdjson_____740,2020-04-25T17:42:25Z,True,simdjson_____simdjson_____740_____619415602,@jkeiser  +1,True,True,30,9588.316666666668
simdjson_____simdjson_____740,2020-04-25T22:25:30Z,True,simdjson_____simdjson_____740_____619448648,"I updated only amalgamate.sh to preserve simdjson.cpp as-is and moved dmalloc to simdjson.cpp. This way amalgamated and regular are now identical.

amalgamation_demo.cpp related change is removed from this PR",True,True,30,9588.316666666668
simdjson_____simdjson_____740,2020-04-25T23:00:55Z,True,simdjson_____simdjson_____740_____619451863,:+1:. Will give @lemire a chance to look at the final state before merging.,True,True,30,9588.316666666668
simdjson_____simdjson_____740,2020-04-25T23:04:45Z,True,simdjson_____simdjson_____740_____619452239,"If @jkeiser  approves, it is good enough. ",True,True,30,9588.316666666668
simdjson_____simdjson_____740,2020-04-25T23:25:46Z,True,simdjson_____simdjson_____740_____619454159,"@jkeiser FYI, some of the changes caused this:

![image](https://user-images.githubusercontent.com/1614246/80293079-0b186a80-877e-11ea-8a58-c11b1cd17f75.png)

amalgamated version used to have paths, now only names. `end file` message doesn't even show what file ends. I think it was better before (on the right in the screenshot is the way it used to be before). Note, this has nothing to do with this current PR",True,True,30,9588.316666666668
simdjson_____simdjson_____740,2020-04-25T23:54:19Z,True,simdjson_____simdjson_____740_____619456496,@pps83 This does look like a regression that we want to address. Can you open an issue?,True,True,30,9588.316666666668
simdjson_____simdjson_____740,2020-04-26T00:31:54Z,True,simdjson_____simdjson_____740_____619459781,"Oh, sorry, that must have been a stealth change. I changed it to show src or include prefix so that I could see where in our tree it came from. Happy to change it back though.",True,True,30,9588.316666666668
simdjson_____simdjson_____740,2020-04-26T00:33:47Z,True,simdjson_____simdjson_____740_____619459929,It was in with the changes when I made amalgamate work for Windows.,True,True,30,9588.316666666668
simdjson_____simdjson_____740,2020-04-26T00:57:23Z,True,simdjson_____simdjson_____740_____619461753,It might be nice to quickly determine the matching source file... useful for debugging.,True,True,30,9588.316666666668
betaflight/betaflight-configurator/1983,2020-04-26T12:42:30Z,False,5ea6460dbd354341a09e06e0,"Kudos, SonarCloud Quality Gate passed!

[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug.png' alt='Bug' width='16' height='16' />](https://sonarcloud.io/project/issues?id=betaflight_betaflight-configurator&pullRequest=1983&resolved=false&types=BUG) [<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A.png' alt='A' width='16' height='16' />](https://sonarcloud.io/project/issues?id=betaflight_betaflight-configurator&pullRequest=1983&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=betaflight_betaflight-configurator&pullRequest=1983&resolved=false&types=BUG)  
[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability.png' alt='Vulnerability' width='16' height='16' />](https://sonarcloud.io/project/issues?id=betaflight_betaflight-configurator&pullRequest=1983&resolved=false&types=VULNERABILITY) [<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A.png' alt='A' width='16' height='16' />](https://sonarcloud.io/project/issues?id=betaflight_betaflight-configurator&pullRequest=1983&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=betaflight_betaflight-configurator&pullRequest=1983&resolved=false&types=VULNERABILITY) (and [<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot.png' alt='Security Hotspot' width='16' height='16' />](https://sonarcloud.io/project/issues?id=betaflight_betaflight-configurator&pullRequest=1983&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/issues?id=betaflight_betaflight-configurator&pullRequest=1983&resolved=false&types=SECURITY_HOTSPOT) to review)  
[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell.png' alt='Code Smell' width='16' height='16' />](https://sonarcloud.io/project/issues?id=betaflight_betaflight-configurator&pullRequest=1983&resolved=false&types=CODE_SMELL) [<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A.png' alt='A' width='16' height='16' />](https://sonarcloud.io/project/issues?id=betaflight_betaflight-configurator&pullRequest=1983&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=betaflight_betaflight-configurator&pullRequest=1983&resolved=false&types=CODE_SMELL)

[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo.png' alt='No Coverage information' width='16' height='16' />](https://sonarcloud.io/component_measures?id=betaflight_betaflight-configurator&pullRequest=1983) No Coverage information  
[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/3.png' alt='0.0%' width='16' height='16' />](https://sonarcloud.io/component_measures?id=betaflight_betaflight-configurator&pullRequest=1983&metric=new_duplicated_lines_density&view=list) [0.0% Duplication](https://sonarcloud.io/component_measures?id=betaflight_betaflight-configurator&pullRequest=1983&metric=new_duplicated_lines_density&view=list)

",True,False,1,0.0
simdjson_____simdjson_____740,2020-04-26T15:17:56Z,True,simdjson_____simdjson_____740_____619568374,Happiness :),True,True,30,9588.316666666668
yugabyte_____yugabyte-db_____4307,2020-04-27T08:02:10Z,True,yugabyte_____yugabyte-db_____4307_____409323077,"Work remaining:

1. Add the explanations and code examples for the `array[]` constructor and the `string_to_array()` function. (Already prepared in draft.)

1. Finish the two sections _“The literal for a ‘row’ type value”_ and _“The literal for an array of ‘row’ type values”_. (I have the material in draft.)

2. Add a code example for `unnest` on a multidimensional array.

3. Show how to iterate over array values in PL/pgSQL using the `foreach` keyword.

4. Proof-read every file.

5. Re-check every code-example by copy-and-paste into _ysqlsh_. In particular, check that the results in the doc are correctly copied from the _ysqlsh_ output.

6. Run the spell-checker on each file.

I’d expect to finish this before anyone finishes their review.",True,True,185,13696.2
ICAREdata/icaredata-client/10,2020-04-27T21:44:31Z,False,5ea7cbbfbd35433a24ac185d,"The only question I have is if we're always guaranteed that violation message to exist and take that shape; wouldn't want a `property does not exist on undefined` error in our error handling code. If that's a guarantee, then this looks good to me! ",True,False,3,949.0333333333333
ICAREdata/icaredata-client/10,2020-04-28T12:20:08Z,False,5ea8ec0fbd354348fa3fba8b,"@Dtphelan1 yes the violation message is guaranteed to have that shape, which is why I didn't add any defined checks here. We set the text on that object in the array ourselves in the process message lambda.",True,False,3,949.0333333333333
ICAREdata/icaredata-client/10,2020-04-28T13:33:33Z,False,5ea8f421bd35430e01047b44,Perfect - thanks Jules!,True,False,3,949.0333333333333
opencv_____opencv_____17185,2020-04-29T10:29:11Z,True,opencv_____opencv_____17185_____410624326,"**Merge with extra:** opencv/opencv_extra#753
resolves: #17148 

### Pull Request Readiness Checklist

See details at https://github.com/opencv/opencv/wiki/How_to_contribute#making-a-good-pull-request

- [ ] I agree to contribute to the project under OpenCV (BSD) License.
- [ ] To the best of my knowledge, the proposed patch is not based on a code under GPL or other license that is incompatible with OpenCV
- [ ] The PR is proposed to proper branch
- [ ] There is reference to original bug report and related work
- [ ] There is accuracy test, performance test and test data in opencv_extra repository, if applicable
      Patch to opencv_extra has the same branch name.
- [ ] The feature is well documented and sample code can be built with the project CMake


```
force_builders=Custom,Custom Win,Custom Mac
build_image:Custom=ubuntu-openvino-2020.1.0:16.04
build_image:Custom Win=openvino-2020.2.0
build_image:Custom Mac=openvino-2020.2.0

test_modules:Custom=dnn,python2,python3,java
test_modules:Custom Win=dnn,python2,python3,java
test_modules:Custom Mac=dnn,python2,python3,java

buildworker:Custom=linux-1
# disabled due high memory usage: test_opencl:Custom=ON
test_opencl:Custom=OFF
test_bigdata:Custom=1
test_filter:Custom=*
```
**Performance tests**
**CPU:** Intel(R) Core(TM) i5-6500 CPU @ 3.20GHz
| CPU         | Backend | Before   | After    |
|-------------|---------|----------|----------|
| Yolov3      | nGraph  | 331.91   | 331.48   |
| Yolov3      | OpenCV  | 17210.52 | 14720.49 |
| TinyYoloVOC | nGraph  | 36.32    | 36.37    |
| TinyYoloVOC | OpenCV  | 1938.97  | 1661.04  |
| YoloVOC     | nGraph  | 130.95   | 130.56   |
| YoloVOC     | OpenCV  | 7917.9   | 6774.20  |
| YOLOv4      | nGraph  |     -    | 2795.87  |
| Yolov4      | OpenCV  |     -    | 14422.20 |",True,True,22,83544.73333333334
opencv_____opencv_____17185,2020-04-29T14:13:01Z,True,opencv_____opencv_____17185_____621237642,"Can you please describe what ""before"" and ""after"" means?",True,True,22,83544.73333333334
opencv_____opencv_____17185,2020-04-29T14:14:10Z,True,opencv_____opencv_____17185_____621238397,"> Yolov3 | OpenCV | 17210.52 | 14720.49

Have you used `perf_dnn` for  bahcnmarking? Seems incorrect for me

",True,True,22,83544.73333333334
opencv_____opencv_____17185,2020-04-29T14:16:13Z,True,opencv_____opencv_____17185_____417349670,What is the source of this new parameter?,True,True,22,83544.73333333334
opencv_____opencv_____17185,2020-04-29T14:24:19Z,True,opencv_____opencv_____17185_____621244860,"> Can you please describe what ""before"" and ""after"" means?

“Before” means the results of running performance tests before this PR changes (without Yolov4 support)",True,True,22,83544.73333333334
opencv_____opencv_____17185,2020-04-29T14:24:58Z,True,opencv_____opencv_____17185_____621245296,"> > Yolov3 | OpenCV | 17210.52 | 14720.49
> 
> Have you used `perf_dnn` for bahcnmarking? Seems incorrect for me

Yes, I used `perf_dnn`",True,True,22,83544.73333333334
opencv_____opencv_____17185,2020-04-29T14:26:50Z,True,opencv_____opencv_____17185_____417358075,"Maybe better
```cpp
float x_tmp = (logistic_activate(srcData[box_index + 0]) - 0.5f) * scale_x_y + 0.5f;
```",True,True,22,83544.73333333334
opencv_____opencv_____17185,2020-04-29T14:40:27Z,True,opencv_____opencv_____17185_____417369015,https://github.com/AlexeyAB/darknet/blob/36c73c5b9e3f2e72049fb68566e32632f6c70e85/src/activations.c#L150,True,True,22,83544.73333333334
opencv_____opencv_____17185,2020-04-30T10:07:55Z,True,opencv_____opencv_____17185_____417900291,Do we still need threshold or can revert layer?,True,True,22,83544.73333333334
opencv_____opencv_____17185,2020-04-30T18:56:04Z,True,opencv_____opencv_____17185_____622039526,Great to see that this is in the 3.4.11 milestone. Will this reach the 4.x branch as well?,True,True,22,83544.73333333334
anitab-org_____mentorship-flutter_____24,2020-04-30T20:20:18Z,True,anitab-org_____mentorship-flutter_____24_____418265410,these 2 should be removed and each bullet turned into issues,True,False,16,60.083333333333336
anitab-org_____mentorship-flutter_____24,2020-04-30T20:22:40Z,True,anitab-org_____mentorship-flutter_____24_____418266620,"I think this sentence is not needed, its a bit self deprecating. For example, what is top notch architecture!? There is always room for improvement in a project. Backend and Android aren't perfect and could have some refactoring, and that is fine :)
Let's keep this objective. if someone wishes to open an issue to improve the app, they'll do it anyways :) If you feel something is clearly missing you can even create the issue yourself, for someone to solve.",True,False,16,60.083333333333336
anitab-org_____mentorship-flutter_____24,2020-04-30T20:24:53Z,True,anitab-org_____mentorship-flutter_____24_____418267721,"Can you do the change to the CONTRIBUTING.md on another PR, you are mixing a lot of changes not related with the issue you are trying to solve, which is just about the README and not contributing guidelines. You can create an issue to improve the contributing guidelines and submit a PR for it. To help with this, its useful to create a branch per change you do, to be able to have parallel PRs with different commits associated.",True,False,16,60.083333333333336
anitab-org_____mentorship-flutter_____24,2020-04-30T20:25:13Z,True,anitab-org_____mentorship-flutter_____24_____418267892,well removed :),True,False,16,60.083333333333336
anitab-org_____mentorship-flutter_____24,2020-04-30T20:26:01Z,True,anitab-org_____mentorship-flutter_____24_____418268343,"can you also do these bumps in a separate PR, since this is not related to the README.",True,False,16,60.083333333333336
anitab-org_____mentorship-flutter_____24,2020-04-30T20:28:16Z,True,anitab-org_____mentorship-flutter_____24_____418269499,Maybe you can add a Contributing section here and include a text to highlight the CONTRIBUTING guidelines that should be read before starting to contribute. Also the reporting guidelines and code of conduct,True,False,16,60.083333333333336
anitab-org_____mentorship-flutter_____24,2020-04-30T20:31:49Z,True,anitab-org_____mentorship-flutter_____24_____418271363,"```suggestion
[Mentorship System](https://github.com/anitab-org/mentorship-backend) is an application that allows women in tech to mentor each other, on career development topics, through 1:1 relations for a certain period. This is the flutter client for this project.
```
I would avoid having AnitaB.org's because there are other platforms that AnitaB.org uses, and this is still in development and part of the open source community for now.",True,False,16,60.083333333333336
anitab-org_____mentorship-flutter_____24,2020-04-30T20:40:41Z,True,anitab-org_____mentorship-flutter_____24_____418276122,"Yeah, this makes sense :)
I'll change it.",True,False,16,60.083333333333336
anitab-org_____mentorship-flutter_____24,2020-04-30T20:43:26Z,True,anitab-org_____mentorship-flutter_____24_____418277489,^^,True,False,16,60.083333333333336
anitab-org_____mentorship-flutter_____24,2020-04-30T20:45:46Z,True,anitab-org_____mentorship-flutter_____24_____418278609,"can I say ""next time""? ;)
It's a really small bump",True,False,16,60.083333333333336
anitab-org_____mentorship-flutter_____24,2020-04-30T21:07:15Z,True,anitab-org_____mentorship-flutter_____24_____418289601,"I completely agree with you Isabel about too much stuff in this PR. But what would you say if  I (only in this PR ;) ) just changed PR title to ""update README and CONTRIBUTING""? 
I understand the strive for best practices but...just this small PR 🙄 ",True,True,16,60.083333333333336
anitab-org_____mentorship-flutter_____24,2020-04-30T21:07:38Z,True,anitab-org_____mentorship-flutter_____24_____418289784,I must sound unprofessional now hahah,True,False,16,60.083333333333336
anitab-org_____mentorship-flutter_____24,2020-04-30T21:11:40Z,True,anitab-org_____mentorship-flutter_____24_____418291711,Can I respond with 🤦 ? i'm thinking...,True,False,16,60.083333333333336
anitab-org_____mentorship-flutter_____24,2020-04-30T21:13:36Z,True,anitab-org_____mentorship-flutter_____24_____418292627,"> I understand the strive for best practices but...just this small PR

The ""but"" in that sentence... 🤣 I mean, do you want to follow best practices or nah?
Do you want to inspire the contributors to follow best practises, or will you be fine with them saying ""just this small PR""?",True,False,16,60.083333333333336
anitab-org_____mentorship-flutter_____24,2020-04-30T21:16:32Z,True,anitab-org_____mentorship-flutter_____24_____418294050,"If ... when we reach a level that this is deployed on production, you want to uphold these standards to your contributors who devote time to help you build the app, so that we minimize confusion in the commit history, we have small Pull Requests to easily review and test, have consistency in the way we develop the project and common guidelines for everyone to follow, etc...",True,False,16,60.083333333333336
anitab-org_____mentorship-flutter_____24,2020-04-30T21:20:23Z,True,anitab-org_____mentorship-flutter_____24_____418295958,"Oh no. 🤦😂 i agree with isabel now.
Also i don't think we need a PR  to bump the numbers specifically, as this is a small update let contributors bump the numbers when they update the flutter code.Maybe we can add a
[ ] have you updated the packages to their latest versions from pub.dev field? in the PR template?
What are your thoughts",True,False,16,60.083333333333336
opencv_____opencv_____17185,2020-05-01T08:53:43Z,True,opencv_____opencv_____17185_____622307080,"Thank you for your interest @rgov, @wooseokyourself! These PR changes will be merged into master branch next week.
",True,True,22,83544.73333333334
opencv_____opencv_____17185,2020-05-01T14:42:10Z,True,opencv_____opencv_____17185_____622415663,"Hi @l-bat , Can I know how to inference on video using OpenCV(cv2.dnn). I'm getting below error when trying to load. Please help with this. I'm using yolov4.cfg. 
`---------------------------------------------------------------------------
error                                     Traceback (most recent call last)
error: OpenCV(4.2.0) /io/opencv/modules/dnn/src/darknet/darknet_io.cpp:686: error: (-212:Parsing error) Unsupported activation: mish in function 'ReadDarknetFromCfgStream'


The above exception was the direct cause of the following exception:

SystemError                               Traceback (most recent call last)
<ipython-input-1-704183f19471> in <module>()
      1 import cv2 as cv
      2 
----> 3 net = cv.dnn_DetectionModel('/datadrive/INTERN/darknet/yolov4-custom.cfg', '/datadrive/INTERN/darknet/backup/yolov4-custom_6000.weights')
      4 net.setInputSize(416, 416)
      5 net.setInputScale(1.0 / 255)

SystemError: <class 'cv2.dnn_DetectionModel'> returned a result with an error set`  



`---------------------------------------------------------------------------
error                                     Traceback (most recent call last)
<ipython-input-3-716457c5e28a> in <module>()
     24 
     25 # Define network from configuration file and load the weights from the given weights file
---> 26 net = cv2.dnn.readNet(args['weights'],args['config'])
     27 
     28 

error: OpenCV(4.2.0) /io/opencv/modules/dnn/src/darknet/darknet_io.cpp:686: error: (-212:Parsing error) Unsupported activation: mish in function 'ReadDarknetFromCfgStream'`",True,True,22,83544.73333333334
opencv_____opencv_____17185,2020-05-01T14:47:43Z,True,opencv_____opencv_____17185_____622417729,"@sqiprasanna, please read all the messages carefully - you're trying to use OpenCV 4.2.0. We just merged the changes yesterday. ",True,True,22,83544.73333333334
opencv_____opencv_____17185,2020-05-01T16:01:34Z,True,opencv_____opencv_____17185_____622447778,"@l-bat @dkurt 
Is Yolov4 more than 2 times slower than Yolov3 due to MISH-activation?",True,True,22,83544.73333333334
opencv_____opencv_____17185,2020-05-01T16:24:31Z,True,opencv_____opencv_____17185_____622457028,"@l-bat Thanks for the reply. I just used this yolov4 for training on my custom dataset. It really worked well on detecting images. I'm more excited to test this model on real-time detection using OpenCV. As I see here you're trying to include yolov4 in OpenCV dnn. I just want to really appreciate the work you've done and would like to see adding yolov4 into OpenCV. 

Thank you again for your hard work. Have a nice day.

",True,True,22,83544.73333333334
opencv_____opencv_____17185,2020-05-01T17:49:31Z,True,opencv_____opencv_____17185_____622490787,"@AlexeyAB, it might be, yes. I'd like to recommend to open an issue for YOLOv4 optimization (some research with per-layer performance will be very helpful). Thanks!",True,True,22,83544.73333333334
HippieStation_____PRMirror_____16,2020-05-01T18:02:34Z,True,HippieStation_____PRMirror_____16_____622495904,@MCterra10 why you close,True,True,19,209551.81666666668
Aurorastation_____Aurora.3_____8800,2020-05-02T13:48:34Z,True,Aurorastation_____Aurora.3_____8800_____412454279,"Really do be like this, huh.

Todo:

- [ ] Examine the wreck and rework the shitcode I wrote to get things to compile.

- [ ] Maybe test motherships.

- [ ] Get the nicer overmap icons that were implemented while I was doing this.

- [ ] Computer screens for nav/helm/sensors.

- [ ] Try to find a way around for making nav/helm/sensors/engines vueUIs, because fuck me I don't wanna do that.

- [x] Unfuck the aurora map.",True,True,14,20523.9
Aurorastation_____Aurora.3_____8800,2020-05-02T19:49:42Z,True,Aurorastation_____Aurora.3_____8800_____419000090,well this is a sin. I'm surprised this compiles?,True,True,14,20523.9
Aurorastation_____Aurora.3_____8800,2020-05-02T19:56:44Z,True,Aurorastation_____Aurora.3_____8800_____419000845,"weird, no `if (..()) return` here? It's usually a security feature.",True,False,14,20523.9
Aurorastation_____Aurora.3_____8800,2020-05-02T19:57:22Z,True,Aurorastation_____Aurora.3_____8800_____419000883,this is fucking cursed code.,True,True,14,20523.9
Aurorastation_____Aurora.3_____8800,2020-05-02T20:44:11Z,True,Aurorastation_____Aurora.3_____8800_____419005751,I think it was there I just removed it by accident?,True,False,14,20523.9
archanak89/login/1,2020-05-03T00:53:37Z,False,5eaf78eebd35436f7aa1120d,Please resolve the conflicts,True,False,6,4.65
archanak89/login/1,2020-05-03T00:54:51Z,False,5eae18debd35431b33c4205a,"There's no title to the page, please add",True,False,6,4.65
archanak89/login/1,2020-05-03T00:55:58Z,False,5eae18d1bd35431ab24f4df4,"Please correct the href link, it cannot be an absolute path, it must be a relative path. If i clone this project to another location in my computer it will not work.",True,False,6,4.65
archanak89/login/1,2020-05-03T00:56:46Z,False,5eae1a43bd354317f6b940e9,"If your intent is to not have these commented code, please remove it.",True,False,6,4.65
archanak89/login/1,2020-05-03T00:57:33Z,False,5eae18e6bd354319f13d09b3,"Remove all these blank spaces, this observation is across the file",True,False,6,4.65
archanak89/login/1,2020-05-03T00:58:16Z,False,5eae18dcbd35431e116896cc,"Please remove absolute paths, relative paths are recommended",True,False,6,4.65
yugabyte_____yugabyte-db_____4307,2020-05-04T19:59:23Z,True,yugabyte_____yugabyte-db_____4307_____419691961,"```suggestion
isTocNested: true
showAsideToc: true
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T20:01:37Z,True,yugabyte_____yugabyte-db_____4307_____419693207,"```suggestion
The `array[]` value constructor is a special variadic function. Uniquely among all the functions described in this [Array data types and functionality](../../type_array/) section, it uses square brackets (`[]`) to surround its list of actual arguments.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T20:02:47Z,True,yugabyte_____yugabyte-db_____4307_____419693814,"```suggestion
**Purpose:** Create an array value from scratch using an expression for each of the array's values. Such an expression can itself use the `array[]` constructor or an [array literal](../literals/). 
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T20:07:09Z,True,yugabyte_____yugabyte-db_____4307_____419696187,"```suggestion
- The _[array_agg()](../functions-operators/array-agg-unnest/#array-agg)_ built-in SQL function creates an array (of, in general, an implied _""row""_ type) from a SQL subquery.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T20:07:55Z,True,yugabyte_____yugabyte-db_____4307_____419696597,"I'm leaning towards using ""predefined"" instead of ""built-in,"" but need to think a bit more about it.",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T20:08:16Z,True,yugabyte_____yugabyte-db_____4307_____419696757,"```suggestion
- The _[array_fill()](../functions-operators/array-fill/)_ built-in SQL function creates a ""blank canvas"" array of the specified shape with all values set the same to what you want.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T20:11:21Z,True,yugabyte_____yugabyte-db_____4307_____419698463,"```suggestion
Whenever an array value is shown in `ysqlsh`, it is implicitly `::text` typecasted. And this `text` value can be used immediately, simply by enquoting it and typecasting it to the appropriate array data type, to recreate the starting value. We refer to this form of the literal, characterized as you can see here by its complete lack of whitespace except within `text` scalar values (and within date-time scalar values), as the _canonical form_ of the literal. This term is defined formally in [Defining the canonical form of a literal](../literals/text-typecasting-and-literals/#defining-the-canonical-form-of-a-literal).
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T20:15:32Z,True,yugabyte_____yugabyte-db_____4307_____419700695,"```suggestion
To learn why you see four consecutive backslashes, see [Array literals](../literals/).
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T20:18:32Z,True,yugabyte_____yugabyte-db_____4307_____419702346,"```suggestion
- You can use all of YSQL's array functionality in PL/pgSQL code, just as you can in SQL statements. The code creates and invokes a table function, and not just a `DO` block, to emphasize this interoperability point.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T20:20:30Z,True,yugabyte_____yugabyte-db_____4307_____419703396,Always say the reason to go somewhere before you give them directions. Then there's no need to finish reading the sentence if you're not interested.,True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T20:22:50Z,True,yugabyte_____yugabyte-db_____4307_____419704724,"```suggestion
The following example returns the same results, but the readability of the second row is improved by adding some whitespace manually:
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T20:24:18Z,True,yugabyte_____yugabyte-db_____4307_____419705518,"```suggestion
headerTitle: Built-in SQL functions and operators for arrays
description: Built-in SQL functions and operators for arrays
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T20:27:26Z,True,yugabyte_____yugabyte-db_____4307_____419707288,"```suggestion
Most of the functions and operators listed here can use an array of any dimensionality, but four of the functions accept, or produce, only a one-dimensional array. This property is called out by the second column _""1-d only?""_ in the tables that follow. The restricted status is indicated by _""1-d""_ in that function's row. When the field is blank, there is no dimensionality restriction.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T20:28:41Z,True,yugabyte_____yugabyte-db_____4307_____419708004,"```suggestion
| [string_to_array()](./string-to-array/) | 1-d | Returns a one-dimensional `text[]` array by splitting the input `text` value into subvalues using the specified `text` value as the delimiter. Optionally, allows a specified `text` value to be interpreted as `null`. |
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T20:30:01Z,True,yugabyte_____yugabyte-db_____4307_____419708775,"```suggestion
These operators require that the [LHS and RHS](https://en.wikipedia.org/wiki/Sides_of_an_equation) arrays have the same data type.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T20:32:06Z,True,yugabyte_____yugabyte-db_____4307_____419709967,"```suggestion
|[[lb1:ub1]...[lbN:ubN]](./slice-operator/) | | Returns a new array whose length is defined by specifying the slice's lower and upper bound along each dimension. These specified slicing bounds must not exceed the source array's bounds. The new array has the same dimensionality as the source array and its lower bound is `1` on each axis. |
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T20:32:56Z,True,yugabyte_____yugabyte-db_____4307_____419710375,"```suggestion
## Functions and operators for concatenating an array with an array or an element
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T20:33:27Z,True,yugabyte_____yugabyte-db_____4307_____419710638,"```suggestion
These functions require that the two arrays have the same data type and compatible dimensionality.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T20:34:35Z,True,yugabyte_____yugabyte-db_____4307_____419711225,"```suggestion
|[[lb1:ub1]...[lbN:ubN]](./slice-operator/) | | Returns a new array whose length is defined by specifying the slice's lower and upper bound along each dimension. These specified slicing bounds must not exceed the source array's bounds. The new array has the same dimensionality as the source array and its lower bound is `1` on each axis. |
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T20:37:16Z,True,yugabyte_____yugabyte-db_____4307_____419712730,"```suggestion
| [array_to_string()](./array-to-string) | | Returns a `text` value computed by representing each array value, traversing these in row-major order, by its `::text` typecast, using the supplied delimiter between each such representation. (The result, therefore, loses all information about the arrays geometric properties.) Optionally, represent `null` by the supplied `text` value. |
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T20:40:04Z,True,yugabyte_____yugabyte-db_____4307_____419714312,"```suggestion
| [unnest()](./array-agg-unnest/#unnest) | | Use in the `FROM` clause of a `SELECT` statement. The simple overload accepts a single `anyarray` value and returns a `SETOF anyelement`. The exotic overload accepts a variadic list of `anyarray` values and returns a `SETOF` with many columns where each, in turn, has the output of the corresponding simple overload. |
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T20:40:53Z,True,yugabyte_____yugabyte-db_____4307_____419714724,"```suggestion
**Purpose:** Return a new ""blank canvas"" array of the specified shape with all cells set to the same specified value.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T20:44:53Z,True,yugabyte_____yugabyte-db_____4307_____419716872,"```suggestion
- The first parameter determines the value and data type for every cell. It can be a value of a primitive data type, or, for example, a _""record""_ type value. It can also be written `null::some_type` if this suits your purpose. You would presumably set a `not null` value if, for example, you wanted to insert the array into a table column on which you have created a constraint-based PL/pgSQL function that explicitly tests the array's geometric properties and the `not null` status of each of its values. Try this:
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T20:47:15Z,True,yugabyte_____yugabyte-db_____4307_____419718041,"```suggestion
The shape of the new array is, therefore, fully specified by the second and third parameters.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T20:49:54Z,True,yugabyte_____yugabyte-db_____4307_____419719454,"```suggestion
**Note:** Why does `array_fill()` exist? In other words, why not simply set the values that you want by directly indexing each cell and assigning the value you want to it? Recall that, as described in [Synopsis](../../#synopsis), an array value is rectilinear. This means that its shape, when its number of dimensions exceeds one, is non-negotiably fixed at creation time. This `DO` block emphasizes the point.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T20:52:33Z,True,yugabyte_____yugabyte-db_____4307_____419720906,"```suggestion
isTocNested: true
showAsideToc: true
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T20:53:10Z,True,yugabyte_____yugabyte-db_____4307_____419721191,"```suggestion
These functions require that the to-be-searched array is one-dimensional. They return the index values of the specified to-be-searched-for value in the specified to-be-searched array.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T20:53:49Z,True,yugabyte_____yugabyte-db_____4307_____419721581,"```suggestion
**Purpose:** Return the index, in the supplied array, of the specified value. Optionally, starts searching at the specified index.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T20:55:09Z,True,yugabyte_____yugabyte-db_____4307_____419722350,"```suggestion
**Notes:** The optional third parameter specifies the _inclusive_ index value at which to start the search.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T20:56:07Z,True,yugabyte_____yugabyte-db_____4307_____419722880,"```suggestion
**Purpose:** Return the indexes, in the supplied array, of all occurrences of the specified value.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T20:56:49Z,True,yugabyte_____yugabyte-db_____4307_____419723295,"```suggestion
isTocNested: true
showAsideToc: true
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T20:57:27Z,True,yugabyte_____yugabyte-db_____4307_____419723621,"```suggestion
**Purpose:** Return a new array where _every_ occurrence of the specified value has been removed from the specified input array.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T21:00:33Z,True,yugabyte_____yugabyte-db_____4307_____419725385,"```suggestion
**Notes:** This function requires the array from which values are to be removed is one-dimensional. This restriction is easily understood in light of the fact that arrays are rectilinear—in other words, the geometry of an array whose dimensionality is two or more is fixed at creation time. For examples illustrating this rule, see [`array_fill()`](.././array-fill).
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T21:03:03Z,True,yugabyte_____yugabyte-db_____4307_____419726707,"```suggestion
This section will be updated when the issue is fixed. You can sidestep the problem, for demonstration purposes, simply by creating `table t` without a primary key constraint. But this violates proper practice. Here is a viable workaround. Simply use this `UPDATE` statement instead of the one shown above:
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T21:04:14Z,True,yugabyte_____yugabyte-db_____4307_____419727341,"```suggestion
**Purpose:** Return a `text` value computed by representing each array value, traversing these in row-major order, by its `::text` typecast, using the supplied delimiter between each such representation. (The result, therefore, loses all information about the arrays geometric properties.) Optionally, represent `null` by the supplied `text` value.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T21:06:06Z,True,yugabyte_____yugabyte-db_____4307_____419728393,"```suggestion
To understand the syntax for the literal for a _""row""_ type value—especially when a field is `null`, see  [The literal for a 'row' type value](../../literals/row/).
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T21:10:12Z,True,yugabyte_____yugabyte-db_____4307_____419730565,"```suggestion
The third array value is now represented by `?`. But the fact that `f2 is null` within the second array value is _not_ represented by `?`. In other words, this technique for visualizing `null` is applied only at the granularity of top-level array values and not within such values when they are composite.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T21:11:10Z,True,yugabyte_____yugabyte-db_____4307_____419731020,"```suggestion
The `||` operator implements, by itself, all of the functionality that each of the `array_cat()`, `array_append()`, and `array_prepend()` functions individually implement. Yugabyte recommends that you use the `||` operator and avoid the functions. They are documented here for completeness—especially in case you find them in inherited code.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T21:12:24Z,True,yugabyte_____yugabyte-db_____4307_____419731611,"```suggestion
- The values within the array, or the value of the scalar, must be of the same data type, for example, an `int[]` array and an `int` scalar.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T21:13:10Z,True,yugabyte_____yugabyte-db_____4307_____419731989,"```suggestion
- The LHS and the RHS must be _dimensionally_ compatible. For example, you can produce a one-dimensional array: _either_ by concatenating two scalars; _or_ by concatenating a scalar and a one-dimensional array; _or_ by concatenating two one-dimensional arrays. This notion extends to multidimensional arrays. The next bullet gives the rules.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T21:13:55Z,True,yugabyte_____yugabyte-db_____4307_____419732447,"```suggestion
- When you concatenate two N-dimensional arrays, the lengths along the major (that is, the first dimension) may be different but the lengths along the other dimensions must be identical. And when (as the analogy of concatenating a one-dimensional array and a scalar) you concatenate an N-dimensional and an (N-1)-dimensional array, the lengths along the dimensions of the (N-1)-dimensional array must all be identical to the corresponding lengths along the dimensions that follow the major dimension in the N-dimensional array.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T21:16:32Z,True,yugabyte_____yugabyte-db_____4307_____419733737,"```suggestion
These rules follow directly from the fact that arrays are rectilinear. For examples, see [|| operator semantics](./#operator-semantics) below.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T21:19:25Z,True,yugabyte_____yugabyte-db_____4307_____419735150,"```suggestion
The example suffers from the problem that [GitHub Issue #4296](https://github.com/yugabyte/yugabyte-db/issues/4296) tracks. (This same issue also affects the `array_remove()` and the `array_replace()` functions.) If you run this example as presented, then the `UPDATE` statement causes a timeout error of a severity that in order to continue, you must restart the crashed tserver.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T21:20:11Z,True,yugabyte_____yugabyte-db_____4307_____419735553,"```suggestion
This section will be updated when the issue is fixed. You can sidestep the problem, for demonstration purposes, simply by creating `table t` without a primary key constraint. But this violates proper practice. Here is a viable workaround. Simply use this `UPDATE` statement instead of the one shown above:
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T21:20:46Z,True,yugabyte_____yugabyte-db_____4307_____419735863,"```suggestion
**Notes:** The `DO` block shows that the `||` operator is able to implement the full functionality of the `array_append()` function. The values must be compatible.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T21:21:29Z,True,yugabyte_____yugabyte-db_____4307_____419736235,"```suggestion
**Purpose:** Return an array that results from prepending a scalar value to (that is, _before_) an array value.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T21:21:54Z,True,yugabyte_____yugabyte-db_____4307_____419736439,"```suggestion
**Notes:** The `DO` block shows that the `||` operator is able to implement the full functionality of the `array_prepend()` function. The values must be compatible.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T21:22:19Z,True,yugabyte_____yugabyte-db_____4307_____419736623,"```suggestion
  -- Notice that bad_arr is dimensionally INCOMPATIBLE with arr_1:
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T21:23:22Z,True,yugabyte_____yugabyte-db_____4307_____419737138,"```suggestion
Each of the approaches described in this section, using the `array_replace()` built-in function and setting an addressed array value explicitly and in place, can be used to change values in an array. But the two approaches differ importantly:
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T21:24:02Z,True,yugabyte_____yugabyte-db_____4307_____419737528,"```suggestion
**Purpose:** Return a new array that is derived from the input array by replacing _every_ array value that is equal to the specified existing value with the specified new value.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T21:24:53Z,True,yugabyte_____yugabyte-db_____4307_____419737990,"```suggestion
This section will be updated when the issue is fixed. You can sidestep the problem, for demonstration purposes, simply by creating `table t` without a primary key constraint. But this violates proper practice. Here is a viable workaround. Simply use this `UPDATE` statement instead of the one shown above:
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T21:25:33Z,True,yugabyte_____yugabyte-db_____4307_____419738313,"```suggestion
_One-dimensional array of _""record""_ type values_. The definition of _""rt""_ used here is the same as the example above used. Don't create again if it already exists.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T21:27:35Z,True,yugabyte_____yugabyte-db_____4307_____419739287,"```suggestion
_Array of ""record"" type values_. The definition of *""rt""* used here is the same as the example above used. Don't create again if it already exists.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T21:28:01Z,True,yugabyte_____yugabyte-db_____4307_____419739520,"```suggestion
_Two-dimensional array of primitive scalar values_. This is sufficient to illustrate the semantics of the general multidimensional case. The approach is just the same as when `array_replace()` is used to meet the same goal. You have no choice but to target the values explicitly.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T21:28:32Z,True,yugabyte_____yugabyte-db_____4307_____419739786,"```suggestion
  -- Change the individual, addressable, values one by one.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T21:29:07Z,True,yugabyte_____yugabyte-db_____4307_____419740118,"```suggestion
  -- Similarly, this is meaningless. (But it doesn't cause a compilation error.)
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T21:29:34Z,True,yugabyte_____yugabyte-db_____4307_____419740372,"```suggestion
  -- Change the individual, addressable, values one by one.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T21:30:25Z,True,yugabyte_____yugabyte-db_____4307_____419740818,"```suggestion
**Purpose:** Return a new array whose length is defined by specifying the slice's lower and upper bound along each dimension.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T21:33:07Z,True,yugabyte_____yugabyte-db_____4307_____419742239,"```suggestion
Predicting the outcome, when unfortunate choices for these two values were made, will require some mental effort. The `DO` block below demonstrates an example of this:
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T21:37:10Z,True,yugabyte_____yugabyte-db_____4307_____419744138,"```suggestion
The [fourth subsection](./array-of-rows/) gives the rules for array literals whose values are composite (that is, a _""row""_ type).
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T21:45:23Z,True,yugabyte_____yugabyte-db_____4307_____419747941,"```suggestion
The rules that these four subsections present are covered in these two sections of the PostgreSQL documentation:
```
```suggestion
The rules presented in these four subsections are covered in the following sections of the PostgreSQL documentation:
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T21:46:11Z,True,yugabyte_____yugabyte-db_____4307_____419748312,"```suggestion
isTocNested: true
showAsideToc: true
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T21:50:25Z,True,yugabyte_____yugabyte-db_____4307_____419750339,"```suggestion
This section follows the same approach used in the section that explained the rules for the literal for an array of primitive values [here](../array-of-primitive-values/) and the section that explained the rules for the literal for a _""row""_ type value [here](../row/): first, it states the rules, and then it illustrates these with examples.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T21:52:23Z,True,yugabyte_____yugabyte-db_____4307_____419751226,"```suggestion
If you follow the rules that are stated here and illustrated in the demonstration below, then you will always produce a syntactically valid literal which expresses the semantics that you intend. There are many other legal variants—especially because of the freedoms for `text[]` values. This can also produce the result that you intend. However, we will not document these rules because it is always sufficient to create your literals in canonical form.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T21:53:21Z,True,yugabyte_____yugabyte-db_____4307_____419751675,"```suggestion
- First, prepare the literal for each _""row""_ type value according to the rules set out in the [previous section](../row/).
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T21:53:49Z,True,yugabyte_____yugabyte-db_____4307_____419751909,"```suggestion
- Start off with the opening left curly brace.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T21:54:52Z,True,yugabyte_____yugabyte-db_____4307_____419752440,"```suggestion
- Then, understand that when these are used within the literal for _""row""_ type value within the literal for an array, the _""row""_ must itself be surrounded with double quotes, just like is the rule for, say, `timestamp` values or `text` values that include spaces or other troublesome characters.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T21:55:42Z,True,yugabyte_____yugabyte-db_____4307_____419752833,"```suggestion
  -  *first*, do the inner escaping;
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T21:56:31Z,True,yugabyte_____yugabyte-db_____4307_____419753180,"```suggestion
  - and only then, surround the complete representation for the _""row""_ type value with unescaped double quotes.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T21:57:22Z,True,yugabyte_____yugabyte-db_____4307_____419753559,"```suggestion
## Example to illustrate the rules
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T21:58:39Z,True,yugabyte_____yugabyte-db_____4307_____419754123,"```suggestion
Next, you create a table with a column with data type `rt` so that you can populate it with six rows that jointly, in their `text` fields, use all of the ""challenging"" characters listed above:
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T22:01:59Z,True,yugabyte_____yugabyte-db_____4307_____419755601,"```suggestion
Finally, you populate the table by building the _""row""_ type values bottom-up using appropriately typed PL/pgSQL variables in a `DO` block and inspect the result. This technique allows the actual primitive values that we choose for this demonstration so be seen individually as the ordinary SQL literals that each data type requires. This makes the code more readable and more understandable than any other approach. In other words, it shows that, for humanly written code, the usability of a value constructor for any composite value is much greater than that of the literal that produces the same value. Of course, this benefit is of no consequence for a programmatically constructed literal.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T22:03:18Z,True,yugabyte_____yugabyte-db_____4307_____419756148,"```suggestion
The `int` field and the `timestamp` field are unremarkable given only that we understand that the representation of the `timestamp` values, in order to meet the canonical form requirement, must be double-quoted. The `boolean` fields are unremarkable, too, as long as we remember that `null` is represented by leaving no space between the delimiters that surround that field. This leaves just the `text` fields for consideration. Here are the field representations themselves, without the clutter of the delimiters:
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T22:04:09Z,True,yugabyte_____yugabyte-db_____4307_____419756501,"```suggestion
The first four are unremarkable, as long as you remember that each of these four single characters, as shown at the start, must be ordinarily surrounded by double quotes. That leaves just the last two:
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T22:07:25Z,True,yugabyte_____yugabyte-db_____4307_____419757849,"```suggestion
Next, you concatenate our six _""row""_ type values into an array value by using the `array_agg()` function (described in [`array_agg()`](../../functions-operators/array-agg-unnest/#array-agg)), like this:
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T22:08:08Z,True,yugabyte_____yugabyte-db_____4307_____419758121,"```suggestion
The demonstration is best served by inserting this value into a new table, like this:
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T22:09:51Z,True,yugabyte_____yugabyte-db_____4307_____419758863,"```suggestion
The `\get` technique that you used in the earlier sections is not viable here because there's an upper limit on its size. So, instead insert the literal that you produce by `text` typecasting `t2.v1` into the companion `v1_text_typecast` field in the same table, like this:

```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T22:10:31Z,True,yugabyte_____yugabyte-db_____4307_____419759133,"```suggestion
Finally, use this array literal to recreate the original value and check that it's identical to what you started with, thus:
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T22:11:17Z,True,yugabyte_____yugabyte-db_____4307_____419759460,"```suggestion
You haven't yet looked at the literal for the array of _""row""_ type values. Now is the moment to do so, thus:
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T22:12:42Z,True,yugabyte_____yugabyte-db_____4307_____419760048,"```suggestion
The pseudocode does retain Python locutions, but don't be distracted by this. The meaning is clear enough to allow a description of the algorithm. The various special characters were all set up as manifest constants with self-describing names.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T22:13:35Z,True,yugabyte_____yugabyte-db_____4307_____419760370,"```suggestion
- Any value of any data type, primitive or composite, can be `::text` typecasted. Similarly, there always exists a `text` value that, when properly spelled, can be typecasted to a value of any desired data type, primitive or composite.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T22:14:45Z,True,yugabyte_____yugabyte-db_____4307_____419760929,"```suggestion
The remaining sections in the present [Creating an array value using a literal](../../literals/) section explain the syntax of the last three `text` values.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T22:56:03Z,True,yugabyte_____yugabyte-db_____4307_____419776205,"```suggestion
For all but `boolean` values, the string of characters that `ysqlsh` uses to display any value is the `::text` typecast of that value. (After all, the only feasible means of display is strings of characters.) But uniquely for the two `boolean` values `true` and `false` it uses the single characters `t` and `f` rather than their `::text` typecasts—unless you explicitly write the typecast. 
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T22:56:59Z,True,yugabyte_____yugabyte-db_____4307_____419776557,From `ysql`?,True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T22:58:32Z,True,yugabyte_____yugabyte-db_____4307_____419777042,"```suggestion
Above you saw that even when you explicitly `::text` typecast a composite value, `true` and `false` are represented as `t` and `f`. You can't influence this outcome because it has to do with the rules for deriving the `text` of the typecast and _not_ with the convention that `ysqlsh` uses. This asymmetry was established many years ago, and it will not change.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T22:59:28Z,True,yugabyte_____yugabyte-db_____4307_____419777394,"```suggestion
Try this in `ysqlsh`:
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T23:00:28Z,True,yugabyte_____yugabyte-db_____4307_____419777788,"```suggestion
 You won't be surprised by this. But you need to establish the proper terms of art that allow you to describe what's going on precisely and correctly. The remaining sections in the present enclosing section rely on this.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T23:02:05Z,True,yugabyte_____yugabyte-db_____4307_____419778402,"```suggestion
This is the literal that the SQL language (at least in the YSQL and PostgreSQL dialects) uses to establish the corresponding strongly-typed `numeric` value. (PL/pgSQL uses the same form for the same purpose.) But, to state the obvious, a SQL statement and a PL/pgSQL source are nothing but strings of characters. That means that, in the present context, this:
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T23:03:15Z,True,yugabyte_____yugabyte-db_____4307_____419778780,"```suggestion
The parsing rules of both SQL and PL/pgSQL (or more properly stated, the definitions of the grammars of these two languages) require that `text` literals are enquoted. Moreover, there are two syntactic mechanisms for doing this: the ordinary single quote; and so-called dollar quotes, where `$$` is a special case of the more general `$anything_you_want$`. You might think that the `::text` typecast is redundant here. But don't forget that the text of these literals might be used to establish `varchar` or `char` values.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T23:03:47Z,True,yugabyte_____yugabyte-db_____4307_____419778972,"```suggestion
You see already, then, that the rules for composing a `numeric` literal and a `text` literal are different:
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T23:06:02Z,True,yugabyte_____yugabyte-db_____4307_____419779720,"```suggestion
(If you did enquote the bare text in a `numeric` literal, then you would _not_ see an error. Rather, you would get implicit but undesirable behavior: first, a genuine `text` value would be generated internally, and then, this, in turn, would be typecasted to the `numeric` value.)
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T23:06:36Z,True,yugabyte_____yugabyte-db_____4307_____419779891,"```suggestion
You've already seen, informally, some examples of array literals. Here is the rule:
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T23:08:09Z,True,yugabyte_____yugabyte-db_____4307_____419780394,"```suggestion
- You compose the bare text that specifies the intended value by writing an utterance in a dedicated grammar that starts with the left curly brace and ends with the right curly brace. (This grammar is the focus of the remainder of this section.) Then you enquote this bare text (however you choose to do the quoting) and then typecast it to the desired target array data type.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T23:08:55Z,True,yugabyte_____yugabyte-db_____4307_____419780635,"```suggestion
These are three special cases of a more general rule. In some cases (for example in the literal for a _""row""_ type value) the enquoting mechanism might be optional (depending on the intended value) and, when written uses _double quote_ as the enquoting character. But here, too, the general rule is the same. The bare text that specifies the intended value can always be correctly written as the `::text` typecast of that value.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T23:10:03Z,True,yugabyte_____yugabyte-db_____4307_____419781027,"```suggestion
- The literal for a value of any data type is the possibly enquoted bare text that specifies the intended value, followed by the typecast operator to the desired target data type.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T23:11:00Z,True,yugabyte_____yugabyte-db_____4307_____419781340,"```suggestion
A simple way to see examples of the bare text that specifies an array value, when used as a component in the literal, is to create the value using the constructor and then to inspect its `::text` typecast. But the safe way to create the text of a literal for an intended value is to understand the syntax and semantics that govern its composition.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T23:13:34Z,True,yugabyte_____yugabyte-db_____4307_____419782191,"```suggestion
When this difference is useful, the [Arrays](../../../type_array/) section distinguishes between:
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T23:18:02Z,True,yugabyte_____yugabyte-db_____4307_____419783634,"```suggestion
- (1) the _literal_ for the intended value (that is, the whole thing with the enquoting and the typecast, when one or both of these are needed);
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T23:18:26Z,True,yugabyte_____yugabyte-db_____4307_____419783739,"```suggestion
- and (2) the _text of the literal_ for the intended value (that is, the bare text that specifies this value).
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T23:19:48Z,True,yugabyte_____yugabyte-db_____4307_____419784244,"```suggestion
**Note:** Often, the data type of the assignment target (for example, a field in a column in a schema-level table or a variable in a PL/pgSQL program) is sufficient implicitly to specify the intended typecast without writing the operator. But it's never harmful to write it. Moreover, in some cases, omitting the explicit typecast can bring performance costs. For this reason, Yugabyte recommends that you always write the explicit typecast unless you are certain beyond all doubt that omitting it brings no penalty.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T23:21:04Z,True,yugabyte_____yugabyte-db_____4307_____419784616,"```suggestion
The term _""canonical form""_ applies specifically to the _text of a literal_ rather than to the _literal as a whole_. But when the text of a literal is in canonical form, the literal as a whole, too, is in canonical form.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T23:21:42Z,True,yugabyte_____yugabyte-db_____4307_____419784812,"```suggestion
The canonical form of the text of a literal that produces a specific value, of any data type, is simply the `::text` typecast of that value.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-04T23:22:57Z,True,yugabyte_____yugabyte-db_____4307_____419785159,"```suggestion
In the remaining sections in this enclosing section, you will see that many different spellings of the text of an array literal, in addition to the canonical form, will produce a particular intended target value. The differences are due to how whitespace, punctuation, and escape characters are used.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T03:19:57Z,True,yugabyte_____yugabyte-db_____4307_____419843180,"This one (change ""builtin"" to built-in"" which I did globally before the push that you watched me do) has brought the ""outdated"" status and the ""commit"" button is disabled. My only option seems to be to ignore it. There's no way for me to say that it's already fixed.",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T03:20:27Z,True,yugabyte_____yugabyte-db_____4307_____419843301,"So I'm clicking ""Resolve conversation"".",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T03:21:18Z,True,yugabyte_____yugabyte-db_____4307_____419843480,"Same here too. Clicking ""Resolve converstation"".",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T03:37:13Z,True,yugabyte_____yugabyte-db_____4307_____419846698,"Strange. The sentence that you want to change is still in place in what I pushed. But this is marked ""Outdated"". I made a not do make the change manually when the leading copy of my corpus is back in place on my laptop.",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T03:44:47Z,True,yugabyte_____yugabyte-db_____4307_____419848281,"Weird. I'd used the Typora.app spell checker on every file. I'm fairly sure now that it's unreliable. I have to accept ist changes one at a time, save, exit, and open the file again. Else the changes con't ""stick"". I must've slipped here somehow.",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T04:09:11Z,True,yugabyte_____yugabyte-db_____4307_____419853205,"You want to strike out ""It thereby determines the new array's data type."". No, this is important. I'll commit your change here but reinstate that sentence when I've restablished the leading copy on my work on my laptop.",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T04:12:49Z,True,yugabyte_____yugabyte-db_____4307_____419853918,"I'm going to accept this. But I don't like it. It slows down the reader. There's no end of comma-less ""therefore"" uses out there like this: The stage is therefore set for a dispute because...",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T04:17:43Z,True,yugabyte_____yugabyte-db_____4307_____419854926,"Well. One of the functions resurns a single value and the other reurns a set of values. If you don't like ""value(s)"", then I'll find a more long-winded way to say what has to be said correctly.",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T05:34:17Z,True,yugabyte_____yugabyte-db_____4307_____419872486,"Really? I hate this! ysqlsh is just the name of a tool. It's not a variable name, a reserved word, or anything.",True,True,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T05:37:39Z,True,yugabyte_____yugabyte-db_____4307_____419873264,"No, certainly not ""YSQL"". We're talking about a convention that the plsql tool (stupidly) uses. It's got nothing to do with the SQL language.",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T05:38:44Z,True,yugabyte_____yugabyte-db_____4307_____419873503,"""Above you saw""??? Grr....",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T05:44:26Z,True,yugabyte_____yugabyte-db_____4307_____419875060,"Oh dear. This seems wrong to me. It's me that has to establish stuff so that I can explain things properly. In the old days, I've written it all in the passive voice. ""It's essential first to establish the proper... so that whats going on can be described..."" I'm not instructing the user to select this, click that, and then establish the other!",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T05:55:56Z,True,yugabyte_____yugabyte-db_____4307_____419878222,"""When this difference is useful, the..."" No. ""When this difference is important, the...""

I'll change this later on my laptop.",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T07:34:16Z,True,yugabyte_____yugabyte-db_____4307_____419916061,"```suggestion
-- Don't create ""type rt"" if it's still there following the previous example.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T07:35:01Z,True,yugabyte_____yugabyte-db_____4307_____419916384,"```suggestion
-- It's essential to typecast the individual ""rt"" values.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T07:35:32Z,True,yugabyte_____yugabyte-db_____4307_____419916617,"```suggestion
This execution of the prepared statement, using an array literal as the actual argument, is semantically equivalent:
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T07:38:34Z,True,yugabyte_____yugabyte-db_____4307_____419918068,"```suggestion
For one-dimensional arrays, but _only for these_ (see [Multidimensional array_agg() and unnest()](./#multidimensional-array-and-and-unnest)), these two functions have mutually complementary effects in the following sense. After this sequence (the notation is informal):
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T07:40:25Z,True,yugabyte_____yugabyte-db_____4307_____419918956,"```suggestion
The `setof tuples #3` has identical shape and content to that of `setof tuples #1`. And the data type of _""result array""_ is an array of the data type of the tuples.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T07:41:59Z,True,yugabyte_____yugabyte-db_____4307_____419919764,"```suggestion
Notice that YSQL has named the _select list_ items `column1` and `column2`. The result is a so-called `setof`. It means a set of rows, just as is produced by a `SELECT` statement. (You'll see this word if you describe the `generate_series()` built-in table function with the `\df` metacommand.) To use the rows that the `values` statement produces as the input for `array_agg()`, we need to use a named `type`, thus:
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T07:42:50Z,True,yugabyte_____yugabyte-db_____4307_____419920177,"```suggestion
We recognize this as the text of the literal that represents an array of tuples that are shape-compatible with type `rt`. Recall from the [array[] constructor](../../array-constructor/) section that this value doesn't encode the type name. In fact, we could typecast it to any shape compatible type.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T07:43:19Z,True,yugabyte_____yugabyte-db_____4307_____419920421,"```suggestion
- Treat each row as a `rt[]` array with a single-value.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T07:44:23Z,True,yugabyte_____yugabyte-db_____4307_____419920973,"```suggestion
- Concatenate (see the [`||` operator](../concatenation/#the-operator)) the values from all the rows in the specified order into a new `rt[]` array.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T07:46:31Z,True,yugabyte_____yugabyte-db_____4307_____419922002,"```suggestion
To prepare for the demonstration of `unnest()`, we'll save this single-valued result into a `ysqlsh` variable by using the `\gset` metacommand. This takes a single argument, conventionally spelled with a trailing underscore (for example, `result_`) and re-runs the `SELECT` statement that, as the last submitted `ysqlsh` command, is still in the command buffer. (If the `SELECT` doesn't return a single row, then you get a clear error.) In general, when the _select list_ has _N_ members, called `c1` through `cN`, each of these values is stored in automatically-created variables called `result_c1` through `result_cN`. Immediately after running the `with... select array_agg(...) as array_literal...`query above, do this:
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T07:47:15Z,True,yugabyte_____yugabyte-db_____4307_____419922356,"```suggestion
As the sketch at the start of this page indicated, the input to unnest is an array. To use what the code example in the account of `array_agg()` left us with in the `ysqlsh` variable `result_array_literal` in a SQL statement, we must quote it and typecast it to `rt[]`. This is easily done with the `\set` metacommand, thus:
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T07:47:43Z,True,yugabyte_____yugabyte-db_____4307_____419922568,"```suggestion
The `\set` metacommand uses the backslash character to escape the single quote character that it also uses to surround the string that it assigns to the target `ysqlsh` variable. The `\echo` metacommand shows this:
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T07:48:35Z,True,yugabyte_____yugabyte-db_____4307_____419922979,"```suggestion
The parentheses around the column alias `rec` are required to remove what the SQL compiler would otherwise see as an ambiguity, and would report as a `42P01` error. This is the result:
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T07:48:55Z,True,yugabyte_____yugabyte-db_____4307_____419923164,"```suggestion
Notice that the SQL statement, this time, is _not_ terminated with a semicolon. Rather, the `\gset` metacommand acts as the terminator. This simply makes the `ysqlsh` output less noisy. This is the result:
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T07:50:27Z,True,yugabyte_____yugabyte-db_____4307_____419923918,"```suggestion
The basic illustration of the functionality of `array_agg()` showed how it can convert the entire contents of a table (or, by extension, the `setof` rows defined by a `SELECT` execution) into a single array value. This can be useful to return a large `SELECT` result in its entirety (in other words, in a single round trip) to a client program.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T07:52:12Z,True,yugabyte_____yugabyte-db_____4307_____419924820,"```suggestion
Notice that you made the _""details""_ column `not null`. This was a choice. It adds semantics that are very hard to capture in the original two table design without tricky, and therefore error-prone, programming of triggers and the like. We have implemented the so-called _""mandatory one-to-many""_ rule. In the present example, the rule says (in the domain of the entity-relationship model that specifies the requirements) that an occurrence of a _""Master""_ entity type cannot exist unless it has at least one, but possibly many, child occurrences of a _""Detail""_ entity type.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T07:54:07Z,True,yugabyte_____yugabyte-db_____4307_____419925767,"```suggestion
- Here's how you achieve the same effect, and check that it worked as intended, in the new regime. Notice that you need to know the value of _""seq""_ for the _""rt""_ object that has the _""detail_name""_ value of interest. This is easy to do by implementing a dedicated PL/pgSQL function that encapsulates `array_replace()` or the replaces a value directly by addressing it using its index. But it's hard to do without that (these methods are described in [Replace a value](../../functions-operators/replace-a-value/)).
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T07:54:45Z,True,yugabyte_____yugabyte-db_____4307_____419926102,"```suggestion
**Note:** The `UPDATE` statement, using as it does a subquery from a view defined in a `WITH` clause as the actual argument for `array_replace()`, seems to be unnecessarily complex. You might expect to use this:
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T07:56:30Z,True,yugabyte_____yugabyte-db_____4307_____419926990,"```suggestion
The more complex, but semantically equivalent, locution is used as a workaround for [GitHub Issue #4296](https://github.com/yugabyte/yugabyte-db/issues/4296). For more information, see [`array_replace()`](../replace-a-value/#array-replace). The code above will be updated when that issue is fixed.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T07:59:23Z,True,yugabyte_____yugabyte-db_____4307_____419928447,"```suggestion
The example suffers from the problem that [GitHub Issue #4296](https://github.com/yugabyte/yugabyte-db/issues/4296) tracks. (This same issue also affects the concatenation operator and the `array_replace()` function.) If you run this example as presented, then the `UPDATE` statement causes an error that causes the client session to terminate. But, when you restart it, an attempt to execute the _""new value of arr""_ query causes an error.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T08:01:12Z,True,yugabyte_____yugabyte-db_____4307_____419929400,"```suggestion
- its dimensionality (`int`).
- the lower bound along each dimension (`int`).
- the upper bound along each dimension (`int`).
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T08:02:57Z,True,yugabyte_____yugabyte-db_____4307_____419930283,"```suggestion
You will use it in the example for each of the functions. (The optional syntax items `[3:10]` and `[2:3][2:5]` specify the lower and upper bounds along the one dimension of the first array and along both dimensions of the second array. This syntax is explained in [Multidimensional array of numeric values](../../literals/array-of-primitive-values/#multidimensional-array-of-numeric-values).
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T08:03:33Z,True,yugabyte_____yugabyte-db_____4307_____419930602,"```suggestion
Run the `SELECT` statement for each function to illustrate what produces for the same pair of input arrays.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T08:04:05Z,True,yugabyte_____yugabyte-db_____4307_____419930928,"```suggestion
**Purpose:** Returns the number of dimensions (that is, the _dimensionality_) of the specified array.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T08:05:34Z,True,yugabyte_____yugabyte-db_____4307_____419931759,"```suggestion
- the cardinality of each of the two supplied arrays must be the same.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T08:06:11Z,True,yugabyte_____yugabyte-db_____4307_____419932071,"```suggestion
These requirements might seem to be arbitrary. They are implemented so that the procedure can deliver two bonus benefits. It demonstrates how to traverse array values in row-major order using the values returned by the functions that this section describes. In this way, it shows you what the term ""row-major order"" means. And it compares the values, pairwise, for equality. This comparison rule is the basis of the semantics of the comparison operations described in [Comparison](../comparison).
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T08:06:35Z,True,yugabyte_____yugabyte-db_____4307_____419932284,"```suggestion
**Note:** There are no built-in functions for computing, for example, the product of two matrixes or the product of a vector and a matrix. (A vector is a one-dimensional array, and a matrix is a two-dimensional array.) But, as long as you know how to traverse the values in a matrix in row-major order, it's easy to implement the missing vector and matrix multiplication functionality for yourself.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T08:07:23Z,True,yugabyte_____yugabyte-db_____4307_____419932698,"```suggestion
- `array_replace()` changes all values that match the specified value to the same new value, insensitively to their address in the array.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T08:07:57Z,True,yugabyte_____yugabyte-db_____4307_____419933035,"```suggestion
The example suffers from the problem that [GitHub Issue #4296](https://github.com/yugabyte/yugabyte-db/issues/4296) tracks. (This same issue also affects the concatenation operator and the `array_remove()` function.) If you run this example as presented, then the `UPDATE` statement causes a timeout error of a severity that means that, to continue, you must restart the crashed tserver..
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T08:09:48Z,True,yugabyte_____yugabyte-db_____4307_____419933993,"```suggestion
- The new array has the same dimensionality as the source array and its lower bound is `1` on each axis.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T08:10:23Z,True,yugabyte_____yugabyte-db_____4307_____419934305,"```suggestion
**Purpose:** return a one-dimensional `text[]` array by splitting the input `text` value into subvalues using the specified `text` value as the delimiter. Optionally, allows a specified `text` value to be interpreted as `null`.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T08:11:52Z,True,yugabyte_____yugabyte-db_____4307_____419935134,"```suggestion
Here, in use in a SQL `SELECT` statement, is the literal for a one-dimensional array of primitive `int` values:
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T08:12:12Z,True,yugabyte_____yugabyte-db_____4307_____419935274,"```suggestion
The `\t on` metacommand suppresses column headers and the rule-off under these. Unless the headers are important for understanding, query output from `ysqlsh` will be shown, throughout the present ""arrays"" major section, without these.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T08:15:16Z,True,yugabyte_____yugabyte-db_____4307_____419936919,"```suggestion
First, the [Text typecasting and literals](./text-typecasting-and-literals/) section establishes the important notions that allow you to distinguish between a _literal_ and the _text of the literal_. It's the text of an array literal that, by following specific grammar rules for this class of literal, actually defines the intended value. The literal, as a whole, enquotes this bare text and typecasts it to the desired target array data type.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T08:16:04Z,True,yugabyte_____yugabyte-db_____4307_____419937314,"```suggestion
Second, the [Array of primitive values](./array-of-primitive-values/) section gives the rules for array literals whose values are scalars (for example, are of primitive data types).
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T08:16:36Z,True,yugabyte_____yugabyte-db_____4307_____419937609,"```suggestion
Third, the [Row](./row/) section gives the rules for the literal for a value of a _""row""_ type. These rules are essential to the understanding of the next section.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T08:17:16Z,True,yugabyte_____yugabyte-db_____4307_____419937936,"```suggestion
Fourth, the [Array of rows](./array-of-rows/) section gives the rules for array literals whose values are composite (that is, a _""row""_ type).
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T08:21:23Z,True,yugabyte_____yugabyte-db_____4307_____419940132,"```suggestion
Just as in the [Statement of the rules](../array-of-primitive-values/#statement-of-the-rules) section that stated the rules for literals for an array of primitive values, the statement of these rules depends on understanding the notion of the canonical form of a literal.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T08:22:14Z,True,yugabyte_____yugabyte-db_____4307_____419940587,"```suggestion
- First, prepare the literal for each _""row""_ type value according to the rules set out in the previous [Row](../row/) section.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T08:24:14Z,True,yugabyte_____yugabyte-db_____4307_____419941622,"```suggestion
As promised, the canonical form of the array literal does indeed recreate the identical value that the `array_agg()` function created:
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T08:24:52Z,True,yugabyte_____yugabyte-db_____4307_____419942025,"```suggestion
You can work out the rules for a multidimensional array of ""row"" type values, should you need these, by straightforward induction from what has already been explained this enclosing [Create an array value using a literal](../../literals/) section.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T08:25:17Z,True,yugabyte_____yugabyte-db_____4307_____419942232,"```suggestion
Notice that the algorithm inserts a newline after the opening curly brace, between the pairs of representations of each _""row""_ type value, and before the closing curly brace. While, strictly speaking, this means that the literal it produces is not in canonical form, this has no effect (as has been shown many times by example throughout the present [Arrays](../../../type_array/) major section.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T08:28:55Z,True,yugabyte_____yugabyte-db_____4307_____419944255,"```suggestion
We recognize this as the text of the literal that represents an array of tuples that are shape-compatible with type rt. Recall from the [array[] constructor](../../array-constructor/) section that this value doesn't encode the type name. In fact, we could typecast it to any shape compatible type.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T08:32:41Z,True,yugabyte_____yugabyte-db_____4307_____419946216,"```suggestion
The other geometric properties (the length(s) along each dimension and the upper bounds on each dimension) can be derived from the properties that the bullets list.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T08:33:29Z,True,yugabyte_____yugabyte-db_____4307_____419946653,"```suggestion
The first comparison test scans the values in each of the LHS and RHS arrays in row-major order (see [Joint semantics](../functions-operators/properties/#joint-semantics)) and does a pairwise comparison. Notably, the comparison rule non-negotiably uses `is not distinct from` semantics. Moreover, when a `not null` array value is pairwise compared with a `null` value, the `not null` value is deemed to be _less than_ the `null` value.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T08:34:45Z,True,yugabyte_____yugabyte-db_____4307_____419947368,"```suggestion
The [Equality and inequality semantics](./#equality-and-inequality-semantics) section demonstrates each of the rules that this _""Comparison operators overview""_  section has stated.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T08:35:40Z,True,yugabyte_____yugabyte-db_____4307_____419947856,"```suggestion
The [Containment and overlap operators semantics](./#containment-and-overlap-operators-semantics) section below demonstrates each of the rules that this section has stated.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T08:36:21Z,True,yugabyte_____yugabyte-db_____4307_____419948216,"```suggestion
- The `@>` operator returns `true` if the LHS array contains the RHS array—that is, if every distinct value in the RHS array is found among the LHS array's distinct values.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T08:36:49Z,True,yugabyte_____yugabyte-db_____4307_____419948494,"```suggestion
The `&&` operator returns `true` if the LHS and RHS arrays overlap—that is, if they have at least one value in common. The definition of this operator makes it insensitive to which of the two to-be-compared is used on the LHS and which is used on the RHS.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T08:37:41Z,True,yugabyte_____yugabyte-db_____4307_____419949004,"```suggestion
This section demonstrates each of the rules that the [Comparison operators overview](./#comparison-operators-overview) section above stated.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T08:38:05Z,True,yugabyte_____yugabyte-db_____4307_____419949190,"```suggestion
-- Any two arrays can be compared without error if they have the same data type.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T08:38:38Z,True,yugabyte_____yugabyte-db_____4307_____419949481,"```suggestion
  -- Basic demonstration of inequality when the geometric properties of
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T08:39:13Z,True,yugabyte_____yugabyte-db_____4307_____419949855,"```suggestion
  -- Demonstration of inequality when the geometric properties of
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T08:39:52Z,True,yugabyte_____yugabyte-db_____4307_____419950226,"```suggestion
  -- Here, the first pairwise difference is NOT NULL versus NULL.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T08:43:00Z,True,yugabyte_____yugabyte-db_____4307_____419951948,"```suggestion
The example suffers from the problem that [GitHub Issue #4296](https://github.com/yugabyte/yugabyte-db/issues/4296) tracks. (This same issue also affects the concatenation operator and the `array_remove()` function.) If you run this example as presented, then the `UPDATE` statement causes a timeout error of a severity that means that, to continue, you must restart the crashed tserver..
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T08:43:59Z,True,yugabyte_____yugabyte-db_____4307_____419952518,"```suggestion
_Two-dimensional array of primitive scalar values_. This is sufficient to illustrate the semantics of the general multidimensional case. The function's signature (at the start of this section) shows that the to-be-replaced value and the replacement value are instances of `anyelement`. There is no overload where these two parameters accept instances of `anyarray`. This restriction is easily understood by picturing the internal representation as a linear ribbon of values, as was explained in the [Synopsis](../../#synopsis) section. The replacement works by scanning along the ribbon, finding each occurrence in turn of the to-be-replaced value, and replacing it.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T08:46:10Z,True,yugabyte_____yugabyte-db_____4307_____419953816,"```suggestion
To use such a literal in SQL or in PL/pgSQL it must be enquoted in the same way as is an ordinary `text` literal. You can enquote an array literal using dollar quotes, if this suits your purpose, just as you can for a `text` literal. You sometimes need to follow the closing quote with a suitable typecast operator for the array data type that you intend. And sometimes the context of use uniquely determines the literal's data type. It's never wrong to write the typecast explicitly—and it's a good practice always to do this.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T08:47:45Z,True,yugabyte_____yugabyte-db_____4307_____419954696,"```suggestion
This section follows the same approach used in the section that explained the rules for the literal for an array of primitive values [here](../array-of-primitive-values/) and the section that explained the rules for [the literal for a _""row""_ type value](../row/): first, it states the rules, and then it illustrates these with examples.
```",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T16:13:36Z,True,yugabyte_____yugabyte-db_____4307_____420232162,"Damn. I just checked this carefully. It seems that Typora.app doesn't spell check within triple-tick blocks. Must be an el-cheapo compromise 'cos so many of the words that you find in code blocks aren’t in the English dictionary. My favorite Pycharm knows about Python syntax, of course, and so it spell-checks within comments, no matter what marking among several you use to mark distinguish them as such. Did you find this with a spell checker or by eye?",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T16:22:29Z,True,yugabyte_____yugabyte-db_____4307_____420238253,"Gosh, really? That makes it _so_ ugly. The phrases like _""setof tuples #3""_ are entirely informal. I made them up for the purpose here. Why did you not back-tick _""result array""_? It has the same status as the other two? I can't change two without the third. I made a not to update the latter locally.",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T16:25:13Z,True,yugabyte_____yugabyte-db_____4307_____420240066,Why did you change the second and not the first? I made a note to look at this aftre I have it back on my laptop.,True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T17:33:49Z,True,yugabyte_____yugabyte-db_____4307_____420286218,"When you have a list of bullets, each of which is a phrase (and not a sentence), what rule tells you to start each point with lower case letter and finish it with a period? I see this use of bullets as nothing other than a visual device that makes the old-fashioned way easier to read—namely a colon followed by phrases ending each with a semicolon (until the last ends with a period). I'm accepting this for now. But I hate it.",True,True,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T18:08:18Z,True,yugabyte_____yugabyte-db_____4307_____420307146,Now suddenly you want a comma. earlier you wanted a period. Are you a semicolon hater?,True,True,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T18:09:39Z,True,yugabyte_____yugabyte-db_____4307_____420308021,"Nobody will even notice except we too, So I'm accepting it—inconsistency ntwithstandinh.",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T18:11:30Z,True,yugabyte_____yugabyte-db_____4307_____420309078,Damn. You've done it again.,True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T18:14:53Z,True,yugabyte_____yugabyte-db_____4307_____420311027,"Eh? You forgot to make ""return"" start with ""R"". See what I mean now. I have to to the global search for **Purpose:** anyway. So this 30 second per change (yes, I timed it) saved nothing and cost us each a lot.",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-05T19:24:11Z,True,yugabyte_____yugabyte-db_____4307_____420351281,"Of course code comments should ne fee of spelling errors. Do you have a spell checker that handles these sensibly without annoying false positives from the code itself?

But are abbreviations in comments really disallowed. Anything that reduces line length and the line count is highly desirable in code illustrations.",True,False,185,13696.2
yugabyte_____yugabyte-db_____4307,2020-05-06T20:18:22Z,True,yugabyte_____yugabyte-db_____4307_____624867808,"Closing this now. It acted as the vehicle for excellent feedback from @stevebang and @m-iancu. But has now served its purpose. For various reasons, I'll create a brand new PR for the now-completed work.",True,True,185,13696.2
rucio/rucio/3550,2020-05-07T13:13:35Z,False,5eb4fb69bd35436219e657d8,Closing for now. See discussion in the original issue or other pull request,True,False,1,0.0
os-autoinst_____openQA_____3052,2020-05-07T14:56:24Z,True,os-autoinst_____openQA_____3052_____414740397,,True,True,38,11631.5
os-autoinst_____openQA_____3052,2020-05-07T15:11:21Z,True,os-autoinst_____openQA_____3052_____421581992,"What kind of errors are you hiding here? We still don't wrap database queries in general within eval blocks. This query is not supposed to fail unless the entire database or database connection is on fire and in these cases it is ok to return a 500 error, print the error to the log and stop further processing. But I'd also be interested what we others think about this.",True,False,38,11631.5
os-autoinst_____openQA_____3052,2020-05-07T15:45:12Z,True,os-autoinst_____openQA_____3052_____421606479,"These functions build UI. It is important that UI is usable in extreme edge cases. If database is on fire - it will be visible in other places and UI doesn't need dozens errors popping up anywhere, neither in logs. It is OK that some elements in UI will not show some information, as long as UI remains usable overall.",True,False,38,11631.5
os-autoinst_____openQA_____3052,2020-05-07T19:21:20Z,True,os-autoinst_____openQA_____3052_____625448592,"# [Codecov](https://codecov.io/gh/os-autoinst/openQA/pull/3052?src=pr&el=h1) Report
> Merging [#3052](https://codecov.io/gh/os-autoinst/openQA/pull/3052?src=pr&el=desc) into [master](https://codecov.io/gh/os-autoinst/openQA/commit/61dc4343d4fea4032718eac00077a34f1b8bff1f&el=desc) will **increase** coverage by `0.02%`.
> The diff coverage is `100.00%`.

[![Impacted file tree graph](https://codecov.io/gh/os-autoinst/openQA/pull/3052/graphs/tree.svg?width=650&height=150&src=pr&token=t9hmcZLbRd)](https://codecov.io/gh/os-autoinst/openQA/pull/3052?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##           master    #3052      +/-   ##
==========================================
+ Coverage   92.06%   92.09%   +0.02%     
==========================================
  Files         211      211              
  Lines       12834    12841       +7     
==========================================
+ Hits        11816    11826      +10     
+ Misses       1018     1015       -3     
```


| [Impacted Files](https://codecov.io/gh/os-autoinst/openQA/pull/3052?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [lib/OpenQA/WebAPI/Plugin/ObsRsync.pm](https://codecov.io/gh/os-autoinst/openQA/pull/3052/diff?src=pr&el=tree#diff-bGliL09wZW5RQS9XZWJBUEkvUGx1Z2luL09ic1JzeW5jLnBt) | `99.26% <100.00%> (+0.01%)` | :arrow_up: |
| [...penQA/WebAPI/Plugin/ObsRsync/Controller/Folders.pm](https://codecov.io/gh/os-autoinst/openQA/pull/3052/diff?src=pr&el=tree#diff-bGliL09wZW5RQS9XZWJBUEkvUGx1Z2luL09ic1JzeW5jL0NvbnRyb2xsZXIvRm9sZGVycy5wbQ==) | `99.16% <100.00%> (+0.84%)` | :arrow_up: |
| [lib/OpenQA/Worker/CommandHandler.pm](https://codecov.io/gh/os-autoinst/openQA/pull/3052/diff?src=pr&el=tree#diff-bGliL09wZW5RQS9Xb3JrZXIvQ29tbWFuZEhhbmRsZXIucG0=) | `93.75% <0.00%> (+1.56%)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/os-autoinst/openQA/pull/3052?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/os-autoinst/openQA/pull/3052?src=pr&el=footer). Last update [61dc434...4504880](https://codecov.io/gh/os-autoinst/openQA/pull/3052?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",True,True,38,11631.5
os-autoinst_____openQA_____3052,2020-05-07T19:51:46Z,True,os-autoinst_____openQA_____3052_____421754492,both of you have a point :),True,False,38,11631.5
projectunic0rn/pub/189,2020-05-07T23:27:32Z,False,5eb553e1bd35434c944f3ee8,"# [Codecov](https://codecov.io/gh/projectunic0rn/pub/pull/189?src=pr&el=h1) Report
> Merging [#189](https://codecov.io/gh/projectunic0rn/pub/pull/189?src=pr&el=desc) into [master](https://codecov.io/gh/projectunic0rn/pub/commit/fccaef03a2c3796482176264abf993431c14b963&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/projectunic0rn/pub/pull/189/graphs/tree.svg?width=650&height=150&src=pr&token=JDnKoBIxVj)](https://codecov.io/gh/projectunic0rn/pub/pull/189?src=pr&el=tree)

```diff
@@           Coverage Diff           @@
##           master     #189   +/-   ##
=======================================
  Coverage   53.12%   53.12%           
=======================================
  Files         120      120           
  Lines        1568     1568           
  Branches      322      322           
=======================================
  Hits          833      833           
  Misses        706      706           
  Partials       29       29           
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/projectunic0rn/pub/pull/189?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/projectunic0rn/pub/pull/189?src=pr&el=footer). Last update [fccaef0...3d9afc7](https://codecov.io/gh/projectunic0rn/pub/pull/189?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",True,False,1,0.0
os-autoinst_____openQA_____3052,2020-05-12T09:51:13Z,True,os-autoinst_____openQA_____3052_____423608322,"I do understand reasons for ""never hide errors"" approach. But the main point of the Plugin is to help to make decisions regarding testing and releasing OBS deliverables. It is important to show information which can help to make those decisions in a consistent and friendly manner. Should some optional information be unavailable for some reasons - it is not big deal - the users should be able to make right move without it, or retrieve it from other sources. But they are definitely not interested to see occasional DB errors, especially when everything is on fire. 
The same for API request - it should return job_id of the test and may try to retrieve result of that job as well. It is caller's decision what to do with test_id when test result cannot be accessed for some reasons. But they don't want to get 500 response and wonder what's the problem, especially when there is no critical problem for what they requested and some functionality can try to remain robust even when database is on fire or something is experiencing temporary glitch or DB simply has to restart for some reasons, etc
I understand that reviewers would be happier if I created two versions of the same function - one throws errors, the other hides them when needed (i.e. always). But I don't really want to go this way and do want app logs be more friendly.
In other words - I do believe that software is written for users, not for developers. If at some point somebody is interested in occasional DB problems when building UI - they may have an idea where and what they what to store on those errors. But ""stop building UI if DB has problem"" is definitely not what users need in this particular case.",True,False,38,11631.5
os-autoinst_____openQA_____3052,2020-05-12T10:35:57Z,True,os-autoinst_____openQA_____3052_____423633135,"> But they are definitely not interested to see occasional DB errors, especially when everything is on fire.

They will not see them unless they look at the server log. Unlike in your development setup the Mojolicious framework is run in production mode on our production instances and users will just get a 500 response without any further details (which could even leak sensible information). So the eval hides information from *developers/admins*, not from the user. That the eval hides errors which might be useful for debugging is actually the main problem I have with it.

> But they don't want to get 500 response

I get your point that it is better for the user to see at least some information instead of just getting a 500 response. However, the error should then still be visible on the server log and not be completely ignored.

I'm also wondering whether this `eval` block would really help to prevent a 500 response in case the overall database access is broken. There's often a lot going on when serving a request and the database is likely used elsewhere anyways without `eval`. So likely that effort is just pointless.",True,False,38,11631.5
os-autoinst_____openQA_____3052,2020-05-12T12:00:54Z,True,os-autoinst_____openQA_____3052_____423677137,"Exactly - my point is that I cannot imagine situation when troubleshooting is needed of that line of code and thus I don't see any benefit of having that info in logs. And I am against the approach of flooding logs with all info you get 'just in case' and logging is needed only when you understand how to use it. And from the other side - if some DB problem happens - then flood of messages 'There is a DB problem' from every possible place will not help troubleshooting at all. 
And - yes, DB is mostly unused inside UI of the Plugin and it brings mostly supportive information, which is ok to hide occasionally.",True,False,38,11631.5
os-autoinst_____openQA_____3052,2020-05-12T14:23:17Z,True,os-autoinst_____openQA_____3052_____423775230,"Admittedly, when the database access is completely broken we don't benefit from the additional log message. But you also have to see that the eval is likely pointless because the route will likely not being rendered anyways when the database access is completely broken.

I'd also like to note that the `eval` hides *all kinds* of programming errors which are potentially within our code an need fixing. Let's assume one calls the function with an `$id` which leads to an DBIx exception (e.g. `$id` is some hash which DBIx tries to interpret as advanced search parameter). That would be clearly a bug within our code that should be fixed. The `eval` prevents us from finding it.",True,False,38,11631.5
opencv_____opencv_____17185,2020-05-12T14:41:14Z,True,opencv_____opencv_____17185_____423789333,"`MISH_THRESHOLD` is simply a cutoff for switching from a numerically unstable expression to a numerically stable expression in softplus.

The current OpenCV implementation which is `x * tanh(log(1 + exp(x)))` is numerically unstable. This implementation goes to zero when x is more negative than `-16`. Using `std::log1p` instead of `std::log(1 + std::exp(x))` might improve the numerical accuracy but this will still suffer as numbers become even more negative.

Darknet has been using `log(1 + exp(x))` and it seems to be very inaccurate (same implementation as OCV CPU in the range `[-20, 20]`) for numbers smaller than `-2`. I have dumped the values [here](https://gist.github.com/YashasSamaga/3fdf001d32f04062e3f36495d5c962db) comparing darknet with [other numerically more accurate implementations](https://cs.stackexchange.com/questions/125002/fast-and-stable-x-tanhlog1pexpx-computation).

If I remember correctly, the dynamic range of activations in YOLOv4 seems to cover the range ~`[-12000, 2000]` for a bunch of random 10 natural images. The middle 50% is covered in ~`[-100, 100]`.

Both Darknet and OpenCV CPU are giving really good results with their implementations. I don't know if there is a need to have a numerically stable implementation. But just for record sake, I have made a reply here.",True,True,22,83544.73333333334
os-autoinst_____openQA_____3052,2020-05-12T14:46:25Z,True,os-autoinst_____openQA_____3052_____423793511,"Using `eval {...}` without `$@` handling in cases like this is not defensive programming. It's just hiding potential bugs. If this API is so unstable that it would flood the logs with error messages, then the API needs to be fixed.",True,False,38,11631.5
os-autoinst_____openQA_____3052,2020-05-12T17:11:28Z,True,os-autoinst_____openQA_____3052_____423898344,"> If this API is so unstable that it would flood the logs with error messages

The question is about what behavior you want to have when 'DB is having hard time' and flood of errors is guaranteed anyway, so additional 'DB is having problem' from every OBS project whenever Plugin UI is loaded makes little sense.",True,False,38,11631.5
os-autoinst_____openQA_____3052,2020-05-12T17:20:01Z,True,os-autoinst_____openQA_____3052_____423903474,"> But you also have to see that the eval is likely pointless because the route will likely not being rendered anyways when the database access is completely broken

I don't see any reason why routes which don't need DB access at all would be broken when DB is down.

> The eval prevents us from finding it

I believe that error will be in postgres log, I don't see much benefit from having it in app log as well. If this is kind of red flag and you guys are sure you clearly want to see thousands useless errors when real troubleshooting is required - I definitely will follow your recommendations.",True,False,38,11631.5
os-autoinst_____openQA_____3052,2020-05-12T22:28:51Z,True,os-autoinst_____openQA_____3052_____424070179,That looks like it should be using `$@`.,True,False,38,11631.5
os-autoinst_____openQA_____3052,2020-05-12T22:29:41Z,True,os-autoinst_____openQA_____3052_____424070464,Probably should use `$@` too.,True,False,38,11631.5
os-autoinst_____openQA_____3052,2020-05-12T22:32:13Z,True,os-autoinst_____openQA_____3052_____424071368,Form validation would make sense here.,True,False,38,11631.5
os-autoinst_____openQA_____3052,2020-05-12T22:34:14Z,True,os-autoinst_____openQA_____3052_____424072081,"Actually, `readlink` usually does not raise errors but return an undef value (with `$!`). So this code is wrong.",True,False,38,11631.5
os-autoinst_____openQA_____3052,2020-05-13T05:22:57Z,True,os-autoinst_____openQA_____3052_____424179025,"Exactly - usually. And if it 'sometimes' throws an exception - it is enough reason to wrap it with eval, otherwise UI will not load at all in those cases instead of showing what it can.",True,False,38,11631.5
os-autoinst_____openQA_____3052,2020-05-13T08:51:46Z,True,os-autoinst_____openQA_____3052_____424277775,"Ok, maybe this even works when the whole database isn't available. I haven't traced where this is called. I'm just saying that most routes will be unavailable in that case, e.g. the overall UI would most certainly not load anymore because the database is required for the navbar.

> I believe that error will be in postgres log

If the potential programming/setup error produces a PostgreSQL query. But maybe DBIx won't even produce a query because it fails before.",True,False,38,11631.5
os-autoinst_____openQA_____3052,2020-05-13T09:00:27Z,True,os-autoinst_____openQA_____3052_____424283311,"> you guys are sure you clearly want to see thousands useless errors when real troubleshooting is required

It is true that when the DB is down we get lots of errors in the log (one per affected request and almost all requests are affected). So this doesn't make it much worse. However, if the *wrapped code* is really wrong (e.g. bug in DBIx, wrong `$id` being passed) we will not be able to find out about it because the error is hidden.",True,False,38,11631.5
os-autoinst_____openQA_____3052,2020-05-13T11:57:17Z,True,os-autoinst_____openQA_____3052_____424379604,"> But maybe DBIx won't even produce a query because it fails before.

> However, if the wrapped code is really wrong

Then not only the corresponding tests will fail, but functionality wouldn't be available. And if you don't care about functionality - then practically there would be no difference at all, at least no difference which can justifiy these discussions.",True,False,38,11631.5
os-autoinst_____openQA_____3052,2020-05-13T12:20:37Z,True,os-autoinst_____openQA_____3052_____424392304,"Then add a comment like `# we don't care at all if the information from the job is not accessible` because usually it makes a difference for us when certain functionality does not work. But when you don't care about this functionality, why do you put effort in implementing it in the first place? And since the code base is large enough maybe we could get rid of unneeded code then?",True,False,38,11631.5
opencv_____opencv_____17185,2020-05-13T12:45:52Z,True,opencv_____opencv_____17185_____424407745,"Now we use such Mish-implementation  https://github.com/AlexeyAB/darknet/issues/5452#issuecomment-627414024
```cpp
 __device__ float mish_yashas(float x) 
 { 
     float e = __expf(x); 
     if (x <= -18.0f) 
         return x * e; 
  
     float n = e * e + 2 * e; 
     if (x <= -5.0f) 
         return x * __fdividef(n, n + 2); 
  
     return x - 2 * __fdividef(x, n + 2); 
 } 
```
And get:
* +3% speedup
* the same accuracy on MSCOCO (testdev) yolov4.cfg 512x512 - 43.0% AP, 64.9% AP50
```
overall performance
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.430
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.649
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.465
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.243
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.461
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.552
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.341
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.542
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.572
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.375
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.612
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.729
Done (t=506.74s)
```",True,True,22,83544.73333333334
os-autoinst_____openQA_____3052,2020-05-13T17:09:57Z,True,os-autoinst_____openQA_____3052_____424598107,"It is you who don't care about functionality - me (and hopefully users of the UI) will complain if something doesn't work.

> Then add a comment like

It is not exactly `we don't care if information is not available`, more like `it is not critical if information is not available.` 
And doesn't you try to comment exactly what expression does? I think it is obvious that If something is wrapped in `eval`, then failure in that code is not critical and shouldn't break execution?",True,True,38,11631.5
os-autoinst_____openQA_____3052,2020-05-13T17:53:50Z,True,os-autoinst_____openQA_____3052_____424624540,"Good comments generally answer ""Why does it do this?"", and not ""What does it do?"".",True,False,38,11631.5
os-autoinst_____openQA_____3052,2020-05-13T17:58:08Z,True,os-autoinst_____openQA_____3052_____424627258,"I don't think `eval` (or `try` for that matter) says anything about how critical an exception is. It just says that you want to handle exceptions in that block of code yourself, for a reason you probably will have to explain in more detail.",True,False,38,11631.5
os-autoinst_____openQA_____3052,2020-05-13T18:01:02Z,True,os-autoinst_____openQA_____3052_____424629030,But let us take a step back. What exceptions specifically do you want to ignore here? In what cases does `->single({id => $id})` throw? Can you maybe replace that with a method/SQL query that handles the case more gracefully?,True,False,38,11631.5
os-autoinst_____openQA_____3052,2020-05-13T19:26:41Z,True,os-autoinst_____openQA_____3052_____424678710,I did write few times already that I want to make sure UI remains as robust as possible in every edge case scenario. If some property of unimportant UI control doesn't load - it is not big deal and most of functionality will remain useful even when some parts of system experience any kind of issues - permanent or transient.,True,True,38,11631.5
os-autoinst_____openQA_____3052,2020-05-13T21:07:55Z,True,os-autoinst_____openQA_____3052_____424731746,Then using `eval` here is not justified.,True,False,38,11631.5
os-autoinst_____openQA_____3052,2020-05-14T05:42:05Z,True,os-autoinst_____openQA_____3052_____424882665,"Care to explain why? DBIx is full of throw_exception(). What level of attitude gives you permission to decide that UI should be completely unavailable and all functionality must wait next hotpatch e.g. on every such occurrence, in every edge case scenario? Simplest example is if somebody renames the table and forgets to adjust all occurrences in source code, but the point is that you cannot guarantee that can understand well all situations where exception can occur, especially when new versions are released in future. And if you do wrap in eval - you guarantee that the main functionality will survive such cases. Or you do pretend that bugs don't happen and you can control what is happening in all places and what will be happening in future?",True,True,38,11631.5
os-autoinst_____openQA_____3052,2020-05-14T20:59:48Z,True,os-autoinst_____openQA_____3052_____425427081,"Since my opinion doesn't appear to be enough here i've asked the author of `DBIx::Class` for a second opinion:
```
22:41 <kraih> mst: do you believe it is a good idea to wrap every ""...->resultset(...)->single({id => 123})"" call in an eval as a measure of defensive programming?
22:42 — mst throws up in his mouth
22:42 <mst> mstcat does NOT approve of this.
22:42 <kraih> :D
22:43 <mst> DBIC will return either a single row or undef
22:43 <kraih> co-worker won't believe me, so i was hoping for something quote worthy from you
22:44 <mst> the only reasons that it would throw an exception are (1) your schema is broken, in which case fix your CI (2) not only is your $dbh disconnected but DBIC fails to reconnect as well
22:45 <mst> at which point bailing out the request is almost certainly the Correct thing to do anyway so you don't basically DoS yourself and/or your database
22:45 <mst> realistically, wrapping that in an eval is like wrapping twelve layers of clingfilm around a box that you're shipping a live cat in. no matter how good an idea it seems like, what arrives at the other end is going to make schroedinger cry.
23:31 — mst refills his vodka to drown the memory of discovering those evals exist
```
I hope that settles the issue once and for all.",True,False,38,11631.5
os-autoinst_____openQA_____3052,2020-05-15T06:57:41Z,True,os-autoinst_____openQA_____3052_____425603212,"Even your question has no relation to the discussion. It is not ""every call"" it is ""the only call in module"". And even his reply that there are cases when that code can throw errors didn't ring the bell for you, because it is one of cases I wanted to prevent from. E.g. I want the form to load even when the table is missing for some reasons or read locked. Is it enough reason? I know that problems happen in real world and I don't want to blame CI or admins or bugs or hardware or network - I want the form to be robust in those cases which I can cover.",True,False,38,11631.5
os-autoinst_____openQA_____3052,2020-05-15T09:01:36Z,True,os-autoinst_____openQA_____3052_____425664761,In which case do you believe this `readlink` call will throw an exception?,True,False,38,11631.5
os-autoinst_____openQA_____3052,2020-05-15T09:05:50Z,True,os-autoinst_____openQA_____3052_____425667103,"Let's assume I want to try the plugin on some exotic FS released in future or let's say in Windows. Other functionality will be still available, but because of this line - I couldn't try it at all. It is not question about thinking about all possible scenarios in advance - it is your attitude to what you want to have.",True,False,38,11631.5
os-autoinst_____openQA_____3052,2020-05-15T10:10:56Z,True,os-autoinst_____openQA_____3052_____425702428,"Windows support is completely out of the question, we rely much too strongly on features Windows Perl could never support (i know that because many of those features are used in Mojolicious and Minion). And i would very much appreciate it if you would refrain from ad-hominem attacks in the future.",True,False,38,11631.5
os-autoinst_____openQA_____3052,2020-05-15T10:22:56Z,True,os-autoinst_____openQA_____3052_____425708509,"To state the problem more clearly. The `->single` call above will only throw an exception in very serious situations, such as when the database schema is corrupted. Situations that always benefit from quick intervention by the maintainers.

So by making this a non-fatal error, several problems will arise, a) the problem will be less likely to be noticed in CI than a fatal error (log messages are easy to overlook while exceptions stop execution of the code), b) there is a big risk of further data corruption because execution did not stop here, c) the user will think everything is ok and not open a ticket (slowing down response), d) the standard framework exception handling will be disabled (which might have extra notification features enabled).

And that's just what i could think of at the moment, i'm sure there is more.",True,False,38,11631.5
os-autoinst_____openQA_____3052,2020-05-15T10:46:19Z,True,os-autoinst_____openQA_____3052_____425719757,"If the problem is really fatal - it will be noticed in other places. It is not fatal for this module, permanent or transient problems with DB are not enough reason to disable sync functionality. E.g. you wouldn't log out existing sessions ""to stop data corruption"" if login functionality doesn't work for some reasons. 

CI does check whether code inside eval functions correctly. So, CI failure will or will not happen when and only when functionality inside block is covered by tests. I don't see how CI can be reason for catching or not catching schema problems here, at least I do not see strong arguments here. But another scenario may happen : the tests results are ignored or tests are disabled by mistake or intentionally. Then all rsync functionality will be unavailable until patch because of non-critical issue. (Unless developers care to distinguish what is important and what is not).

And it doesn't need any exceptions handling here because 'DB is unavailable' is not an exceptional case for sync - it just does best effort to show info from DB and can just skip it as well.",True,False,38,11631.5
os-autoinst_____openQA_____3052,2020-05-15T12:37:00Z,True,os-autoinst_____openQA_____3052_____425771612,"It is not about support - not sure where it came from. It is about tolerance of edge case scenarios. It can even be some experimental custom build of perl or drivers or hardware etc - of course it is not supported, but still it can be useful in some scenarios. No need to pretend every possible edge case is known in advance. So why wouldn't just protect execution flow if particular failure is possible and can be tolerated (without regard how likely is the failure - ""it is possible"" and ""it can be tolerated"" is enough).",True,False,38,11631.5
os-autoinst_____openQA_____3052,2020-05-15T15:14:34Z,True,os-autoinst_____openQA_____3052_____425870481,"Perhaps you should have taken a look at the [readlink](https://metacpan.org/pod/distribution/perl/pod/perlfunc.pod#readlink1) documentation first. It says exactly when it will throw an exception. The [reasons](https://metacpan.org/pod/distribution/perl/pod/perlport.pod#readlink) are very very narrow, and exclusively portability. The only justification for an `eval` here is support of more platforms. Non-standard builds of Perl are a total straw man argument.",True,False,38,11631.5
os-autoinst_____openQA_____3052,2020-05-15T16:47:54Z,True,os-autoinst_____openQA_____3052_____629365007,"@kraih you can ""dismiss review"" e.g. on the three dots menu in the review+check summary box at the bottom. There for example I could dismiss both your approval as well as the ""change requested"" by Martchus.",True,True,38,11631.5
coding-blocks_____shortlr2-backend_____167,2020-05-15T17:05:41Z,True,coding-blocks_____shortlr2-backend_____167_____418704019,"The following documents are missing and should be added to validate the open source project and structure a community.

- [x] Pull Request Template
- [x] Issue Template
- [x] Contributing Guidelines
- [x] Code Of conduct

Fixes #166",True,True,12,12899.466666666667
coding-blocks_____shortlr2-backend_____167,2020-05-15T17:06:47Z,True,coding-blocks_____shortlr2-backend_____167_____629374780,"Warnings are found on analyzing the commit 846958d1346507c72cc980768746ab1c2706ea1c.

**1** warning:
- ⚠️ [TSLint](https://sider.review/gh/repos/155214828/pulls/167/logs/f72c65b3-c122-4637-8894-0992cda99b92)

We recommend to address them as possible, for example, update outdated dependencies, fix the tool's configuration, [configure `sider.yml`](https://help.sider.review/getting-started/custom-configuration), [turn off unused tools](https://help.sider.review/getting-started/repository-settings), and so on.

If you are struggling with these errors or warnings, feel free to ask us via chat. 💬",True,True,12,12899.466666666667
coding-blocks_____shortlr2-backend_____167,2020-05-15T17:10:38Z,True,coding-blocks_____shortlr2-backend_____167_____629376433,"> Warnings are found on analyzing the commit [846958d](https://github.com/coding-blocks/shortlr2-backend/commit/846958d1346507c72cc980768746ab1c2706ea1c).
> 
> **1** warning:
> 
> * warning [TSLint](https://sider.review/gh/repos/155214828/pulls/167/logs/f72c65b3-c122-4637-8894-0992cda99b92)
> 
> We recommend to address them as possible, for example, update outdated dependencies, fix the tool's configuration, [configure `sider.yml`](https://help.sider.review/getting-started/custom-configuration), [turn off unused tools](https://help.sider.review/getting-started/repository-settings), and so on.
> 
> If you are struggling with these errors or warnings, feel free to ask us via chat.

error not triggered by PR, cause by existing file",True,True,12,12899.466666666667
kuaiyixiu/test_kxnz1/1,2020-05-15T22:28:45Z,False,5ebfb566bd3543296f2142af,Superseded by #4.,True,False,1,0.0
Aurorastation_____Aurora.3_____8800,2020-05-16T19:30:08Z,True,Aurorastation_____Aurora.3_____8800_____426183560,"```suggestion
		return FALSE

	if(landmark.landmark_tag in given_sector.initial_generic_waypoints)
		given_sector.add_landmark(landmark)
		. = TRUE
	for(var/shuttle_name in given_sector.initial_restricted_waypoints)
		if(landmark.landmark_tag in given_sector.initial_restricted_waypoints[shuttle_name])
			given_sector.add_landmark(landmark, shuttle_name)
			. = TRUE
```",True,False,14,20523.9
Aurorastation_____Aurora.3_____8800,2020-05-16T19:30:17Z,True,Aurorastation_____Aurora.3_____8800_____426183576,physically crying.,True,False,14,20523.9
Aurorastation_____Aurora.3_____8800,2020-05-16T19:31:00Z,True,Aurorastation_____Aurora.3_____8800_____426183638,Initialize instead of new?,True,False,14,20523.9
Aurorastation_____Aurora.3_____8800,2020-05-16T19:32:05Z,True,Aurorastation_____Aurora.3_____8800_____426183691,Undef this at the end of the file.,True,False,14,20523.9
Aurorastation_____Aurora.3_____8800,2020-05-16T19:44:30Z,True,Aurorastation_____Aurora.3_____8800_____426184677,"ruh roh. this is bad. Shouldn't this be `return TOPIC_NO_ACTION` or just, `. = ..(); return`? Cuz right now we're returning null and losing data and potentially causing a security shenanigans.",True,False,14,20523.9
Aurorastation_____Aurora.3_____8800,2020-05-16T19:46:43Z,True,Aurorastation_____Aurora.3_____8800_____426184861,AAAAAAAAAAAAAAAAAAA. This will lag the server if we ever EVER spawn this object mid-round.,True,False,14,20523.9
Aurorastation_____Aurora.3_____8800,2020-05-16T19:47:38Z,True,Aurorastation_____Aurora.3_____8800_____426184939,`TOPIC_HANDLED` is apparently what you're supposed to do here?,True,False,14,20523.9
Aurorastation_____Aurora.3_____8800,2020-05-16T19:50:58Z,True,Aurorastation_____Aurora.3_____8800_____426185228,"```suggestion
	if(stat & (NOPOWER|BROKEN))
```",True,False,14,20523.9
Aurorastation_____Aurora.3_____8800,2020-05-16T19:52:28Z,True,Aurorastation_____Aurora.3_____8800_____426185329,"```suggestion
	. = ..()
	if(. != null)
```",True,False,14,20523.9
SwitchbladeBot_____switchblade_____1110,2020-05-16T22:19:56Z,True,SwitchbladeBot_____switchblade_____1110_____419030240,"New move command that moves a message from a channel to another.

Also fixed missing strings for channel type of argument.

Closes #769 ",True,True,55,13247.766666666666
SwitchbladeBot_____switchblade_____1110,2020-05-16T22:19:56Z,True,SwitchbladeBot_____switchblade_____1110_____619565976,"New move command that moves a message from a channel to another.

Also fixed missing strings for channel type of argument.

Closes #769 ",True,True,55,13247.766666666666
SwitchbladeBot_____switchblade_____1110,2020-05-17T00:20:23Z,True,SwitchbladeBot_____switchblade_____1110_____426202992,What does this refer to?,True,False,55,13247.766666666666
SwitchbladeBot_____switchblade_____1110,2020-05-17T00:23:40Z,True,SwitchbladeBot_____switchblade_____1110_____426203150,Maybe make this its own `message` parameter?,True,False,55,13247.766666666666
SwitchbladeBot_____switchblade_____1110,2020-05-17T00:24:25Z,True,SwitchbladeBot_____switchblade_____1110_____426203167,How about turning this into `userChannelPermissions` and `botChannelPermissions` property on the `channel` parameter?,True,False,55,13247.766666666666
SwitchbladeBot_____switchblade_____1110,2020-05-17T00:29:04Z,True,SwitchbladeBot_____switchblade_____1110_____426203443,"```suggestion
    ""commandUsage"": ""<message link> <channel>"",
```",True,False,55,13247.766666666666
SwitchbladeBot_____switchblade_____1110,2020-05-17T01:07:26Z,True,SwitchbladeBot_____switchblade_____1110_____426205410,"```suggestion
      embed.setTitle(t('commands:move.invalidMessageLink'))
        .setDescription(t('commands:move.missingMessageLink'))
        .setColor(Constants.ERROR_COLOR)
```",True,False,55,13247.766666666666
SwitchbladeBot_____switchblade_____1110,2020-05-17T01:07:44Z,True,SwitchbladeBot_____switchblade_____1110_____426205443,how do i make multiline suggestion?,True,False,55,13247.766666666666
SwitchbladeBot_____switchblade_____1110,2020-05-17T01:08:32Z,True,SwitchbladeBot_____switchblade_____1110_____426205488,"```suggestion
    const [_, guildId, channelId, messageId] = matchedLink
```",True,False,55,13247.766666666666
SwitchbladeBot_____switchblade_____1110,2020-05-17T01:09:08Z,True,SwitchbladeBot_____switchblade_____1110_____426205521,"why dont just
```suggestion
      throw new CommandError('commands:move.couldntFindChannel')
```",True,False,55,13247.766666666666
SwitchbladeBot_____switchblade_____1110,2020-05-17T01:09:53Z,True,SwitchbladeBot_____switchblade_____1110_____426205568,why are you requiring discord in the middle of the process??,True,False,55,13247.766666666666
SwitchbladeBot_____switchblade_____1110,2020-05-17T01:11:54Z,True,SwitchbladeBot_____switchblade_____1110_____426205684,"all these lines prob. could be solved with:

```js
       ['fields', 'title', 'description', ...].forEach(p => {
           embed[p] = recievedMessage.embeds[0][p]
       })
```",True,False,55,13247.766666666666
SwitchbladeBot_____switchblade_____1110,2020-05-17T01:12:52Z,True,SwitchbladeBot_____switchblade_____1110_____426205759,"again, why not throw a CommandError?",True,False,55,13247.766666666666
SwitchbladeBot_____switchblade_____1110,2020-05-17T01:15:29Z,True,SwitchbladeBot_____switchblade_____1110_____426205886,"what the fuck this can lead to so many problems in translations. you need to do something like that on translations:
```
""thisMessage"": ""Sent by {{author}} moved from {{channel}} by {{something}}""
```
and then
```js
destinationChannel.send(t('commands:move.thisMessage', {
	author: recievedMessage.author.username,
	...
}))
```
",True,True,55,13247.766666666666
SwitchbladeBot_____switchblade_____1110,2020-05-17T01:17:26Z,True,SwitchbladeBot_____switchblade_____1110_____426205993,"No need for the `_`, I'm pretty sure you can just add the comma without anything beforehand.",True,False,55,13247.766666666666
SwitchbladeBot_____switchblade_____1110,2020-05-17T01:43:23Z,True,SwitchbladeBot_____switchblade_____1110_____426207396,sure,True,False,55,13247.766666666666
TFPatches_____TotalFreedomMod_____197,2020-05-17T02:02:55Z,True,TFPatches_____TotalFreedomMod_____197_____419048756,,True,True,3,1.4166666666666667
TFPatches_____TotalFreedomMod_____197,2020-05-17T02:04:10Z,True,TFPatches_____TotalFreedomMod_____197_____629731524,shut the fuck up ajax nobody asked you,True,True,3,1.4166666666666667
TFPatches_____TotalFreedomMod_____197,2020-05-17T02:04:20Z,True,TFPatches_____TotalFreedomMod_____197_____629731537,fuck video,True,True,3,1.4166666666666667
ifewalter/supermodular/21,2020-05-18T16:13:44Z,False,5ec3757bbd35433222d4fd29,Superseded by #22.,True,False,1,0.0
SwitchbladeBot_____switchblade_____1110,2020-05-18T19:11:10Z,True,SwitchbladeBot_____switchblade_____1110_____426838593,"```suggestion
```

No need for that many comments. Write them in the Pull Request next time.",True,False,55,13247.766666666666
SwitchbladeBot_____switchblade_____1110,2020-05-18T19:12:39Z,True,SwitchbladeBot_____switchblade_____1110_____426839384,"```suggestion
      if (link.channel.nsfw && !destinationChannel.nsfw) throw new CommandError('commands:move.channelsHaveDifferentType')
      if (!link.channel.permissionsFor(this.client.user.id).has('MANAGE_MESSAGES')) throw new CommandError('commands:move.cantDeleteMessage')
      if (!link.channel.permissionsFor(author.id).has('SEND_MESSAGES')) throw new CommandError('commands:move.userCantSend')
```",True,False,55,13247.766666666666
SwitchbladeBot_____switchblade_____1110,2020-05-18T19:12:56Z,True,SwitchbladeBot_____switchblade_____1110_____426839530,"```suggestion
    if (!destinationChannel.permissionsFor(this.client.user.id).has('SEND_MESSAGES')) throw new CommandError('commands:move.cantSendInChannel')
```",True,False,55,13247.766666666666
SwitchbladeBot_____switchblade_____1110,2020-05-18T19:13:59Z,True,SwitchbladeBot_____switchblade_____1110_____426840069,Why does this send two different messages?,True,False,55,13247.766666666666
SwitchbladeBot_____switchblade_____1110,2020-05-18T19:19:46Z,True,SwitchbladeBot_____switchblade_____1110_____426842800,This is not being used anywhere,True,False,55,13247.766666666666
SwitchbladeBot_____switchblade_____1110,2020-05-18T19:20:12Z,True,SwitchbladeBot_____switchblade_____1110_____426843075,This is not being used anywhere,True,False,55,13247.766666666666
SwitchbladeBot_____switchblade_____1110,2020-05-18T19:21:07Z,True,SwitchbladeBot_____switchblade_____1110_____426843537,This is not being used anywhere,True,False,55,13247.766666666666
SwitchbladeBot_____switchblade_____1110,2020-05-18T19:22:09Z,True,SwitchbladeBot_____switchblade_____1110_____426844034,"```suggestion
    ""commandDescription"": ""Moves a message from one channel to another."",
```",True,False,55,13247.766666666666
SwitchbladeBot_____switchblade_____1110,2020-05-18T19:22:22Z,True,SwitchbladeBot_____switchblade_____1110_____426844130,"```suggestion
    ""commandUsage"": ""<message link> <channel>"",
```",True,False,55,13247.766666666666
SwitchbladeBot_____switchblade_____1110,2020-05-18T19:22:38Z,True,SwitchbladeBot_____switchblade_____1110_____426844267,"```suggestion
    ""missingMessageLink"": ""You need to give me a message link."",
```",True,False,55,13247.766666666666
SwitchbladeBot_____switchblade_____1110,2020-05-18T19:23:19Z,True,SwitchbladeBot_____switchblade_____1110_____426844587,"```suggestion
    ""missingChannelMention"": ""You need to give me a channel."",
```",True,False,55,13247.766666666666
SwitchbladeBot_____switchblade_____1110,2020-05-18T19:24:06Z,True,SwitchbladeBot_____switchblade_____1110_____426844972,"```suggestion
        const guild = client.guilds.get(guildId)
        if (!guild) throw new CommandError(t('errors:validLinkButNotInGuild'))
```",True,False,55,13247.766666666666
SwitchbladeBot_____switchblade_____1110,2020-05-18T19:24:20Z,True,SwitchbladeBot_____switchblade_____1110_____426845102,"```suggestion
        const channel = guild.channels.get(channelId)
        if (!channel) throw new CommandError(t('errors:validLinkButGhostChannel'))
```",True,False,55,13247.766666666666
SwitchbladeBot_____switchblade_____1110,2020-05-18T19:24:50Z,True,SwitchbladeBot_____switchblade_____1110_____426845336,"```suggestion
          const recievedMessage = await channel.fetchMessage(messageId)
          if (!recievedMessage) throw new CommandError(t('errors:validLinkButGhostMessage'))
```",True,False,55,13247.766666666666
SwitchbladeBot_____switchblade_____1110,2020-05-18T19:25:58Z,True,SwitchbladeBot_____switchblade_____1110_____426845955,"```suggestion
          if (this.returnIfExists) return recievedMessage
```",True,False,55,13247.766666666666
SwitchbladeBot_____switchblade_____1110,2020-05-18T19:27:03Z,True,SwitchbladeBot_____switchblade_____1110_____630389789,@moruzerinho6 would you mind explaining what does `returnIfExists` do? Why is it necessary? Shouldn't it just be default behavior?,True,True,55,13247.766666666666
SwitchbladeBot_____switchblade_____1110,2020-05-18T19:31:02Z,True,SwitchbladeBot_____switchblade_____1110_____630391672,"If returnIfExists is disabled, the user gets the result of the regex, where he can extract the guildId, channelId, messageId and the fullLink. Making this an option will enable new commands to extract those informations.",True,True,55,13247.766666666666
SwitchbladeBot_____switchblade_____1110,2020-05-18T19:32:19Z,True,SwitchbladeBot_____switchblade_____1110_____426849019,"imagineParsingError is not me, invalidChannelType is being used on line 29 of ChannelParameter.js.
https://github.com/SwitchbladeBot/switchblade/blob/dev/src/structures/command/parameters/types/ChannelParameter.js#L29",True,False,55,13247.766666666666
SwitchbladeBot_____switchblade_____1110,2020-05-18T19:32:24Z,True,SwitchbladeBot_____switchblade_____1110_____426849063,"```suggestion
    ""messageMoved"": ""Message sent by {{authorName}} and moved from {{movedFrom}} by {{movedBy}}."",
```",True,False,55,13247.766666666666
SwitchbladeBot_____switchblade_____1110,2020-05-18T19:32:48Z,True,SwitchbladeBot_____switchblade_____1110_____426849276,"Is being used in line 40 of ChannelParameter.js
https://github.com/SwitchbladeBot/switchblade/blob/dev/src/structures/command/parameters/types/ChannelParameter.js#L40",True,False,55,13247.766666666666
SwitchbladeBot_____switchblade_____1110,2020-05-18T19:35:33Z,True,SwitchbladeBot_____switchblade_____1110_____426850552,"Line 12 of move.js
`missingError: 'commands:move.missingMessageLink'`

Line 14 of move.js
`missingError: 'commands:move.missingMessageLink`

You're right about invalidMessageLink.",True,False,55,13247.766666666666
SwitchbladeBot_____switchblade_____1110,2020-05-18T19:37:06Z,True,SwitchbladeBot_____switchblade_____1110_____630394465,"> If returnIfExists is disabled, the user gets the result of the regex, where he can extract the guildId, channelId, messageId and the fullLink. Making this an option will enable new commands to extract those informations.

Can we rename it to `returnRegexResult` and make it `false` by default?",True,True,55,13247.766666666666
SwitchbladeBot_____switchblade_____1110,2020-05-18T19:38:26Z,True,SwitchbladeBot_____switchblade_____1110_____630395032,Sure.,True,True,55,13247.766666666666
SwitchbladeBot_____switchblade_____1110,2020-05-18T19:39:53Z,True,SwitchbladeBot_____switchblade_____1110_____426852625,"This comment refers to `invalidMessageLink` only. Accept this suggestion to remove it:

```suggestion
```",True,False,55,13247.766666666666
SwitchbladeBot_____switchblade_____1110,2020-05-18T19:41:39Z,True,SwitchbladeBot_____switchblade_____1110_____426853437,"Lol, thanks github for showing all 4 lines then. I already changed many lines on my local file so I'll do all the changes here and commit them all in a instant.",True,False,55,13247.766666666666
SwitchbladeBot_____switchblade_____1110,2020-05-18T20:46:22Z,True,SwitchbladeBot_____switchblade_____1110_____426884238,"```suggestion
```",True,False,55,13247.766666666666
SwitchbladeBot_____switchblade_____1110,2020-05-18T20:46:29Z,True,SwitchbladeBot_____switchblade_____1110_____426884289,"```suggestion
```",True,False,55,13247.766666666666
SwitchbladeBot_____switchblade_____1110,2020-05-18T20:46:45Z,True,SwitchbladeBot_____switchblade_____1110_____426884409,"```suggestion
```",True,False,55,13247.766666666666
SwitchbladeBot_____switchblade_____1110,2020-05-18T20:47:15Z,True,SwitchbladeBot_____switchblade_____1110_____426884638,"```suggestion
    ""commandDescription"": ""Moves a message from one channel to another."",
```",True,False,55,13247.766666666666
SwitchbladeBot_____switchblade_____1110,2020-05-18T20:47:36Z,True,SwitchbladeBot_____switchblade_____1110_____426884821,"```suggestion
    ""userCantSend"": ""You can't send messages in that channel."",
```",True,False,55,13247.766666666666
dz-experts/grocery-stores-home-delivery/75,2020-05-19T07:59:53Z,False,5ec5024fbd354349d1039da6,Superseded by #77.,True,False,1,0.0
HippieStation_____PRMirror_____16,2020-05-19T09:16:00Z,True,HippieStation_____PRMirror_____16_____630696119,@Neo1w maintainer wasn't responding,True,True,19,209551.81666666668
HippieStation_____PRMirror_____16,2020-05-19T09:16:49Z,True,HippieStation_____PRMirror_____16_____630696592,"If you want the code changes, just fork from austation's PR Mirror repo.",True,True,19,209551.81666666668
SwitchbladeBot_____switchblade_____1110,2020-05-19T14:24:57Z,True,SwitchbladeBot_____switchblade_____1110_____427343933,"why this, they return the same thing",True,False,55,13247.766666666666
oatemeal_____E508-Framework_____1,2020-05-19T16:25:24Z,True,oatemeal_____E508-Framework_____1_____420228896,,True,True,7,154.23333333333332
oatemeal_____E508-Framework_____1,2020-05-19T16:29:10Z,True,oatemeal_____E508-Framework_____1_____427436898,"I changed this because I think it's stupid, but idk what people want",True,False,7,154.23333333333332
oatemeal_____E508-Framework_____1,2020-05-19T16:31:14Z,True,oatemeal_____E508-Framework_____1_____427438314,"No need to see ranks, I don't think?",True,False,7,154.23333333333332
Otus-DevOps-2020-02/gvashchenkolineate_microservices/3,2020-05-19T16:31:46Z,False,5ec40b5cbd35434266b69442,"@mrgreyves , подскажите, пожалуйста, почему не получается docker-compose'ом сделать, чтобы на docker-machine подсоединялся не пустой volume с локального хоста?

То же самое без docker-machine работает нормально, т.е. локальный каталог маунтится в контейнер, и можно редактировать код приложения налету.",True,False,2,1192.1333333333334
oatemeal_____E508-Framework_____1,2020-05-19T16:33:15Z,True,oatemeal_____E508-Framework_____1_____427439947,Vehicles unlocked by default,True,False,7,154.23333333333332
oatemeal_____E508-Framework_____1,2020-05-19T16:34:11Z,True,oatemeal_____E508-Framework_____1_____427440580,"Shit variable name, this hides the squad bar, because we should never need it?",True,True,7,154.23333333333332
oatemeal_____E508-Framework_____1,2020-05-19T16:52:40Z,True,oatemeal_____E508-Framework_____1_____427452438,disagree on this wan - put in earplugs mate; that's what they're there for,True,False,7,154.23333333333332
oatemeal_____E508-Framework_____1,2020-05-19T18:59:38Z,True,oatemeal_____E508-Framework_____1_____427531128,"Not needed if file is called `cba_settings.sqf`.

https://github.com/CBATeam/CBA_A3/wiki/CBA-Settings-System#mission-settings",True,False,7,154.23333333333332
HippieStation_____PRMirror_____16,2020-05-19T22:39:56Z,True,HippieStation_____PRMirror_____16_____631124689,fair,True,True,19,209551.81666666668
Otus-DevOps-2020-02/gvashchenkolineate_microservices/3,2020-05-20T12:23:54Z,False,5ec5241abd35437739ca2d97,👍👍👍,True,False,2,1192.1333333333334
google_____styleguide_____428,2020-05-21T00:07:03Z,True,google_____styleguide_____428_____631801604,"The purpose of this commit is to avoid potential problems associated with BOMs, since they have been known to halt some script interpreters and compilers in their tracks.

Personally speaking, I have never experienced any problems by omitting the BOM.  But I write/code primarily in English.  If non-English writing/coding doesn't necessitate a BOM then it seems that the appropriate option would be to forgo its use, by default.",True,True,13,724371.4333333333
google_____styleguide_____428,2020-05-21T01:27:36Z,True,google_____styleguide_____428_____631824103,"This doesn't really seem worth stipulating; the [BOM has no meaning for UTF-8](https://en.wikipedia.org/wiki/Byte_order_mark#UTF-8):

> The Unicode Standard permits the BOM in UTF-8,[3] but does not require or recommend its use.[4] Byte order has no meaning in UTF-8,[5] so its only use in UTF-8 is to signal at the start that the text stream is encoded in UTF-8, or that it was converted to UTF-8 from a stream that contained an optional BOM. The standard also does not recommend removing a BOM when it is there, so that round-tripping between encodings does not lose information, and so that code that relies on it continues to work.

What's the motivation for calling this out? Interpreters that don't handle BOMs sound like they aren't properly implementing the UTF-8 spec and should be fixed.",True,True,13,724371.4333333333
google_____styleguide_____428,2020-05-21T03:40:23Z,True,google_____styleguide_____428_____631860307,"The reason is that back-compatibility with ASCII is a major benefit of UTF-8.

For instance a Windows `.bat`/batch file saved as UTF-8 + BOM will crash when run because the command interpreter doesn't understand the BOM (ie. `∩╗┐`) prefix -- It's just garbage, which also displays in some text editors; which could easily confuse one as to whether to let this _mysterious garbage_ persist, or should they remove it?

The following Unicode laced `.bat` file, saved as UTF-8, will work properly only when saved _**without**_ a BOM:
```
echo ""☺ Ł"" >textfile.txt
```

As the standard itself states, it neither requires nor recommends the use of a BOM, with UTF-8.

The so-called ""round-tripping"" scenario is really only appropriate when dealing with (pre-existing / external) text files, input into a program --not to the (Google) source code to be executed.

So ideally one shouldn't erase existing BOMs, willy-nilly, because they may be processed by another system which, against the standard's recommendation, expects their presence.  However, when fresh source files are created, the BOM is probably best avoided, in accordance with the Unicode/UTF-8 recommendation.

It follows the programming principle: ""Be liberal in what you accept and conservative in what you send.""

",True,True,13,724371.4333333333
google_____styleguide_____428,2020-05-21T06:40:48Z,True,google_____styleguide_____428_____631914027,"I don't think this is worth adding. As you say, the UTF-8 spec already discourages using a BOM when feasible, and I don't see any reason why it being a Java source file introduces further complexity that merits calling this out in the style guide. I'm not certain I've ever even seen a UTF-8 file with a BOM...",True,True,13,724371.4333333333
google_____styleguide_____428,2020-05-21T12:30:45Z,True,google_____styleguide_____428_____632059493,"If it's worth stating that the file should be in UTF-8 format then it's worth mentioning the avoidance of a BOM.

But that's just my little ol' opinion.",True,True,13,724371.4333333333
opencv_____opencv_____17185,2020-05-21T14:08:13Z,True,opencv_____opencv_____17185_____632106733,"Hello,
I had understood that yolov4 was already working on version 3.4.10, but I tried and got the error:

`cv2.error: OpenCV(3.4.10) /opencv-3.4.10/modules/dnn/src/darknet/darknet_io.cpp:821: error: (-212:Parsing error) Unsupported activation: mish in function 'ReadDarknetFromCfgStream'`

I'm buildin OpenCV 3.4.10 from source on a docker container. I'm cloning this repository:
https://github.com/Itseez/opencv/archive/3.4.10.zip

I'm not very familiar with this, so can someone please give me a simple answer like ""It's not working yet"" or ""It's already working, you can git clone this link"", instead of referencing another one confused thread.",True,True,22,83544.73333333334
google_____styleguide_____428,2020-05-21T16:30:55Z,True,google_____styleguide_____428_____632193162,"![utf-8_bom](https://user-images.githubusercontent.com/7102064/82581650-bdf1a380-9b45-11ea-8d43-d772c79befde.png)
[ What if my editor is dumb and pre-checks the BOM box, for UTF-8 files, or just includes it without giving me any option? ]",True,True,13,724371.4333333333
opencv_____opencv_____17185,2020-05-21T17:16:13Z,True,opencv_____opencv_____17185_____632233374,"It's not working yet, wait for the next release or get latest _master_ or _3.4_ branch version and build it manually.",True,True,22,83544.73333333334
google_____styleguide_____428,2020-05-21T20:45:44Z,True,google_____styleguide_____428_____632336170,"It's not the goal of the Java Style Guide to address all possible configuration issues; we require Java source code to be UTF-8 for numerous reasons, but the presence or absence of a BOM is not something we need to make a ruling on. Leave it off when possible, as the UTF-8 spec already says.",True,True,13,724371.4333333333
google_____styleguide_____428,2020-05-21T21:11:52Z,True,google_____styleguide_____428_____632348444,"So as long as everyone reads through at least the first 39 pages of the Unicode standard then there shouldn't be any problem.  Why would anyone even consider using `.BAT` files to automate Java code compilation or execution?  I'm such an idiot.  I'm so sorry for wasting your precious time with a totally realistic scenario; and providing examples to support it.

Meanwhile, you've provided zero evidence to support your claim, which is based solely on your personal experience.  The Wikipedia snippet, a somewhat pathetic and non-authoritative source, in all honesty, actually supports my argument.

If I ever make a contribution to Google I will be sure to include that BOM.

It's no wonder that even Google's own engineers could care less about the company's style guides.

And here I'd thought that Google workers were above mansplaining.  Stupid me.",True,True,13,724371.4333333333
google_____styleguide_____428,2020-05-22T01:02:15Z,True,google_____styleguide_____428_____632421578,"Hi veganaize, first, let me say thank you for sending this PR; I should have done so in an earlier comment. Rejecting the PR is in no way a statement about you, nor your qualifications. Although it's true that Google's public style guides are under-curated (a situation we all lament, but no one has stepped up to address) we care very deeply about the contents of our style guides, and therefore are very conservative in what we add to it. My intent here was to bring closure to this issue, since it had unfortunately sat unaddressed for some time.

You are absolutely right that there are situations where a BOM can matter, and it is reasonable to discourage their use. In our experience at Google this has not been a major issue (admittedly, most internal development happens on Linux, so issues related to `.bat` scripting are indeed something we don't typically run into). Looking into historical internal discussions around BOMs affecting Google Java developers I can find very little, and nothing related to BOMs in the `.java` source files themselves. None of which invalidates your concern, but in our opinion it doesn't rise to a level of severity to merit calling out in the Style Guide. Many best practices are intentionally not included in the guide simply because we don't want to make a ruling we don't have to. We trust teams to identify their own best practices where we don't make stipulations.

Of note, this doesn't appear to be a Java-specific issue, and I notice only the HTML/CSS guide makes any mention of it. Perhaps we should consistently discourage BOMs across all our style guides, but I don't believe it's necessary to make the Java guide an outlier in this regard.

> If I ever make a contribution to Google I will be sure to include that BOM.

I would ask that you do so with good-faith, but *please do* include a BOM if you believe it is relevant. We put a lot of faith in our tooling, and count on developers both internally and externally to help catch places where our tooling falls short. If a BOM breaks something we rely on, we will want to fix it. You might even [get paid](https://www.google.com/about/appsecurity/reward-program/) if you are able to find an exploit related to mishandling of BOMs.

> And here I'd thought that Google workers were above mansplaining. Stupid me.

One of the things I have deeply, deeply valued about my time at Google has been the candid and open discussions around issues of identity, gender inequality, and respect. We continue to fall short in many ways, but I am proud of the effort my peers have made to create a culture that is welcoming and inclusive. I don't believe anything I've said could fairly be labeled mansplaining, but I am sorry that I was curt. Again, thank you for raising this issue.",True,True,13,724371.4333333333
hacs_____integration_____1227,2020-05-22T20:10:03Z,True,hacs_____integration_____1227_____422121290,"Due to popular? opinion I'm making this PR to bring back the old UI.
![image](https://user-images.githubusercontent.com/15093472/82704510-fdb7a880-9c75-11ea-951c-06a7c48041af.png)

This will also bring back all the issues it was with that UI, and I will only do bugfixes from this point in the UI, you can still add feature requests but I will not be adding them.

The reasons I changed it in the first place:
- It was falling behind HA, in how it felt to use and I wanted to bring it closer.
- It has performance issues, and those will continue to grow with each new repository that is added.
- The codebase are hard to maintain, there are elements all over the place that somehow ties together.

There has been a great number of feature requests added for the new UI, I will pause the work on them until this is decided.

closes #1226, closes #1225, closes #1224, closes #1223, closes #1219, closes #1218, closes #1216, closes #1213, closes #1212, closes #1210, closes #1208, closes #1196, closes #1193, closes #1189, closes #1188, closes #1185, closes #1183

Frankly, I'm just too tired with all the negativity...

So add your votes on this description:
👍 Merge this.
👎 Keep working on the new UI.",True,True,19,2272.3333333333335
hacs_____integration_____1227,2020-05-22T20:33:46Z,True,hacs_____integration_____1227_____632898841,"Please keep working on the new UI, specially because of performance, just what is installed needs to be solved.
",True,True,19,2272.3333333333335
hacs_____integration_____1227,2020-05-22T21:13:23Z,True,hacs_____integration_____1227_____632910803,"i think the new will be good - just some ideas that needed more sorting
There was nothing publish to say problems with old ui
It may have been better to post this updated UI as a release candidate   and let people get more used to it
It was pushed as a release that did the original functions better - internally this is true but interface looked like it was missing a lot of functionality but in fact it good but needs a little tweaking  and for us to get heads around a new way of doing things  

I am getting more used to it 

well done on doing the code but a slower release would have put  the dreaded users in a more accepting mindset  ",True,True,19,2272.3333333333335
hacs_____integration_____1227,2020-05-22T22:25:23Z,True,hacs_____integration_____1227_____632931668,"Theres stuff about the new one I don't like (no table view, new repos not grouped, Plugins and Themes should be seperate) but I would never have started a thread to bitch about it. There's only one way to go and that is forward, not back.",True,True,19,2272.3333333333335
hacs_____integration_____1227,2020-05-22T22:41:24Z,True,hacs_____integration_____1227_____632934898,"While i understand that performance and reasonable code mus be prioritized, the new UI was more difficult to use and less feature-rich IMHO, no matter how it moves forward, new or old. I really hope the liste of installed custom components is kept.",True,True,19,2272.3333333333335
hacs_____integration_____1227,2020-05-23T05:38:36Z,True,hacs_____integration_____1227_____632989271,"The new UI is really hard to use, I don't know where anything is or what to do.
Is it possible for users to choose? The old version was much more intuitive.

I know this might be hard to hear but maybe do beta testing of the new UI and when it is as easy to use as the old UI switch over. It's just very polorizing atm.

My screen was full of repos, I didn't know what was mine and what wasn't, i didn't know how to add to lovelace or install new repos",True,True,19,2272.3333333333335
hacs_____integration_____1227,2020-05-23T08:04:22Z,True,hacs_____integration_____1227_____633004366,"There is some real good stuff about the new one, so as others say, move forward and add some requests. What I personally liked about the old is that you could see the entire repository abs discover new things. With the limit to 100 and not setting new things, we have to discover new features in another way. 

Thumbs up for the great work! HACS makes life so much easier!!",True,True,19,2272.3333333333335
hacs_____integration_____1227,2020-05-23T08:28:35Z,True,hacs_____integration_____1227_____633006909,"Hell no Ludeeus, keep going forward. Please do not revert

Also please do not entertain the idea of having both layouts and the user choose which to use, you know this will still have the issues described above and just create additional effort from you.
",True,True,19,2272.3333333333335
hacs_____integration_____1227,2020-05-23T09:07:48Z,True,hacs_____integration_____1227_____633011368,"I think that the new UI was not yet ready to go replace the main one, but since its already there, instead of reverting it, its better to focus on fixing its usability.
The new UI is genuinely prettier than the old one, the only problems is in its ergonomics, but since you say that the new UI codebase is way easier to maintain, it should be a big struggle to fix the issues people are having. ",True,True,19,2272.3333333333335
hacs_____integration_____1227,2020-05-23T12:16:20Z,True,hacs_____integration_____1227_____633041016,"how the hell do i downgrade back ?
lost ability to downgrade an installed component   <<   gigantic miss ??
UI glitch problems where the page can't decide between 4 or 5 columns, i have seen my screen shift between the 2 constantly for no reason
when i install a component, it does not tell me to add it to lovelace, HOLY SHIT, this is a HUGE required - i don`t know why someone would scrap that.",True,True,19,2272.3333333333335
hacs_____integration_____1227,2020-05-23T12:26:17Z,True,hacs_____integration_____1227_____633043097,"> how the hell do i downgrade back ?
> lost ability to downgrade an installed component << gigantic miss ??
> UI glitch problems where the page can't decide between 4 or 5 columns, i have seen my screen shift between the 2 constantly for no reason
> when i install a component, it does not tell me to add it to lovelace, HOLY SHIT, this is a HUGE required - i don`t know why someone would scrap that.

Apart from being ungrateful, maybe take time to learn how to use it before whining.
You dont need to know how to add to lovelace, it does it for you, add a card, go to lovelace dashboards, resources. look its there. magic hey?

go back to another version of, uninstall, install, select version. - easy

downgrade - HACS, maybe uninstall it and walk away

",True,True,19,2272.3333333333335
SwitchbladeBot_____switchblade_____1110,2020-05-23T15:04:19Z,True,SwitchbladeBot_____switchblade_____1110_____633071808,Any more changes requested? So we can remove the changes-requested tag.,True,True,55,13247.766666666666
SwitchbladeBot_____switchblade_____1110,2020-05-23T15:18:30Z,True,SwitchbladeBot_____switchblade_____1110_____429554604,Is that inner try/catch block necessary? Code already seems to be inside a block that returns the same message upon error,True,False,55,13247.766666666666
SwitchbladeBot_____switchblade_____1110,2020-05-23T15:20:46Z,True,SwitchbladeBot_____switchblade_____1110_____429554762,"Let me see, I actually forgot about that.",True,False,55,13247.766666666666
SwitchbladeBot_____switchblade_____1110,2020-05-23T15:24:10Z,True,SwitchbladeBot_____switchblade_____1110_____429555023,"You're right, that additional try catch isn't needed, comitting a fix rn.",True,False,55,13247.766666666666
SwitchbladeBot_____switchblade_____1110,2020-05-23T15:26:08Z,True,SwitchbladeBot_____switchblade_____1110_____429555189,"In case you wonder why I did it, users with manage_message permission can delete a embed from a message, if that message only had the embed, then it's literally an empty message. There's a way to check that but it would use more processing than just trying to send the message. (Checking if ``content`` has a length of 0 and Object.keys(MessabeObj).length is 0)

I was kinda lazy and dind't notice that we already had that try catch.",True,False,55,13247.766666666666
SwitchbladeBot_____switchblade_____1110,2020-05-23T15:26:36Z,True,SwitchbladeBot_____switchblade_____1110_____429555230,Cool,True,False,55,13247.766666666666
hacs_____integration_____1227,2020-05-23T16:44:28Z,True,hacs_____integration_____1227_____633091799,"I've changed my mind. I was going to say go back but after reading your post above I now think there's room for continued improvement with the new UI instead.

It was a lot easier to browse integrations and plugins with the previous version. And I liked the separation between installed and new. The new UI seems to waste a lot of space. A nice compact view is important when browsing.

The new version does seem to be more responsive though. Well done. ",True,True,19,2272.3333333333335
hacs_____integration_____1227,2020-05-23T18:24:20Z,True,hacs_____integration_____1227_____633111392,"The new UI is so much faster. I thought it got faster on my lenovo tiny so I went checking on my Rpi backup and it was even more noticeable on it. 

Definitely stick with the new, improve from there and never look back. ",True,True,19,2272.3333333333335
hacs_____integration_____1227,2020-05-23T20:15:11Z,True,hacs_____integration_____1227_____633131340,"I am going to disagree with the majority of the above posts, and say that you should revert back to the old way as an interim step. 

Stop development on the old interface by all means, but it should be put back as soon as possible so that you don't lose the goodwill of the many 1000s of users while you sort out the issues with it. 
I will not disagree that it has its flaws and an update is required, but, being blunt, you went about it the wrong way. 
There was no warning, there is no feature parity and it felt like it was forced because most users of your tool have got used to seeing updates which do not affect how it works in such a fundamental way, and have therefore just got used to doing the updates as they are offered. 
The timing also didn't help, as it coincided with the recent release of HA 110 which required most of the components stored within HACS to be updated and therefore a lot of people who might not have updated immediately, did so because it was just part of the list and felt that it would be required to ensure support with HA 110. 

You also probably should realise the key part that HACS now plays within the wider HA ecosystem. For a significant number of users it is the only way that non-standard components are added to their HA install, and for developers of those components it is the only way they get any visibility or significant numbers of users, with the chance that their component will be pulled in to the main product. To quote a famous film - ""With great power comes great responsibility"" - any changes you make to the tool will have a significant impact on a lot of users. 

Therefore I would suggest that you do something similar to this.

1. Revert back to the old interface, stating quite clearly that development of it has stopped unless a show stopper/security bug is found. 
If you really do not want to do that, then provide details on how to revert manually. 
2. Start an open BETA program of the new interface, with the primary aim to get feature parity before a 1.0 release. If you want to introduce new functionality, do it after you have got feature parity of the old version. 
3. When you are ready to release the new version, have a period of dual running, so that those who were not on the BETA can test it and you can iron out any last minute issues. Then switch the code. 

That should keep most people happy, rescue a situation which has caused a lot of upset within the HA community and allow you to move in the direction that you wish to. ",True,True,19,2272.3333333333335
hacs_____integration_____1227,2020-05-23T23:52:32Z,True,hacs_____integration_____1227_____633155421,"> it felt like it was forced because most users of your tool have got used to seeing updates which do not affect how it works in such a fundamental way, and have therefore just got used to doing the updates as they are offered.

Nobody was forced into doing anything. If someone blindly updated HACS without reading, that's entirely their fault. The [release notes](https://github.com/hacs/integration/releases/tag/1.0.0) had a screenshot of the brand new UI and literally the first two bullet points were ""Brand new UI!"" and ""Breaking changes!""

Did you not even notice that the version number jumped from 0.24.5 all the way up to 1.0.0? It should be obvious just from that alone to expect major changes.

Things are rarely ever 100% perfect on the first revision, but people like @GeorgeSG are providing detailed and constructive feedback in a positive way. That's far more helpful than asking for it to be reverted.

",True,True,19,2272.3333333333335
hacs_____integration_____1227,2020-05-24T00:36:28Z,True,hacs_____integration_____1227_____633159553,"I love these comments of being forced, nobody forced you, you clicked update/upgrade, you nobody else. Instead of blindly updating without even checking anything and that applies to HA also, you only have yourself to blame.
",True,True,19,2272.3333333333335
tgstation_____tgstation_____51236,2020-05-24T01:00:53Z,True,tgstation_____tgstation_____51236_____623770812,"Come, let me tell you a story of the old days----of SHITCODE.

AGhhhhh.

Once upon a time, SS13 code was terrible (who are we joking, it still is, but that's a story for another day), and when any carbon subtype, minus humans, talked over radio, it would runtime.

Of course, coders set about fixing this problem---can't have nonsense like that, so...of course, the most logical thing was done.

Instead of solving the awfulness that was not only using the wrong istype check and a wonderful colon override as well: https://github.com/tgstation/tgstation/blob/9eb0e80ae7f57040b9178c637efb4bac33ce3d16/code/game/objects/radio/radio.dm#L148

A ""Fix"" was applied instead: https://github.com/tgstation/tgstation/commit/9eb0e80ae7f57040b9178c637efb4bac33ce3d16#diff-b5f801c8078b7d8dd9f0661b359dfa9e

Whereby `var/obj/item/card/id/wear_id = null` was added to monkeys and aliens to ""fix"" them having an ID holder and not throwing a runtime.........Thus ensuring:

Fox would find it one day and call this utterly moronic and while also ensuring that all future carbon mobs created without implementing this same ""fix"" would have the same exact problem.

Then radio code got rewritten to be non-stupid and this still hung around until today.

The End",True,True,5,832.8833333333333
hacs_____integration_____1227,2020-05-24T01:09:33Z,True,hacs_____integration_____1227_____633162057,"We need to stop this blame game. It's not helpful to anyone.

There are people who are passionate for keeping the change and people who are passionate for reverting. Each view should be respected and people allowed to have their own opinion.

I think ultimately in the long run we have to keep with the new UI, but in the mean time I believe things need to change.

Educating people is the way to resolve this in my opinion.

I believe if we are keeping the new UI we need to have a ""first launch"" screen.
This screen will be displayed one time when people load to tell them about the changes and help them answer FAQ.

Eg you do not need to click add to lovelace anymore frontend changes are automatically added to the lovelace configuration.

Then we can go on to improving the new UI to 'fix' things that are missing.

- I think there should be a separate tab for custom repositories that way we can easily add or remove additional repositories. I find it's currently to hidden under the three dots at the top right.
- The old version gave you an indication when you were installing repos that something was happening, now you just get a blank screen.
- In the future you could look at adding views as I find the cards are too big, in the old version they were much smaller.

I can understand the goal is to make it look as consistent as possible with the rest of the UI, so we're on the right track just need to work on refining things.

Keep up the good work!
 ",True,True,19,2272.3333333333335
tgstation_____tgstation_____51236,2020-05-24T01:24:18Z,True,tgstation_____tgstation_____51236_____633163222,all about how,True,True,5,832.8833333333333
hacs_____integration_____1227,2020-05-24T01:30:07Z,True,hacs_____integration_____1227_____633163585,"> We need to stop this blame game. It's not helpful to anyone.

The fact that the dev was feeling beaten down enough to consider reverting - begs to differ.
If you don't like it then offer constructive feedback.
The dev is not your bitch and he does not owe you anything. Try being grateful.",True,True,19,2272.3333333333335
tgstation_____tgstation_____51236,2020-05-24T01:33:36Z,True,tgstation_____tgstation_____51236_____633163820,this is the story of a girl,True,True,5,832.8833333333333
coding-blocks_____shortlr2-backend_____167,2020-05-24T02:58:59Z,True,coding-blocks_____shortlr2-backend_____167_____633170683,"Hi @YashKumarVerma 

You have been making this generic PR of adding github templates across all our repos. 

So let me take this up at here in one place. 

1. not all projects need this. not all projects even need all four of these. CoC for org is enough, copying everywhere isn't needed
2. are you doing this for getting just some more bounties ? please do not do that. you wrote an email to me accusing others of doing the same, and here I see you doing this
3. writing points like `Lint and unit tests pass locally with my changes` in a project that has neither linter nor tests setup in the checklist.... what for ? 

Can we keep our focus on code that 

1. fixes bugs
2. adds features
3. improves coding standards
4. improves architecture of project
5. adds tests

anything else, administrative work, please leave it to us mentors to do. does that make sense ? ",True,True,12,12899.466666666667
coding-blocks_____shortlr2-backend_____167,2020-05-24T06:59:37Z,True,coding-blocks_____shortlr2-backend_____167_____633189273,"@championswimmer 

Thanks for pointing out and mentioning on the discord server.
It would be helpful for me to correct/update the place where I did the following. If you could specifically point where, i can fix it. I'm sorry but I'm facing issues in searching for it.
> 3. writing points like `Lint and unit tests pass locally with my changes` in a project that has neither linter nor tests setup in the checklist.... what for ?",True,True,12,12899.466666666667
coding-blocks_____shortlr2-backend_____167,2020-05-24T07:35:22Z,True,coding-blocks_____shortlr2-backend_____167_____633192562,"Do you not even read your own PR before making it? This very PR has a checklist that contains that point. 

What kind of irresponsible behaviour is this to make PRs whose contents you have no idea of. ",True,True,12,12899.466666666667
coding-blocks_____shortlr2-backend_____167,2020-05-24T07:35:46Z,True,coding-blocks_____shortlr2-backend_____167_____429608542,Here @YashKumarVerma ,True,True,12,12899.466666666667
coding-blocks_____shortlr2-backend_____167,2020-05-24T07:49:14Z,True,coding-blocks_____shortlr2-backend_____167_____633193719,"> Do you not even read your own PR before making it? This very PR has a checklist that contains that point.
> 
> What kind of irresponsible behaviour is this to make PRs whose contents you have no idea of.

Thank you for the **polite** reply. Really appreciate it.

> writing points like Lint and unit tests pass locally with my changes in a project that has neither linter nor tests setup in the checklist.... what for ?

![image](https://user-images.githubusercontent.com/14032427/82748582-dcaf9e80-9dc0-11ea-8021-0b1847efa0bc.png)

I'd like to draw attention towards https://github.com/coding-blocks/shortlr2-backend/blob/master/package.json#L32 which has something along the same lines @championswimmer 
",True,True,12,12899.466666666667
coding-blocks_____shortlr2-backend_____167,2020-05-24T07:49:31Z,True,coding-blocks_____shortlr2-backend_____167_____429609518,more context provided as comment,True,True,12,12899.466666666667
coding-blocks_____shortlr2-backend_____167,2020-05-24T08:11:16Z,True,coding-blocks_____shortlr2-backend_____167_____633195869,"Listen @YashKumarVerma if you want to get into a sarcasm match, feel free to go ahead. I will love to participate. I love Twitter/Github battles. It improves my vocabulary and conversation skills. 

Coming to real business. 

- Regarding this PR.
  - Ok my bad, linter is setup, but having a checklist point in the PR makes no sense when Sider will tell me if there are lint errors anyway. If someone marks that checkbox as done, even if lint fails, then ? If someone forgets marking it done, even if lint is passing then ? 
Also everytime you run the project locally, `lint:fix` already runs, so it is kinda hard to make a PR without lint passing isn't it ? 
  - tests are *NOT* really set up here. one test for one function in a 50 file project, with no coverage over the middlewares and controllers, and no e2e test setup at all isn't called ""tests are setup"" so that checkbox makes no sense
  - `Any dependent changes have been merged and published in downstream modules` Are there other submodules does this repo have that we need to merge changes into ? 

- In general, as I have already said, please do not think that going to every repo and doing administrative tasks is the easiest way to gain points. It is sad that you especially, among other participants (who has so much prior OSS experience) is making this about collecting points rather than focussing on doing some real work. for tasks like adding codecov integration, those accesses anyway are with mentors and they only can do it. also mentors are best to decide at what stage (scale, size) of project it starts making sense to have travis build each pr or codecov to auto comment on the PRs. 


 ",True,True,12,12899.466666666667
tgstation_____tgstation_____51236,2020-05-24T09:55:43Z,True,tgstation_____tgstation_____51236_____633206656,Purge it all,True,True,5,832.8833333333333
hacs_____integration_____1227,2020-05-24T10:02:23Z,True,hacs_____integration_____1227_____633207375,"Thanks for all the feedback.
With a 10/42 split, I'm closing this and will start implementing feature requests with the new UI.

If you have ideas not covered with the current pool of feature requests please open them.",True,True,19,2272.3333333333335
coding-blocks_____shortlr2-backend_____167,2020-05-24T10:41:25Z,True,coding-blocks_____shortlr2-backend_____167_____633211546,"### Follow a Code of Conduct
 
> Listen @YashKumarVerma if you want to get into a sarcasm match, feel free to go ahead. I will love to participate. I love Twitter/Github battles. It improves my vocabulary and conversation skills.

Sir, all I said was a simple think you for your choice of words, and you're accusing me of sarcasm. Yes, that was sarcasm, because I won't resort to harsh words, as you being my senior and language like this not something that people expect from open source maintainers. 

> Do you not even read your own PR before making it? This very PR has a checklist that contains that point.
> What kind of irresponsible behavior is this to make PRs whose contents you have no idea of.

especially when it was you who made a mistake there. I very respectfully made a valid point. What followed was an act of frustration. 

---

> Coming to real business.
> 
> * Regarding this PR.
>   
>   * Ok my bad, linter is setup, but having a checklist point in the PR makes no sense when Sider will tell me if there are lint errors anyway. If someone marks that checkbox as done, even if lint fails, then? If someone forgets marking it done, even if lint is passing then?

Exactly my point. 
I thought to add it might be a good thing, but it appears that it was not a good idea at all. Third-party integrations would surely point them out in the sidebar. I agree with it.

Regarding tests, yes currently the project does not have extensive tests written, I'm sure it would be done in the near future. Putting those checkboxes there was indeed a wrong attempt, same is the case with the modules line. 

This was expected in the first place instead of `Do you....have no idea of`. If you think this is not to be done, simply saying that it's admin decision and close it. But since it wasn't done that way, I need to reply to the statements made.

> * In general, as I have already said, please do not think that going to every repo and doing administrative tasks is the easiest way to gain points. It is sad that you especially, among other participants (who has so much prior OSS experience) is making this about collecting points rather than focussing on doing some real work. for tasks like adding codecov integration, those accesses anyway are with mentors and they only can do it. also mentors are best to decide at what stage (scale, size) of project it starts making sense to have travis build each pr or codecov to auto comment on the PRs.

+1 to it, but here's my opinion on it.

Sir I am not here to argue with you regarding whether this must be done by a non-admin or not. Neither am I requesting you to reopen this, nor to consider the changes or claiming for points. All these issues / prs were opened about 9-10 days back within a span of few minutes, about the changes that I thought can be implemented. 

There was no message or instruction that similar things are not to be done, (if there was, I'm sorry I must have mistakenly skipped it) so I opened these. My belief regarding this was, even if admins need to grant permissions and install 3rd party applications, someone needs to write the scripts for
it. I was maybe wrong at it. 

---

Now as far as BOSS is concerned, Have a look at this. https://github.com/coding-blocks/boss/issues/created_by/YashKumarVerma. These were again opened with the same date as this pr. 
![image](https://user-images.githubusercontent.com/14032427/82750551-96f9d280-9dce-11ea-9100-0f8f1472d986.png)
Bounty was linked to only one issue, meanwhile, I sent PRs for all of them. 
People who are working on only issues marked for competition are not doing it for bounty, but if someone is sending PRs for issues not tagged for boss, they're doing it for bounty only. It's a bit confusing.

---
### Rejecting valid contribution in the sight of BOSS
On a side note, please do not consider that everything that's done is done for the competition as was done here: https://github.com/coding-blocks/oneauth/pull/994
Was this PR valid?
- Yes, .gitkeep files should be removed if the directory is not empty. Done in [Laravel](https://github.com/laravel/laravel/pull/4008)
Your reply was
> let's not make PRs just for the sake of BOSS bounties. work on productive things please.
So apparently we must overlook the minor issues.

You have all the rights to say so when I do things that don't actually improve the project, but you also know that those files are no longer required. Still? Did I ask for bounty points? No. But there have been similar cases, https://github.com/coding-blocks/boss/pull/303#issuecomment-630332641
- Can you mention a similar case when I asked for points?
- Can you mention any case when I made a claim in the portal?

---

Moving on, a few suggestions if you wish 
- be respectful.
- value every contribution, not everyone comes to OSS to write features and fix bugs.
- make users clearly mention in their PRs if it's for BOSS or not, else you'll keep rejecting valid changes.
- when complaints are raised, instead of trying to target the raiser, try to fix the issues raised. 
",True,True,12,12899.466666666667
tgstation_____tgstation_____51236,2020-05-24T14:53:46Z,True,tgstation_____tgstation_____51236_____633242848,My life got flip turned upside down,True,True,5,832.8833333333333
coding-blocks_____shortlr2-backend_____167,2020-05-24T16:05:09Z,True,coding-blocks_____shortlr2-backend_____167_____633252874,"> I'm sorry but I'm facing issues in searching for it. 

> Thank you for the **polite** reply. Really appreciate it. 
>> (emphasis on polite)

I think I need a Code of Conduct against snarky comments like this 😅

But since we do not have a code of conduct yet for this project, let me happily go ahead and drop a meme to close this discussion 

![](https://thumbs.gfycat.com/TerrificThankfulAmericanbadger-size_restricted.gif)
",True,True,12,12899.466666666667
yogstation13_____Yogstation_____8678,2020-05-24T17:01:42Z,True,yogstation13_____Yogstation_____8678_____623903631,"### Intent of your Pull Request

All credit to the original coder **Kelenius**.
https://github.com/tgstation/tgstation/pull/51222

""Gives the cyborgs access to their department's radio:

- Medical gets medical.
- Engineering gets engineering.
- Service and Janitor get service.
- Mining gets supply and science.
- Security gets security. In case it's enabled, spawned, etc.
- Peacekeeper gets nothing. You're not security, you have no business listening to them.
- Standard also gets nothing. Pick a side, filthy centrist.
- Clownborg gets nothing cause clown (maybe should get service up to you)

This channel is not related to the encryption key that can be installed into any cyborg and works in addition to they key, if installed.

I didn't touch the syndicate cyborgs, they still use an encryption key. I don't want to mess with radio code more than necessary and their encryption key already gives them everything they want, so it's unlikely someone will ever mess with it. Not broken, no fixes.""

#### Changelog

:cl:  Kelenius
rscadd: Cyborgs (except Peacekeeper, Clown, and Standard) now have access to their department's radio.
/:cl:
",True,True,6,1675.2833333333333
yogstation13_____Yogstation_____8678,2020-05-24T17:07:24Z,True,yogstation13_____Yogstation_____8678_____633261212,"I suggested this ages ago,

What I was told is the ai should be telling you what to do and where to go not departments,

But im ALL for this change.",True,True,6,1675.2833333333333
yogstation13_____Yogstation_____8678,2020-05-24T17:10:33Z,True,yogstation13_____Yogstation_____8678_____633261626,"I completely understand the argument for ""it's the job of the AI to relay messages for the borg"". But that's honestly a lot of work for the AI to do that IMO shouldn't really be necessary because they have better things to do. Seeing engi borgs drag a headset to robo and ask for the chip to be installed seems like an example of this ""messenger"" problem, so I feel like this is a needed change. Additionally these are the votes on the original TG PR:
![image](https://user-images.githubusercontent.com/49619518/82760175-b7159b80-9da6-11ea-9c76-577fea1e6cf6.png)
",True,True,6,1675.2833333333333
yogstation13_____Yogstation_____8678,2020-05-24T17:37:56Z,True,yogstation13_____Yogstation_____8678_____633265085,"""it's the job of the AI to relay messages for the borg"" is a fucking stupid argument because borgs can have robos give them radio keys anyway, if that really was true that wouldn't be a thing",True,True,6,1675.2833333333333
SwitchbladeBot_____switchblade_____1110,2020-05-24T19:10:11Z,True,SwitchbladeBot_____switchblade_____1110_____633279700,@metehus could you review this?,True,True,55,13247.766666666666
tgstation_____tgstation_____51267,2020-05-25T03:58:21Z,True,tgstation_____tgstation_____51267_____624029274,"stop

hurt eye

After learning that this is an actual intentional feature, slick move by goof, I feel the need to actually explain.

PDAs, and several other items intentionally do not use sprites for on_mobs, since the sprite would be tiny anyway.

I also hear this affects things such as plants, which don't have sprites in early stages of growth, but I have yet to see that.

This could affect many, many more things, but for now I know that it affects PDAs, which is a roundstart issue.

Original P.R.:https://github.com/tgstation/tgstation/pull/50788

## Changelog
:cl:
del: Removed untitled belt sprite which unsprited items default to when placed in the belt slot.
/:cl:",True,True,10,82.26666666666667
tgstation_____tgstation_____51267,2020-05-25T05:04:19Z,True,tgstation_____tgstation_____51267_____633377747,"This is, once again, literally not the fix.

The correct fix is to not generate overlays for items that don't have an icon.

How many times do I have to say it?",True,True,10,82.26666666666667
tgstation_____tgstation_____51267,2020-05-25T05:06:56Z,True,tgstation_____tgstation_____51267_____633378285,"""Why are people incorrectly fixing my P.R.""

If you want to not generate overlays for items that don't have an icon, you can P.R. that.",True,True,10,82.26666666666667
tgstation_____tgstation_____51267,2020-05-25T05:07:39Z,True,tgstation_____tgstation_____51267_____633378440,"bip, you're really really reaching levels of braindead that should not be possible

we want this to be visible so we can see when sprites actually break, that means we have to go back and fix the ones where the assumptiosn were made.",True,True,10,82.26666666666667
tgstation_____tgstation_____51267,2020-05-25T05:07:56Z,True,tgstation_____tgstation_____51267_____633378502,"if you want the pda's to be invisible, give them an empty alpha sprite and set it in the icon state.",True,True,10,82.26666666666667
tgstation_____tgstation_____51267,2020-05-25T05:08:17Z,True,tgstation_____tgstation_____51267_____633378591,"that, or the chad fix of ""make icon code not render shit with a null icon state""",True,True,10,82.26666666666667
tgstation_____tgstation_____51267,2020-05-25T05:08:31Z,True,tgstation_____tgstation_____51267_____633378649,i will probably end up doing this myself soon,True,True,10,82.26666666666667
tgstation_____tgstation_____51267,2020-05-25T05:08:58Z,True,tgstation_____tgstation_____51267_____633378751,"I believe a null icon state to be a bug.

We should always aim to be explicit in our thought when doing something.",True,True,10,82.26666666666667
tgstation_____tgstation_____51267,2020-05-25T05:09:18Z,True,tgstation_____tgstation_____51267_____633378823,"Y'know goof if this fix is so simple, and breaks something visible from the fucking preference menu, why haven't you fixed it in the 21 days since your P.R. was merged",True,True,10,82.26666666666667
tgstation_____tgstation_____51267,2020-05-25T05:20:37Z,True,tgstation_____tgstation_____51267_____633381421,"Also you can't make it null icon state because it still needs to draw a sprite for the item, it just needs to not have an on_mob.

I mean honestly you can still interact with items without on mobs perfectly fine.",True,True,10,82.26666666666667
yogstation13_____Yogstation_____8678,2020-05-25T06:06:06Z,True,yogstation13_____Yogstation_____8678_____633394488,should probably give peacekeeper service,True,True,6,1675.2833333333333
yogstation13_____Yogstation_____8689,2020-05-25T14:02:26Z,True,yogstation13_____Yogstation_____8689_____422767360,"### Intent of your Pull Request

Personally I don't think that making it so anyone who has the game on in the background doesn't get counted for hours is a good idea, although mostly because back in the day that's how lowpop was handled. However, I see the merits when applied to cases where a lot of admins are on at once, and people join and just sit around doing nothing.

Either way, if you're going to apply this policy it should be applied equally :)

#### Changelog

:cl:  
tweak: Admin tracking now doesn't count AFK for all staff rather than just retmins
/:cl:
",True,True,3,51.016666666666666
yogstation13_____Yogstation_____8690,2020-05-25T14:14:26Z,True,yogstation13_____Yogstation_____8690_____422772627,"Alternative to #8689.

Some admins might AFK on the server while doing something else, but still handle tickets. Best solution might be to only do this if there are 2 or more admins online. /shrug
",True,True,5,38.666666666666664
yogstation13_____Yogstation_____8689,2020-05-25T14:14:47Z,True,yogstation13_____Yogstation_____8689_____633592585,I'll make it a council vote. ,True,True,3,51.016666666666666
yogstation13_____Yogstation_____8690,2020-05-25T14:18:19Z,True,yogstation13_____Yogstation_____8690_____633594185,"I think doing it once you get to 3 admins online is probably the sweet spot, since in my experience that's when people start joining to farm hours without doing anything",True,True,5,38.666666666666664
yogstation13_____Yogstation_____8690,2020-05-25T14:19:13Z,True,yogstation13_____Yogstation_____8690_____633594520,"Maybe we should make phantom tickets appear at that admincount, and not count the admin if they don't respond to their phantom tickets?
",True,True,5,38.666666666666664
yogstation13_____Yogstation_____8690,2020-05-25T14:22:21Z,True,yogstation13_____Yogstation_____8690_____633595840,Made it a council vote. ,True,True,5,38.666666666666664
yogstation13_____Yogstation_____8691,2020-05-25T14:31:48Z,True,yogstation13_____Yogstation_____8691_____422780421,"Alternative to #8690 and #8689.

Will not count staff time when afk if there are 3 or more admins online (including the afk admin themselves). This applies to all staff, not only retmin.

#### Changelog

:cl:  
tweak: Staff tracking no longer tracks your time if you are AFK while there are other admins on the server.
/:cl:
",True,True,5,21.933333333333334
yogstation13_____Yogstation_____8691,2020-05-25T14:36:04Z,True,yogstation13_____Yogstation_____8691_____633601602,@monster860 How does it not? The admin check is only for logging out,True,True,5,21.933333333333334
yogstation13_____Yogstation_____8691,2020-05-25T14:37:17Z,True,yogstation13_____Yogstation_____8691_____633602106,Council vote. ,True,True,5,21.933333333333334
yogstation13_____Yogstation_____8691,2020-05-25T14:37:45Z,True,yogstation13_____Yogstation_____8691_____633602313,"Also would like input if I should include afk admins to the total admin count

EDIT:
Added this for now, tell me if you don't like it",True,True,5,21.933333333333334
yogstation13_____Yogstation_____8690,2020-05-25T14:53:06Z,True,yogstation13_____Yogstation_____8690_____633608715,"No politics in my codebase, locking PR, drama goes outside my codebase.",True,True,5,38.666666666666664
yogstation13_____Yogstation_____8689,2020-05-25T14:53:27Z,True,yogstation13_____Yogstation_____8689_____633608876,"No politics in my codebase, locking PR, drama goes outside my codebase.",True,True,3,51.016666666666666
yogstation13_____Yogstation_____8691,2020-05-25T14:53:44Z,True,yogstation13_____Yogstation_____8691_____633608985,"No politics in my codebase, locking PR, drama goes outside my codebase.",True,True,5,21.933333333333334
cornell-dti/nova.cornelldti.org/308,2020-05-25T16:33:35Z,False,5ecbf553bd3543631e39bf80,[diff-counting] Significant lines: 0.,True,False,3,5.133333333333334
cornell-dti/nova.cornelldti.org/308,2020-05-25T16:38:43Z,False,5ecbf572bd35435c9ee64f83,[deployment-bot] Deployed to https://5ecbf47945228a751a799665--cornelldti.netlify.app.,True,False,3,5.133333333333334
cornell-dti/nova.cornelldti.org/308,2020-05-25T16:38:43Z,False,5ecbf571bd35435c9ee64f82,[deployment-bot] Deployed to https://5ecbf47945228a751a799665--cornelldti.netlify.app.,True,False,3,5.133333333333334
yogstation13_____Yogstation_____8678,2020-05-25T20:56:59Z,True,yogstation13_____Yogstation_____8678_____633714125,"I don't like that it is a secborg buff but I see the utility of it, especially for the other borg types.",True,True,6,1675.2833333333333
raspberrypi_____linux_____3635,2020-05-26T02:31:14Z,True,raspberrypi_____linux_____3635_____422954865,"**Multi core for RPI4**
Missing configuration for the kernel to support multi core scheduling in its configuration file.

**Desktop Timing for RPI3**
Default RPI 3 config sets ticks to 1000hz which is around a server configuration and not one that would be useful for a desktop (and honestly, I think 1000 ticks is much to high for ARM). Setting to 250hz (Default for Desktop kernel ticks).",True,True,16,36970.23333333333
SwitchbladeBot_____switchblade_____1110,2020-05-26T03:07:42Z,True,SwitchbladeBot_____switchblade_____1110_____430134155,fixed,True,False,55,13247.766666666666
raspberrypi_____linux_____3635,2020-05-26T08:51:33Z,True,raspberrypi_____linux_____3635_____633896492,"These appear to be two entirely unrelated changes, so should be in two PR's.

I suspect the tick change would be unacceptable anyway, but other would need to comment more fully.",True,True,16,36970.23333333333
raspberrypi_____linux_____3635,2020-05-26T08:55:54Z,True,raspberrypi_____linux_____3635_____633898811,I want to see an explanation of the changes and why they should be made for all users.,True,True,16,36970.23333333333
freeorion_____freeorion_____2988,2020-05-26T22:05:44Z,True,freeorion_____freeorion_____2988_____625229660,that get shown by default if user desires so in their gitconfig,True,True,6,6749.866666666667
raspberrypi_____linux_____3635,2020-05-26T23:20:39Z,True,raspberrypi_____linux_____3635_____634330977,"> These appear to be two entirely unrelated changes, so should be in two PR's.
> 
> I suspect the tick change would be unacceptable anyway, but other would need to comment more fully.

Sorry for the two-being-one. First time doing a pull-request, and im generally new to using github. So I apologize for that.



> I want to see an explanation of the changes and why they should be made for all users.

The scheduler is used for the kernel to better use the CPU cores in a multi core system. Basically the Kernel is able to better control what-goes-where on the CPU cores, along with have better control of locks/runs/schedules/ticks/etc.

Also all other RPI Configurations has this option enable, while RPI4 did not. So its also for general consistency around the kernel builds, along with performance gains for many threaded tasks.

For reducing the ticks. Having less ticks per kernel task switch basically allows better multi-tasking and general system responsiveness. Unlike a Server which generally is left alone to do its own bidding, a desktop is more chaotic as users do many different things. As such allowing the kernel to switch tasks more often will allow better multi-tasking capabilities for the kernel.

also this is the default kernel option for all other builds for RPI variants",True,True,16,36970.23333333333
CrashpointF13_____CrashpointF13_____38,2020-05-27T05:29:27Z,True,CrashpointF13_____CrashpointF13_____38_____625389952,"<!-- Thanks for choosing to take the time to contribute to our project! We have a few things below that we'd like you to fill out -->
<!-- The more detail you can give us, the faster we can code review, test, and merge your changes -->

<!--- Provide a general summary of your changes in the Title above -->

## Description
<!--- Describe your changes in detail -->
Extends the highway all the way over to the other side of the map, see the first screenshot. Should make things much more centralized and less maze-y.
Puts a little nub of rock in between the NCR and tribals so they aren't a straight-shot from each other. Second screenshot.
Removes the BoS vertibird. It allows them to never set their base location while still being able to leave their base, making them unraidable. You literally cannot argue this. Third screenshot.
Adds a ORM and Mining Reward Vendor boards Kebab's mining layer.
## Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
<!--- If it fixes an open issue, please link to the issue here. -->
I've wanted to do this since BD. Also, the other two changes are just mainly QoL shit for people. Except BoS. Fuck BoS.
## How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- This helps us replicate your tests, to speed up review. -->
<!--- Include details of your testing environment, tests ran to see how -->
<!--- your change affects other areas of the code, etc. -->
locally idk.
## Screenshots (if appropriate):
![image](https://user-images.githubusercontent.com/54787585/82980913-a8063780-9fb8-11ea-81b3-50f7da658fe7.png) Highway expansion.
![image](https://user-images.githubusercontent.com/54787585/82980967-ca985080-9fb8-11ea-82e7-3bdfb4dafea1.png) Nub of rock separating tribals and NCR.
![image](https://user-images.githubusercontent.com/54787585/82981013-e56ac500-9fb8-11ea-970a-e03c901b3b68.png) No BoS hanger nor vertibird. Lolol.
![image](https://user-images.githubusercontent.com/54787585/82981061-0501ed80-9fb9-11ea-87de-6a6c2af2af20.png) Entire map. Everyone should post a screenshot like this one.

## Changelog (necessary)
:cl:
add: highway but cool
add: rock nub
add: orm and vender to kebab mine
del: vertibird
/:cl:
",True,True,8,26.066666666666666
CrashpointF13_____CrashpointF13_____38,2020-05-27T05:31:04Z,True,CrashpointF13_____CrashpointF13_____38_____634437910,"SHIT
",True,True,8,26.066666666666666
CrashpointF13_____CrashpointF13_____38,2020-05-27T05:34:38Z,True,CrashpointF13_____CrashpointF13_____38_____634438797,"ayo hold up
",True,True,8,26.066666666666666
CrashpointF13_____CrashpointF13_____38,2020-05-27T05:35:36Z,True,CrashpointF13_____CrashpointF13_____38_____634439044,"nah yeah
",True,True,8,26.066666666666666
CrashpointF13_____CrashpointF13_____38,2020-05-27T05:38:49Z,True,CrashpointF13_____CrashpointF13_____38_____634440009,yeah uhhhhhhhhhh didn't hit prepare maps before i changed something so gonna like uhhhhhhhhhhhhhhhhhhhhhh get new backups lol,True,True,8,26.066666666666666
CrashpointF13_____CrashpointF13_____38,2020-05-27T05:47:09Z,True,CrashpointF13_____CrashpointF13_____38_____634442536,"its not........... guhhhhhhhhhhhhh
",True,True,8,26.066666666666666
CrashpointF13_____CrashpointF13_____38,2020-05-27T05:54:06Z,True,CrashpointF13_____CrashpointF13_____38_____634444546,"sigh............
guess im redoing it manually",True,True,8,26.066666666666666
CrashpointF13_____CrashpointF13_____38,2020-05-27T05:55:31Z,True,CrashpointF13_____CrashpointF13_____38_____634444923,i am NOT a pro ,True,True,8,26.066666666666666
opencv_____opencv_____17185,2020-05-27T08:23:38Z,True,opencv_____opencv_____17185_____634508606,"Hi,
Any date for the next release ? 

Thanks",True,True,22,83544.73333333334
BoHBranch_____BoH-Bay_____920,2020-05-27T08:34:01Z,True,BoHBranch_____BoH-Bay_____920_____625493490,":cl: RomanZC
rscadd: Added the Stinger Stunrifle. Fires a lot of weak pellets and can self charge, instead of strong accurate beams.
/:cl:

idk the PR format fuck",True,True,12,38960.683333333334
BoHBranch_____BoH-Bay_____920,2020-05-27T08:37:27Z,True,BoHBranch_____BoH-Bay_____920_____634515555,"also currently using placeholder sprite, because i cant sprite for shit. if this does get merged, i hope somebody who can actually sprite makes a neat one for this gun",True,True,12,38960.683333333334
BoHBranch_____BoH-Bay_____920,2020-05-27T08:56:14Z,True,BoHBranch_____BoH-Bay_____920_____634525288,"Pretty funny idea, but feels unnecessary, especially since it's adminspawn-only. The sprite stuff is also pretty meh.",True,True,12,38960.683333333334
BoHBranch_____BoH-Bay_____920,2020-05-27T09:04:41Z,True,BoHBranch_____BoH-Bay_____920_____634529803,"I still didnt add it to the traitor uplink, doing testing :/",True,True,12,38960.683333333334
BoHBranch_____BoH-Bay_____920,2020-05-27T09:11:54Z,True,BoHBranch_____BoH-Bay_____920_____634533669,"also why tf is travis failing, how does travis even work",True,True,12,38960.683333333334
tgstation_____tgstation_____51331,2020-05-27T10:20:04Z,True,tgstation_____tgstation_____51331_____625569028,"<!-- Write **BELOW** The Headers and **ABOVE** The comments else it may not be viewable. -->
<!-- You can view Contributing.MD for a detailed description of the pull request process. -->

## About The Pull Request
I am STILL very much working on this and trying to get as much help as I can to finish it off.

As of this PR, each department will have its own research tree. Specifically, this refers to:

- Science
- Cargo and Mining
- Engineering
- Medical
- Security
- Service

This means six different point budgets, six different R&D consoles, six different sets of research. This has a few purposes but is basically designed to keep the whole crew invested in what's being researched and how it affects their department instead of just one department (Science) doing all of it.

This isn't going to change that heads can only do R&D now. That change was done to give heads a bit more mechanical agency over things as opposed to just being the RP leaders and rev targets. This seems odd now but once we roll out more changes, it'll make more sense.

This adds an extra step when adding a tech node - you need to assign the variable ""departmental_flags"" to each new node, then use the bitflag for what department should be able to research it. If you use the ALL flag, everyone can.

There is very little collision in this system, Mining can now just research mining tech for itself. Security can research whatever weapons it wants. The only real overlap is that a few prerequisites that are assigned to either Science or Engineering, but not researching those would severely screw the department in question, so I don't see that being a problem.

Not having a head is still a pretty valid issue to have, but there are a few solutions including having the AI let you in to grab the board, hacking in to get the board, or getting promoted to head access. Each console is in each head's office, so there's only one door you need to hack to get at it.

One question might be as to why the QM has one - the HoP is already over multiple departments and mining's research is important enough to them that it should be handled by someone close by, not the HoP.

<!-- Describe The Pull Request. Please be sure every change is documented or this can delay review and even discourage maintainers from merging your PR! -->

## Why It's Good For The Game

This opens up a lot of expansion room to R&D. As opposed to it only really benefiting one department as a majority, it's something everyone gets involved in. The plan is eventually to have separate trees you can choose to go down which should make it more engaging than just ""farm up to collect everything in the tree"". It also, as mentioned above, removes a pretty large source of friction between departments. Science being lazy? Fuck 'em, research your own crap.
<!-- Please add a short description of why you think these changes would benefit the game. If you can't justify it in words, it might not be worth adding. -->

## Changelog
:cl:
add: All research has been split up per department to assist with efficiency aboard the station.
add: Each head of staff and the Quartermaster now start with a research console for their department in their quarters. The core R&D console on the bridge has not been affected.
add: Each department will now accrue points for their own department, as opposed to one generic pool of research points.
/:cl:

<!-- Both :cl:'s are required for the changelog to work! You can put your name to the right of the first :cl: if you want to overwrite your GitHub username as author ingame. -->
<!-- You can use multiple of the same prefix (they're only used for the icon ingame) and delete the unneeded ones. Despite some of the tags, changelogs should generally represent how a player might be affected by the changes rather than a summary of the PR's contents. -->
",True,True,25,607.0333333333333
tgstation_____tgstation_____51331,2020-05-27T10:21:05Z,True,tgstation_____tgstation_____51331_____431012556,these need to have autodoc comments,True,False,25,607.0333333333333
tgstation_____tgstation_____51331,2020-05-27T10:23:06Z,True,tgstation_____tgstation_____51331_____431013584,wat,True,False,25,607.0333333333333
tgstation_____tgstation_____51331,2020-05-27T10:23:22Z,True,tgstation_____tgstation_____51331_____431013742,departmental_flags I guess?,True,False,25,607.0333333333333
BoHBranch_____BoH-Bay_____920,2020-05-27T10:24:57Z,True,BoHBranch_____BoH-Bay_____920_____634570678,"made agony damage be 4 instead of 3, now it feels much more powerful while keeping the same amount of bursts to stun somebody",True,True,12,38960.683333333334
tgstation_____tgstation_____51331,2020-05-27T10:25:27Z,True,tgstation_____tgstation_____51331_____431014958,DEPARTMENTAL_FLAG_ALL was removed,True,False,25,607.0333333333333
tgstation_____tgstation_____51331,2020-05-27T10:27:00Z,True,tgstation_____tgstation_____51331_____431015824,Yeah?,True,False,25,607.0333333333333
tgstation_____tgstation_____51331,2020-05-27T10:31:25Z,True,tgstation_____tgstation_____51331_____431018348,it says epartmental flags,True,False,25,607.0333333333333
tgstation_____tgstation_____51331,2020-05-27T10:32:29Z,True,tgstation_____tgstation_____51331_____431018957,That's from an old attempt at getting Ian to wear the bishop hat. I have no clue how that ended up in here but good catch.,True,False,25,607.0333333333333
tgstation_____tgstation_____51331,2020-05-27T10:33:14Z,True,tgstation_____tgstation_____51331_____431019367,Gonna go through that hell once I'm done.,True,False,25,607.0333333333333
tgstation_____tgstation_____51331,2020-05-27T10:33:24Z,True,tgstation_____tgstation_____51331_____431019438,and that applies to all the vars u touched  😳 ,True,False,25,607.0333333333333
tgstation_____tgstation_____51331,2020-05-27T10:34:41Z,True,tgstation_____tgstation_____51331_____634574804,"![image](https://user-images.githubusercontent.com/42606352/83009011-b44fbc00-9fdb-11ea-90c6-faf6def369c9.png)

^ 3/20/2020

![image](https://user-images.githubusercontent.com/42606352/83008949-9e41fb80-9fdb-11ea-9b35-8e1678cc184d.png)

^ 5/27/2020

https://youtu.be/_J6-3l3hCm0",True,True,25,607.0333333333333
tgstation_____tgstation_____51331,2020-05-27T11:02:49Z,True,tgstation_____tgstation_____51331_____634587349,WOULD YOU LIKE TO CODE IT INSTEAD ATH,True,True,25,607.0333333333333
tgstation_____tgstation_____51331,2020-05-27T12:03:45Z,True,tgstation_____tgstation_____51331_____634614233,also dont open wip PRs if theyre not testmergeable not epic,True,True,25,607.0333333333333
tgstation_____tgstation_____51331,2020-05-27T12:43:29Z,True,tgstation_____tgstation_____51331_____431087297,the d comes later 😏 ,True,False,25,607.0333333333333
tgstation_____tgstation_____51331,2020-05-27T12:47:15Z,True,tgstation_____tgstation_____51331_____634636403,"> 
> 
> also dont open wip PRs if theyre not testmergeable not epic

I mostly did this because I need help finishing the PR and the person who was helping me is now either ignoring me or has died.",True,True,25,607.0333333333333
tgstation_____tgstation_____51331,2020-05-27T12:50:02Z,True,tgstation_____tgstation_____51331_____634637903,didnt i join the experisci discord group specifically so u two could ask questions :^),True,True,25,607.0333333333333
tgstation_____tgstation_____51331,2020-05-27T12:51:03Z,True,tgstation_____tgstation_____51331_____634638428,"one thing I am mildly concerned about is that by removing that source of friction, you move us towards a bit more of a isolated sterile environment.

SS13 is built around arising conflicts, and having to deal with science being little shits, as much as I hate it as a miner, is something I actually prefer to stay in.encourages more player interaction potentially positive if Science is friendly and dutiful, or negative if they're dicks, maybe get into a fist fight and end up arrested because I had to break in to do it myself.

With this, I'd just ask my head and then right back to work it sounds like. I'm not sure if a system like this really benefits overall.",True,True,25,607.0333333333333
tgstation_____tgstation_____51331,2020-05-27T12:54:46Z,True,tgstation_____tgstation_____51331_____634640385,"Station cooperation is terribad unless science players dominate in the dynamic, in which case it's a critical aspect of the game that they own the most important station-wide progression system.",True,True,25,607.0333333333333
tgstation_____tgstation_____51331,2020-05-27T13:02:57Z,True,tgstation_____tgstation_____51331_____634644555,"The scope of those interactions is basically either ""'Hey, can you research this?' 'Sure.' Five minutes later 'Okay it's done.' 'Thanks!'"" or Mining revolting against Science. That last part is more of a problem with how mining is currently set up but in lieu of a full mining rework, I'm happy to offer this.

Experimental research is going to open up a lot more opportunities for cooperation in how experiments are completed and their requirements without the concern of people wanting to bash each others' heads in.",True,True,25,607.0333333333333
tgstation_____tgstation_____51331,2020-05-27T13:04:57Z,True,tgstation_____tgstation_____51331_____634645752,Also I'm closing this until I can cba to fix these goddamn merges (so probably tonight),True,True,25,607.0333333333333
tgstation_____tgstation_____51331,2020-05-27T16:36:52Z,True,tgstation_____tgstation_____51331_____634787630,"> one thing I am mildly concerned about is that by removing that source of friction, you move us towards a bit more of a isolated sterile environment.
> 
> SS13 is built around arising conflicts, and having to deal with science being little shits, as much as I hate it as a miner, is something I actually prefer to stay in.encourages more player interaction potentially positive if Science is friendly and dutiful, or negative if they're dicks, maybe get into a fist fight and end up arrested because I had to break in to do it myself.
> 
> With this, I'd just ask my head and then right back to work it sounds like. I'm not sure if a system like this really benefits overall.

That friction will still be there, but it'll be with the heads of staff and/or the silicons instead of Science. Unfortunately, everyone still asks Science to research techs, because when they think ""R&D"", they (logically) think the Science department, not the Command department. Maybe the solution is to just add departmental techwebs and move R&D back to science (and the bridge and the offices of each of the heads of staff, I suppose)? I'm not really seeing what we're gaining by having the command staff do R&D instead of Science.",True,True,25,607.0333333333333
tgstation_____tgstation_____51331,2020-05-27T16:59:48Z,True,tgstation_____tgstation_____51331_____634802870,"RND when in the hands of science is geared heavily towards the sci/mining dynamic (rightfully so) so it would be nice if each department could use the mechanic in a tangible way rather than an afterthought once the meta techs have been researched.

Really would like to see the meta around parts / mining rush be shaken up. It's a braindead choice you have to make literally every round.",True,True,25,607.0333333333333
tgstation_____tgstation_____51331,2020-05-27T17:51:12Z,True,tgstation_____tgstation_____51331_____634833206,"> RND when in the hands of science is geared heavily towards the sci/mining dynamic (rightfully so) so it would be nice if each department could use the mechanic in a tangible way rather than an afterthought once the meta techs have been researched.
> 
> Really would like to see the meta around parts / mining rush be shaken up. It's a braindead choice you have to make literally every round.

Still don't see a reason why command should do it instead of sci. If we're doing departmental trees, then each department will already be ""using the mechanic in a tangible way rather than an afterthought"", and the ""meta around parts / mining rush"" will be shaken up anyway.",True,True,25,607.0333333333333
tgstation_____tgstation_____51331,2020-05-27T18:53:36Z,True,tgstation_____tgstation_____51331_____634870807," > Still don't see a reason why command should do it instead of sci. If we're doing departmental trees, then each department will already be ""using the mechanic in a tangible way rather than an afterthought"", and the ""meta around parts / mining rush"" will be shaken up anyway.

Command is doing this because I want to give heads more actual authority over what's being done in their department as opposed to them just sort of being de facto leaders because they're assumed to be such. They're also doing it because, once I overhaul tech trees in the coming months, there will be actual tangible choices needed to be made in techs that will affect what the department can or can't do. Maybe Cargo researches a way to just teleport stuff straight to a department instead of having to mule it. Or they could take the express console instead and get stuff instantly from Centcom. Engineering can choose if they want to prioritize on making better gas mixtures to sell or on making it easier to build cool structures. Robotics could go with making big stompy combat mechs or quicker, more nimble ones that are better suited to heavy lifting or mining.

If you give that choice to players, it'd lead to more friction due to one thing being picked over another by a member of staff. If we're going in this direction (and I'd very much like to), it's going to help a lot for us to have a single decision-making role in each department to settle those arguments.

Yes, I know QM isn't a head, hush.",True,True,25,607.0333333333333
tgstation_____tgstation_____51336,2020-05-27T19:18:40Z,True,tgstation_____tgstation_____51336_____625964957,"<!-- Write **BELOW** The Headers and **ABOVE** The comments else it may not be viewable. -->
<!-- You can view Contributing.MD for a detailed description of the pull request process. -->

## About The Pull Request

Increases the price of EMP kits from 2 to 5 TC, and adds individual grenades to the uplink for 1 TC. I'm happy with these figures, but am open to discussion.

## Why It's Good For The Game

I saw athaths PR and it sort of reminded me of how fucking good EMPs are. I hate myself for making this but here we are.

EMPs are incredibly strong. You can kill a borg with just one, and the AI with several used outside of the core. A box of them can be used to cripple a department; fucking with doors, making scrubbers panic syphon, and messing with APCs. I remember several rounds where I shut down half of a station by buying only EMP kits and throwing them everywhere. 2 TC for 5 plus an implanter is ridiculous.

They're still pretty cheap after this, but not negligibly so. 

## Changelog
:cl:
add: You can now buy individual EMP grenades as a traitor for 1 TC.
balance: EMP grenade kits now cost 5 TC, up from 2
/:cl:

<!-- Both :cl:'s are required for the changelog to work! You can put your name to the right of the first :cl: if you want to overwrite your GitHub username as author ingame. -->
<!-- You can use multiple of the same prefix (they're only used for the icon ingame) and delete the unneeded ones. Despite some of the tags, changelogs should generally represent how a player might be affected by the changes rather than a summary of the PR's contents. -->
",True,True,20,6149.566666666667
tgstation_____tgstation_____51336,2020-05-27T19:20:28Z,True,tgstation_____tgstation_____51336_____634885610,maybe allow us to buy just the implant for 4 TC? it's the only part of the kit that people actually use anyway,True,True,20,6149.566666666667
tgstation_____tgstation_____51336,2020-05-27T19:21:01Z,True,tgstation_____tgstation_____51336_____634886274,"For the kit, I was thinking about 4 or 5, and settled on the latter. If you think 4 is more appropriate please say why.",True,True,20,6149.566666666667
tgstation_____tgstation_____51336,2020-05-27T19:21:39Z,True,tgstation_____tgstation_____51336_____634887015,"no one ever buys them at 2 tc, imagine at 5",True,True,20,6149.566666666667
tgstation_____tgstation_____51336,2020-05-27T19:21:47Z,True,tgstation_____tgstation_____51336_____634887177,"> maybe allow us to buy just the implant for 4 TC? it's the only part of the kit that people actually use anyway

I considered it but ehhhhhh, not feeling it. Not a terrible idea, though.",True,True,20,6149.566666666667
tgstation_____tgstation_____51336,2020-05-27T19:30:34Z,True,tgstation_____tgstation_____51336_____634892819,"5 is a really awkward TC price because it's odd, so it doesn't smoothly line up with most of our evenly-costed items",True,True,20,6149.566666666667
tgstation_____tgstation_____51336,2020-05-27T20:26:08Z,True,tgstation_____tgstation_____51336_____634920401,"IIRC, last time someone wanted to increase the price of EMP kit, it was decided that silicons are stupidly obnoxious, and the PR was closed. Fuck silicons. Bad PR.",True,True,20,6149.566666666667
tgstation_____tgstation_____51331,2020-05-27T20:27:06Z,True,tgstation_____tgstation_____51331_____634920870,"Why not let both Science AND Command research techs, though? Sometimes your local head of staff will fuck off and be hard to find (or silently die in maint, or go SSD), so if that happens, you could go to Science instead.",True,True,25,607.0333333333333
tgstation_____tgstation_____51336,2020-05-27T20:30:29Z,True,tgstation_____tgstation_____51336_____634922554,"Yeah, that was carsalash I think. The difference is his was an ided pr bc he died as an AI, mine isn’t. Plus this isn’t even that big a nerf, since you can now buy the grenades individually for a cheap price, which I personally think is pretty useful. 

Also sorry athath I really don’t care if even numbers are more pleasing lol. 4 isn’t a terrible price though, so yeah feel free to add on why",True,True,20,6149.566666666667
tgstation_____tgstation_____51336,2020-05-27T22:19:54Z,True,tgstation_____tgstation_____51336_____634973927,"The implant being separate is a revert. The kit was put together with the implant because nobody brought the grenades (their loss, if you don't want to use the grenades you're losing out).

Keep it together.

Also I'm not buying an emp for 1 tc when I can make one for nothing out of maint.",True,True,20,6149.566666666667
tgstation_____tgstation_____51336,2020-05-28T02:38:04Z,True,tgstation_____tgstation_____51336_____635059589,I mean the same applies to a lot in the uplink so 🤷‍♂️ ,True,True,20,6149.566666666667
raspberrypi_____linux_____3635,2020-05-28T04:29:40Z,True,raspberrypi_____linux_____3635_____635092446,This is very interesting. Should these changes also be applied to the other branches as well?,True,True,16,36970.23333333333
tgstation_____tgstation_____51336,2020-05-28T04:59:11Z,True,tgstation_____tgstation_____51336_____635101103,"uplink bloat 

edit: I just don't like separating one item into multiple items on the traitor list. It feels very unnecessarily expansive.

I don't know, maybe this is just an emag situation and you want people to see >5 tc. I can just grind iron in one beaker and uranium in the other beaker for an even bigger EMP blast then the grenade gives me",True,True,20,6149.566666666667
tgstation_____tgstation_____51336,2020-05-28T05:45:43Z,True,tgstation_____tgstation_____51336_____635117768,"more than double is too much, way too expensive to be work taking over just about anything else in the uplink",True,True,20,6149.566666666667
tgstation_____tgstation_____51336,2020-05-28T06:15:41Z,True,tgstation_____tgstation_____51336_____635129338,"Yeah, 4 is probably ideal. I'll change that",True,True,20,6149.566666666667
tgstation_____tgstation_____51336,2020-05-28T06:54:16Z,True,tgstation_____tgstation_____51336_____635145150,">EMPs are incredibly strong. 

at what ? activating firelocks?

>You can kill a borg with just one,

the emp stuns and then you need an high dps to kill it before it wakes up, but so does a flash and a flashbang, its intended for borgs to die if stunlocked

 >and the AI with several used outside of the core. 

lower the range if you feel thats an issue for an item designed to kill technology easy

>A box of them can be used to cripple a department; fucking with doors, making scrubbers panic syphon, and messing with APCs. 

yes until someone just opens the apc and air alarm with basic tools and resets them lol 

>I remember several rounds where I shut down half of a station by buying only EMP kits and throwing them everywhere. 2 TC for 5 plus an implanter is ridiculous.

if no one catches a dude throwing 50 bombs you might as well just drag plasma cans around and cause real issues without spending anything",True,True,20,6149.566666666667
tgstation_____tgstation_____51336,2020-05-28T07:12:47Z,True,tgstation_____tgstation_____51336_____635154470,"> the emp stuns and then you need an high dps to kill it before it wakes up, but so does a flash and a flashbang, its intended for borgs to die if stunlocked

AOE

> lower the range if you feel thats an issue for an item designed to kill technology easy

Notice how that's not my only reason

> if no one catches a dude throwing 50 bombs you might as well just drag plasma cans around and cause real issues without spending anything

They can't catch them bc halls are siphoning, and most doors are either off or shocked. Also darkness helps.

> yes until someone just opens the apc and air alarm with basic tools and resets them lol

That's true, but not everyone has tools


Obviously EMPs aren't very effective physically, but they are very powerful in doing their intended use - which I have no intention to nerf.",True,True,20,6149.566666666667
tgstation_____tgstation_____51336,2020-05-28T08:14:37Z,True,tgstation_____tgstation_____51336_____635190546,"it takes time for syphoned halls to have low enough air to cause damage, if engis or the half of the people with toolbelts or even the silicons arent taking care of the problem to solve the weakest grief its their fault, hell they can even just weld vents with emergency toolbox welders, 

shocked doors are rare and all halls have at least 2 doors to pick from and a crowbar around if its depowered

i havent seen anyone abusing this enough to create an emergent issue and neither you have with 0 connections in a whole month, why is this needed other than ""potential grief if everyone is incompetent""",True,True,20,6149.566666666667
raspberrypi_____linux_____3635,2020-05-28T09:38:32Z,True,raspberrypi_____linux_____3635_____635233682,"CONFIG_SCHED_MC was considered many years ago (https://github.com/raspberrypi/linux/issues/1221) and decided against. @P33M thought it was unlikely to benefit a single cluster of 4 cores with shared L2 cache.

@IComplainInComments you'll need to provide some test shows a benefit from the option. Find a benchmark or workflow that shows a measurable improvement with the change.",True,True,16,36970.23333333333
raspberrypi_____linux_____3635,2020-05-28T09:45:04Z,True,raspberrypi_____linux_____3635_____635236942,"Things may have changed in scheduler land since then, meaning CONFIG_SCHED_MC may now enable other enhancements - or add more side-effects.

I'd be happy to change my mind if there's evidence that this config option provides a net benefit, though.",True,True,16,36970.23333333333
tgstation_____tgstation_____51336,2020-05-28T21:02:00Z,True,tgstation_____tgstation_____51336_____635605829,"I think you do have a point there, but I also think you're downplaying an EMPs power. Just because they offer little in the way of physical damage does not mean they aren't effective in nearly any situation. Whenever I am traitor I'm glad to have EMPs because of just how versatile they are - great for escaping security, potentially silencing a victim, taking advantage of people who are either silicon or have robotic body parts, so on and so forth. For just 2 TC, you can get all of these advantages.

That being said, that might be a good thing and is probably ideal. Really when I think about it we should encourage people to take items like this, which I guess this PR isn't doing. So yeah, I'm sort of leaning towards closing this now - but I'm still not certain. Maybe a stock limit would be a better solution.",True,True,20,6149.566666666667
WaspStation_____WaspStation-1.0_____242,2020-05-29T04:28:20Z,True,WaspStation_____WaspStation-1.0_____242_____626988765,"## A preface

so morg, you thought you could be sad at my pull request getting automatically closed for being too stale, huh

![Screenshot (606)](https://user-images.githubusercontent.com/58999300/83221252-233b2b00-a12a-11ea-881e-a2faba0c116c.png)

think again bitch ligger boy

## About the pull request

cops get guns, except they run on 9mm

![Screenshot (567)](https://user-images.githubusercontent.com/58999300/83221322-58e01400-a12a-11ea-9ed7-0a4ed98f760a.png)

i might be adding ammo variants but probably not right now, so feel free to do it for me

by the time science has researched the ammo for this thing in the protolathe, shits probably already hit the fan

i'm sure there's gonna be at least one moronic seccie that walks around with this strap for no reason and gets it stolen at roundstart

## Why It's Good For The Game

it's always nice to have alternatives

this will tell the space hobos and greifers to not fuck with security

![Screenshot (565)](https://user-images.githubusercontent.com/58999300/83221329-5f6e8b80-a12a-11ea-8201-c25736ce8191.png)

bop bop bop bop, i'm reachin for my gun, sunglasses emoji left pointed finger emoji

## Changelog
:cl:
add: the commander pistol
add: commander pistol in warren den and head of shitcurity lockers
add: unloaded commander pistol in security gear lockers
add: commander ammunition in the armory
add: commander ammunition in the techwebs
/:cl:",True,True,16,4177.0
Skyrat-SS13_____Skyrat13_____2219,2020-05-29T11:23:47Z,True,Skyrat-SS13_____Skyrat13_____2219_____627196742,"Yeah no.

## About The Pull Request

WIP. This PR is to make abductors less ""I am going to cryo now because these cunts gave me trauma gland and that rolled me permanent stupor/split personality because bad RNG"". For a matter of fact split personality is gone from that trauma gland altogether. So you either get quirky/interesting traumas or 'mild' traumas which are braindead easy to fix thanks to removal of surgery reqs.

On the other hand it neuters the species gland. It currently has infinite uses. Once the change is put into place it is renamed to ""Psychic Domination"" gland and has tweaked values but it will not change your species any longer.

This does not change the abduction trauma, since this one can only roll for ""surgery"" severity and removal via surgery usually cascades into side effects. If the ""surgery"" severity gets neutered taking a pill of neurine would cure that.

## Why It's Good For The Game

Lets see. When KnC (Kill and Clone) is a valid strategy to deal with a shitty mechanic it should be changed so KnC is no longer a valid strategy. Specially when you roll permanent/quasi permanent split personality. Thats massively shit. Species Transformation should NOT be permanent. Transformation is ""I guess I cryo"" material on a server about having highly customizeable characters. At most it should be random and temporary. Also transformation is a kink apparently. Not everyone is into that. 

## How does it work?

The Trauma gland rolls with 33 (?) percent chance for a special trauma and randomly chooses if its basic or surgery in case of severity. If that roll fails it rolls a 22 (?) percent chance for a severe trauma (This includes split personality) which is then randomly chosen to be basic (Neurine) or surgery. If that roll fails it defaults to a mild trauma with random assignment of basic severity or surgery. Brain surgery can and will fail causing massive braindamage resulting in further traumas.

No need to explain why this is bad but alas I still do: Severe (Surgery) traumas need surgery or nanites. If surgery fails it causes braindamage: This gives further traumas, including deep rooted ones. Deep rooted requires lobotomy or KnC. Lobotomy has a chance to turn deep rooted into permanent. Permanent is only fixable with KnC. Its not fun to be on the receiving end of stupor or split personality and constantly talking nonesense or do things that are highly out of character because you rolled a chad for a split.

What this will do: Removes severe traumas. Removes random roll between deep rooted or permanent.

The species gland has currently infinite uses.. No. Just no.  Removes species randomizer in the species gland. Buffed mind control duration, left mind control usage at 7. So abductors got a really powerful tool now to get several people into doing things for them. 

## Changelog
:cl:
tweak: Abductors are now less shit for the abductee. Several (Species and Trauma) ""I go cryo now"" tier glands have been nerfed hard. 
/:cl:


",True,True,5,14431.1
freeorion_____freeorion_____2988,2020-05-29T11:38:29Z,True,freeorion_____freeorion_____2988_____635925877,Could you elaborate on what issue this fixes?,True,True,6,6749.866666666667
Skyrat-SS13_____Skyrat13_____2219,2020-05-29T15:57:08Z,True,Skyrat-SS13_____Skyrat13_____2219_____636050389,"If this is WIP, please turn the PR into a draft.",True,True,5,14431.1
tgstation_____tgstation_____51336,2020-05-29T16:30:11Z,True,tgstation_____tgstation_____51336_____636066269,EMPs are just as annoying as silicons.,True,True,20,6149.566666666667
Skyrat-SS13_____Skyrat13_____2219,2020-05-29T17:59:45Z,True,Skyrat-SS13_____Skyrat13_____2219_____636106981,"WIP PRs should be mergeable in their current state, this is best as a draft.",True,True,5,14431.1
Skyrat-SS13_____Skyrat13_____2219,2020-05-29T18:41:41Z,True,Skyrat-SS13_____Skyrat13_____2219_____636127388,"Alright new to doing github tbf, I rarely do things of large scopes. How do I turn this into a draft?",True,True,5,14431.1
WaspStation_____WaspStation-1.0_____242,2020-05-29T20:12:16Z,True,WaspStation_____WaspStation-1.0_____242_____636171108,I think the reason it was originally failing the linter checks was because tgstation.dme didn't have the waspstation pistol.dm included.,True,True,16,4177.0
WaspStation_____WaspStation-1.0_____242,2020-05-29T20:12:43Z,True,WaspStation_____WaspStation-1.0_____242_____636171296,"but it's not failing the linter checks now, is it",True,True,16,4177.0
raspberrypi_____linux_____3635,2020-05-29T20:13:05Z,True,raspberrypi_____linux_____3635_____636171433,"> CONFIG_SCHED_MC was considered many years ago (#1221) and decided against. @P33M thought it was unlikely to benefit a single cluster of 4 cores with shared L2 cache.
> 
> @IComplainInComments you'll need to provide some test shows a benefit from the option. Find a benchmark or workflow that shows a measurable improvement with the change.

Searching the internet, I honestly cannot find any sort of numbers or tests to give any indication of performance increase or reduction. 

The texts I have found is multiple articles insisting on using that option so the CPU governors can consolidate threads to manage heat/power better to allow less heat to be generated --  which would indicate better overclocking potential, along with heavy loads less likely to throttle the CPU, and obviously less heat == longer life.

The next benefit from my search is that option also allows the kernel to better manage threads and Work Units on a Multicore CPU. So it allows the kernel to better utilize the multiple cores for programs, increasing processing efficiency.

Here are some of the pages I found talking about the config option (indirectly or directly).
https://developer.ibm.com/technologies/linux/tutorials/l-cpufreq-1/
https://www.geeksforgeeks.org/multiple-processor-scheduling-in-operating-system/
https://elinux.org/images/d/dc/Elc2013_Na.pdf
https://elinux.org/images/4/43/Understanding_And_Using_SMP_Multicore_Processors_Anderson.pdf

P.S. If you would like. Give me a set of tasks you would like me to benchmark. Ill swap between the current kernel and the kernel I built and post the statistics :)



> Things may have changed in scheduler land since then, meaning CONFIG_SCHED_MC may now enable other enhancements - or add more side-effects.
> 
> I'd be happy to change my mind if there's evidence that this config option provides a net benefit, though.

Please look above for context.

The Scheduler in general is very aware of what threads are being ran on the CPUs. The scheduler's goal is set from a user setting that can be modified (You can google for setting the options). The defaults goal is consolidating tasks to free up system resources in the goal of reducing power and heat for the processors. With threads consolidated, the CPU cores will be freed up for more tasks, and with the less demand for power due to the other cores not being as busy, reduces power needs, thus reducing heat, thus allowing all cores on the CPU to stay at their top frequencies during work. This also allows for better overclocking abilities, and better task management as the scheduler also utilizes priority tasking, so high-performance tasks are put in a better position. And obviously less heat == better period.

So in general, having the kernel be Multicore aware gains a lot of very nice benefits for the System's benefit of having fine control of all the cores.",True,True,16,36970.23333333333
WaspStation_____WaspStation-1.0_____242,2020-05-29T20:13:22Z,True,WaspStation_____WaspStation-1.0_____242_____636171564,I'm saying you should MoDuLaRiZe,True,True,16,4177.0
AlchemistSimulator/Alchemist/399,2020-05-30T00:39:44Z,False,5ed22c7dbd35432af2c6f2b5,"Kudos, SonarCloud Quality Gate passed!

[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug.png' alt='Bug' width='16' height='16' />](https://sonarcloud.io/project/issues?id=AlchemistSimulator_Alchemist&pullRequest=399&resolved=false&types=BUG) [<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A.png' alt='A' width='16' height='16' />](https://sonarcloud.io/project/issues?id=AlchemistSimulator_Alchemist&pullRequest=399&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=AlchemistSimulator_Alchemist&pullRequest=399&resolved=false&types=BUG)  
[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability.png' alt='Vulnerability' width='16' height='16' />](https://sonarcloud.io/project/issues?id=AlchemistSimulator_Alchemist&pullRequest=399&resolved=false&types=VULNERABILITY) [<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A.png' alt='A' width='16' height='16' />](https://sonarcloud.io/project/issues?id=AlchemistSimulator_Alchemist&pullRequest=399&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=AlchemistSimulator_Alchemist&pullRequest=399&resolved=false&types=VULNERABILITY) (and [<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot.png' alt='Security Hotspot' width='16' height='16' />](https://sonarcloud.io/project/issues?id=AlchemistSimulator_Alchemist&pullRequest=399&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/issues?id=AlchemistSimulator_Alchemist&pullRequest=399&resolved=false&types=SECURITY_HOTSPOT) to review)  
[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell.png' alt='Code Smell' width='16' height='16' />](https://sonarcloud.io/project/issues?id=AlchemistSimulator_Alchemist&pullRequest=399&resolved=false&types=CODE_SMELL) [<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A.png' alt='A' width='16' height='16' />](https://sonarcloud.io/project/issues?id=AlchemistSimulator_Alchemist&pullRequest=399&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=AlchemistSimulator_Alchemist&pullRequest=399&resolved=false&types=CODE_SMELL)

[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo.png' alt='No Coverage information' width='16' height='16' />](https://sonarcloud.io/component_measures?id=AlchemistSimulator_Alchemist&pullRequest=399) No Coverage information  
[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo.png' alt='No Duplication information' width='16' height='16' />](https://sonarcloud.io/component_measures?id=AlchemistSimulator_Alchemist&pullRequest=399&metric=duplicated_lines_density&view=list) No Duplication information

",True,False,3,290.5
tgstation_____tgstation_____51385,2020-05-30T03:16:05Z,True,tgstation_____tgstation_____51385_____627640664,"it used to rely on bullshit boilerplate that half of the roundstart rulesets didn't implement anyway. this fixes that. there should be slightly fewer antags on dynamic rounds that roll roundstart traitors + changelings || traitors + BBs || changelings + BBs, especially on lowpop. maybe. who gives a shit",True,True,6,11345.066666666668
freeorion_____freeorion_____2988,2020-05-30T03:29:10Z,True,freeorion_____freeorion_____2988_____636268892,https://github.com/github/hub/issues/1379,True,True,6,6749.866666666667
AlchemistSimulator/Alchemist/399,2020-05-30T05:30:14Z,False,5ed22c7dbd35432af2c6f2b6,"# [Codecov](https://codecov.io/gh/AlchemistSimulator/Alchemist/pull/399?src=pr&el=h1) Report
> Merging [#399](https://codecov.io/gh/AlchemistSimulator/Alchemist/pull/399?src=pr&el=desc) into [develop](https://codecov.io/gh/AlchemistSimulator/Alchemist/commit/6f6c5beeff914242d53bdd83797dae6b1474b3da&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/AlchemistSimulator/Alchemist/pull/399/graphs/tree.svg?width=650&height=150&src=pr&token=eXxyf1116B)](https://codecov.io/gh/AlchemistSimulator/Alchemist/pull/399?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##             develop     #399   +/-   ##
==========================================
  Coverage      34.90%   34.90%           
  Complexity      1754     1754           
==========================================
  Files            481      481           
  Lines          13812    13812           
  Branches        1831     1831           
==========================================
  Hits            4821     4821           
  Misses          8465     8465           
  Partials         526      526           
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/AlchemistSimulator/Alchemist/pull/399?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/AlchemistSimulator/Alchemist/pull/399?src=pr&el=footer). Last update [6f6c5be...ec66b6b](https://codecov.io/gh/AlchemistSimulator/Alchemist/pull/399?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",True,False,3,290.5
AlchemistSimulator/Alchemist/399,2020-05-30T05:30:14Z,False,5ed22c7ebd35432af2c6f2b7,"# [Codecov](https://codecov.io/gh/AlchemistSimulator/Alchemist/pull/399?src=pr&el=h1) Report
> Merging [#399](https://codecov.io/gh/AlchemistSimulator/Alchemist/pull/399?src=pr&el=desc) into [develop](https://codecov.io/gh/AlchemistSimulator/Alchemist/commit/6f6c5beeff914242d53bdd83797dae6b1474b3da&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/AlchemistSimulator/Alchemist/pull/399/graphs/tree.svg?width=650&height=150&src=pr&token=eXxyf1116B)](https://codecov.io/gh/AlchemistSimulator/Alchemist/pull/399?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##             develop     #399   +/-   ##
==========================================
  Coverage      34.90%   34.90%           
  Complexity      1754     1754           
==========================================
  Files            481      481           
  Lines          13812    13812           
  Branches        1831     1831           
==========================================
  Hits            4821     4821           
  Misses          8465     8465           
  Partials         526      526           
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/AlchemistSimulator/Alchemist/pull/399?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/AlchemistSimulator/Alchemist/pull/399?src=pr&el=footer). Last update [6f6c5be...ec66b6b](https://codecov.io/gh/AlchemistSimulator/Alchemist/pull/399?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",True,False,3,290.5
tgstation_____tgstation_____51385,2020-05-30T06:59:34Z,True,tgstation_____tgstation_____51385_____636289301,Follow the PR template. You are missing the changelog entirely.,True,True,6,11345.066666666668
tgstation_____tgstation_____51385,2020-05-30T08:40:11Z,True,tgstation_____tgstation_____51385_____636299898,"the changelog is primarily for players, and i don't think they give much of a shit about me switching up the internal way that ruleset scaling is handled. why it's good for the game is self-evident; it makes bad code less bad. it's fixing an incredibly minor bug / oversight that nobody even knew about",True,True,6,11345.066666666668
tgstation_____tgstation_____51385,2020-05-30T10:25:55Z,True,tgstation_____tgstation_____51385_____636310982,"The changelog is not optional, and also not only kept just so players can reference changes. Add it.

As for the rest, its there to give your PR body some structure. You dont have to write an essay just because you kept the template in, dont remove it in future please.",True,True,6,11345.066666666668
tgstation_____tgstation_____51385,2020-05-30T11:06:53Z,True,tgstation_____tgstation_____51385_____636315373,aight,True,True,6,11345.066666666668
tgstation_____tgstation_____51336,2020-05-31T02:48:20Z,True,tgstation_____tgstation_____51336_____636412571,"just do a stock limit

teach those lame brain traitors to just grind up a metal sheet and grab uranium from any prolathe",True,True,20,6149.566666666667
roshanipawar_____studyy_____3,2020-05-31T09:45:32Z,True,roshanipawar_____studyy_____3_____627928984,hell please add this to your ode bec z is ts missing,True,True,2,7.866666666666666
roshanipawar_____studyy_____3,2020-05-31T09:53:24Z,True,roshanipawar_____studyy_____3_____636448113,"not 
accept",True,True,2,7.866666666666666
Aurorastation_____Aurora.3_____8996,2020-05-31T10:17:11Z,True,Aurorastation_____Aurora.3_____8996_____627933679,"Guess who the baton passes to.

- [ ] Convert all runes to datums

- [ ] Rework arcane tome mechanics, holy shit it's terrible

- [ ] Convert rune effects to actually use rune datums

- [ ] Add additional effects that are now possible because of non-shitcode code",True,True,18,7679.416666666667
Aurorastation_____Aurora.3_____8996,2020-05-31T10:17:19Z,True,Aurorastation_____Aurora.3_____8996_____636450763,!wip,True,True,18,7679.416666666667
freeorion_____freeorion_____2988,2020-05-31T11:46:21Z,True,freeorion_____freeorion_____2988_____636460114,"This can be potentially problematic for people who (for whatever reasons) use a very old version of git (2.4.0 or older):

https://github.com/golang/go/issues/26844

That aside, the link you, @l29ah, provided, didn't really really make it clear to me what the issue is. Does `make_versioncpp.py` fail or break in any way if users set that option in their gitconfig?",True,True,6,6749.866666666667
freeorion_____freeorion_____2988,2020-05-31T11:50:14Z,True,freeorion_____freeorion_____2988_____636460476,"Yes, it stops the compilation, otherwise i wouldn't have bothered to fix it.

On Sun, May 31, 2020 at 2:46 PM Vezzra <notifications@github.com> wrote:

> This can be potentially problematic for people who (for whatever reasons)
> use a very old version of git (2.4.0 or older):
>
> golang/go#26844 <https://github.com/golang/go/issues/26844>
>
> That aside, the link you, @l29ah <https://github.com/l29ah>, provided,
> didn't really really make it clear to me what the issue is. Does
> make_versioncpp.py fail or break in any way if users set that option in
> their gitconfig?
>
> —
> You are receiving this because you were mentioned.
> Reply to this email directly, view it on GitHub
> <https://github.com/freeorion/freeorion/pull/2988#issuecomment-636460114>,
> or unsubscribe
> <https://github.com/notifications/unsubscribe-auth/AAAHY3BSGF5AGUDTRFRKVQ3RUI7RTANCNFSM4NLIB5DA>
> .
>
",True,True,6,6749.866666666667
freeorion_____freeorion_____2988,2020-05-31T14:35:36Z,True,freeorion_____freeorion_____2988_____636479628,OK then...,True,True,6,6749.866666666667
morislwin_____lecture1_____1,2020-05-31T14:37:45Z,True,morislwin_____lecture1_____1_____627976163,"I make new change, plz review for me
",True,True,1,0.0
Aurorastation_____Aurora.3_____8996,2020-05-31T14:49:42Z,True,Aurorastation_____Aurora.3_____8996_____636481373,"Doing the blood god's work, @NonQueueingMatt ",True,True,18,7679.416666666667
vgstation-coders_____vgstation13_____26656,2020-05-31T20:04:47Z,True,vgstation-coders_____vgstation13_____26656_____628033551,"Because fuck 60 credit raisins, fuck 50 dollars soda, and fuck the baloney bullshit of wanabee economists in spess that can't be assed to do 3 minutes of work changing numbers to make people be able to afford more than 3 soda poppies or 2 bags of raisins per paycheck.

No changes to Vox or Cargo vending machines. I am retarded, not stupid.

<!--
Pull requests must be atomic.  Change one set of related things at a time.  Bundling sucks for everyone.
This means, primarily, that you shouldn't fix bugs and add content in the same PR. When we mean 'bundling', we mean making one PR for multiple, unrelated changes.

Test your changes. PRs that do not compile will not be accepted.
Testing your changes locally is incredibly important. If you break the serb we will be very upset with you.

Large changes require discussion.  If you're doing a large, game-changing modification, or a new layout for something, discussion with the community is required as of 26/6/2014.  Map and sprite changes require pictures of before and after.  MAINTAINERS ARE NOT IMMUNE TO THIS.  GET YOUR ASS IN IRC.

Merging your own PRs is considered bad practice, as it generally means you bypass peer review, which is a core part of how we develop.

It is also suggested that you hop into irc.rizon.net #vgstation or the coding discord (you can find an invite link on the irc or the thread) to discuss your changes, or if you need help.

== SELF LABELLING PRs ==
You can now self-label your PR! The syntax is simple. Just put [<labeltag>] anywhere in your PR,
where <labeltag> is to be replaced by one of the following (allowing with the resultant tag)
just ctrl+f the list or something. I know it's long.

administration = ""Logging / Administration""
away = ""Mapping (Away Mission :earth_africa:)""
bagel = ""Mapping (Bagel :o:)""
box = ""Mapping (Box :baby:)""
bugfix = ""Bug / Fix""
bus = ""Mapping (Bus :bus:)""
byond = ""T-Thanks BYOND""
consistency = ""Consistency Issue""
controversial = ""Controversial""
deff = ""Mapping (Deff :wastebasket:)""
discussion = ""Discussion""
dnm = ""✋ Do Not Merge ✋""
easy = ""Easy Fix""
exploitable = ""Exploitable""
featureloss = ""Feature Loss""
featurerequest = ""Feature Request""
first = ""good first issue""
formatting = ""Grammar / Formatting""
gamemode = ""Gameplay / Gamemode""
gameplay = ""Gameplay / Gamemode""
general = ""Mapping (General :world_map:)""
goonchat = ""Goonchat""
grammar = ""Grammar / Formatting""
help = ""help wanted""
hotfix = ""Hotfix""
libvg = ""libvg""
logging = ""Logging / Administration""
meta = ""Mapping (Meta :no_mobile_phones:)""
needspritework = ""Needs Spritework""
oversight = ""Oversight""
packed = ""Mapping (Packed :package:)""
parallax = ""Parallax""
qol = ""❤️ Quality of Life ❤️""
roid = ""Mapping (Roidstation :pick:)""
role = ""Role Datums""
roleissue = ""Role Datums Issue""
runtime = ""Runtime Log""
sanity = ""Sanity / Ghosthands""
snowmap = ""Mapping (Snowmap ❄)""
sound = ""Sound""
sprites = ""Sprites""
spriteworkdone = ""Spritework Done Needs Coder""
system = ""System""
taxi = ""Mapping (Taxi :taxi:)""
tested = ""100%  tested""
tweak = ""Tweak""
ui = ""UI""
vault = ""Mapping (Vault :question:)""
vote = ""⛔ Requires Server Vote ⛔""
wip = ""WiP""

== CHANGELOGS ==
Changelogs can be attached either by following the instructions in html/changelogs/example.yml, or by attaching an in-body changelog like the one attached to your PR automatically.

For the keys you can use in an in-body changelog, they are the same as described in example.yml
NOTE that anything *after* the :cl: will be parsed as a changelog, if it somehow manages to be parseable as such, so always put the changelog at the VERY end!

Valid Prefixes:
bugfix
wip (For works in progress)
tweak
soundadd
sounddel
rscdel (general deleting of nice things)
rscadd (general adding of nice things)
imageadd
imagedel
spellcheck (typo fixes)
experiment
tgs (TG-ported fixes?)

An example changelog is attached to this PR for your convenience:
-->
:cl:
 * rscadd: Changed around some prices so this shit isn't worse than the Great Depression.",True,True,25,3853.5666666666666
vgstation-coders_____vgstation13_____26656,2020-05-31T20:09:39Z,True,vgstation-coders_____vgstation13_____26656_____636522224,"The problem with free food is that it makes the chef irrelevant. I remember the days of free syndie cakes where no one (certainly not me) ever went to the kitchen. Like why would you when there's a vending machine right inside the engie lobby on box?

Vending machines are
>closer
>have 0% chance of having poison in them

Unless there's some cost to using them, there is no point in having a chef at all, they cause players to not congregate in food places, and lower interaction. It would be like it we did away with the emergency shuttle and put pods all over the station. That'd be awful - people don't move into the same space to interact. It's a social game.

>""But Cargo can order pizza!""

That's fine, that's another job doing it's role if so, and it hardly happens every shift unless there isn't a chef - and even if they do, you have to go to the cargo pizza - which is again usually in the bar or at cargo - a location that causes places to congregate. Cargo pizza, too, could be tampered with. It's not sitting in the same spot every shift inside your department or 2 steps out of it for the silent shuffle crew to move toward robotically.",True,True,25,3853.5666666666666
vgstation-coders_____vgstation13_____26656,2020-05-31T20:11:39Z,True,vgstation-coders_____vgstation13_____26656_____636522475,"also, 20 credits for gunko cola isn't good, there is a reason it costs 50",True,True,25,3853.5666666666666
vgstation-coders_____vgstation13_____26656,2020-05-31T20:20:35Z,True,vgstation-coders_____vgstation13_____26656_____636523640,"The same old argument, the same 50 times, the same thing in order to endlessly justify 60 dollars for raisins, while remaining silly as always.

Buzz off with the Chef excuse. People congregate to the Chef if the Chef is good or the Chef is around. If the food is poisoned, they lynch him then break in to eat Chef Burgers, and even if he is not, they find other sources. The gathering spots won't stop being gathering spots and some decent food in the vending machines that doesn't make our economy a joke won't stop folks from going to the Kitchen for pizza, cake and deep fried donut box salads.

I do not give a singular shit about Cargo. Food is overall a non issue for 99% of the shift and the congregations of likeminded individuals are not compromised due to food in the vendors being cheaper. If someone wants pizza, they will get it from cargo, but raisins being 60 bucks when you people insist on economic systems is, being honest, fucking retarded.

The focus points of interaction in the social game will not be compromised just because shitty food is now more available, we are not in constant hardmode and the kitchen remains one of the biggest focuses of most maps in terms of traffic. It just means the economy you guys so wish to force upon us in the name of ""balance"" is no longer a joke

So buzz off. Fair point on the gunko soda however, might have gotten a little too overboard.",True,True,25,3853.5666666666666
vgstation-coders_____vgstation13_____26656,2020-05-31T20:21:45Z,True,vgstation-coders_____vgstation13_____26656_____636523806,"You want some ridiculous prices look at the merch computer, 900 credits I think for a painting when all I want to just decorate my autism fort is too much.",True,True,25,3853.5666666666666
vgstation-coders_____vgstation13_____26656,2020-05-31T20:24:27Z,True,vgstation-coders_____vgstation13_____26656_____636524250,"The food in the vending machines is limited by the total amount of food in the machine just as much as it is limited by the price. While the chef can make food nigh infinitely with a half competent botany, cargo would need to restock the vending machines after not too long, which itself is ""interaction.""
I also believe you are overselling the interaction between the chef and the crew, which is in my experience: people shuffling up, grabbing food, and eating it before leaving without saying a word.
They're are not scheduled meal times where everyone gathers in the mess to grab a bite, there's a hunger timer that players reset so they can get back to actually playing the game.

This is all irrelevant, however, because anyone that even mildly cares about avoiding the chef will hack the throw wire on vending machines for free food. Do as you please.",True,True,25,3853.5666666666666
vgstation-coders_____vgstation13_____26656,2020-05-31T20:29:24Z,True,vgstation-coders_____vgstation13_____26656_____636525193,"A solid 60% of the reason I am doing this is due to the sheer lunacy of hyper inflation on food and 60 credits raisins triggering my autism to a boiling point. 30% is my personal beef with things costing too much to just have and sip around as a rp item like a soda can. The most important 10% is how fucking expensive it is to decorate stuff with food as a human and instead having to be a damn MoMMI to buy any decent amount of smokes, soda cans or whatever for a project, so don't you worry Dace, I am gonna be hitting that one next.",True,True,25,3853.5666666666666
vgstation-coders_____vgstation13_____26656,2020-05-31T20:30:40Z,True,vgstation-coders_____vgstation13_____26656_____636525374,"What you're paying for is not the raisins themselves, but the convenience and security of getting a full meal without having to go to the kitchen (exposing yourself to other people) or eating food you didn't see prepared. If it's a matter of a immersions for you, e.g: ""space inflation will never get so bad raisins will be $60!"" - we should first ask why 2 boxes of raisins make a full meal from starving to sated in the first place. If raisins gave you 1 nutriment, I'd have no problem with them being $10.

@bathosbathtime Stock count isn't really a limiting factor. The 1 Getmore can easily feed 24 crewmen for a couple hours. I'm not even looking at the gimmick food items like gum or chococoins - only the main food items. 
Throw wire does at least cost you time: you need to either set up a monkey chair or sit next to it while it throws food at your face. It could be better, I've raised concerns, but it's not the worst thing ever.",True,True,25,3853.5666666666666
vgstation-coders_____vgstation13_____26656,2020-05-31T20:38:27Z,True,vgstation-coders_____vgstation13_____26656_____636526405,">but the convenience and security of getting a full meal without having to go to the kitchen (exposing yourself to other people) or eating food you didn't see prepared

What kind of powergaying moron do you take me for when you actually try and say that 60 bucks for a pack of raisins is legitimately worth it because I avoid playing socially in a social game. What kind of player do you assume me to be where you legitimately think I won't eat the chefs food and instead go on some paranoid shenanigan train of thought where I have to puree everything to make sure it doesn't have the spicy hot sauce. 

Do you legitimately consider this some kind of covert powergay powermove to encourage silent shuffling? Are you that dense?

FUCK OFF, MY IMMERSION IS RUINED THAT GODDAMN DRIED GRAPES COST 60 FUCKING CREDITS, I DON'T GIVE A SHIT ABOUT THEM MECHANICALLY BEING BETTER THAN FUCKING HONKIE CHIPS OR CANDY, IT IS FUCKING RETARDED, ENOUGH WITH YOUR FUCKING SHIT OF NUTRIMENT CASH RATIOS, ITS FUCKING DRIED GRAPES, ALLOW PEOPLE TO ATLEAST BE ABLE TO PAY 2 FUCKING PACKS OF DRIED GRAPES PER PAYCHECK YOU CUNT.

You do good work on Vox kurf, but you are mad retarded on this. Let the fucking grapes go. Let them fucking go. Let people have a technically decent source of fucking nutriment that isn't the chef, nobody but the most absolutely sweaty retards will ever go and become anti-social raisin munching NEETs in maintenance.",True,True,25,3853.5666666666666
vgstation-coders_____vgstation13_____26656,2020-05-31T20:41:13Z,True,vgstation-coders_____vgstation13_____26656_____636526753,"I don't think it's a move *to* encourage silent shuffling, I think it *will* encourage silent shuffling. I believe your intentions are entirely good, which is why we can have this conversation without typing like we're ZaNy and comically pretend to be mad or something. Why not make raisins actually give you a nutrition level more consistent with actual box of raisins instead of a 2 course meal? Then we could have cheap RP raisins that you can pop just for fun.

FYI: I actually don't have a problem with lowering the price on sodas at all.",True,True,25,3853.5666666666666
vgstation-coders_____vgstation13_____26656,2020-05-31T20:42:27Z,True,vgstation-coders_____vgstation13_____26656_____636526902,"I don't think we need to go to the extreme of reducing them to 1 nutriment. 3-4 nutriments seems like a better alternative from the 6 nutriment they currently give, but I do agree that reducing the effectiveness of the vending machine food is a possible solution.
Suggesting that it be reduced to 1, however, seems intentionally inflammatory.",True,True,25,3853.5666666666666
vgstation-coders_____vgstation13_____26656,2020-05-31T20:44:38Z,True,vgstation-coders_____vgstation13_____26656_____636527192,"If you want the price to be sixthed (60->10) it makes sense to sixth the nutriment, too. I don't see how it's inflammatory at all, it's symmetry.

EDIT: Another thing you could do is fill it with less efficient nutrition reagents like sugar, or fill out extra space with grape juice. ",True,True,25,3853.5666666666666
vgstation-coders_____vgstation13_____26656,2020-05-31T20:48:09Z,True,vgstation-coders_____vgstation13_____26656_____636527666,"Who will it encourage silent shuffling _to_? Who do we actually have that would legitimately start checking the Github in order to find the optimal way of getting nutriment without ever touching the Kitchen? If you go and start by this logic, go and remove the donuts from the sec vending machine, free for everyone, and enough to stave off the hunger and even heal a little, optimal chef avoidance right there. Several vending machines in Box too, donuts for the whole shift, 0 cost.

That line of reasoning is silly. The chef won't stop being the pitstop for munchies and any powergamer of that calibre is already on the brink of being banned for rule 0 or several notes of bad play.

If you want to make a PR to reduce the damn fucking raisin nutriment after this, fine, I will even upvote it. Just get the damn hangup on raisins being good out of the way if it means you'l let the rest of it slip, but for Gods sake, stop defending actual 60 credits raisins. It is just so bloody stupid.",True,True,25,3853.5666666666666
vgstation-coders_____vgstation13_____26656,2020-05-31T20:57:11Z,True,vgstation-coders_____vgstation13_____26656_____636528840,">Who will it encourage silent shuffling to?

No one centralized place, that's the point. I feel like there's been a breakdown in communication at some point, like maybe you're skimming my posts. I'm saying what I'm saying based on a lot of experience - I was eating syndie cakes along with everybody else during that era. It's not something comical and dramatic like epic food strats or something, it's people doing what's convenient for them: staying in their department and getting the food that's closest instead of crossing the station.

Calm down, take a deep breath, and obsess less about raisins!",True,True,25,3853.5666666666666
vgstation-coders_____vgstation13_____26656,2020-05-31T21:09:16Z,True,vgstation-coders_____vgstation13_____26656_____636530360,"Raisins are 60% of the reason I am making this PR and I will not let go of the dehydrated grapes, it's about principles and standards and we ain't in AnarchoSyndicate yet, just good old Nanotransia.

Speaking seriously for 15 seconds, this ain't that era, we don't have players with the same habits of that era and giving players some !FUN! is good once in a while. Let them eat rais-Cake. Let them eat Cake. If it does create those bad habits you mention, you got full on ability and my non important permission to nerf this back into whatever you think reasonable and get it merged.",True,True,25,3853.5666666666666
vgstation-coders_____vgstation13_____26656,2020-05-31T22:21:12Z,True,vgstation-coders_____vgstation13_____26656_____636538979,Doesn't eating too much vending machine food make you sick or am I thinking of another server? I know some have that to balance out cheap prices.,True,True,25,3853.5666666666666
vgstation-coders_____vgstation13_____26656,2020-05-31T22:37:25Z,True,vgstation-coders_____vgstation13_____26656_____636540729,"Only some of the Dans food does that, but otherwise, no, not unless you drink the forbidden polytrinic juice.",True,True,25,3853.5666666666666
vgstation-coders_____vgstation13_____26656,2020-05-31T22:46:02Z,True,vgstation-coders_____vgstation13_____26656_____636541743,"Just make it apply to all of the vending machine food, ez",True,True,25,3853.5666666666666
vgstation-coders_____vgstation13_____26656,2020-05-31T22:59:18Z,True,vgstation-coders_____vgstation13_____26656_____636543416,"what's the point of Discount Dan food if it's the same price as normal food
where's the SALE",True,True,25,3853.5666666666666
vgstation-coders_____vgstation13_____26656,2020-05-31T23:03:55Z,True,vgstation-coders_____vgstation13_____26656_____636543962,"Confusingly this PR makes unpoisoned food cheaper than the poisonous dan food. Dan food used to be a bargain at 1/6 the price, now it's just a newbie trap.",True,True,25,3853.5666666666666
vgstation-coders_____vgstation13_____26656,2020-05-31T23:10:54Z,True,vgstation-coders_____vgstation13_____26656_____636544827,"Alrighty then, dirtu cheapu darty dan, coming right up",True,True,25,3853.5666666666666
vgstation-coders_____vgstation13_____26656,2020-05-31T23:12:27Z,True,vgstation-coders_____vgstation13_____26656_____636545011,"I initially supported this PR thinking it was going to make the expensive garbage like raisins half price so there's a reason to buy them, but making all the food items from the getmore 10 or less to make just makes the chef irrelevant (even moreso) and has the epic effect of making ""Discount"" Dan's now a vendor for the rich and wealthy.  Making Dan's stuff cost 1 credit to compensate a going out of business sale is missing the entire point of the issue. ",True,True,25,3853.5666666666666
WaspStation_____WaspStation-1.0_____242,2020-06-01T01:27:19Z,True,WaspStation_____WaspStation-1.0_____242_____636567467,"hey lads, remember that time i re-added the antimatter reactor",True,True,16,4177.0
WaspStation_____WaspStation-1.0_____242,2020-06-01T01:28:48Z,True,WaspStation_____WaspStation-1.0_____242_____636567763,god is dead,True,True,16,4177.0
WaspStation_____WaspStation-1.0_____242,2020-06-01T01:29:11Z,True,WaspStation_____WaspStation-1.0_____242_____636567845,"if there is no god, then man will see fit to create one in time",True,True,16,4177.0
WaspStation_____WaspStation-1.0_____242,2020-06-01T01:30:12Z,True,WaspStation_____WaspStation-1.0_____242_____636568079,all gods are meant to be shot and killed ,True,True,16,4177.0
WaspStation_____WaspStation-1.0_____242,2020-06-01T01:37:00Z,True,WaspStation_____WaspStation-1.0_____242_____636569393,i was quoting Voltaire ,True,True,16,4177.0
WaspStation_____WaspStation-1.0_____242,2020-06-01T01:42:23Z,True,WaspStation_____WaspStation-1.0_____242_____636570419,"in the far future


when someone is trying to hire me for some coding position or recruiting people for some project


please don't use this against me, a man can only take so much before he breaks",True,True,16,4177.0
WaspStation_____WaspStation-1.0_____242,2020-06-01T01:42:45Z,True,WaspStation_____WaspStation-1.0_____242_____636570492,"mission accomplished boys, we did it",True,True,16,4177.0
WaspStation_____WaspStation-1.0_____242,2020-06-01T01:43:15Z,True,WaspStation_____WaspStation-1.0_____242_____636570596,apc destroyed,True,True,16,4177.0
WaspStation_____WaspStation-1.0_____242,2020-06-01T01:43:24Z,True,WaspStation_____WaspStation-1.0_____242_____636570621,ok gonna force the current round to end even though its zero pop so I can shoot people next round,True,True,16,4177.0
WaspStation_____WaspStation-1.0_____242,2020-06-01T01:45:06Z,True,WaspStation_____WaspStation-1.0_____242_____636570947,master shifu said that anything is possible when you have inner peace,True,True,16,4177.0
tgstation_____tgstation_____51336,2020-06-01T01:48:14Z,True,tgstation_____tgstation_____51336_____636571523,uh oh summertime!,True,True,20,6149.566666666667
WaspStation_____WaspStation-1.0_____242,2020-06-01T01:59:48Z,True,WaspStation_____WaspStation-1.0_____242_____636573852,"and because of my inner peace, @TheNeoGamer42 finally began playing security",True,True,16,4177.0
WaspStation_____WaspStation-1.0_____242,2020-06-01T02:05:20Z,True,WaspStation_____WaspStation-1.0_____242_____636575044,nah probably just gonna be headcurity more,True,True,16,4177.0
BoHBranch_____BoH-Bay_____920,2020-06-01T02:35:31Z,True,BoHBranch_____BoH-Bay_____920_____636581398,What is your operating system?,True,True,12,38960.683333333334
vgstation-coders_____vgstation13_____26656,2020-06-01T04:58:54Z,True,vgstation-coders_____vgstation13_____26656_____636613194,"Keep all vendor prices the same
Increase cargo prices
Drastically increase crew salary 
Leave starting money untouched",True,True,25,3853.5666666666666
vgstation-coders_____vgstation13_____26656,2020-06-01T06:22:13Z,True,vgstation-coders_____vgstation13_____26656_____636636534,"> The problem with free food is that it makes the chef irrelevant. I remember the days of abundant syndie cakes where no one (certainly not me) ever went to the kitchen. Like why would you when there's a vending machine right inside the engie lobby on box?

The chefs already irrelevent, stop pulling things out ya ass, I want to see this merged, any change is a good change, fuck the status quo anarchism NOW!",True,True,25,3853.5666666666666
BoHBranch_____BoH-Bay_____920,2020-06-01T08:06:17Z,True,BoHBranch_____BoH-Bay_____920_____636683148,"Win10. Also, I think this might because im uploading the files directly onto the directory of the stuff im changing, instead of doing it the epic github way",True,True,12,38960.683333333334
homecentr/docker-gluster/10,2020-06-01T08:25:09Z,False,5ed4bd1fbd3543361087cbda,Superseded by #11.,True,False,1,0.0
bcgov/cas-shipit/57,2020-06-02T11:15:46Z,False,5ed7157fbd35435620edb62a,"Kudos, SonarCloud Quality Gate passed!

[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug.png' alt='Bug' width='16' height='16' />](https://sonarcloud.io/project/issues?id=bcgov_cas-shipit&pullRequest=57&resolved=false&types=BUG) [<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A.png' alt='A' width='16' height='16' />](https://sonarcloud.io/project/issues?id=bcgov_cas-shipit&pullRequest=57&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=bcgov_cas-shipit&pullRequest=57&resolved=false&types=BUG)  
[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability.png' alt='Vulnerability' width='16' height='16' />](https://sonarcloud.io/project/issues?id=bcgov_cas-shipit&pullRequest=57&resolved=false&types=VULNERABILITY) [<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A.png' alt='A' width='16' height='16' />](https://sonarcloud.io/project/issues?id=bcgov_cas-shipit&pullRequest=57&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=bcgov_cas-shipit&pullRequest=57&resolved=false&types=VULNERABILITY) (and [<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot.png' alt='Security Hotspot' width='16' height='16' />](https://sonarcloud.io/project/issues?id=bcgov_cas-shipit&pullRequest=57&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/issues?id=bcgov_cas-shipit&pullRequest=57&resolved=false&types=SECURITY_HOTSPOT) to review)  
[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell.png' alt='Code Smell' width='16' height='16' />](https://sonarcloud.io/project/issues?id=bcgov_cas-shipit&pullRequest=57&resolved=false&types=CODE_SMELL) [<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A.png' alt='A' width='16' height='16' />](https://sonarcloud.io/project/issues?id=bcgov_cas-shipit&pullRequest=57&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=bcgov_cas-shipit&pullRequest=57&resolved=false&types=CODE_SMELL)

[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo.png' alt='No Coverage information' width='16' height='16' />](https://sonarcloud.io/component_measures?id=bcgov_cas-shipit&pullRequest=57) No Coverage information  
[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo.png' alt='No Duplication information' width='16' height='16' />](https://sonarcloud.io/component_measures?id=bcgov_cas-shipit&pullRequest=57&metric=duplicated_lines_density&view=list) No Duplication information

",True,False,3,141686.45
brianchandotcom/liferay-portal/89501,2020-06-02T16:10:43Z,False,5ed67ffabd354335b5633048,"To conserve resources, the PR Tester does not automatically run for forwarded pull requests.",True,False,3,155.76666666666668
brianchandotcom/liferay-portal/89501,2020-06-02T18:38:48Z,False,5ed69e17bd35435b24d467c8,"Merged. Thank you.
View total diff: https://github.com/brianchandotcom/liferay-portal/compare/382aaf7bbe...66ef11c63b",True,False,3,155.76666666666668
brianchandotcom/liferay-portal/89501,2020-06-02T18:46:29Z,False,5ed7409bbd3543779901ebf3,Thx @rafaprax ,True,False,3,155.76666666666668
expressjs_____session_____708,2020-06-03T07:31:28Z,True,expressjs_____session_____708_____434364520,"@dougwilson - addressed, changed the log message",True,True,29,358951.0333333333
expressjs_____session_____708,2020-06-03T07:31:36Z,True,expressjs_____session_____708_____434364615,ditto as above,True,True,29,358951.0333333333
expressjs_____session_____708,2020-06-03T07:31:55Z,True,expressjs_____session_____708_____434364892,"done, moved to `save` method.",True,True,29,358951.0333333333
Aurorastation_____Aurora.3_____8996,2020-06-03T10:29:58Z,True,Aurorastation_____Aurora.3_____8996_____434468443,"The narsie, what",True,False,18,7679.416666666667
vgstation-coders_____vgstation13_____26656,2020-06-03T12:18:21Z,True,vgstation-coders_____vgstation13_____26656_____638159594,"the reason yclat was screaming about raisins so much
is because raisins are literally the powergamer's choice
they are the most efficient nutrition-to-price ratio

merging this has been a blow against good, honest, hardworking spessmen
may the powergay light the way",True,True,25,3853.5666666666666
Aurorastation_____Aurora.3_____8996,2020-06-03T17:31:58Z,True,Aurorastation_____Aurora.3_____8996_____434737865,"All hail the The Nar'sie, our the lord of blood",True,False,18,7679.416666666667
expressjs_____session_____708,2020-06-04T00:19:53Z,True,expressjs_____session_____708_____434925132,"This prints before the session is saved, as the saving operation is async.",True,True,29,358951.0333333333
expressjs_____session_____708,2020-06-04T00:24:15Z,True,expressjs_____session_____708_____434926271,"This is based on I am assuming that this line is desired to be similar to the destroy logs, with the behavior of ""destroying.."" being logged before the store call and then ""... destroyed"" called when the store returns back to this module without an error.",True,True,29,358951.0333333333
expressjs_____session_____708,2020-06-04T06:14:44Z,True,expressjs_____session_____708_____435014549,"thanks @dougwilson . yes, the desire is to follow `destroy`. the intent is simple - many issues in this repo are about session not being saved or inability to know about it.

thinking about it more, I can achieve this at the `save` site only via structural changes to the `save` function. that is, anchoring the `save` call with a custom callback, check for errors, or else print the debug message and then invoke the original callback, if any.

Before implementing it and submitting for your review, I want to pro-actively check with you on it - will you be open for such a change?",True,True,29,358951.0333333333
Aurorastation_____Aurora.3_____8996,2020-06-04T15:03:46Z,True,Aurorastation_____Aurora.3_____8996_____638908472,!review,True,True,18,7679.416666666667
Aurorastation_____Aurora.3_____8996,2020-06-04T16:50:27Z,True,Aurorastation_____Aurora.3_____8996_____435404116,"I would not move this shit.

Even though the code in question is largely datums, they're very easily locateable here. Since all gamemode shit goes in here. So hnrg.",True,False,18,7679.416666666667
Aurorastation_____Aurora.3_____8996,2020-06-04T16:55:33Z,True,Aurorastation_____Aurora.3_____8996_____435407237,"This should return a value to indicate that the parent has used the proc. So that you could do `. = ..(); if (.) return;`

Otherwise you will have a rune potentially do a talisman action and then get invoked too.",True,False,18,7679.416666666667
Aurorastation_____Aurora.3_____8996,2020-06-04T16:56:36Z,True,Aurorastation_____Aurora.3_____8996_____435407927,"Actually, thinking about this more. The selection between `do_talisman_action` and `do_rune_action` should not be handled here, maybe? But instead in the higher level. So you don't have to deal with invoking parent and checking return status.

But if you do keep it like this, use spacemanDMM's `SHOULD_CALL_PARENT(TRUE)` or w/e it is.",True,False,18,7679.416666666667
Aurorastation_____Aurora.3_____8996,2020-06-04T17:00:02Z,True,Aurorastation_____Aurora.3_____8996_____435410158,nani?,True,False,18,7679.416666666667
Aurorastation_____Aurora.3_____8996,2020-06-04T17:00:25Z,True,Aurorastation_____Aurora.3_____8996_____435410395,"```suggestion

```

unnecessary.",True,False,18,7679.416666666667
Aurorastation_____Aurora.3_____8996,2020-06-04T17:00:47Z,True,Aurorastation_____Aurora.3_____8996_____435410601,shouldn't range() already also get the user? Or might the user be a non-cultist?,True,False,18,7679.416666666667
Aurorastation_____Aurora.3_____8996,2020-06-04T17:01:31Z,True,Aurorastation_____Aurora.3_____8996_____435411029,"again, why's the return value relevant here?",True,False,18,7679.416666666667
Aurorastation_____Aurora.3_____8996,2020-06-05T08:56:27Z,True,Aurorastation_____Aurora.3_____8996_____435784146,Leftover code,True,False,18,7679.416666666667
Aurorastation_____Aurora.3_____8996,2020-06-05T08:56:47Z,True,Aurorastation_____Aurora.3_____8996_____435784333,"

Leftover code
",True,False,18,7679.416666666667
Aurorastation_____Aurora.3_____8996,2020-06-05T09:41:51Z,True,Aurorastation_____Aurora.3_____8996_____435809415,"Range gets everything, this is a list you put in empulse() to make it not affect people in that list",True,False,18,7679.416666666667
Aurorastation_____Aurora.3_____8996,2020-06-05T18:15:23Z,True,Aurorastation_____Aurora.3_____8996_____436087764,"```suggestion
```",True,False,18,7679.416666666667
Aurorastation_____Aurora.3_____8996,2020-06-05T18:16:36Z,True,Aurorastation_____Aurora.3_____8996_____436088639,uuh. does this just kill the user now...? There's no other way to exit this loop.,True,False,18,7679.416666666667
sherrygithub27/Animal-Adoption/1,2020-06-06T00:50:07Z,False,5edc5757bd35437c3ec04be8,Superseded by #2.,True,False,1,0.0
tgstation_____tgstation_____51385,2020-06-07T00:21:09Z,True,tgstation_____tgstation_____51385_____640136008,"This PR has been inactive for long enough to be automatically marked as stale. This means it is at risk of being auto closed in ~ 7 days, please address any outstanding review items and ensure your PR is finished, if these are all true and you are auto-staled anyway, you need to actively ask maintainers if your PR will be merged. Once you have done any of the previous actions then you should request a maintainer remove the stale label on your PR, to reset the stale timer. If you feel no maintainer will respond in that time, you may wish to close this PR youself, while you seek maintainer comment, as you will then be able to reopen the PR yourself",True,True,6,11345.066666666668
BradleyTim/simba-survey-app/1,2020-06-07T18:31:55Z,False,5eddc795bd35431040ec3767,"
This pull request is being automatically deployed with Vercel ([learn more](https://zeit.ink/github-learn-more)).
To see the status of your deployment, click below or on the icon next to each commit.

  🔍 Inspect: https://vercel.com/bradleytim/simba-survey-app/dzwhbnn4b
  ✅ Preview: https://simba-survey-a-git-dependabot-npmandyarnwebsocket-extens-77fc57.bradleytim.now.sh
  	",True,False,1,0.0
Skyrat-SS13_____Skyrat13_____2219,2020-06-08T11:54:53Z,True,Skyrat-SS13_____Skyrat13_____2219_____640557142,"Gonna close this up, will work on something in a smaller scale that basicly just nerfs/alters the two problematic glands and removes permanent severe trauma from rolling.",True,True,5,14431.1
Icinga_____icinga2_____8046,2020-06-08T13:50:55Z,True,Icinga_____icinga2_____8046_____431155176,,True,True,4,12629.566666666668
Icinga_____icinga2_____8046,2020-06-08T13:58:20Z,True,Icinga_____icinga2_____8046_____640621879,ref/IP/25801,True,True,4,12629.566666666668
openssl_____openssl_____12089,2020-06-08T20:57:07Z,True,openssl_____openssl_____12089_____431392792,Remove some offensive/archaic terminology from OpenSSL.,True,True,99,35361.316666666666
javierobledo/syntaxsemanticanalysis/275,2020-06-08T21:01:41Z,False,5edea887bd3543340625dc2c,Closing this in favor of #279,True,False,1,0.0
openssl_____openssl_____12089,2020-06-08T22:34:42Z,True,openssl_____openssl_____12089_____437038299,"Main is a better idea, would you mind using ""main"" instead of ""parent""?  My thinking is that ""main"" would indicate that it's the top or root DRBG, while a ""parent"" can be somewhere in the middle of the chain, so not quite as definitive if you see what I mean...",True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-08T22:37:48Z,True,openssl_____openssl_____12089_____437039432,"Wouldn't ""root"" be even better? ",True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-08T22:37:58Z,True,openssl_____openssl_____12089_____437039500,"This one is troublesome, as it exists in 1.1.1.",True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-08T22:43:21Z,True,openssl_____openssl_____12089_____437041341,"Either root or parent is fine to replace master; you guys decide.
",True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-08T22:44:20Z,True,openssl_____openssl_____12089_____640925862,-1 ,True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-08T22:44:50Z,True,openssl_____openssl_____12089_____437041775,"Simple enough to keep the old name in addition, or deprecate it; let me know what you prefer.",True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-08T22:53:39Z,True,openssl_____openssl_____12089_____640928737,"> -1

Hi Tim, a flat ""-1"" feels like applying stop energy without any guidance on how to make progress.  I trust that you will compose a more detailed response when you have a chance to do so.",True,True,99,35361.316666666666
gasashi/freemarket_sample_65a/43,2020-06-09T01:14:23Z,False,5ee0416bbd35436453923c58,"gitignoreを使って.DS_Storeをgitから外しましょう。
gitignoreの使い方についてと.DS_Storeのgitの外し方については下記のサイトに詳しく載っているのでよければ参考にしてください。
https://pikawaka.com/word/gitignore",True,False,21,588.8666666666667
facebook_____react_____19102,2020-06-09T06:11:53Z,True,facebook_____react_____19102_____431560140,"<!--
  Thanks for submitting a pull request!
  We appreciate you spending the time to work on these changes. Please provide enough information so that others can review your pull request. The three fields below are mandatory.

  Before submitting a pull request, please make sure the following is done:

  1. Fork [the repository](https://github.com/facebook/react) and create your branch from `master`.
  2. Run `yarn` in the repository root.
  3. If you've fixed a bug or added code that should be tested, add tests!
  4. Ensure the test suite passes (`yarn test`). Tip: `yarn test --watch TestName` is helpful in development.
  5. Run `yarn test-prod` to test in the production environment. It supports the same options as `yarn test`.
  6. If you need a debugger, run `yarn debug-test --watch TestName`, open `chrome://inspect`, and press ""Inspect"".
  7. Format your code with [prettier](https://github.com/prettier/prettier) (`yarn prettier`).
  8. Make sure your code lints (`yarn lint`). Tip: `yarn linc` to only check changed files.
  9. Run the [Flow](https://flowtype.org/) typechecks (`yarn flow`).
  10. If you haven't already, complete the CLA.

  Learn more about contributing: https://reactjs.org/docs/how-to-contribute.html
-->

## Summary

<!-- Explain the **motivation** for making this change. What existing problem does the pull request solve? -->

## Test Plan

<!-- Demonstrate the code is solid. Example: The exact commands you ran and their output, screenshots / videos if the pull request changes the user interface. -->

use allowlist instead of whitelist for some reason
",True,True,11,5459.85
facebook_____react_____19102,2020-06-09T06:12:03Z,True,facebook_____react_____19102_____641053699,"Hi @shengxinjing! 

Thank you for your pull request and welcome to our community.We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file.

In order for us to review and merge your code, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.

If you have received this in error or have any questions, please contact us at [cla@fb.com](mailto:cla@fb.com?subject=CLA%20for%20facebook%2Freact%20%2319102). Thanks!",True,True,11,5459.85
facebook_____react_____19102,2020-06-09T06:14:02Z,True,facebook_____react_____19102_____641054632,"This pull request is automatically built and testable in [CodeSandbox](https://codesandbox.io).

  To see build info of the built libraries, click [here](https://ci.codesandbox.io/status/facebook/react/pr/19102/builds/31450) or the icon next to each commit SHA.

Latest deployment of this branch, based on commit e35dddb53718c6c2da61458518d1a6bb785ad1ad:

|Sandbox| Source |
|--|--|
|[gracious-bas-02j6v](https://codesandbox.io/s/gracious-bas-02j6v)| Configuration |
",True,True,11,5459.85
facebook_____react_____19102,2020-06-09T06:19:18Z,True,facebook_____react_____19102_____641057022,"
<!--
  0 failure: 
  0 warning: 
  
  2 markdown notices
  DangerID: danger-id-stable;
-->



No significant bundle size changes to report.

## Size changes (stable)
<p align=""right"">
  Generated by :no_entry_sign: <a href=""https://danger.systems/js"">dangerJS</a> against e35dddb53718c6c2da61458518d1a6bb785ad1ad
</p>
",True,True,11,5459.85
facebook_____react_____19102,2020-06-09T06:19:30Z,True,facebook_____react_____19102_____641057107,"
<!--
  0 failure: 
  0 warning: 
  
  2 markdown notices
  DangerID: danger-id-experimental;
-->



No significant bundle size changes to report.

## Size changes (experimental)
<p align=""right"">
  Generated by :no_entry_sign: <a href=""https://danger.systems/js"">dangerJS</a> against e35dddb53718c6c2da61458518d1a6bb785ad1ad
</p>
",True,True,11,5459.85
gasashi/freemarket_sample_65a/43,2020-06-09T10:07:27Z,False,5ee042f3bd35436468bd8d93,修正しました。,True,False,21,588.8666666666667
gasashi/freemarket_sample_65a/43,2020-06-09T10:10:22Z,False,5ee04799bd354306f268e9fa,"レビュー依頼ありがとうございます！

こちら、修正点の差分があがっておりません。コミットとプッシュのし忘れを確認して修正点の差分を出して再度プルリクエストお願いします。",True,False,21,588.8666666666667
gasashi/freemarket_sample_65a/43,2020-06-09T10:21:11Z,False,5ee043e9bd354365e8a2c7ee,"こちらの記述は@import ""mypage/mypage-show"";の上に定義しておきましょう！",True,False,21,588.8666666666667
gasashi/freemarket_sample_65a/43,2020-06-09T10:22:50Z,False,5ee043c1bd3543602a56d927,partial:は省略しましょう！,True,False,21,588.8666666666667
gasashi/freemarket_sample_65a/43,2020-06-09T10:23:01Z,False,5ee043b8bd35436453923d2f,こちらもです！,True,False,21,588.8666666666667
gasashi/freemarket_sample_65a/43,2020-06-09T10:23:39Z,False,5ee043dcbd3543649b657ba8,こちらもです！,True,False,21,588.8666666666667
gasashi/freemarket_sample_65a/43,2020-06-09T10:23:56Z,False,5ee043c0bd354365061313fc,partial:は省略できます！,True,False,21,588.8666666666667
gasashi/freemarket_sample_65a/43,2020-06-09T10:24:03Z,False,5ee043ccbd354363cfc970a8,こちらもです！,True,False,21,588.8666666666667
gasashi/freemarket_sample_65a/43,2020-06-09T10:24:33Z,False,5ee043edbd35435ffe896aab,フリマペイにしておきましょう。,True,False,21,588.8666666666667
gasashi/freemarket_sample_65a/43,2020-06-09T10:25:35Z,False,5ee043c5bd3543643e393746,こちらは必要でしょうか？,True,False,21,588.8666666666667
gasashi/freemarket_sample_65a/43,2020-06-09T10:35:12Z,False,5ee04483bd35431783f214a6,修正しました。,True,False,21,588.8666666666667
gasashi/freemarket_sample_65a/43,2020-06-09T10:37:18Z,False,5ee04493bd354318fe55c676,修正しました。,True,False,21,588.8666666666667
gasashi/freemarket_sample_65a/43,2020-06-09T10:38:27Z,False,5ee044b2bd354309bc5fcfea,修正しました。,True,False,21,588.8666666666667
gasashi/freemarket_sample_65a/43,2020-06-09T10:38:39Z,False,5edf6924bd35437158c88097,修正しました。,True,False,21,588.8666666666667
gasashi/freemarket_sample_65a/43,2020-06-09T10:40:08Z,False,5ee044c5bd354308754497be,修正しました。,True,False,21,588.8666666666667
gasashi/freemarket_sample_65a/43,2020-06-09T10:40:25Z,False,5ee044c0bd354309bc5fcfef,修正しました。,True,False,21,588.8666666666667
gasashi/freemarket_sample_65a/43,2020-06-09T10:41:34Z,False,5ee044febd35431e3339235f,修正しました。,True,False,21,588.8666666666667
gasashi/freemarket_sample_65a/43,2020-06-09T10:42:26Z,False,5ee044f7bd354306de57fa3f,"この記述がないとエラーが出てしまっていましたのでネットで解決法を調べて記述をしています。
必要なら変更します。",True,False,21,588.8666666666667
gasashi/freemarket_sample_65a/43,2020-06-09T10:47:07Z,False,5ee0453bbd3543084bf417a5,かしこまりました。でしたら、gitignoreにて、secrets.ymlはgithubにあげないようにしておきましょう！,True,False,21,588.8666666666667
openssl_____openssl_____12089,2020-06-09T10:55:33Z,True,openssl_____openssl_____12089_____437320420,"You'll have to keep the old name in addition no matter what.  If it were me, I would deprecate it, but from what I gather, that may be a bit too rad, so just add a backward compat macro.",True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-09T10:55:43Z,True,openssl_____openssl_____12089_____641211883,"The most fixes like ""white space => whitespace"" should be applied anyway as they are grammar improvements...",True,True,99,35361.316666666666
gasashi/freemarket_sample_65a/43,2020-06-09T11:03:15Z,False,5edf6e12bd35435dcc57b6d0,修正しました。,True,False,21,588.8666666666667
openssl_____openssl_____12089,2020-06-09T11:04:57Z,True,openssl_____openssl_____12089_____437325175,"I'm actually a little dubious that ""master"" on its own is offensive, whereas it is considered as such when put together with ""slave"" (for obvious reasons)...

However, I had a quick look at https://en.wikipedia.org/wiki/Master/slave_(technology), and other proposed substitutes seem to be ""main"" and ""primary"", primarily.  I see that as an argument for choosing ""main"" in our case.",True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-09T11:30:53Z,True,openssl_____openssl_____12089_____437337753,Main implies it is somewhat the one that is mainly used. Root or primary please.,True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-09T11:32:34Z,True,openssl_____openssl_____12089_____437338585,"I'm kind of with @levitte....is ""master"" actually offensive when using it in the context of ""master, public, private""? By avoiding this particular rename we don't have to make any changes to public API symbols - which would be preferable.",True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-09T11:34:06Z,True,openssl_____openssl_____12089_____437339297,"...or, if so, would we also propose to rename our ""master"" branch in git??",True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-09T11:54:21Z,True,openssl_____openssl_____12089_____437349741,"This could end up being an interesting discussion in and of itself...  just wanted to point out that ""master"" as a term most likely lives in the fuzzy space between the categorical ""offensive"" / ""not offensive"" classifications, and I really don't have enough of a clue to know which way to lean on this one.  That's not a very strong argument for either way to move from here.

I'll also note that, while this does touch public API symbols, almost all of them are new in 3.0.  Furthermore, if they are deprecated in the RAND for providers PR, this change becomes moot.",True,True,99,35361.316666666666
facebook_____react_____19102,2020-06-09T12:18:31Z,True,facebook_____react_____19102_____641251682,"**I REALLY DISAGREE WITH THIS PR**

I worry about the racial discrimination have happened in US from long time ago to recent as a human being, while I also insist to regard `blacklist, whitelist, blackbox testing, whitebox testing, master, slave, etc` to be neutral nouns in `IT area` as a software engineer. They just info to opposite or relevant methods in computer science without any emotion. The more one tries to hide, the more one is exposed.

My voice may seem to be sharp on this rename PR. Indeed, that shows my attitude about racial discrimination and mercy about people who suffer from brutality all around the world.   As a Chinese, we know the eval history of `Negro Slaves` and experienced `Literary Inquisition` about 400 years ago. We should show really action instead of showing shows.

",True,True,11,5459.85
facebook_____react_____19102,2020-06-09T12:27:34Z,True,facebook_____react_____19102_____641255748,it's for fun  beacuse google use replace blacklist with blocklist in chrome and [go](https://github.com/golang/go/blob/6bf2eea62a3425c57f3d908ec32047a9ae41c025/src/cmd/compile/internal/gc/plive.go#L905),True,True,11,5459.85
openssl_____openssl_____12089,2020-06-09T12:47:23Z,True,openssl_____openssl_____12089_____437384627,I will add a macro in the header file once the hold is removed.  I hope that will happen soon.,True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-09T12:52:59Z,True,openssl_____openssl_____12089_____437388159,"It's easy to do the good thing, even if some feel that ""it's not necessary.""

Of course, I'm not doing anything here until the hold is removed. It's not a good look, folks.",True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-09T12:55:41Z,True,openssl_____openssl_____12089_____437389944,"BTW, to address @mattcaswell's concern: renaming something via a define in a public header file (as @levitte proposed) meets the ""just recompile"" bar that the project has publically set.",True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-09T13:47:17Z,True,openssl_____openssl_____12089_____437432270,Is the function part of the stable ABI? If yes then a macro is not sufficient.,True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-09T13:50:07Z,True,openssl_____openssl_____12089_____437435209,"> Is the function part of the stable ABI? If yes then a macro is not sufficient.

Sorry, I missed Rich's reply https://github.com/openssl/openssl/pull/12089#discussion_r437389944",True,True,99,35361.316666666666
facebook_____react_____19102,2020-06-09T15:39:42Z,True,facebook_____react_____19102_____641387518,Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!,True,True,11,5459.85
facebook_____react_____19102,2020-06-09T15:39:59Z,True,facebook_____react_____19102_____641387668,Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!,True,True,11,5459.85
openssl_____openssl_____12089,2020-06-09T22:06:23Z,True,openssl_____openssl_____12089_____437749087,"Although there is an instance where master has a negative connotation, I don't think the word should be replaced - as it is a general word describing 'having talent' in pretty much any area. (e.g Headmaster, master-chef).

I have no objection to replacing words that associate a color with good or bad.",True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-09T23:16:34Z,True,openssl_____openssl_____12089_____437773602,"Languages evolve, as do people's sensitivities. The dominant definition of master, when used as a known, is someone who has others working for them, such as slaves. The dominant definition when used as an adjective is as you said, having talent.  But the main point of the currently-labelled ""master DRBG"" is *not* that it has talent that distinguishes it -- it's just an instance of the exact same code. Does the different entropy source make it more talented that a  private or public DRBG?

So really, the ""polite"" definition isn't accurate, and the ""bad"" definition shouldn't be used. But even if it's just unfair collatoral damage, why is it important to hold on to a term that some feel, even if you disagree or think they are wrong, exclusionary?  What is the harm in this minor change to make a word actually more accurate? Why is it more important to be ""right"" than to be ""good""?
",True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-09T23:27:16Z,True,openssl_____openssl_____12089_____437776914,"It this context it means it has authority over others (which it what it means here).
The point is the word is in the public API, so aliasing it really solves nothing.
",True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-09T23:43:09Z,True,openssl_____openssl_____12089_____437781660,"Does that mean that getrandom has authority over the main DRBG?  Or is getrandom just an input? And likewise, then, child DRBG's have another one, the parent, that provides input. What authority does the main DRBG have?

The word is in the public API, yes.  ""Most programs will just require recompiling"" is the public compatibility statement, and this PR will not add to that burden.",True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-10T09:15:20Z,True,openssl_____openssl_____12089_____641867788,"Rich, could you please split the PR in two? One fixing the non-public API parts and avoiding changes for the 'master' word. That one should be uncontroversial. And keep the public API changes here for OMC to decide.",True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-10T09:17:15Z,True,openssl_____openssl_____12089_____641868855,The reason I am asking to avoid all the changes to the master word is that replacing it with parent is in my opinion wrong in most cases in this PR. It should be replaced with primary or root or main.,True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-10T13:22:40Z,True,openssl_____openssl_____12089_____642005244,"I thought about the term ""blanks"" for ""whitespace"", but I'm not sure it quite matches.",True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-10T13:44:18Z,True,openssl_____openssl_____12089_____642018832,"No, I will not split the PR.  As I said before, I am happy to use whatever word other than parent once you folks decide.",True,True,99,35361.316666666666
openzfs_____zfs_____10435,2020-06-10T17:55:21Z,True,openzfs_____zfs_____10435_____432612144,"
<!--- Please fill out the following template, which will help other contributors review your Pull Request. -->

<!--- Provide a general summary of your changes in the Title above -->

<!---
Documentation on ZFS Buildbot options can be found at
https://openzfs.github.io/openzfs-docs/Developer%20Resources/Buildbot%20Options.html
-->

### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
<!--- If it fixes an open issue, please link to the issue here. -->
The horrible effects of human slavery continue to impact society.  The
casual use of the term ""slave"" in computer software is an unnecessary
reference to a painful human experience.

### Description
<!--- Describe your changes in detail -->
This commit removes all possible references to the term ""slave"".

Implementation notes:

The zpool.d/slaves script is renamed to dm-deps, which uses the same
terminology as `dmsetup deps`.

References to the `/sys/class/block/$dev/slaves` directory remain.  This
directory name is determined by the Linux kernel.  Although
`dmsetup deps` provides the same information, it unfortunately requires
elevated privileges, whereas the `/sys/...` directory is world-readable.

### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
<!--- If your change is a performance enhancement, please provide benchmarks here. -->
<!--- Please think about using the draft PR feature if appropriate -->

Manual testing of `dm-deps` script and manpage.
Ran the test suite.

### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (non-breaking change which fixes an issue)
- [ ] New feature (non-breaking change which adds functionality)
- [ ] Performance enhancement (non-breaking change which improves efficiency)
- [x] Code cleanup (non-breaking change which makes code smaller or more readable)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)
- [ ] Documentation (a change to man pages or other documentation)

### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My code follows the ZFS on Linux [code style requirements](https://github.com/zfsonlinux/zfs/blob/master/.github/CONTRIBUTING.md#coding-conventions).
- [x] I have updated the documentation accordingly.
- [x] I have read the [**contributing** document](https://github.com/zfsonlinux/zfs/blob/master/.github/CONTRIBUTING.md).
- [ ] I have added [tests](https://github.com/zfsonlinux/zfs/tree/master/tests) to cover my changes.
- [x] I have run the ZFS Test Suite with this change applied.
- [x] All commit messages are properly formatted and contain [`Signed-off-by`](https://github.com/zfsonlinux/zfs/blob/master/.github/CONTRIBUTING.md#signed-off-by).
",True,True,2,668.75
taichi-dev/taichi/1216,2020-06-10T21:18:59Z,False,5ee15065bd354308a8a33f2c,"# [Codecov](https://codecov.io/gh/taichi-dev/taichi/pull/1216?src=pr&el=h1) Report
> Merging [#1216](https://codecov.io/gh/taichi-dev/taichi/pull/1216?src=pr&el=desc) into [master](https://codecov.io/gh/taichi-dev/taichi/commit/e85b6301a87cf73c9ee94b2e89d2d9d0ad92ee71&el=desc) will **increase** coverage by `1.07%`.
> The diff coverage is `0.00%`.

[![Impacted file tree graph](https://codecov.io/gh/taichi-dev/taichi/pull/1216/graphs/tree.svg?width=650&height=150&src=pr&token=4gnUyZebGP)](https://codecov.io/gh/taichi-dev/taichi/pull/1216?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##           master    #1216      +/-   ##
==========================================
+ Coverage   65.98%   67.06%   +1.07%     
==========================================
  Files          35       35              
  Lines        4669     4834     +165     
  Branches      885      885              
==========================================
+ Hits         3081     3242     +161     
- Misses       1413     1417       +4     
  Partials      175      175              
```


| [Impacted Files](https://codecov.io/gh/taichi-dev/taichi/pull/1216?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [python/taichi/main.py](https://codecov.io/gh/taichi-dev/taichi/pull/1216/diff?src=pr&el=tree#diff-cHl0aG9uL3RhaWNoaS9tYWluLnB5) | `43.26% <0.00%> (+0.79%)` | :arrow_up: |
| [python/taichi/lang/kernel.py](https://codecov.io/gh/taichi-dev/taichi/pull/1216/diff?src=pr&el=tree#diff-cHl0aG9uL3RhaWNoaS9sYW5nL2tlcm5lbC5weQ==) | `78.49% <0.00%> (+0.07%)` | :arrow_up: |
| [python/taichi/lang/transformer.py](https://codecov.io/gh/taichi-dev/taichi/pull/1216/diff?src=pr&el=tree#diff-cHl0aG9uL3RhaWNoaS9sYW5nL3RyYW5zZm9ybWVyLnB5) | `93.63% <0.00%> (+0.09%)` | :arrow_up: |
| [python/taichi/lang/impl.py](https://codecov.io/gh/taichi-dev/taichi/pull/1216/diff?src=pr&el=tree#diff-cHl0aG9uL3RhaWNoaS9sYW5nL2ltcGwucHk=) | `90.34% <0.00%> (+0.30%)` | :arrow_up: |
| [python/taichi/lang/\_\_init\_\_.py](https://codecov.io/gh/taichi-dev/taichi/pull/1216/diff?src=pr&el=tree#diff-cHl0aG9uL3RhaWNoaS9sYW5nL19faW5pdF9fLnB5) | `72.15% <0.00%> (+0.33%)` | :arrow_up: |
| [python/taichi/lang/meta.py](https://codecov.io/gh/taichi-dev/taichi/pull/1216/diff?src=pr&el=tree#diff-cHl0aG9uL3RhaWNoaS9sYW5nL21ldGEucHk=) | `62.50% <0.00%> (+0.59%)` | :arrow_up: |
| [python/taichi/lang/expr.py](https://codecov.io/gh/taichi-dev/taichi/pull/1216/diff?src=pr&el=tree#diff-cHl0aG9uL3RhaWNoaS9sYW5nL2V4cHIucHk=) | `88.06% <0.00%> (+0.64%)` | :arrow_up: |
| [python/taichi/lang/linalg.py](https://codecov.io/gh/taichi-dev/taichi/pull/1216/diff?src=pr&el=tree#diff-cHl0aG9uL3RhaWNoaS9sYW5nL2xpbmFsZy5weQ==) | `90.00% <0.00%> (+0.66%)` | :arrow_up: |
| [python/taichi/lang/ast\_checker.py](https://codecov.io/gh/taichi-dev/taichi/pull/1216/diff?src=pr&el=tree#diff-cHl0aG9uL3RhaWNoaS9sYW5nL2FzdF9jaGVja2VyLnB5) | `88.57% <0.00%> (+0.69%)` | :arrow_up: |
| [python/taichi/misc/gui.py](https://codecov.io/gh/taichi-dev/taichi/pull/1216/diff?src=pr&el=tree#diff-cHl0aG9uL3RhaWNoaS9taXNjL2d1aS5weQ==) | `24.42% <0.00%> (+0.70%)` | :arrow_up: |
| ... and [5 more](https://codecov.io/gh/taichi-dev/taichi/pull/1216/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/taichi-dev/taichi/pull/1216?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/taichi-dev/taichi/pull/1216?src=pr&el=footer). Last update [e85b630...da38ce7](https://codecov.io/gh/taichi-dev/taichi/pull/1216?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",True,False,3,205.38333333333333
taichi-dev/taichi/1216,2020-06-10T21:41:26Z,False,5ee1557cbd354310527c89cd,Why is the check `codecov/patch` unsuccessful?,True,False,3,205.38333333333333
openssl_____openssl_____12089,2020-06-10T22:19:50Z,True,openssl_____openssl_____12089_____642297519,This is quite absurd. Blacklist is standard engineering terminology. Please read up on the etymology of the word before inserting your own misguided ideas into things. https://www.etymonline.com/word/blacklist,True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-10T22:26:29Z,True,openssl_____openssl_____12089_____642299887,"More so this is API breaking for no purpose other than suiting some people's social ideas. This shouldn't be relevant in engineering discussion. Master/slave are also hardcoded terms in many engineering specifications, especially in device drivers. ",True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-10T22:30:18Z,True,openssl_____openssl_____12089_____642301206,"> The most fixes like ""white space => whitespace"" should be applied anyway as they are grammar improvements...

Yes I agree. Those are typos and ""whitespace"" is a single word. The master/slave wording is unfortunate but is standard terminology and there is no reason to change it. The removal of ""blacklist"" is pure nonsense based on misunderstanding.",True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-10T22:31:09Z,True,openssl_____openssl_____12089_____642301530,"> This is quite absurd. Blacklist is standard engineering terminology. Please read up on the etymology of the word before inserting your own misguided ideas into things. https://www.etymonline.com/word/blacklist

Please do some extra reading.. e.g: https://tools.ietf.org/id/draft-knodel-terminology-01.html
Maybe it will change your mind.
",True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-10T22:33:16Z,True,openssl_____openssl_____12089_____642302267,"> > This is quite absurd. Blacklist is standard engineering terminology. Please read up on the etymology of the word before inserting your own misguided ideas into things. https://www.etymonline.com/word/blacklist
> 
> Please do some extra reading.. e.g: https://tools.ietf.org/id/draft-knodel-terminology-01.html
> Maybe it will change your mind.

One mistaken understanding broadly spread does not suddenly make it correct. ""Black and white"" ascribe values to colors, it has nothing to do with the color of skin. The terminology predates westerners ever encountering people from subsaharan Africa. ",True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-10T22:51:05Z,True,openssl_____openssl_____12089_____642307993,"Even master/slave, while historically unfortunate is pretty standard. See: https://en.wikipedia.org/wiki/I%C2%B2C We could change to ""master/minion"" while maintaining the same idea of one piece of code controlling the other. ""parent/child"" does not work as the parent doesn't control the child, they just create the child.",True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-10T22:53:01Z,True,openssl_____openssl_____12089_____642308574,"> One mistaken understanding broadly spread does not suddenly make it correct. ""Black and white"" ascribe values to colors, it has nothing to do with the color of skin. The terminology predates westerners ever encountering people from subsaharan Africa.

Who is talking about skin color? @richsalz is changing words to do me a favor!

I like to wear black cloths and listen to black music (Metal, Goth, DW). I don't like the fact that my choice of music and attire has a negative connotation like *black list*. As a creature of the night and non-native speaker I'm also often confused that *white list* is a positive list and *black list* is negative. I embrace night and loath sun light, so I associate black with positive and white with negative aspects. The term *block list* more understandable for me. 🤪",True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-10T22:56:23Z,True,openssl_____openssl_____12089_____642309588,"> > One mistaken understanding broadly spread does not suddenly make it correct. ""Black and white"" ascribe values to colors, it has nothing to do with the color of skin. The terminology predates westerners ever encountering people from subsaharan Africa.
> 
> Who is talking about skin color? @richsalz is changing words to do me a favor!
> 
> I like to wear black cloths and listen to black music (Metal, Goth, DW). I don't like the fact that my choice of music and attire has a negative connotation like _black list_. As a creature of the night and non-native speaker I'm also often confused that _white list_ is a positive list and _black list_ is negative. I embrace night and loath sun light, so I associate black with positive and white with negative aspects. The term _block list_ more understandable for me. 🤪

Just to clarify, it should never be ""black list"" or ""white list"". It should always be ""blacklist"" or ""whitelist"". Compound words are quite different than adjective+noun which is not what is being implied here. ""blacklist"" and ""whitelist"" are also verbs. ""blocklist"" is not a word and you can't use ""block list"" as a verb.

""I will blacklist this MAC Address from the lookup table.""",True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-10T23:02:10Z,True,openssl_____openssl_____12089_____438453305,"As mentioned in a separate comment, ""master/minion"" is also completely fine terminology that preserves the intention that ""this thing is controlling the other thing"".",True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-10T23:05:45Z,True,openssl_____openssl_____12089_____642312317,"> I thought about the term ""blanks"" for ""whitespace"", but I'm not sure it quite matches.

""whitespace"" doesn't give value judgement so there is zero reason at all (more than any other change in this PR) to remove it. It comes from paper being white and text being black so the spaces between the characters are ""whitespace"". Removing the word ""whitespace"" from vocabulary would be extremely confusing as it's the term used to lump newline/line-break characters, tab characters, space characters and other such things into one classification. There's even a regex symbol ""\s"" that lumps all these as white-space. ",True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-10T23:11:32Z,True,openssl_____openssl_____12089_____438456320,"I believe ""white-space"" and ""whitespace"" are both valid terminology. ""white space"" is not, so those are good to change, but I think keeping ""white-space"" is fine.",True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-10T23:24:05Z,True,openssl_____openssl_____12089_____642317580,"Thanks for sharing your opinions, @mlindner.  While it's okay that you don't find the terms objectionable, many do, and you should similarly be okay with that as well, and respectful of their feelings no matter how nonsensical you feel it is.

As for the API/ABI changes, please see this comment upthread. https://github.com/openssl/openssl/pull/12089#discussion_r437389944  ",True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-10T23:28:39Z,True,openssl_____openssl_____12089_____642318902,"> Even master/slave, while historically unfortunate is pretty standard.

""Historically unfortunate."" 

> while maintaining the same idea of one piece of code controlling the other.

Please see https://github.com/openssl/openssl/pull/12089#discussion_r437776914 and my reply.  The parent is an *input source* it does not ""control"" the child.
",True,True,99,35361.316666666666
taichi-dev/taichi/1216,2020-06-11T00:44:22Z,False,5ee2e5b5bd354322c57c4a1e,Merging this in although codecov complains about it...,True,False,3,205.38333333333333
openssl_____openssl_____12089,2020-06-11T00:47:09Z,True,openssl_____openssl_____12089_____642340313,"> > Even master/slave, while historically unfortunate is pretty standard.
> 
> ""Historically unfortunate.""

I don't see the issue here.

> > while maintaining the same idea of one piece of code controlling the other.
> 
> Please see [#12089 (comment)](https://github.com/openssl/openssl/pull/12089#discussion_r437776914) and my reply. The parent is an _input source_ it does not ""control"" the child.

Thanks for the detail. Having authority over the other is a master/minion relationship, parent/child I've only ever seen used in tree structures where there's an explicit ordering (parent comes first). If the master is an input source where information is fed to the minions then I think minion makes sense as the master/slave meaning made sense.",True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-11T00:50:09Z,True,openssl_____openssl_____12089_____642341061,"> Thanks for sharing your opinions, @mlindner. While it's okay that you don't find the terms objectionable, many do, and you should similarly be okay with that as well, and respectful of their feelings no matter how nonsensical you feel it is.

I think using accurate language is more important than avoiding offense at the words chosen if they are accurate to the situation they are used in.",True,True,99,35361.316666666666
expressjs_____session_____708,2020-06-11T01:43:55Z,True,expressjs_____session_____708_____438497102,"Hi @gireeshpunathil yes, that sounds good to me, to just mimic the destroy way in the save area.",True,True,29,358951.0333333333
facebook_____react_____19102,2020-06-11T01:59:59Z,True,facebook_____react_____19102_____642359660,"Agree @pingfengafei .
Don't let word game anesthetize us, If everyone pays attention, discrimination will slowly disappear, but if we pretend that it has disappeared now, it may exist forever, The more one tries to hide, the more one is exposed.",True,True,11,5459.85
openssl_____openssl_____12089,2020-06-11T02:15:39Z,True,openssl_____openssl_____12089_____438505068,"_Master_ is in the public APIs already.  We'd have to change it via the deprecation policy.

I'm open to others names: _primal_, _initial_, _basal_, _chief_, _primary_, _dominus_, _foremost_, _principle_, _prime_, _doyen_, _best_, _first_, _suzerain_, _seed_, ...

The entire RAND framework needs some polishing @mspncp and I have some convergent ideas as to the direction we think it should go.  Nonetheless, `RAND_bytes()` and `RAND_priv_bytes()` must remain and be the primary calls -- I suspect the rest is rarely used.
",True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-11T03:22:10Z,True,openssl_____openssl_____12089_____642382105,https://www.cnet.com/news/master-and-slave-tech-terms-face-scrutiny-amid-anti-racism-efforts/,True,True,99,35361.316666666666
openzfs_____zfs_____10435,2020-06-11T05:04:06Z,True,openzfs_____zfs_____10435_____642408745,"There is also:
`  CC [M]  /var/lib/buildbot/slaves/zfs/Amazon_2_x86_64__BUILD_/build/zfs/module/icp/algs/aes/aes_impl.o
`

But not very visible.",True,True,2,668.75
openssl_____openssl_____12089,2020-06-11T05:35:57Z,True,openssl_____openssl_____12089_____642419042,"> https://www.cnet.com/news/master-and-slave-tech-terms-face-scrutiny-amid-anti-racism-efforts/

Just to clarify, I do think that the terms master/slave aren't the best and it's an accident of history/historically unfortunate that they've turned into common technical terms. However some of the terms are engrained into standards of technology so there is no getting rid of them. They're stuck for the foreseeable future, not matter what changes. If master/slave doesn't represent the DRBG setup correctly then it's fine to change them to be more accurate as well. That's the least egregious change in this entire PR and actually makes some sense. The rest, not so much (besides fixing obvious grammar issues).",True,True,99,35361.316666666666
expressjs_____session_____708,2020-06-11T06:12:46Z,True,expressjs_____session_____708_____438563372,"@dougwilson - done, pls have a look. Here is a sample output from a simple program with debug on, for your reference:
```
  express-session fetching qs3pPenGDQy0hOXWCw_G8lD_ZLJw5AA1 +0ms
  express-session no session found +5ms
  express-session session generate +1ms
  express-session saving 7G28RiMV20yaNOzU3UeC5_qJMKek7X6f +4ms
  express-session set-cookie connect.sid=s%XXX; Path=/; Expires=YYY; HttpOnly +4ms
  express-session session saved +3ms
```",True,True,29,358951.0333333333
openssl_____openssl_____12089,2020-06-11T06:19:26Z,True,openssl_____openssl_____12089_____642434351,"The dispute about compound words is quite futile, really.  Words like ""whitelist"" and ""blacklist"" have been composed of two, where the colours have been attribute the idea of ""good"" and ""bad"".  The words could just as well have been ""goodlist"" and ""badlist"".",True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-11T08:11:14Z,True,openssl_____openssl_____12089_____642487014,"> The dispute about compound words is quite futile, really. Words like ""whitelist"" and ""blacklist"" have been composed of two, where the colours have been attribute the idea of ""good"" and ""bad"". The words could just as well have been ""goodlist"" and ""badlist"".

Yes, but they aren't. Colors have been associated with value judgements since antiquity. ""The powers of light and darkness."" etc and is present in many types of fiction. Extrapolating them to skin color is the work of nonsense and has never even occurred to me until this ridiculous pull request was posted and talked about. (Also ""black magic"" also has nothing to do with skin color, that's from fiction and ""black mages"" were even in Final Fantasy 1 games and earlier sources of fiction. It's referring to arcane arts as opposed to holy magic. It's saying ""this is mysterious"". Again, stretching this out to some kind of race issue is another work of nonsense.)",True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-11T08:39:24Z,True,openssl_____openssl_____12089_____642501838,"@mlindner May I ask who you are and why you are spending so much time and effort to debate and dispute this PR?

Your GH profile does not contain a real name, affiliation, employer, or any other personal information. You are not an OpenSSL contributor. It doesn't even look like you developing directly with OpenSSL. It does not look like you are affected by the changeset.",True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-11T08:47:50Z,True,openssl_____openssl_____12089_____438636258,"```suggestion
    /* Look for first non emptyspace or quote */
```

whitepsace could be offensive to some people.",True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-11T09:20:47Z,True,openssl_____openssl_____12089_____642525709,"> Yes, but they aren't. Colors have been associated with value judgements since antiquity. ""The powers of light and darkness."" etc and is present in many types of fiction. Extrapolating them to skin color is the work of nonsense and has never even occurred to me until this ridiculous pull request was posted and talked about. (Also ""black magic"" also has nothing to do with skin color, that's from fiction and ""black mages"" were even in Final Fantasy 1 games and earlier sources of fiction. It's referring to arcane arts as opposed to holy magic. It's saying ""this is mysterious"". Again, stretching this out to some kind of race issue is another work of nonsense.)

You seem to misunderstand what the current social justice movement is about - it actually **is** about forcibly removing any value association of dark, light or any other colors from minds of all people, all this because of some people having different skin tones and regardless of where the value association came from.

But yes, I have to agree we are way off-topic here.",True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-11T09:39:28Z,True,openssl_____openssl_____12089_____642535070,"> it actually is about forcibly removing any value association of dark, light or any other colors from minds of all people

This is nonsense and you'll never be able to achieve that. Colors have always had and will ever have meanings. If you want to destroy all the cultures and languages then go ahead and save the world.",True,True,99,35361.316666666666
freeipa_____freeipa_____4809,2020-06-11T12:49:45Z,True,freeipa_____freeipa_____4809_____433053835,See https://tools.ietf.org/id/draft-knodel-terminology-01.html,True,True,6,17007.533333333333
freeipa_____freeipa_____4809,2020-06-11T13:08:27Z,True,freeipa_____freeipa_____4809_____642636641,"In `migrate_ds` `oc_blacklist_option` and `attr_blacklist_option` are internal elements, they can be freely changed to `oc_blocklist_option` and `attr_blocklist_option`.",True,True,6,17007.533333333333
openssl_____openssl_____12089,2020-06-11T13:22:34Z,True,openssl_____openssl_____12089_____438776480,"As for the deprecation policy, I believe these lines are enough:
```
diff --git a/include/openssl/rand_drbg.h b/include/openssl/rand_drbg.h
index 5ee93a3eab..382d472414 100644
--- a/include/openssl/rand_drbg.h
+++ b/include/openssl/rand_drbg.h
@@ -112,6 +112,10 @@ int RAND_DRBG_set_reseed_defaults(
                                   time_t child_reseed_time_interval
                                   );
 
+# ifndef OPENSSL_NO_DEPRECATED_3_0
+#  define OPENSSL_CTX_get0_master_drbg(ctx) OPENSSL_CTX_get0_parent_drbg(ctx)
+#  define RAND_DRBG_get0_master() RAND_DRBG_get0_parent()
+# endif
```

If you want a HISTORY entry in ```doc/man3/RAND_DRBG_get0_parent.pod``` (point: new name) I can do that.

*HOWEVER* first the project has to decide it wants this.  As I've emailed, https://mta.openssl.org/pipermail/openssl-project/2020-June/002040.html, there's a thread started.",True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-11T13:32:52Z,True,openssl_____openssl_____12089_____438783471,"On a technical note, the OPENSSL_CTX_get0_master_drbg() compat define is unnecessary because that function does not exist in 1.1.1.",True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-11T13:33:30Z,True,openssl_____openssl_____12089_____642652425,"> @mlindner May I ask who you are and why you are spending so much time and effort to debate and dispute this PR?
> 
> Your GH profile does not contain a real name, affiliation, employer, or any other personal information. You are not an OpenSSL contributor. It doesn't even look like you developing directly with OpenSSL. It does not look like you are affected by the changeset.

And in the same vein, @blacklistisnotracist joined github 2 days ago.",True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-11T13:41:42Z,True,openssl_____openssl_____12089_____642656669,"> @mlindner May I ask who you are and why you are spending so much time and effort to debate and dispute this PR?
> 
> Your GH profile does not contain a real name, affiliation, employer, or any other personal information. You are not an OpenSSL contributor. It doesn't even look like you developing directly with OpenSSL. It does not look like you are affected by the changeset.

Without commenting on the viewpoints expressed, I can attest to the fact that @mlindner has been a member of the OpenSSL community for some while, e.g.
#5454, #5768, #5915, etc
",True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-11T14:28:50Z,True,openssl_____openssl_____12089_____642695474,"@tmshort 

> And in the same vein, @blacklistisnotracist joined github 2 days ago.

Are you saying a newbie can't have an opinion? Do you know the definition of discrimination? 
",True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-11T14:38:05Z,True,openssl_____openssl_____12089_____438835116,thanks.,True,True,99,35361.316666666666
freeipa_____freeipa_____4809,2020-06-11T14:41:29Z,True,freeipa_____freeipa_____4809_____642703112,+1 on Alexander's suggestion.,True,True,6,17007.533333333333
openssl_____openssl_____12089,2020-06-11T14:43:59Z,True,openssl_____openssl_____12089_____642704721,"@tiran 

> @mlindner May I ask who you are 

This is a very aggressive attitude. Why their identity matters to have an opinion?

> and why you are spending so much time and effort to debate and dispute this PR?

Interesting, both sides are thinking the other side is spending so much time on unnecessary stuffs.",True,True,99,35361.316666666666
freeipa_____freeipa_____4809,2020-06-11T14:47:47Z,True,freeipa_____freeipa_____4809_____642708176,"> In `migrate_ds` `oc_blacklist_option` and `attr_blacklist_option` are internal elements, they can be freely changed to `oc_blocklist_option` and `attr_blocklist_option`.

Thanks Alexander and Rob. I didn't realize that the attributes are only just internally. Fixed!",True,True,6,17007.533333333333
openssl_____openssl_____12089,2020-06-11T15:01:58Z,True,openssl_____openssl_____12089_____642718133,"> You seem to misunderstand what the current social justice movement is about - it actually **is** about forcibly removing any value association of dark, light or any other colors from minds of all people, all this because of some people having different skin tones and regardless of where the value association came from.

I understand *exactly* what it is about, thanks for confirming the Orwellian position. This is exactly where we part ways: https://newcriterion.com/issues/2019/10/leninthink

This PR is not inclusive, there is no community of potential contributors excluded by the code as-is, the terms were chosen in good faith, but there definitely is a community excluded by the change, and excluding them is the whole point. This PR should not proceed.",True,True,99,35361.316666666666
systemd_____systemd_____16152,2020-06-11T15:47:14Z,True,systemd_____systemd_____16152_____433175402,"We shouldn't be using google dns servers, as dns requests can give out a lot of sensitive information. By changing the default fallback to quad9 we increase user privacy.",True,True,3,142.7
systemd_____systemd_____16152,2020-06-11T16:03:15Z,True,systemd_____systemd_____16152_____642774149,"As was stated multiple times in #12499 and #16148 we don't plan to change the defaults in upstream systemd. The defaults should be (and are) overridden in each downstream distribution separately (see [the documentation on how it's done](https://systemd.io/DISTRO_PORTING/)), so if you're unhappy with them, contact your downstream developers.

Thanks for understanding.",True,True,3,142.7
openssl_____openssl_____12089,2020-06-11T17:55:24Z,True,openssl_____openssl_____12089_____642839026,What a mess.,True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-11T17:58:15Z,True,openssl_____openssl_____12089_____642840998,"Edit: grouped several comments together.

> @mlindner May I ask who you are and why you are spending so much time and effort to debate and dispute this PR?
> 
> Your GH profile does not contain a real name, affiliation, employer, or any other personal information. You are not an OpenSSL contributor. It doesn't even look like you developing directly with OpenSSL. It does not look like you are affected by the changeset.

I keep my accounts unlinked from each other intentionally. I work at a company that uses OpenSSL extensively (including lots of horrible hacks that were made in the past so OpenSSL 0.9.x versions could be hardware accelerated) so I pay lots of attention to the mailing lists which is how I first heard of this. We're still stuck on 1.0.2 and waiting for 3.0.0 as we need FIPS and hardware acceleration as well so 1.1.1 doesn't work for us (also it will be a huge undertaking to make the code compatible with 1.1.1 or 3.0.0 because of our horrible hacks). Most of my work is on internal gitlab so work doesn't show up on here, but this is off topic.

Also the only reason why the above question is important is if you're trying to doxx me or something else very much not appropriate.

***

@blacklistisnotracist Your previous review comments are not helpful and actually harm my point. Your suggested changes are also being made in bad faith. This is already a contentious issue, mocking people makes things worse.

***

This PR is a mix of changes that are both quite agreeable and completely disagreeable.

Fixing whitespace grammar is good.

Fixing master/slave is begrudgingly understandable especially if it doesn't represent things properly. Though lots of care needs to be taken to pick the most accurate words.

Removing ""blacklist"" is quite disagreeable. Removing ""black magic"" is quite disagreeable.",True,True,99,35361.316666666666
systemd_____systemd_____16152,2020-06-11T18:09:56Z,True,systemd_____systemd_____16152_____642847410,"Did anything change since #8899 ? I don't think so.

I am not sure why the people behind quad9 (ibm? i hear the main systemd devs are already in their pocket! omg! omg! omg!) should be any better than those behind googe dns or those behind cloudflare dns. In #8899 we ended up adding cloudflare because it was performant and didn't filter. I really don't care what the fallback servers are as long as they work and don't artificially filter...

Adding new servers just because of conspiracy theories is something I really think is a bad idea.

Anyway, if the people peddling this fud are really that concerned that their downstream distro is making the wrong choices by not specifiying servers appropriate for their distro on the meson build line, then I really wonder why they trust their distro on anything at all, and maybe they should switch distros...",True,True,3,142.7
openssl_____openssl_____12089,2020-06-11T18:25:51Z,True,openssl_____openssl_____12089_____642854863,"> What a mess.

It'll get a whole lot worse as soon as this PR inevitably gets posted to hacker news or a programming subreddit. Hopefully this gets voted on quickly by the OMC.",True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-11T19:02:07Z,True,openssl_____openssl_____12089_____642872137,"In doing this, I looked at every use of the word black and white. As a result, all the ""whitespace"" corrections to avoid future false positives.  Same for ""black magic.""  If this PR is accepted, then being consistent in the future will be easier.",True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-11T19:18:59Z,True,openssl_____openssl_____12089_____642880001,"> In doing this, I looked at every use of the word black and white. As a result, all the ""whitespace"" corrections to avoid future false positives. Same for ""black magic."" If this PR is accepted, then being consistent in the future will be easier.

What do you mean ""being consistent"", do you mean you'd reject any future pull request list that uses the words ""black"" or ""white""? I think coming up with official language written down in the submitter guidelines should come before the purge of existing terms.",True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-11T19:23:56Z,True,openssl_____openssl_____12089_____642882200,"> do you mean you'd reject any future pull request list that uses the words ""black"" or ""white""

No, I don't mean that, I am sorry if I gave you that impression.

And also, I'm not on the project, I don't approve anything.",True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-11T20:22:28Z,True,openssl_____openssl_____12089_____642907794,"> > do you mean you'd reject any future pull request list that uses the words ""black"" or ""white""
> 
> No, I don't mean that, I am sorry if I gave you that impression.
> 
> And also, I'm not on the project, I don't approve anything.

Sorry, maybe I'm misunderstanding your thoughts. What did you mean by ""avoid future false positives"" then?",True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-11T21:07:11Z,True,openssl_____openssl_____12089_____642928430,"> What did you mean by ""avoid future false positives"" then?

False positives.  For example, on master and this PR:
```
; g grep --extended -w 'white|black' | wc
     30     287    2518
; g co better-words
Switched to branch 'better-words'
; g grep --extended -w 'white|black' | wc
      4      42     352
; 
```",True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-11T22:06:12Z,True,openssl_____openssl_____12089_____642955057,"> > What did you mean by ""avoid future false positives"" then?
> 
> False positives. For example, on master and this PR:
> 
> ```
> ; g grep --extended -w 'white|black' | wc
>      30     287    2518
> ; g co better-words
> Switched to branch 'better-words'
> ; g grep --extended -w 'white|black' | wc
>       4      42     352
> ; 
> ```

I fail to see what's ""false positives"" about this. ""white"" and ""black"" are not bad words to be eliminated.",True,True,99,35361.316666666666
Spotifyd/spotifyd/502,2020-06-11T22:12:17Z,False,5ee349f2bd35434fcc39bf74,@dependabot rebase,True,False,3,321964.5
openssl_____openssl_____12089,2020-06-11T23:46:35Z,True,openssl_____openssl_____12089_____642985083,"Please avoid the temptation to engage in a series of counter-arguments, that's not going to be productive.  If you've already stated your views succinctly and respectfully, nothing further need be said.  [ Comments that are outright trolling, and responses to them, have been and will be deleted. ]",True,True,99,35361.316666666666
PaperMC_____Paper_____3544,2020-06-12T01:44:40Z,True,PaperMC_____Paper_____3544_____433418148,See patch notes,True,True,54,3949.9
PaperMC_____Paper_____3544,2020-06-12T01:46:28Z,True,PaperMC_____Paper_____3544_____643019070,"inb4 ""this breaks tnt dupers!!!!! literally unplayable am going back to spigot!!!!""",True,True,54,3949.9
PaperMC_____Paper_____3544,2020-06-12T01:54:55Z,True,PaperMC_____Paper_____3544_____643021162,@JRoy are you serious?,True,True,54,3949.9
PaperMC_____Paper_____3544,2020-06-12T01:56:01Z,True,PaperMC_____Paper_____3544_____643021497,"> @JRoy are you serious?

We get people complaining about the patch that fixes 0tick pretty much weekly. So yes, someone will complain about paper patching this exploit too.",True,True,54,3949.9
PaperMC_____Paper_____3544,2020-06-12T01:58:38Z,True,PaperMC_____Paper_____3544_____643022124,Could possibly quell the complaints with a config option...,True,True,54,3949.9
PaperMC_____Paper_____3544,2020-06-12T02:00:58Z,True,PaperMC_____Paper_____3544_____643022703,"> Could possibly quell the complaints with a config option...

I agree there should be a toggle. However there's a toggle for 0tick and people still complain about it. 

Overall pls merge I hate piston exploits. Ty leaf. ",True,True,54,3949.9
PaperMC_____Paper_____3544,2020-06-12T08:43:18Z,True,PaperMC_____Paper_____3544_____643152625,Please make a toggle for this :D,True,True,54,3949.9
PaperMC_____Paper_____3544,2020-06-12T09:56:07Z,True,PaperMC_____Paper_____3544_____643186282,agree with @DoubleGe ,True,True,54,3949.9
PaperMC_____Paper_____3544,2020-06-12T11:00:13Z,True,PaperMC_____Paper_____3544_____643211221,Needs a toggle,True,True,54,3949.9
PaperMC_____Paper_____3544,2020-06-12T11:39:32Z,True,PaperMC_____Paper_____3544_____643225507,"> Needs a toggle

I vote against a toggle. Dupe exploits should be fixed, it's not a feature. ",True,True,54,3949.9
PaperMC_____Paper_____3544,2020-06-12T11:41:03Z,True,PaperMC_____Paper_____3544_____643226000,"lol when you don't realise JRoy was being sarcastic

+1 for config option, some technical servers that want to be as close as possble to vanilla might suffer from exploit fixes. If Mojang decite to fix it, then it's fine for all platforms.",True,True,54,3949.9
PaperMC_____Paper_____3544,2020-06-12T11:54:19Z,True,PaperMC_____Paper_____3544_____643230850,"> > Needs a toggle
> 
> I vote against a toggle. Dupe exploits should be fixed, it's not a feature.

With this update server owners lose the possibility to get as close as possible to Vanilla, if Mojang would fix it then everyone knows it. Now people know it's as a vanilla bug like Zero-Tick Farms. I thought it worked on paper but there was a config option, so I turned it on so it works and I know it will be disabled in 1.16 but that's fine (it's the vanilla game). And if the toggle is defaulted to on. So it won't work people that want it to work can just simply disable the fix, and then it just should work. (So everyone can choose what they want)  ",True,True,54,3949.9
openssl_____openssl_____12089,2020-06-12T12:05:42Z,True,openssl_____openssl_____12089_____643235211,"> I fail to see what's ""false positives"" about this. ""white"" and ""black"" are not bad words to be eliminated.

If someone wishes to do something similar to this PR, say in a few years from now, rather than scan all instances, they can focus on ones that *might* be problematic.  ",True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-12T12:15:43Z,True,openssl_____openssl_____12089_____643239445,"Error messages painted in red color is very problematic for Native Americans, going by your logic. I'm pretty sure that kind of PR will never get merged. Sigh. I don't mind changing blacklist to blocklist as long as its purpose is to make meanings clearer. However, no mentioning of racist connotations is required.",True,True,99,35361.316666666666
PaperMC_____Paper_____3544,2020-06-12T12:26:40Z,True,PaperMC_____Paper_____3544_____643243905,I'll stick to last build(349) until this being reverted or adding a config option.,True,True,54,3949.9
PaperMC_____Paper_____3544,2020-06-12T12:33:28Z,True,PaperMC_____Paper_____3544_____643246545,"> I'll stick to last build(349) until this being reverted or adding a config option.

For me, it's not an option I have a weird bug with paper spawns too much hostile/sea mobs
(Issue: #3523 )",True,True,54,3949.9
PaperMC_____Paper_____3544,2020-06-12T12:50:50Z,True,PaperMC_____Paper_____3544_____643253442,"MC-188840 was closed in as duplicate of MC-100579 (private), so yes this looks like mojang thinks it's a bug (although if you needed me to tell you that they consider tnt duplication is a bug you have some serious delusion).

I also provided them the fix, so this will get fixed in vanilla - might as well get used to it.",True,True,54,3949.9
PaperMC_____Paper_____3544,2020-06-12T13:06:48Z,True,PaperMC_____Paper_____3544_____643260342,"> MC-188840 was closed in as duplicate of MC-100579 (private), so yes this looks like mojang thinks it's a bug (although if you needed me to tell you that they consider tnt duplication is a bug you have some serious delusion).
> 
> I also provided them the fix, so this will get fixed in vanilla - might as well get used to it.

I get it that this is a bug and it **should** be fixed, but they haven't even fixed it in vanilla.

It's like Mojang accidentally fixed pigman afk xp farm in a 1.16 pre-release and in the next snapshot they brought the bug back even though they said they have aware of the bug but they just have no plan of fixing it in this version.",True,True,54,3949.9
PaperMC_____Paper_____3544,2020-06-12T13:20:33Z,True,PaperMC_____Paper_____3544_____643266983,"> lol when you don't realise JRoy was being sarcastic
> 
> +1 for config option, some technical servers that want to be as close as possble to vanilla might suffer from exploit fixes. If Mojang decite to fix it, then it's fine for all platforms.

With the amount of things that Paper ""fixes"", using Paper in the first place is accepting you're not that close to vanilla anymore. ",True,True,54,3949.9
PaperMC_____Paper_____3544,2020-06-12T13:29:40Z,True,PaperMC_____Paper_____3544_____643271217,"If you have such a problem with changes like this, why don't you go remove this patch and build Paper yourself? This is a git repository, not a feature request forum.",True,True,54,3949.9
PaperMC_____Paper_____3544,2020-06-12T13:37:39Z,True,PaperMC_____Paper_____3544_____643274973,"> > MC-188840 was closed in as duplicate of MC-100579 (private), so yes this looks like mojang thinks it's a bug (although if you needed me to tell you that they consider tnt duplication is a bug you have some serious delusion).
> > I also provided them the fix, so this will get fixed in vanilla - might as well get used to it.
> 
> I get it that this is a bug and it **should** be fixed, but they haven't even fixed it in vanilla.
> 
> It's like Mojang accidentally fixed pigman afk xp farm in a 1.16 pre-release and in the next snapshot they brought the bug back even though they said they have aware of the bug but they just have no plan of fixing it in this version.

Guess what we have a fix coming for soon too.
Note, it wasn't an ACCIDENT. They DO NOT want Zombie Gold farms. They said it directly.",True,True,54,3949.9
PaperMC_____Paper_____3544,2020-06-12T13:41:49Z,True,PaperMC_____Paper_____3544_____643276868,"> > > MC-188840 was closed in as duplicate of MC-100579 (private), so yes this looks like mojang thinks it's a bug (although if you needed me to tell you that they consider tnt duplication is a bug you have some serious delusion).
> > > I also provided them the fix, so this will get fixed in vanilla - might as well get used to it.
> > 
> > 
> > I get it that this is a bug and it **should** be fixed, but they haven't even fixed it in vanilla.
> > It's like Mojang accidentally fixed pigman afk xp farm in a 1.16 pre-release and in the next snapshot they brought the bug back even though they said they have aware of the bug but they just have no plan of fixing it in this version.
> 
> Guess what we have a fix coming for soon too.
> Note, it wasn't an ACCIDENT. They DO NOT want Zombie Gold farms. They said it directly.

https://twitter.com/ThatZepheron/status/1269259361706283008",True,True,54,3949.9
PaperMC_____Paper_____3544,2020-06-12T13:44:14Z,True,PaperMC_____Paper_____3544_____643277928,"> 
> 
> > > > MC-188840 was closed in as duplicate of MC-100579 (private), so yes this looks like mojang thinks it's a bug (although if you needed me to tell you that they consider tnt duplication is a bug you have some serious delusion).
> > > > I also provided them the fix, so this will get fixed in vanilla - might as well get used to it.
> > > 
> > > 
> > > I get it that this is a bug and it **should** be fixed, but they haven't even fixed it in vanilla.
> > > It's like Mojang accidentally fixed pigman afk xp farm in a 1.16 pre-release and in the next snapshot they brought the bug back even though they said they have aware of the bug but they just have no plan of fixing it in this version.
> > 
> > 
> > Guess what we have a fix coming for soon too.
> > Note, it wasn't an ACCIDENT. They DO NOT want Zombie Gold farms. They said it directly.
> 
> https://twitter.com/ThatZepheron/status/1269259361706283008

https://www.reddit.com/user/sliced_lime/comments/gzpo5p/some_words_on_things_in_116/",True,True,54,3949.9
PaperMC_____Paper_____3544,2020-06-12T13:52:45Z,True,PaperMC_____Paper_____3544_____643281884,"I mean the fix of the bug was an accident.

I do think those bugs should be fixed. What I want is just some options to make paper act like vanilla in the same version. If it takes too much effort to implement, then nevermind.",True,True,54,3949.9
PaperMC_____Paper_____3544,2020-06-12T14:05:13Z,True,PaperMC_____Paper_____3544_____643288081,"it wasn't actually an accident if you read his comments on reddit, he just kept his twitter message short and avoided debate there.

> To be completely open with you: Zombified Piglin gold farms are based off a mechanic that makes no sense, and should not exist in the game - a glitch where a mob drops player kill drops despite not being killed by a player, which is obviously not right.
> With this in mind, we decided that it would be ok to break these farms, given that it was done early in the update cycle, and especially given that the glitch was very tied into aggro-related bugs that really did need fixing. That obviously never happened.

Ignore the part about ""failure"" to achieve that goal. The message is pretty clear intent to remove it and their thoughts on it.

But the pigmen farm will likely have a config since its a mechanic change and not a dupe bug.

tnt is a duplication bug, which we don't usually add configs for. Ones we've done in past we kind of regret.

Change is hard, but players need to accept these bugs should be fixed. Mojang is much more willing to bow down and avoid the drama than we are. 

At least server owners can say it wasn't their choice and avoid the personal heat.
",True,True,54,3949.9
PaperMC_____Paper_____3544,2020-06-12T14:06:57Z,True,PaperMC_____Paper_____3544_____643288927,ok.,True,True,54,3949.9
PaperMC_____Paper_____3544,2020-06-12T14:22:41Z,True,PaperMC_____Paper_____3544_____643296680,tnt dupers only dupe the entity which allows people to make massive quarries for building projects. no harm involved. Wont update until theres a config option,True,True,54,3949.9
PaperMC_____Paper_____3544,2020-06-12T14:24:57Z,True,PaperMC_____Paper_____3544_____643297858,its like how carpet dupers allow people to make mapart easier,True,True,54,3949.9
PaperMC_____Paper_____3544,2020-06-12T14:25:47Z,True,PaperMC_____Paper_____3544_____643298837,"> it wasn't actually an accident if you read his comments on reddit, he just kept his twitter message short and avoided debate there.
> 
> > To be completely open with you: Zombified Piglin gold farms are based off a mechanic that makes no sense, and should not exist in the game - a glitch where a mob drops player kill drops despite not being killed by a player, which is obviously not right.
> > With this in mind, we decided that it would be ok to break these farms, given that it was done early in the update cycle, and especially given that the glitch was very tied into aggro-related bugs that really did need fixing. That obviously never happened.
> 
> Ignore the part about ""failure"" to achieve that goal. The message is pretty clear intent to remove it and their thoughts on it.
> 
> But the pigmen farm will likely have a config since its a mechanic change and not a dupe bug.
> 
> tnt is a duplication bug, which we don't usually add configs for. Ones we've done in past we kind of regret.
> 
> Change is hard, but players need to accept these bugs should be fixed. Mojang is much more willing to bow down and avoid the drama than we are.
> 
> At least server owners can say it wasn't their choice and avoid the personal heat.

Why can the Zero-Tick farms have a config even it's a bug and the tnt dupe issue not.",True,True,54,3949.9
PaperMC_____Paper_____3544,2020-06-12T14:32:01Z,True,PaperMC_____Paper_____3544_____643302723,"> > it wasn't actually an accident if you read his comments on reddit, he just kept his twitter message short and avoided debate there.
> > > To be completely open with you: Zombified Piglin gold farms are based off a mechanic that makes no sense, and should not exist in the game - a glitch where a mob drops player kill drops despite not being killed by a player, which is obviously not right.
> > > With this in mind, we decided that it would be ok to break these farms, given that it was done early in the update cycle, and especially given that the glitch was very tied into aggro-related bugs that really did need fixing. That obviously never happened.
> > 
> > 
> > Ignore the part about ""failure"" to achieve that goal. The message is pretty clear intent to remove it and their thoughts on it.
> > But the pigmen farm will likely have a config since its a mechanic change and not a dupe bug.
> > tnt is a duplication bug, which we don't usually add configs for. Ones we've done in past we kind of regret.
> > Change is hard, but players need to accept these bugs should be fixed. Mojang is much more willing to bow down and avoid the drama than we are.
> > At least server owners can say it wasn't their choice and avoid the personal heat.
> 
> Why can the Zero-Tick farms have a config even it's a bug and the tnt dupe issue not.

He said:
> Ones we've done in past we kind of regret.",True,True,54,3949.9
PaperMC_____Paper_____3544,2020-06-12T14:34:30Z,True,PaperMC_____Paper_____3544_____643304255,"rail/carpet dupers is on the agenda to fix too...
I've actively tried already. Just haven't found solution yet.",True,True,54,3949.9
PaperMC_____Paper_____3544,2020-06-12T14:38:23Z,True,PaperMC_____Paper_____3544_____643306311,"And yes we've regretted the zero tick config too. But that one wasn't a duplication bug. growing crops is already a concept of self growing supply, but the bug just sped up the rate faster than intended.

This patch is directly a duplication. TNT is supposed to be 1 block = 1 explosion.

You want a massive quarry for your build project? Do it like every other person and dig it out, or collect the resources for the TNT.

IT's how everyone did it before discovering they could dupe tnt.",True,True,54,3949.9
PaperMC_____Paper_____3544,2020-06-12T14:45:02Z,True,PaperMC_____Paper_____3544_____643310082,"I already made this configurable but won't open a merge request due to the controversy. Defaults to fixing TNT duplication. Feel free to use it if you want configuration:
https://github.com/AJMFactsheets/Paper/blob/configurable-tnt-dupers/Spigot-Server-Patches/0542-Fix-piston-physics-inconsistency-MC-188840.patch",True,True,54,3949.9
PaperMC_____Paper_____3544,2020-06-12T16:06:03Z,True,PaperMC_____Paper_____3544_____643353833,"> I already made this configurable but won't open a merge request due to the controversy. Defaults to fixing TNT duplication. Feel free to use it if you want configuration:
> https://github.com/AJMFactsheets/Paper/blob/configurable-tnt-dupers/Spigot-Server-Patches/0542-Fix-piston-physics-inconsistency-MC-188840.patch

I would say make a config so peolpe can choose for them self so they can choose what they want",True,True,54,3949.9
openssl_____openssl_____12089,2020-06-12T16:39:33Z,True,openssl_____openssl_____12089_____643375341,"Please avoid do that. It's an endless job, and not a good one like bugfixing, since you'll always find people that complains for something.
Moreover black and white are (also) colors and blacklist word origin is NOT related to the color of the skin so it's ok to keep it. For master/slave I'm dubious to change it, since this can breaks API and for historical reason (master/slave is also used in electronics for flip-flop, in pre-SATA hard disk and in videorecorders).
This is not the correct way to fix discrimination and it's quite hypocritical.",True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-12T17:03:06Z,True,openssl_____openssl_____12089_____643386044,"> This is not the correct way to fix discrimination and it's quite hypocritical.

This changeset does not fix discrimination. The author does not claim that it fixes anything. It merely replaces archaic, culture specific words with words that are clearer and easier to understand for non-native speakers.
 
This [IETF draft on terminology](https://tools.ietf.org/id/draft-knodel-terminology-01.html) lists some reseach on the matter. Perhaps Muhammad Ali can convince you why the negative co-notation of black is death by a thousands cuts, https://www.youtube.com/watch?v=7eXdt1eGgCA
",True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-12T17:14:27Z,True,openssl_____openssl_____12089_____643390800,"@tiran 

> This changeset does not fix discrimination. The author does not claim that it fixes anything. 

Well, @richsalz 's [tweet](https://twitter.com/RichSalz/status/1270350008005640195) suggests the other way around, though. Nice try.

> I would not have thought that this would be controversial, especially in these days: https://github.com/openssl/openssl/pull/12089  Hoping my fellow white privileged colleagues do the right thing, soon.
",True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-12T18:32:58Z,True,openssl_____openssl_____12089_____643425369,"You misunderstand my tweet, nowhere does it say ""fix""",True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-12T18:42:47Z,True,openssl_____openssl_____12089_____643429023,"I don't understand why you had to mention white privileged colleagues if you didn't mean to fix (or to contribute to fixing) racism against black people. For me, the right thing here is not to reinforce the wrong connotations of these terms.",True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-12T18:58:06Z,True,openssl_____openssl_____12089_____643434933,"Given that you joined github three days ago, and that you joined twitter this month, @blacklistisnotracist (a) I don't owe you explanation about me; and (b) perhaps assume good intentions as a default.  ",True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-12T19:12:49Z,True,openssl_____openssl_____12089_____643440848,"> Given that you joined github three days ago, and that you joined twitter this month,

You're saying newbiews' opinions don't matter? Do you know the definition of discrimination?

> (b) perhaps assume good intentions as a default.

Yes. I do believe your motivation was from good place and you're in good faith. However, with all due respect, I don't think removing ""white"" and ""black"" from everywhere will ever fix racism because these are simply colors and idiomatic words that have nothing to do with skin color nor racism.

I would also like to say ""perhaps assume good intentions as a default."" to you and @tiran because [he wants to think I'm a white supremacist](https://twitter.com/ChristianHeimes/status/1271446798872313858) and is trying so hard to exclude me from the community by filing abuse reports.",True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-12T19:48:36Z,True,openssl_____openssl_____12089_____643455027,"> > This is not the correct way to fix discrimination and it's quite hypocritical.
> 
> This changeset does not fix discrimination. The author does not claim that it fixes anything. It merely replaces archaic, culture specific words with words that are clearer and easier to understand for non-native speakers.
> 
> This [IETF draft on terminology](https://tools.ietf.org/id/draft-knodel-terminology-01.html) lists some reseach on the matter. Perhaps Muhammad Ali can convince you why the negative co-notation of black is death by a thousands cuts, https://www.youtube.com/watch?v=7eXdt1eGgCA

Culture and language are embedded with each other and you can't pull them apart. Even words like ""beef"" and ""cow"" both referring to the same thing via their etymology show that they are cultural. beef comes from old french because the rich in England spoke French while cow is from old english because the farmers were poor and spoke English. This pointed to the societal divide between the aristocracy and the peasants at the time with who consumed meat and who produced it. Use of the English language requires learning bits of the history of the language if you want to understand why certain words mean certain things.

Secondly, the negative connotation of color black being associated with bad things is one of the more universal things in many human cultures. It's much less English-specific than many other parts of the language. I know of several asian languages that have bad connotations to the color black as well.

The IETF draft is harmful in the highest degree to purport to know something when all they're really doing is continuing to spread misinformation (which btw, has already expired based on the dates there).

BTW I'm not defending @blacklistisnotracist. He's clearly just a troll, I was just objecting to your terms here.",True,True,99,35361.316666666666
facebook_____react_____19102,2020-06-13T01:11:44Z,True,facebook_____react_____19102_____643546793,Thanks for the PR! Landed in 655affa302437208e6f03c9ca6d170ea1707ace3,True,True,11,5459.85
openssl_____openssl_____12089,2020-06-13T07:21:24Z,True,openssl_____openssl_____12089_____643583643,"The interesting bit in that draft on terminology is all the informational references, among others to other softwares that have already changed their terminology.  Is all that misinformation?",True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-13T07:28:53Z,True,openssl_____openssl_____12089_____643584517,"> The interesting bit in that draft on terminology is all the informational references, among others to other softwares that have already changed their terminology. Is all that misinformation?

Yes, similar changes to those proposed have been made in various other projects. What's in question is the wisdom and priority of such changes, not their present popularity.",True,True,99,35361.316666666666
PaperMC_____Paper_____3544,2020-06-14T02:44:18Z,True,PaperMC_____Paper_____3544_____643709566,"On the main website, it doesn't state that it changes gameplay mechanics like this it only mentions the performance, and on the paperdocs it only says ""to fix gameplay and mechanics inconsistencies"" which had made me worried but the [faq id 7](https://paper.readthedocs.io/en/latest/about/faq.html#id7) had made me think the changes were more along the lines of #3527 or entity spawning handling kind of things. Is there documentation elsewhere that states what other changes have been made, like 0tick for example which was already mentioned in this thread? 

Regarding the TNT duping issue: [Sliced Lime](https://www.reddit.com/r/Minecraft/comments/fkt9jf/anchor_yourself_to_the_nether_snapshot_20w12a_is/fkv2yyv/) stated that they do plan on getting rid of this like 0tick but thinks that sand needs to being unlimited is one of the things stopping them from making this change.  

In short: I think a config option and/or documentation of these changes would be nice and greatly appreciated. ",True,True,54,3949.9
PaperMC_____Paper_____3544,2020-06-14T03:09:43Z,True,PaperMC_____Paper_____3544_____643711376,"@MissPotato I agree, Paper lacks proper documentation in many places. Not even the configs doc is up-to-date (iirc), you gotta rely on changelog and state of this repo. Part of the job :)

This should be _configurable_ with the fix being enabled by default.

> TNT explosions now have a 100% drop rate.

That was a snapshot for 1.14. Now unless they had thought to have it fixed for 1.14 - let me paraphrase - if 1.14 had an active TNT dupe and despite that fact they decided to make it a 100% drop rate, then this is knowingly/intentional. Regardless of future fixes in Vanilla. Read [MC-129193](https://bugs.mojang.com/browse/MC-129193):

> how much the current community accepts it AND makes content involving it means it qualifies it as a feature. Redstone, particularly slime-block based innovations, are a very large portion of the community

This change is not like an optional ""fixer plugin"". You can't currently switch it off at will. There are many small communities or circles of friends like mine who mess with vanilla in-depth, yet the majority won't be able to recompile Paper and have figured out how to disable the fix.

The perception of ""legal"" as in ""not cheating"" is also vastly different between players. Some (strict) will say everything must be sound methods, even if some loophole exists. Others (relaxed) consider everything legit that is permitted by the game itself. Let me demonstrate this on a singleplayer example:

- Editing inventory via NBT/commands/etc. = cheating

- Duping items via the Drop → Save & Exit → Re-enter = some will accept it as legit

As far as Mojang goes: If they cared, they would do retroactive minor releases with the fixes and have these bugs at high priority. Don't have me remind you how long it took them for the chunk thing. Instead their only focus is new content to further fuel console and Realms subscriptions.

We're doing our own thing here. Despite taking the choice, players will still pressure the admins: @aikar ""At least server owners can say it wasn't their choice and avoid the personal heat."" - no. The admins can still be forced by their playerbase to stay on the outdated versions (of Paper). Same thing happened with 1.8 whether you like it (as a dev, on the receiving side) or not.",True,True,54,3949.9
openssl_____openssl_____12089,2020-06-14T06:18:02Z,True,openssl_____openssl_____12089_____643724418,No matter which word you choose you will find someone who's offended by it. Don't change it.,True,True,99,35361.316666666666
PaperMC_____Paper_____3544,2020-06-14T08:20:46Z,True,PaperMC_____Paper_____3544_____643734849,"> Regarding the TNT duping issue: [Sliced Lime](https://www.reddit.com/r/Minecraft/comments/fkt9jf/anchor_yourself_to_the_nether_snapshot_20w12a_is/fkv2yyv/) stated that they do plan on getting rid of this like 0tick but thinks that sand needs to being unlimited is one of the things stopping them from making this change.

Heh, I had guessed that there was a reason for Mojang leaving TNT duping alone for three updates now (since the dead coral method was introduced), this statement from slicedlime exactly confirms my suspicions. Without TNT duping, there is currently no way of making a movable machine that destroys blocks (since dispensers, hoppers and chests are not movable), so it fills a hole in the mechanics.
 
> In short: I think a config option and/or documentation of these changes would be nice and greatly appreciated.

In my mind, it doesn't even have to be a separate toggle for each of the glitch/exploit fixes. Just one, `fix-vanilla-exploits` or something would probably make _most_ admins happy. For example, on the small server I admin and play on, we like to experiment with the vanilla glitches and build silly farms, but Paper is the only thing that runs that server with decent performance (probably mostly due to hopper optimizations). If gameplay changes are forced on like this, we'll probably have to resort to compiling our own version of Paper using a patch blacklist/whitelist in the future... :/",True,True,54,3949.9
openssl_____openssl_____12089,2020-06-14T10:42:26Z,True,openssl_____openssl_____12089_____643749098,"Words like 'parent/child' might be unappropriate for some people, i.e. 'child-free' or those who can't have their own child. If you mind BLM, why not to mind child-free?",True,True,99,35361.316666666666
PaperMC_____Paper_____3544,2020-06-14T16:00:42Z,True,PaperMC_____Paper_____3544_____643786283,"@aikar

> it wasn't actually an accident if you read his comments on reddit, he just kept his twitter message short and avoided debate there.

If you read the entirety of the reddit thread and not just the words you want to read, he clearly stated that it indeed was accidentally fixed _now_. They intend to fix it later, but not this late in the 1.16 release cycle, so that the change is not forced upon the community without giving the community ""[time to adjust and give feedback](https://www.reddit.com/user/sliced_lime/comments/gzpo5p/some_words_on_things_in_116/fthlvtp/?context=1)"".

Also (quoting a different comment),
> Note, it wasn't an ACCIDENT. They DO NOT want Zombie Gold farms. They said it directly.

To be clear, sliced_lime only said they don't want Zombie Pigmen/Zombified Piglins to drop XP and rare loot without being killed by a player, [no complaints about the farms generating gold (nuggets)](https://www.reddit.com/user/sliced_lime/comments/gzpo5p/some_words_on_things_in_116/fthp1ro/?context=1).

> tnt is a duplication bug, which we don't usually add configs for. Ones we've done in past we kind of regret.

Sure, it is a bug, but [Mojang are intentionally holding off on fixing it until they can fill that slot in the intended mechanics in some other way](https://www.reddit.com/r/Minecraft/comments/fkt9jf/anchor_yourself_to_the_nether_snapshot_20w12a_is/fkv33q3/?context=1). I would kind of equate it to quasi connectivity or sticky pistons leaving their blocks behind when single ticked. Not originally intended, but widely accepted (in this specific case: until something replaces it).

> Change is hard, but players need to accept these bugs should be fixed. Mojang is much more willing to bow down and avoid the drama than we are.

and (from another comment)
> You want a massive quarry for your build project? Do it like every other person and dig it out, or collect the resources for the TNT.

I fully understand that some players want to play the game as ""intended"", mining every resource by hand and/or never building a single automated farm, and I let them do so without complaining, but it is not the way I (and many others) want to play the game. Minecraft is, and has always been, a sandbox game, so I don't at all understand the hate many players have against the technical community. Stop the ""holier than thou"" spiel and accept the fact that different people play this game differently. I don't see the harm in adding a config for this, especially since Mojang _intentionally_ aren't fixing this until there's a replacement. You don't even have to write any code to make it configurable, as it has [already been done for you](https://github.com/PaperMC/Paper/pull/3544#issuecomment-643310082).

> At least server owners can say it wasn't their choice and avoid the personal heat.

I'm a server owner, and I don't appreciate the lack of choice or having opinions that I don't share forced on me. Fortunately, no one can stop me from compiling my own version without this silliness shoved down my throat, but that isn't an option for everyone that need the performance benefits of Paper.


Lastly, a side note for @drunderscore
> edit1: And if you look at the repo description, it tells you:
> 
> > High performance Spigot fork that aims to fix gameplay and mechanics inconsistencies https://papermc.io/
> 
> This is, without a doubt, an ""inconsistent game mechanic"".

Sure, but [the website](https://papermc.io/) only mentions the ""high performance"" part of this, and the documentation even claims [players will not be able to tell the difference](https://paper.readthedocs.io/en/latest/about/faq.html#will-players-be-able-to-tell). There are probably a lot of server owners that will only ever look at the website and documentation, never even taking a glance at the git repo and its description. Maybe it's time to update the documentation if this is the route the project is taking.",True,True,54,3949.9
PaperMC_____Paper_____3544,2020-06-14T18:38:54Z,True,PaperMC_____Paper_____3544_____643805265,"A config toggle should **NOT** be added for so many reasons. It's your server, if you don't like it fork Paper, remove the patch, and maintain the diff.

The project goal of Paper is removing gameplay inconsistencies and improving performance. They have always done this. Countless dupes and exploits have been fixed by Paper prior to this one. Remember donkey dupes? This also falls under that. I do not want any exploits on my server and I do not want players coming onto my server thinking that exploits are gameplay mechanics. They are not. Mojang is at fault here for leaving these exploits for so long that players have grown to think that they are just part of Minecraft. If you are a technical player, you should stick entirely to Vanilla.

This outcry is ridiculous and I applaud the PaperMC core development team for sticking to this.",True,True,54,3949.9
PaperMC_____Paper_____3544,2020-06-14T18:46:01Z,True,PaperMC_____Paper_____3544_____643806098,"Aikar spends 100's of hours on making chunk loading and other shit better and more efficient and almost nothing gets said and you all just leech of hard work but the second Paper fixes an **unintended dupe bug** then its all outcry.

If you care that much, compile paper your self and remove the patch, it takes 15 mins even without much knowledge, or just give people free TNT.",True,True,54,3949.9
PaperMC_____Paper_____3544,2020-06-14T18:46:52Z,True,PaperMC_____Paper_____3544_____643806191,"I would like to add that you are using open source software. This is not democracy, this is development; there is a team who has decided that adding a lever (hehe) was a bad idea in the past, and is a bad idea now. If you wish to do this manually, it's still free software, _you can do whatever you want_ (within the licence's limits, which is one of the most permissive licences out there).

Hosting and ultimately managing a server comes with a maintenance burden. This is your burden, not PaperMC's. If you wish to have it done for you, pray @AJMFactsheets's fork will stay up-to-date, but do not expect anything even from them.

If you would like a drag-and-drop solution to all this, you can drop the vanilla server on there, as already mentioned by countless before me. If this is not for you and you are unable to bite the bullet, server-hosting is not for you.

---

As the PaperMC development team has come to a conclusion to _not_ add a switch to this _bug fix_, I, among many more, would like to see the thread be closed.",True,True,54,3949.9
PaperMC_____Paper_____3544,2020-06-14T18:47:56Z,True,PaperMC_____Paper_____3544_____643806311,"> I do not want any exploits on my server and I do not want players coming onto my server thinking that exploits are gameplay mechanics.

And in what way is that a reason for not adding a config toggle? If a config is added, you would be free to enable it to not allow TNT duping. I'm advocating for server owners to have a _choice_. I fail to see why that is a problem.

> If you are a technical player, you should stick entirely to Vanilla.

The performance fixes of Paper help my server a lot. Pure Vanilla is not really an option on current hardware.

> If you care that much, compile paper your self and remove the patch, it takes 15 mins even without much knowledge, or just give people free TNT.

I already compile it myself, but I know that's not an option for some.",True,True,54,3949.9
PaperMC_____Paper_____3544,2020-06-14T18:50:38Z,True,PaperMC_____Paper_____3544_____643806639,"@HexedHero I told Aikar many times, that he is amazing and Im very glad for his work. But...

Im one of those who run technic server based on MC mechanics, but still use plugins, so Im depended on Paper for perfomance bukkit. But this patch breaks a lot of things. I would be ok with this, if there were any alternative to automate World Eaters, but without moveable tile entities, its not possible.

And no, digging it by hand its not possible either. Or would anyone here enjoy digging 30x30 chunks by hand? 

Well, I guess, if somebody could do simple instructions how to remove patch... I could maintain it myself. Even tho, its a big step in widely used mechanic in game and makes many things just harder and not enjoyable.",True,True,54,3949.9
PaperMC_____Paper_____3544,2020-06-14T18:51:34Z,True,PaperMC_____Paper_____3544_____643806737,">I already compile it myself, but I know that's not an option for some.

How is that not an option?

Either way, this conversation should be locked. It's turning into an endless fight.",True,True,54,3949.9
PaperMC_____Paper_____3544,2020-06-14T18:55:55Z,True,PaperMC_____Paper_____3544_____643807223,"> > I already compile it myself, but I know that's not an option for some.
> 
> How is that not an option?

Third-party hosting, or lack of knowledge, for example?

> Either way, this conversation should be locked. It's turning into an endless fight.

That, I can actually agree on. I still fail to see how people can be against having a choice in the matter, though.",True,True,54,3949.9
PaperMC_____Paper_____3544,2020-06-14T18:56:38Z,True,PaperMC_____Paper_____3544_____643807315,"If you want TNT duping so much, please just give your players /give tnt. It accomplishes the same task and takes the same amount of effort.",True,True,54,3949.9
PaperMC_____Paper_____3544,2020-06-14T18:58:21Z,True,PaperMC_____Paper_____3544_____643807516,"I'll also be staying at 349 unless a toggle is implemented, I use paper to improve the performance of minecraft to save my in server costs, not to change vanilla behavior, especially ones that significantly change players' gameplay.",True,True,54,3949.9
PaperMC_____Paper_____3544,2020-06-14T18:58:46Z,True,PaperMC_____Paper_____3544_____643807559,"@bartyrealms No it doesnt. The issue isnt that we want to dupe TNT as item. The issue is, it breaks the best automatic way to do World Eaters. I said it before - give players moveable tile entities and it will be patched by itself. But that isnt possible without mods.",True,True,54,3949.9
PaperMC_____Paper_____3544,2020-06-14T19:00:33Z,True,PaperMC_____Paper_____3544_____643807764,"> @bartyrealms No it doesnt. The issue isnt that we want to dupe TNT as item. The issue is, it breaks the best automatic way to do World Eaters. I said it before - give players moveable tile entities and it will be patched by itself. But that isnt possible without mods.

Then just make a very very small plugin that just lets dispensers use TNT without a cost.",True,True,54,3949.9
PaperMC_____Paper_____3544,2020-06-14T19:01:37Z,True,PaperMC_____Paper_____3544_____643807892,"@HexedHero Wait what. Then please tell me. In vanilla without mods, how would you trigger that moveable dispenser? Im currious. ",True,True,54,3949.9
PaperMC_____Paper_____3544,2020-06-14T19:01:51Z,True,PaperMC_____Paper_____3544_____643807928,"> 
> 
> > @bartyrealms No it doesnt. The issue isnt that we want to dupe TNT as item. The issue is, it breaks the best automatic way to do World Eaters. I said it before - give players moveable tile entities and it will be patched by itself. But that isnt possible without mods.
> 
> Then just make a very very small plugin that just lets dispensers use TNT without a cost.

Preposterous! Think of the technical players and the effort to create a TNT duper!",True,True,54,3949.9
PaperMC_____Paper_____3544,2020-06-14T19:03:32Z,True,PaperMC_____Paper_____3544_____643808124,"@bartyrealms Well, I bet that you never did World Eater. You would not call it that easy. ;)
If you dont know what Im talking about - https://youtu.be/mS7xxNGhjxs",True,True,54,3949.9
PaperMC_____Paper_____3544,2020-06-14T19:10:52Z,True,PaperMC_____Paper_____3544_____643808998,"> Aikar spends 100's of hours on making chunk loading and other shit better and more efficient and almost nothing gets said and you all just leech of hard work but the second Paper fixes an **unintended dupe bug** then its all outcry.
> 
> If you care that much, compile paper your self and remove the patch, it takes 15 mins even without much knowledge, or just give people free TNT.

Hey man, I've only compiled paper myself before once, would you mind pointing to a guide on how to do it, I see above there is a ""merge"" for adding the toggle.  If I use that merge does that mean I'll have to redo this each time I update paper?  If so, can there possibly be a script written.  In the mean time I have to stay 349, players who play my server for vanilla mechanics started quitting when I had 350 going and I can't blame them.",True,True,54,3949.9
openssl_____openssl_____12089,2020-06-14T19:17:05Z,True,openssl_____openssl_____12089_____643809755,We live in a clown world ,True,True,99,35361.316666666666
PaperMC_____Paper_____3544,2020-06-14T19:27:24Z,True,PaperMC_____Paper_____3544_____643810967,"I did it for you. I'll update this about weekly, perhaps biweekly; we'll see. I will not be testing it, if a build has horrible, awful bugs, that is not my issue. Paperclip jar is in releases with its associated Paper build number and commit. Config option is `exploit-fixes` in `paper.yml`. Enjoy. https://github.com/Proximyst/RetardPaper",True,True,54,3949.9
PaperMC_____Paper_____3544,2020-06-14T19:29:49Z,True,PaperMC_____Paper_____3544_____643811256,"@Proximyst Still dont know why are you all so passive agressive to the community, who like to automate things. But I appreciate your help.",True,True,54,3949.9
PaperMC_____Paper_____3544,2020-06-14T19:34:34Z,True,PaperMC_____Paper_____3544_____643811823,"> @Proximyst Still dont know why are you all so passive agressive to the community, who like to automate things. But I appreciate your help.

imo it technically an duplication exploit as Aikar said earlier 1 tnt 1 boom not 1 tnt unlimited boom.
it ""can"" use in both good n bad way but still it a dupe exploit ",True,True,54,3949.9
openssl_____openssl_____12089,2020-06-14T21:58:12Z,True,openssl_____openssl_____12089_____643827632,"Just want to give my opinion on the topic.  
I'm happy to see an open discussion occurring on the matter, despite the fact I feel it's a bit trivial. I still think it's good to see this discussed, and either acted on, or determined that no action is needed, than only represented by a few thoughts and feelings in peoples heads.

I just hope if any terms do change, it is in fact because the majority believe and agree, and that there is a consensus that it should happen, and not _only_ for ""political correctness"".

I appreciate that language evolves, I just firmly believe this has total disregard for context.

Many examples exist here but to further it: would ""[Master's degree](https://en.wikipedia.org/wiki/Master's_degree)"" have to change, or maybe ""[Brownies](https://en.wikipedia.org/wiki/Chocolate_brownie)"", or ""[Brownie points](https://en.wikipedia.org/wiki/Brownie_points)"", if we disregard context and where the words are derived, could they be linked with slavery or race too?",True,True,99,35361.316666666666
PaperMC_____Paper_____3561,2020-06-15T03:02:13Z,True,PaperMC_____Paper_____3561_____434258022,"There is no config to enable or disable the new Piston Inconsistency Fix, the fix that disabled TNT dupers. This is a vanilla mechanic until fixed by Mojang and makes it hard for my players to feel immersed in their game play. Until there is a config I must make a choice to either not update, make my player base unhappy (which is an unlikely choice), or switch back to spigot.
This fix should default true and only be disabled if admins want it to happen like the 0 tick farms.

Not 100% sure how github works. This fork obviously doesn't actually implement a fix and should not be merged. ",True,True,49,812.4833333333333
PaperMC_____Paper_____3561,2020-06-15T03:12:13Z,True,PaperMC_____Paper_____3561_____643878886,"I agree to this. I will NOT be updating my server to #350 and will continue to stay on #349 until this is a option in the config. Please listen to your technical players, Paper!! ",True,True,49,812.4833333333333
PaperMC_____Paper_____3561,2020-06-15T03:14:07Z,True,PaperMC_____Paper_____3561_____643879305,"Has been discussed at length here: https://github.com/PaperMC/Paper/pull/3544
Please don't make pointless PRs and split discussion.",True,True,49,812.4833333333333
PaperMC_____Paper_____3561,2020-06-15T03:18:52Z,True,PaperMC_____Paper_____3561_____643880481,Change looks excellent. Very well implemented.,True,True,49,812.4833333333333
PaperMC_____Paper_____3561,2020-06-15T03:21:12Z,True,PaperMC_____Paper_____3561_____643881036,"Thanks Spottedleaf, again sorry not so sure how github works i just want to be heard, I have at least 40 players coming for my throat for updating and i'm going to have to revert changes or the server is going to lose revenue from our patreons. we're just asking for this to be optional instead of a forced fix.",True,True,49,812.4833333333333
PaperMC_____Paper_____3561,2020-06-15T03:36:44Z,True,PaperMC_____Paper_____3561_____643884626,"Sorry to break the news, but @Spottedleaf was being sarcastic. The Paper team strongly feels that dupe issues should be fixed with no option to revert, and I concur.",True,True,49,812.4833333333333
PaperMC_____Paper_____3561,2020-06-15T03:39:56Z,True,PaperMC_____Paper_____3561_____643885393,"I am aware that he was being sarcastic, I did make that change myself anyway. Whether or not they want the issues fixed we do wish that they would make the fixes optional if they are game changing. My technical Minecraft server loves the performance of paper and the option of being as close to vanilla as possible, but without a config for this change we cannot be as close to vanilla as we'd like.",True,True,49,812.4833333333333
PaperMC_____Paper_____3561,2020-06-15T03:41:08Z,True,PaperMC_____Paper_____3561_____643885660,"Please use https://github.com/Proximyst/RetardPaper if you wish to accomplish this. A config option for un-fixing duplication fixes will not end up in Paper itself. Do you complain to mojang when they fix dupes? No, you don't. 

For the week or so that's left in the 1.15 lifecycle, either stay on 349 or migrate to RetardPaper",True,True,49,812.4833333333333
PaperMC_____Paper_____3561,2020-06-15T03:49:13Z,True,PaperMC_____Paper_____3561_____643887413,"The disrespect isn't appreciated @JRoy . If Mojang decides to fix their own bugs, thats their thing, of course i wouldnt complain to them. But someone else is fixing them and it makes the game different. Any change that changes the vanilla game this drastically should be configurable. Its funny you say that because paper.yml has allow-perm-block-break-exploits: true and fix-zero-tick-instant-grow-farms: true - so indeed ""A config option for un-fixing duplication"" already exists in paper. We're going to have to update again and again to 1.16 so unless @Proximyst wants to keep updating paper so that this fix isnt implemented in every upcoming version i stand here to request a config.",True,True,49,812.4833333333333
PaperMC_____Paper_____3561,2020-06-15T03:50:01Z,True,PaperMC_____Paper_____3561_____643887544,"I don't understand the downside of having the option to turn it off or on. I would really like to understand since both parties would be happy because they have the choice to use it or not. It literally changes nothing for the goal or path Paper wants to accomplish, it would just support the technical players using Paper. If you are against glitches and dupes, great! they got patched! but why would you advocate for others not to have that option to turn it on or off... ",True,True,49,812.4833333333333
PaperMC_____Paper_____3561,2020-06-15T03:54:22Z,True,PaperMC_____Paper_____3561_____643888299,"@TwoPointlnfinity no disrespect was intended, it's just the name of the fork.

As for you saying paper already had config options for this, not sure what the first one is but the zero tick thing isn't a duplication glitch per say and more controversial than this.

But it seems you don't understand mojang has fixed both zero tick farms and tnt dupes in 1.16. RetardPaper is just a fork for the remaining 1.15 lifecycle that will be updated bi-weekly as per proxi",True,True,49,812.4833333333333
PaperMC_____Paper_____3561,2020-06-15T03:57:14Z,True,PaperMC_____Paper_____3561_____643888819,"https://github.com/PaperMC/Paper/pull/3544#issuecomment-643288081

As you can see, the team has added patches to allow turning off certain dupe fixes and have regretted them:

> tnt is a duplication bug, which we don't usually add configs for. Ones we've done in past we kind of regret.
>
> Change is hard, but players need to accept these bugs should be fixed. Mojang is much more willing to bow down and avoid the drama than we are.

There are many examples of settings Paper has added and then regretted. (Does anyone remember the cannoning settings from the 1.8 era?)

There will be no setting to revert the dupe fixes, so stop asking. Quite frankly, this is getting out of hand and I would like this PR closed and locked.",True,True,49,812.4833333333333
PaperMC_____Paper_____3561,2020-06-15T03:59:01Z,True,PaperMC_____Paper_____3561_____643889172,"> ""RetardPaper""
> ""This is a fork of Paper based on the work of byof for the utmost retarded users.""

Yeah, that's not disrespectful at all... 

> But it seems you don't understand mojang has fixed both zero tick farms and tnt dupes in 1.16. 

Half true, they're only patching out 0tick and plan on patching out TNT dupes later down the line when they have an alternative solution. As discussed in the original pull. ",True,True,49,812.4833333333333
PaperMC_____Paper_____3561,2020-06-15T04:01:16Z,True,PaperMC_____Paper_____3561_____643889600,"I'm sorry you feel that way @astei 
@JRoy TnT Dupers still work in the latest pre-release and they do not plan to fix them in 1.16",True,True,49,812.4833333333333
PaperMC_____Paper_____3561,2020-06-15T04:04:01Z,True,PaperMC_____Paper_____3561_____643890165,"> 
> 
> [#3544 (comment)](https://github.com/PaperMC/Paper/pull/3544#issuecomment-643288081)
> 
> As you can see, the team has added patches to allow turning off certain dupe fixes and have regretted them:
> 
> > tnt is a duplication bug, which we don't usually add configs for. Ones we've done in past we kind of regret.
> > Change is hard, but players need to accept these bugs should be fixed. Mojang is much more willing to bow down and avoid the drama than we are.
> 
> There are many examples of settings Paper has added and then regretted. (Does anyone remember the cannoning settings from the 1.8 era?)
> 
> There will be no setting to revert the dupe fixes, so stop asking. Quite frankly, this is getting out of hand and I would like this PR closed and locked.

Why have they regretted them? Is it because the ones that didn't want the glitches also didn't want other people to have the option to have them? Sounds like selfishness to me. I'm sure the team ""regretted"" it because of some people not wanting dupes for everyone. I would even bet those people don't even play the game on a regular basis...",True,True,49,812.4833333333333
PaperMC_____Paper_____3561,2020-06-15T04:06:02Z,True,PaperMC_____Paper_____3561_____643890567,"If you expect this issue to remain open and unlocked you will treat everyone with respect. No name calling, no bad faith arguments, no calling people ‘selfish’. If we were selfish you wouldn’t be here.

If anyone chooses to ignore this post you can expect to be blocked from posting. If it gets even more out of hand this issue will also be locked. Play nice, debate in a friendly way, or at least respectfully.",True,True,49,812.4833333333333
PaperMC_____Paper_____3561,2020-06-15T04:09:59Z,True,PaperMC_____Paper_____3561_____643891296,"I understand why they want them fixed @joaoesp i very much appreciate the work put in to make paper and have used it exclusively since they went standalone from spigot. Please dont insult the devs in any way, i understand their pov of glitches and exploits but from the deep technical player standpoint playing in the most vanilla way possible would be great if minecraft had better performance.",True,True,49,812.4833333333333
PaperMC_____Paper_____3561,2020-06-15T04:20:25Z,True,PaperMC_____Paper_____3561_____643893509,"At this point, all that can be said is. Glitches get patched/fixed. I don't really know what to say. Players who sit there and abuse them then whine when they're fixed without expecting them to eventually be fixed aren't the brightest bulbs.",True,True,49,812.4833333333333
PaperMC_____Paper_____3561,2020-06-15T04:20:42Z,True,PaperMC_____Paper_____3561_____643893554,"I didn't call anyone selfish. I just want to understand the reason to not have a config. Now he's countering my argument by saying that there will not be a setting and to stop asking. How is that debating in a friendly and respectful way? He's also asking to lock the PR because I do not share his opinion. Clearly there is an interest to have a config from a big part of the community, so why would those against it advocate so vehemently if it does not affect them?",True,True,49,812.4833333333333
PaperMC_____Paper_____3561,2020-06-15T04:24:20Z,True,PaperMC_____Paper_____3561_____643894368,"Most of us do expect bugs to be fixed @DragonsAscent 
I also do not understand why those opposed to the exploit would argue that there shouldn't be an option to enable/disable it if it would not affect them in any way. Can someone explain this to me?",True,True,49,812.4833333333333
PaperMC_____Paper_____3561,2020-06-15T04:27:45Z,True,PaperMC_____Paper_____3561_____643895193,Allowing config options for exploit fixes would require paper to support both configurations. This is a big hassle because no one at paper will be testing with the exploit enabled. There is a high chance the config option will break on some config and then a dev will have to try and fix it. This situation has already happened with the zero-tick exploit.,True,True,49,812.4833333333333
PaperMC_____Paper_____3561,2020-06-15T04:32:12Z,True,PaperMC_____Paper_____3561_____643896331,"I do believe by not implementing the fix themselves and waiting for mojang to do it would also solve that issue but they decided they wanted a fixed config version. What you're saying goes both ways. They technically are supporting the ""fixed"" version that they made instead of supporting the vanilla mechanic, having to support both sounds like a situation that can be avoided by either not making a config or not making a fix to the piston inconsistency. I support either not making the dupe fix or support a configuration that is more like vanilla. where the new fix is configurable. ",True,True,49,812.4833333333333
PaperMC_____Paper_____3561,2020-06-15T04:35:11Z,True,PaperMC_____Paper_____3561_____643897061,"> 
> 
> Allowing config options for exploit fixes would require paper to support both configurations. This is a big hassle because no one at paper will be testing with the exploit enabled. There is a high chance the config option will break on some config and then a dev will have to try and fix it. This situation has already happened with the zero-tick exploit.

Thank you! Finally a valid reason.",True,True,49,812.4833333333333
PaperMC_____Paper_____3561,2020-06-15T04:48:01Z,True,PaperMC_____Paper_____3561_____643900066,since this pr does not actually implement a fix it is now marked as a draft.,True,True,49,812.4833333333333
PaperMC_____Paper_____3561,2020-06-15T04:49:19Z,True,PaperMC_____Paper_____3561_____643900402,"![image](https://user-images.githubusercontent.com/734478/84619030-90c0b880-ae99-11ea-9f7d-719149be025d.png)
",True,True,49,812.4833333333333
PaperMC_____Paper_____3561,2020-06-15T04:52:59Z,True,PaperMC_____Paper_____3561_____643901296,"that's not exactly the same thing, and the picture doesn't even make sense. The fix wouldn't even stop the op from using his space bar for control purposes. Now his cpu wont overheat. That picture is not relevant to this situation. Is the update in the image talking about a hypothetical game maybe? But lets stay on topic. ",True,True,49,812.4833333333333
PaperMC_____Paper_____3561,2020-06-15T08:09:25Z,True,PaperMC_____Paper_____3561_____643973719,"It should be noted that although we fully expect Mojang to patch these exploits, we also expect (or rather, hope) that alternatives will be provided to what these exploits allow survival players to do. Although we do not expect infinite sand, or holes that are hundreds of thousands of blocks in area, we do expect a reasonable alternative that allows for a significant amount of sand without destroying entire deserts, and a reasonable alternative that allows for holes that are thousands of blocks in area.

I suggest a blanket config option for all dupe exploits (name it something like ""allow-unsupported-dupe-exploits""). This would allow private servers to decide for themselves if they want to go full vanilla, and it would not give any expectation that Paper will support these exploits in the future. This will also cover for any additional dupe exploit fixes (such as sand duping).

The only downside is that server owners will not have granular control over individual dupe exploits. I don't think this is a very big problem however, even if serious dupe exploits such as the chunk dupe (just an example, I know it's patched) are included in this config option, as TNT duping can already be used harmfully on public servers.

The second alternative is to put config options for each individual exploit in a category, and add a comment before it saying that none of these config options are guaranteed to work in future versions.",True,True,49,812.4833333333333
PaperMC_____Paper_____3561,2020-06-15T08:14:26Z,True,PaperMC_____Paper_____3561_____643976188,"Plugins, custom enchants that let you mine 3x3 or 5x5, VeinMiner, etc

There are solutions to that problem that don't resort to abusing exploits.

Alternatively you can just play modded, setup a quarry, and enjoy all the resources in the world.",True,True,49,812.4833333333333
PaperMC_____Paper_____3561,2020-06-15T08:18:49Z,True,PaperMC_____Paper_____3561_____643978520,"Whether or not people want to use these exploits is based on preference, and both arguments are valid. Understand that different things interest us, and you not having the same interests does not make them invalid. However, I do not believe this discussion is about whether these exploits are wanted by the community. The amount of debate has made it clear enough they are.",True,True,49,812.4833333333333
openzfs_____zfs_____10454,2020-06-15T08:19:17Z,True,openzfs_____zfs_____10454_____434369084,"against stupid political agitation that has no place in opensource world. Whole world use master/slave terminology in almost all technical sciences and there is no reason to change it. As I am not communist, I am doing regular commit and PR and not rewriting the (git) history by force ...

### Motivation and Context
Removes political agitation from the code. Makes code much more readable and clean. 

### Description
Only clean revert of previous weird commit. No additional changes.

### How Has This Been Tested?
Didn't make any tests.

### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (non-breaking change which fixes an issue)
- [ ] New feature (non-breaking change which adds functionality)
- [ ] Performance enhancement (non-breaking change which improves efficiency)
- [x] Code cleanup (non-breaking change which makes code smaller or more readable)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)
- [ x] Documentation (a change to man pages or other documentation)
",True,True,2,553.2666666666667
PaperMC_____Paper_____3561,2020-06-15T09:01:55Z,True,PaperMC_____Paper_____3561_____644001236,"@TwoPointInfinity I will continue updating RetardPaper for the foreseeable future. It's a 2 minute job to do, so no real maintenance burden on me nor anyone wishing to fork it.

@MissPotato When forks such as RetardPaper come around with such names, the point *is* to be disrespectful. But it does what you want, so the choice to use a completely valid fix is ultimately on you.",True,True,49,812.4833333333333
openssl_____openssl_____12089,2020-06-15T09:09:08Z,True,openssl_____openssl_____12089_____644005223,"<img width=""724"" alt=""Screen Shot 2020-06-15 at 11 06 53"" src=""https://user-images.githubusercontent.com/33033094/84639232-63572780-aef8-11ea-83db-23f6d48a3c87.png"">

The word ""parent"" causes trauma in me as I grew up without one parent. Use a different word, I find it offensive.",True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-15T09:24:48Z,True,openssl_____openssl_____12089_____644013353,"black magic -> dark magic ? Originally, it just means satanic forces that must be avoided:)",True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-15T09:33:36Z,True,openssl_____openssl_____12089_____644017971,"> black magic -> dark magic ? Originally, it just means satanic forces that must be avoided:)

I wonder if ""black magic"" is really offensive to anyone, or is it just guessing? I fail to see any relation to races and discrimination here. I'm not a native English speaker, but calling a race ""black"" seems even more inappropriate to me (because technically their skin color is dark brown, not black) than banning ""black"" as a color.",True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-15T10:15:51Z,True,openssl_____openssl_____12089_____644039221,"> <img alt=""Screen Shot 2020-06-15 at 11 06 53"" width=""724"" src=""https://user-images.githubusercontent.com/33033094/84639232-63572780-aef8-11ea-83db-23f6d48a3c87.png"">
> 
> The word ""parent"" causes trauma in me as I grew up without one parent. Use a different word, I find it offensive.

I am an orphan and the use of the word ""parent"" also causes me significant trauma, I support the use of a different word. ",True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-15T10:18:15Z,True,openssl_____openssl_____12089_____644040383,"Sorry to hear that Louise, my condolences go to you.",True,True,99,35361.316666666666
PaperMC_____Paper_____3561,2020-06-15T11:00:34Z,True,PaperMC_____Paper_____3561_____644059120,"Not sure if this has been brought up before but especially because Mojangs stance on this is that they don't want to fix it because it ""fills a slot in the game that the intended game mechanics cannot"" I woud like to see a toggle for this. 
https://www.reddit.com/r/Minecraft/comments/fkt9jf/anchor_yourself_to_the_nether_snapshot_20w12a_is/fkv33q3/?context=1

I understand that some people don't want TNT duping on their server and I respect that without complaining but on the other hand there are a lot of people who do and a toggle would make both happy.",True,True,49,812.4833333333333
openzfs_____zfs_____10455,2020-06-15T11:17:13Z,True,openzfs_____zfs_____10455_____434469814,"Words such as ""wh\*telist"" or ""b\*acklist"" are racist. We cannot have those absolutely disgusting repulsive words in our codebase. Therefore, we need to change them to race-neutral words.

There are more references to racial supremacy throughout the code. These should be discussed.

Should this macro be renamed to ""blankspace""?
https://github.com/openzfs/zfs/blob/master/module/nvpair/nvpair.c#L46

Also, in the Lua module, we mark objects as ""wh\*te"" or ""b\*ack"". I suggest changing the colors to some non-offensive ones. I propose indigo (`#4B0082`) and forest green (`#228B22`).
https://github.com/openzfs/zfs/blob/master/module/lua/lgc.c

### Motivation and Context
Following other open-source projects, we should strive to keep the ZFS code base clean of any vulgar, racist or other unwelcome remarks and to allow for friendly and welcoming environment for people of all kinds.

### How Has This Been Tested?
It compiles - it's just basic refactoring.

### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (non-breaking change which fixes an issue)
- [ ] New feature (non-breaking change which adds functionality)
- [ ] Performance enhancement (non-breaking change which improves efficiency)
- [x] Code cleanup (non-breaking change which makes code smaller or more readable)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)
- [ ] Documentation (a change to man pages or other documentation)

### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My code follows the ZFS on Linux [code style requirements](https://github.com/zfsonlinux/zfs/blob/master/.github/CONTRIBUTING.md#coding-conventions).
- [ ] I have updated the documentation accordingly.
- [x] I have read the [**contributing** document](https://github.com/zfsonlinux/zfs/blob/master/.github/CONTRIBUTING.md).
- [ ] I have added [tests](https://github.com/zfsonlinux/zfs/tree/master/tests) to cover my changes.
- [ ] I have run the ZFS Test Suite with this change applied.
- [x] All commit messages are properly formatted and contain [`Signed-off-by`](https://github.com/zfsonlinux/zfs/blob/master/.github/CONTRIBUTING.md#signed-off-by).
",True,True,6,512.55
PaperMC_____Paper_____3561,2020-06-15T11:28:43Z,True,PaperMC_____Paper_____3561_____644071916,"![image](https://user-images.githubusercontent.com/29043515/84652480-f64d8d00-af0b-11ea-8775-f3a643206d26.png)

A lot of people want a tnt duping config because it fills a game mechanic gap, dispensers aren't moveable and mining with hand is not really an option. ",True,True,49,812.4833333333333
PaperMC_____Paper_____3561,2020-06-15T11:31:03Z,True,PaperMC_____Paper_____3561_____644072912,This project is not run like a democracy. Trying to [appeal to popularity](https://rationalwiki.org/wiki/Argumentum_ad_populum) won't get you anywhere.,True,True,49,812.4833333333333
PaperMC_____Paper_____3561,2020-06-15T11:32:00Z,True,PaperMC_____Paper_____3561_____644073294,"@RealityTest
This was from Aikar in paper discord recently.

mojang did mention it in a private meeting recently that sounds like they dont want the tnt dupe issue either",True,True,49,812.4833333333333
PaperMC_____Paper_____3561,2020-06-15T11:33:47Z,True,PaperMC_____Paper_____3561_____644074093,"@DoubleGe
There a fork of paper Called RetardPaper by @Proximyst. you can use that if you want to have exploit toggleable ",True,True,49,812.4833333333333
PaperMC_____Paper_____3561,2020-06-15T11:36:41Z,True,PaperMC_____Paper_____3561_____644075354,@MrEDok Can't use it because of #3523 big issue on my server,True,True,49,812.4833333333333
PaperMC_____Paper_____3561,2020-06-15T11:39:31Z,True,PaperMC_____Paper_____3561_____644076490,"@DoubleGe That makes no sense. RetardPaper is based off the same build as when the patch for TNT duping was introduced. If you don't want to use anything modern, you won't have an issue with dupes at all.",True,True,49,812.4833333333333
PaperMC_____Paper_____3561,2020-06-15T11:42:03Z,True,PaperMC_____Paper_____3561_____644077581,@Proximyst The issue isn't fixed so it will probably also be in RetardPaper,True,True,49,812.4833333333333
PaperMC_____Paper_____3561,2020-06-15T11:44:14Z,True,PaperMC_____Paper_____3561_____644078558,"@DoubleGe You sure seem to be the target group for the name...

Paper build 350 or whatever the patch for TNT dupes was introduced in has the issue. If you don't want the issue, you'll stick to builds w/o this patch. This entire thread is useless to you as you wouldn't even have the TNT dupe patch at all.",True,True,49,812.4833333333333
PaperMC_____Paper_____3561,2020-06-15T11:45:00Z,True,PaperMC_____Paper_____3561_____644078898,"@MrEDok 
Right, I see that Mojang doesn't want the TNT duping. But as it's stated in the reddit post they said that it won't be removed until there's an alternative for it, which there isn't for now. It's not that they are too stupid to fix it.",True,True,49,812.4833333333333
PaperMC_____Paper_____3561,2020-06-15T11:45:53Z,True,PaperMC_____Paper_____3561_____644079261,"@Proximyst But I need to update because of that issue and I still want TNT Dupers, but updating doesn't do anything because the issue I have hasn't been fixed my server can't run atm because of the issue.",True,True,49,812.4833333333333
PaperMC_____Paper_____3561,2020-06-15T11:48:05Z,True,PaperMC_____Paper_____3561_____644080236,"@DoubleGe Then wait till it's fixed? I've said *several times* that I *will* be updating RetardPaper as new updates come. It's the fix to this entire discussion: you get the switch, PaperMC team gets their will. Win-win, stick to builds before the dupe patch or use RP if you want them to stay even with the patch.",True,True,49,812.4833333333333
openzfs_____zfs_____10455,2020-06-15T11:55:13Z,True,openzfs_____zfs_____10455_____644083444,Indigo children are against use of color indigo to color memory.,True,True,6,512.55
PaperMC_____Paper_____3561,2020-06-15T12:51:11Z,True,PaperMC_____Paper_____3561_____644115333,"I think a config option would be great. It would please the technical community, but, in order to please everyone else, including the Paper team, I think that all exploit fixes should be moved into a new configuration section or just into a new single configuration option. However, in addition to this, if any of the fixes were disabled, a error would appear on the console saying that some or all fixes were disabled and that such configurations are not supported. To top it all off, I believe that pausing the thread during startup for 10 seconds or more would be great as it ""forces"" people to read the error (just like the outdated build warning paper had). I think this is enough to please everyone, however, if you don't think so, please let me know!",True,True,49,812.4833333333333
PaperMC_____Paper_____3561,2020-06-15T12:58:09Z,True,PaperMC_____Paper_____3561_____644118776,"The Paper description says:
> High performance Spigot fork that aims to fix gameplay and mechanics inconsistencies.

 This is absolutley a gameplay inconsistency. When you started using Paper, you knew this. Stop acting like this is new news, it's been said before they **regret** adding config options for other bugs and exploits.",True,True,49,812.4833333333333
PaperMC_____Paper_____3561,2020-06-15T13:49:18Z,True,PaperMC_____Paper_____3561_____644146714,"> This is absolutley a gameplay inconsistency

Is Quasi Connectivity a gameplay inconsistency? In the early days, probably yes, however, nowadays, it has become a fundamental part of gameplay for some player. There are things that would not be possible without Quasi Connectivity. Same thing for TNT dupers. They allow players to move the location where you activate the TNT. As it is recurring in this discussion, most players are not interested in being able to dupe TNT. Most would even be willing to ditch TNT dupers altogether, if a solution for that problem came along, such as moveable Block Entities, but 1.15 doesn't have that nor does 1.16. The lack of a configuration option for TNT duping limits the gameplay for a lot of players and Minecraft would lose a lot of its sandbox feel, where ""anything is possible"". You could even say TNT dupers are a gameplay expander.

> they regret adding config options for other bugs and exploits

That is indeed true, which is why I based my solution of clearly warning users that those settings are unsupported on this:
> Allowing config options for exploit fixes would require paper to support both configurations. This is a big hassle because no one at paper will be testing with the exploit enabled. There is a high chance the config option will break on some config and then a dev will have to try and fix it. This situation has already happened with the zero-tick exploit.
",True,True,49,812.4833333333333
PaperMC_____Paper_____3561,2020-06-15T13:57:23Z,True,PaperMC_____Paper_____3561_____644151227,"> I believe that pausing the thread during startup for 10 seconds or more would be great as it ""forces"" people to read the error

Most admins never bother to read console logs carefully, or even care that they run an unsupported configuration. They just run to Discord and when we tell them that ""we won't help because because X isn't supported"", they throw a hissy fit because their server relies on X. This happens every day from people using outdated Paper versions (people asking for support with 1.8.8 is super common, despite 1.8 being almost 6 years old). Adding a warning that says we won't support this configuration isn't going to help at all.

The fact we provide the option implicitly means that Paper will support reverting Paper with the dupe fix and with the dupe fix re-enabled. What if there's a bug in the dupe glitch path?",True,True,49,812.4833333333333
openzfs_____zfs_____10455,2020-06-15T13:59:10Z,True,openzfs_____zfs_____10455_____644152235,I identify as a blockhead and find this PR extremely offensive.,True,True,6,512.55
PaperMC_____Paper_____3561,2020-06-15T13:59:24Z,True,PaperMC_____Paper_____3561_____644152368,"> Allowing config options for exploit fixes would require paper to support both configurations. This is a big hassle because no one at paper will be testing with the exploit enabled. There is a high chance the config option will break on some config and then a dev will have to try and fix it. This situation has already happened with the zero-tick exploit.

(this response isn't to you kick)

This is close, but the actual case is that we WON'T try to fix it.


This is the problem with ""dupe fixes"" configs.
With other configs, we WANT to support it. We might not always have the time to investigate why a config is broken and will ask for help, but with dupe fixes, we straight up DON'T want it to work, and are happy when they break and then we can say ""oh well figure it out on your own""

And that's why it doesn't make sense to provide a config. ""You're using Paper but we still don't support you"" is just a silly environment to create.

Additionally, I didn't want to directly say it, but with the nature of what the bug fix was, there COULD be other worse forms of abuse of the mechanic that goes further than just TNT. Stuff that if someone knew how to abuse correctly, who knows what else it could duplicate.

We don't want generic bugs like this to exist in our software.

*We want our software to resolve issues that even Mojang doesn't want to solve (ever or yet)*.

If you disagree with what this project does, you are free to either not use it, or fork it and make it suit your needs.

Thankfully, you're in luck that someone has provided one already, but you're always welcome to fork it yourself and delete the file and compile it too.",True,True,49,812.4833333333333
openzfs_____zfs_____10455,2020-06-15T14:24:58Z,True,openzfs_____zfs_____10455_____644167299,"Who put this garbage into your head?  Should we also ban traffic lights because there are red and yellow lights (sorry, I can't even guess anything for green)?",True,True,6,512.55
PaperMC_____Paper_____3561,2020-06-15T14:40:23Z,True,PaperMC_____Paper_____3561_____644176582,"We have asked Proxi to rename their repo to be something not offensive to be a viable option for people looking for exploits to be re-enabled and they said they will later today.

",True,True,49,812.4833333333333
PaperMC_____Paper_____3561,2020-06-15T16:34:42Z,True,PaperMC_____Paper_____3561_____644241446,"After talking to slicedlime, I relented on the config option, see https://github.com/PaperMC/Paper/pull/3565
",True,True,49,812.4833333333333
openzfs_____zfs_____10455,2020-06-15T17:13:38Z,True,openzfs_____zfs_____10455_____644260709,"Neither ""whitelist"" nor ""blacklist"" are racist. Please check the history and use of terms before
jumping to conclusions.
",True,True,6,512.55
openzfs_____zfs_____10454,2020-06-15T17:32:33Z,True,openzfs_____zfs_____10454_____644269964,"I disagree that reverting to the previous language makes the code more readable and clear.  In fact, it does the opposite.  The patch adopts the ""dependency"" terminology used by `dmsetup(8)` in order to be as precise as possible when describing the functionality.",True,True,2,553.2666666666667
openzfs_____zfs_____10455,2020-06-15T19:49:46Z,True,openzfs_____zfs_____10455_____644342588,When this functionality was added more descriptive and clear names could have been used.  I see no reason not to address that now.  PR 10457 makes a very similar change to this with slightly different terms (blocked -> excluded).,True,True,6,512.55
jellyfin_____jellyfin-web_____1423,2020-06-16T21:44:44Z,True,jellyfin_____jellyfin-web_____1423_____435482756,"**Changes**
Whitelist/blacklist replaced with allow list/block list

",True,True,17,35656.933333333334
jellyfin_____jellyfin-web_____1423,2020-06-16T21:46:07Z,True,jellyfin_____jellyfin-web_____1423_____645028526,"Kudos, SonarCloud Quality Gate passed!

[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug.png' alt='Bug' width='16' height='16' />](https://sonarcloud.io/project/issues?id=jellyfin_jellyfin-web&pullRequest=1423&resolved=false&types=BUG) [<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A.png' alt='A' width='16' height='16' />](https://sonarcloud.io/project/issues?id=jellyfin_jellyfin-web&pullRequest=1423&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=jellyfin_jellyfin-web&pullRequest=1423&resolved=false&types=BUG)  
[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability.png' alt='Vulnerability' width='16' height='16' />](https://sonarcloud.io/project/issues?id=jellyfin_jellyfin-web&pullRequest=1423&resolved=false&types=VULNERABILITY) [<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A.png' alt='A' width='16' height='16' />](https://sonarcloud.io/project/issues?id=jellyfin_jellyfin-web&pullRequest=1423&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=jellyfin_jellyfin-web&pullRequest=1423&resolved=false&types=VULNERABILITY) (and [<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot.png' alt='Security Hotspot' width='16' height='16' />](https://sonarcloud.io/project/issues?id=jellyfin_jellyfin-web&pullRequest=1423&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/issues?id=jellyfin_jellyfin-web&pullRequest=1423&resolved=false&types=SECURITY_HOTSPOT) to review)  
[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell.png' alt='Code Smell' width='16' height='16' />](https://sonarcloud.io/project/issues?id=jellyfin_jellyfin-web&pullRequest=1423&resolved=false&types=CODE_SMELL) [<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A.png' alt='A' width='16' height='16' />](https://sonarcloud.io/project/issues?id=jellyfin_jellyfin-web&pullRequest=1423&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=jellyfin_jellyfin-web&pullRequest=1423&resolved=false&types=CODE_SMELL)

[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo.png' alt='No Coverage information' width='16' height='16' />](https://sonarcloud.io/component_measures?id=jellyfin_jellyfin-web&pullRequest=1423) No Coverage information  
[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/3.png' alt='0.0%' width='16' height='16' />](https://sonarcloud.io/component_measures?id=jellyfin_jellyfin-web&pullRequest=1423&metric=new_duplicated_lines_density&view=list) [0.0% Duplication](https://sonarcloud.io/component_measures?id=jellyfin_jellyfin-web&pullRequest=1423&metric=new_duplicated_lines_density&view=list)

",True,True,17,35656.933333333334
jellyfin_____jellyfin-web_____1423,2020-06-16T22:15:07Z,True,jellyfin_____jellyfin-web_____1423_____645039348,We could leave this for 10.6.x or 10.7.0 so the server-side info can be changed as well?,True,True,17,35656.933333333334
jellyfin_____jellyfin-web_____1423,2020-06-16T22:15:07Z,True,jellyfin_____jellyfin-web_____1423_____645039347,"Actually, can we replace the ""blacklist"" label in all the translations too? Otherwise those will become orphaned and force retranslation.",True,True,17,35656.933333333334
jellyfin_____jellyfin-web_____1423,2020-06-16T22:15:52Z,True,jellyfin_____jellyfin-web_____1423_____645039617,"> Actually, can we replace the ""blacklist"" label in all the translations too? Otherwise those will become orphaned and force retranslation. 

Do i just add the strings to the other language files and leave the translation blank?
",True,True,17,35656.933333333334
jellyfin_____jellyfin-web_____1423,2020-06-16T22:15:53Z,True,jellyfin_____jellyfin-web_____1423_____645039621,"I think for UI puposes, this + changes to the translations is good enough, then we could rename IsRemoteIPFilterBlacklist and such after 10.6.z for 10.7.0.",True,True,17,35656.933333333334
jellyfin_____jellyfin-web_____1423,2020-06-16T22:19:07Z,True,jellyfin_____jellyfin-web_____1423_____645040737,">Do i just add the strings to the other language files and leave the translation blank?

From a quick check, just a `sed 's/Whitelist/Allowlist/g' 's/Blacklist/Blocklist/g'` on the `src/strings/*.json` files would be sufficient.",True,True,17,35656.933333333334
jellyfin_____jellyfin-web_____1423,2020-06-16T22:29:16Z,True,jellyfin_____jellyfin-web_____1423_____645044265,"Not to start a political debate or anything, but I think this is a bit reactionary and is generally done more for posturing like ""look, we're inclusive"" than really being for a deeper societal change.

I'm not against it in principle, because racism sucks and should've gone to die in a fire like 500 years ago, but to me, it takes more than getting rid of terms we don't like to change things.

I do think that, if we do this, it should be under a few conditions:

1. Go down the chain. Don't only change the surface terms, that's ridiculous.
2. Enact a Code of Conduct to go with this.
3. Build and discuss a list of the potentially offensive terms with all users of Jellyfin, emphasizing the need for feedback from different cultures and walks of life.

Imo, either we do this properly or we don't do it at all.",True,True,17,35656.933333333334
jellyfin_____jellyfin-web_____1423,2020-06-16T22:39:48Z,True,jellyfin_____jellyfin-web_____1423_____645047541,"I think that's a reasonable stance @MrTimscampi and I agree that we shouldn't just jump on this bandwaggon because there's a bunch of news stories about project switching their terms this week. If we're going to do this, let's do this right, and that will involve a lot of code tweaks and consultation with our myriad of users, contributors, and translators (note - most of these translations are literal translations of ""black list"" and ""white list"", so for this to actually be anything other than posturing, we'd need to change them all).",True,True,17,35656.933333333334
jellyfin_____jellyfin-web_____1423,2020-06-16T22:58:54Z,True,jellyfin_____jellyfin-web_____1423_____645053109,"Adding the relevant tags, to make sure it's not merged before being discussed further.",True,True,17,35656.933333333334
jellyfin_____jellyfin-web_____1423,2020-06-16T23:04:08Z,True,jellyfin_____jellyfin-web_____1423_____645054611,"I mean, I vote no if it matters. [Blacklist](https://en.wikipedia.org/wiki/Blacklist_(computing)) and [whitelist](https://en.wikipedia.org/wiki/Whitelisting) have clearly defined meanings in computing. [The term blacklist don't even have racist origins, it was first used to describe a list of people the king had deemed threats to him *in a drama*](https://en.wikipedia.org/wiki/Blacklisting#Origins_of_the_term) (and whitelisting literally only exists in computing as the opposite of blacklisting so...).

To me this is needless pandering and will only serve to muddy the waters on terms used for decades over problems that don't exist for no benefit to the people it supposedly harms (but will anger those less understanding causing them harm over literally nothing).",True,True,17,35656.933333333334
jellyfin_____jellyfin-web_____1423,2020-06-16T23:08:31Z,True,jellyfin_____jellyfin-web_____1423_____645056009,"I agree, I did not wish to cause any debates or any controversy by this pr. With software like Chrome/Android/GitHub going in the direction of removing the above references, I thought it would be a good step for Jellyfin to follow in a similar direction.

> 1. Go down the chain. Don't only change the surface terms, that's ridiculous.

As for going down the chain. These are the only references to blacklist/whitelist in Jellyfin-web. I can continue and change the values in the Jellyfin server side if we decide to do this.

> 2\. Enact a Code of Conduct to go with this.

There is a [Contributor Covenant Code of Conduct](https://help.github.com/en/github/building-a-strong-community/adding-a-code-of-conduct-to-your-project) available as the default code of conduct that is produced by Github, this could be used as a starting point. 

> 3\. Build and discuss a list of the potentially offensive terms with all users of Jellyfin, emphasizing the need for feedback from different cultures and walks of life.

With regards to above, an issue could be created discussing potentially offensive terms and they could be changed/removed as necessary.

I will be more than happy to close this if it felt that the changes should not be made. ",True,True,17,35656.933333333334
jellyfin_____jellyfin-web_____1423,2020-06-16T23:33:38Z,True,jellyfin_____jellyfin-web_____1423_____645063236,"No worries @Influence365 I think it was inevitably going to be brought up given the very high profile discussions of this over the past week. I'm hesitant to open an issue because I'm certain it will have to be locked very quickly, which defeats the entire purpose of an issue about it, but it's definitely something to keep in mind.

Let's let this whole thing simmer for a bit, we can leave this PR open, and revisit this in a couple weeks once the dust settles. Given that I'm *just* about to announce the feature freeze for 10.6.0 it's not the best time to go through the whole codebase anyways.

For 1 we're referring to the actual variable that this sets, `IsRemoteIPFilterBlacklist`, which is a config option that gets saved and used in the backend, so this would touch the backend code as well.",True,True,17,35656.933333333334
jellyfin_____jellyfin-web_____1423,2020-06-17T00:26:27Z,True,jellyfin_____jellyfin-web_____1423_____645077802,"For what its worth, I agree with @joshuaboniface @Influence365. With all this stupid term changing going on, *someone* was going to bring it up. Glad it was you rather than someone militantly PC :)

I'm sure we can figure something out given time, even if its just keeping it all as is.",True,True,17,35656.933333333334
Skyrat-SS13_____Skyrat13_____2578,2020-06-17T02:46:43Z,True,Skyrat-SS13_____Skyrat13_____2578_____435568690,"## About The Pull Request

ports the following PRs from TG:
https://github.com/tgstation/tgstation/pull/48959
https://github.com/tgstation/tgstation/pull/49634
https://github.com/tgstation/tgstation/pull/50558

The only change i did so far is limb separation and making cloning cost biomass, generated by throwing meat on the clone pod - everything else will work really the same. The TG wiki services just fine.
https://tgstation13.org/wiki/Guide_to_Wounds

**List of changes to do:**
[] Generally test and bugfix.
[] Making bleed suppression limb-based, like the bleeding is now.
[] Refactor all current clothing to have correctly set ""wound"" armor values.
[] Make the cloner also takes credits to clone.
[] Fix scars being shown through clothing.
[] Make scars more easily curable.
[] Making scars a set of character setup options

## Why It's Good For The Game

fuck dumb boo boo ointment fixes all medicine

## Changelog
:cl: Bob Joga, Ryll-Ryll, TG Station
refactor: Medicine has been pretty much entirely overhauled. See PR #2575 on github for more info.
/:cl:
",True,True,29,43044.86666666667
Skyrat-SS13_____Skyrat13_____2578,2020-06-17T02:49:04Z,True,Skyrat-SS13_____Skyrat13_____2578_____645115181,"Oooh, don't be such a baby. Ribs grow back!




















_No they dont._",True,True,29,43044.86666666667
freeipa_____freeipa_____4809,2020-06-17T03:46:57Z,True,freeipa_____freeipa_____4809_____645129784,Should this be for git master only?,True,True,6,17007.533333333333
Icinga_____icinga2_____8046,2020-06-17T06:22:31Z,True,Icinga_____icinga2_____8046_____645176859,Again not transparent without description :(,True,True,4,12629.566666666668
Icinga_____icinga2_____8046,2020-06-17T08:20:29Z,True,Icinga_____icinga2_____8046_____645229273,Intentionally.,True,True,4,12629.566666666668
BoHBranch_____BoH-Bay_____920,2020-06-17T21:13:34Z,True,BoHBranch_____BoH-Bay_____920_____645628105,The issue with the editor needs to be fixed before this is merged.,True,True,12,38960.683333333334
jellyfin_____jellyfin-web_____1423,2020-06-17T21:17:07Z,True,jellyfin_____jellyfin-web_____1423_____645629738,">Actually, can we replace the ""blacklist"" label in all the translations too? Otherwise those will become orphaned and force retranslation.

Please also consider that ""blacklist"" and ""whitelist"" are easy to translate into other languages where translations of these words don't include colours ""black"" and ""white"" and none non-English native speaker ever thinks about linking them with some racial context. Changing wording in invisible for users variable names is one thing, but changing visible translations is another thing. Maybe it's just my poor language skills, but I have no idea how to translate blocklist and allowlist into my native language without it looking bad and amateurish (making up words), online dictionaries aren't helping.",True,True,17,35656.933333333334
jellyfin_____jellyfin-web_____1423,2020-06-17T22:12:39Z,True,jellyfin_____jellyfin-web_____1423_____645653361,"@agilob Indeed, for fun I spot-checked this and at least 5 of the random languages I checked were literal translations of ""black list"" or ""white list"", as diverse as French, Finnish, and Turkish. Clearly this is not just a simple replacement and goes deeper to many other languages.

If the entire tech world wants to change this, that's fine, but I don't see much reason for us to be rushing to the forefront of it. I'd rather see how other well-internationalized projects handle it first and use their examples.",True,True,17,35656.933333333334
Skyrat-SS13_____Skyrat13_____2578,2020-06-18T01:33:34Z,True,Skyrat-SS13_____Skyrat13_____2578_____645715371,I think it's about ready for a testmerge.,True,True,29,43044.86666666667
BoHBranch_____BoH-Bay_____920,2020-06-19T12:08:43Z,True,BoHBranch_____BoH-Bay_____920_____646600681,How the fuck do you expect me to find the issue then? I never had this problem on github and I've checked all dreamseaker options.,True,True,12,38960.683333333334
raspberrypi_____linux_____3635,2020-06-19T22:01:05Z,True,raspberrypi_____linux_____3635_____646875209,"All the pages you reference that argue for multicore-aware scheduling are at least 10 years old. Absent a demonstration of a workload that gains a benefit from your proposed change, I remain unconvinced.
",True,True,16,36970.23333333333
raspberrypi_____linux_____3635,2020-06-19T22:08:16Z,True,raspberrypi_____linux_____3635_____646876972,"> All the pages you reference that argue for multicore-aware scheduling are at least 10 years old. Absent a demonstration of a workload that gains a benefit from your proposed change, I remain unconvinced.

...Newton's work is a few hundred years old, but they're still used in physics. If people claimed benefit then, it probably does now, especially since no one is reporting regressions in its use. 

I don't know how I am supposed to drum up recent documentation when I am a person, and not a company/organization with the tools/resources to completely document a Kernel feature I did not write/contribute/design/plan/implement.

I am more than happy to demonstrate a workload for you, but we are not in Goldy Locks and the Three Bears. Tell me which workloads you would like benchmarks to see if a benefit exists, and I will be happy to conduct and measure them for you, but I am not going to run random benchmarks for you to end up telling me ""This doesnt prove anything, xyz benchmark wouldnt benefit from it"". Tell what you would like, and I will do it.",True,True,16,36970.23333333333
raspberrypi_____linux_____3635,2020-06-19T22:17:24Z,True,raspberrypi_____linux_____3635_____646879122,"You're proposing a change to our default kernel config. If you propose such a change, you should give at least one reproducible example of where it is of benefit on the target platform - i.e. a Pi.",True,True,16,36970.23333333333
raspberrypi_____linux_____3635,2020-06-19T22:21:58Z,True,raspberrypi_____linux_____3635_____646880186,"I've not looked at the details of the changes caused by CONFIG_SCHED_MC=y, but I do note that it is included in arch/arm64/configs/defconfig. The commit responsible says:
```diff
commit aa644fa64c25ab2231a0fa9464892f5579d4e161
Author: Dietmar Eggemann <dietmar.eggemann@arm.com>
Date:   Mon Oct 19 17:55:49 2015 +0100

    ARM64: Enable multi-core scheduler support by default
    
    Make sure that the task scheduler domain hierarchy is set-up correctly
    on systems with single or multi-cluster topology.
    
    Signed-off-by: Dietmar Eggemann <dietmar.eggemann@arm.com>
    Acked-by: Punit Agrawal <punit.agrawal@arm.com>
    Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>

diff --git a/arch/arm64/configs/defconfig b/arch/arm64/configs/defconfig
index c8ccda16e079..5f760347aee2 100644
--- a/arch/arm64/configs/defconfig
+++ b/arch/arm64/configs/defconfig
@@ -51,6 +51,7 @@ CONFIG_PCI=y
 CONFIG_PCI_MSI=y
 CONFIG_PCI_XGENE=y
 CONFIG_SMP=y
+CONFIG_SCHED_MC=y
 CONFIG_PREEMPT=y
```
",True,True,16,36970.23333333333
raspberrypi_____linux_____3635,2020-06-20T03:52:56Z,True,raspberrypi_____linux_____3635_____646934614,"> You're proposing a change to our default kernel config. If you propose such a change, you should give at least one reproducible example of where it is of benefit on the target platform - i.e. a Pi.

...im just proposing this changed due to every other configuration for the armv7 kernels has this option enabled; as in its default. So you can stop trying to act like you're the Raspberry Pi Linux Kernel Linus Torvalds, when you clearly aren't.



> I've not looked at the details of the changes caused by CONFIG_SCHED_MC=y, but I do note that it is included in arch/arm64/configs/defconfig. The commit responsible says:
> 
> ```diff
> commit aa644fa64c25ab2231a0fa9464892f5579d4e161
> Author: Dietmar Eggemann <dietmar.eggemann@arm.com>
> Date:   Mon Oct 19 17:55:49 2015 +0100
> 
>     ARM64: Enable multi-core scheduler support by default
>     
>     Make sure that the task scheduler domain hierarchy is set-up correctly
>     on systems with single or multi-cluster topology.
>     
>     Signed-off-by: Dietmar Eggemann <dietmar.eggemann@arm.com>
>     Acked-by: Punit Agrawal <punit.agrawal@arm.com>
>     Signed-off-by: Catalin Marinas <catalin.marinas@arm.com>
> 
> diff --git a/arch/arm64/configs/defconfig b/arch/arm64/configs/defconfig
> index c8ccda16e079..5f760347aee2 100644
> --- a/arch/arm64/configs/defconfig
> +++ b/arch/arm64/configs/defconfig
> @@ -51,6 +51,7 @@ CONFIG_PCI=y
>  CONFIG_PCI_MSI=y
>  CONFIG_PCI_XGENE=y
>  CONFIG_SMP=y
> +CONFIG_SCHED_MC=y
>  CONFIG_PREEMPT=y
> ```

I noticed this as well, but I didn't bother mentioning it at the time of my initial post due to me assuming the defconfig is just some generic profile made by a platform maintainer for the kernel.",True,True,16,36970.23333333333
Skyrat-SS13_____Skyrat13_____2578,2020-06-20T11:33:07Z,True,Skyrat-SS13_____Skyrat13_____2578_____646983346,"Nice, more excuses to do surgery so I can make completely unnecessary modifications to people right after fixing the thing that they needed surgery for in the first place.",True,True,29,43044.86666666667
raspberrypi_____linux_____3635,2020-06-20T11:35:12Z,True,raspberrypi_____linux_____3635_____646983521,"> ...im just proposing this changed due to every other configuration for the armv7 kernels has this option enabled; as in its default. So you can stop trying to act like you're the Raspberry Pi Linux Kernel Linus Torvalds, when you clearly aren't.
> 

Hmm, when asking for changes, probably best not to offend one of the Raspberry Pi engineers who would actually be responsible for making the change.

He is one of our Torvald's btw.",True,True,16,36970.23333333333
raspberrypi_____linux_____3635,2020-06-20T14:55:40Z,True,raspberrypi_____linux_____3635_____647005911,"You know what, it’s not worth it.

I’m not dealing with programmers ego for a device targeted at kids.",True,True,16,36970.23333333333
raspberrypi_____linux_____3635,2020-06-20T18:41:28Z,True,raspberrypi_____linux_____3635_____647031767,"> I agree, the change was really not worth it.

Yeah, why on earth would you wanna make sure that the configuration match the armv7 kernel configuration.

Granted with all the warnings that are generated by the compiler for all the BCM drivers you probably think that's a good thing.",True,True,16,36970.23333333333
BoHBranch_____BoH-Bay_____920,2020-06-21T21:20:52Z,True,BoHBranch_____BoH-Bay_____920_____647183248,https://help.github.com/en/github/using-git/configuring-git-to-handle-line-endings,True,True,12,38960.683333333334
dirigeants/klasa-dashboard-hooks/348,2020-06-22T07:16:15Z,False,5ef1ab40bd354349e69c935b,Superseded by #350.,True,False,1,0.0
Skyrat-SS13_____Skyrat13_____2578,2020-06-22T21:44:55Z,True,Skyrat-SS13_____Skyrat13_____2578_____647785008,Gonna keep this drafted cause i'll have to test it a bit. Don't want a disastrous testmerge.,True,True,29,43044.86666666667
openssl_____openssl_____12089,2020-06-23T08:03:13Z,True,openssl_____openssl_____12089_____444037298,typo,True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-23T08:04:00Z,True,openssl_____openssl_____12089_____444037739,confusion in the patch between primary/parent,True,True,99,35361.316666666666
freeipa_____freeipa_____4809,2020-06-23T08:17:17Z,True,freeipa_____freeipa_____4809_____647987094,"master:

* 523f70ae46127161556a0881fc9a01e138a90666 Terminology improvements: CA renewal
* 5c09dcdb981df7837ac1bb75547d23fc7d8946d0 Grammar: whitespace is a word
* 3ce816ba772ffae6b0bd05e4589727513fa76e3c Terminology improvements: use allow list
* 3ec1b77f6a03886936299a9d34ed8fd640c3984d Terminology improvements: use block list

",True,True,6,17007.533333333333
BoHBranch_____BoH-Bay_____920,2020-06-23T09:54:42Z,True,BoHBranch_____BoH-Bay_____920_____648037969,"Not gonna bother with this, I personally dont see the issue with this but okay.",True,True,12,38960.683333333334
openssl_____openssl_____12089,2020-06-23T13:05:35Z,True,openssl_____openssl_____12089_____648132719,"The ""parent"" -> ""primary"" replacement is actually a mistake, as Mark already noted. It should be ""master"" -> ""primary"".",True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-23T18:05:26Z,True,openssl_____openssl_____12089_____648327103,"> The ""parent"" -> ""primary"" replacement is actually a mistake, as Mark already noted. It should be ""master"" -> ""primary"".

I believe we're both pointing out the same thing, that there are places where it currently says ""parent"" that should say ""primary"" ",True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-23T18:24:03Z,True,openssl_____openssl_____12089_____444421626,This probably slipped in by mistake,True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-23T18:28:34Z,True,openssl_____openssl_____12089_____648338490,"A `RAND_DRBG` instance `drbg` has an optional `parent` from which it reseeds. Nowhere is it assumed that the reseeding chain is limited to two elements, that's why it is called `parent`, not `master` resp. `primary`. Changing `drbg->parent` to `drbg->primary` is a mistake.

https://github.com/openssl/openssl/blob/49a36a528a48bb6b8421b8a0363adb85e63d71fe/crypto/rand/rand_local.h#L222-L226
",True,True,99,35361.316666666666
openssl_____openssl_____12089,2020-06-23T18:32:07Z,True,openssl_____openssl_____12089_____648340219,"Ok, forget my last comment. Either I looked in the wrong place, or the error has been corrected by Rich in the meantime.",True,True,99,35361.316666666666
alisonamerico/rebirth/1170,2020-06-23T20:17:15Z,False,5ef2649fbd35433c8899b960,Closing this in favor of #1172,True,False,2,0.0
alisonamerico/rebirth/1170,2020-06-23T20:17:15Z,False,5ef2649fbd35433d0cc9c413,Closing this in favor of #1172,True,False,2,0.0
PX4/PX4-Autopilot/14502,2020-06-26T03:47:42Z,False,600fa94fbd35434ea685bb44,"This issue has been automatically marked as stale because it has not had recent activity. Thank you for your contributions.
",True,False,4,437748.98333333334
opencv_____opencv_____17185,2020-06-26T10:53:55Z,True,opencv_____opencv_____17185_____650117527,"> @l-bat @dkurt
Is Yolov4 more than 2 times slower than Yolov3 due to MISH-activation?

@AlexeyAB, please take a look at Mish optimization for CPU: https://github.com/opencv/opencv/pull/17624",True,True,22,83544.73333333334
Skyrat-SS13_____Skyrat13_____2578,2020-06-26T14:43:20Z,True,Skyrat-SS13_____Skyrat13_____2578_____650216676,gib plox,True,True,29,43044.86666666667
python_____peps_____1470,2020-06-26T22:00:59Z,True,python_____peps_____1470_____440804282,"Instead of requiring that comments be written in Strunk & White Standard English, require instead that English-language comments be clear and easily understandable by other English speakers. This accomplishes the same goal without alienating or putting up barriers for people (especially people of color) whose native dialect of English is not Standard English. This change is a simple way to correct that while maintaining the original intent of the requirement. This change also makes the requirement more clear to people who are not familiar with Strunk & White, since for programmers, the main relevant aspect of that standard is ""be clear and concise;"" simply saying that instead of referencing Strunk & White communicates this more effectively. 
",True,True,4,11066.8
python_____peps_____1470,2020-06-28T21:02:27Z,True,python_____peps_____1470_____650821292,"The diff of what was put here in the PR description vs what went in the commit message:

```diff
--- 1-description	2020-06-28 23:52:57.905652782 +0300
+++ 2-commit-message	2020-06-28 23:51:24.953277774 +0300
@@ -1,9 +1,8 @@
 Instead of requiring that comments be written in Strunk & White Standard English, require
 instead that English-language comments be clear and easily understandable by other English
-speakers. This accomplishes the same goal without alienating or putting up barriers for people (especially people of color)
+speakers. This accomplishes the same goal without upholding relics of white supremacy.
+Many native English speakers do not use Standard English as their native dialect, so
+requiring conformation to Standard English centers whiteness in an inappropriate and
+unnecessary way, and can alienate and put up barriers for people of color and those
 whose native dialect of English is not Standard English. This change is a simple way to correct
 that while maintaining the original intent of the requirement.
-This change also makes the requirement more clear to people who are not familiar with
-Strunk & White, since for programmers, the main relevant aspect of that standard is
-""be clear and concise;"" simply saying that instead of referencing Strunk & White
-communicates this more effectively.
```

Some feedback on the python-ideas mailing list to which the original report was posted:
* https://mail.python.org/archives/list/python-ideas@python.org/message/5M56KKP2S3POELVGTHGXGWANEVK72R3E/
* https://mail.python.org/archives/list/python-ideas@python.org/message/N7Z4HDYP7CV75GRCBLMZGSFEDZTFIVQF/
* https://mail.python.org/archives/list/python-ideas@python.org/message/J2LC553NWBTANBRIPI52CQW53JXCCUTH/ 
",True,True,4,11066.8
programming-in-th/programming.in.th/477,2020-06-29T06:23:30Z,False,5ef98a21bd3543233c3ef168,"This pull request is being automatically deployed with Vercel ([learn more](https://vercel.link/github-learn-more)).
To see the status of your deployment, click below or on the icon next to each commit.

  🔍 Inspect: https://vercel.com/prginth/programminginth/jwc083xoo
  ✅ Preview: *In Progress*

_([29889ad](https://github.com/programming-in-th/programming.in.th/pull/477/commits/29889ad4ceb64352cd27312698361c6e97385473), update in progress)_",True,False,3,3975.133333333333
programming-in-th/programming.in.th/477,2020-06-29T06:23:30Z,False,5ef98a21bd3543233c3ef169,"This pull request is being automatically deployed with Vercel ([learn more](https://vercel.link/github-learn-more)).
To see the status of your deployment, click below or on the icon next to each commit.

  🔍 Inspect: https://vercel.com/prginth/programminginth/jwc083xoo
  ✅ Preview: *In Progress*

_([29889ad](https://github.com/programming-in-th/programming.in.th/pull/477/commits/29889ad4ceb64352cd27312698361c6e97385473), update in progress)_",True,False,3,3975.133333333333
micke_____valid_email2_____153,2020-06-29T08:58:29Z,True,micke_____valid_email2_____153_____441298453,"add hey.com
![7BCBF776-00DE-4A1B-A8D9-79D5D3D9B4B1](https://user-images.githubusercontent.com/67554573/85953667-6c251000-b972-11ea-88b1-e3a81f0a900b.png)
",True,True,29,2006.2
PainsPerdus_____gboi-rocket_____102,2020-06-29T23:10:57Z,True,PainsPerdus_____gboi-rocket_____102_____441694388,,True,True,4,7.633333333333334
PainsPerdus_____gboi-rocket_____102,2020-06-29T23:15:53Z,True,PainsPerdus_____gboi-rocket_____102_____651416970,I agree with these changes!,True,True,4,7.633333333333334
PainsPerdus_____gboi-rocket_____102,2020-06-29T23:18:12Z,True,PainsPerdus_____gboi-rocket_____102_____651417635,You guys are too tired. go get some sleep ,True,True,4,7.633333333333334
PainsPerdus_____gboi-rocket_____102,2020-06-29T23:18:35Z,True,PainsPerdus_____gboi-rocket_____102_____651417752,"We know
But I have to finish this IA",True,True,4,7.633333333333334
micke_____valid_email2_____153,2020-06-29T23:29:52Z,True,micke_____valid_email2_____153_____651421275,I’m not so sure that adding hey.com is such a great idea as they also provide legitimate addresses. How are these random addresses formatted?,True,True,29,2006.2
micke_____valid_email2_____153,2020-06-30T02:46:36Z,True,micke_____valid_email2_____153_____651489501,"@micke 
> ""All temp addresses follow a consistent format of 12 digits with dashes separating each group of 4 digits. So, temporary addresses are all of the formant ####-####-####@hey.com"" 

See this comment from Hey's Director of Operations (and why they declined OP's PR) https://github.com/ivolo/disposable-email-domains/pull/825#issuecomment-651223046",True,True,29,2006.2
micke_____valid_email2_____153,2020-06-30T03:33:13Z,True,micke_____valid_email2_____153_____651506832,Also @dhh commented on a [similar PR](https://github.com/martenson/disposable-email-domains/pull/244#issuecomment-651499217),True,True,29,2006.2
micke_____valid_email2_____153,2020-06-30T03:38:15Z,True,micke_____valid_email2_____153_____651508652,"@micke This list also includes cock.li as disposable, those accounts don’t expire and are far more likely to remain in use past 2 weeks than hey.com addresses.

Besides the randomized addresses, most hey.com users are signed up to the service on a 2 week trial basis. Presumably the purpose of the list is to filter out short-lived disposable addresses, adding hey.com certainly serves that purpose.


Try signing up for a non-random address at https://app.hey.com/sign_up/welcome , the signup flow is essentially the same as at cock.li (no email or phone verification) but the account will expire in 14 days.",True,True,29,2006.2
micke_____valid_email2_____153,2020-06-30T04:18:07Z,True,micke_____valid_email2_____153_____651521661,"HEY is a new email service with over 150,000 users and thousands of paying accounts. There is a separate service mandated by Apple that uses a specific 12 digit email address in the form of ####-####-#### that can be used for 14 days. You could create a similar address for a similar purpose on Gmail or any other service. These addresses are heavily limited and scrutinized to prevent abuse. It represents a vanishingly small part of overall use of HEY. Please close this PR. You can find more information about HEY on https://hey.com. Thank you.

Also, check the account that opened this PR. It’s an anonymous account, created today, which has gone around to repos with block lists trying to get HEY marked. The campaign has been reported to GitHub for harassment.",True,True,29,2006.2
micke_____valid_email2_____153,2020-06-30T04:30:09Z,True,micke_____valid_email2_____153_____651525175,"> Try signing up for a non-random address at https://app.hey.com/sign_up/welcome , the signup flow is essentially the same as at cock.li (no email or phone verification) but the account will expire in 14 days.

Let me correct you there. Disposable emails *can only* be signed up via the iOS app, and was implemented so that Apple allows the app. That web signup link is for *permanent, non-disposable* emails, and is no different than singing up for FastMail, Gmail or Yahoo. 
",True,True,29,2006.2
micke_____valid_email2_____153,2020-06-30T04:32:41Z,True,micke_____valid_email2_____153_____651526061,">These addresses are heavily limited and scrutinized to prevent abuse. 

Could you describe how that works?



> > Try signing up for a non-random address at https://app.hey.com/sign_up/welcome , the signup flow is essentially the same as at cock.li (no email or phone verification) but the account will expire in 14 days.
> 
> Let me correct you there. Disposable emails _can only_ be signed up via the iOS app, and was implemented so that Apple allows the app. That web signup link is for _permanent, non-disposable_ emails, and is no different than singing up for FastMail, Gmail or Yahoo.

The addresses from that link stop working after 14 days, no? Fastmail, Gmail and Yahoo all require phone verification.",True,True,29,2006.2
micke_____valid_email2_____153,2020-06-30T04:41:06Z,True,micke_____valid_email2_____153_____651529226,"> The addresses from that link stop working after 14 days, no? Fastmail, Gmail and Yahoo all require phone verification.

Only if you don't pay after the trial. Same as with any trial. 

Also I just created both a Gmail and a Yahoo account, didn't get asked for any kind of verification. 

",True,True,29,2006.2
micke_____valid_email2_____153,2020-06-30T04:48:59Z,True,micke_____valid_email2_____153_____651532000,"Happy to pile on here, but I also managed to create a Gmail account just now without a phone number, using a fake name, birthday, and gender. Not sure how you can include hey.com as burner mail and exclude Gmail by that logic.",True,True,29,2006.2
micke_____valid_email2_____153,2020-06-30T04:50:21Z,True,micke_____valid_email2_____153_____651532573,"> > The addresses from that link stop working after 14 days, no? Fastmail, Gmail and Yahoo all require phone verification.
> 
> Only if you don't pay after the trial. Same as with any trial.
> 
> Also I just created both a Gmail and a Yahoo account, didn't get asked for any kind of verification.

Trials aren't exactly common in the email space.

@fm and @esmcelroy try to do the same in an incognito tab, both yahoo and google have heaps of tracking cookie data allowing them to decide whether or not you're a real user.

Here's what happened when I tried to create gmail and yahoo accounts in an incognito tab just now:

![2020-06-30-054223_844x577_scrot](https://user-images.githubusercontent.com/67554573/86084354-94a52b00-ba94-11ea-986e-e76d547c89e7.png)
![2020-06-30-054844_606x929_scrot](https://user-images.githubusercontent.com/67554573/86084687-6247fd80-ba95-11ea-95f1-d3097d63a961.png)
",True,True,29,2006.2
micke_____valid_email2_____153,2020-06-30T04:52:38Z,True,micke_____valid_email2_____153_____651533518,"I just used the Gmail app. That’s the workflow for the temp hey email, no?
I got a Gmail account up and running in seconds from the app, no phone verification required. Skipped the step quite easily.",True,True,29,2006.2
micke_____valid_email2_____153,2020-06-30T04:55:37Z,True,micke_____valid_email2_____153_____651534600,"> I just used the Gmail app. That’s the workflow for the temp hey email, no?
> I got a Gmail account up and running in seconds from the app, no phone verification required. Skipped the step quite easily.

The Gmail app extracts heaps of data from your phone in order to decide whether or not to ask you for phone confirmation, this isn't exactly comparable.

>That’s the workflow for the temp hey email, no?

You can also sign up for a hey email on the website. Only the randomly generated addresses require you to use the app. The signup flow for both is exactly the same.",True,True,29,2006.2
micke_____valid_email2_____153,2020-06-30T04:58:52Z,True,micke_____valid_email2_____153_____651535662,"How about Safari private browsing? Is that comparable enough? Easily skipped past the add a phone number/backup email step. I now have two burner Gmail accounts readily available with none of my real info required.

Edit: We haven’t even talked about Microsoft Account emails yet. Those things are so fast and disposable to set up.
And another addendum, isn’t abuse potential low for hey.com email addresses, since the only usage mechanism is the (web)app? There’s no SMTP/IMAP/POP3 configuration anywhere to be found....",True,True,29,2006.2
micke_____valid_email2_____153,2020-06-30T05:02:47Z,True,micke_____valid_email2_____153_____651536973,"I can’t reproduce that, perhaps google just really likes your IP :) Given that they have great visibility into your outgoing traffic, it makes sense for them to be able to make these decisions without cookies.


![FDEF9C78-4B5B-43EB-B9EB-98009D901273](https://user-images.githubusercontent.com/67554573/86085480-8f99a900-ba9f-11ea-83ff-bc89ede95232.png)
",True,True,29,2006.2
micke_____valid_email2_____153,2020-06-30T05:05:53Z,True,micke_____valid_email2_____153_____651538285,"Well, we know @dhh was having problems with the validation on the Apple App Store. Here we have 2 options. Since clearly is a disposable email address, probably the hey team and @dhh should change the domain for the disposable email addresses like @not-hey.com or something to differentiate the subscription accounts from the disponsable ones. Or we can forget about this until the issue with apple is solved. ",True,True,29,2006.2
micke_____valid_email2_____153,2020-06-30T05:11:39Z,True,micke_____valid_email2_____153_____651540680,">Or we can forget about this until the issue with apple is solved.

This seems like a really easy problem for @dhh to fix, I'm not sure that it really makes sense to blame apple here. Odds are the ""issue with apple"" won't be solved anytime soon anyway, bigger players like netflix have been fighting about this for years.

It's not really too much to ask for hey to disable the creation of disposable addresses until they can put them on a separate domain. And unless Hey are going to add further verification requirements for the free trial, they should probably be treated the same way as cock.li and other similar providers.",True,True,29,2006.2
micke_____valid_email2_____153,2020-06-30T05:23:28Z,True,micke_____valid_email2_____153_____651545537,"I get your point on the comparation with similar services, but since your account was created just for adding hey to email verification repos, is suspicious. I think we need to wait for a response from hey about this, to know what is the plan with the disponsable accounts.",True,True,29,2006.2
micke_____valid_email2_____153,2020-06-30T05:29:43Z,True,micke_____valid_email2_____153_____651548118,"> I get your point on the comparation with similar services, but since your account was created just for adding hey to email verification repos, is suspicious. 

Given that @dhh [decided to start a witch-hunt](https://twitter.com/dhh/status/1277805249147752449) with his 500k twitter followers, I think I made the right call using a throwaway account for this.

In any case, I think the PR should be evaluated on its technical merits. As of right now it's quite clear that Hey is a disposable email provider.

>I think we need to wait for a response from hey about this, to know what is the plan with the disponsable accounts.

Hey did respond earlier in this thread, they don't seem to have a clear plan besides using this as a PR opportunity by ranting about ""harassment"" on twitter.",True,True,29,2006.2
micke_____valid_email2_____153,2020-06-30T08:00:34Z,True,micke_____valid_email2_____153_____651623164,"As mentioned here:

https://github.com/ivolo/disposable-email-domains/pull/825#issuecomment-651586238

> In case anyone wasn't aware, @tuptuptuu is a throwaway account seemingly created solely for the purpose of adding the hey.com domain to disposable email lists. See similar pull requests this person has filed:

>    andreis/disposable#50
>   martenson/disposable-email-domains#244
    wesbos/burner-email-providers#226
    micke/valid_email2#153

Clearly, @tuptuptuu is a cancerous account. What's the best reason to report it to GitHub and get it taken down? Harassment? Spam?
",True,True,29,2006.2
micke_____valid_email2_____153,2020-06-30T08:38:22Z,True,micke_____valid_email2_____153_____651646762,"@Phillipus
> Clearly, @tuptuptuu is a cancerous account. What's the best reason to report it to GitHub and get it taken down? Harassment? Spam?

Do you object to the PR or the use of throwaway accounts on github? If you've got nothing to say in regards to the PR I suggest you take this up with github support, although I think they'll be unhappy with your choice of words here.

FWIW if you read the thread you'll notice that the information you brought up was already addressed by dhh in an earlier comment.",True,True,29,2006.2
micke_____valid_email2_____153,2020-06-30T08:54:06Z,True,micke_____valid_email2_____153_____651656457,"Hey.com's main product is not the disposable service. If we are looking for how it *could* be exploited as such, we should block all of Gmail, live.com, yahoo.com, hotmail.com and multiple others. I have researched the topic extensively before and it is suprisingly easy to create burner Gmail accounts, and even easier to create live.com accounts that are untraceable. From a fraud perspecitve (since this is @tuptuptuu's main point), Hey.com does not carry the same level of risk as the ones mentioned above. It is a fully legitimate email service and it's domain does not deserve to be blacklisted any more than gmail.com or live.com

@tuptuptuu seems to have personal grudges against @dhh and it is unnaccaptable to change a list like this without proper evidence. You cherry picked your Gmail signup screenshots. There are a million ways to not get phone number prompt, and there are services that offer clean phone numbers to pass that verification - for pennies. This is not heresay from the internet, I have used them extensively before with very high level of success. I ask everybody who is responsible for the merge of this PR to not accept this change. It is solely based on personal reasons and Hey.com does not pose a real threat at all from a fraud and technical perspective.

edit:
I have to add that I am not and likely never will be a Hey.com user. I have a problem with blacklisting legitimate great email domains such as it is happening now, and it has been happening with ProtonMail (where I am a long term customer) - this hits home to many people who are not *throw hands up* Gmail fanboys and see the everyday difficulties of non-monopoly email providers.",True,True,29,2006.2
micke_____valid_email2_____153,2020-06-30T09:03:00Z,True,micke_____valid_email2_____153_____651662163,Just why is this PR not closed yet? It's clear that @tuptuptuu has something against @dhh and his new email service. Please close this. ,True,True,29,2006.2
micke_____valid_email2_____153,2020-06-30T09:09:23Z,True,micke_____valid_email2_____153_____651665962,"@AlexJuca 
> Just why is this PR not closed yet? It's clear that @tuptuptuu has something against @dhh and his new email service. Please close this.

Why do you think that? I had nothing against @dhh until he decided to send his 500k twitter followers after me.

I think it's far clearer that hey.com does in fact offer a disposable email service.

@what-name 
>From a fraud perspecitve (since this is @tuptuptuu's main point)

It's not. My only point is that hey.com is a disposable email provider.

>it is unnaccaptable to change a list like this without proper evidence

There's proper evidence in the OP.  @dhh has confirmed that hey.com does in fact offer disposable emails.

Again, what makes you think that hey.com is much better than cock.li? At least cock.li addresses don't expire.",True,True,29,2006.2
micke_____valid_email2_____153,2020-06-30T09:10:01Z,True,micke_____valid_email2_____153_____651666307,"Sorry for not closing this earlier, due to time zone differences and heavy work pressure i haven't hade the time to address it.

I always try to strive to not block legitimate email providers in this gem. I would rather it let some addresses through that are actually throw-aways than to block legitimate addresses as that could often be more harming to the users business.

If you still would like to block hey.com you can do this in your application specifically by using the local block list.",True,True,29,2006.2
micke_____valid_email2_____153,2020-06-30T10:09:43Z,True,micke_____valid_email2_____153_____651698050,"> @AlexJuca
> 
> > Just why is this PR not closed yet? It's clear that @tuptuptuu has something against @dhh and his new email service. Please close this.
> 
> Why do you think that? **I had nothing against @dhh until he decided to send his 500k twitter followers after me.**
> 

I think that clearly summarises the situation.

@tuptuptuu Don't you think there's enough harm in the world already without you adding to it? Closing your cancerous sock puppet account would undo the harm.",True,True,29,2006.2
micke_____valid_email2_____153,2020-06-30T10:14:55Z,True,micke_____valid_email2_____153_____651700845,"> > @AlexJuca
> > > Just why is this PR not closed yet? It's clear that @tuptuptuu has something against @dhh and his new email service. Please close this.
> > 
> > 
> > Why do you think that? **I had nothing against @dhh until he decided to send his 500k twitter followers after me.**
> 
> I think that clearly summarises the situation.
> 
> @tuptuptuu Don't you think there's enough harm in the world already without you adding to it? Closing your cancerous sock puppet account would undo the harm.

What harm am I adding?",True,True,29,2006.2
micke_____valid_email2_____153,2020-06-30T17:52:07Z,True,micke_____valid_email2_____153_____651948327,@tuptuptuu You did this in bad faith and it must be sad to be you. Please close this account forever and come back to your normal life.,True,True,29,2006.2
micke_____valid_email2_____153,2020-06-30T18:24:41Z,True,micke_____valid_email2_____153_____651964944,"> @tuptuptuu You did this in bad faith and it must be sad to be you. Please close this account forever and come back to your normal life.

I’m sorry you think that. There’s no bad faith here, hey.com offers disposable email addresses. It’s perfectly reasonable to list them as such.",True,True,29,2006.2
python_____peps_____1470,2020-07-01T10:18:55Z,True,python_____peps_____1470_____652331856,"Black lives matter, so ""White"" should be wiped out.

Totally understandable :)",True,True,4,11066.8
programming-in-th/programming.in.th/477,2020-07-02T00:38:38Z,False,5efd2ddabd35435e2124f626,Superseded by #493.,True,False,3,3975.133333333333
publiclab/spectral-workbench/505,2020-07-02T03:15:54Z,False,5efea8bfbd35437ba665f599,"Looks like tzinfo is no longer updatable, so this is no longer needed.",True,False,1,0.0
ioBroker/ioBroker.javascript/610,2020-07-03T08:00:55Z,False,5efff943bd35430e082ed44e,@Apollon77 FYI,True,False,1,0.0
openssl_____openssl_____12089,2020-07-03T10:18:26Z,True,openssl_____openssl_____12089_____653471499,"Closing as per OMC vote. 
See https://www.mail-archive.com/openssl-project@openssl.org/msg01913.html
",True,True,99,35361.316666666666
python_____peps_____1470,2020-07-04T14:27:47Z,True,python_____peps_____1470_____653772640,"U no dats da greit idea finali I ken write commentz az i like thanks you!!!!!! 😍 ♥
Black lifes matters!!! 👍🏿✊🏿",True,True,4,11066.8
MPMG-DCC-UFMG/F05-Mobile-dashboard/1,2020-07-06T20:50:03Z,False,5f038f9dbd354342842f01c6,"Kudos, SonarCloud Quality Gate passed!

[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug.png' alt='Bug' width='16' height='16' />](https://sonarcloud.io/project/issues?id=MPMG-DCC-UFMG_F05-Mobile-dashboard&pullRequest=1&resolved=false&types=BUG) [<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A.png' alt='A' width='16' height='16' />](https://sonarcloud.io/project/issues?id=MPMG-DCC-UFMG_F05-Mobile-dashboard&pullRequest=1&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=MPMG-DCC-UFMG_F05-Mobile-dashboard&pullRequest=1&resolved=false&types=BUG)  
[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability.png' alt='Vulnerability' width='16' height='16' />](https://sonarcloud.io/project/issues?id=MPMG-DCC-UFMG_F05-Mobile-dashboard&pullRequest=1&resolved=false&types=VULNERABILITY) [<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A.png' alt='A' width='16' height='16' />](https://sonarcloud.io/project/issues?id=MPMG-DCC-UFMG_F05-Mobile-dashboard&pullRequest=1&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=MPMG-DCC-UFMG_F05-Mobile-dashboard&pullRequest=1&resolved=false&types=VULNERABILITY) (and [<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot.png' alt='Security Hotspot' width='16' height='16' />](https://sonarcloud.io/project/issues?id=MPMG-DCC-UFMG_F05-Mobile-dashboard&pullRequest=1&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/issues?id=MPMG-DCC-UFMG_F05-Mobile-dashboard&pullRequest=1&resolved=false&types=SECURITY_HOTSPOT) to review)  
[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell.png' alt='Code Smell' width='16' height='16' />](https://sonarcloud.io/project/issues?id=MPMG-DCC-UFMG_F05-Mobile-dashboard&pullRequest=1&resolved=false&types=CODE_SMELL) [<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A.png' alt='A' width='16' height='16' />](https://sonarcloud.io/project/issues?id=MPMG-DCC-UFMG_F05-Mobile-dashboard&pullRequest=1&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=MPMG-DCC-UFMG_F05-Mobile-dashboard&pullRequest=1&resolved=false&types=CODE_SMELL)

[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo.png' alt='No Coverage information' width='16' height='16' />](https://sonarcloud.io/component_measures?id=MPMG-DCC-UFMG_F05-Mobile-dashboard&pullRequest=1) No Coverage information  
[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/3.png' alt='0.0%' width='16' height='16' />](https://sonarcloud.io/component_measures?id=MPMG-DCC-UFMG_F05-Mobile-dashboard&pullRequest=1&metric=new_duplicated_lines_density&view=list) [0.0% Duplication](https://sonarcloud.io/component_measures?id=MPMG-DCC-UFMG_F05-Mobile-dashboard&pullRequest=1&metric=new_duplicated_lines_density&view=list)

",True,False,1,0.0
jonathanRoyer76/marilyneAngular/1,2020-07-07T19:11:16Z,False,5f04ca0dbd35433723016604,Superseded by #2.,True,False,1,0.0
Skyrat-SS13_____Skyrat13_____2578,2020-07-08T15:15:55Z,True,Skyrat-SS13_____Skyrat13_____2578_____655583313,"Issues I've heard of/taken notice of.

- Cannot put hands/feet back on.
- Literally nobody knows how to do anything because there's no documentation/recommended reading.
- Nobody knows how to make biomass or -any- of the new chems. You literally need to code-dive to find them.
- The amount of injuries people get is often ridiculous. With all the stacked wounds, broken bones, missing limbs, and collapsed chest cavities, it incentivises cloning -even more- than before. 

People legit just, avoid playing medical on bobmed rounds. Medical is already severely understaffed, and people don't -want- to do pain/injury roleplay. This medical system keeps people away/out of the things they want to do for an extended period of time, and honestly, it's just making people get incredibly frustrated. Medics end up quitting because they don't know what to do, or -can't- do anything. People get frustrated because they get permanently taken out of the round because they can't be treated or cloned.",True,True,29,43044.86666666667
Skyrat-SS13_____Skyrat13_____2578,2020-07-08T20:50:44Z,True,Skyrat-SS13_____Skyrat13_____2578_____655749963,"> Issues I've heard of/taken notice of.
> 
> * Cannot put hands/feet back on.
> * Literally nobody knows how to do anything because ~there's no documentation/recommended reading.~ the documentation is all on the -discord- of all places, which people aren't going to know about/find.
> * Nobody knows how to make biomass or -any- of the new chems. ~You literally need to code-dive to find them.~
> * The amount of injuries people get is often ridiculous. With all the stacked wounds, broken bones, missing limbs, and collapsed chest cavities, it incentivises cloning -even more- than before.
> 
> People legit just, avoid playing medical on bobmed rounds. Medical is already severely understaffed, and people don't -want- to do pain/injury roleplay. This medical system keeps people away/out of the things they want to do for an extended period of time, and honestly, it's just making people get incredibly frustrated. Medics end up quitting because they don't know what to do, or -can't- do anything. People get frustrated because they get permanently taken out of the round because they can't be treated or cloned.
> 
> After making this post, and dredging through the arguments and complaints in all of the discord channels, I found out that a bunch of info is on #bulletin-board for whatever reason. Information like this really needs to be in the PR, and not in the middle of a discord chat nobody knows about..
> 
> Regarding cloning, and you comments on cloning.
> 
> ![image](https://user-images.githubusercontent.com/7543955/86941412-e8a5b480-c111-11ea-86c3-e5afa3936687.png)
> 
> Punishing the victim in these situations for security letting them die, and medical cloning them, does nothing to punish security -or- medical. Being taken out of the round for 10-20 minutes, then being cloned into a half-baked cripple resulting in even more of a round being wasted, doesn't sound fun at all. If you've -ever- tried to get a lawyer or command to do something about incompetency, you know full well that whining and bitching about it is just another waste of time on top of the 30 minutes you're already out.
> 
> Pain mechanics sound cool though because instead of beating someone to crit they'll actually feel pain and go down instead of just, going on like a robot.
> 
> TL:DR - I really wish this was just a straight port without adding all of this anti-cloner/additional limb nonsense so people could learn the basic systems first.

First off: You can put feet and hands in. I have consistently tested this, you just install robo limbs as normal but target the extremity instead. Cloning is not incentivized because it is costly, and wounds are honestly quite easily fixed most of the time even if it takes surgery. The information of this PR is on the #bulletin-board because it is actually the palce where people see changes the most, people barely access this github even to report serious bugs. About the last complaints: It is not punishing the victim, just like credits it is punishing doctors for being incompetent, they can avoid cloning most of the time and it should be a last ditch effort to revive people - it is fluffed to be painful and traumatic, mechanics should by all means convey that. If you are incompetent as a medical doctor, you suffer the consequences of it - cloning will take a hit to your salary and will piss people off since it is traumatic for their character and mechanically annoying. About this TLDR: I am sorry but this is nonsense, adding new limbs does not complicate the medical process at all, and it is a necessary step for any decent medical system.",True,True,29,43044.86666666667
Skyrat-SS13_____Skyrat13_____2578,2020-07-09T03:29:09Z,True,Skyrat-SS13_____Skyrat13_____2578_____655877005,"This has no place on this server. Medical is far too understaffed, and this server guised as a """"HRP"""" server isn't even built to handle the influx of shit that occurs when the antags start to do damage. It has generated nothing positive at all.

Your discord quote is disgusting.

**WHAT YOU WANT DOES NOT MEAN THE SERVER WANTS THIS SHIT** _BOTTOM LINE_

Fat reminder that 99% of the ""Hostage Situations"" I've seen are LRP bullshit of ""EITHER I GET MY WAY OR I'M KILLING XXX"" and then negotiations obviously go in a circle because the antag won't budge an inch and security has to act because they're spread so thin with all the other shit going on and other antags.

Also your quote "" wounds are honestly quite easily fixed most of the time even if it takes surgery. ""
Except it's almost like the stations only have two surgical beds, and sometimes very little staffing to deal with the influx of issues. God fucking help a blob round where people are trying to take it down and _oh look 20 people come in with broken everything haha HRP right?_

I will say it a thousand times. This is outright a huge antag buff because it allows people to wreck shit (which on a HRP server it really should only be conflict initiated by antagonists) in such a one sided way that it's absurd. Someone's already going to counter ""well you can do the same to the antag"" except you're talking about a server that willingly feeds bloodsuckers and continues to coddle antagonists in a way that literally gives them green text on a silver platter.",True,True,29,43044.86666666667
Skyrat-SS13_____Skyrat13_____2578,2020-07-09T03:41:35Z,True,Skyrat-SS13_____Skyrat13_____2578_____655880427,"This PR should be broken up into multiple parts so that people can properly understand and critique the changes. This is already a massive overhaul with just the TG ports, but then Bob has lumped a big pile of changes and an IPC wound system on top of it. 

Clean TG port first, let people play with and learn that, then PR the additional changes so people can judge them once they have context for what the changes will do to the existing system. ",True,True,29,43044.86666666667
Skyrat-SS13_____Skyrat13_____2578,2020-07-09T03:43:24Z,True,Skyrat-SS13_____Skyrat13_____2578_____655880885,"> 
> 
> This PR should be broken up into multiple parts so that people can properly understand and critique the changes. This is already a massive overhaul with just the TG ports, but then Bob has lumped a big pile of changes and an IPC wound system on top of it.
> 
> Clean TG port first, let people play with and learn that, then PR the additional changes so people can judge them once they have context for what the changes will do to the existing system.

If this was modularized it would be much easier to acclimate to!!",True,True,29,43044.86666666667
kyb3r_____modmail_____2820,2020-07-09T07:14:03Z,True,kyb3r_____modmail_____2820_____446665943,Bump to latest dpy version.,True,True,11,3093.766666666667
kyb3r_____modmail_____2820,2020-07-09T07:14:06Z,True,kyb3r_____modmail_____2820_____655947289,"## use enum

https://github.com/kyb3r/modmail/blob/178ea9c0ac56a345cf1ddea48e3bcc1524f83136/core/config.py#L84-L87

---

###### This comment was generated by [todo](https://todo.jasonet.co) based on a `TODO` comment in 178ea9c0ac56a345cf1ddea48e3bcc1524f83136 in #2820. cc @kyb3r.",True,True,11,3093.766666666667
Skyrat-SS13_____Skyrat13_____2578,2020-07-09T07:18:46Z,True,Skyrat-SS13_____Skyrat13_____2578_____655949749,The MRP server isnt a good fit for this. There have been many many rounds showing why you either should have it tested on calm rounds. Or have it on the hrp server first so we dont have 20 dead who take longer than the round is to revive all of them.,True,True,29,43044.86666666667
Skyrat-SS13_____Skyrat13_____2578,2020-07-09T07:20:10Z,True,Skyrat-SS13_____Skyrat13_____2578_____655950456,"I personally don't like it. I see its potential but the way this is put in as one big Test Merge file isn't good for the game, bobmed needs to be stripped down piecemeal and modularized so that the parts the community likes can be put in, and the parts nobody likes can be tweaked or tossed out. Right now the injury system is over the top, just about everything beyond a basic bruise or burn becomes life threatening, breaking bones and having crap embedded in you causing life threatening bleed injuries over every little thing is too over the top, and when rounds hit high chaos medbay will get overwhelmed to a level it will be impossible to manage and cause more round removal. Frankly its too much realism in a video game, I'd rather take gamey mechanics that allow the game to flow smoothly over injecting an amount of realism that slows down the game, overwhelms medical staff, and is from what I've seen in the ooc chat on testmerged rounds a highly unpopular system. ",True,True,29,43044.86666666667
Skyrat-SS13_____Skyrat13_____2578,2020-07-09T07:23:23Z,True,Skyrat-SS13_____Skyrat13_____2578_____655952045,"bobmed is god tier

medical just needs to up their skill TBH and we're usually filled on medical anyways

honestly just make any severe trauma like artery/broken bones/whatever to only proc when something does more than 30 brute damage on a single hit
and like at 50 accumulated brute to a limb gives any damage a chance to do that",True,True,29,43044.86666666667
Skyrat-SS13_____Skyrat13_____2578,2020-07-09T07:44:30Z,True,Skyrat-SS13_____Skyrat13_____2578_____655963573,also we should have a wiki for all the changes or somthing. AS well as having other ways thats not just going to medbay to deal with shit. (Irl you can easily pop your bone in place.),True,True,29,43044.86666666667
Skyrat-SS13_____Skyrat13_____2578,2020-07-09T08:30:38Z,True,Skyrat-SS13_____Skyrat13_____2578_____655988512,also if a pre cloned person dies pelase set it to aleart medical if theres no biomass.,True,True,29,43044.86666666667
github_____opensource.guide_____1704,2020-07-09T15:21:01Z,True,github_____opensource.guide_____1704_____446930000,This fixes one currently broken link and will fix future cases if people rename their default branches.,True,True,2,1098.7
kyb3r_____modmail_____2820,2020-07-09T18:33:53Z,True,kyb3r_____modmail_____2820_____656285384,What a giant chaos of commits. Please create self contained commits. Use `git rebase -i HEAD~n` where `n` is the number of commits you want to review. Then follow instructions in the interactive rebase.,True,True,11,3093.766666666667
kyb3r_____modmail_____2820,2020-07-09T18:36:31Z,True,kyb3r_____modmail_____2820_____656286530,"...while I'm at it, what does `Discord.py bump` have to do with ""Deprecated `MONGO_URI`"" and all the other changes in this pull request?",True,True,11,3093.766666666667
Skyrat-SS13_____Skyrat13_____2578,2020-07-09T19:39:02Z,True,Skyrat-SS13_____Skyrat13_____2578_____656313699,"> This has no place on this server. Medical is far too understaffed, and this server guised as a """"HRP"""" server isn't even built to handle the influx of shit that occurs when the antags start to do damage. It has generated nothing positive at all.
> 
> Your discord quote is disgusting.
> 
> **WHAT YOU WANT DOES NOT MEAN THE SERVER WANTS THIS SHIT** _BOTTOM LINE_
> 
> Fat reminder that 99% of the ""Hostage Situations"" I've seen are LRP bullshit of ""EITHER I GET MY WAY OR I'M KILLING XXX"" and then negotiations obviously go in a circle because the antag won't budge an inch and security has to act because they're spread so thin with all the other shit going on and other antags.
> 
> Also your quote "" wounds are honestly quite easily fixed most of the time even if it takes surgery. ""
> Except it's almost like the stations only have two surgical beds, and sometimes very little staffing to deal with the influx of issues. God fucking help a blob round where people are trying to take it down and _oh look 20 people come in with broken everything haha HRP right?_
> 
> I will say it a thousand times. This is outright a huge antag buff because it allows people to wreck shit (which on a HRP server it really should only be conflict initiated by antagonists) in such a one sided way that it's absurd. Someone's already going to counter ""well you can do the same to the antag"" except you're talking about a server that willingly feeds bloodsuckers and continues to coddle antagonists in a way that literally gives them green text on a silver platter.

I will not reply to you because your criticism is stupid and deconstructive. Go fuck yourself.",True,True,29,43044.86666666667
Skyrat-SS13_____Skyrat13_____2578,2020-07-09T19:40:30Z,True,Skyrat-SS13_____Skyrat13_____2578_____656314365,"> This PR should be broken up into multiple parts so that people can properly understand and critique the changes. This is already a massive overhaul with just the TG ports, but then Bob has lumped a big pile of changes and an IPC wound system on top of it.
> 
> Clean TG port first, let people play with and learn that, then PR the additional changes so people can judge them once they have context for what the changes will do to the existing system.

This is the basis for a much larger project. None of these changes can exist separately because i need all of this to get the following work done, this is especially notable on the limb separation part. You simply want me to cut up this PR to get the other changes denied, which will not happen because they are integral for what i am trying to accomplish: a decent medical system.",True,True,29,43044.86666666667
Skyrat-SS13_____Skyrat13_____2578,2020-07-09T19:40:54Z,True,Skyrat-SS13_____Skyrat13_____2578_____656314571,"> also we should have a wiki for all the changes or somthing. AS well as having other ways thats not just going to medbay to deal with shit. (Irl you can easily pop your bone in place.)

I am dealing with these problems and setting up a guide.",True,True,29,43044.86666666667
Skyrat-SS13_____Skyrat13_____2578,2020-07-09T19:41:06Z,True,Skyrat-SS13_____Skyrat13_____2578_____656314655,"> also if a pre cloned person dies pelase set it to aleart medical if theres no biomass.

Sure.",True,True,29,43044.86666666667
Skyrat-SS13_____Skyrat13_____2578,2020-07-09T19:42:54Z,True,Skyrat-SS13_____Skyrat13_____2578_____656315411,"> I personally don't like it. I see its potential but the way this is put in as one big Test Merge file isn't good for the game, bobmed needs to be stripped down piecemeal and modularized so that the parts the community likes can be put in, and the parts nobody likes can be tweaked or tossed out. Right now the injury system is over the top, just about everything beyond a basic bruise or burn becomes life threatening, breaking bones and having crap embedded in you causing life threatening bleed injuries over every little thing is too over the top, and when rounds hit high chaos medbay will get overwhelmed to a level it will be impossible to manage and cause more round removal. Frankly its too much realism in a video game, I'd rather take gamey mechanics that allow the game to flow smoothly over injecting an amount of realism that slows down the game, overwhelms medical staff, and is from what I've seen in the ooc chat on testmerged rounds a highly unpopular system.

I will say it again because these two comments state the same:
This is the basis for a much larger project. None of these changes can exist separately because i need all of this to get the following work done, this is especially notable on the limb separation part. You simply want me to cut up this PR to get the other changes denied, which will not happen because they are integral for what i am trying to accomplish: a decent medical system.",True,True,29,43044.86666666667
Skyrat-SS13_____Skyrat13_____2578,2020-07-09T19:51:16Z,True,Skyrat-SS13_____Skyrat13_____2578_____656319069,"What you're saying is that you want all of your changes put in at once because you think all of them are great ideas. We're saying that if that's actually true, breaking them up into multiple PRs shouldn't be seen as a threat to you. 

This is a _really, really big_ pile of changes and it's going to take weeks or months for all of them to shake out, be tested and understood by the community. You should start with a tgmed port as a baseline (as that is already documented and has been thoroughly tested for us by tg) and then add in whatever additional features you like one-by-one until we get a system that the community understands and has been vetted for use here. ",True,True,29,43044.86666666667
Skyrat-SS13_____Skyrat13_____2578,2020-07-09T19:52:43Z,True,Skyrat-SS13_____Skyrat13_____2578_____656319611,"> What you're saying is that you want all of your changes put in at once because you think all of them are great ideas. We're saying that if that's actually true, breaking them up into multiple PRs shouldn't be seen as a threat to you.
> 
> This is a _really, really big_ pile of changes and it's going to take weeks or months for all of them to shake out, be tested and understood by the community. You should start with a tgmed port as a baseline (as that is already documented and has been thoroughly tested for us by tg) and then add in whatever additional features you like one-by-one until we get a system that the community understands and has been vetted for use here.

I can ask maintainers which ideas are bad and take them out. So far they have veto'd none of it. I will not split this up because it is a ton of effort on my part, effort which is absolutely unnecessary.",True,True,29,43044.86666666667
kyb3r_____modmail_____2820,2020-07-09T20:04:25Z,True,kyb3r_____modmail_____2820_____656324469,"Hey there @RheaAyase ,
We truly apprectiate you'r cooperation, But it seems like you only are complaining and complaning. Please Keep in mind we try to do what we can, in a messy way or not the result will be fine as it always has been.
Cheers lorenzo, ",True,True,11,3093.766666666667
Skyrat-SS13_____Skyrat13_____2578,2020-07-09T21:34:29Z,True,Skyrat-SS13_____Skyrat13_____2578_____656362483,"Let's take a breather for now. While there have been productive conversations both on the Discord and this PR comment section, I sense a shitstorm brewing.

This will be re-opened some time before Bababooey Medicine is test-merged again. Relay all your concerns to Bob Joga or the maintainers and please do so civilly. We encourage our developers to block those who act rudely, while we, in turn, highly encourage our developers to politely listen to those that act politely and bring up complaints in a civil manner. 

Also, we are recruiting more moderators who are in charge of solely moderating OOC behavior and conversations. Discord Moderators will now have the authority to moderate these discussions in Github as well. 
",True,True,29,43044.86666666667
kyb3r_____modmail_____2820,2020-07-09T22:31:12Z,True,kyb3r_____modmail_____2820_____656382226,"I'm not complaining. I'm pointing out these issues so that you can learn from these mistakes. Not everyone is born all cute and nice. Yes I do appreciate your work, but do I have to pre-face every single online message? I prefer getting to the point without wasting anyones time.

So today we learned how to use `rebase -i` with which, if you take a look at it, you can not only squash ""typo fixes"" into their correct commit but also get rid of commits that happen to be in your branch from which you're creating a pull request. (You'd first create a new branch inside of which you'd drop the extra commits. Or just cherry-pick them into clean origin/master branch, whichever means less work.)",True,True,11,3093.766666666667
kyb3r_____modmail_____2820,2020-07-09T22:42:22Z,True,kyb3r_____modmail_____2820_____656385889,"These things that I'm describing matter a lot in the open source. 

This is what a complaint looks like: I now have to either deal with all this chaos in order to merge it with my fork, or I'll live with the divergence. In my case it's the latter, with a single cherry-picked commit out of this pull request. The rest is not worth the hassle.",True,True,11,3093.766666666667
kyb3r_____modmail_____2820,2020-07-09T23:01:18Z,True,kyb3r_____modmail_____2820_____656391527,"Hey,

I fully agree with the fact that these things matter, specially with a open-source project. Although You also will have to understand also we live in a big chaos to keep all you guys happy > to keep the quality of the end product as high as possible, we dont focus fully on how a simple ""commit"" looks like. And if you think different, Please and be my guest and create your own open-source bot, and then show me how it should be.

Cheers, lorenzo",True,True,11,3093.766666666667
github_____opensource.guide_____1704,2020-07-10T09:39:43Z,True,github_____opensource.guide_____1704_____656586013,"Leave me all alone,,, I never going to be INTERESTED in your fucking
BITCOINSHIT, bye

Biccler Sammy

Op vr 10 jul. 2020 10:19 schreef Jojo jackson <notifications@github.com>:

> *@JACKMESON* commented on this pull request.
>
> Have a great life
>
> —
> You are receiving this because you are subscribed to this thread.
> Reply to this email directly, view it on GitHub
> <https://github.com/github/opensource.guide/pull/1704#pullrequestreview-446211114>,
> or unsubscribe
> <https://github.com/notifications/unsubscribe-auth/ANMSNUPYHZ4V3WXOQTB4WYDR23FJ5ANCNFSM4OVWW2SA>
> .
>
",True,True,2,1098.7
expressjs_____session_____708,2020-07-10T13:57:24Z,True,expressjs_____session_____708_____452860411,"```suggestion
        debug('destroying session')
```

For StandardJS style",True,True,29,358951.0333333333
expressjs_____session_____708,2020-07-10T13:58:18Z,True,expressjs_____session_____708_____452860953,"```suggestion
          debug('session destroyed')
```

for StandardJS style",True,True,29,358951.0333333333
expressjs_____session_____708,2020-07-10T13:59:30Z,True,expressjs_____session_____708_____452861670,"```suggestion
      debug('generating session')
```

For both StandardJS style and to match the participle from the other similar debug messages",True,True,29,358951.0333333333
expressjs_____session_____708,2020-07-10T13:59:45Z,True,expressjs_____session_____708_____452861812,"```suggestion
      function save (callback) {
```

For StandardJS format",True,True,29,358951.0333333333
expressjs_____session_____708,2020-07-10T13:59:59Z,True,expressjs_____session_____708_____452861946,"```suggestion
        _save.call(this, function (error) {
```

For StandardJS format",True,True,29,358951.0333333333
expressjs_____session_____708,2020-07-10T14:01:43Z,True,expressjs_____session_____708_____452862926,"```suggestion
          if (error) {
            return callback(error)
          }

          debug('session saved')
          callback.apply(this, arguments)
```",True,True,29,358951.0333333333
expressjs_____session_____708,2020-07-10T14:38:11Z,True,expressjs_____session_____708_____656710202," - I have addressed the review comments
 - I have added the word session in the debug statements in touch code
 - request to have a look
 - request to remove the low priority tag",True,True,29,358951.0333333333
expressjs_____session_____708,2020-07-10T14:43:50Z,True,expressjs_____session_____708_____656713022,"> request to remove the low priority tag

For what reason? Do you think this is not a low priority against the other aspects the team is attempting to move forward like Express 5.0? I'm trying to apply tags around priorities to help people focus the appropriate attention to get larger efforts like 5.0 moving forward. IMO adding some extra debug wording seems low priority to me, compared to things like new features, bug fixes, etc.

The tag itself doesn't mean that it gets no attention, just that it is comparatively low priority. I'm happy to remove it, but just unsure on the reasoning for removing it, as you didn't provide any.",True,True,29,358951.0333333333
expressjs_____session_____708,2020-07-10T14:45:36Z,True,expressjs_____session_____708_____452889547,"Any reason this ones contains `""the""` while the others (like `destroying session`, `generating session`, etc.) does not? Should all the others contain ""the"" or should this one remove the ""the""?",True,True,29,358951.0333333333
expressjs_____session_____708,2020-07-10T14:50:11Z,True,expressjs_____session_____708_____452892287,"fixed it, removed `the`",True,True,29,358951.0333333333
expressjs_____session_____708,2020-07-10T14:50:18Z,True,expressjs_____session_____708_____452892363,"```suggestion
            return callback(err)
```

Sorry, doing it through the GH UI is hard to count spaces 😆 ",True,True,29,358951.0333333333
expressjs_____session_____708,2020-07-10T14:52:34Z,True,expressjs_____session_____708_____452893800,"thanks, fixed it.",True,True,29,358951.0333333333
expressjs_____session_____708,2020-07-10T15:07:39Z,True,expressjs_____session_____708_____656724784,"I am not arguing with you; but I cannot find a reason why this  is a low priority: the reasoning for this change is provided in the first comment - to improve self diagnosis of a class of issues that report malfunction of session life-cycle events, more specifically users suspecting missing session persistence. Plus, there are 27 other PRs in this repo, and none of those are low pririty items!

But I am defenitely not arguing with you nor questing your judgement. Also, if this is to compete with express 5.0 for project's attention and focus, I will prefer the later, as that has more user demand than the former.",True,True,29,358951.0333333333
expressjs_____session_____708,2020-07-10T15:12:53Z,True,expressjs_____session_____708_____656727425,"I already provided the reason why it is low priority above :) The tag has nothing to do with the timeline for landing the change; it is simply to provide a category of the change itself. The argument that the others are not tagged right is not an argument this is not a low priority change; getting things tagged correctly is actually your primary function as a triager :) So if other PRs are not tagged correctly, it sounds like that is an issue that needs t be addressed with at least the triagers; I was simply tagging this PR since I happened to just interact with it. If it is more important for me to go through all the issues and PRs in this repository and get them all tagged appropriately vs working on other items, I can certainly do that, but the idea was that we're bringing on the large group of triagers to perform these kinds of tasks such that folks like myself can actually focus on the larger-at-hand items.",True,True,29,358951.0333333333
expressjs_____session_____708,2020-07-10T15:31:51Z,True,expressjs_____session_____708_____656737180,"> I already provided the reason why it is low priority above :)

I have given response to that - it is not some random debug statements; it is derived from an insight from this repo's issue backlog.

> The argument that the others are not tagged right is not an argument this is not a low priority change; getting things tagged correctly is actually your primary function as a triager :)

There are PRs which are 6 years old with no activities for as long; and acting on those in a meaningful and timely manner is actually your primary function as a maintainer :)

But then let us agree that we are not here to remind each other on their responsibilities.

> So if other PRs are not tagged correctly, it sounds like that is an issue that needs t be addressed with at least the triagers; I was simply tagging this PR since I happened to just interact with it.

It looks incorrect approach to me. If you just happened to interact with a work item cannot be used to derive a priority decision? Priorities are always relative; without looking at other PRs, a 'low priority' item cannot stand in itself. Low against what?
",True,True,29,358951.0333333333
expressjs_____session_____708,2020-07-10T15:43:55Z,True,expressjs_____session_____708_____656743298,"> I have given response to that - it is not some random debug statements; it is derived from an insight from this repo's issue backlog.

I get it, but we're also not even actively telling folks to use what is there when triaging issues (see recent issues like #763 )

I think that this conversation is getting a bit out of hand and off topic, and frankly into a bit of the offensive realm. If you could, I would suggest if you could please step away for a bit. I'm going to lock this PR for now.",True,True,29,358951.0333333333
expressjs_____session_____708,2020-07-10T15:49:51Z,True,expressjs_____session_____708_____656746503,"@gireeshpunathil I think at this point going forward, I just can no longer act on any issues and PR you raise. You will need to get something else involved to move forward with your issues and PRs, as I do not feel comfortable in interactions between us.",True,True,29,358951.0333333333
kyb3r_____modmail_____2820,2020-07-11T10:34:34Z,True,kyb3r_____modmail_____2820_____657038203,"> Please and be my guest and create your own open-source bot

I have, several in fact. And they all actually work and I can [just let em](https://status.valkyrja.app) do their thing for months at a time and it doesn't die on me on every occasion.

Yours is unreliable, and with development that I've observed not only in this pull request, yes I'll be rather writing my own as it will be less time, effort and headaches, than fixing all this mess. You will see mine pop up at https://github.com/RheaAyase/Valkyrja.modmail by the end of the day.",True,True,11,3093.766666666667
kyb3r_____modmail_____2820,2020-07-11T10:38:02Z,True,kyb3r_____modmail_____2820_____657038915,"I'll be waiting👍,  And if you only have issues and issues. Feel free to continue to use any other `project`, and have your complaints somewhere else.
Cheers, lorenzo",True,True,11,3093.766666666667
kyb3r_____modmail_____2820,2020-07-11T10:47:49Z,True,kyb3r_____modmail_____2820_____657041017,"Again, you see complaints, while the fact is that I tried to help you. This pull request is a nightmare and anyone can clearly see that.",True,True,11,3093.766666666667
jellyfin_____jellyfin-web_____1423,2020-07-11T16:01:40Z,True,jellyfin_____jellyfin-web_____1423_____657086210,"Well, I think after 25 days this issue *has* simmered down, and... just about as expected, it was basically forgotten and no one is talking about it any more. I'm sure there's still thousands of software projects using this terminology. So as previously mentioned, let's close this PR for now since it's inadequate, and if someone wants to do the work by all means, but I think keeping these terms is fine. Exporting American sociopolitical arguments to our global community is not something worth encouraging.",True,True,17,35656.933333333334
Skyrat-SS13_____Skyrat13_____2578,2020-07-12T19:09:15Z,True,Skyrat-SS13_____Skyrat13_____2578_____657262650,"I will reopen this PR and continue my work, but if the issues i've faced during all of these persist, i am not afraid to kill this project for real.",True,True,29,43044.86666666667
ecies/js/266,2020-07-13T06:30:34Z,False,5f0c00d4bd354334519c6899,"# [Codecov](https://codecov.io/gh/ecies/js/pull/266?src=pr&el=h1) Report
> Merging [#266](https://codecov.io/gh/ecies/js/pull/266?src=pr&el=desc) into [master](https://codecov.io/gh/ecies/js/commit/a873bb558b224e2163e718274f27cd304beb1754&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/ecies/js/pull/266/graphs/tree.svg?width=650&height=150&src=pr&token=Ha6CxVsZj0)](https://codecov.io/gh/ecies/js/pull/266?src=pr&el=tree)

```diff
@@            Coverage Diff            @@
##            master      #266   +/-   ##
=========================================
  Coverage   100.00%   100.00%           
=========================================
  Files            5         5           
  Lines           90        90           
  Branches         7         7           
=========================================
  Hits            90        90           
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/ecies/js/pull/266?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/ecies/js/pull/266?src=pr&el=footer). Last update [a873bb5...3cd8147](https://codecov.io/gh/ecies/js/pull/266?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",True,False,2,1324.65
w3f/polkadot-wiki/691,2020-07-13T09:35:11Z,False,5f0c2c8fbd35437415cde000,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`.

If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",True,False,1,0.0
ecies/js/266,2020-07-14T04:35:13Z,False,5f0d5b16bd35435e5053c727,Superseded by #267.,True,False,2,1324.65
Skyrat-SS13_____Skyrat13_____2578,2020-07-15T23:30:41Z,True,Skyrat-SS13_____Skyrat13_____2578_____659067544,I am not solving these merge conflicts because Citadel is too fucking slow. No.,True,True,29,43044.86666666667
Skyrat-SS13_____Skyrat13_____2578,2020-07-15T23:51:43Z,True,Skyrat-SS13_____Skyrat13_____2578_____659073610,Closed until i can find a way to fix the bullshit cit did.,True,True,29,43044.86666666667
Skyrat-SS13_____Skyrat13_____2578,2020-07-16T00:10:20Z,True,Skyrat-SS13_____Skyrat13_____2578_____659079256,"![image](https://user-images.githubusercontent.com/25989101/87611912-93543f00-c6df-11ea-8a23-7de39914745a.png)

PR's closed",True,True,29,43044.86666666667
Skyrat-SS13_____Skyrat13_____2578,2020-07-17T00:11:35Z,True,Skyrat-SS13_____Skyrat13_____2578_____659747077,"![flowey-export3](https://user-images.githubusercontent.com/25989101/87734407-ec3bda00-c7a8-11ea-9d6d-5ea9dafa72d6.png)
",True,True,29,43044.86666666667
YenLai/twitter-fullstack-2020/34,2020-07-22T09:50:29Z,False,5f180d4cbd354377c0db05a5,"@YenLai 改成大寫測試會不會跳error呀?
![image](https://user-images.githubusercontent.com/47709206/88162348-d06e8300-cc43-11ea-99b5-2ba910f45583.png)
",True,False,4,4.816666666666666
YenLai/twitter-fullstack-2020/34,2020-07-22T09:50:52Z,False,5f1916f6bd354336eaa935d7,我看測試文件好像是小寫,True,False,4,4.816666666666666
YenLai/twitter-fullstack-2020/34,2020-07-22T09:52:47Z,False,5f180dcebd35430977b04c51,這個變數好像沒用到~~應該可移除,True,False,4,4.816666666666666
YenLai/twitter-fullstack-2020/34,2020-07-22T09:55:18Z,False,5f1927d2bd35437e414889d0,我先merge，有需要改動的部分，再等下一次的PR,True,False,4,4.816666666666666
bcgov/cas-shipit/57,2020-07-22T20:41:28Z,False,5f1918cbbd35432ec4d95575,Superseded by #83.,True,False,3,141686.45
kanzure/diyhpluswiki/132,2020-07-23T18:15:35Z,False,5f1a526cbd3543788d6f0647,+1 I'm also @ChristopherA on Github ;-),True,False,6,30.533333333333335
kanzure/diyhpluswiki/132,2020-07-23T18:18:37Z,False,5f19d5d1bd35432b7d0287d2,c/transnational/transactional/,True,False,6,30.533333333333335
kanzure/diyhpluswiki/132,2020-07-23T18:26:10Z,False,5f1a5014bd354356a5c00d08,I read through the whole thing and that was the only typo.,True,False,6,30.533333333333335
kanzure/diyhpluswiki/132,2020-07-23T18:26:32Z,False,5f19d791bd354321789902d4,"Thanks for doing this! It was one of my better talks, and despite being done over two years ago it still is quite relevant, and in fact, feels like this year the topic will coming up again, so I wanted to refer to it.",True,False,6,30.533333333333335
kanzure/diyhpluswiki/132,2020-07-23T18:35:16Z,False,5f19d999bd354330b41f2a25,https://diyhpl.us/wiki/transcripts/blockchain-protocol-analysis-security-engineering/2018/2018-01-24-christopher-allen-smart-signatures/,True,False,6,30.533333333333335
kanzure/diyhpluswiki/132,2020-07-23T18:46:07Z,False,5f19dc23bd35433ab0f51769,"No problem @ChristopherA. Yeah it was an interesting talk especially going over the different languages people were working on early 2018. Haven't heard much from them recently apart from Simplicity. Perhaps progress stalled on the languages because of problems with the blockchains they were being built for (Ethereum, Tezos etc)",True,False,6,30.533333333333335
iamvictorli/Daily-Coding-Problem/160,2020-07-30T20:15:24Z,False,5f232b92bd3543306f75be75,Superseded by #169.,True,False,1,0.0
sj-log/eBook-crawler/5,2020-08-01T09:21:58Z,False,5f26506bbd354371a2a5f156,"
This pull request is being automatically deployed with Vercel ([learn more](https://vercel.link/github-learn-more)).
To see the status of your deployment, click below or on the icon next to each commit.

  🔍 Inspect: https://vercel.com/sj-log/ebook-crawler/dx23dio3m
  ✅ Preview: https://ebook-crawler-git-dependabot-npmandyarnreact-backendcli-34f8fc.sj-log.vercel.app
  	",True,False,2,8361.766666666666
Azure/azure-rest-api-specs/10324,2020-08-03T18:31:35Z,False,5f285947bd35430299ba1611,"<h3>[Staging] Swagger Validation Report</h3><!-- (in progress, please wait this to update) --><!-- <div></div> --><details><summary><code>️<code>❌</code></code><b>BreakingChange: 8 Errors, 0 Warnings</b>  [<a href=""https://github.com/Azure/azure-rest-api-specs/pull/10324/checks?check_run_id=941803440""
      target=""_blank"">Detail</a>] [Expand]
  </summary><br>

| Rule | Message |
|------|---------|
|<code><code>❌</code></code> [1034 - AddedRequiredProperty](https://github.com/Azure/openapi-diff/tree/master/docs/rules/1034.md ""The new version has new required property 'resourceType' that was not found in the old version."")|The new version has new required property 'resourceType' that was not found in the old version.<br>New: [Microsoft.ApiManagement/preview/2018-06-01-preview/apimnetworkstatus.json#L131:7](https://github.com/Azure/azure-rest-api-specs/blob/ba1ad7484c9853a6139e73d76f8cdb9b4481b5fa/specification/apimanagement/resource-manager/Microsoft.ApiManagement/preview/2018-06-01-preview/apimnetworkstatus.json#L131:7)<br>Old: [Microsoft.ApiManagement/preview/2018-06-01-preview/apimnetworkstatus.json#L131:7](https://github.com/Azure/azure-rest-api-specs/blob/master/specification/apimanagement/resource-manager/Microsoft.ApiManagement/preview/2018-06-01-preview/apimnetworkstatus.json#L131:7)|
|<code><code>❌</code></code> [1034 - AddedRequiredProperty](https://github.com/Azure/openapi-diff/tree/master/docs/rules/1034.md ""The new version has new required property 'isOptional' that was not found in the old version."")|The new version has new required property 'isOptional' that was not found in the old version.<br>New: [Microsoft.ApiManagement/preview/2018-06-01-preview/apimnetworkstatus.json#L131:7](https://github.com/Azure/azure-rest-api-specs/blob/ba1ad7484c9853a6139e73d76f8cdb9b4481b5fa/specification/apimanagement/resource-manager/Microsoft.ApiManagement/preview/2018-06-01-preview/apimnetworkstatus.json#L131:7)<br>Old: [Microsoft.ApiManagement/preview/2018-06-01-preview/apimnetworkstatus.json#L131:7](https://github.com/Azure/azure-rest-api-specs/blob/master/specification/apimanagement/resource-manager/Microsoft.ApiManagement/preview/2018-06-01-preview/apimnetworkstatus.json#L131:7)|
|<code><code>❌</code></code> [1034 - AddedRequiredProperty](https://github.com/Azure/openapi-diff/tree/master/docs/rules/1034.md ""The new version has new required property 'resourceType, isOptional' that was not found in the old version."")|The new version has new required property 'resourceType, isOptional' that was not found in the old version.<br>New: [Microsoft.ApiManagement/preview/2018-06-01-preview/apimnetworkstatus.json#L208:11](https://github.com/Azure/azure-rest-api-specs/blob/ba1ad7484c9853a6139e73d76f8cdb9b4481b5fa/specification/apimanagement/resource-manager/Microsoft.ApiManagement/preview/2018-06-01-preview/apimnetworkstatus.json#L208:11)<br>Old: [Microsoft.ApiManagement/preview/2018-06-01-preview/apimnetworkstatus.json#L198:11](https://github.com/Azure/azure-rest-api-specs/blob/master/specification/apimanagement/resource-manager/Microsoft.ApiManagement/preview/2018-06-01-preview/apimnetworkstatus.json#L198:11)|
|<code><code>❌</code></code> [1034 - AddedRequiredProperty](https://github.com/Azure/openapi-diff/tree/master/docs/rules/1034.md ""The new version has new required property 'resourceType' that was not found in the old version."")|The new version has new required property 'resourceType' that was not found in the old version.<br>New: [Microsoft.ApiManagement/preview/2018-06-01-preview/apimnetworkstatus.json#L131:7](https://github.com/Azure/azure-rest-api-specs/blob/ba1ad7484c9853a6139e73d76f8cdb9b4481b5fa/specification/apimanagement/resource-manager/Microsoft.ApiManagement/preview/2018-06-01-preview/apimnetworkstatus.json#L131:7)<br>Old: [Microsoft.ApiManagement/preview/2018-06-01-preview/apimnetworkstatus.json#L131:7](https://github.com/Azure/azure-rest-api-specs/blob/master/specification/apimanagement/resource-manager/Microsoft.ApiManagement/preview/2018-06-01-preview/apimnetworkstatus.json#L131:7)|
|<code><code>❌</code></code> [1034 - AddedRequiredProperty](https://github.com/Azure/openapi-diff/tree/master/docs/rules/1034.md ""The new version has new required property 'isOptional' that was not found in the old version."")|The new version has new required property 'isOptional' that was not found in the old version.<br>New: [Microsoft.ApiManagement/preview/2018-06-01-preview/apimnetworkstatus.json#L131:7](https://github.com/Azure/azure-rest-api-specs/blob/ba1ad7484c9853a6139e73d76f8cdb9b4481b5fa/specification/apimanagement/resource-manager/Microsoft.ApiManagement/preview/2018-06-01-preview/apimnetworkstatus.json#L131:7)<br>Old: [Microsoft.ApiManagement/preview/2018-06-01-preview/apimnetworkstatus.json#L131:7](https://github.com/Azure/azure-rest-api-specs/blob/master/specification/apimanagement/resource-manager/Microsoft.ApiManagement/preview/2018-06-01-preview/apimnetworkstatus.json#L131:7)|
|<code><code>❌</code></code> [1034 - AddedRequiredProperty](https://github.com/Azure/openapi-diff/tree/master/docs/rules/1034.md ""The new version has new required property 'resourceType, isOptional' that was not found in the old version."")|The new version has new required property 'resourceType, isOptional' that was not found in the old version.<br>New: [Microsoft.ApiManagement/preview/2018-06-01-preview/apimnetworkstatus.json#L130:5](https://github.com/Azure/azure-rest-api-specs/blob/ba1ad7484c9853a6139e73d76f8cdb9b4481b5fa/specification/apimanagement/resource-manager/Microsoft.ApiManagement/preview/2018-06-01-preview/apimnetworkstatus.json#L130:5)<br>Old: [Microsoft.ApiManagement/preview/2018-06-01-preview/apimnetworkstatus.json#L130:5](https://github.com/Azure/azure-rest-api-specs/blob/master/specification/apimanagement/resource-manager/Microsoft.ApiManagement/preview/2018-06-01-preview/apimnetworkstatus.json#L130:5)|
|<code><code>❌</code></code> [1041 - AddedPropertyInResponse](https://github.com/Azure/openapi-diff/tree/master/docs/rules/1041.md ""The new version has a new property 'resourceType' in response that was not found in the old version."")|The new version has a new property 'resourceType' in response that was not found in the old version.<br>New: [Microsoft.ApiManagement/preview/2018-06-01-preview/apimnetworkstatus.json#L131:7](https://github.com/Azure/azure-rest-api-specs/blob/ba1ad7484c9853a6139e73d76f8cdb9b4481b5fa/specification/apimanagement/resource-manager/Microsoft.ApiManagement/preview/2018-06-01-preview/apimnetworkstatus.json#L131:7)<br>Old: [Microsoft.ApiManagement/preview/2018-06-01-preview/apimnetworkstatus.json#L131:7](https://github.com/Azure/azure-rest-api-specs/blob/master/specification/apimanagement/resource-manager/Microsoft.ApiManagement/preview/2018-06-01-preview/apimnetworkstatus.json#L131:7)|
|<code><code>❌</code></code> [1041 - AddedPropertyInResponse](https://github.com/Azure/openapi-diff/tree/master/docs/rules/1041.md ""The new version has a new property 'isOptional' in response that was not found in the old version."")|The new version has a new property 'isOptional' in response that was not found in the old version.<br>New: [Microsoft.ApiManagement/preview/2018-06-01-preview/apimnetworkstatus.json#L131:7](https://github.com/Azure/azure-rest-api-specs/blob/ba1ad7484c9853a6139e73d76f8cdb9b4481b5fa/specification/apimanagement/resource-manager/Microsoft.ApiManagement/preview/2018-06-01-preview/apimnetworkstatus.json#L131:7)<br>Old: [Microsoft.ApiManagement/preview/2018-06-01-preview/apimnetworkstatus.json#L131:7](https://github.com/Azure/azure-rest-api-specs/blob/master/specification/apimanagement/resource-manager/Microsoft.ApiManagement/preview/2018-06-01-preview/apimnetworkstatus.json#L131:7)|
</details><details><summary><code>️<code>️✔️</code></code><b>LintDiff</b>  [<a href=""https://github.com/Azure/azure-rest-api-specs/pull/10324/checks?check_run_id=941803474""
      target=""_blank"">Detail</a>]
  </summary><pre> Validation passes for LintDiff. </pre></details><details><summary><code>️<code>🔄</code></code><b>Avocado</b>  [<a href=""https://github.com/Azure/azure-rest-api-specs/pull/10324/checks?check_run_id=941803484""
      target=""_blank"">Detail</a>]
  </summary></details><sub>Posted by <b>Swagger Pipeline</b> | <a href=""https://aka.ms/ci-fix"">How to fix these errors?</a></sub>
",True,False,11,35.61666666666667
Azure/azure-rest-api-specs/10324,2020-08-03T18:31:47Z,False,5f28594ebd35437c411005c1,"<samp>
Azure Pipelines successfully started running 1 pipeline(s).<br>

</samp>",True,False,11,35.61666666666667
Azure/azure-rest-api-specs/10324,2020-08-03T18:34:00Z,False,5f2859cdbd354371590f4425,"<h3>azure-sdk-for-go</h3><div></div><details><summary><code>🔄</code> inProgress
    [<a href=""https://sdkautomation.blob.core.windows.net/sdkautomation-pipeline/Azure/azure-rest-api-specs/10324/azure-sdk-for-go/logs.txt"" target=""_blank"">Logs</a>] [Expand Details]
  </summary><ul><li><div><code>🔄</code> Generate from ba1ad7484c9853a6139e73d76f8cdb9b4481b5fa with merge commit 1f1d6166a5fe3313f88a77827ade6ba7d12bd053. SDK Automation 13.0.17.20200619.4
      </div></li></ul></details>
",True,False,11,35.61666666666667
Azure/azure-rest-api-specs/10324,2020-08-03T18:34:09Z,False,5f2859e2bd35430eb787e4b2,"<h3>Azure CLI Extension Generation</h3><div>
No <b>readme.md</b> specification configuration files were found that are associated with the files modified in this pull request, or <b>swagger_to_sdk</b> section in readme.md is not configured
</div>


",True,False,11,35.61666666666667
Azure/azure-rest-api-specs/10324,2020-08-03T18:34:13Z,False,5f2859d5bd3543097812f405,"<h3>azure-sdk-for-js</h3><div></div><details><summary><code>🔄</code> inProgress
    [<a href=""https://sdkautomation.blob.core.windows.net/sdkautomation-pipeline/Azure/azure-rest-api-specs/10324/azure-sdk-for-js/logs.txt"" target=""_blank"">Logs</a>] [Expand Details]
  </summary><ul><li><div><code>🔄</code> Generate from ba1ad7484c9853a6139e73d76f8cdb9b4481b5fa with merge commit 1f1d6166a5fe3313f88a77827ade6ba7d12bd053. SDK Automation 13.0.17.20200619.4
      </div></li></ul></details>
",True,False,11,35.61666666666667
Azure/azure-rest-api-specs/10324,2020-08-03T18:34:15Z,False,5f2859d8bd3543109317b0c1,"<h3>azure-sdk-for-python</h3><div></div><details><summary><code>⚠️</code> warning
    [<a href=""https://sdkautomation.blob.core.windows.net/sdkautomation-pipeline/Azure/azure-rest-api-specs/10324/azure-sdk-for-python/logs.txt"" target=""_blank"">Logs</a>] [Expand Details]
  </summary><ul><li><div><code>⚠️</code> Generate from ba1ad7484c9853a6139e73d76f8cdb9b4481b5fa with merge commit 1f1d6166a5fe3313f88a77827ade6ba7d12bd053. SDK Automation 13.0.17.20200619.4
      </div><pre>[AutoRest] WARNING: HEAD 'get_entity_tag' method missing 404 status code section -- this might be unintentional.
[AutoRest] WARNING: HEAD 'get_entity_tag' method missing 404 status code section -- this might be unintentional.
[AutoRest] WARNING: HEAD 'get_entity_tag' method missing 404 status code section -- this might be unintentional.
[AutoRest] WARNING: HEAD 'get_entity_tag' method missing 404 status code section -- this might be unintentional.
[AutoRest] WARNING: HEAD 'get_entity_state_by_operation' method missing 404 status code section -- this might be unintentional.
[AutoRest] WARNING: HEAD 'get_entity_state_by_api' method missing 404 status code section -- this might be unintentional.
[AutoRest] WARNING: HEAD 'get_entity_state_by_product' method missing 404 status code section -- this might be unintentional.
[AutoRest] WARNING: HEAD 'get_entity_state' method missing 404 status code section -- this might be unintentional.
[AutoRest] WARNING: HEAD 'get_entity_tag' method missing 404 status code section -- this might be unintentional.
[AutoRest] WARNING: HEAD 'get_entity_tag' method missing 404 status code section -- this might be unintentional.
[AutoRest] WARNING: HEAD 'get_entity_tag' method missing 404 status code section -- this might be unintentional.
[AutoRest] WARNING: HEAD 'get_entity_tag' method missing 404 status code section -- this might be unintentional.
[AutoRest] WARNING: HEAD 'get_entity_tag' method missing 404 status code section -- this might be unintentional.
[AutoRest] WARNING: HEAD 'get_entity_tag' method missing 404 status code section -- this might be unintentional.
[AutoRest] WARNING: HEAD 'get_entity_tag' method missing 404 status code section -- this might be unintentional.
[AutoRest] WARNING: HEAD 'get_entity_tag' method missing 404 status code section -- this might be unintentional.
[AutoRest] WARNING: HEAD 'get_entity_tag' method missing 404 status code section -- this might be unintentional.
[AutoRest] WARNING: HEAD 'get_entity_tag' method missing 404 status code section -- this might be unintentional.
[AutoRest] WARNING: HEAD 'get_entity_tag' method missing 404 status code section -- this might be unintentional.
[AutoRest] WARNING: HEAD 'get_entity_tag' method missing 404 status code section -- this might be unintentional.
[AutoRest] WARNING: HEAD 'get_entity_tag' method missing 404 status code section -- this might be unintentional.
[AutoRest] WARNING: HEAD 'get_entity_tag' method missing 404 status code section -- this might be unintentional.
[AutoRest] WARNING: HEAD 'get_entity_tag' method missing 404 status code section -- this might be unintentional.
[AutoRest] WARNING: HEAD 'get_entity_tag' method missing 404 status code section -- this might be unintentional.
[AutoRest] WARNING: HEAD 'get_entity_tag' method missing 404 status code section -- this might be unintentional.
[AutoRest] WARNING: HEAD 'get_entity_tag' method missing 404 status code section -- this might be unintentional.
[AutoRest] WARNING: HEAD 'get_entity_tag' method missing 404 status code section -- this might be unintentional.
[AutoRest] WARNING: HEAD 'get_entity_tag' method missing 404 status code section -- this might be unintentional.
[AutoRest] WARNING: HEAD 'get_entity_tag' method missing 404 status code section -- this might be unintentional.
[AutoRest] WARNING: HEAD 'get_entity_tag' method missing 404 status code section -- this might be unintentional.
[AutoRest] WARNING: HEAD 'get_entity_tag' method missing 404 status code section -- this might be unintentional.
[AutoRest] WARNING: HEAD 'get_entity_tag' method missing 404 status code section -- this might be unintentional.
[AutoRest] WARNING: HEAD 'get_entity_tag' method missing 404 status code section -- this might be unintentional.
[AutoRest] WARNING: HEAD 'get_entity_tag' method missing 404 status code section -- this might be unintentional.
[AutoRest] WARNING: HEAD 'get_entity_tag' method missing 404 status code section -- this might be unintentional.
[AutoRest] WARNING: HEAD 'get_entity_tag' method missing 404 status code section -- this might be unintentional.
[AutoRest] WARNING: HEAD 'get_entity_tag' method missing 404 status code section -- this might be unintentional.
[AutoRest] WARNING: HEAD 'check_entity_exists' method missing 404 status code section -- this might be unintentional.
[AutoRest] WARNING: HEAD 'check_entity_exists' method missing 404 status code section -- this might be unintentional.
[AutoRest] WARNING: HEAD 'get_entity_tag' method missing 404 status code section -- this might be unintentional.
[AutoRest] WARNING: HEAD 'get_entity_tag' method missing 404 status code section -- this might be unintentional.
[AutoRest] WARNING: HEAD 'get_entity_tag' method missing 404 status code section -- this might be unintentional.
[AutoRest] WARNING: HEAD 'get_entity_tag' method missing 404 status code section -- this might be unintentional.</pre></li><li><div><span><code>⚠️</code><b>azure-mgmt-apimanagement</b>
          [<a href=""https://sdkautomation.blob.core.windows.net/sdkautomation-pipeline/Azure/azure-rest-api-specs/10324/azure-sdk-for-python/Azure/azure-sdk-for-python/azure-mgmt-apimanagement/logs.txt"" target=""_blank"">View full logs</a>]&nbsp;
        </span></div><ul><li><a href=""https://sdkautomation.blob.core.windows.net/sdkautomation-pipeline/Azure/azure-rest-api-specs/10324/azure-sdk-for-python/Azure/azure-sdk-for-python/azure-mgmt-apimanagement/azure-mgmt-apimanagement-0.2.0.zip"" target=""_blank"">azure-mgmt-apimanagement-0.2.0.zip</a></li><li><a href=""https://sdkautomation.blob.core.windows.net/sdkautomation-pipeline/Azure/azure-rest-api-specs/10324/azure-sdk-for-python/Azure/azure-sdk-for-python/azure-mgmt-apimanagement/azure_mgmt_apimanagement-0.2.0-py2.py3-none-any.whl"" target=""_blank"">azure_mgmt_apimanagement-0.2.0-py2.py3-none-any.whl</a></li></ul><pre>[build_conf] INFO:packaging_tools:Building template azure-mgmt-apimanagement
[build_conf] INFO:packaging_tools.conf:Skipping default conf since the file exists
[build_conf] INFO:packaging_tools:Skipping CHANGELOG.md template, since a previous one was found
[build_conf] INFO:packaging_tools:Template done azure-mgmt-apimanagement
[build_package] /usr/lib/python3.6/distutils/dist.py:261: UserWarning: Unknown distribution option: 'long_description_content_type'
[build_package]   warnings.warn(msg)
[build_package] warning: no files found matching '*.py' under directory 'tests'
[build_package] warning: no files found matching '*.yaml' under directory 'tests'
[build_package] /usr/lib/python3.6/distutils/dist.py:261: UserWarning: Unknown distribution option: 'long_description_content_type'
[build_package]   warnings.warn(msg)
[build_package] warning: no files found matching '*.py' under directory 'tests'
[build_package] warning: no files found matching '*.yaml' under directory 'tests'
No file is changed.</pre></li></ul></details>
",True,False,11,35.61666666666667
Azure/azure-rest-api-specs/10324,2020-08-03T18:34:22Z,False,5f2859e0bd35430304d55654,"<h3>azure-sdk-for-python-track2</h3><div>
No <b>readme.md</b> specification configuration files were found that are associated with the files modified in this pull request, or <b>swagger_to_sdk</b> section in readme.md is not configured
</div>


",True,False,11,35.61666666666667
Azure/azure-rest-api-specs/10324,2020-08-03T18:34:23Z,False,5f2859e1bd354317907c9143,"<h3>azure-sdk-for-java</h3><div>
No <b>readme.md</b> specification configuration files were found that are associated with the files modified in this pull request, or <b>swagger_to_sdk</b> section in readme.md is not configured
</div>


",True,False,11,35.61666666666667
Azure/azure-rest-api-specs/10324,2020-08-03T18:34:30Z,False,5f2859edbd35430b4575f470,"<h3>Trenton Generation</h3><div>
No <b>readme.md</b> specification configuration files were found that are associated with the files modified in this pull request, or <b>swagger_to_sdk</b> section in readme.md is not configured
</div>


",True,False,11,35.61666666666667
Azure/azure-rest-api-specs/10324,2020-08-03T18:34:43Z,False,5f2859f8bd3543090d01fe95,"<h3>azure-sdk-for-net</h3><div></div><details><summary><code>🔄</code> inProgress
    [<a href=""https://sdkautomation.blob.core.windows.net/sdkautomation-pipeline/Azure/azure-rest-api-specs/10324/azure-sdk-for-net/logs.txt"" target=""_blank"">Logs</a>] [Expand Details]
  </summary><ul><li><div><code>🔄</code> Generate from ba1ad7484c9853a6139e73d76f8cdb9b4481b5fa with merge commit 1f1d6166a5fe3313f88a77827ade6ba7d12bd053. SDK Automation 13.0.17.20200619.4
      </div></li></ul></details>
",True,False,11,35.61666666666667
Azure/azure-rest-api-specs/10324,2020-08-03T19:07:12Z,False,5f28619cbd3543792cad9af3,Can one of the admins verify this patch?,True,False,11,35.61666666666667
emmalevesque/lesbianherstoryarchives/5,2020-08-06T00:40:52Z,False,5f2b52c9bd354342ff556cef,"Looks like mixin-deep is no longer updatable, so this is no longer needed.",True,False,1,0.0
dknutsen/ember-needs-async/153,2020-08-06T18:08:18Z,False,5f2cc775bd3543674f84e4e9,Superseded by #158.,True,False,1,0.0
sj-log/eBook-crawler/5,2020-08-07T04:43:44Z,False,5f2cdfd8bd354327c3002b04,"Looks like elliptic is no longer a dependency, so this is no longer needed.",True,False,2,8361.766666666666
stencila/executa/169,2020-08-11T01:01:59Z,False,5f334e78bd3543668d4476a2,"# [Codecov](https://codecov.io/gh/stencila/executa/pull/169?src=pr&el=h1) Report
> Merging [#169](https://codecov.io/gh/stencila/executa/pull/169?src=pr&el=desc) into [master](https://codecov.io/gh/stencila/executa/commit/087d2c5c02fa228353ccf8ffd0131037be077ea9&el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/stencila/executa/pull/169/graphs/tree.svg?width=650&height=150&src=pr&token=5B0Zslhosm)](https://codecov.io/gh/stencila/executa/pull/169?src=pr&el=tree)

```diff
@@           Coverage Diff           @@
##           master     #169   +/-   ##
=======================================
  Coverage   63.65%   63.65%           
=======================================
  Files          42       42           
  Lines        2014     2014           
  Branches      408      408           
=======================================
  Hits         1282     1282           
  Misses        728      728           
  Partials        4        4           
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/stencila/executa/pull/169?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/stencila/executa/pull/169?src=pr&el=footer). Last update [83864ec...f61bce7](https://codecov.io/gh/stencila/executa/pull/169?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",True,False,1,0.0
ilyaulyanov/release-automatic-changelog/90,2020-08-17T21:22:36Z,False,5f3b5b17bd354321a9b9318e,Superseded by #93.,True,False,1,0.0
bahmutov/cypress-skip-and-only-ui/188,2020-08-20T03:12:13Z,False,5f3f56e4bd35433acf244467,":tada: This PR is included in version 1.2.7 :tada:

The release is available on:
- [npm package (@latest dist-tag)](https://www.npmjs.com/package/cypress-skip-and-only-ui/v/1.2.7)
- [GitHub release](https://github.com/bahmutov/cypress-skip-and-only-ui/releases/tag/v1.2.7)

Your **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",True,False,1,0.0
lifion/sqslite/109,2020-08-27T11:23:54Z,False,5f479909bd35436b04d06096,"# [Codecov](https://codecov.io/gh/lifion/sqslite/pull/109?src=pr&el=h1) Report
> Merging [#109](https://codecov.io/gh/lifion/sqslite/pull/109?src=pr&el=desc) into [develop](https://codecov.io/gh/lifion/sqslite/commit/9100347d4fa6abb02b84e185ae775221d95ff32a?el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/lifion/sqslite/pull/109/graphs/tree.svg?width=650&height=150&src=pr&token=B8NBNb0Oow)](https://codecov.io/gh/lifion/sqslite/pull/109?src=pr&el=tree)

```diff
@@            Coverage Diff            @@
##           develop      #109   +/-   ##
=========================================
  Coverage   100.00%   100.00%           
=========================================
  Files           12        12           
  Lines          276       276           
  Branches        50        50           
=========================================
  Hits           276       276           
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/lifion/sqslite/pull/109?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/lifion/sqslite/pull/109?src=pr&el=footer). Last update [9100347...d2a9626](https://codecov.io/gh/lifion/sqslite/pull/109?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",True,False,1,0.0
telsey-ai/Portfolio/1,2020-08-27T19:18:47Z,False,5f48085fbd35433ee628a248,Superseded by #3.,True,False,1,0.0
TheAlgorithms/Python/2362,2020-08-28T08:50:55Z,False,5f48c5c8bd35435836f58f2d,"Hey @Kush1101,
Something went wrong with the build.

TravisCI finished with status `errored`, which means the build failed because of something unrelated to the tests, such as a problem with a dependency or the build process itself.

<a href=""https:&#x2F;&#x2F;travis-ci.com&#x2F;TheAlgorithms&#x2F;Python&#x2F;builds&#x2F;181762125"">View build log</a>

###### TravisBuddy Request Identifier: 94a8bd60-e90b-11ea-ae3c-2d16223a9f65
",True,False,31,300.43333333333334
TheAlgorithms/Python/2362,2020-08-28T09:05:26Z,False,5f49c323bd35432ffe59d965,@cclauss Please review.,True,False,31,300.43333333333334
TheAlgorithms/Python/2362,2020-08-28T09:15:47Z,False,5f49c323bd35432ffe59d966,OK... With this one we are going to write __two different functions__ in the same file that solve the same problem and then we are going to write a [timeit](https://github.com/TheAlgorithms/Python/search?q=timeit) benchmark to tell us which one is faster.  The second function should leverage the [itertools](https://docs.python.org/3.8/library/itertools.html) module (combinations() or permutations()) and should pass the same doctests.,True,False,31,300.43333333333334
TheAlgorithms/Python/2362,2020-08-28T09:17:15Z,False,5f49c324bd35432ffe59d967,Okk. Working on it,True,False,31,300.43333333333334
TheAlgorithms/Python/2362,2020-08-28T10:07:38Z,False,5f48d8a1bd35437b110461e7,"> OK... With this one we are going to write **two different functions** in the same file that solve the same problem and then we are going to write a [timeit](https://github.com/TheAlgorithms/Python/search?q=timeit) benchmark to tell us which one is faster. The second function should leverage the [itertools](https://docs.python.org/3.8/library/itertools.html) module (combinations() or permutations()) and should pass the same doctests.

I have written two functions, but I am still not sure about the proper way to include [timeit](https://docs.python.org/3/library/timeit.html) in this code.

``` Python
def triplet_sum1(arr:List[int],X:int) ->tuple:
    """"""
    Returns a triplet in in array with sum equal to X,
    else (0, 0, 0).
    >>> triplet_sum1([13, 29, 7, 23, 5], 35)
    (5, 7, 23)
    >>> triplet_sum1([37, 9, 19, 50, 44], 65)
    (9, 19, 37)
    >>> arr = [6, 47, 27, 1, 15]
    >>> summ = 11
    >>> triplet_sum1(arr,summ)
    (0, 0, 0)
    """"""        
    triplets = list(permutations(arr,3))
    for triplet in triplets:
        if sum(triplet) == X:
            return tuple(sorted(triplet))
    return (0, 0, 0)    
def triplet_sum2(arr: List[int], X: int) -> tuple:
    """"""
    Returns a triplet in in array with sum equal to X,
    else (0, 0, 0).
    >>> triplet_sum2([13, 29, 7, 23, 5], 35)
    (5, 7, 23)
    >>> triplet_sum2([37, 9, 19, 50, 44], 65)
    (9, 19, 37)
    >>> arr = [6, 47, 27, 1, 15]
    >>> summ = 11
    >>> triplet_sum2(arr,summ)
    (0, 0, 0)
    """"""
    arr.sort()
    n = len(arr)
    for i in range(n - 1):
        left, right = i + 1, n - 1
        while left < right:
            if arr[i] + arr[left] + arr[right] == X:
                return (arr[i], arr[left], arr[right])
            elif arr[i] + arr[left] + arr[right] < X:
                left += 1
            elif arr[i] + arr[left] + arr[right] > X:
                right -= 1
    else:
        return (0, 0, 0)

```
Now should I do it like this?
```Python
""""""
""""""
Given an array of integers and another integer X,
we are required to find a triplet from the array such that it's sum is equal to X
""""""
from typing import List
from itertools import permutations
from timeit import repeat


def triplet_sum1(arr: List[int], X: int) -> tuple:
    """"""
    Returns a triplet in in array with sum equal to X,
    else (0, 0, 0).
    >>> triplet_sum1([13, 29, 7, 23, 5], 35)
    (5, 7, 23)
    >>> triplet_sum1([37, 9, 19, 50, 44], 65)
    (9, 19, 37)
    >>> arr = [6, 47, 27, 1, 15]
    >>> summ = 11
    >>> triplet_sum1(arr,summ)
    (0, 0, 0)
    """"""
    triplets = list(permutations(arr, 3))
    for triplet in triplets:
        if sum(triplet) == X:
            return tuple(sorted(triplet))
    return (0, 0, 0)


def sol1_time():
    setup_code = """""" 
from __main__ import triplet_sum1
from random import randint""""""
    test_code = """"""
arr = [randint(-1000, 1000) for i in range(10)]
r = randint(-5000, 5000)
triplet_sum1(arr,r)
    """"""
    times = repeat(stmt=test_code, setup=setup_code, repeat=5, number=10000)
    return f""Naive solution time is {min(times)}""


def triplet_sum2(arr: List[int], X: int) -> tuple:
    """"""
    Returns a triplet in in array with sum equal to X,
    else (0, 0, 0).
    >>> triplet_sum2([13, 29, 7, 23, 5], 35)
    (5, 7, 23)
    >>> triplet_sum2([37, 9, 19, 50, 44], 65)
    (9, 19, 37)
    >>> arr = [6, 47, 27, 1, 15]
    >>> summ = 11
    >>> triplet_sum2(arr,summ)
    (0, 0, 0)
    """"""
    arr.sort()
    n = len(arr)
    for i in range(n - 1):
        left, right = i + 1, n - 1
        while left < right:
            if arr[i] + arr[left] + arr[right] == X:
                return (arr[i], arr[left], arr[right])
            elif arr[i] + arr[left] + arr[right] < X:
                left += 1
            elif arr[i] + arr[left] + arr[right] > X:
                right -= 1
    else:
        return (0, 0, 0)


def sol2_time():
    setup_code = """""" 
from __main__ import triplet_sum2
from random import randint""""""
    test_code = """"""
arr = [randint(-1000, 1000) for i in range(10)]
r = randint(-5000, 5000)
triplet_sum2(arr,r)
    """"""
    times = repeat(stmt=test_code, setup=setup_code, repeat=5, number=10000)
    return f""Optimized solution time is {min(times)}""


if __name__ == ""__main__"":
    from doctest import testmod

    testmod()
    from random import randint

    arr = [randint(-1000, 1000) for i in range(100)]
    r = randint(-5000, 5000)
    print(f""{triplet_sum1(arr,r)}"")
    print(f""{sol1_time()}"")
    print(f""{triplet_sum2(arr,r)}"")
    print(f""{sol2_time()}"")

```",True,False,31,300.43333333333334
TheAlgorithms/Python/2362,2020-08-28T10:21:41Z,False,5f49c2b6bd3543495534469b,"I made a PR, so it will be easier for you to review and propose changes. @cclauss ",True,False,31,300.43333333333334
TheAlgorithms/Python/2362,2020-08-28T10:24:55Z,False,5f49bc70bd35432f9784435d,"Hey @Kush1101,
Something went wrong with the build.

TravisCI finished with status `errored`, which means the build failed because of something unrelated to the tests, such as a problem with a dependency or the build process itself.

<a href=""https:&#x2F;&#x2F;travis-ci.com&#x2F;TheAlgorithms&#x2F;Python&#x2F;builds&#x2F;181773396"">View build log</a>

###### TravisBuddy Request Identifier: b60306c0-e918-11ea-ae3c-2d16223a9f65
",True,False,31,300.43333333333334
TheAlgorithms/Python/2362,2020-08-28T11:16:12Z,False,5f48e8b4bd354304f5042b5b,"Nice!  A few trailing whitespaces to clean up.  When benchmarking it is vital that both algorithms are tested with the exact same dataset so please do something like this...
```python
def make_dataset():
     <your code here>
    return arr, target


dataset = make_dataset()

...

from __main__ import dataset, triplet_sum1, triplet_sum2

...

triplet_sum1(*dataset)

...

triplet_sum2(*dataset)
```",True,False,31,300.43333333333334
TheAlgorithms/Python/2362,2020-08-28T12:13:13Z,False,5f48f610bd35437aaea58dff,"```suggestion
    for triplet in permutations(arr, 3):
```",True,False,31,300.43333333333334
TheAlgorithms/Python/2362,2020-08-28T12:14:01Z,False,5f48f63ebd354379a90fcda8,"> Nice! A few trailing whitespaces to clean up. When benchmarking it is vital that both algorithms are tested with the exact same dataset so please do something like this...
> 
> ```python
> def make_dataset():
>      <your code here>
>     return arr, target
> 
> 
> dataset = make_dataset()
> 
> ...
> 
> from __main__ import dataset, triplet_sum1, triplet_sum2
> 
> ...
> 
> triplet_sum1(*dataset)
> 
> ...
> 
> triplet_sum2(*dataset)
> ```

I will do it now.",True,False,31,300.43333333333334
TheAlgorithms/Python/2362,2020-08-28T12:14:25Z,False,5f48f657bd354305c9298c80,"```suggestion
def triplet_sum1(arr: List[int], target: int) -> Tuple[int, int, int]:
```",True,False,31,300.43333333333334
TheAlgorithms/Python/2362,2020-08-28T12:15:18Z,False,5f49bbb2bd35434d2474c9cf,"```suggestion
from typing import List, Tuple
```",True,False,31,300.43333333333334
TheAlgorithms/Python/2362,2020-08-28T12:15:47Z,False,5f48f6aabd354310d24f91ba,"```suggestion
        if sum(triplet) == target:
```",True,False,31,300.43333333333334
TheAlgorithms/Python/2362,2020-08-28T12:18:39Z,False,5f48f76fbd35430e7789636c,"Hey @Kush1101,
Something went wrong with the build.

TravisCI finished with status `errored`, which means the build failed because of something unrelated to the tests, such as a problem with a dependency or the build process itself.

<a href=""https:&#x2F;&#x2F;travis-ci.com&#x2F;TheAlgorithms&#x2F;Python&#x2F;builds&#x2F;181786178"">View build log</a>

###### TravisBuddy Request Identifier: 99b5bed0-e928-11ea-ae3c-2d16223a9f65
",True,False,31,300.43333333333334
TheAlgorithms/Python/2362,2020-08-28T12:19:40Z,False,5f49bf09bd3543461a1dce4c,"Hey @Kush1101,
Something went wrong with the build.

TravisCI finished with status `errored`, which means the build failed because of something unrelated to the tests, such as a problem with a dependency or the build process itself.

<a href=""https:&#x2F;&#x2F;travis-ci.com&#x2F;TheAlgorithms&#x2F;Python&#x2F;builds&#x2F;181787393"">View build log</a>

###### TravisBuddy Request Identifier: bdf40130-e928-11ea-ae3c-2d16223a9f65
",True,False,31,300.43333333333334
TheAlgorithms/Python/2362,2020-08-28T12:20:54Z,False,5f48f7dbbd3543758747be10,"Hey @Kush1101,
Something went wrong with the build.

TravisCI finished with status `errored`, which means the build failed because of something unrelated to the tests, such as a problem with a dependency or the build process itself.

<a href=""https:&#x2F;&#x2F;travis-ci.com&#x2F;TheAlgorithms&#x2F;Python&#x2F;builds&#x2F;181787525"">View build log</a>

###### TravisBuddy Request Identifier: ea5d2d00-e928-11ea-ae3c-2d16223a9f65
",True,False,31,300.43333333333334
TheAlgorithms/Python/2362,2020-08-28T12:40:05Z,False,5f49bfa1bd35432eb03f683b,I tried to incorporate all the proposed changes. Both the functions are now tested on the same dataset. I also made other small changes. Please review it now. @cclauss ,True,False,31,300.43333333333334
TheAlgorithms/Python/2362,2020-08-28T13:08:16Z,False,5f49bcc5bd35432995ca8bc7,"```suggestion
from itertools import permutations
from random import randint
from timeit import repeat
from typing import List, Tuple
```
Please keep import sorted to make it easy to spot duplicate entries.",True,False,31,300.43333333333334
TheAlgorithms/Python/2362,2020-08-28T13:10:55Z,False,5f49bcbbbd354329d5c8c20f,"This is going to make each run work on a different dataset.  Only calculate dataset once, not twice.",True,False,31,300.43333333333334
TheAlgorithms/Python/2362,2020-08-28T13:12:19Z,False,5f49bcc6bd35434443f32778,I just make one call to the function `make_dataset` and store it in the variable `dataset`. It will be the same for both the functions.,True,False,31,300.43333333333334
TheAlgorithms/Python/2362,2020-08-28T13:20:08Z,False,5f49bceebd35432be299cd90,"```suggestion
    >>> target = 11
    >>> triplet_sum1(arr, target)
```",True,False,31,300.43333333333334
TheAlgorithms/Python/2362,2020-08-28T13:21:00Z,False,5f49bcf0bd35433bdb018edc,"```suggestion
    >>> target = 11
    >>> triplet_sum2(arr, target)
```",True,False,31,300.43333333333334
TheAlgorithms/Python/2362,2020-08-28T13:21:57Z,False,5f49bcfbbd35432a42077021,setupcode will run once here.,True,False,31,300.43333333333334
TheAlgorithms/Python/2362,2020-08-28T13:22:19Z,False,5f49bce6bd35432ac6a9559d,setupcode will run a second time here.,True,False,31,300.43333333333334
TheAlgorithms/Python/2362,2020-08-28T13:28:20Z,False,5f4907aebd3543600b5ac0c9,"Okk. I get it.
So how do I resolve this?",True,False,31,300.43333333333334
TheAlgorithms/Python/2362,2020-08-28T13:30:13Z,False,5f490880bd354354dc4f6b1e,"```suggestion
from __main__ import dataset, triplet_sum1, triplet_sum2
```",True,False,31,300.43333333333334
TheAlgorithms/Python/2362,2020-08-28T13:31:19Z,False,5f490880bd35435511af5bb1,"```suggestion
dataset = make_dataset()


def triplet_sum1(arr: List[int], target: int) -> Tuple[int, int, int]:
```",True,False,31,300.43333333333334
TheAlgorithms/Python/2362,2020-08-28T13:34:31Z,False,5f49bd16bd35432a2b04e437,"When I do this I get an error, 
```Python
NameError: name 'dataset' is not defined
```",True,False,31,300.43333333333334
TheAlgorithms/Python/2362,2020-08-28T13:38:47Z,False,5f49bd24bd35432be299cdae,Commit this suggestion and you will not get that NameError,True,False,31,300.43333333333334
TheAlgorithms/Python/2362,2020-08-28T13:49:11Z,False,5f49c211bd35432f23ab5fe7,"This is very impressive.  Nice work.  This shows the power of an algorithm.  The Python standard library gives us tools to express complex things simply -- triplet_sum1() short, tidy, and easy to reason about.  However, it is no match of the specific algorithm in triplet_sum2() that is longer and more difficult to reason about but delivers correct answers in a fraction of the time.",True,False,31,300.43333333333334
TheAlgorithms/Python/2362,2020-08-28T13:51:21Z,False,5f490d0ebd354354dc4f6c3d,"> This is very impressive. Nice work. This shows the power of an algorithm. The Python standard library gives us tools to express complex things simply -- triplet_sum1() short, tidy, and easy to reason about. However, it is no match of the specific algorithm in triplet_sum2() that is longer and more difficult to reason about but delivers correct answers in a fraction of the time.

True. 
But I still don't get the fact that when I am running,
`dataset = make_dataset`
I get 'nameerror'. But when you did it it is passing. 😂😅",True,False,31,300.43333333333334
theintern/leadfoot/191,2020-09-04T03:22:58Z,False,5f535347bd35434678eec0d1,"[![CLA assistant check](https://cla.js.foundation/pull/badge/not_signed)](https://cla.js.foundation/theintern/leadfoot?pullRequest=191) <br/>Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our [Contributor License Agreement](https://cla.js.foundation/theintern/leadfoot?pullRequest=191) before we can accept your contribution.<br/>",True,False,1,0.0
samhwang/docker-php-image/17,2020-09-06T23:17:49Z,False,5f556fa6bd35434a5ad46c0e,"Looks like php is up-to-date now, so this is no longer needed.",True,False,1,0.0
okonomi/blg/1246,2020-09-07T20:03:54Z,False,5f56935fbd3543691508e393,Superseded by #1262.,True,False,1,0.0
iobroker-community-adapters/ioBroker.hue/133,2020-09-07T20:29:52Z,False,5f56997bbd35430e1a09a939,Superseded by #135.,True,False,2,0.0
iobroker-community-adapters/ioBroker.hue/133,2020-09-07T20:29:52Z,False,5f56997bbd35430e1a09a93a,Superseded by #135.,True,False,2,0.0
jupyterhub/configurable-http-proxy/259,2020-09-08T06:49:45Z,False,5f587c63bd354328d9417de0,Looks safe to merge from https://github.com/tj/commander.js/blob/master/CHANGELOG.md#600-2020-07-21,True,False,1,0.0
sebastian-software/polyfill-manager/2,2020-09-10T07:27:40Z,False,5f59d868bd35437987702732,"Looks like handlebars is no longer a dependency, so this is no longer needed.",True,False,1,0.0
bcgov/NRPTI/611,2020-09-17T22:57:24Z,False,5f63eab9bd3543605efb7b80,"Kudos, SonarCloud Quality Gate passed!

[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug.png' alt='Bug' width='16' height='16' />](https://sonarcloud.io/project/issues?id=bcgov_NRPTI&pullRequest=611&resolved=false&types=BUG) [<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A.png' alt='A' width='16' height='16' />](https://sonarcloud.io/project/issues?id=bcgov_NRPTI&pullRequest=611&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=bcgov_NRPTI&pullRequest=611&resolved=false&types=BUG)  
[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability.png' alt='Vulnerability' width='16' height='16' />](https://sonarcloud.io/project/issues?id=bcgov_NRPTI&pullRequest=611&resolved=false&types=VULNERABILITY) [<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A.png' alt='A' width='16' height='16' />](https://sonarcloud.io/project/issues?id=bcgov_NRPTI&pullRequest=611&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=bcgov_NRPTI&pullRequest=611&resolved=false&types=VULNERABILITY) (and [<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot.png' alt='Security Hotspot' width='16' height='16' />](https://sonarcloud.io/project/issues?id=bcgov_NRPTI&pullRequest=611&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/issues?id=bcgov_NRPTI&pullRequest=611&resolved=false&types=SECURITY_HOTSPOT) to review)  
[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell.png' alt='Code Smell' width='16' height='16' />](https://sonarcloud.io/project/issues?id=bcgov_NRPTI&pullRequest=611&resolved=false&types=CODE_SMELL) [<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A.png' alt='A' width='16' height='16' />](https://sonarcloud.io/project/issues?id=bcgov_NRPTI&pullRequest=611&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=bcgov_NRPTI&pullRequest=611&resolved=false&types=CODE_SMELL)

[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo.png' alt='No Coverage information' width='16' height='16' />](https://sonarcloud.io/component_measures?id=bcgov_NRPTI&pullRequest=611) No Coverage information  
[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/3.png' alt='0.0%' width='16' height='16' />](https://sonarcloud.io/component_measures?id=bcgov_NRPTI&pullRequest=611&metric=new_duplicated_lines_density&view=list) [0.0% Duplication](https://sonarcloud.io/component_measures?id=bcgov_NRPTI&pullRequest=611&metric=new_duplicated_lines_density&view=list)

",True,False,4,1178.7333333333333
bcgov/NRPTI/611,2020-09-17T23:01:40Z,False,5f63ec0cbd354364f9087644,"Kudos, SonarCloud Quality Gate passed!

[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug.png' alt='Bug' width='16' height='16' />](https://sonarcloud.io/project/issues?id=bcgov_NRPTI&pullRequest=611&resolved=false&types=BUG) [<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A.png' alt='A' width='16' height='16' />](https://sonarcloud.io/project/issues?id=bcgov_NRPTI&pullRequest=611&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=bcgov_NRPTI&pullRequest=611&resolved=false&types=BUG)  
[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability.png' alt='Vulnerability' width='16' height='16' />](https://sonarcloud.io/project/issues?id=bcgov_NRPTI&pullRequest=611&resolved=false&types=VULNERABILITY) [<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A.png' alt='A' width='16' height='16' />](https://sonarcloud.io/project/issues?id=bcgov_NRPTI&pullRequest=611&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=bcgov_NRPTI&pullRequest=611&resolved=false&types=VULNERABILITY) (and [<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot.png' alt='Security Hotspot' width='16' height='16' />](https://sonarcloud.io/project/issues?id=bcgov_NRPTI&pullRequest=611&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/issues?id=bcgov_NRPTI&pullRequest=611&resolved=false&types=SECURITY_HOTSPOT) to review)  
[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell.png' alt='Code Smell' width='16' height='16' />](https://sonarcloud.io/project/issues?id=bcgov_NRPTI&pullRequest=611&resolved=false&types=CODE_SMELL) [<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A.png' alt='A' width='16' height='16' />](https://sonarcloud.io/project/issues?id=bcgov_NRPTI&pullRequest=611&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=bcgov_NRPTI&pullRequest=611&resolved=false&types=CODE_SMELL)

[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo.png' alt='No Coverage information' width='16' height='16' />](https://sonarcloud.io/component_measures?id=bcgov_NRPTI&pullRequest=611) No Coverage information  
[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/3.png' alt='0.0%' width='16' height='16' />](https://sonarcloud.io/component_measures?id=bcgov_NRPTI&pullRequest=611&metric=new_duplicated_lines_density&view=list) [0.0% Duplication](https://sonarcloud.io/component_measures?id=bcgov_NRPTI&pullRequest=611&metric=new_duplicated_lines_density&view=list)

",True,False,4,1178.7333333333333
bcgov/NRPTI/611,2020-09-17T23:11:14Z,False,5f63ee45bd3543738b9eca8f,"Kudos, SonarCloud Quality Gate passed!

[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug.png' alt='Bug' width='16' height='16' />](https://sonarcloud.io/project/issues?id=bcgov_NRPTI&pullRequest=611&resolved=false&types=BUG) [<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A.png' alt='A' width='16' height='16' />](https://sonarcloud.io/project/issues?id=bcgov_NRPTI&pullRequest=611&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=bcgov_NRPTI&pullRequest=611&resolved=false&types=BUG)  
[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability.png' alt='Vulnerability' width='16' height='16' />](https://sonarcloud.io/project/issues?id=bcgov_NRPTI&pullRequest=611&resolved=false&types=VULNERABILITY) [<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A.png' alt='A' width='16' height='16' />](https://sonarcloud.io/project/issues?id=bcgov_NRPTI&pullRequest=611&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=bcgov_NRPTI&pullRequest=611&resolved=false&types=VULNERABILITY) (and [<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot.png' alt='Security Hotspot' width='16' height='16' />](https://sonarcloud.io/project/issues?id=bcgov_NRPTI&pullRequest=611&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/issues?id=bcgov_NRPTI&pullRequest=611&resolved=false&types=SECURITY_HOTSPOT) to review)  
[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell.png' alt='Code Smell' width='16' height='16' />](https://sonarcloud.io/project/issues?id=bcgov_NRPTI&pullRequest=611&resolved=false&types=CODE_SMELL) [<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A.png' alt='A' width='16' height='16' />](https://sonarcloud.io/project/issues?id=bcgov_NRPTI&pullRequest=611&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=bcgov_NRPTI&pullRequest=611&resolved=false&types=CODE_SMELL)

[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo.png' alt='No Coverage information' width='16' height='16' />](https://sonarcloud.io/component_measures?id=bcgov_NRPTI&pullRequest=611) No Coverage information  
[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/3.png' alt='0.0%' width='16' height='16' />](https://sonarcloud.io/component_measures?id=bcgov_NRPTI&pullRequest=611&metric=new_duplicated_lines_density&view=list) [0.0% Duplication](https://sonarcloud.io/component_measures?id=bcgov_NRPTI&pullRequest=611&metric=new_duplicated_lines_density&view=list)

",True,False,4,1178.7333333333333
bcgov/NRPTI/611,2020-09-18T18:36:08Z,False,5f650412bd35430f2f36f495,"Kudos, SonarCloud Quality Gate passed!

[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug.png' alt='Bug' width='16' height='16' />](https://sonarcloud.io/project/issues?id=bcgov_NRPTI&pullRequest=611&resolved=false&types=BUG) [<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A.png' alt='A' width='16' height='16' />](https://sonarcloud.io/project/issues?id=bcgov_NRPTI&pullRequest=611&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=bcgov_NRPTI&pullRequest=611&resolved=false&types=BUG)  
[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability.png' alt='Vulnerability' width='16' height='16' />](https://sonarcloud.io/project/issues?id=bcgov_NRPTI&pullRequest=611&resolved=false&types=VULNERABILITY) [<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A.png' alt='A' width='16' height='16' />](https://sonarcloud.io/project/issues?id=bcgov_NRPTI&pullRequest=611&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=bcgov_NRPTI&pullRequest=611&resolved=false&types=VULNERABILITY) (and [<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot.png' alt='Security Hotspot' width='16' height='16' />](https://sonarcloud.io/project/issues?id=bcgov_NRPTI&pullRequest=611&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/issues?id=bcgov_NRPTI&pullRequest=611&resolved=false&types=SECURITY_HOTSPOT) to review)  
[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell.png' alt='Code Smell' width='16' height='16' />](https://sonarcloud.io/project/issues?id=bcgov_NRPTI&pullRequest=611&resolved=false&types=CODE_SMELL) [<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A.png' alt='A' width='16' height='16' />](https://sonarcloud.io/project/issues?id=bcgov_NRPTI&pullRequest=611&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=bcgov_NRPTI&pullRequest=611&resolved=false&types=CODE_SMELL)

[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo.png' alt='No Coverage information' width='16' height='16' />](https://sonarcloud.io/component_measures?id=bcgov_NRPTI&pullRequest=611) No Coverage information  
[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/3.png' alt='0.0%' width='16' height='16' />](https://sonarcloud.io/component_measures?id=bcgov_NRPTI&pullRequest=611&metric=new_duplicated_lines_density&view=list) [0.0% Duplication](https://sonarcloud.io/component_measures?id=bcgov_NRPTI&pullRequest=611&metric=new_duplicated_lines_density&view=list)

",True,False,4,1178.7333333333333
DefinitelyTyped/DefinitelyTyped/48146,2020-09-24T19:35:55Z,False,5f726da7bd35437f55f9b260,"<!-- @dt-perf {""version"":2,""data"":{""overallChange"":0,""benchmarks"":[{""createdAt"":""2020-09-24T19:35:54.846Z""}]}} -->

👋 **Hi there!** I’ve run some quick measurements against master and your PR. These metrics should help the humans reviewing this PR gauge whether it might negatively affect compile times or editor responsiveness for users who install these typings.


Let’s review the numbers, shall we?



<details>
<summary><strong>Comparison details</strong> 📊</summary>

|                                                                                           | master                                                                                                                                                 | #48146                                                                                                                                                  | diff  |
| ----------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------------------------------------- | ----- |
| **Batch compilation**                                                                     |                                                                                                                                                        |                                                                                                                                                         |       |
| Memory usage (MiB)                                                                        | 105.1                                                                                                                                                  | 106.4                                                                                                                                                   | +1.2% |
| Type count                                                                                | 20405                                                                                                                                                  | 20405                                                                                                                                                   | 0%    |
| Assignability cache size                                                                  | 168805                                                                                                                                                 | 168805                                                                                                                                                  | 0%    |
|                                                                                           |                                                                                                                                                        |                                                                                                                                                         |       |
| **Language service**                                                                      |                                                                                                                                                        |                                                                                                                                                         |       |
| Samples taken                                                                             | 25                                                                                                                                                     | 25                                                                                                                                                      | 0%    |
| Identifiers in tests                                                                      | 25                                                                                                                                                     | 25                                                                                                                                                      | 0%    |
| **`getCompletionsAtPosition`**                                                            |                                                                                                                                                        |                                                                                                                                                         |       |
| &nbsp;&nbsp;&nbsp;&nbsp;Mean duration (ms)                                                | 132.6                                                                                                                                                  | 131.5                                                                                                                                                   | -0.9% |
| &nbsp;&nbsp;&nbsp;&nbsp;Mean [CV](https://en.wikipedia.org/wiki/Coefficient_of_variation) | 16.7%                                                                                                                                                  | 14.4%                                                                                                                                                   |       |
| &nbsp;&nbsp;&nbsp;&nbsp;Worst duration (ms)                                               | 172.0                                                                                                                                                  | 173.5                                                                                                                                                   | +0.9% |
| &nbsp;&nbsp;&nbsp;&nbsp;Worst identifier                                                  | [MacroError](/DefinitelyTyped/DefinitelyTyped/blob/3c9ba9e286d3176a5092e02647382a9897db220b/types/babel-plugin-macros/babel-plugin-macros-tests.ts#L9) | [configName](/DefinitelyTyped/DefinitelyTyped/blob/46484d7ac8d546d988a0a5a181c7381bb9353751/types/babel-plugin-macros/babel-plugin-macros-tests.ts#L11) |       |
| **`getQuickInfoAtPosition`**                                                              |                                                                                                                                                        |                                                                                                                                                         |       |
| &nbsp;&nbsp;&nbsp;&nbsp;Mean duration (ms)                                                | 129.9                                                                                                                                                  | 132.2                                                                                                                                                   | +1.8% |
| &nbsp;&nbsp;&nbsp;&nbsp;Mean [CV](https://en.wikipedia.org/wiki/Coefficient_of_variation) | 13.2%                                                                                                                                                  | 14.0%                                                                                                                                                   | +5.8% |
| &nbsp;&nbsp;&nbsp;&nbsp;Worst duration (ms)                                               | 155.2                                                                                                                                                  | 156.8                                                                                                                                                   | +1.0% |
| &nbsp;&nbsp;&nbsp;&nbsp;Worst identifier                                                  | [MacroError](/DefinitelyTyped/DefinitelyTyped/blob/3c9ba9e286d3176a5092e02647382a9897db220b/types/babel-plugin-macros/babel-plugin-macros-tests.ts#L9) | [configName](/DefinitelyTyped/DefinitelyTyped/blob/46484d7ac8d546d988a0a5a181c7381bb9353751/types/babel-plugin-macros/babel-plugin-macros-tests.ts#L11) |       |


</details>

It looks like nothing changed too much. I won’t post performance data again unless it gets worse.",True,False,4,39.56666666666667
DefinitelyTyped/DefinitelyTyped/48146,2020-09-24T19:58:22Z,False,5f724a45bd35436d2bf8f361,"@jablko Thank you for submitting this PR!

***This is a live comment which I will keep updated.***

## 1 package in this PR

- `babel-plugin-macros` [on npm](https://www.npmjs.com/package/babel-plugin-macros), [on unpkg](https://unpkg.com/browse/babel-plugin-macros@latest/)

## Code Reviews

Because this PR edits the configuration file, it can be merged once it's reviewed by a DT maintainer.

## Status

 * ✅ No merge conflicts
 * ✅ Continuous integration tests have passed
 * ❌ A DT maintainer needs to approve changes which affect module config files
   - `babel-plugin-macros/tsconfig.json`: changes outside of ""files"" list

Once every item on this list is checked, I'll ask you for permission to merge and publish the changes.

----------------------
<details><summary>Diagnostic Information: What the bot saw about this PR</summary>

```json
{
  ""type"": ""info"",
  ""now"": ""-"",
  ""pr_number"": 48146,
  ""author"": ""jablko"",
  ""owners"": [
    ""billykwok"",
    ""coffee-cup"",
    ""ifiokjr""
  ],
  ""dangerLevel"": ""ScopedAndConfiguration"",
  ""headCommitAbbrOid"": ""a9c0f5c"",
  ""headCommitOid"": ""a9c0f5c3c3fbd85ddc21661f004916cacf66390c"",
  ""mergeIsRequested"": false,
  ""stalenessInDays"": 0,
  ""lastPushDate"": ""2020-09-24T19:30:43.000Z"",
  ""reopenedDate"": ""2020-09-24T19:57:46.000Z"",
  ""lastCommentDate"": ""2020-09-24T19:30:43.000Z"",
  ""maintainerBlessed"": false,
  ""reviewLink"": ""https://github.com/DefinitelyTyped/DefinitelyTyped/pull/48146/files"",
  ""hasMergeConflict"": false,
  ""authorIsOwner"": false,
  ""isFirstContribution"": false,
  ""popularityLevel"": ""Well-liked by everyone"",
  ""newPackages"": [],
  ""packages"": [
    ""babel-plugin-macros""
  ],
  ""files"": [
    {
      ""path"": ""types/babel-plugin-macros/tsconfig.json"",
      ""kind"": ""package-meta"",
      ""package"": ""babel-plugin-macros"",
      ""suspect"": ""changes outside of \""files\"" list""
    }
  ],
  ""hasDismissedReview"": false,
  ""ciResult"": ""pass"",
  ""reviewersWithStaleReviews"": [],
  ""approvalFlags"": 0,
  ""isChangesRequested"": false
}
```

</details>
<!--typescript_bot_welcome-->",True,False,4,39.56666666666667
DefinitelyTyped/DefinitelyTyped/48146,2020-09-24T19:58:23Z,False,5f724a48bd35436c8001d35c,"🔔 @billykwok @coffee-cup @ifiokjr — please [review this PR](https://github.com/DefinitelyTyped/DefinitelyTyped/pull/48146/files) in the next few days. Be sure to explicitly select **`Approve`** or **`Request Changes`** in the GitHub UI so I know what's going on.
<!--typescript_bot_pinging-reviewers-->",True,False,4,39.56666666666667
DefinitelyTyped/DefinitelyTyped/48146,2020-09-24T20:15:29Z,False,5f726f01bd35437352fe47dd,I just published [`@types/babel-plugin-macros@2.8.3` to npm](https://www.npmjs.com/package/@types/babel-plugin-macros).,True,False,4,39.56666666666667
navinprasadk/merge-conflicts/4,2020-09-25T15:48:21Z,False,5f72c443bd354378233be987,"## Where do conflicts come from?

In a real world scenario, it's possible that a peer or colleague will have edited the same file in the same place as your pull request.

To demonstrate, I'll stand in as your colleague :wave:. In this other pull request https://github.com/navinprasadk/merge-conflicts/pull/2, you'll see that the education file has been changed. The other pull request was just merged to `master`, which means there's now a conflict in your pull request.

## Step 6: Resolve new conflicts

### :keyboard: Activity: Resolve the conflict


1. In the ""This branch has conflicts that must be resolved"" section of the pull request, click **Resolve conflicts**.


Because you created the conflict, feel free to resolve this conflict as you wish.

<hr>
<h3 align=""center"">Return to this pull request for next steps.</h3>
",True,False,3,2.65
navinprasadk/merge-conflicts/4,2020-09-25T15:49:48Z,False,5f72c45ebd3543796af3332a,"## Step 7: Merge the  pull request

Great job, @navinprasadk, your pull request is free of conflicts. :tada: Go ahead and merge this pull request now. 
 
### :keyboard: Activity: Merge this pull request


1. Click **Merge pull request** below.
2. Click **Confirm Merge**.
3. Click **Delete branch**.



<hr>
<h3 align=""center"">Watch below for my response.</h3>

",True,False,3,2.65
navinprasadk/merge-conflicts/4,2020-09-25T15:51:00Z,False,5f72c479bd35436d87fbb060,"Yay! You've done it! You've resolved all of the conflicts. I have a few pointers for completing your resume, so I've opened one last issue for that information.

<hr>
<h3 align=""center"">Check out the final issue <a href=""https://github.com/navinprasadk/merge-conflicts/issues/5"">here</a>!</h3>
",True,False,3,2.65
openbrian/osm-microcosms/76,2020-09-28T06:18:28Z,False,5f7361dabd354377a678aee9,Superseded by #79.,True,False,1,0.0
bryanforbes/Erasmus/90,2020-09-30T05:54:55Z,False,5f75a332bd3543712f8af766,"# [Codecov](https://codecov.io/gh/bryanforbes/Erasmus/pull/90?src=pr&el=h1) Report
> Merging [#90](https://codecov.io/gh/bryanforbes/Erasmus/pull/90?src=pr&el=desc) into [master](https://codecov.io/gh/bryanforbes/Erasmus/commit/703514172ff3e441c76817e49ec02349b13a94f1?el=desc) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/bryanforbes/Erasmus/pull/90/graphs/tree.svg?width=650&height=150&src=pr&token=xsH4BoOnii)](https://codecov.io/gh/bryanforbes/Erasmus/pull/90?src=pr&el=tree)

```diff
@@           Coverage Diff           @@
##           master      #90   +/-   ##
=======================================
  Coverage   57.99%   57.99%           
=======================================
  Files          24       24           
  Lines        1476     1476           
  Branches      199      199           
=======================================
  Hits          856      856           
  Misses        611      611           
  Partials        9        9           
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/bryanforbes/Erasmus/pull/90?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/bryanforbes/Erasmus/pull/90?src=pr&el=footer). Last update [7035141...035f6c3](https://codecov.io/gh/bryanforbes/Erasmus/pull/90?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",True,False,2,5348.7
bryanforbes/Erasmus/90,2020-10-03T23:03:37Z,False,5f7904bfbd35437f01fd5c84,"Looks like isort is up-to-date now, so this is no longer needed.",True,False,2,5348.7
Nevvulo/auditory/5,2020-10-06T18:02:10Z,False,5f824469bd354315d682dd06,Superseded by #6.,True,False,1,0.0
vitessio/vitess/4722,2020-10-06T18:11:53Z,False,5f82c316bd354315d6831ac4,This has been addressed in #6284. Please feel free to re-open if that doesn't cover all situations.,True,False,11,824898.4333333333
AY2021S1-CS2103T-W17-2/tp/35,2020-10-13T08:57:44Z,False,5f8c4004bd35435e09de36d3,"Update code related to display Exercise.
",True,False,11,374.1333333333333
AY2021S1-CS2103T-W17-2/tp/35,2020-10-13T14:11:08Z,False,5f8be437bd354354cac47cde,"# [Codecov](https://codecov.io/gh/AY2021S1-CS2103T-W17-2/tp/pull/35?src=pr&el=h1) Report
> Merging [#35](https://codecov.io/gh/AY2021S1-CS2103T-W17-2/tp/pull/35?src=pr&el=desc) into [v1.2](https://codecov.io/gh/AY2021S1-CS2103T-W17-2/tp/commit/34860709b1a8abf7c5dbaadec1a6644d4b8a4d62?el=desc) will **decrease** coverage by `6.47%`.
> The diff coverage is `0.46%`.

[![Impacted file tree graph](https://codecov.io/gh/AY2021S1-CS2103T-W17-2/tp/pull/35/graphs/tree.svg?width=650&height=150&src=pr&token=4Sbssb7wiV)](https://codecov.io/gh/AY2021S1-CS2103T-W17-2/tp/pull/35?src=pr&el=tree)

```diff
@@             Coverage Diff              @@
##               v1.2      #35      +/-   ##
============================================
- Coverage     64.99%   58.52%   -6.48%     
- Complexity      499      501       +2     
============================================
  Files            94      100       +6     
  Lines          1737     1936     +199     
  Branches        185      195      +10     
============================================
+ Hits           1129     1133       +4     
- Misses          532      726     +194     
- Partials         76       77       +1     
```


| [Impacted Files](https://codecov.io/gh/AY2021S1-CS2103T-W17-2/tp/pull/35?src=pr&el=tree) | Coverage Δ | Complexity Δ | |
|---|---|---|---|
| [src/main/java/seedu/address/ExerciseMainApp.java](https://codecov.io/gh/AY2021S1-CS2103T-W17-2/tp/pull/35/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9zZWVkdS9hZGRyZXNzL0V4ZXJjaXNlTWFpbkFwcC5qYXZh) | `0.00% <0.00%> (ø)` | `0.00 <0.00> (?)` | |
| [src/main/java/seedu/address/Main.java](https://codecov.io/gh/AY2021S1-CS2103T-W17-2/tp/pull/35/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9zZWVkdS9hZGRyZXNzL01haW4uamF2YQ==) | `0.00% <0.00%> (ø)` | `0.00 <0.00> (ø)` | |
| [.../java/seedu/address/logic/commands/AddCommand.java](https://codecov.io/gh/AY2021S1-CS2103T-W17-2/tp/pull/35/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9zZWVkdS9hZGRyZXNzL2xvZ2ljL2NvbW1hbmRzL0FkZENvbW1hbmQuamF2YQ==) | `83.33% <0.00%> (-16.67%)` | `7.00 <0.00> (ø)` | |
| [.../address/logic/commands/AddCommandForExercise.java](https://codecov.io/gh/AY2021S1-CS2103T-W17-2/tp/pull/35/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9zZWVkdS9hZGRyZXNzL2xvZ2ljL2NvbW1hbmRzL0FkZENvbW1hbmRGb3JFeGVyY2lzZS5qYXZh) | `0.00% <0.00%> (ø)` | `0.00 <0.00> (?)` | |
| [...a/seedu/address/logic/commands/ArchiveCommand.java](https://codecov.io/gh/AY2021S1-CS2103T-W17-2/tp/pull/35/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9zZWVkdS9hZGRyZXNzL2xvZ2ljL2NvbW1hbmRzL0FyY2hpdmVDb21tYW5kLmphdmE=) | `0.00% <0.00%> (ø)` | `0.00 <0.00> (ø)` | |
| [.../address/logic/commands/UpdateExerciseCommand.java](https://codecov.io/gh/AY2021S1-CS2103T-W17-2/tp/pull/35/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9zZWVkdS9hZGRyZXNzL2xvZ2ljL2NvbW1hbmRzL1VwZGF0ZUV4ZXJjaXNlQ29tbWFuZC5qYXZh) | `80.95% <ø> (ø)` | `10.00 <0.00> (ø)` | |
| [...edu/address/logic/parser/ArchiveCommandParser.java](https://codecov.io/gh/AY2021S1-CS2103T-W17-2/tp/pull/35/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9zZWVkdS9hZGRyZXNzL2xvZ2ljL3BhcnNlci9BcmNoaXZlQ29tbWFuZFBhcnNlci5qYXZh) | `0.00% <0.00%> (ø)` | `0.00 <0.00> (ø)` | |
| [...in/java/seedu/address/logic/parser/ParserUtil.java](https://codecov.io/gh/AY2021S1-CS2103T-W17-2/tp/pull/35/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9zZWVkdS9hZGRyZXNzL2xvZ2ljL3BhcnNlci9QYXJzZXJVdGlsLmphdmE=) | `73.43% <0.00%> (+2.22%)` | `18.00 <0.00> (ø)` | |
| [src/main/java/seedu/address/model/UserPrefs.java](https://codecov.io/gh/AY2021S1-CS2103T-W17-2/tp/pull/35/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9zZWVkdS9hZGRyZXNzL21vZGVsL1VzZXJQcmVmcy5qYXZh) | `72.22% <0.00%> (-2.07%)` | `10.00 <0.00> (ø)` | |
| [.../java/seedu/address/model/util/SampleDataUtil.java](https://codecov.io/gh/AY2021S1-CS2103T-W17-2/tp/pull/35/diff?src=pr&el=tree#diff-c3JjL21haW4vamF2YS9zZWVkdS9hZGRyZXNzL21vZGVsL3V0aWwvU2FtcGxlRGF0YVV0aWwuamF2YQ==) | `15.00% <0.00%> (-5.00%)` | `1.00 <0.00> (ø)` | |
| ... and [13 more](https://codecov.io/gh/AY2021S1-CS2103T-W17-2/tp/pull/35/diff?src=pr&el=tree-more) | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/AY2021S1-CS2103T-W17-2/tp/pull/35?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/AY2021S1-CS2103T-W17-2/tp/pull/35?src=pr&el=footer). Last update [3486070...2ee6fbc](https://codecov.io/gh/AY2021S1-CS2103T-W17-2/tp/pull/35?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",True,False,11,374.1333333333333
AY2021S1-CS2103T-W17-2/tp/35,2020-10-13T14:58:00Z,False,5f8d93efbd35434f69c9c919,should be exercise book,True,False,11,374.1333333333333
AY2021S1-CS2103T-W17-2/tp/35,2020-10-13T14:59:01Z,False,5f89bf0cbd354349a97f1424,Should be exerciseCard,True,False,11,374.1333333333333
AY2021S1-CS2103T-W17-2/tp/35,2020-10-13T15:00:28Z,False,5f8d93efbd35434f69c9c91a,Should be ExerciseListPanel instead of PersonListPanel,True,False,11,374.1333333333333
AY2021S1-CS2103T-W17-2/tp/35,2020-10-13T15:00:56Z,False,5f899bd0bd3543586def57e7,Fixed.,True,False,11,374.1333333333333
AY2021S1-CS2103T-W17-2/tp/35,2020-10-13T15:02:21Z,False,5f89bf5dbd3543482b81f6c0,Fixed,True,False,11,374.1333333333333
AY2021S1-CS2103T-W17-2/tp/35,2020-10-13T15:02:26Z,False,5f89bf4bbd354352780a2ca0,should be exerciseListPanelPlaceholder,True,False,11,374.1333333333333
AY2021S1-CS2103T-W17-2/tp/35,2020-10-13T15:03:24Z,False,5f89bf44bd35435a588d55b4,Fixed.,True,False,11,374.1333333333333
AY2021S1-CS2103T-W17-2/tp/35,2020-10-13T15:10:06Z,False,5f8be8ddbd35434996cf54d9,Looks nice. Can approve it.,True,False,11,374.1333333333333
AY2021S1-CS2103T-W17-2/tp/35,2020-10-13T15:11:52Z,False,5f8be907bd35434a6a4aeb37,Great job,True,False,11,374.1333333333333
viniciuscr/sl-server/99,2020-10-19T23:54:11Z,False,5f8e5286bd35434a7eae08cc,Superseded by #113.,True,False,1,0.0
knex/knex/4071,2020-10-21T07:37:43Z,False,5f9013b8bd354348ac9891a9,I don't think the failing tests are relevant to this PR. Seem to be failing for everyone.,True,False,14,15957.016666666666
yunionio/onecloud/8454,2020-10-23T10:02:35Z,False,5f939a52bd354355b55bf995,/lgtm,True,False,3,11.366666666666667
yunionio/onecloud/8454,2020-10-23T10:13:30Z,False,5f939c6ebd354349028f6c8f,"/lgtm
/approve",True,False,3,11.366666666666667
yunionio/onecloud/8454,2020-10-23T10:13:57Z,False,5f939c7dbd35434a1f52771f,"[APPROVALNOTIFIER] This PR is **APPROVED**

This pull-request has been approved by: *<a href=""https://github.com/yunionio/onecloud/pull/8454#issuecomment-715246561"" title=""Approved"">zexi</a>*

The full list of commands accepted by this bot can be found [here](https://go.k8s.io/bot-commands?repo=yunionio%2Fonecloud).

The pull request process is described [here](https://git.k8s.io/community/contributors/guide/owners.md#the-code-review-process)

<details >
Needs approval from an approver in each of these files:

- ~~[OWNERS](https://github.com/yunionio/onecloud/blob/master/OWNERS)~~ [zexi]

Approvers can indicate their approval by writing `/approve` in a comment
Approvers can cancel approval by writing `/approve cancel` in a comment
</details>
<!-- META={""approvers"":[]} -->",True,False,3,11.366666666666667
trevorism/push-button/5,2020-10-24T14:43:05Z,False,5f950af7bd35434a0a343f64,"Dependabot tried to update this pull request, but something went wrong. We're looking into it, but in the meantime you can retry the update by commenting `@dependabot rebase`.",True,False,2,57.78333333333333
trevorism/push-button/5,2020-10-24T15:40:52Z,False,5f950e0ebd35435f2cfeaa6d,"Looks like webpack-dev-server is up-to-date now, so this is no longer needed.",True,False,2,57.78333333333333
knex/knex/4071,2020-10-26T07:52:24Z,False,5f968176bd35434957b5ddc3,"I added composite types as well since the interface for selecting, inserting and updating might and probably will be different (when inserting, not all fields are required).",True,False,14,15957.016666666666
knex/knex/4071,2020-10-26T16:05:14Z,False,5f96f4ffbd35434957b60c9d,"@artursvonda This feature looks very promising 👍  

Thanks. ",True,False,14,15957.016666666666
knex/knex/4071,2020-10-26T18:37:57Z,False,5f981ccdbd3543492bc62184,This needs to be documented. @artursvonda could you please open a PR against https://github.com/knex/documentation?,True,False,14,15957.016666666666
knex/knex/4071,2020-10-26T20:01:22Z,False,5f982f40bd35434a6a52a764,"Sure, will do. Adding to Typescript section?",True,False,14,15957.016666666666
knex/knex/4071,2020-10-26T20:07:34Z,False,5f98304fbd3543490291bfa9,"Yes, please!",True,False,14,15957.016666666666
knex/knex/4071,2020-10-26T21:28:01Z,False,5f983ee9bd35434a6a52b2d8,"While writing the documentation, I realised I didn't check one more use-case so I updated tests and code a bit to make composite types stricter. Since it applies only to composite type, this will not affect existing users but provide additional value to using composite types. I added info about that in the documentation.",True,False,14,15957.016666666666
knex/knex/4071,2020-10-26T21:28:11Z,False,5f9740b1bd3543492bc5a6a1,Documentation PR https://github.com/knex/documentation/pull/292,True,False,14,15957.016666666666
jb9dev/won_games_front_end/31,2020-10-28T12:36:54Z,False,5f9a73c1bd35434880870119,"Looks like @storybook/react is up-to-date now, so this is no longer needed.",True,False,2,0.0
jb9dev/won_games_front_end/31,2020-10-28T12:36:54Z,False,5f9a73c1bd35434880870118,"Looks like @storybook/react is up-to-date now, so this is no longer needed.",True,False,2,0.0
knex/knex/4071,2020-10-30T11:43:43Z,False,5f9d39b4bd35435ad6eaa338,This one's good to go?,True,False,14,15957.016666666666
knex/knex/4071,2020-10-30T12:22:00Z,False,5f9d49bcbd354355b561de8e,@lorefnon Could you please take a look if documentation for this change makes sense to you?,True,False,14,15957.016666666666
knex/knex/4071,2020-10-30T20:04:32Z,False,5f9e7874bd35435d0e39b5ef,"@kibertoad Sorry for the delay here. Yes, the docs look good. Thanks for your contribution @artursvonda. ",True,False,14,15957.016666666666
knex/knex/4071,2020-10-31T21:56:48Z,False,5fa08503bd354354cad1610c,Released in 0.21.10,True,False,14,15957.016666666666
knex/knex/4071,2020-10-31T23:02:28Z,False,5fa08fabbd354354cad16975,"Fails with TypeScript 4.0.5:

```
node_modules/knex/types/index.d.ts:338:26 - error TS2536: Type 'TTable' cannot be used to index type 'Tables'.

338 type TableType<TTable> = Tables[TTable];
                             ~~~~~~~~~~~~~~

node_modules/knex/types/index.d.ts:1243:33 - error TS2536: Type 'K' cannot be used to index type 'TRecord'.

1243       values: readonly DbColumn<TRecord[K]>[] | QueryCallback
                                     ~~~~~~~~~~

node_modules/knex/types/index.d.ts:1251:43 - error TS2536: Type 'K' cannot be used to index type 'TRecord'.

1251       values: readonly (readonly DbColumn<TRecord[K]>[])[] | QueryCallback
                                               ~~~~~~~~~~

node_modules/knex/types/index.d.ts:2144:1 - error TS2309: An export assignment cannot be used in a module with other exported elements.

2144 export = Knex;
     ~~~~~~~~~~~~~~
```
",True,False,14,15957.016666666666
knex/knex/4071,2020-11-01T09:34:44Z,False,5fa29499bd354354cad2ac9d,https://github.com/knex/knex/pull/4100 Pushed updated PR with fixes errors. Sorry for that.,True,False,14,15957.016666666666
amio/eloc/103,2020-11-03T21:27:57Z,False,5fa6832ebd354354cad61f92,"This pull request is being automatically deployed with Vercel ([learn more](https://vercel.link/github-learn-more)).  
To see the status of your deployment, click below or on the icon next to each commit.

🔍 Inspect: [https://vercel.com/amio/eloc/ja77yusdn](https://vercel.com/amio/eloc/ja77yusdn)  
✅ Preview: [https://eloc-git-dependabot-npmandyarntypesfs-extra-903.amio1.vercel.app](https://eloc-git-dependabot-npmandyarntypesfs-extra-903.amio1.vercel.app)

",True,False,2,12956.133333333333
adfinis-sygroup/semantic-release-config/150,2020-11-06T10:34:30Z,False,5fad0437bd354354cadb89cf,":tada: This PR is included in version 3.0.1 :tada:

The release is available on:
- [npm package (@latest dist-tag)](https://www.npmjs.com/package/@adfinis-sygroup/semantic-release-config/v/3.0.1)
- [GitHub release](https://github.com/adfinis-sygroup/semantic-release-config/releases/tag/v3.0.1)

Your **[semantic-release](https://github.com/semantic-release/semantic-release)** bot :package::rocket:",True,False,1,0.0
amio/eloc/103,2020-11-12T21:24:05Z,False,5fb1aaacbd35434a6a615d7c,Superseded by #106.,True,False,2,12956.133333333333
acmucsd/acm-profiles-ui/7,2020-11-13T10:38:21Z,False,5fb92a11bd35434a6a65e87c,"@anuragasthana Linting is still failing so take a look at the ""Details"" next to the Travis CI push and pr logs to see what went wrong. Let me know if you have any questions. Most of these are simple stylistic issues that can be quickly fixed.",True,False,1,0.0
hieuqtGit/write-github-script/6,2020-11-17T07:15:29Z,False,5fbf7f04bd35436eaecea111,"# Improving the issue comment

💡Did you know that GitHub Script also grants you access to a full Node.js environment?

Although we wouldn't recommend using GitHub Script to write the logic for complex actions, there are use cases where you may want to leverage using a little more than just the octokit/rest.js API.

One such use case is our issue comment. Right now it is pretty hard coded the way it is making it less than ideal. What if we wanted to display our contribution guide every time an issue was opened?

Instead of writing the guide directly into our workflow, we can use the Node.js File System module to read a file and use it as the body of our issue comment.

If we want access to the files within our repository, we need to make sure we include the `actions/checkout` action in our workflow as the first step.
",True,False,3,3.3666666666666667
hieuqtGit/write-github-script/6,2020-11-17T07:15:30Z,False,5fbf7eedbd35436fb6c1f650,"## Use the FS module to use a templated comment

We will make the following changes to the current workflow file:

- Add the `actions/checkout` action so we can read the templated response file located at `.github/ISSUE_RESPONSES/comment.md`
- Add JavaScript to use the Node.js File System module to place the contents of our templated response as the body of the issue comment.

### :keyboard: Activity: Add newly opened issue to project board

1. [Edit](https://github.com/hieuqtGit/write-github-script/edit/hieuqtGit-patch-2/.github/workflows/my-workflow.yml) the current workflow to have the following contents:

   ```yaml
   name: Learning GitHub Script

   on:
     issues:
       types: [opened]

   jobs:
     comment:
       runs-on: ubuntu-latest
       steps:
         - name: Checkout repo
           uses: actions/checkout@v2

         - name: Comment on new issue
           uses: actions/github-script@0.8.0
           with:
             github-token: ${{secrets.GITHUB_TOKEN}}
             script: |
                const fs = require('fs')
                const issueBody = fs.readFileSync("".github/ISSUE_RESPONSES/comment.md"", ""utf8"")
                github.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: issueBody
                })

         - name: Add issue to project board
           if: contains(github.event.issue.labels.*.name, 'bug')
           uses: actions/github-script@0.8.0
           with:
             github-token: ${{secrets.GITHUB_TOKEN}}
             script: |
               github.projects.createCard({
               column_id: 11716342,
               content_id: context.payload.issue.id,
               content_type: ""Issue""
               });

   ```

2. Commit the workflow changes to this branch.

---

I am waiting for you to commit the desired changes to this branch before moving on.

I'll respond once you've committed the changes to this branch
",True,False,3,3.3666666666666667
hieuqtGit/write-github-script/6,2020-11-17T07:18:51Z,False,5fbf7f2abd354372ec445563,"## A new issue has been opened

I have created a [new issue](https://github.com/hieuqtGit/write-github-script/issues/7) where we will continue this lesson. Click the link to meet me over there.
",True,False,3,3.3666666666666667
owncloud/market/611,2020-11-25T22:30:28Z,False,5fc70bffbd354371d973145c,"[![CLA assistant check](https://cla-assistant.io/pull/badge/not_signed)](https://cla-assistant.io/owncloud/market?pullRequest=611) <br/>Thank you for your submission! We really appreciate it. Like many open source projects, we ask that you sign our [Contributor License Agreement](https://cla-assistant.io/owncloud/market?pullRequest=611) before we can accept your contribution.<br/><sub>You have signed the CLA already but the status is still pending? Let us [recheck](https://cla-assistant.io/check/owncloud/market?pullRequest=611) it.</sub>",True,False,4,89267.85
owncloud/market/611,2020-11-25T22:52:27Z,False,5fc6b0fbbd354372a33cc4a9,"# [Codecov](https://codecov.io/gh/owncloud/market/pull/611?src=pr&el=h1) Report
> Merging [#611](https://codecov.io/gh/owncloud/market/pull/611?src=pr&el=desc) (a9bec82) into [master](https://codecov.io/gh/owncloud/market/commit/61a0b3aec0970e12ae6e57882632f13b64b9367a?el=desc) (61a0b3a) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/owncloud/market/pull/611/graphs/tree.svg?width=650&height=150&src=pr&token=6nbYYXaQaW)](https://codecov.io/gh/owncloud/market/pull/611?src=pr&el=tree)

```diff
@@            Coverage Diff            @@
##             master     #611   +/-   ##
=========================================
  Coverage     55.56%   55.56%           
  Complexity      264      264           
=========================================
  Files            17       17           
  Lines           925      925           
=========================================
  Hits            514      514           
  Misses          411      411           
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/owncloud/market/pull/611?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/owncloud/market/pull/611?src=pr&el=footer). Last update [61a0b3a...a9bec82](https://codecov.io/gh/owncloud/market/pull/611?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",True,False,4,89267.85
joinfaces/joinfaces-maven-jar-example/387,2020-11-30T05:43:57Z,False,5fc9c28fbd354373757044b6,"
[![Coverage Status](https://coveralls.io/builds/35314869/badge)](https://coveralls.io/builds/35314869)

Coverage remained the same at 97.951% when pulling **5222b70c1b197d051369a2265dd509a9a6dcba98 on dependabot/maven/com.puppycrawl.tools-checkstyle-8.38** into **6abd692b71c95c9f88e5fab73c60d6f61dd269f5 on master**.
",True,False,2,0.1
joinfaces/joinfaces-maven-jar-example/387,2020-11-30T05:44:03Z,False,5fc8ba3fbd35436d67d2ee76,"# [Codecov](https://codecov.io/gh/joinfaces/joinfaces-maven-jar-example/pull/387?src=pr&el=h1) Report
> Merging [#387](https://codecov.io/gh/joinfaces/joinfaces-maven-jar-example/pull/387?src=pr&el=desc) (5222b70) into [master](https://codecov.io/gh/joinfaces/joinfaces-maven-jar-example/commit/6abd692b71c95c9f88e5fab73c60d6f61dd269f5?el=desc) (6abd692) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/joinfaces/joinfaces-maven-jar-example/pull/387/graphs/tree.svg?width=650&height=150&src=pr&token=BlCfmNPfVA)](https://codecov.io/gh/joinfaces/joinfaces-maven-jar-example/pull/387?src=pr&el=tree)

```diff
@@            Coverage Diff            @@
##             master     #387   +/-   ##
=========================================
  Coverage     96.72%   96.72%           
  Complexity       94       94           
=========================================
  Files            12       12           
  Lines           244      244           
  Branches         14       14           
=========================================
  Hits            236      236           
  Misses            5        5           
  Partials          3        3           
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/joinfaces/joinfaces-maven-jar-example/pull/387?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/joinfaces/joinfaces-maven-jar-example/pull/387?src=pr&el=footer). Last update [6abd692...5222b70](https://codecov.io/gh/joinfaces/joinfaces-maven-jar-example/pull/387?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",True,False,2,0.1
steven-murray/hmf/108,2020-11-30T17:29:50Z,False,5fc8cd9dbd354372ec496511,"# [Codecov](https://codecov.io/gh/steven-murray/hmf/pull/108?src=pr&el=h1) Report
> Merging [#108](https://codecov.io/gh/steven-murray/hmf/pull/108?src=pr&el=desc) (00c6598) into [dev](https://codecov.io/gh/steven-murray/hmf/commit/c392f7e6c59a2aaa7eca6f766aaeb15e3d24834e?el=desc) (c392f7e) will **increase** coverage by `0.62%`.
> The diff coverage is `100.00%`.

[![Impacted file tree graph](https://codecov.io/gh/steven-murray/hmf/pull/108/graphs/tree.svg?width=650&height=150&src=pr&token=e9DWKz9hrV)](https://codecov.io/gh/steven-murray/hmf/pull/108?src=pr&el=tree)

```diff
@@            Coverage Diff             @@
##              dev     #108      +/-   ##
==========================================
+ Coverage   85.06%   85.68%   +0.62%     
==========================================
  Files          24       26       +2     
  Lines        2297     2285      -12     
==========================================
+ Hits         1954     1958       +4     
+ Misses        343      327      -16     
```


| [Impacted Files](https://codecov.io/gh/steven-murray/hmf/pull/108?src=pr&el=tree) | Coverage Δ | |
|---|---|---|
| [src/hmf/\_internals/\_framework.py](https://codecov.io/gh/steven-murray/hmf/pull/108/diff?src=pr&el=tree#diff-c3JjL2htZi9faW50ZXJuYWxzL19mcmFtZXdvcmsucHk=) | `81.42% <100.00%> (ø)` | |
| [src/hmf/alternatives/\_\_init\_\_.py](https://codecov.io/gh/steven-murray/hmf/pull/108/diff?src=pr&el=tree#diff-c3JjL2htZi9hbHRlcm5hdGl2ZXMvX19pbml0X18ucHk=) | `100.00% <100.00%> (ø)` | |
| [src/hmf/cosmology/\_\_init\_\_.py](https://codecov.io/gh/steven-murray/hmf/pull/108/diff?src=pr&el=tree#diff-c3JjL2htZi9jb3Ntb2xvZ3kvX19pbml0X18ucHk=) | `100.00% <100.00%> (ø)` | |
| [src/hmf/density\_field/\_\_init\_\_.py](https://codecov.io/gh/steven-murray/hmf/pull/108/diff?src=pr&el=tree#diff-c3JjL2htZi9kZW5zaXR5X2ZpZWxkL19faW5pdF9fLnB5) | `100.00% <100.00%> (ø)` | |
| [src/hmf/density\_field/halofit.py](https://codecov.io/gh/steven-murray/hmf/pull/108/diff?src=pr&el=tree#diff-c3JjL2htZi9kZW5zaXR5X2ZpZWxkL2hhbG9maXQucHk=) | `97.53% <100.00%> (+14.67%)` | :arrow_up: |
| [src/hmf/density\_field/transfer\_models.py](https://codecov.io/gh/steven-murray/hmf/pull/108/diff?src=pr&el=tree#diff-c3JjL2htZi9kZW5zaXR5X2ZpZWxkL3RyYW5zZmVyX21vZGVscy5weQ==) | `87.79% <100.00%> (-0.06%)` | :arrow_down: |
| [src/hmf/halos/\_\_init\_\_.py](https://codecov.io/gh/steven-murray/hmf/pull/108/diff?src=pr&el=tree#diff-c3JjL2htZi9oYWxvcy9fX2luaXRfXy5weQ==) | `100.00% <100.00%> (ø)` | |
| [src/hmf/mass\_function/\_\_init\_\_.py](https://codecov.io/gh/steven-murray/hmf/pull/108/diff?src=pr&el=tree#diff-c3JjL2htZi9tYXNzX2Z1bmN0aW9uL19faW5pdF9fLnB5) | `100.00% <100.00%> (ø)` | |

------

[Continue to review full report at Codecov](https://codecov.io/gh/steven-murray/hmf/pull/108?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/steven-murray/hmf/pull/108?src=pr&el=footer). Last update [0810707...00c6598](https://codecov.io/gh/steven-murray/hmf/pull/108?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",True,False,1,0.0
tuzimoe/yqfzltd/265,2020-12-02T06:28:39Z,False,5fcb095bbd35430fdf4f750c,Superseded by #268.,True,False,1,0.0
Azure/azure-docs-powershell-azuread/233,2020-12-02T15:32:25Z,False,5fcacb62bd35430ff6a9eca8,"Hi @PrzemyslawKlys 

Per the [read me](https://github.com/Azure/azure-docs-powershell-azuread/blob/master/README.md) file:

Please be aware that if you have any updates to automatically generated reference content, you should create an issue and not a PR.  The issue will then be created into a bug and triaged accordingly.  We do this because the reference content must mirror the &#42;dll-help.xml file and subsequent updates to the reference content may overwrite any changes made through the repo.  Capturing it in the source code ensures that this does not occur.  Any PR with changes to automatically generated reference content will be closed.  

Automatically generated reference content is any of the content under this Reference node, such as [Get-AzureADUser](https://docs.microsoft.com/powershell/module/AzureAD/Get-AzureADUser?view=azureadps-2.0)

This only applies to reference content and not conceptual content.  Pull requests for changes to conceptual content are accepted and encouraged.  An example of the conceptual content is the [Overview](https://docs.microsoft.com/powershell/azure/active-directory/overview?view=azureadps-2.0) or a scenario such as [importing data](https://docs.microsoft.com/powershell/azure/active-directory/importing-data?view=azureadps-2.0).

Thank you!

Bill",True,False,2,1141676.6833333333
killshot13/lab-react-ironcontacts/33,2020-12-04T10:47:56Z,False,5fcc245abd35430f35850af0,Superseded by #34.,True,False,1,0.0
orphos/mastodon/205,2020-12-07T06:44:33Z,False,5fcfc426bd3543117d6fedcf,"Looks like jest-worker is no longer a dependency, so this is no longer needed.",True,False,1,0.0
Samsung/TizenFX/2371,2020-12-10T05:58:02Z,False,5fd3526ebd35436661d55064,"## Internal API Changed
<details>
<summary>Added: 0, Removed: 91, Changed: 0</summary>

### Removed
```diff
- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- Tizen.NUI.Components.DropDown

- /// <since_tizen>none</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- static Tizen.NUI.Binding.BindableProperty Tizen.NUI.Components.DropDown::ListMarginProperty

- /// <since_tizen>none</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- static Tizen.NUI.Binding.BindableProperty Tizen.NUI.Components.DropDown::ListPaddingProperty

- /// <since_tizen>none</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- static Tizen.NUI.Binding.BindableProperty Tizen.NUI.Components.DropDown::ListRelativeOrientationProperty

- /// <since_tizen>none</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- static Tizen.NUI.Binding.BindableProperty Tizen.NUI.Components.DropDown::SelectedItemIndexProperty

- /// <since_tizen>none</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- static Tizen.NUI.Binding.BindableProperty Tizen.NUI.Components.DropDown::SpaceBetweenButtonTextAndIconProperty

- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- System.Int32 Tizen.NUI.Components.DropDown::SelectedItemIndex()

- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- System.Int32 Tizen.NUI.Components.DropDown::SpaceBetweenButtonTextAndIcon()

- /// <since_tizen>none</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- Tizen.NUI.BaseComponents.ImageView Tizen.NUI.Components.DropDown::ListBackgroundImage()

- /// <since_tizen>none</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- Tizen.NUI.BaseComponents.TextLabel Tizen.NUI.Components.DropDown::HeaderText()

- /// <since_tizen>none</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- Tizen.NUI.Components.Button Tizen.NUI.Components.DropDown::Button()

- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- Tizen.NUI.Components.DropDown/ListOrientation Tizen.NUI.Components.DropDown::ListRelativeOrientation()

- /// <since_tizen>none</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- Tizen.NUI.Components.DropDownStyle Tizen.NUI.Components.DropDown::Style()

- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- Tizen.NUI.Extents Tizen.NUI.Components.DropDown::ListMargin()

- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- Tizen.NUI.Extents Tizen.NUI.Components.DropDown::ListPadding()

- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- System.Void Tizen.NUI.Components.DropDown::.ctor()

- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- System.Void Tizen.NUI.Components.DropDown::.ctor(System.String)

- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- System.Void Tizen.NUI.Components.DropDown::.ctor(Tizen.NUI.Components.DropDownStyle)

- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- System.Void Tizen.NUI.Components.DropDown::AddItem(Tizen.NUI.Components.DropDown/DropDownDataItem)

- /// <since_tizen>none</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- System.Void Tizen.NUI.Components.DropDown::ApplyStyle(Tizen.NUI.BaseComponents.ViewStyle)

- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- System.Void Tizen.NUI.Components.DropDown::AttachScrollBar(Tizen.NUI.Components.ScrollBar)

- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- System.Void Tizen.NUI.Components.DropDown::DeleteItem(System.Int32)

- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- System.Void Tizen.NUI.Components.DropDown::DetachScrollBar()

- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- System.Void Tizen.NUI.Components.DropDown::Dispose(Tizen.NUI.DisposeTypes)

- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- System.Void Tizen.NUI.Components.DropDown::InsertItem(Tizen.NUI.Components.DropDown/DropDownDataItem,System.Int32)

- /// <since_tizen>none</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- System.Void Tizen.NUI.Components.DropDown::OnUpdate()

- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- System.Void Tizen.NUI.Components.DropDown::UpdateDropDown()

- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- Tizen.NUI.BaseComponents.ViewStyle Tizen.NUI.Components.DropDown::CreateViewStyle()

- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- System.EventHandler`1<Tizen.NUI.Components.DropDown/ItemClickEventArgs> Tizen.NUI.Components.DropDown::ItemClickEvent

- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- Tizen.NUI.Components.DropDown/DropDownDataItem

- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- System.Boolean Tizen.NUI.Components.DropDown/DropDownDataItem::IsSelected()

- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- System.Int32 Tizen.NUI.Components.DropDown/DropDownDataItem::CheckImageGapToBoundary()

- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- System.Single Tizen.NUI.Components.DropDown/DropDownDataItem::PointSize()

- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- System.String Tizen.NUI.Components.DropDown/DropDownDataItem::CheckImageResourceUrl()

- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- System.String Tizen.NUI.Components.DropDown/DropDownDataItem::FontFamily()

- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- System.String Tizen.NUI.Components.DropDown/DropDownDataItem::IconResourceUrl()

- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- System.String Tizen.NUI.Components.DropDown/DropDownDataItem::Text()

- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- Tizen.NUI.BaseComponents.Selector`1<Tizen.NUI.Color> Tizen.NUI.Components.DropDown/DropDownDataItem::BackgroundColor()

- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- Tizen.NUI.Position Tizen.NUI.Components.DropDown/DropDownDataItem::IconPosition()

- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- Tizen.NUI.Position Tizen.NUI.Components.DropDown/DropDownDataItem::TextPosition()

- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- Tizen.NUI.Size Tizen.NUI.Components.DropDown/DropDownDataItem::CheckImageSize()

- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- Tizen.NUI.Size Tizen.NUI.Components.DropDown/DropDownDataItem::IconSize()

- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- Tizen.NUI.Size Tizen.NUI.Components.DropDown/DropDownDataItem::Size()

- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- System.Void Tizen.NUI.Components.DropDown/DropDownDataItem::.ctor()

- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- System.Void Tizen.NUI.Components.DropDown/DropDownDataItem::.ctor(System.String)

- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- System.Void Tizen.NUI.Components.DropDown/DropDownDataItem::.ctor(Tizen.NUI.Components.DropDownItemStyle)

- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- Tizen.NUI.Components.DropDown/DropDownListBridge

- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- System.Int32 Tizen.NUI.Components.DropDown/DropDownListBridge::GetItemCount()

- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- System.Void Tizen.NUI.Components.DropDown/DropDownListBridge::.ctor()

- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- System.Void Tizen.NUI.Components.DropDown/DropDownListBridge::BindViewHolder(Tizen.NUI.Components.DropDown/ViewHolder,System.Int32)

- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- System.Void Tizen.NUI.Components.DropDown/DropDownListBridge::InsertData(System.Int32,Tizen.NUI.Components.DropDown/DropDownDataItem)

- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- System.Void Tizen.NUI.Components.DropDown/DropDownListBridge::OnDestroyViewHolder(Tizen.NUI.Components.DropDown/ViewHolder)

- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- System.Void Tizen.NUI.Components.DropDown/DropDownListBridge::RemoveData(System.Int32)

- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- Tizen.NUI.Components.DropDown/DropDownDataItem Tizen.NUI.Components.DropDown/DropDownListBridge::GetData(System.Int32)

- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- Tizen.NUI.Components.DropDown/ViewHolder Tizen.NUI.Components.DropDown/DropDownListBridge::OnCreateViewHolder()

- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- Tizen.NUI.Components.DropDown/ItemClickEventArgs

- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- System.Int32 Tizen.NUI.Components.DropDown/ItemClickEventArgs::Index()

- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- System.String Tizen.NUI.Components.DropDown/ItemClickEventArgs::Text()

- /// <since_tizen>none</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- System.Void Tizen.NUI.Components.DropDown/ItemClickEventArgs::.ctor()

- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- Tizen.NUI.Components.DropDown/ListOrientation

- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- static Tizen.NUI.Components.DropDown/ListOrientation Tizen.NUI.Components.DropDown/ListOrientation::Left

- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- static Tizen.NUI.Components.DropDown/ListOrientation Tizen.NUI.Components.DropDown/ListOrientation::Right

- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- Tizen.NUI.Components.DropDown/ViewHolder

- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- Tizen.NUI.BaseComponents.View Tizen.NUI.Components.DropDown/ViewHolder::ItemView()

- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- System.Void Tizen.NUI.Components.DropDown/ViewHolder::.ctor(Tizen.NUI.BaseComponents.View)

- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- Tizen.NUI.Components.DropDownItemStyle

- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- System.Boolean Tizen.NUI.Components.DropDownItemStyle::IsSelected()

- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- System.Int32 Tizen.NUI.Components.DropDownItemStyle::CheckImageGapToBoundary()

- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- Tizen.NUI.BaseComponents.ImageViewStyle Tizen.NUI.Components.DropDownItemStyle::CheckImage()

- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- Tizen.NUI.BaseComponents.ImageViewStyle Tizen.NUI.Components.DropDownItemStyle::Icon()

- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- Tizen.NUI.BaseComponents.TextLabelStyle Tizen.NUI.Components.DropDownItemStyle::Text()

- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- System.Void Tizen.NUI.Components.DropDownItemStyle::.ctor()

- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- System.Void Tizen.NUI.Components.DropDownItemStyle::.ctor(Tizen.NUI.Components.DropDownItemStyle)

- /// <since_tizen>none</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- System.Void Tizen.NUI.Components.DropDownItemStyle::CopyFrom(Tizen.NUI.Binding.BindableObject)

- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- Tizen.NUI.Components.DropDownStyle

- /// <since_tizen>none</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- static Tizen.NUI.Binding.BindableProperty Tizen.NUI.Components.DropDownStyle::ListMarginProperty

- /// <since_tizen>none</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- static Tizen.NUI.Binding.BindableProperty Tizen.NUI.Components.DropDownStyle::ListPaddingProperty

- /// <since_tizen>none</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- static Tizen.NUI.Binding.BindableProperty Tizen.NUI.Components.DropDownStyle::ListRelativeOrientationProperty

- /// <since_tizen>none</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- static Tizen.NUI.Binding.BindableProperty Tizen.NUI.Components.DropDownStyle::SelectedItemIndexProperty

- /// <since_tizen>none</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- static Tizen.NUI.Binding.BindableProperty Tizen.NUI.Components.DropDownStyle::SpaceBetweenButtonTextAndIconProperty

- /// <since_tizen>none</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- System.Int32 Tizen.NUI.Components.DropDownStyle::SelectedItemIndex()

- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- System.Int32 Tizen.NUI.Components.DropDownStyle::SpaceBetweenButtonTextAndIcon()

- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- System.Nullable`1<Tizen.NUI.Components.DropDown/ListOrientation> Tizen.NUI.Components.DropDownStyle::ListRelativeOrientation()

- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- Tizen.NUI.BaseComponents.ImageViewStyle Tizen.NUI.Components.DropDownStyle::ListBackgroundImage()

- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- Tizen.NUI.BaseComponents.TextLabelStyle Tizen.NUI.Components.DropDownStyle::HeaderText()

- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- Tizen.NUI.Components.ButtonStyle Tizen.NUI.Components.DropDownStyle::Button()

- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- Tizen.NUI.Extents Tizen.NUI.Components.DropDownStyle::ListMargin()

- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- Tizen.NUI.Extents Tizen.NUI.Components.DropDownStyle::ListPadding()

- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- System.Void Tizen.NUI.Components.DropDownStyle::.ctor()

- /// <since_tizen>6</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- System.Void Tizen.NUI.Components.DropDownStyle::.ctor(Tizen.NUI.Components.DropDownStyle)

- /// <since_tizen>none</since_tizen
- [EditorBrowsable(EditorBrowsableState.Never)]
- System.Void Tizen.NUI.Components.DropDownStyle::CopyFrom(Tizen.NUI.Binding.BindableObject)

```
</details>
",True,False,1,0.0
owncloud/market/611,2020-12-10T18:14:36Z,False,5fd32d21bd35435856d80ec8,"Kudos, SonarCloud Quality Gate passed!

[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug.png' alt='Bug' width='16' height='16' />](https://sonarcloud.io/project/issues?id=owncloud_market&pullRequest=611&resolved=false&types=BUG) [<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A.png' alt='A' width='16' height='16' />](https://sonarcloud.io/project/issues?id=owncloud_market&pullRequest=611&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=owncloud_market&pullRequest=611&resolved=false&types=BUG)  
[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability.png' alt='Vulnerability' width='16' height='16' />](https://sonarcloud.io/project/issues?id=owncloud_market&pullRequest=611&resolved=false&types=VULNERABILITY) [<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A.png' alt='A' width='16' height='16' />](https://sonarcloud.io/project/issues?id=owncloud_market&pullRequest=611&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=owncloud_market&pullRequest=611&resolved=false&types=VULNERABILITY)  
[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot.png' alt='Security Hotspot' width='16' height='16' />](https://sonarcloud.io/project/security_hotspots?id=owncloud_market&pullRequest=611&resolved=false&types=SECURITY_HOTSPOT) [<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A.png' alt='A' width='16' height='16' />](https://sonarcloud.io/project/security_hotspots?id=owncloud_market&pullRequest=611&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=owncloud_market&pullRequest=611&resolved=false&types=SECURITY_HOTSPOT)  
[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell.png' alt='Code Smell' width='16' height='16' />](https://sonarcloud.io/project/issues?id=owncloud_market&pullRequest=611&resolved=false&types=CODE_SMELL) [<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A.png' alt='A' width='16' height='16' />](https://sonarcloud.io/project/issues?id=owncloud_market&pullRequest=611&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=owncloud_market&pullRequest=611&resolved=false&types=CODE_SMELL)

[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo.png' alt='No Coverage information' width='16' height='16' />](https://sonarcloud.io/component_measures?id=owncloud_market&pullRequest=611&metric=coverage&view=list) No Coverage information  
[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo.png' alt='No Duplication information' width='16' height='16' />](https://sonarcloud.io/component_measures?id=owncloud_market&pullRequest=611&metric=duplicated_lines_density&view=list) No Duplication information

",True,False,4,89267.85
schwillind/wavelength/97,2020-12-14T08:53:43Z,False,5fd8dfbcbd35437f65f63eb1,Superseded by #101.,True,False,1,0.0
zappar-xr/zappar-react-three-fiber-face-tracking-webpack-bootstrap/8,2020-12-18T12:03:08Z,False,5fdc9db3bd35436900d37688,"OK, I won't notify you again about this release, but will get in touch when a new version is available.

If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",True,False,1,0.0
faizulho/ntn-boilerplate/48,2020-12-19T09:59:03Z,False,5fdeedb6bd3543252de91c8d,Closed in favor of #54.,True,False,1,0.0
cBioCenter/bioblocks-portal/41,2020-12-31T01:52:50Z,False,5fee9aa5bd3543431c568c9c,"# [Codecov](https://codecov.io/gh/cBioCenter/bioblocks-portal/pull/41?src=pr&el=h1) Report
> Merging [#41](https://codecov.io/gh/cBioCenter/bioblocks-portal/pull/41?src=pr&el=desc) (e2fbfc0) into [master](https://codecov.io/gh/cBioCenter/bioblocks-portal/commit/e989ec683bf11afe5c724c2e775a92af12df6725?el=desc) (e989ec6) will **not change** coverage.
> The diff coverage is `n/a`.

[![Impacted file tree graph](https://codecov.io/gh/cBioCenter/bioblocks-portal/pull/41/graphs/tree.svg?width=650&height=150&src=pr&token=7BPL0QpfdW)](https://codecov.io/gh/cBioCenter/bioblocks-portal/pull/41?src=pr&el=tree)

```diff
@@           Coverage Diff           @@
##           master      #41   +/-   ##
=======================================
  Coverage   91.66%   91.66%           
=======================================
  Files          18       18           
  Lines         444      444           
  Branches       77       77           
=======================================
  Hits          407      407           
  Misses         37       37           
```



------

[Continue to review full report at Codecov](https://codecov.io/gh/cBioCenter/bioblocks-portal/pull/41?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/cBioCenter/bioblocks-portal/pull/41?src=pr&el=footer). Last update [e989ec6...e2fbfc0](https://codecov.io/gh/cBioCenter/bioblocks-portal/pull/41?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
",True,False,2,87629.01666666666
aotuzuche/eslint-config-atzuche/71,2021-01-04T08:35:03Z,False,5ff43db9bd35433f3d33ffbf,Superseded by #76.,True,False,1,0.0
microportal/microportal-login-ui/8,2021-01-05T09:09:09Z,False,5ff619eabd35435e8aa699e2,"Kudos, SonarCloud Quality Gate passed!

[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug.png' alt='Bug' width='16' height='16' />](https://sonarcloud.io/project/issues?id=microportal_microportal-login-ui&pullRequest=8&resolved=false&types=BUG) [<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A.png' alt='A' width='16' height='16' />](https://sonarcloud.io/project/issues?id=microportal_microportal-login-ui&pullRequest=8&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=microportal_microportal-login-ui&pullRequest=8&resolved=false&types=BUG)  
[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability.png' alt='Vulnerability' width='16' height='16' />](https://sonarcloud.io/project/issues?id=microportal_microportal-login-ui&pullRequest=8&resolved=false&types=VULNERABILITY) [<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A.png' alt='A' width='16' height='16' />](https://sonarcloud.io/project/issues?id=microportal_microportal-login-ui&pullRequest=8&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=microportal_microportal-login-ui&pullRequest=8&resolved=false&types=VULNERABILITY)  
[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot.png' alt='Security Hotspot' width='16' height='16' />](https://sonarcloud.io/project/security_hotspots?id=microportal_microportal-login-ui&pullRequest=8&resolved=false&types=SECURITY_HOTSPOT) [<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A.png' alt='A' width='16' height='16' />](https://sonarcloud.io/project/security_hotspots?id=microportal_microportal-login-ui&pullRequest=8&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=microportal_microportal-login-ui&pullRequest=8&resolved=false&types=SECURITY_HOTSPOT)  
[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell.png' alt='Code Smell' width='16' height='16' />](https://sonarcloud.io/project/issues?id=microportal_microportal-login-ui&pullRequest=8&resolved=false&types=CODE_SMELL) [<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A.png' alt='A' width='16' height='16' />](https://sonarcloud.io/project/issues?id=microportal_microportal-login-ui&pullRequest=8&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=microportal_microportal-login-ui&pullRequest=8&resolved=false&types=CODE_SMELL)

[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo.png' alt='No Coverage information' width='16' height='16' />](https://sonarcloud.io/component_measures?id=microportal_microportal-login-ui&pullRequest=8) No Coverage information  
[<img src='https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo.png' alt='No Duplication information' width='16' height='16' />](https://sonarcloud.io/component_measures?id=microportal_microportal-login-ui&pullRequest=8&metric=duplicated_lines_density&view=list) No Duplication information

",True,False,1,0.0
Spotifyd/spotifyd/502,2021-01-17T22:21:29Z,False,600536a0bd3543374dce5031,Looks like this version bump introduces a ton of errors ,True,False,3,321964.5
claudemamo/smooks-camel-cartridge/8,2021-01-18T06:42:38Z,False,6006a2bfbd35431b45506d7b,"Dependabot tried to add `@tfennelly` and `@claudemamo` as reviewers to this PR, but received the following error from GitHub:

```
POST https://api.github.com/repos/claudemamo/smooks-camel-cartridge/pulls/8/requested_reviewers: 422 - Reviews may only be requested from collaborators. One or more of the users or teams you specified is not a collaborator of the claudemamo/smooks-camel-cartridge repository. // See: https://docs.github.com/rest/reference/pulls#request-reviewers-for-a-pull-request
```",True,False,1,0.0
3ch01c/yawa/51,2021-01-20T21:27:28Z,False,60092a98bd35433a3e0fb60f,"We've just been alerted that this update fixes a security vulnerability:

*Sourced from [The GitHub Security Advisory Database](https://github.com/advisories/GHSA-fxwf-4rqh-v8g3).*

> **Insecure defaults due to CORS misconfiguration in socket.io**
> <p>The package socket.io before 2.4.0 are vulnerable to Insecure Defaults due to CORS Misconfiguration. All domains are whitelisted by default.</p>
>
> Affected versions: [""< 2.4.0""]

",True,False,1,0.0
Mateonidas/spring-crm-rest/1,2021-01-21T01:21:20Z,False,600a56f0bd35431c5b60012e,Superseded by #3.,True,False,1,0.0
Spotifyd/spotifyd/502,2021-01-21T12:16:47Z,False,600971edbd35435519833488,for the upgrade see https://github.com/Spotifyd/spotifyd/issues/700,True,False,3,321964.5
donmahallem/NpmAutoPatchAction/2,2021-01-22T16:35:50Z,False,600afff3bd35435c3fcad629,"## Pull Request Test Coverage Report for [Build 504140628](https://coveralls.io/builds/36531160)

* **0** of **0**   changed or added relevant lines in **0** files are covered.
* No unchanged relevant lines lost coverage.
* Overall coverage remained the same at **0.0%**

---



|  Totals | [![Coverage Status](https://coveralls.io/builds/36531160/badge)](https://coveralls.io/builds/36531160) |
| :-- | --: |
| Change from base [Build 38f239874dd42fff979c121a02009703d3be5b98](https://coveralls.io/builds/28867474): |  0.0% |
| Covered Lines: | 0 |
| Relevant Lines: | 3 |

---
##### 💛  - [Coveralls](https://coveralls.io)
",True,False,1,0.0
PX4/PX4-Autopilot/14502,2021-01-25T15:32:03Z,False,600fa328bd35431920622717,"These environment variables don't really work right because it's dependent on being set during cmake configure time and can be unintentionally lost if cmake triggers a reconfigure and you aren't always setting the ENV. I believe the best (least bad) option to support is making it trivially to optionally set the final optimization per module under COMPILE_FLAGS.

https://github.com/PX4/PX4-Autopilot/blob/f9e07337f8970995bad88a0a3fa32b55b4873785/src/modules/mc_rate_control/CMakeLists.txt#L36-L40",True,False,4,437748.98333333334
owncloud/market/611,2021-01-26T22:18:19Z,False,60110eb5bd3543083d8f9e15,"A newer version of vuex exists, but since this PR has been edited by someone other than Dependabot I haven't updated it. You'll get a PR for the updated version as normal once this PR is merged.",True,False,4,89267.85
MicrosoftDocs/iis-docs/541,2021-01-27T01:08:37Z,False,6010be54bd35436fcd83e722,"Docs Build status updates of commit _[d0abf09](https://github.com/phbits/iis-docs/commits/d0abf0962c62d6fd6e0cacee9f84eedecd83adbe)_: 

### :white_check_mark: Validation status: passed


File | Status | Preview URL | Details
---- | ------ | ----------- | -------
[iis/configuration/system.webServer/security/ipSecurity/add.md](https://github.com/phbits/iis-docs/blob/master/iis/configuration/system.webServer/security/ipSecurity/add.md) | :bulb:Suggestion | [View](https://review.docs.microsoft.com/en-us/IIS/configuration/system.webserver/security/ipsecurity/add?branch=pr-en-us-541) | [Details](#user-content-3792e606-6dd1fc5d)
[iis/configuration/system.webServer/security/ipSecurity/index.md](https://github.com/phbits/iis-docs/blob/master/iis/configuration/system.webServer/security/ipSecurity/index.md) | :bulb:Suggestion | [View](https://review.docs.microsoft.com/en-us/IIS/configuration/system.webserver/security/ipsecurity/index?branch=pr-en-us-541) | [Details](#user-content-571cdea5-6dd1fc5d)
[iis/configuration/system.webServer/security/ipSecurity/add/samples/sample7.ps1](https://github.com/phbits/iis-docs/blob/master/iis/configuration/system.webServer/security/ipSecurity/add/samples/sample7.ps1) | :white_check_mark:Succeeded | [View](https://review.docs.microsoft.com/en-us/IIS/configuration/system.webserver/security/ipsecurity/add?branch=pr-en-us-541) |
[iis/configuration/system.webServer/security/ipSecurity/index/samples/sample8.ps1](https://github.com/phbits/iis-docs/blob/master/iis/configuration/system.webServer/security/ipSecurity/index/samples/sample8.ps1) | :white_check_mark:Succeeded | [View](https://review.docs.microsoft.com/en-us/IIS/configuration/system.webserver/security/ipsecurity/index?branch=pr-en-us-541) |

<a id=""3792e606-6dd1fc5d""></a>
### [iis/configuration/system.webServer/security/ipSecurity/add.md](https://github.com/phbits/iis-docs/blob/master/iis/configuration/system.webServer/security/ipSecurity/add.md)
 - **Line 4, Column 14**: **[Suggestion-duplicate-descriptions]** `````Attribute 'description' with value 'Overview The &lt;add&gt; element of the &lt;ipSecurity&gt; collection defines a unique IP security restriction. Each restriction can be based on the IP versi...' is duplicated in 'configuration/system.ftpServer/security/ipSecurity/add.md(4,14)', 'configuration/system.webServer/security/ipSecurity/add.md(4,14)'.`````
 - **Line 40, Column 6**: **[Suggestion-[alt-text-missing](https://review.docs.microsoft.com/help/contribute/validation-ref/alt-text-bad-value?branch=main)]** `````Missing alternate text for image 'add/_static/image2.png'. Alt text is required for accessibility.`````
 - **Line 50, Column 6**: **[Suggestion-[alt-text-missing](https://review.docs.microsoft.com/help/contribute/validation-ref/alt-text-bad-value?branch=main)]** `````Missing alternate text for image 'add/_static/image4.png'. Alt text is required for accessibility.`````
 - **Line 61, Column 6**: **[Suggestion-[alt-text-missing](https://review.docs.microsoft.com/help/contribute/validation-ref/alt-text-bad-value?branch=main)]** `````Missing alternate text for image 'add/_static/image6.png'. Alt text is required for accessibility.`````
 - **Line 72, Column 6**: **[Suggestion-[alt-text-missing](https://review.docs.microsoft.com/help/contribute/validation-ref/alt-text-bad-value?branch=main)]** `````Missing alternate text for image 'add/_static/image8.png'. Alt text is required for accessibility.`````
 - **Line 97, Column 6**: **[Suggestion-[alt-text-missing](https://review.docs.microsoft.com/help/contribute/validation-ref/alt-text-bad-value?branch=main)]** `````Missing alternate text for image 'add/_static/image10.png'. Alt text is required for accessibility.`````
 - **Line 99, Column 6**: **[Suggestion-[alt-text-missing](https://review.docs.microsoft.com/help/contribute/validation-ref/alt-text-bad-value?branch=main)]** `````Missing alternate text for image 'add/_static/image12.png'. Alt text is required for accessibility.`````
 - **Line 101, Column 6**: **[Suggestion-[alt-text-missing](https://review.docs.microsoft.com/help/contribute/validation-ref/alt-text-bad-value?branch=main)]** `````Missing alternate text for image 'add/_static/image14.png'. Alt text is required for accessibility.`````
 - **Line 125, Column 6**: **[Suggestion-[alt-text-missing](https://review.docs.microsoft.com/help/contribute/validation-ref/alt-text-bad-value?branch=main)]** `````Missing alternate text for image 'add/_static/image16.png'. Alt text is required for accessibility.`````
 - **Line 127, Column 6**: **[Suggestion-[alt-text-missing](https://review.docs.microsoft.com/help/contribute/validation-ref/alt-text-bad-value?branch=main)]** `````Missing alternate text for image 'add/_static/image18.png'. Alt text is required for accessibility.`````
 - **Line 129, Column 6**: **[Suggestion-[alt-text-missing](https://review.docs.microsoft.com/help/contribute/validation-ref/alt-text-bad-value?branch=main)]** `````Missing alternate text for image 'add/_static/image20.png'. Alt text is required for accessibility.`````

<a id=""571cdea5-6dd1fc5d""></a>
### [iis/configuration/system.webServer/security/ipSecurity/index.md](https://github.com/phbits/iis-docs/blob/master/iis/configuration/system.webServer/security/ipSecurity/index.md)
 - **Line 40, Column 6**: **[Suggestion-[alt-text-missing](https://review.docs.microsoft.com/help/contribute/validation-ref/alt-text-bad-value?branch=main)]** `````Missing alternate text for image 'index/_static/image2.png'. Alt text is required for accessibility.`````
 - **Line 50, Column 6**: **[Suggestion-[alt-text-missing](https://review.docs.microsoft.com/help/contribute/validation-ref/alt-text-bad-value?branch=main)]** `````Missing alternate text for image 'index/_static/image4.png'. Alt text is required for accessibility.`````
 - **Line 61, Column 6**: **[Suggestion-[alt-text-missing](https://review.docs.microsoft.com/help/contribute/validation-ref/alt-text-bad-value?branch=main)]** `````Missing alternate text for image 'index/_static/image6.png'. Alt text is required for accessibility.`````
 - **Line 72, Column 6**: **[Suggestion-[alt-text-missing](https://review.docs.microsoft.com/help/contribute/validation-ref/alt-text-bad-value?branch=main)]** `````Missing alternate text for image 'index/_static/image8.png'. Alt text is required for accessibility.`````
 - **Line 97, Column 6**: **[Suggestion-[alt-text-missing](https://review.docs.microsoft.com/help/contribute/validation-ref/alt-text-bad-value?branch=main)]** `````Missing alternate text for image 'index/_static/image10.png'. Alt text is required for accessibility.`````
 - **Line 99, Column 6**: **[Suggestion-[alt-text-missing](https://review.docs.microsoft.com/help/contribute/validation-ref/alt-text-bad-value?branch=main)]** `````Missing alternate text for image 'index/_static/image12.png'. Alt text is required for accessibility.`````
 - **Line 101, Column 6**: **[Suggestion-[alt-text-missing](https://review.docs.microsoft.com/help/contribute/validation-ref/alt-text-bad-value?branch=main)]** `````Missing alternate text for image 'index/_static/image14.png'. Alt text is required for accessibility.`````
 - **Line 125, Column 6**: **[Suggestion-[alt-text-missing](https://review.docs.microsoft.com/help/contribute/validation-ref/alt-text-bad-value?branch=main)]** `````Missing alternate text for image 'index/_static/image16.png'. Alt text is required for accessibility.`````
 - **Line 127, Column 6**: **[Suggestion-[alt-text-missing](https://review.docs.microsoft.com/help/contribute/validation-ref/alt-text-bad-value?branch=main)]** `````Missing alternate text for image 'index/_static/image18.png'. Alt text is required for accessibility.`````
 - **Line 129, Column 6**: **[Suggestion-[alt-text-missing](https://review.docs.microsoft.com/help/contribute/validation-ref/alt-text-bad-value?branch=main)]** `````Missing alternate text for image 'index/_static/image20.png'. Alt text is required for accessibility.`````

For more details, please refer to the [build report](https://opbuildstorageprod.blob.core.windows.net/report/2021%5C1%5C27%5C90f071cf-c002-b629-5e11-5bc968bb67ca%5CPullRequest%5C202101270107083472-541%5Cworkflow_report.html?sv=2016-05-31&sr=b&sig=8v0czPRtmrSMseNsQX9viBuykt%2FpE8c1KA380JKtZdk%3D&st=2021-01-27T01%3A03%3A37Z&se=2021-02-27T01%3A08%3A37Z&sp=r).

**Note:** Broken links written as relative paths are included in the above build report. For broken links written as absolute paths or external URLs, see the [broken link report](https://ops.microsoft.com/#/repos/90f071cf-c002-b629-5e11-5bc968bb67ca?tabName=brokenlinks).

For any questions, please:<ul><li>Try searching in the <a href=""https://review.docs.microsoft.com/en-us/search/?search=&amp;category=All&amp;scope=help-docs&amp;category=All&amp;branch=master"">Docs contributor and Admin Guide</a></li><li>See the <a href=""https://review.docs.microsoft.com/en-us/help/onboard/faq?branch=master"">frequently asked questions</a></li><li>Post your question in the <a href=""https://teams.microsoft.com/l/channel/19%3a7ecffca1166a4a3986fed528cf0870ee%40thread.skype/General?groupId=de9ddba4-2574-4830-87ed-41668c07a1ca&amp;tenantId=72f98bf-86f1-41af-91ab-2d7cd011db47"">Docs support channel</a></li></ul>
",True,False,1,0.0
ArakiTakaki/PingMonitoringTool/5,2021-01-28T20:44:40Z,False,6013ba24bd35435da0577ec8,Superseded by #7.,True,False,1,0.0
KatharaFramework/Netkit-Lab-Generator/5,2021-01-28T21:00:09Z,False,6013270ebd354344b46e9775,Superseded by #7.,True,False,1,0.0
meerschweinchen-seminar/repo_13_8/44,2021-02-04T05:55:34Z,False,601bccffbd3543739eaba28f,Superseded by #46.,True,False,1,0.0
covesoyars/Stone-Cold-Properties/25,2021-02-08T20:39:15Z,False,6022302cbd35436116d5926d,Superseded by #27.,True,False,1,0.0
mshima/generator-jhipster-customizer/42,2021-02-22T07:27:14Z,False,6034b967bd35434f065a31ac,Superseded by #46.,True,False,1,0.0
yuma84/param-share/75,2021-02-22T20:11:16Z,False,6034a248bd354344b1e9dbab,Superseded by #79.,True,False,1,0.0
codeandcats/classy-commander/292,2021-02-23T10:23:21Z,False,6035cb6abd354301836900a4,"## Pull Request Test Coverage Report for [Build 1137](https://coveralls.io/builds/37365837)

* **0** of **0**   changed or added relevant lines in **0** files are covered.
* No unchanged relevant lines lost coverage.
* Overall coverage remained the same at **100.0%**

---



|  Totals | [![Coverage Status](https://coveralls.io/builds/37365837/badge)](https://coveralls.io/builds/37365837) |
| :-- | --: |
| Change from base [Build 1117](https://coveralls.io/builds/35615982): |  0.0% |
| Covered Lines: | 191 |
| Relevant Lines: | 191 |

---
##### 💛  - [Coveralls](https://coveralls.io)
",True,False,2,8877.6
kamaz/dotenv-aws-mfa/506,2021-02-24T07:02:10Z,False,60363e98bd35430667fa4d09,The following labels could not be found: `dependabot`.,True,False,3,11507.283333333333
kamaz/dotenv-aws-mfa/506,2021-02-24T07:03:39Z,False,60363e98bd35430667fa4d0a,"Dependabot tried to automerge this PR, but received the following error from GitHub:

```
At least 1 approving review is required by reviewers with write access.
```",True,False,3,11507.283333333333
glen0071/championships/221,2021-02-25T07:06:24Z,False,6038bf6bbd354341927128bc,"This pull request is being automatically deployed with Vercel ([learn more](https://vercel.link/github-learn-more)).  
To see the status of your deployment, click below or on the icon next to each commit.

🔍 Inspect: [https://vercel.com/eddieglenn/championships/H2wQ9sZDRaiERpgMBRnnQyJCwvj3](https://vercel.com/eddieglenn/championships/H2wQ9sZDRaiERpgMBRnnQyJCwvj3)  
✅ Preview: [https://championships-git-dependabot-npmandyarngatsby-plugin-of-a562c3.vercel.app](https://championships-git-dependabot-npmandyarngatsby-plugin-of-a562c3.vercel.app)

",True,False,1,0.0
yardenshoham/lang-switch/242,2021-03-01T03:22:32Z,False,603dfdfabd354350d52ec09f,Superseded by #243.,True,False,1,0.0
codeandcats/classy-commander/292,2021-03-01T14:20:57Z,False,603cf97ebd35434560493a1f,Superseded by #296.,True,False,2,8877.6
cBioCenter/bioblocks-portal/41,2021-03-01T22:21:51Z,False,603d6a35bd354360291d6fa1,Superseded by #42.,True,False,2,87629.01666666666
kamaz/dotenv-aws-mfa/506,2021-03-04T06:49:27Z,False,6041ff0ebd354309ea7f0c9d,Superseded by #515.,True,False,3,11507.283333333333
mlc/all-words-app/47,2021-03-05T19:43:04Z,False,60428b04bd3543738945916a,"Looks like @babel/preset-typescript is up-to-date now, so this is no longer needed.",True,False,2,0.0
mlc/all-words-app/47,2021-03-05T19:43:04Z,False,60428b04bd35437389459169,"Looks like @babel/preset-typescript is up-to-date now, so this is no longer needed.",True,False,2,0.0
jmf654321/testhm/4,2021-03-09T21:20:28Z,False,6047e7ddbd35435a2954ab6a,Superseded by #8.,True,False,1,0.0
Darkbladecr/GBM_ML_analysis/2,2021-03-10T16:38:14Z,False,604bb929bd354301c6377069,Superseded by #6.,True,False,2,0.0
Darkbladecr/GBM_ML_analysis/2,2021-03-10T16:38:14Z,False,604bb929bd354301c6377068,Superseded by #6.,True,False,2,0.0
